; ModuleID = '/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.c'
source_filename = "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.clusterNode = type { i64, [40 x i8], i32, i64, [2048 x i8], i32, i32, %struct.clusterNode**, %struct.clusterNode*, i64, i64, i64, i64, i64, i64, i64, [46 x i8], i32, i32, %struct.clusterLink*, %struct.list* }
%struct.clusterLink = type { i64, i32, i8*, i8*, %struct.clusterNode* }
%struct.list = type { %struct.listNode*, %struct.listNode*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i64 }
%struct.listNode = type { %struct.listNode*, %struct.listNode*, i8* }
%struct.redisServer = type { i32, i8*, i8*, i8**, i32, i32, i32, %struct.redisDb*, %struct.dict*, %struct.dict*, %struct.aeEventLoop*, i32, i32, i32, i32, i8*, i8*, i32, i32, [41 x i8], i32, i64, i32, %struct.dict*, %struct.dict*, %struct.list*, [2 x i32], i32, i32, [16 x i8*], i32, i8*, i32, [16 x i32], i32, i32, [16 x i32], i32, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.client*, %struct.rax*, i32, i64, [256 x i8], %struct.dict*, i64, i32, i32, i64, i64, i64, i64, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, i64, i64, i64, i64, double, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, i64, i64, i64, i64, %struct.list*, i64, i64, i64, %struct.malloc_stats, i64, i64, i64, i64, [3 x %struct.anon.3], i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, [3 x %struct.clientBufferLimitsConfig], i32, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, %struct.list*, i8*, i32, i32, i64, i64, i64, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, i32, %struct.saveparam*, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, [2 x i32], %struct.anon.4, %struct.redisOpArray, i8*, i32, i8*, i32, [41 x i8], [41 x i8], i64, i64, i32, i32, i8*, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.client*, %struct.client*, i32, i32, i64, i64, i64, i32, i32, i8*, i64, i32, i32, i32, i64, i32, i32, i32, i8*, [41 x i8], i64, i32, %struct.dict*, %struct.list*, i32, %struct.list*, i32, i32, i64, i32, i32, i32, i32, i64, i32, [6 x i32], %struct.list*, %struct.list*, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i32, i64, %struct.dict*, %struct.list*, i32, i32, i64, i8*, %struct.clusterState*, i32, i32, i32, i32, i8*, i32, i32, i32, %struct.lua_State*, %struct.client*, %struct.client*, %struct.dict*, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, %struct.dict*, i8*, i8*, i32, i32, i32, i64, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_* }
%struct.redisDb = type { %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, i32, i64, %struct.list* }
%struct.aeEventLoop = type { i32, i32, i64, i64, %struct.aeFileEvent*, %struct.aeFiredEvent*, %struct.aeTimeEvent*, i32, i8*, void (%struct.aeEventLoop*)*, void (%struct.aeEventLoop*)* }
%struct.aeFileEvent = type { i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8* }
%struct.aeFiredEvent = type { i32, i32 }
%struct.aeTimeEvent = type { i64, i64, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, void (%struct.aeEventLoop*, i8*)*, i8*, %struct.aeTimeEvent*, %struct.aeTimeEvent* }
%struct.rax = type { %struct.raxNode*, i64, i64 }
%struct.raxNode = type { i32, [0 x i8] }
%struct.redisCommand = type { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }
%struct.redisObject = type { i32, i32, i8* }
%struct.malloc_stats = type { i64, i64, i64, i64, i64 }
%struct.anon.3 = type { i64, i64, [16 x i64], i32 }
%struct.clientBufferLimitsConfig = type { i64, i64, i64 }
%struct.saveparam = type { i64, i32 }
%struct.anon.4 = type { i32, i64, i64 }
%struct.redisOpArray = type { %struct.redisOp*, i32 }
%struct.redisOp = type { %struct.redisObject**, i32, i32, i32, %struct.redisCommand* }
%struct.clusterState = type { %struct.clusterNode*, i64, i32, i32, %struct.dict*, %struct.dict*, [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x i64], %struct.rax*, i64, i32, i32, i32, i64, i32, i64, %struct.clusterNode*, i64, i32, i64, i32, [10 x i64], [10 x i64], i64 }
%struct.lua_State = type opaque
%struct.client = type { i64, i32, %struct.redisDb*, %struct.redisObject*, i8*, i64, i8*, i64, i32, %struct.redisObject**, %struct.redisCommand*, %struct.redisCommand*, i32, i32, i64, %struct.list*, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i8*, i64, i64, i64, i64, i64, [41 x i8], i32, [46 x i8], i32, %struct.multiState, i32, %struct.blockingState, i64, %struct.list*, %struct.dict*, %struct.list*, i8*, %struct.listNode*, i32, [16384 x i8] }
%struct.multiState = type { %struct.multiCmd*, i32, i32, i32, i64 }
%struct.multiCmd = type { %struct.redisObject**, i32, %struct.redisCommand* }
%struct.blockingState = type { i64, %struct.dict*, %struct.redisObject*, i64, %struct.redisObject*, %struct.redisObject*, i64, i64, i32, i32, i64, i8* }
%struct.dict = type { %struct.dictType*, i8*, [2 x %struct.dictht], i64, i64 }
%struct.dictType = type { i64 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.dictht = type { %struct.dictEntry**, i64, i64, i64 }
%struct.dictEntry = type { i8*, %union.anon.2, %struct.dictEntry* }
%union.anon.2 = type { i8* }
%struct.pthread_mutex_t_ = type opaque
%struct.sharedObjectsStruct = type { %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, [10 x %struct.redisObject*], [10000 x %struct.redisObject*], [32 x %struct.redisObject*], [32 x %struct.redisObject*], i8*, i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i64, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64 }
%struct.timespec = type { i64, i64 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i64, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64, %struct._reent*, i32, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, [25 x i8], i32, %struct.__locale_t*, i32, void (%struct._reent*)*, %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint**, i32, i8*, %union.anon.0, %struct._atexit*, %struct._atexit, void (i32)**, %struct._glue, [3 x %struct.__sFILE] }
%struct.__locale_t = type opaque
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { [30 x i8*], [30 x i32] }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct._mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.dictIterator = type { %struct.dict*, i64, i32, i32, %struct.dictEntry*, %struct.dictEntry*, i64 }
%struct.listIter = type { %struct.listNode*, i32 }
%struct.clusterNodeFailReport = type { %struct.clusterNode*, i64 }
%struct.clusterMsg = type { [4 x i8], i32, i16, i16, i16, i16, i64, i64, i64, [40 x i8], [2048 x i8], [40 x i8], [46 x i8], [34 x i8], i16, i16, i8, [3 x i8], %union.clusterMsgData }
%union.clusterMsgData = type { %struct.anon.9 }
%struct.anon.9 = type { %struct.clusterMsgDataUpdate }
%struct.clusterMsgDataUpdate = type { i64, [40 x i8], [2048 x i8] }
%struct.sockaddr_storage = type { i8, i8, [2 x i8], [3 x i32], [3 x i32] }
%struct.clusterMsgDataGossip = type { [40 x i8], i32, i32, [46 x i8], i16, i16, i16, i32 }
%struct.clusterMsgDataPublish = type { i32, i32, [8 x i8] }
%struct._rio = type { i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*)*, i32 (%struct._rio*)*, void (%struct._rio*, i8*, i64)*, i64, i64, i64, %union.anon.11 }
%union.anon.11 = type { %struct.anon.14 }
%struct.anon.14 = type { i32*, i32*, i32, i64, i8* }
%struct.migrateCachedSocket = type { i32, i64, i64 }

@myself = dso_local local_unnamed_addr global %struct.clusterNode* null, align 8, !dbg !0
@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"Loading the cluster node config from %s: %s\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"vars\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"currentEpoch\00", align 1
@server = external dso_local global %struct.redisServer, align 8
@.str.4 = private unnamed_addr constant [14 x i8] c"lastVoteEpoch\00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"Skipping unknown cluster config variable '%s'\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"myself\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"server.cluster->myself == NULL\00", align 1
@.str.8 = private unnamed_addr constant [75 x i8] c"/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.c\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"master\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"slave\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"fail?\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"fail\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"handshake\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"noaddr\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"nofailover\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"noflags\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"Unknown flag in redis cluster config file\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"p != NULL\00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"Node configuration loaded, I'm %.40s\00", align 1
@.str.20 = private unnamed_addr constant [52 x i8] c"Unrecoverable error: corrupted cluster config file.\00", align 1
@.str.21 = private unnamed_addr constant [43 x i8] c"vars currentEpoch %llu lastVoteEpoch %llu\0A\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"Fatal: can't update cluster config file.\00", align 1
@.str.23 = private unnamed_addr constant [45 x i8] c"Can't open %s in order to acquire a lock: %s\00", align 1
@.str.24 = private unnamed_addr constant [173 x i8] c"Sorry, the cluster configuration file %s is already used by a different Redis Cluster node. Please make sure that different nodes use different cluster configuration files.\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"Impossible to lock %s: %s\00", align 1
@clusterNodesDictType = external dso_local global %struct.dictType, align 8
@clusterNodesBlackListDictType = external dso_local global %struct.dictType, align 8
@.str.26 = private unnamed_addr constant [42 x i8] c"No cluster configuration found, I'm %.40s\00", align 1
@.str.27 = private unnamed_addr constant [156 x i8] c"Redis port number too high. Cluster communication port is 10,000 port numbers higher than your Redis port. Your Redis port number must be lower than 55535.\00", align 1
@.str.28 = private unnamed_addr constant [55 x i8] c"Unrecoverable error creating Redis Cluster file event.\00", align 1
@.str.29 = private unnamed_addr constant [44 x i8] c"configEpoch set to 0 via CLUSTER RESET HARD\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"Node hard reset, now I'm %.40s\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"Error accepting cluster node: %s\00", align 1
@.str.32 = private unnamed_addr constant [28 x i8] c"Accepted cluster node %s:%d\00", align 1
@.str.33 = private unnamed_addr constant [54 x i8] c"dictDelete(server.cluster->nodes,nodename) == DICT_OK\00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c"Renaming node %.40s into %.40s\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"retval == DICT_OK\00", align 1
@.str.36 = private unnamed_addr constant [28 x i8] c"New configEpoch set to %llu\00", align 1
@.str.37 = private unnamed_addr constant [72 x i8] c"WARNING: configEpoch collision with node %.40s. configEpoch set to %llu\00", align 1
@.str.38 = private unnamed_addr constant [48 x i8] c"Marking node %.40s as failing (quorum reached).\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"nodeFailed(node)\00", align 1
@.str.40 = private unnamed_addr constant [56 x i8] c"Clear FAIL state for node %.40s: %s is reachable again.\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"replica\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"master without slots\00", align 1
@.str.43 = private unnamed_addr constant [101 x i8] c"Clear FAIL state for node %.40s: is reachable again and nobody is serving its slots after some time.\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"GOSSIP %.40s %s:%d@%d %s\00", align 1
@.str.45 = private unnamed_addr constant [49 x i8] c"Node %.40s reported node %.40s as not reachable.\00", align 1
@.str.46 = private unnamed_addr constant [47 x i8] c"Node %.40s reported node %.40s is back online.\00", align 1
@.str.47 = private unnamed_addr constant [42 x i8] c"Address updated for node %.40s, now %s:%d\00", align 1
@.str.48 = private unnamed_addr constant [40 x i8] c"Discarding UPDATE message about myself.\00", align 1
@.str.49 = private unnamed_addr constant [74 x i8] c"Configuration change detected. Reconfiguring myself as a replica of %.40s\00", align 1
@.str.50 = private unnamed_addr constant [44 x i8] c"--- Processing packet of type %d, %lu bytes\00", align 1
@.str.51 = private unnamed_addr constant [68 x i8] c"Received replication offset for paused master manual failover: %lld\00", align 1
@.str.52 = private unnamed_addr constant [25 x i8] c"Ping packet received: %p\00", align 1
@.str.53 = private unnamed_addr constant [39 x i8] c"IP address for this node updated to %s\00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"%s packet received: %p\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"ping\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"pong\00", align 1
@.str.57 = private unnamed_addr constant [71 x i8] c"Handshake: we already know node %.40s, updating the address if needed.\00", align 1
@.str.58 = private unnamed_addr constant [37 x i8] c"Handshake with node %.40s completed.\00", align 1
@.str.59 = private unnamed_addr constant [87 x i8] c"PONG contains mismatching sender ID. About node %.40s added %d ms ago, having flags %d\00", align 1
@.str.60 = private unnamed_addr constant [41 x i8] zeroinitializer, align 1
@.str.61 = private unnamed_addr constant [78 x i8] c"Node %.40s has old slots configuration, sending an UPDATE message about %.40s\00", align 1
@.str.62 = private unnamed_addr constant [45 x i8] c"FAIL message received from %.40s about %.40s\00", align 1
@.str.63 = private unnamed_addr constant [58 x i8] c"Ignoring FAIL message from unknown node %.40s about %.40s\00", align 1
@.str.64 = private unnamed_addr constant [44 x i8] c"Manual failover requested by replica %.40s.\00", align 1
@.str.65 = private unnamed_addr constant [33 x i8] c"Received unknown packet type: %d\00", align 1
@.str.66 = private unnamed_addr constant [35 x i8] c"I/O error writing to node link: %s\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"short write\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"RCmb\00", align 1
@.str.69 = private unnamed_addr constant [59 x i8] c"Bad message length or signature received from Cluster bus.\00", align 1
@.str.70 = private unnamed_addr constant [37 x i8] c"I/O error reading from node link: %s\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c"connection closed\00", align 1
@.str.72 = private unnamed_addr constant [64 x i8] c"Failover auth denied to %.40s: reqEpoch (%llu) < curEpoch(%llu)\00", align 1
@.str.73 = private unnamed_addr constant [60 x i8] c"Failover auth denied to %.40s: already voted for epoch %llu\00", align 1
@.str.74 = private unnamed_addr constant [51 x i8] c"Failover auth denied to %.40s: it is a master node\00", align 1
@.str.75 = private unnamed_addr constant [55 x i8] c"Failover auth denied to %.40s: I don't know its master\00", align 1
@.str.76 = private unnamed_addr constant [48 x i8] c"Failover auth denied to %.40s: its master is up\00", align 1
@.str.77 = private unnamed_addr constant [85 x i8] c"Failover auth denied to %.40s: can't vote about this master before %lld milliseconds\00", align 1
@.str.78 = private unnamed_addr constant [70 x i8] c"Failover auth denied to %.40s: slot %d epoch (%llu) > reqEpoch (%llu)\00", align 1
@.str.79 = private unnamed_addr constant [46 x i8] c"Failover auth granted to %.40s for epoch %llu\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"nodeIsSlave(myself)\00", align 1
@clusterLogCantFailover.lastlog_time = internal unnamed_addr global i64 0, align 8, !dbg !279
@.str.81 = private unnamed_addr constant [123 x i8] c"Disconnected from master for longer than allowed. Please check the 'cluster-replica-validity-factor' configuration option.\00", align 1
@.str.82 = private unnamed_addr constant [53 x i8] c"Waiting the delay before I can start a new failover.\00", align 1
@.str.83 = private unnamed_addr constant [26 x i8] c"Failover attempt expired.\00", align 1
@.str.84 = private unnamed_addr constant [51 x i8] c"Waiting for votes, but majority still not reached.\00", align 1
@.str.85 = private unnamed_addr constant [21 x i8] c"Unknown reason code.\00", align 1
@.str.86 = private unnamed_addr constant [33 x i8] c"Currently unable to failover: %s\00", align 1
@.str.87 = private unnamed_addr constant [73 x i8] c"Start of election delayed for %lld milliseconds (rank #%d, offset %lld).\00", align 1
@.str.88 = private unnamed_addr constant [63 x i8] c"Replica rank updated to #%d, added %lld milliseconds of delay.\00", align 1
@.str.89 = private unnamed_addr constant [45 x i8] c"Starting a failover election for epoch %llu.\00", align 1
@.str.90 = private unnamed_addr constant [43 x i8] c"Failover election won: I'm the new master.\00", align 1
@.str.91 = private unnamed_addr constant [50 x i8] c"configEpoch set to %llu after successful failover\00", align 1
@.str.92 = private unnamed_addr constant [35 x i8] c"Migrating to orphaned master %.40s\00", align 1
@.str.93 = private unnamed_addr constant [27 x i8] c"Manual failover timed out.\00", align 1
@.str.94 = private unnamed_addr constant [68 x i8] c"All master replication stream processed, manual failover can start.\00", align 1
@clusterCron.iteration = internal unnamed_addr global i64 0, align 8, !dbg !290
@clusterCron.prev_ip = internal unnamed_addr global i8* null, align 8, !dbg !404
@.str.95 = private unnamed_addr constant [48 x i8] c"Unable to connect to Cluster Node [%s]:%d -> %s\00", align 1
@.str.96 = private unnamed_addr constant [36 x i8] c"Connecting with Node %.40s at %s:%d\00", align 1
@.str.97 = private unnamed_addr constant [19 x i8] c"Pinging node %.40s\00", align 1
@.str.98 = private unnamed_addr constant [32 x i8] c"*** NODE %.40s possibly failing\00", align 1
@.str.99 = private unnamed_addr constant [37 x i8] c"clusterNodeClearSlotBit(n,slot) == 1\00", align 1
@clusterUpdateState.among_minority_time = internal unnamed_addr global i64 0, align 8, !dbg !406
@clusterUpdateState.first_call_time = internal unnamed_addr global i64 0, align 8, !dbg !423
@.str.100 = private unnamed_addr constant [26 x i8] c"Cluster state changed: %s\00", align 1
@.str.101 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str.102 = private unnamed_addr constant [66 x i8] c"I have keys for unassigned slot %d. Taking responsibility for it.\00", align 1
@.str.103 = private unnamed_addr constant [98 x i8] c"I have keys for slot %d, but the slot is assigned to another node. Setting it to importing state.\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"n != myself\00", align 1
@.str.105 = private unnamed_addr constant [22 x i8] c"myself->numslots == 0\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"noflags,\00", align 1
@.str.107 = private unnamed_addr constant [16 x i8] c"%.40s %s:%d@%d \00", align 1
@.str.108 = private unnamed_addr constant [8 x i8] c" %.40s \00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c" - \00", align 1
@.str.110 = private unnamed_addr constant [18 x i8] c"%lld %lld %llu %s\00", align 1
@.str.111 = private unnamed_addr constant [10 x i8] c"connected\00", align 1
@.str.112 = private unnamed_addr constant [13 x i8] c"disconnected\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c" %d-%d\00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c" [%d->-%.40s]\00", align 1
@.str.116 = private unnamed_addr constant [14 x i8] c" [%d-<-%.40s]\00", align 1
@.str.117 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"meet\00", align 1
@.str.119 = private unnamed_addr constant [8 x i8] c"publish\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"auth-req\00", align 1
@.str.121 = private unnamed_addr constant [9 x i8] c"auth-ack\00", align 1
@.str.122 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"mfstart\00", align 1
@.str.124 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.125 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.126 = private unnamed_addr constant [29 x i8] c"Invalid or out of range slot\00", align 1
@.str.127 = private unnamed_addr constant [43 x i8] c"This instance has cluster support disabled\00", align 1
@.str.128 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.129 = private unnamed_addr constant [60 x i8] c"ADDSLOTS <slot> [slot ...] -- Assign slots to current node.\00", align 1
@.str.130 = private unnamed_addr constant [47 x i8] c"BUMPEPOCH -- Advance the cluster config epoch.\00", align 1
@.str.131 = private unnamed_addr constant [83 x i8] c"COUNT-failure-reports <node-id> -- Return number of failure reports for <node-id>.\00", align 1
@.str.132 = private unnamed_addr constant [62 x i8] c"COUNTKEYSINSLOT <slot> - Return the number of keys in <slot>.\00", align 1
@.str.133 = private unnamed_addr constant [74 x i8] c"DELSLOTS <slot> [slot ...] -- Delete slots information from current node.\00", align 1
@.str.134 = private unnamed_addr constant [77 x i8] c"FAILOVER [force|takeover] -- Promote current replica node to being a master.\00", align 1
@.str.135 = private unnamed_addr constant [52 x i8] c"FORGET <node-id> -- Remove a node from the cluster.\00", align 1
@.str.136 = private unnamed_addr constant [83 x i8] c"GETKEYSINSLOT <slot> <count> -- Return key names stored by current node in a slot.\00", align 1
@.str.137 = private unnamed_addr constant [57 x i8] c"FLUSHSLOTS -- Delete current node own slots information.\00", align 1
@.str.138 = private unnamed_addr constant [45 x i8] c"INFO - Return onformation about the cluster.\00", align 1
@.str.139 = private unnamed_addr constant [49 x i8] c"KEYSLOT <key> -- Return the hash slot for <key>.\00", align 1
@.str.140 = private unnamed_addr constant [69 x i8] c"MEET <ip> <port> [bus-port] -- Connect nodes into a working cluster.\00", align 1
@.str.141 = private unnamed_addr constant [28 x i8] c"MYID -- Return the node id.\00", align 1
@.str.142 = private unnamed_addr constant [67 x i8] c"NODES -- Return cluster configuration seen by node. Output format:\00", align 1
@.str.143 = private unnamed_addr constant [85 x i8] c"    <id> <ip:port> <flags> <master> <pings> <pongs> <epoch> <link> <slot> ... <slot>\00", align 1
@.str.144 = private unnamed_addr constant [71 x i8] c"REPLICATE <node-id> -- Configure current node as replica to <node-id>.\00", align 1
@.str.145 = private unnamed_addr constant [57 x i8] c"RESET [hard|soft] -- Reset current node (default: soft).\00", align 1
@.str.146 = private unnamed_addr constant [61 x i8] c"SET-config-epoch <epoch> - Set config epoch of current node.\00", align 1
@.str.147 = private unnamed_addr constant [78 x i8] c"SETSLOT <slot> (importing|migrating|stable|node <node-id>) -- Set slot state.\00", align 1
@.str.148 = private unnamed_addr constant [49 x i8] c"REPLICAS <node-id> -- Return <node-id> replicas.\00", align 1
@.str.149 = private unnamed_addr constant [79 x i8] c"SLOTS -- Return information about slots range mappings. Each range is made of:\00", align 1
@.str.150 = private unnamed_addr constant [64 x i8] c"    start, end, master and replicas IP addresses, ports and ids\00", align 1
@clusterCommand.help = private unnamed_addr constant [23 x i8*] [i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.150, i32 0, i32 0), i8* null], align 16
@.str.151 = private unnamed_addr constant [36 x i8] c"Invalid TCP base port specified: %s\00", align 1
@.str.152 = private unnamed_addr constant [35 x i8] c"Invalid TCP bus port specified: %s\00", align 1
@.str.153 = private unnamed_addr constant [38 x i8] c"Invalid node address specified: %s:%s\00", align 1
@shared = external dso_local local_unnamed_addr global %struct.sharedObjectsStruct, align 8
@.str.154 = private unnamed_addr constant [6 x i8] c"nodes\00", align 1
@.str.155 = private unnamed_addr constant [5 x i8] c"myid\00", align 1
@.str.156 = private unnamed_addr constant [6 x i8] c"slots\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"flushslots\00", align 1
@.str.158 = private unnamed_addr constant [48 x i8] c"DB must be empty to perform CLUSTER FLUSHSLOTS.\00", align 1
@.str.159 = private unnamed_addr constant [9 x i8] c"addslots\00", align 1
@.str.160 = private unnamed_addr constant [9 x i8] c"delslots\00", align 1
@.str.161 = private unnamed_addr constant [30 x i8] c"Slot %d is already unassigned\00", align 1
@.str.162 = private unnamed_addr constant [24 x i8] c"Slot %d is already busy\00", align 1
@.str.163 = private unnamed_addr constant [33 x i8] c"Slot %d specified multiple times\00", align 1
@.str.164 = private unnamed_addr constant [15 x i8] c"retval == C_OK\00", align 1
@.str.165 = private unnamed_addr constant [8 x i8] c"setslot\00", align 1
@.str.166 = private unnamed_addr constant [38 x i8] c"Please use SETSLOT only with masters.\00", align 1
@.str.167 = private unnamed_addr constant [10 x i8] c"migrating\00", align 1
@.str.168 = private unnamed_addr constant [34 x i8] c"I'm not the owner of hash slot %u\00", align 1
@.str.169 = private unnamed_addr constant [27 x i8] c"I don't know about node %s\00", align 1
@.str.170 = private unnamed_addr constant [10 x i8] c"importing\00", align 1
@.str.171 = private unnamed_addr constant [38 x i8] c"I'm already the owner of hash slot %u\00", align 1
@.str.172 = private unnamed_addr constant [7 x i8] c"stable\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@.str.174 = private unnamed_addr constant [16 x i8] c"Unknown node %s\00", align 1
@.str.175 = private unnamed_addr constant [89 x i8] c"Can't assign hashslot %d to a different node while I still hold keys for this hash slot.\00", align 1
@.str.176 = private unnamed_addr constant [44 x i8] c"configEpoch updated after importing slot %d\00", align 1
@.str.177 = private unnamed_addr constant [72 x i8] c"Invalid CLUSTER SETSLOT action or number of arguments. Try CLUSTER HELP\00", align 1
@.str.178 = private unnamed_addr constant [10 x i8] c"bumpepoch\00", align 1
@.str.179 = private unnamed_addr constant [11 x i8] c"+%s %llu\0D\0A\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"BUMPED\00", align 1
@.str.181 = private unnamed_addr constant [6 x i8] c"STILL\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.183 = private unnamed_addr constant [9 x i8] c"needhelp\00", align 1
@clusterCommand.statestr = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.183, i32 0, i32 0)], align 16
@.str.184 = private unnamed_addr constant [207 x i8] c"cluster_state:%s\0D\0Acluster_slots_assigned:%d\0D\0Acluster_slots_ok:%d\0D\0Acluster_slots_pfail:%d\0D\0Acluster_slots_fail:%d\0D\0Acluster_known_nodes:%lu\0D\0Acluster_size:%d\0D\0Acluster_current_epoch:%llu\0D\0Acluster_my_epoch:%llu\0D\0A\00", align 1
@.str.185 = private unnamed_addr constant [38 x i8] c"cluster_stats_messages_%s_sent:%lld\0D\0A\00", align 1
@.str.186 = private unnamed_addr constant [35 x i8] c"cluster_stats_messages_sent:%lld\0D\0A\00", align 1
@.str.187 = private unnamed_addr constant [42 x i8] c"cluster_stats_messages_%s_received:%lld\0D\0A\00", align 1
@.str.188 = private unnamed_addr constant [39 x i8] c"cluster_stats_messages_received:%lld\0D\0A\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"$%lu\0D\0A\00", align 1
@.str.190 = private unnamed_addr constant [11 x i8] c"saveconfig\00", align 1
@.str.191 = private unnamed_addr constant [41 x i8] c"error saving the cluster node config: %s\00", align 1
@.str.192 = private unnamed_addr constant [8 x i8] c"keyslot\00", align 1
@.str.193 = private unnamed_addr constant [16 x i8] c"countkeysinslot\00", align 1
@.str.194 = private unnamed_addr constant [13 x i8] c"Invalid slot\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"getkeysinslot\00", align 1
@.str.196 = private unnamed_addr constant [31 x i8] c"Invalid slot or number of keys\00", align 1
@.str.197 = private unnamed_addr constant [7 x i8] c"forget\00", align 1
@.str.198 = private unnamed_addr constant [42 x i8] c"I tried hard but I can't forget myself...\00", align 1
@.str.199 = private unnamed_addr constant [24 x i8] c"Can't forget my master!\00", align 1
@.str.200 = private unnamed_addr constant [10 x i8] c"replicate\00", align 1
@.str.201 = private unnamed_addr constant [23 x i8] c"Can't replicate myself\00", align 1
@.str.202 = private unnamed_addr constant [46 x i8] c"I can only replicate a master, not a replica.\00", align 1
@.str.203 = private unnamed_addr constant [67 x i8] c"To set a master the node must be empty and without assigned slots.\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"slaves\00", align 1
@.str.205 = private unnamed_addr constant [9 x i8] c"replicas\00", align 1
@.str.206 = private unnamed_addr constant [35 x i8] c"The specified node is not a master\00", align 1
@.str.207 = private unnamed_addr constant [22 x i8] c"count-failure-reports\00", align 1
@.str.208 = private unnamed_addr constant [9 x i8] c"failover\00", align 1
@.str.209 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.210 = private unnamed_addr constant [9 x i8] c"takeover\00", align 1
@.str.211 = private unnamed_addr constant [46 x i8] c"You should send CLUSTER FAILOVER to a replica\00", align 1
@.str.212 = private unnamed_addr constant [45 x i8] c"I'm a replica but my master is unknown to me\00", align 1
@.str.213 = private unnamed_addr constant [60 x i8] c"Master is down or failed, please use CLUSTER FAILOVER FORCE\00", align 1
@.str.214 = private unnamed_addr constant [39 x i8] c"Taking over the master (user request).\00", align 1
@.str.215 = private unnamed_addr constant [39 x i8] c"Forced failover user request accepted.\00", align 1
@.str.216 = private unnamed_addr constant [39 x i8] c"Manual failover user request accepted.\00", align 1
@.str.217 = private unnamed_addr constant [17 x i8] c"set-config-epoch\00", align 1
@.str.218 = private unnamed_addr constant [37 x i8] c"Invalid config epoch specified: %lld\00", align 1
@.str.219 = private unnamed_addr constant [84 x i8] c"The user can assign a config epoch only when the node does not know any other node.\00", align 1
@.str.220 = private unnamed_addr constant [38 x i8] c"Node config epoch is already non-zero\00", align 1
@.str.221 = private unnamed_addr constant [53 x i8] c"configEpoch set to %llu via CLUSTER SET-CONFIG-EPOCH\00", align 1
@.str.222 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.223 = private unnamed_addr constant [5 x i8] c"hard\00", align 1
@.str.224 = private unnamed_addr constant [5 x i8] c"soft\00", align 1
@.str.225 = private unnamed_addr constant [64 x i8] c"CLUSTER RESET can't be called with master nodes containing keys\00", align 1
@.str.226 = private unnamed_addr constant [29 x i8] c"rdbSaveObjectType(payload,o)\00", align 1
@.str.227 = private unnamed_addr constant [29 x i8] c"rdbSaveObject(payload,o,key)\00", align 1
@.str.228 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.229 = private unnamed_addr constant [7 x i8] c"absttl\00", align 1
@.str.230 = private unnamed_addr constant [9 x i8] c"idletime\00", align 1
@.str.231 = private unnamed_addr constant [37 x i8] c"Invalid IDLETIME value, must be >= 0\00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"freq\00", align 1
@.str.233 = private unnamed_addr constant [44 x i8] c"Invalid FREQ value, must be >= 0 and <= 255\00", align 1
@.str.234 = private unnamed_addr constant [32 x i8] c"Invalid TTL value, must be >= 0\00", align 1
@.str.235 = private unnamed_addr constant [43 x i8] c"DUMP payload version or checksum are wrong\00", align 1
@.str.236 = private unnamed_addr constant [16 x i8] c"Bad data format\00", align 1
@.str.237 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.238 = private unnamed_addr constant [33 x i8] c"Can't connect to target node: %s\00", align 1
@.str.239 = private unnamed_addr constant [51 x i8] c"-IOERR error or timeout connecting to the client\0D\0A\00", align 1
@.str.240 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.241 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@.str.242 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.243 = private unnamed_addr constant [81 x i8] c"When using MIGRATE KEYS option, the key argument must be set to the empty string\00", align 1
@.str.244 = private unnamed_addr constant [9 x i8] c"+NOKEY\0D\0A\00", align 1
@.str.245 = private unnamed_addr constant [30 x i8] c"rioWriteBulkCount(&cmd,'*',2)\00", align 1
@.str.246 = private unnamed_addr constant [5 x i8] c"AUTH\00", align 1
@.str.247 = private unnamed_addr constant [34 x i8] c"rioWriteBulkString(&cmd,\22AUTH\22,4)\00", align 1
@.str.248 = private unnamed_addr constant [52 x i8] c"rioWriteBulkString(&cmd,password, sdslen(password))\00", align 1
@.str.249 = private unnamed_addr constant [7 x i8] c"SELECT\00", align 1
@.str.250 = private unnamed_addr constant [36 x i8] c"rioWriteBulkString(&cmd,\22SELECT\22,6)\00", align 1
@.str.251 = private unnamed_addr constant [32 x i8] c"rioWriteBulkLongLong(&cmd,dbid)\00", align 1
@.str.252 = private unnamed_addr constant [44 x i8] c"rioWriteBulkCount(&cmd,'*',replace ? 5 : 4)\00", align 1
@.str.253 = private unnamed_addr constant [15 x i8] c"RESTORE-ASKING\00", align 1
@.str.254 = private unnamed_addr constant [45 x i8] c"rioWriteBulkString(&cmd,\22RESTORE-ASKING\22,14)\00", align 1
@.str.255 = private unnamed_addr constant [8 x i8] c"RESTORE\00", align 1
@.str.256 = private unnamed_addr constant [37 x i8] c"rioWriteBulkString(&cmd,\22RESTORE\22,7)\00", align 1
@.str.257 = private unnamed_addr constant [24 x i8] c"sdsEncodedObject(kv[j])\00", align 1
@.str.258 = private unnamed_addr constant [56 x i8] c"rioWriteBulkString(&cmd,kv[j]->ptr, sdslen(kv[j]->ptr))\00", align 1
@.str.259 = private unnamed_addr constant [31 x i8] c"rioWriteBulkLongLong(&cmd,ttl)\00", align 1
@.str.260 = private unnamed_addr constant [78 x i8] c"rioWriteBulkString(&cmd,payload.io.buffer.ptr, sdslen(payload.io.buffer.ptr))\00", align 1
@.str.261 = private unnamed_addr constant [8 x i8] c"REPLACE\00", align 1
@.str.262 = private unnamed_addr constant [37 x i8] c"rioWriteBulkString(&cmd,\22REPLACE\22,7)\00", align 1
@.str.263 = private unnamed_addr constant [39 x i8] c"Target instance replied with error: %s\00", align 1
@.str.264 = private unnamed_addr constant [4 x i8] c"DEL\00", align 1
@.str.265 = private unnamed_addr constant [48 x i8] c"-IOERR error or timeout %s to target instance\0D\0A\00", align 1
@.str.266 = private unnamed_addr constant [8 x i8] c"writing\00", align 1
@.str.267 = private unnamed_addr constant [8 x i8] c"reading\00", align 1
@.str.268 = private unnamed_addr constant [57 x i8] c"-CROSSSLOT Keys in request don't hash to the same slot\0D\0A\00", align 1
@.str.269 = private unnamed_addr constant [59 x i8] c"-TRYAGAIN Multiple keys request during rehashing of slot\0D\0A\00", align 1
@.str.270 = private unnamed_addr constant [35 x i8] c"-CLUSTERDOWN The cluster is down\0D\0A\00", align 1
@.str.271 = private unnamed_addr constant [36 x i8] c"-CLUSTERDOWN Hash slot not served\0D\0A\00", align 1
@.str.272 = private unnamed_addr constant [15 x i8] c"-%s %d %s:%d\0D\0A\00", align 1
@.str.273 = private unnamed_addr constant [4 x i8] c"ASK\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c"MOVED\00", align 1
@.str.275 = private unnamed_addr constant [32 x i8] c"getNodeByQuery() unknown error.\00", align 1
@.str.276 = private unnamed_addr constant [8 x i8] c"myself,\00", align 1
@.str.277 = private unnamed_addr constant [8 x i8] c"master,\00", align 1
@.str.278 = private unnamed_addr constant [7 x i8] c"slave,\00", align 1
@.str.279 = private unnamed_addr constant [7 x i8] c"fail?,\00", align 1
@.str.280 = private unnamed_addr constant [6 x i8] c"fail,\00", align 1
@.str.281 = private unnamed_addr constant [11 x i8] c"handshake,\00", align 1
@.str.282 = private unnamed_addr constant [8 x i8] c"noaddr,\00", align 1
@.str.283 = private unnamed_addr constant [12 x i8] c"nofailover,\00", align 1
@switch.table.clusterLogCantFailover = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.84, i64 0, i64 0)]
@switch.table.clusterCommand.284 = private unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i64 0, i64 0)]

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterLoadConfig(i8*) local_unnamed_addr #0 !dbg !436 {
  %2 = alloca %struct.stat, align 8
  %3 = alloca i32, align 4
  %4 = tail call %struct.__sFILE* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #8, !dbg !699
  %5 = bitcast %struct.stat* %2 to i8*, !dbg !701
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #9, !dbg !701
  %6 = icmp eq %struct.__sFILE* %4, null, !dbg !702
  br i1 %6, label %7, label %15, !dbg !704

; <label>:7:                                      ; preds = %1
  %8 = tail call i32* @__errno() #8, !dbg !705
  %9 = load i32, i32* %8, align 4, !dbg !705, !tbaa !708
  %10 = icmp eq i32 %9, 2, !dbg !712
  br i1 %10, label %480, label %11, !dbg !713

; <label>:11:                                     ; preds = %7
  %12 = tail call i32* @__errno() #8, !dbg !714
  %13 = load i32, i32* %12, align 4, !dbg !714, !tbaa !708
  %14 = tail call i8* @strerror(i32 %13) #8, !dbg !716
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %0, i8* %14) #8, !dbg !717
  tail call void @exit(i32 1) #10, !dbg !718
  unreachable, !dbg !718

; <label>:15:                                     ; preds = %1
  %16 = tail call i32 @fileno(%struct.__sFILE* nonnull %4) #8, !dbg !719
  %17 = call i32 @fstat(i32 %16, %struct.stat* nonnull %2) #8, !dbg !722
  %18 = icmp eq i32 %17, -1, !dbg !723
  br i1 %18, label %25, label %19, !dbg !724

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 7, !dbg !725
  %21 = load i64, i64* %20, align 8, !dbg !725, !tbaa !726
  %22 = icmp eq i64 %21, 0, !dbg !731
  br i1 %22, label %23, label %25, !dbg !732

; <label>:23:                                     ; preds = %19
  %24 = call i32 @fclose(%struct.__sFILE* nonnull %4) #8, !dbg !733
  br label %480, !dbg !735

; <label>:25:                                     ; preds = %15, %19
  %26 = call i8* @zmalloc(i64 2098176) #8, !dbg !737
  %27 = call i8* @fgets(i8* %26, i32 2098176, %struct.__sFILE* nonnull %4) #8, !dbg !739
  %28 = icmp eq i8* %27, null, !dbg !740
  br i1 %28, label %420, label %29, !dbg !741

; <label>:29:                                     ; preds = %25
  %30 = bitcast i32* %3 to i8*
  br label %31, !dbg !741

; <label>:31:                                     ; preds = %29, %417
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #9, !dbg !742
  %32 = load i8, i8* %26, align 1, !dbg !743, !tbaa !745
  switch i8 %32, label %33 [
    i8 10, label %417
    i8 0, label %417
  ], !dbg !746, !llvm.loop !747

; <label>:33:                                     ; preds = %31
  %34 = call i8** @sdssplitargs(i8* nonnull %26, i32* nonnull %3) #8, !dbg !750
  %35 = icmp eq i8** %34, null, !dbg !752
  br i1 %35, label %416, label %36, !dbg !754

; <label>:36:                                     ; preds = %33
  %37 = load i8*, i8** %34, align 8, !dbg !755, !tbaa !757
  %38 = call i32 @strcasecmp(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !759
  %39 = icmp eq i32 %38, 0, !dbg !760
  %40 = load i32, i32* %3, align 4, !dbg !761, !tbaa !708
  br i1 %39, label %41, label %77, !dbg !763

; <label>:41:                                     ; preds = %36
  %42 = and i32 %40, 1, !dbg !764
  %43 = icmp eq i32 %42, 0, !dbg !764
  br i1 %43, label %416, label %44, !dbg !767

; <label>:44:                                     ; preds = %41
  %45 = icmp sgt i32 %40, 1, !dbg !769
  br i1 %45, label %46, label %75, !dbg !772

; <label>:46:                                     ; preds = %44, %70
  %47 = phi i64 [ %71, %70 ], [ 1, %44 ]
  %48 = getelementptr inbounds i8*, i8** %34, i64 %47, !dbg !773
  %49 = load i8*, i8** %48, align 8, !dbg !773, !tbaa !757
  %50 = call i32 @strcasecmp(i8* %49, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #11, !dbg !776
  %51 = icmp eq i32 %50, 0, !dbg !777
  br i1 %51, label %52, label %59, !dbg !778

; <label>:52:                                     ; preds = %46
  %53 = add nuw nsw i64 %47, 1, !dbg !779
  %54 = getelementptr inbounds i8*, i8** %34, i64 %53, !dbg !781
  %55 = load i8*, i8** %54, align 8, !dbg !781, !tbaa !757
  %56 = call i64 @strtoull(i8* %55, i8** null, i32 10) #8, !dbg !782
  %57 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !783, !tbaa !784
  %58 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %57, i64 0, i32 1, !dbg !791
  store i64 %56, i64* %58, align 8, !dbg !792, !tbaa !793
  br label %70, !dbg !795

; <label>:59:                                     ; preds = %46
  %60 = call i32 @strcasecmp(i8* %49, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0)) #11, !dbg !796
  %61 = icmp eq i32 %60, 0, !dbg !798
  br i1 %61, label %62, label %69, !dbg !799

; <label>:62:                                     ; preds = %59
  %63 = add nuw nsw i64 %47, 1, !dbg !800
  %64 = getelementptr inbounds i8*, i8** %34, i64 %63, !dbg !802
  %65 = load i8*, i8** %64, align 8, !dbg !802, !tbaa !757
  %66 = call i64 @strtoull(i8* %65, i8** null, i32 10) #8, !dbg !803
  %67 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !804, !tbaa !784
  %68 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %67, i64 0, i32 21, !dbg !805
  store i64 %66, i64* %68, align 8, !dbg !806, !tbaa !807
  br label %70, !dbg !808

; <label>:69:                                     ; preds = %59
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0), i8* %49) #8, !dbg !809
  br label %70

; <label>:70:                                     ; preds = %52, %69, %62
  %71 = add nuw i64 %47, 2, !dbg !811
  %72 = load i32, i32* %3, align 4, !dbg !812, !tbaa !708
  %73 = trunc i64 %71 to i32, !dbg !769
  %74 = icmp sgt i32 %72, %73, !dbg !769
  br i1 %74, label %46, label %75, !dbg !772, !llvm.loop !813

; <label>:75:                                     ; preds = %70, %44
  %76 = phi i32 [ %40, %44 ], [ %72, %70 ], !dbg !812
  call void @sdsfreesplitres(i8** nonnull %34, i32 %76) #8, !dbg !815
  br label %417, !dbg !816, !llvm.loop !747

; <label>:77:                                     ; preds = %36
  %78 = icmp slt i32 %40, 8, !dbg !817
  br i1 %78, label %416, label %79, !dbg !818

; <label>:79:                                     ; preds = %77
  %80 = call i8* @sdsnewlen(i8* %37, i64 40) #8, !dbg !828
  %81 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !830, !tbaa !784
  %82 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %81, i64 0, i32 4, !dbg !831
  %83 = load %struct.dict*, %struct.dict** %82, align 8, !dbg !831, !tbaa !832
  %84 = call %struct.dictEntry* @dictFind(%struct.dict* %83, i8* %80) #8, !dbg !833
  call void @sdsfree(i8* %80) #8, !dbg !835
  %85 = icmp eq %struct.dictEntry* %84, null, !dbg !836
  br i1 %85, label %91, label %86, !dbg !838

; <label>:86:                                     ; preds = %79
  %87 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %84, i64 0, i32 1, i32 0, !dbg !839
  %88 = bitcast i8** %87 to %struct.clusterNode**, !dbg !839
  %89 = load %struct.clusterNode*, %struct.clusterNode** %88, align 8, !dbg !839, !tbaa !745
  %90 = icmp eq %struct.clusterNode* %89, null, !dbg !841
  br i1 %90, label %91, label %101, !dbg !843

; <label>:91:                                     ; preds = %79, %86
  %92 = load i8*, i8** %34, align 8, !dbg !844, !tbaa !757
  %93 = call %struct.clusterNode* @createClusterNode(i8* %92, i32 0) #12, !dbg !846
  %94 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !855, !tbaa !784
  %95 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %94, i64 0, i32 4, !dbg !856
  %96 = load %struct.dict*, %struct.dict** %95, align 8, !dbg !856, !tbaa !832
  %97 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %93, i64 0, i32 1, i64 0, !dbg !857
  %98 = call i8* @sdsnewlen(i8* nonnull %97, i64 40) #8, !dbg !858
  %99 = bitcast %struct.clusterNode* %93 to i8*, !dbg !859
  %100 = call i32 @dictAdd(%struct.dict* %96, i8* %98, i8* %99) #8, !dbg !860
  br label %101, !dbg !862

; <label>:101:                                    ; preds = %86, %91
  %102 = phi %struct.clusterNode* [ %89, %86 ], [ %93, %91 ], !dbg !863
  %103 = getelementptr inbounds i8*, i8** %34, i64 1, !dbg !864
  %104 = load i8*, i8** %103, align 8, !dbg !864, !tbaa !757
  %105 = call i8* @strrchr(i8* %104, i32 58) #8, !dbg !866
  %106 = icmp eq i8* %105, null, !dbg !868
  br i1 %106, label %416, label %107, !dbg !869

; <label>:107:                                    ; preds = %101
  store i8 0, i8* %105, align 1, !dbg !870, !tbaa !745
  %108 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 16, i64 0, !dbg !871
  %109 = load i8*, i8** %103, align 8, !dbg !872, !tbaa !757
  %110 = call i64 @strlen(i8* %109) #8, !dbg !873
  %111 = add i64 %110, 1, !dbg !874
  %112 = call i8* @memcpy(i8* nonnull %108, i8* %109, i64 %111) #8, !dbg !875
  %113 = getelementptr inbounds i8, i8* %105, i64 1, !dbg !876
  %114 = call i8* @strchr(i8* nonnull %113, i32 64) #8, !dbg !878
  %115 = icmp eq i8* %114, null, !dbg !880
  br i1 %115, label %118, label %116, !dbg !882

; <label>:116:                                    ; preds = %107
  store i8 0, i8* %114, align 1, !dbg !883, !tbaa !745
  %117 = getelementptr inbounds i8, i8* %114, i64 1, !dbg !885
  br label %118, !dbg !886

; <label>:118:                                    ; preds = %107, %116
  %119 = phi i8* [ %117, %116 ], [ null, %107 ], !dbg !887
  %120 = call i32 @atoi(i8* nonnull %113) #8, !dbg !888
  %121 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 17, !dbg !889
  store i32 %120, i32* %121, align 8, !dbg !890, !tbaa !891
  %122 = icmp eq i8* %119, null, !dbg !893
  br i1 %122, label %125, label %123, !dbg !893

; <label>:123:                                    ; preds = %118
  %124 = call i32 @atoi(i8* nonnull %119) #8, !dbg !894
  br label %127, !dbg !893

; <label>:125:                                    ; preds = %118
  %126 = add nsw i32 %120, 10000, !dbg !895
  br label %127, !dbg !893

; <label>:127:                                    ; preds = %125, %123
  %128 = phi i32 [ %124, %123 ], [ %126, %125 ], !dbg !893
  %129 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 18, !dbg !896
  store i32 %128, i32* %129, align 4, !dbg !897, !tbaa !898
  %130 = getelementptr inbounds i8*, i8** %34, i64 2, !dbg !899
  %131 = load i8*, i8** %130, align 8, !dbg !899, !tbaa !757
  %132 = icmp eq i8* %131, null, !dbg !901
  br i1 %132, label %204, label %133, !dbg !901

; <label>:133:                                    ; preds = %127
  %134 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 2
  %135 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 11
  br label %136, !dbg !901

; <label>:136:                                    ; preds = %133, %200
  %137 = phi i8* [ %131, %133 ], [ %202, %200 ]
  %138 = call i8* @strchr(i8* %137, i32 44) #8, !dbg !902
  %139 = icmp ne i8* %138, null, !dbg !904
  br i1 %139, label %140, label %141, !dbg !906

; <label>:140:                                    ; preds = %136
  store i8 0, i8* %138, align 1, !dbg !907, !tbaa !745
  br label %141, !dbg !908

; <label>:141:                                    ; preds = %140, %136
  %142 = call i32 @strcasecmp(i8* %137, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !909
  %143 = icmp eq i32 %142, 0, !dbg !909
  br i1 %143, label %144, label %153, !dbg !911

; <label>:144:                                    ; preds = %141
  %145 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !912, !tbaa !784
  %146 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %145, i64 0, i32 0, !dbg !912
  %147 = load %struct.clusterNode*, %struct.clusterNode** %146, align 8, !dbg !912, !tbaa !914
  %148 = icmp eq %struct.clusterNode* %147, null, !dbg !912
  br i1 %148, label %150, label %149, !dbg !912

; <label>:149:                                    ; preds = %144
  call void @_serverAssert(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 190) #8, !dbg !912
  call void @_exit(i32 1) #10, !dbg !912
  unreachable, !dbg !912

; <label>:150:                                    ; preds = %144
  store %struct.clusterNode* %102, %struct.clusterNode** %146, align 8, !dbg !915, !tbaa !914
  store %struct.clusterNode* %102, %struct.clusterNode** @myself, align 8, !dbg !916, !tbaa !757
  %151 = load i32, i32* %134, align 8, !dbg !917, !tbaa !918
  %152 = or i32 %151, 16, !dbg !917
  store i32 %152, i32* %134, align 8, !dbg !917, !tbaa !918
  br label %200, !dbg !919

; <label>:153:                                    ; preds = %141
  %154 = call i32 @strcasecmp(i8* %137, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #11, !dbg !920
  %155 = icmp eq i32 %154, 0, !dbg !920
  br i1 %155, label %156, label %159, !dbg !922

; <label>:156:                                    ; preds = %153
  %157 = load i32, i32* %134, align 8, !dbg !923, !tbaa !918
  %158 = or i32 %157, 1, !dbg !923
  store i32 %158, i32* %134, align 8, !dbg !923, !tbaa !918
  br label %200, !dbg !925

; <label>:159:                                    ; preds = %153
  %160 = call i32 @strcasecmp(i8* %137, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)) #11, !dbg !926
  %161 = icmp eq i32 %160, 0, !dbg !926
  br i1 %161, label %162, label %165, !dbg !928

; <label>:162:                                    ; preds = %159
  %163 = load i32, i32* %134, align 8, !dbg !929, !tbaa !918
  %164 = or i32 %163, 2, !dbg !929
  store i32 %164, i32* %134, align 8, !dbg !929, !tbaa !918
  br label %200, !dbg !931

; <label>:165:                                    ; preds = %159
  %166 = call i32 @strcasecmp(i8* %137, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #11, !dbg !932
  %167 = icmp eq i32 %166, 0, !dbg !932
  br i1 %167, label %168, label %171, !dbg !934

; <label>:168:                                    ; preds = %165
  %169 = load i32, i32* %134, align 8, !dbg !935, !tbaa !918
  %170 = or i32 %169, 4, !dbg !935
  store i32 %170, i32* %134, align 8, !dbg !935, !tbaa !918
  br label %200, !dbg !937

; <label>:171:                                    ; preds = %165
  %172 = call i32 @strcasecmp(i8* %137, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #11, !dbg !938
  %173 = icmp eq i32 %172, 0, !dbg !938
  br i1 %173, label %174, label %178, !dbg !940

; <label>:174:                                    ; preds = %171
  %175 = load i32, i32* %134, align 8, !dbg !941, !tbaa !918
  %176 = or i32 %175, 8, !dbg !941
  store i32 %176, i32* %134, align 8, !dbg !941, !tbaa !918
  %177 = call i64 @mstime() #8, !dbg !943
  store i64 %177, i64* %135, align 8, !dbg !944, !tbaa !945
  br label %200, !dbg !946

; <label>:178:                                    ; preds = %171
  %179 = call i32 @strcasecmp(i8* %137, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #11, !dbg !947
  %180 = icmp eq i32 %179, 0, !dbg !947
  br i1 %180, label %181, label %184, !dbg !949

; <label>:181:                                    ; preds = %178
  %182 = load i32, i32* %134, align 8, !dbg !950, !tbaa !918
  %183 = or i32 %182, 32, !dbg !950
  store i32 %183, i32* %134, align 8, !dbg !950, !tbaa !918
  br label %200, !dbg !952

; <label>:184:                                    ; preds = %178
  %185 = call i32 @strcasecmp(i8* %137, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !953
  %186 = icmp eq i32 %185, 0, !dbg !953
  br i1 %186, label %187, label %190, !dbg !955

; <label>:187:                                    ; preds = %184
  %188 = load i32, i32* %134, align 8, !dbg !956, !tbaa !918
  %189 = or i32 %188, 64, !dbg !956
  store i32 %189, i32* %134, align 8, !dbg !956, !tbaa !918
  br label %200, !dbg !958

; <label>:190:                                    ; preds = %184
  %191 = call i32 @strcasecmp(i8* %137, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #11, !dbg !959
  %192 = icmp eq i32 %191, 0, !dbg !959
  br i1 %192, label %193, label %196, !dbg !961

; <label>:193:                                    ; preds = %190
  %194 = load i32, i32* %134, align 8, !dbg !962, !tbaa !918
  %195 = or i32 %194, 512, !dbg !962
  store i32 %195, i32* %134, align 8, !dbg !962, !tbaa !918
  br label %200, !dbg !964

; <label>:196:                                    ; preds = %190
  %197 = call i32 @strcasecmp(i8* %137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !965
  %198 = icmp eq i32 %197, 0, !dbg !965
  br i1 %198, label %200, label %199, !dbg !967

; <label>:199:                                    ; preds = %196
  call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0)) #8, !dbg !968
  call void @_exit(i32 1) #10, !dbg !968
  unreachable, !dbg !968

; <label>:200:                                    ; preds = %196, %156, %168, %181, %193, %187, %174, %162, %150
  %201 = getelementptr inbounds i8, i8* %138, i64 1, !dbg !970
  %202 = select i1 %139, i8* %201, i8* %137, !dbg !972
  %203 = icmp eq i8* %138, null, !dbg !901
  br i1 %203, label %204, label %136, !dbg !901, !llvm.loop !973

; <label>:204:                                    ; preds = %200, %127
  %205 = getelementptr inbounds i8*, i8** %34, i64 3, !dbg !975
  %206 = load i8*, i8** %205, align 8, !dbg !975, !tbaa !757
  %207 = load i8, i8* %206, align 1, !dbg !975, !tbaa !745
  %208 = icmp eq i8 %207, 45, !dbg !977
  br i1 %208, label %264, label %209, !dbg !978

; <label>:209:                                    ; preds = %204
  %210 = call i8* @sdsnewlen(i8* %206, i64 40) #8, !dbg !982
  %211 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !984, !tbaa !784
  %212 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %211, i64 0, i32 4, !dbg !985
  %213 = load %struct.dict*, %struct.dict** %212, align 8, !dbg !985, !tbaa !832
  %214 = call %struct.dictEntry* @dictFind(%struct.dict* %213, i8* %210) #8, !dbg !986
  call void @sdsfree(i8* %210) #8, !dbg !988
  %215 = icmp eq %struct.dictEntry* %214, null, !dbg !989
  br i1 %215, label %221, label %216, !dbg !990

; <label>:216:                                    ; preds = %209
  %217 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %214, i64 0, i32 1, i32 0, !dbg !991
  %218 = bitcast i8** %217 to %struct.clusterNode**, !dbg !991
  %219 = load %struct.clusterNode*, %struct.clusterNode** %218, align 8, !dbg !991, !tbaa !745
  %220 = icmp eq %struct.clusterNode* %219, null, !dbg !993
  br i1 %220, label %221, label %231, !dbg !995

; <label>:221:                                    ; preds = %209, %216
  %222 = load i8*, i8** %205, align 8, !dbg !996, !tbaa !757
  %223 = call %struct.clusterNode* @createClusterNode(i8* %222, i32 0) #12, !dbg !998
  %224 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1001, !tbaa !784
  %225 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %224, i64 0, i32 4, !dbg !1002
  %226 = load %struct.dict*, %struct.dict** %225, align 8, !dbg !1002, !tbaa !832
  %227 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %223, i64 0, i32 1, i64 0, !dbg !1003
  %228 = call i8* @sdsnewlen(i8* nonnull %227, i64 40) #8, !dbg !1004
  %229 = bitcast %struct.clusterNode* %223 to i8*, !dbg !1005
  %230 = call i32 @dictAdd(%struct.dict* %226, i8* %228, i8* %229) #8, !dbg !1006
  br label %231, !dbg !1008

; <label>:231:                                    ; preds = %216, %221
  %232 = phi %struct.clusterNode* [ %219, %216 ], [ %223, %221 ], !dbg !1009
  %233 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 8, !dbg !1010
  store %struct.clusterNode* %232, %struct.clusterNode** %233, align 8, !dbg !1011, !tbaa !1012
  %234 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %232, i64 0, i32 6, !dbg !1024
  %235 = load i32, i32* %234, align 4, !dbg !1024, !tbaa !1027
  %236 = icmp sgt i32 %235, 0, !dbg !1028
  %237 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %232, i64 0, i32 7, !dbg !1029
  %238 = load %struct.clusterNode**, %struct.clusterNode*** %237, align 8, !dbg !1029, !tbaa !1030
  br i1 %236, label %239, label %249, !dbg !1031

; <label>:239:                                    ; preds = %231
  %240 = sext i32 %235 to i64
  br label %243, !dbg !1032

; <label>:241:                                    ; preds = %243
  %242 = icmp slt i64 %248, %240, !dbg !1028
  br i1 %242, label %243, label %249, !dbg !1031, !llvm.loop !1034

; <label>:243:                                    ; preds = %241, %239
  %244 = phi i64 [ 0, %239 ], [ %248, %241 ]
  %245 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %238, i64 %244, !dbg !1032
  %246 = load %struct.clusterNode*, %struct.clusterNode** %245, align 8, !dbg !1032, !tbaa !757
  %247 = icmp eq %struct.clusterNode* %246, %102, !dbg !1037
  %248 = add nuw nsw i64 %244, 1, !dbg !1038
  br i1 %247, label %264, label %241, !dbg !1039

; <label>:249:                                    ; preds = %241, %231
  %250 = bitcast %struct.clusterNode** %238 to i8*, !dbg !1040
  %251 = add nsw i32 %235, 1, !dbg !1041
  %252 = sext i32 %251 to i64, !dbg !1042
  %253 = shl nsw i64 %252, 3, !dbg !1043
  %254 = call i8* @zrealloc(i8* %250, i64 %253) #8, !dbg !1044
  %255 = bitcast i8* %254 to %struct.clusterNode**, !dbg !1044
  %256 = bitcast %struct.clusterNode*** %237 to i8**, !dbg !1045
  store i8* %254, i8** %256, align 8, !dbg !1045, !tbaa !1030
  %257 = load i32, i32* %234, align 4, !dbg !1046, !tbaa !1027
  %258 = sext i32 %257 to i64, !dbg !1047
  %259 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %255, i64 %258, !dbg !1047
  store %struct.clusterNode* %102, %struct.clusterNode** %259, align 8, !dbg !1048, !tbaa !757
  %260 = add nsw i32 %257, 1, !dbg !1049
  store i32 %260, i32* %234, align 4, !dbg !1049, !tbaa !1027
  %261 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %232, i64 0, i32 2, !dbg !1050
  %262 = load i32, i32* %261, align 8, !dbg !1051, !tbaa !918
  %263 = or i32 %262, 256, !dbg !1051
  store i32 %263, i32* %261, align 8, !dbg !1051, !tbaa !918
  br label %264, !dbg !1052

; <label>:264:                                    ; preds = %243, %249, %204
  %265 = getelementptr inbounds i8*, i8** %34, i64 4, !dbg !1053
  %266 = load i8*, i8** %265, align 8, !dbg !1053, !tbaa !757
  %267 = call i32 @atoi(i8* %266) #8, !dbg !1055
  %268 = icmp eq i32 %267, 0, !dbg !1055
  br i1 %268, label %272, label %269, !dbg !1056

; <label>:269:                                    ; preds = %264
  %270 = call i64 @mstime() #8, !dbg !1057
  %271 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 9, !dbg !1058
  store i64 %270, i64* %271, align 8, !dbg !1059, !tbaa !1060
  br label %272, !dbg !1061

; <label>:272:                                    ; preds = %264, %269
  %273 = getelementptr inbounds i8*, i8** %34, i64 5, !dbg !1062
  %274 = load i8*, i8** %273, align 8, !dbg !1062, !tbaa !757
  %275 = call i32 @atoi(i8* %274) #8, !dbg !1064
  %276 = icmp eq i32 %275, 0, !dbg !1064
  br i1 %276, label %280, label %277, !dbg !1065

; <label>:277:                                    ; preds = %272
  %278 = call i64 @mstime() #8, !dbg !1066
  %279 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 10, !dbg !1067
  store i64 %278, i64* %279, align 8, !dbg !1068, !tbaa !1069
  br label %280, !dbg !1070

; <label>:280:                                    ; preds = %272, %277
  %281 = getelementptr inbounds i8*, i8** %34, i64 6, !dbg !1071
  %282 = load i8*, i8** %281, align 8, !dbg !1071, !tbaa !757
  %283 = call i64 @strtoull(i8* %282, i8** null, i32 10) #8, !dbg !1072
  %284 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 3, !dbg !1073
  store i64 %283, i64* %284, align 8, !dbg !1074, !tbaa !1075
  %285 = load i32, i32* %3, align 4, !dbg !1076, !tbaa !708
  %286 = icmp sgt i32 %285, 8, !dbg !1077
  br i1 %286, label %287, label %414, !dbg !1078

; <label>:287:                                    ; preds = %280, %409
  %288 = phi i64 [ %410, %409 ], [ 8, %280 ]
  %289 = getelementptr inbounds i8*, i8** %34, i64 %288, !dbg !1079
  %290 = load i8*, i8** %289, align 8, !dbg !1079, !tbaa !757
  %291 = load i8, i8* %290, align 1, !dbg !1079, !tbaa !745
  %292 = icmp eq i8 %291, 91, !dbg !1080
  %293 = call i8* @strchr(i8* %290, i32 45) #8, !dbg !1081
  %294 = icmp eq i8* %293, null, !dbg !1081
  br i1 %292, label %295, label %376, !dbg !1083

; <label>:295:                                    ; preds = %287
  br i1 %294, label %296, label %297, !dbg !1084

; <label>:296:                                    ; preds = %295
  call void @_serverAssert(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 246) #8, !dbg !1084
  call void @_exit(i32 1) #10, !dbg !1084
  unreachable, !dbg !1084

; <label>:297:                                    ; preds = %295
  store i8 0, i8* %293, align 1, !dbg !1085, !tbaa !745
  %298 = getelementptr inbounds i8, i8* %293, i64 1, !dbg !1086
  %299 = load i8, i8* %298, align 1, !dbg !1086, !tbaa !745
  %300 = load i8*, i8** %289, align 8, !dbg !1088, !tbaa !757
  %301 = getelementptr inbounds i8, i8* %300, i64 1, !dbg !1089
  %302 = call i32 @atoi(i8* nonnull %301) #8, !dbg !1090
  %303 = icmp ugt i32 %302, 16383, !dbg !1092
  br i1 %303, label %416, label %304, !dbg !1092

; <label>:304:                                    ; preds = %297
  %305 = getelementptr inbounds i8, i8* %293, i64 3, !dbg !1094
  %306 = call i8* @sdsnewlen(i8* nonnull %305, i64 40) #8, !dbg !1097
  %307 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1099, !tbaa !784
  %308 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %307, i64 0, i32 4, !dbg !1100
  %309 = load %struct.dict*, %struct.dict** %308, align 8, !dbg !1100, !tbaa !832
  %310 = call %struct.dictEntry* @dictFind(%struct.dict* %309, i8* %306) #8, !dbg !1101
  call void @sdsfree(i8* %306) #8, !dbg !1103
  %311 = icmp eq %struct.dictEntry* %310, null, !dbg !1104
  br i1 %311, label %317, label %312, !dbg !1105

; <label>:312:                                    ; preds = %304
  %313 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %310, i64 0, i32 1, i32 0, !dbg !1106
  %314 = bitcast i8** %313 to %struct.clusterNode**, !dbg !1106
  %315 = load %struct.clusterNode*, %struct.clusterNode** %314, align 8, !dbg !1106, !tbaa !745
  %316 = icmp eq %struct.clusterNode* %315, null, !dbg !1108
  br i1 %316, label %317, label %367, !dbg !1110

; <label>:317:                                    ; preds = %304, %312
  %318 = call i8* @zmalloc(i64 2264) #8, !dbg !1122
  %319 = bitcast i8* %318 to %struct.clusterNode*, !dbg !1122
  %320 = getelementptr inbounds i8, i8* %318, i64 8, !dbg !1124
  %321 = call i8* @memcpy(i8* nonnull %320, i8* nonnull %305, i64 40) #8, !dbg !1126
  %322 = call i64 @mstime() #8, !dbg !1127
  %323 = bitcast i8* %318 to i64*, !dbg !1128
  store i64 %322, i64* %323, align 8, !dbg !1129, !tbaa !1130
  %324 = getelementptr inbounds i8, i8* %318, i64 56, !dbg !1131
  %325 = bitcast i8* %324 to i64*, !dbg !1131
  store i64 0, i64* %325, align 8, !dbg !1132, !tbaa !1075
  %326 = getelementptr inbounds i8, i8* %318, i64 48, !dbg !1133
  %327 = bitcast i8* %326 to i32*, !dbg !1133
  store i32 0, i32* %327, align 8, !dbg !1134, !tbaa !918
  %328 = getelementptr inbounds i8, i8* %318, i64 64, !dbg !1135
  %329 = call i8* @memset(i8* nonnull %328, i32 0, i64 2048) #8, !dbg !1136
  %330 = getelementptr inbounds i8, i8* %318, i64 2112, !dbg !1137
  %331 = bitcast i8* %330 to i32*, !dbg !1137
  store i32 0, i32* %331, align 8, !dbg !1138, !tbaa !1139
  %332 = getelementptr inbounds i8, i8* %318, i64 2116, !dbg !1140
  %333 = bitcast i8* %332 to i32*, !dbg !1140
  store i32 0, i32* %333, align 4, !dbg !1141, !tbaa !1027
  %334 = getelementptr inbounds i8, i8* %318, i64 2120, !dbg !1142
  %335 = bitcast i8* %334 to %struct.clusterNode***, !dbg !1142
  store %struct.clusterNode** null, %struct.clusterNode*** %335, align 8, !dbg !1143, !tbaa !1030
  %336 = getelementptr inbounds i8, i8* %318, i64 2128, !dbg !1144
  %337 = bitcast i8* %336 to %struct.clusterNode**, !dbg !1144
  store %struct.clusterNode* null, %struct.clusterNode** %337, align 8, !dbg !1145, !tbaa !1012
  %338 = getelementptr inbounds i8, i8* %318, i64 2136, !dbg !1146
  %339 = bitcast i8* %338 to <2 x i64>*, !dbg !1147
  store <2 x i64> zeroinitializer, <2 x i64>* %339, align 8, !dbg !1147, !tbaa !1148
  %340 = getelementptr inbounds i8, i8* %318, i64 2152, !dbg !1149
  %341 = bitcast i8* %340 to i64*, !dbg !1149
  store i64 0, i64* %341, align 8, !dbg !1150, !tbaa !945
  %342 = getelementptr inbounds i8, i8* %318, i64 2248, !dbg !1151
  %343 = bitcast i8* %342 to %struct.clusterLink**, !dbg !1151
  store %struct.clusterLink* null, %struct.clusterLink** %343, align 8, !dbg !1152, !tbaa !1153
  %344 = getelementptr inbounds i8, i8* %318, i64 2192, !dbg !1154
  %345 = call i8* @memset(i8* nonnull %344, i32 0, i64 46) #8, !dbg !1155
  %346 = getelementptr inbounds i8, i8* %318, i64 2240, !dbg !1156
  %347 = bitcast i8* %346 to i32*, !dbg !1156
  store i32 0, i32* %347, align 8, !dbg !1157, !tbaa !891
  %348 = getelementptr inbounds i8, i8* %318, i64 2244, !dbg !1158
  %349 = bitcast i8* %348 to i32*, !dbg !1158
  store i32 0, i32* %349, align 4, !dbg !1159, !tbaa !898
  %350 = call %struct.list* @listCreate() #8, !dbg !1160
  %351 = getelementptr inbounds i8, i8* %318, i64 2256, !dbg !1161
  %352 = bitcast i8* %351 to %struct.list**, !dbg !1161
  store %struct.list* %350, %struct.list** %352, align 8, !dbg !1162, !tbaa !1163
  %353 = getelementptr inbounds i8, i8* %318, i64 2160, !dbg !1164
  %354 = bitcast i8* %353 to i64*, !dbg !1164
  store i64 0, i64* %354, align 8, !dbg !1165, !tbaa !1166
  %355 = getelementptr inbounds i8, i8* %318, i64 2176, !dbg !1167
  %356 = bitcast i8* %355 to i64*, !dbg !1167
  store i64 0, i64* %356, align 8, !dbg !1168, !tbaa !1169
  %357 = getelementptr inbounds i8, i8* %318, i64 2168, !dbg !1170
  %358 = bitcast i8* %357 to i64*, !dbg !1170
  store i64 0, i64* %358, align 8, !dbg !1171, !tbaa !1172
  %359 = getelementptr inbounds i8, i8* %318, i64 2184, !dbg !1173
  %360 = bitcast i8* %359 to i64*, !dbg !1173
  store i64 0, i64* %360, align 8, !dbg !1174, !tbaa !1175
  %361 = getelementptr inbounds %struct.list, %struct.list* %350, i64 0, i32 3, !dbg !1176
  store void (i8*)* @zfree, void (i8*)** %361, align 8, !dbg !1176, !tbaa !1177
  %362 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1181, !tbaa !784
  %363 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %362, i64 0, i32 4, !dbg !1182
  %364 = load %struct.dict*, %struct.dict** %363, align 8, !dbg !1182, !tbaa !832
  %365 = call i8* @sdsnewlen(i8* nonnull %320, i64 40) #8, !dbg !1183
  %366 = call i32 @dictAdd(%struct.dict* %364, i8* %365, i8* %318) #8, !dbg !1184
  br label %367, !dbg !1186

; <label>:367:                                    ; preds = %312, %317
  %368 = phi %struct.clusterNode* [ %315, %312 ], [ %319, %317 ], !dbg !1187
  %369 = icmp eq i8 %299, 62, !dbg !1188
  %370 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1190, !tbaa !784
  %371 = sext i32 %302 to i64, !dbg !1190
  br i1 %369, label %372, label %374, !dbg !1192

; <label>:372:                                    ; preds = %367
  %373 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %370, i64 0, i32 6, i64 %371, !dbg !1193
  store %struct.clusterNode* %368, %struct.clusterNode** %373, align 8, !dbg !1195, !tbaa !757
  br label %409, !dbg !1196

; <label>:374:                                    ; preds = %367
  %375 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %370, i64 0, i32 7, i64 %371, !dbg !1197
  store %struct.clusterNode* %368, %struct.clusterNode** %375, align 8, !dbg !1198, !tbaa !757
  br label %409

; <label>:376:                                    ; preds = %287
  br i1 %294, label %382, label %377, !dbg !1199

; <label>:377:                                    ; preds = %376
  store i8 0, i8* %293, align 1, !dbg !1200, !tbaa !745
  %378 = load i8*, i8** %289, align 8, !dbg !1202, !tbaa !757
  %379 = call i32 @atoi(i8* %378) #8, !dbg !1203
  %380 = getelementptr inbounds i8, i8* %293, i64 1, !dbg !1205
  %381 = call i32 @atoi(i8* nonnull %380) #8, !dbg !1206
  br label %385, !dbg !1208

; <label>:382:                                    ; preds = %376
  %383 = load i8*, i8** %289, align 8, !dbg !1209, !tbaa !757
  %384 = call i32 @atoi(i8* %383) #8, !dbg !1211
  br label %385

; <label>:385:                                    ; preds = %377, %382
  %386 = phi i32 [ %379, %377 ], [ %384, %382 ], !dbg !1212
  %387 = phi i32 [ %381, %377 ], [ %384, %382 ], !dbg !1212
  %388 = or i32 %387, %386, !dbg !1213
  %389 = icmp ugt i32 %388, 16383, !dbg !1213
  br i1 %389, label %416, label %390, !dbg !1213

; <label>:390:                                    ; preds = %385
  %391 = icmp sgt i32 %386, %387, !dbg !1215
  br i1 %391, label %409, label %392, !dbg !1216

; <label>:392:                                    ; preds = %390
  %393 = sext i32 %386 to i64, !dbg !1217
  %394 = sext i32 %387 to i64, !dbg !1217
  br label %395, !dbg !1217

; <label>:395:                                    ; preds = %392, %407
  %396 = phi i64 [ %393, %392 ], [ %397, %407 ]
  %397 = add nsw i64 %396, 1, !dbg !1217
  %398 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1227, !tbaa !784
  %399 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %398, i64 0, i32 8, i64 %396, !dbg !1229
  %400 = load %struct.clusterNode*, %struct.clusterNode** %399, align 8, !dbg !1229, !tbaa !757
  %401 = icmp eq %struct.clusterNode* %400, null, !dbg !1229
  br i1 %401, label %402, label %407, !dbg !1230

; <label>:402:                                    ; preds = %395
  %403 = trunc i64 %396 to i32, !dbg !1231
  %404 = call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %102, i32 %403) #8, !dbg !1231
  %405 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1232, !tbaa !784
  %406 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %405, i64 0, i32 8, i64 %396, !dbg !1233
  store %struct.clusterNode* %102, %struct.clusterNode** %406, align 8, !dbg !1234, !tbaa !757
  br label %407, !dbg !1235

; <label>:407:                                    ; preds = %395, %402
  %408 = icmp slt i64 %396, %394, !dbg !1215
  br i1 %408, label %395, label %409, !dbg !1216, !llvm.loop !1236

; <label>:409:                                    ; preds = %407, %390, %374, %372
  %410 = add nuw nsw i64 %288, 1, !dbg !1238
  %411 = load i32, i32* %3, align 4, !dbg !1076, !tbaa !708
  %412 = sext i32 %411 to i64, !dbg !1077
  %413 = icmp slt i64 %410, %412, !dbg !1077
  br i1 %413, label %287, label %414, !dbg !1078, !llvm.loop !1239

; <label>:414:                                    ; preds = %409, %280
  %415 = phi i32 [ %285, %280 ], [ %411, %409 ], !dbg !1076
  call void @sdsfreesplitres(i8** nonnull %34, i32 %415) #8, !dbg !1241
  br label %417, !dbg !748

; <label>:416:                                    ; preds = %33, %41, %77, %101, %385, %297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #9, !dbg !748
  br label %478

; <label>:417:                                    ; preds = %414, %31, %31, %75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #9, !dbg !748
  %418 = call i8* @fgets(i8* %26, i32 2098176, %struct.__sFILE* nonnull %4) #8, !dbg !739
  %419 = icmp eq i8* %418, null, !dbg !740
  br i1 %419, label %420, label %31, !dbg !741

; <label>:420:                                    ; preds = %417, %25
  %421 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1242, !tbaa !784
  %422 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %421, i64 0, i32 0, !dbg !1244
  %423 = load %struct.clusterNode*, %struct.clusterNode** %422, align 8, !dbg !1244, !tbaa !914
  %424 = icmp eq %struct.clusterNode* %423, null, !dbg !1245
  br i1 %424, label %478, label %425, !dbg !1246

; <label>:425:                                    ; preds = %420
  call void @zfree(i8* %26) #8, !dbg !1247
  %426 = call i32 @fclose(%struct.__sFILE* nonnull %4) #8, !dbg !1248
  %427 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !1249, !tbaa !757
  %428 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %427, i64 0, i32 1, i64 0, !dbg !1249
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0), i8* nonnull %428) #8, !dbg !1250
  %429 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1263, !tbaa !784
  %430 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %429, i64 0, i32 4, !dbg !1264
  %431 = load %struct.dict*, %struct.dict** %430, align 8, !dbg !1264, !tbaa !832
  %432 = call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %431) #8, !dbg !1265
  %433 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %432) #8, !dbg !1267
  %434 = icmp eq %struct.dictEntry* %433, null, !dbg !1269
  br i1 %434, label %447, label %435, !dbg !1270

; <label>:435:                                    ; preds = %425, %435
  %436 = phi %struct.dictEntry* [ %445, %435 ], [ %433, %425 ]
  %437 = phi i64 [ %444, %435 ], [ 0, %425 ]
  %438 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %436, i64 0, i32 1, i32 0, !dbg !1271
  %439 = bitcast i8** %438 to %struct.clusterNode**, !dbg !1271
  %440 = load %struct.clusterNode*, %struct.clusterNode** %439, align 8, !dbg !1271, !tbaa !745
  %441 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %440, i64 0, i32 3, !dbg !1273
  %442 = load i64, i64* %441, align 8, !dbg !1273, !tbaa !1075
  %443 = icmp ugt i64 %442, %437, !dbg !1275
  %444 = select i1 %443, i64 %442, i64 %437, !dbg !1276
  %445 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %432) #8, !dbg !1267
  %446 = icmp eq %struct.dictEntry* %445, null, !dbg !1269
  br i1 %446, label %447, label %435, !dbg !1270, !llvm.loop !1277

; <label>:447:                                    ; preds = %435, %425
  %448 = phi i64 [ 0, %425 ], [ %444, %435 ], !dbg !1280
  call void @dictReleaseIterator(%struct.dictIterator* %432) #8, !dbg !1281
  %449 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1282, !tbaa !784
  %450 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %449, i64 0, i32 1, !dbg !1284
  %451 = load i64, i64* %450, align 8, !dbg !1284, !tbaa !793
  %452 = icmp ult i64 %451, %448, !dbg !1285
  br i1 %452, label %453, label %480, !dbg !1286

; <label>:453:                                    ; preds = %447
  %454 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %449, i64 0, i32 4, !dbg !1290
  %455 = load %struct.dict*, %struct.dict** %454, align 8, !dbg !1290, !tbaa !832
  %456 = call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %455) #8, !dbg !1291
  %457 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %456) #8, !dbg !1293
  %458 = icmp eq %struct.dictEntry* %457, null, !dbg !1295
  br i1 %458, label %471, label %459, !dbg !1296

; <label>:459:                                    ; preds = %453, %459
  %460 = phi %struct.dictEntry* [ %469, %459 ], [ %457, %453 ]
  %461 = phi i64 [ %468, %459 ], [ 0, %453 ]
  %462 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %460, i64 0, i32 1, i32 0, !dbg !1297
  %463 = bitcast i8** %462 to %struct.clusterNode**, !dbg !1297
  %464 = load %struct.clusterNode*, %struct.clusterNode** %463, align 8, !dbg !1297, !tbaa !745
  %465 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %464, i64 0, i32 3, !dbg !1299
  %466 = load i64, i64* %465, align 8, !dbg !1299, !tbaa !1075
  %467 = icmp ugt i64 %466, %461, !dbg !1300
  %468 = select i1 %467, i64 %466, i64 %461, !dbg !1301
  %469 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %456) #8, !dbg !1293
  %470 = icmp eq %struct.dictEntry* %469, null, !dbg !1295
  br i1 %470, label %471, label %459, !dbg !1296, !llvm.loop !1277

; <label>:471:                                    ; preds = %459, %453
  %472 = phi i64 [ 0, %453 ], [ %468, %459 ], !dbg !1302
  call void @dictReleaseIterator(%struct.dictIterator* %456) #8, !dbg !1303
  %473 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1304, !tbaa !784
  %474 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %473, i64 0, i32 1, !dbg !1305
  %475 = load i64, i64* %474, align 8, !dbg !1305, !tbaa !793
  %476 = icmp ult i64 %472, %475, !dbg !1306
  %477 = select i1 %476, i64 %475, i64 %472, !dbg !1307
  store i64 %477, i64* %474, align 8, !dbg !1308, !tbaa !793
  br label %480, !dbg !1309

; <label>:478:                                    ; preds = %416, %420
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.20, i64 0, i64 0)) #8, !dbg !1310
  call void @zfree(i8* %26) #8, !dbg !1311
  %479 = call i32 @fclose(%struct.__sFILE* nonnull %4) #8, !dbg !1312
  call void @exit(i32 1) #10, !dbg !1314
  unreachable, !dbg !1314

; <label>:480:                                    ; preds = %447, %471, %7, %23
  %481 = phi i32 [ -1, %23 ], [ -1, %7 ], [ 0, %471 ], [ 0, %447 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #9, !dbg !1315
  ret i32 %481, !dbg !1315
}

; Function Attrs: nounwind readnone speculatable

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone
declare dso_local %struct.__sFILE* @fopen(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32* @__errno() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @serverLog(i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @strerror(i32) local_unnamed_addr #3

; Function Attrs: noredzone noreturn
declare dso_local void @exit(i32) local_unnamed_addr #4

; Function Attrs: noredzone
declare dso_local i32 @fstat(i32, %struct.stat*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fileno(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fclose(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zmalloc(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @fgets(i8*, i32, %struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8** @sdssplitargs(i8*, i32*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i64 @strtoull(i8*, i8**, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sdsfreesplitres(i8**, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.clusterNode* @clusterLookupNode(i8*) local_unnamed_addr #0 !dbg !820 {
  %2 = tail call i8* @sdsnewlen(i8* %0, i64 40) #8, !dbg !1317
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1319, !tbaa !784
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !1320
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !1320, !tbaa !832
  %6 = tail call %struct.dictEntry* @dictFind(%struct.dict* %5, i8* %2) #8, !dbg !1321
  tail call void @sdsfree(i8* %2) #8, !dbg !1323
  %7 = icmp eq %struct.dictEntry* %6, null, !dbg !1324
  br i1 %7, label %12, label %8, !dbg !1325

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %6, i64 0, i32 1, i32 0, !dbg !1326
  %10 = bitcast i8** %9 to %struct.clusterNode**, !dbg !1326
  %11 = load %struct.clusterNode*, %struct.clusterNode** %10, align 8, !dbg !1326, !tbaa !745
  br label %12, !dbg !1327

; <label>:12:                                     ; preds = %1, %8
  %13 = phi %struct.clusterNode* [ %11, %8 ], [ null, %1 ], !dbg !1328
  ret %struct.clusterNode* %13, !dbg !1329
}

; Function Attrs: noredzone nounwind
define dso_local %struct.clusterNode* @createClusterNode(i8*, i32) local_unnamed_addr #0 !dbg !1112 {
  %3 = tail call i8* @zmalloc(i64 2264) #8, !dbg !1332
  %4 = bitcast i8* %3 to %struct.clusterNode*, !dbg !1332
  %5 = icmp eq i8* %0, null, !dbg !1334
  %6 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !1335
  br i1 %5, label %9, label %7, !dbg !1336

; <label>:7:                                      ; preds = %2
  %8 = tail call i8* @memcpy(i8* nonnull %6, i8* nonnull %0, i64 40) #8, !dbg !1337
  br label %10, !dbg !1337

; <label>:9:                                      ; preds = %2
  tail call void @getRandomHexChars(i8* nonnull %6, i64 40) #8, !dbg !1338
  br label %10

; <label>:10:                                     ; preds = %9, %7
  %11 = tail call i64 @mstime() #8, !dbg !1339
  %12 = bitcast i8* %3 to i64*, !dbg !1340
  store i64 %11, i64* %12, align 8, !dbg !1341, !tbaa !1130
  %13 = getelementptr inbounds i8, i8* %3, i64 56, !dbg !1342
  %14 = bitcast i8* %13 to i64*, !dbg !1342
  store i64 0, i64* %14, align 8, !dbg !1343, !tbaa !1075
  %15 = getelementptr inbounds i8, i8* %3, i64 48, !dbg !1344
  %16 = bitcast i8* %15 to i32*, !dbg !1344
  store i32 %1, i32* %16, align 8, !dbg !1345, !tbaa !918
  %17 = getelementptr inbounds i8, i8* %3, i64 64, !dbg !1346
  %18 = tail call i8* @memset(i8* nonnull %17, i32 0, i64 2048) #8, !dbg !1347
  %19 = getelementptr inbounds i8, i8* %3, i64 2112, !dbg !1348
  %20 = bitcast i8* %19 to i32*, !dbg !1348
  store i32 0, i32* %20, align 8, !dbg !1349, !tbaa !1139
  %21 = getelementptr inbounds i8, i8* %3, i64 2116, !dbg !1350
  %22 = bitcast i8* %21 to i32*, !dbg !1350
  store i32 0, i32* %22, align 4, !dbg !1351, !tbaa !1027
  %23 = getelementptr inbounds i8, i8* %3, i64 2120, !dbg !1352
  %24 = bitcast i8* %23 to %struct.clusterNode***, !dbg !1352
  store %struct.clusterNode** null, %struct.clusterNode*** %24, align 8, !dbg !1353, !tbaa !1030
  %25 = getelementptr inbounds i8, i8* %3, i64 2128, !dbg !1354
  %26 = bitcast i8* %25 to %struct.clusterNode**, !dbg !1354
  store %struct.clusterNode* null, %struct.clusterNode** %26, align 8, !dbg !1355, !tbaa !1012
  %27 = getelementptr inbounds i8, i8* %3, i64 2136, !dbg !1356
  %28 = bitcast i8* %27 to <2 x i64>*, !dbg !1357
  store <2 x i64> zeroinitializer, <2 x i64>* %28, align 8, !dbg !1357, !tbaa !1148
  %29 = getelementptr inbounds i8, i8* %3, i64 2152, !dbg !1358
  %30 = bitcast i8* %29 to i64*, !dbg !1358
  store i64 0, i64* %30, align 8, !dbg !1359, !tbaa !945
  %31 = getelementptr inbounds i8, i8* %3, i64 2248, !dbg !1360
  %32 = bitcast i8* %31 to %struct.clusterLink**, !dbg !1360
  store %struct.clusterLink* null, %struct.clusterLink** %32, align 8, !dbg !1361, !tbaa !1153
  %33 = getelementptr inbounds i8, i8* %3, i64 2192, !dbg !1362
  %34 = tail call i8* @memset(i8* nonnull %33, i32 0, i64 46) #8, !dbg !1363
  %35 = getelementptr inbounds i8, i8* %3, i64 2240, !dbg !1364
  %36 = bitcast i8* %35 to i32*, !dbg !1364
  store i32 0, i32* %36, align 8, !dbg !1365, !tbaa !891
  %37 = getelementptr inbounds i8, i8* %3, i64 2244, !dbg !1366
  %38 = bitcast i8* %37 to i32*, !dbg !1366
  store i32 0, i32* %38, align 4, !dbg !1367, !tbaa !898
  %39 = tail call %struct.list* @listCreate() #8, !dbg !1368
  %40 = getelementptr inbounds i8, i8* %3, i64 2256, !dbg !1369
  %41 = bitcast i8* %40 to %struct.list**, !dbg !1369
  store %struct.list* %39, %struct.list** %41, align 8, !dbg !1370, !tbaa !1163
  %42 = getelementptr inbounds i8, i8* %3, i64 2160, !dbg !1371
  %43 = bitcast i8* %42 to i64*, !dbg !1371
  store i64 0, i64* %43, align 8, !dbg !1372, !tbaa !1166
  %44 = getelementptr inbounds i8, i8* %3, i64 2176, !dbg !1373
  %45 = bitcast i8* %44 to i64*, !dbg !1373
  store i64 0, i64* %45, align 8, !dbg !1374, !tbaa !1169
  %46 = getelementptr inbounds i8, i8* %3, i64 2168, !dbg !1375
  %47 = bitcast i8* %46 to i64*, !dbg !1375
  store i64 0, i64* %47, align 8, !dbg !1376, !tbaa !1172
  %48 = getelementptr inbounds i8, i8* %3, i64 2184, !dbg !1377
  %49 = bitcast i8* %48 to i64*, !dbg !1377
  store i64 0, i64* %49, align 8, !dbg !1378, !tbaa !1175
  %50 = getelementptr inbounds %struct.list, %struct.list* %39, i64 0, i32 3, !dbg !1379
  store void (i8*)* @zfree, void (i8*)** %50, align 8, !dbg !1379, !tbaa !1177
  ret %struct.clusterNode* %4, !dbg !1380
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterAddNode(%struct.clusterNode*) local_unnamed_addr #0 !dbg !848 {
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1382, !tbaa !784
  %3 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 4, !dbg !1383
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !1383, !tbaa !832
  %5 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !1384
  %6 = tail call i8* @sdsnewlen(i8* nonnull %5, i64 40) #8, !dbg !1385
  %7 = bitcast %struct.clusterNode* %0 to i8*, !dbg !1386
  %8 = tail call i32 @dictAdd(%struct.dict* %4, i8* %6, i8* %7) #8, !dbg !1387
  %9 = icmp ne i32 %8, 0, !dbg !1389
  %10 = sext i1 %9 to i32, !dbg !1390
  ret i32 %10, !dbg !1391
}

; Function Attrs: noredzone
declare dso_local i8* @strrchr(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @atoi(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @_serverAssert(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone noreturn
declare dso_local void @_exit(i32) local_unnamed_addr #4

; Function Attrs: noredzone
declare dso_local i64 @mstime() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @_serverPanic(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeAddSlave(%struct.clusterNode* nocapture, %struct.clusterNode*) local_unnamed_addr #0 !dbg !1014 {
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6, !dbg !1395
  %4 = load i32, i32* %3, align 4, !dbg !1395, !tbaa !1027
  %5 = icmp sgt i32 %4, 0, !dbg !1396
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7, !dbg !1397
  %7 = load %struct.clusterNode**, %struct.clusterNode*** %6, align 8, !dbg !1397, !tbaa !1030
  br i1 %5, label %8, label %18, !dbg !1035

; <label>:8:                                      ; preds = %2
  %9 = sext i32 %4 to i64
  br label %12, !dbg !1398

; <label>:10:                                     ; preds = %12
  %11 = icmp slt i64 %17, %9, !dbg !1396
  br i1 %11, label %12, label %18, !dbg !1035, !llvm.loop !1034

; <label>:12:                                     ; preds = %8, %10
  %13 = phi i64 [ 0, %8 ], [ %17, %10 ]
  %14 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %13, !dbg !1398
  %15 = load %struct.clusterNode*, %struct.clusterNode** %14, align 8, !dbg !1398, !tbaa !757
  %16 = icmp eq %struct.clusterNode* %15, %1, !dbg !1399
  %17 = add nuw nsw i64 %13, 1, !dbg !1400
  br i1 %16, label %33, label %10, !dbg !1401

; <label>:18:                                     ; preds = %10, %2
  %19 = bitcast %struct.clusterNode** %7 to i8*, !dbg !1402
  %20 = add nsw i32 %4, 1, !dbg !1403
  %21 = sext i32 %20 to i64, !dbg !1404
  %22 = shl nsw i64 %21, 3, !dbg !1405
  %23 = tail call i8* @zrealloc(i8* %19, i64 %22) #8, !dbg !1406
  %24 = bitcast i8* %23 to %struct.clusterNode**, !dbg !1406
  %25 = bitcast %struct.clusterNode*** %6 to i8**, !dbg !1407
  store i8* %23, i8** %25, align 8, !dbg !1407, !tbaa !1030
  %26 = load i32, i32* %3, align 4, !dbg !1408, !tbaa !1027
  %27 = sext i32 %26 to i64, !dbg !1409
  %28 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %24, i64 %27, !dbg !1409
  store %struct.clusterNode* %1, %struct.clusterNode** %28, align 8, !dbg !1410, !tbaa !757
  %29 = add nsw i32 %26, 1, !dbg !1411
  store i32 %29, i32* %3, align 4, !dbg !1411, !tbaa !1027
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !1412
  %31 = load i32, i32* %30, align 8, !dbg !1413, !tbaa !918
  %32 = or i32 %31, 256, !dbg !1413
  store i32 %32, i32* %30, align 8, !dbg !1413, !tbaa !918
  br label %33, !dbg !1414

; <label>:33:                                     ; preds = %12, %18
  %34 = phi i32 [ 0, %18 ], [ -1, %12 ], !dbg !1397
  ret i32 %34, !dbg !1415
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterAddSlot(%struct.clusterNode*, i32) local_unnamed_addr #0 !dbg !1219 {
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1418, !tbaa !784
  %4 = sext i32 %1 to i64, !dbg !1419
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 8, i64 %4, !dbg !1419
  %6 = load %struct.clusterNode*, %struct.clusterNode** %5, align 8, !dbg !1419, !tbaa !757
  %7 = icmp eq %struct.clusterNode* %6, null, !dbg !1419
  br i1 %7, label %8, label %12, !dbg !1420

; <label>:8:                                      ; preds = %2
  %9 = tail call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %0, i32 %1) #12, !dbg !1421
  %10 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1422, !tbaa !784
  %11 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %10, i64 0, i32 8, i64 %4, !dbg !1423
  store %struct.clusterNode* %0, %struct.clusterNode** %11, align 8, !dbg !1424, !tbaa !757
  br label %12, !dbg !1425

; <label>:12:                                     ; preds = %2, %8
  %13 = phi i32 [ 0, %8 ], [ -1, %2 ], !dbg !1426
  ret i32 %13, !dbg !1427
}

; Function Attrs: noredzone
declare dso_local void @zfree(i8*) #3

; Function Attrs: noredzone nounwind
define dso_local i64 @clusterGetMaxEpoch() local_unnamed_addr #0 !dbg !1252 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1429, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 4, !dbg !1430
  %3 = load %struct.dict*, %struct.dict** %2, align 8, !dbg !1430, !tbaa !832
  %4 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %3) #8, !dbg !1431
  %5 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #8, !dbg !1433
  %6 = icmp eq %struct.dictEntry* %5, null, !dbg !1435
  br i1 %6, label %19, label %7, !dbg !1278

; <label>:7:                                      ; preds = %0, %7
  %8 = phi %struct.dictEntry* [ %17, %7 ], [ %5, %0 ]
  %9 = phi i64 [ %16, %7 ], [ 0, %0 ]
  %10 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %8, i64 0, i32 1, i32 0, !dbg !1436
  %11 = bitcast i8** %10 to %struct.clusterNode**, !dbg !1436
  %12 = load %struct.clusterNode*, %struct.clusterNode** %11, align 8, !dbg !1436, !tbaa !745
  %13 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %12, i64 0, i32 3, !dbg !1438
  %14 = load i64, i64* %13, align 8, !dbg !1438, !tbaa !1075
  %15 = icmp ugt i64 %14, %9, !dbg !1439
  %16 = select i1 %15, i64 %14, i64 %9, !dbg !1440
  %17 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #8, !dbg !1433
  %18 = icmp eq %struct.dictEntry* %17, null, !dbg !1435
  br i1 %18, label %19, label %7, !dbg !1278, !llvm.loop !1277

; <label>:19:                                     ; preds = %7, %0
  %20 = phi i64 [ 0, %0 ], [ %16, %7 ], !dbg !1441
  tail call void @dictReleaseIterator(%struct.dictIterator* %4) #8, !dbg !1442
  %21 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1443, !tbaa !784
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %21, i64 0, i32 1, !dbg !1444
  %23 = load i64, i64* %22, align 8, !dbg !1444, !tbaa !793
  %24 = icmp ult i64 %20, %23, !dbg !1445
  %25 = select i1 %24, i64 %23, i64 %20, !dbg !1446
  ret i64 %25, !dbg !1447
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterSaveConfig(i32) local_unnamed_addr #0 !dbg !1448 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*, !dbg !1461
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %3) #9, !dbg !1461
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1462, !tbaa !784
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 22, !dbg !1463
  %6 = load i32, i32* %5, align 8, !dbg !1464, !tbaa !1465
  %7 = and i32 %6, -5, !dbg !1464
  store i32 %7, i32* %5, align 8, !dbg !1464, !tbaa !1465
  %8 = tail call i8* @clusterGenNodesDescription(i32 32) #12, !dbg !1466
  %9 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1468, !tbaa !784
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 1, !dbg !1469
  %11 = load i64, i64* %10, align 8, !dbg !1469, !tbaa !793
  %12 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 21, !dbg !1470
  %13 = load i64, i64* %12, align 8, !dbg !1470, !tbaa !807
  %14 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0), i64 %11, i64 %13) #8, !dbg !1471
  %15 = getelementptr inbounds i8, i8* %14, i64 -1, !dbg !1482
  %16 = load i8, i8* %15, align 1, !dbg !1482, !tbaa !745
  %17 = trunc i8 %16 to i3, !dbg !1484
  switch i3 %17, label %39 [
    i3 0, label %18
    i3 1, label %21
    i3 2, label %25
    i3 3, label %30
    i3 -4, label %35
  ], !dbg !1484

; <label>:18:                                     ; preds = %1
  %19 = lshr i8 %16, 3, !dbg !1485
  %20 = zext i8 %19 to i64, !dbg !1485
  br label %39, !dbg !1487

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds i8, i8* %14, i64 -3, !dbg !1488
  %23 = load i8, i8* %22, align 1, !dbg !1489, !tbaa !745
  %24 = zext i8 %23 to i64, !dbg !1488
  br label %39, !dbg !1490

; <label>:25:                                     ; preds = %1
  %26 = getelementptr inbounds i8, i8* %14, i64 -5, !dbg !1491
  %27 = bitcast i8* %26 to i16*, !dbg !1492
  %28 = load i16, i16* %27, align 1, !dbg !1492, !tbaa !1493
  %29 = zext i16 %28 to i64, !dbg !1491
  br label %39, !dbg !1494

; <label>:30:                                     ; preds = %1
  %31 = getelementptr inbounds i8, i8* %14, i64 -9, !dbg !1495
  %32 = bitcast i8* %31 to i32*, !dbg !1496
  %33 = load i32, i32* %32, align 1, !dbg !1496, !tbaa !708
  %34 = zext i32 %33 to i64, !dbg !1495
  br label %39, !dbg !1497

; <label>:35:                                     ; preds = %1
  %36 = getelementptr inbounds i8, i8* %14, i64 -17, !dbg !1498
  %37 = bitcast i8* %36 to i64*, !dbg !1499
  %38 = load i64, i64* %37, align 1, !dbg !1499, !tbaa !1500
  br label %39, !dbg !1501

; <label>:39:                                     ; preds = %1, %18, %21, %25, %30, %35
  %40 = phi i64 [ %38, %35 ], [ %34, %30 ], [ %29, %25 ], [ %24, %21 ], [ %20, %18 ], [ 0, %1 ], !dbg !1502
  %41 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 260), align 8, !dbg !1504, !tbaa !1506
  %42 = tail call i32 (i8*, i32, ...) @open(i8* %41, i32 513, i32 420) #8, !dbg !1507
  %43 = icmp eq i32 %42, -1, !dbg !1509
  br i1 %43, label %155, label %44, !dbg !1510

; <label>:44:                                     ; preds = %39
  %45 = call i32 @fstat(i32 %42, %struct.stat* nonnull %2) #8, !dbg !1512
  %46 = icmp eq i32 %45, -1, !dbg !1514
  br i1 %46, label %58, label %47, !dbg !1515

; <label>:47:                                     ; preds = %44
  %48 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 7, !dbg !1516
  %49 = load i64, i64* %48, align 8, !dbg !1516, !tbaa !726
  %50 = icmp sgt i64 %49, %40, !dbg !1519
  br i1 %50, label %51, label %58, !dbg !1520

; <label>:51:                                     ; preds = %47
  %52 = call i8* @sdsgrowzero(i8* %14, i64 %49) #8, !dbg !1521
  %53 = getelementptr inbounds i8, i8* %52, i64 %40, !dbg !1523
  %54 = load i64, i64* %48, align 8, !dbg !1524, !tbaa !726
  %55 = sub i64 %54, %40, !dbg !1525
  %56 = call i8* @memset(i8* %53, i32 10, i64 %55) #8, !dbg !1526
  %57 = getelementptr inbounds i8, i8* %52, i64 -1, !dbg !1527
  br label %58, !dbg !1530

; <label>:58:                                     ; preds = %44, %47, %51
  %59 = phi i8* [ %15, %44 ], [ %15, %47 ], [ %57, %51 ], !dbg !1527
  %60 = phi i8* [ %14, %44 ], [ %14, %47 ], [ %52, %51 ], !dbg !1531
  %61 = load i8, i8* %59, align 1, !dbg !1527, !tbaa !745
  %62 = trunc i8 %61 to i3, !dbg !1534
  switch i3 %62, label %84 [
    i3 0, label %63
    i3 1, label %66
    i3 2, label %70
    i3 3, label %75
    i3 -4, label %80
  ], !dbg !1534

; <label>:63:                                     ; preds = %58
  %64 = lshr i8 %61, 3, !dbg !1535
  %65 = zext i8 %64 to i64, !dbg !1535
  br label %84, !dbg !1536

; <label>:66:                                     ; preds = %58
  %67 = getelementptr inbounds i8, i8* %60, i64 -3, !dbg !1537
  %68 = load i8, i8* %67, align 1, !dbg !1538, !tbaa !745
  %69 = zext i8 %68 to i64, !dbg !1537
  br label %84, !dbg !1539

; <label>:70:                                     ; preds = %58
  %71 = getelementptr inbounds i8, i8* %60, i64 -5, !dbg !1540
  %72 = bitcast i8* %71 to i16*, !dbg !1541
  %73 = load i16, i16* %72, align 1, !dbg !1541, !tbaa !1493
  %74 = zext i16 %73 to i64, !dbg !1540
  br label %84, !dbg !1542

; <label>:75:                                     ; preds = %58
  %76 = getelementptr inbounds i8, i8* %60, i64 -9, !dbg !1543
  %77 = bitcast i8* %76 to i32*, !dbg !1544
  %78 = load i32, i32* %77, align 1, !dbg !1544, !tbaa !708
  %79 = zext i32 %78 to i64, !dbg !1543
  br label %84, !dbg !1545

; <label>:80:                                     ; preds = %58
  %81 = getelementptr inbounds i8, i8* %60, i64 -17, !dbg !1546
  %82 = bitcast i8* %81 to i64*, !dbg !1547
  %83 = load i64, i64* %82, align 1, !dbg !1547, !tbaa !1500
  br label %84, !dbg !1548

; <label>:84:                                     ; preds = %58, %63, %66, %70, %75, %80
  %85 = phi i64 [ %83, %80 ], [ %79, %75 ], [ %74, %70 ], [ %69, %66 ], [ %65, %63 ], [ 0, %58 ], !dbg !1549
  %86 = call i64 @write(i32 %42, i8* %60, i64 %85) #8, !dbg !1550
  %87 = load i8, i8* %59, align 1, !dbg !1553, !tbaa !745
  %88 = trunc i8 %87 to i3, !dbg !1555
  switch i3 %88, label %110 [
    i3 0, label %89
    i3 1, label %92
    i3 2, label %96
    i3 3, label %101
    i3 -4, label %106
  ], !dbg !1555

; <label>:89:                                     ; preds = %84
  %90 = lshr i8 %87, 3, !dbg !1556
  %91 = zext i8 %90 to i64, !dbg !1556
  br label %110, !dbg !1557

; <label>:92:                                     ; preds = %84
  %93 = getelementptr inbounds i8, i8* %60, i64 -3, !dbg !1558
  %94 = load i8, i8* %93, align 1, !dbg !1559, !tbaa !745
  %95 = zext i8 %94 to i64, !dbg !1558
  br label %110, !dbg !1560

; <label>:96:                                     ; preds = %84
  %97 = getelementptr inbounds i8, i8* %60, i64 -5, !dbg !1561
  %98 = bitcast i8* %97 to i16*, !dbg !1562
  %99 = load i16, i16* %98, align 1, !dbg !1562, !tbaa !1493
  %100 = zext i16 %99 to i64, !dbg !1561
  br label %110, !dbg !1563

; <label>:101:                                    ; preds = %84
  %102 = getelementptr inbounds i8, i8* %60, i64 -9, !dbg !1564
  %103 = bitcast i8* %102 to i32*, !dbg !1565
  %104 = load i32, i32* %103, align 1, !dbg !1565, !tbaa !708
  %105 = zext i32 %104 to i64, !dbg !1564
  br label %110, !dbg !1566

; <label>:106:                                    ; preds = %84
  %107 = getelementptr inbounds i8, i8* %60, i64 -17, !dbg !1567
  %108 = bitcast i8* %107 to i64*, !dbg !1568
  %109 = load i64, i64* %108, align 1, !dbg !1568, !tbaa !1500
  br label %110, !dbg !1569

; <label>:110:                                    ; preds = %84, %89, %92, %96, %101, %106
  %111 = phi i64 [ %109, %106 ], [ %105, %101 ], [ %100, %96 ], [ %95, %92 ], [ %91, %89 ], [ 0, %84 ], !dbg !1570
  %112 = icmp eq i64 %86, %111, !dbg !1571
  br i1 %112, label %113, label %153, !dbg !1572

; <label>:113:                                    ; preds = %110
  %114 = icmp eq i32 %0, 0, !dbg !1573
  br i1 %114, label %122, label %115, !dbg !1575

; <label>:115:                                    ; preds = %113
  %116 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1576, !tbaa !784
  %117 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %116, i64 0, i32 22, !dbg !1578
  %118 = load i32, i32* %117, align 8, !dbg !1579, !tbaa !1465
  %119 = and i32 %118, -9, !dbg !1579
  store i32 %119, i32* %117, align 8, !dbg !1579, !tbaa !1465
  %120 = call i32 @fsync(i32 %42) #8, !dbg !1580
  %121 = load i8, i8* %59, align 1, !dbg !1581, !tbaa !745
  br label %122, !dbg !1584

; <label>:122:                                    ; preds = %113, %115
  %123 = phi i8 [ %87, %113 ], [ %121, %115 ], !dbg !1581
  %124 = trunc i8 %123 to i3, !dbg !1587
  switch i3 %124, label %146 [
    i3 0, label %125
    i3 1, label %128
    i3 2, label %132
    i3 3, label %137
    i3 -4, label %142
  ], !dbg !1587

; <label>:125:                                    ; preds = %122
  %126 = lshr i8 %123, 3, !dbg !1588
  %127 = zext i8 %126 to i64, !dbg !1588
  br label %146, !dbg !1589

; <label>:128:                                    ; preds = %122
  %129 = getelementptr inbounds i8, i8* %60, i64 -3, !dbg !1590
  %130 = load i8, i8* %129, align 1, !dbg !1591, !tbaa !745
  %131 = zext i8 %130 to i64, !dbg !1590
  br label %146, !dbg !1592

; <label>:132:                                    ; preds = %122
  %133 = getelementptr inbounds i8, i8* %60, i64 -5, !dbg !1593
  %134 = bitcast i8* %133 to i16*, !dbg !1594
  %135 = load i16, i16* %134, align 1, !dbg !1594, !tbaa !1493
  %136 = zext i16 %135 to i64, !dbg !1593
  br label %146, !dbg !1595

; <label>:137:                                    ; preds = %122
  %138 = getelementptr inbounds i8, i8* %60, i64 -9, !dbg !1596
  %139 = bitcast i8* %138 to i32*, !dbg !1597
  %140 = load i32, i32* %139, align 1, !dbg !1597, !tbaa !708
  %141 = zext i32 %140 to i64, !dbg !1596
  br label %146, !dbg !1598

; <label>:142:                                    ; preds = %122
  %143 = getelementptr inbounds i8, i8* %60, i64 -17, !dbg !1599
  %144 = bitcast i8* %143 to i64*, !dbg !1600
  %145 = load i64, i64* %144, align 1, !dbg !1600, !tbaa !1500
  br label %146, !dbg !1601

; <label>:146:                                    ; preds = %122, %125, %128, %132, %137, %142
  %147 = phi i64 [ %145, %142 ], [ %141, %137 ], [ %136, %132 ], [ %131, %128 ], [ %127, %125 ], [ 0, %122 ], !dbg !1602
  %148 = icmp eq i64 %40, %147, !dbg !1603
  br i1 %148, label %151, label %149, !dbg !1604

; <label>:149:                                    ; preds = %146
  %150 = call i32 @ftruncate(i32 %42, i64 %40) #8, !dbg !1605
  br label %151, !dbg !1606

; <label>:151:                                    ; preds = %146, %149
  %152 = call i32 @close(i32 %42) #8, !dbg !1607
  call void @sdsfree(i8* nonnull %60) #8, !dbg !1608
  br label %157, !dbg !1609

; <label>:153:                                    ; preds = %110
  %154 = call i32 @close(i32 %42) #8, !dbg !1610
  br label %155, !dbg !1610

; <label>:155:                                    ; preds = %39, %153
  %156 = phi i8* [ %60, %153 ], [ %14, %39 ]
  call void @sdsfree(i8* %156) #8, !dbg !1612
  br label %157, !dbg !1613

; <label>:157:                                    ; preds = %155, %151
  %158 = phi i32 [ -1, %155 ], [ 0, %151 ], !dbg !1531
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %3) #9, !dbg !1614
  ret i32 %158, !dbg !1614
}

; Function Attrs: noredzone nounwind
define dso_local i8* @clusterGenNodesDescription(i32) local_unnamed_addr #0 !dbg !1615 {
  %2 = tail call i8* @sdsempty() #8, !dbg !1627
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1629, !tbaa !784
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !1630
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !1630, !tbaa !832
  %6 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %5) #8, !dbg !1631
  %7 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #8, !dbg !1633
  %8 = icmp eq %struct.dictEntry* %7, null, !dbg !1635
  br i1 %8, label %27, label %9, !dbg !1636

; <label>:9:                                      ; preds = %1, %23
  %10 = phi %struct.dictEntry* [ %25, %23 ], [ %7, %1 ]
  %11 = phi i8* [ %24, %23 ], [ %2, %1 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, i32 0, !dbg !1637
  %13 = bitcast i8** %12 to %struct.clusterNode**, !dbg !1637
  %14 = load %struct.clusterNode*, %struct.clusterNode** %13, align 8, !dbg !1637, !tbaa !745
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 2, !dbg !1639
  %16 = load i32, i32* %15, align 8, !dbg !1639, !tbaa !918
  %17 = and i32 %16, %0, !dbg !1641
  %18 = icmp eq i32 %17, 0, !dbg !1641
  br i1 %18, label %19, label %23, !dbg !1642, !llvm.loop !1643

; <label>:19:                                     ; preds = %9
  %20 = tail call i8* @clusterGenNodeDescription(%struct.clusterNode* %14) #12, !dbg !1645
  %21 = tail call i8* @sdscatsds(i8* %11, i8* %20) #8, !dbg !1647
  tail call void @sdsfree(i8* %20) #8, !dbg !1648
  %22 = tail call i8* @sdscatlen(i8* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.117, i64 0, i64 0), i64 1) #8, !dbg !1649
  br label %23, !dbg !1644

; <label>:23:                                     ; preds = %9, %19
  %24 = phi i8* [ %22, %19 ], [ %11, %9 ], !dbg !1650
  %25 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #8, !dbg !1633
  %26 = icmp eq %struct.dictEntry* %25, null, !dbg !1635
  br i1 %26, label %27, label %9, !dbg !1636

; <label>:27:                                     ; preds = %23, %1
  %28 = phi i8* [ %2, %1 ], [ %24, %23 ], !dbg !1628
  tail call void @dictReleaseIterator(%struct.dictIterator* %6) #8, !dbg !1651
  ret i8* %28, !dbg !1652
}

; Function Attrs: noredzone
declare dso_local i8* @sdscatprintf(i8*, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @open(i8*, i32, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsgrowzero(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @write(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fsync(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @ftruncate(i32, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @close(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sdsfree(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSaveConfigOrDie(i32) local_unnamed_addr #0 !dbg !1653 {
  %2 = tail call i32 @clusterSaveConfig(i32 %0) #12, !dbg !1657
  %3 = icmp eq i32 %2, -1, !dbg !1659
  br i1 %3, label %4, label %5, !dbg !1660

; <label>:4:                                      ; preds = %1
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #8, !dbg !1661
  tail call void @exit(i32 1) #10, !dbg !1663
  unreachable, !dbg !1663

; <label>:5:                                      ; preds = %1
  ret void, !dbg !1664
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterLockConfig(i8*) local_unnamed_addr #0 !dbg !1665 {
  %2 = tail call i32 (i8*, i32, ...) @open(i8* %0, i32 513, i32 420) #8, !dbg !1670
  %3 = icmp eq i32 %2, -1, !dbg !1672
  br i1 %3, label %4, label %8, !dbg !1674

; <label>:4:                                      ; preds = %1
  %5 = tail call i32* @__errno() #8, !dbg !1675
  %6 = load i32, i32* %5, align 4, !dbg !1675, !tbaa !708
  %7 = tail call i8* @strerror(i32 %6) #8, !dbg !1677
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.23, i64 0, i64 0), i8* %0, i8* %7) #8, !dbg !1678
  br label %22, !dbg !1679

; <label>:8:                                      ; preds = %1
  %9 = tail call i32 @flock(i32 %2, i32 6) #8, !dbg !1680
  %10 = icmp eq i32 %9, -1, !dbg !1682
  br i1 %10, label %11, label %22, !dbg !1683

; <label>:11:                                     ; preds = %8
  %12 = tail call i32* @__errno() #8, !dbg !1684
  %13 = load i32, i32* %12, align 4, !dbg !1684, !tbaa !708
  %14 = icmp eq i32 %13, 11, !dbg !1687
  br i1 %14, label %15, label %16, !dbg !1688

; <label>:15:                                     ; preds = %11
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @.str.24, i64 0, i64 0), i8* %0) #8, !dbg !1689
  br label %20, !dbg !1691

; <label>:16:                                     ; preds = %11
  %17 = tail call i32* @__errno() #8, !dbg !1692
  %18 = load i32, i32* %17, align 4, !dbg !1692, !tbaa !708
  %19 = tail call i8* @strerror(i32 %18) #8, !dbg !1694
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i8* %0, i8* %19) #8, !dbg !1695
  br label %20

; <label>:20:                                     ; preds = %16, %15
  %21 = tail call i32 @close(i32 %2) #8, !dbg !1696
  br label %22, !dbg !1697

; <label>:22:                                     ; preds = %8, %20, %4
  %23 = phi i32 [ -1, %4 ], [ -1, %20 ], [ 0, %8 ], !dbg !1698
  ret i32 %23, !dbg !1699
}

; Function Attrs: noredzone
declare dso_local i32 @flock(i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterUpdateMyselfFlags() local_unnamed_addr #0 !dbg !1700 {
  %1 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !1704, !tbaa !757
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 2, !dbg !1705
  %3 = load i32, i32* %2, align 8, !dbg !1705, !tbaa !918
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 265), align 4, !dbg !1707, !tbaa !1708
  %5 = icmp eq i32 %4, 0, !dbg !1709
  %6 = select i1 %5, i32 0, i32 512, !dbg !1709
  %7 = and i32 %3, -513, !dbg !1711
  %8 = or i32 %6, %7, !dbg !1712
  store i32 %8, i32* %2, align 8, !dbg !1712, !tbaa !918
  %9 = icmp eq i32 %8, %3, !dbg !1713
  br i1 %9, label %15, label %10, !dbg !1715

; <label>:10:                                     ; preds = %0
  %11 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1722, !tbaa !784
  %12 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 22, !dbg !1723
  %13 = load i32, i32* %12, align 8, !dbg !1724, !tbaa !1465
  %14 = or i32 %13, 6, !dbg !1724
  store i32 %14, i32* %12, align 8, !dbg !1724, !tbaa !1465
  br label %15, !dbg !1725

; <label>:15:                                     ; preds = %0, %10
  ret void, !dbg !1726
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterDoBeforeSleep(i32) local_unnamed_addr #0 !dbg !1717 {
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1728, !tbaa !784
  %3 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 22, !dbg !1729
  %4 = load i32, i32* %3, align 8, !dbg !1730, !tbaa !1465
  %5 = or i32 %4, %0, !dbg !1730
  store i32 %5, i32* %3, align 8, !dbg !1730, !tbaa !1465
  ret void, !dbg !1731
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterInit() local_unnamed_addr #0 !dbg !1732 {
  %1 = tail call i8* @zmalloc(i64 524592) #8, !dbg !1741
  store i8* %1, i8** bitcast (%struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261) to i8**), align 8, !dbg !1742, !tbaa !784
  %2 = bitcast i8* %1 to %struct.clusterNode**, !dbg !1743
  store %struct.clusterNode* null, %struct.clusterNode** %2, align 8, !dbg !1744, !tbaa !914
  %3 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !1745
  %4 = bitcast i8* %3 to i64*, !dbg !1745
  store i64 0, i64* %4, align 8, !dbg !1746, !tbaa !793
  %5 = getelementptr inbounds i8, i8* %1, i64 16, !dbg !1747
  %6 = bitcast i8* %5 to i32*, !dbg !1747
  store i32 1, i32* %6, align 8, !dbg !1748, !tbaa !1749
  %7 = getelementptr inbounds i8, i8* %1, i64 20, !dbg !1750
  %8 = bitcast i8* %7 to i32*, !dbg !1750
  store i32 1, i32* %8, align 4, !dbg !1751, !tbaa !1752
  %9 = getelementptr inbounds i8, i8* %1, i64 524416, !dbg !1753
  %10 = bitcast i8* %9 to i32*, !dbg !1753
  store i32 0, i32* %10, align 8, !dbg !1754, !tbaa !1465
  %11 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @clusterNodesDictType, i8* null) #8, !dbg !1755
  %12 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1756, !tbaa !784
  %13 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %12, i64 0, i32 4, !dbg !1757
  store %struct.dict* %11, %struct.dict** %13, align 8, !dbg !1758, !tbaa !832
  %14 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @clusterNodesBlackListDictType, i8* null) #8, !dbg !1759
  %15 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1760, !tbaa !784
  %16 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 5, !dbg !1761
  store %struct.dict* %14, %struct.dict** %16, align 8, !dbg !1762, !tbaa !1763
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 11, !dbg !1764
  store i64 0, i64* %17, align 8, !dbg !1765, !tbaa !1766
  %18 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 12, !dbg !1767
  store i32 0, i32* %18, align 8, !dbg !1768, !tbaa !1769
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 14, !dbg !1770
  store i32 0, i32* %19, align 8, !dbg !1771, !tbaa !1772
  %20 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 15, !dbg !1773
  store i64 0, i64* %20, align 8, !dbg !1774, !tbaa !1775
  %21 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 16, !dbg !1776
  store i32 0, i32* %21, align 8, !dbg !1777, !tbaa !1778
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 21, !dbg !1779
  store i64 0, i64* %22, align 8, !dbg !1780, !tbaa !807
  %23 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 0, !dbg !1782
  %24 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 0, !dbg !1785
  %25 = bitcast i64* %23 to <2 x i64>*, !dbg !1786
  store <2 x i64> zeroinitializer, <2 x i64>* %25, align 8, !dbg !1786, !tbaa !1148
  %26 = bitcast i64* %24 to <2 x i64>*, !dbg !1787
  store <2 x i64> zeroinitializer, <2 x i64>* %26, align 8, !dbg !1787, !tbaa !1148
  %27 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 2, !dbg !1782
  %28 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 2, !dbg !1785
  %29 = bitcast i64* %27 to <2 x i64>*, !dbg !1786
  store <2 x i64> zeroinitializer, <2 x i64>* %29, align 8, !dbg !1786, !tbaa !1148
  %30 = bitcast i64* %28 to <2 x i64>*, !dbg !1787
  store <2 x i64> zeroinitializer, <2 x i64>* %30, align 8, !dbg !1787, !tbaa !1148
  %31 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 4, !dbg !1782
  store i64 0, i64* %31, align 8, !dbg !1786, !tbaa !1148
  %32 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 4, !dbg !1785
  %33 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 5, !dbg !1782
  %34 = bitcast i64* %32 to <2 x i64>*, !dbg !1787
  store <2 x i64> zeroinitializer, <2 x i64>* %34, align 8, !dbg !1787, !tbaa !1148
  %35 = bitcast i64* %33 to <2 x i64>*, !dbg !1786
  store <2 x i64> zeroinitializer, <2 x i64>* %35, align 8, !dbg !1786, !tbaa !1148
  %36 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 6, !dbg !1785
  %37 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 7, !dbg !1782
  %38 = bitcast i64* %36 to <2 x i64>*, !dbg !1787
  store <2 x i64> zeroinitializer, <2 x i64>* %38, align 8, !dbg !1787, !tbaa !1148
  %39 = bitcast i64* %37 to <2 x i64>*, !dbg !1786
  store <2 x i64> zeroinitializer, <2 x i64>* %39, align 8, !dbg !1786, !tbaa !1148
  %40 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 8, !dbg !1785
  %41 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 9, !dbg !1782
  store i64 0, i64* %41, align 8, !dbg !1786, !tbaa !1148
  %42 = bitcast i64* %40 to <2 x i64>*, !dbg !1787
  store <2 x i64> zeroinitializer, <2 x i64>* %42, align 8, !dbg !1787, !tbaa !1148
  %43 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 25, !dbg !1788
  store i64 0, i64* %43, align 8, !dbg !1789, !tbaa !1790
  %44 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 8, i64 0, !dbg !1791
  %45 = bitcast %struct.clusterNode** %44 to i8*, !dbg !1791
  %46 = tail call i8* @memset(i8* nonnull %45, i32 0, i64 131072) #8, !dbg !1792
  %47 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1793, !tbaa !784
  %48 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %47, i64 0, i32 6, i64 0, !dbg !1796
  %49 = bitcast %struct.clusterNode** %48 to i8*, !dbg !1796
  %50 = tail call i8* @memset(i8* nonnull %49, i32 0, i64 131072) #8, !dbg !1797
  %51 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1798, !tbaa !784
  %52 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %51, i64 0, i32 7, i64 0, !dbg !1799
  %53 = bitcast %struct.clusterNode** %52 to i8*, !dbg !1799
  %54 = tail call i8* @memset(i8* nonnull %53, i32 0, i64 131072) #8, !dbg !1800
  %55 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 260), align 8, !dbg !1801, !tbaa !1506
  %56 = tail call i32 @clusterLockConfig(i8* %55) #12, !dbg !1803
  %57 = icmp eq i32 %56, -1, !dbg !1804
  br i1 %57, label %58, label %59, !dbg !1805

; <label>:58:                                     ; preds = %0
  tail call void @exit(i32 1) #10, !dbg !1806
  unreachable, !dbg !1806

; <label>:59:                                     ; preds = %0
  %60 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 260), align 8, !dbg !1807, !tbaa !1506
  %61 = tail call i32 @clusterLoadConfig(i8* %60) #12, !dbg !1809
  %62 = icmp eq i32 %61, -1, !dbg !1810
  br i1 %62, label %63, label %118, !dbg !1811

; <label>:63:                                     ; preds = %59
  %64 = tail call i8* @zmalloc(i64 2264) #8, !dbg !1816
  %65 = getelementptr inbounds i8, i8* %64, i64 8, !dbg !1818
  tail call void @getRandomHexChars(i8* nonnull %65, i64 40) #8, !dbg !1819
  %66 = tail call i64 @mstime() #8, !dbg !1820
  %67 = bitcast i8* %64 to i64*, !dbg !1821
  store i64 %66, i64* %67, align 8, !dbg !1822, !tbaa !1130
  %68 = getelementptr inbounds i8, i8* %64, i64 56, !dbg !1823
  %69 = bitcast i8* %68 to i64*, !dbg !1823
  store i64 0, i64* %69, align 8, !dbg !1824, !tbaa !1075
  %70 = getelementptr inbounds i8, i8* %64, i64 48, !dbg !1825
  %71 = bitcast i8* %70 to i32*, !dbg !1825
  store i32 17, i32* %71, align 8, !dbg !1826, !tbaa !918
  %72 = getelementptr inbounds i8, i8* %64, i64 64, !dbg !1827
  %73 = tail call i8* @memset(i8* nonnull %72, i32 0, i64 2048) #8, !dbg !1828
  %74 = getelementptr inbounds i8, i8* %64, i64 2112, !dbg !1829
  %75 = bitcast i8* %74 to i32*, !dbg !1829
  store i32 0, i32* %75, align 8, !dbg !1830, !tbaa !1139
  %76 = getelementptr inbounds i8, i8* %64, i64 2116, !dbg !1831
  %77 = bitcast i8* %76 to i32*, !dbg !1831
  store i32 0, i32* %77, align 4, !dbg !1832, !tbaa !1027
  %78 = getelementptr inbounds i8, i8* %64, i64 2120, !dbg !1833
  %79 = bitcast i8* %78 to %struct.clusterNode***, !dbg !1833
  store %struct.clusterNode** null, %struct.clusterNode*** %79, align 8, !dbg !1834, !tbaa !1030
  %80 = getelementptr inbounds i8, i8* %64, i64 2128, !dbg !1835
  %81 = bitcast i8* %80 to %struct.clusterNode**, !dbg !1835
  store %struct.clusterNode* null, %struct.clusterNode** %81, align 8, !dbg !1836, !tbaa !1012
  %82 = getelementptr inbounds i8, i8* %64, i64 2136, !dbg !1837
  %83 = bitcast i8* %82 to <2 x i64>*, !dbg !1838
  store <2 x i64> zeroinitializer, <2 x i64>* %83, align 8, !dbg !1838, !tbaa !1148
  %84 = getelementptr inbounds i8, i8* %64, i64 2152, !dbg !1839
  %85 = bitcast i8* %84 to i64*, !dbg !1839
  store i64 0, i64* %85, align 8, !dbg !1840, !tbaa !945
  %86 = getelementptr inbounds i8, i8* %64, i64 2248, !dbg !1841
  %87 = bitcast i8* %86 to %struct.clusterLink**, !dbg !1841
  store %struct.clusterLink* null, %struct.clusterLink** %87, align 8, !dbg !1842, !tbaa !1153
  %88 = getelementptr inbounds i8, i8* %64, i64 2192, !dbg !1843
  %89 = tail call i8* @memset(i8* nonnull %88, i32 0, i64 46) #8, !dbg !1844
  %90 = getelementptr inbounds i8, i8* %64, i64 2240, !dbg !1845
  %91 = bitcast i8* %90 to i32*, !dbg !1845
  store i32 0, i32* %91, align 8, !dbg !1846, !tbaa !891
  %92 = getelementptr inbounds i8, i8* %64, i64 2244, !dbg !1847
  %93 = bitcast i8* %92 to i32*, !dbg !1847
  store i32 0, i32* %93, align 4, !dbg !1848, !tbaa !898
  %94 = tail call %struct.list* @listCreate() #8, !dbg !1849
  %95 = getelementptr inbounds i8, i8* %64, i64 2256, !dbg !1850
  %96 = bitcast i8* %95 to %struct.list**, !dbg !1850
  store %struct.list* %94, %struct.list** %96, align 8, !dbg !1851, !tbaa !1163
  %97 = getelementptr inbounds i8, i8* %64, i64 2160, !dbg !1852
  %98 = bitcast i8* %97 to i64*, !dbg !1852
  store i64 0, i64* %98, align 8, !dbg !1853, !tbaa !1166
  %99 = getelementptr inbounds i8, i8* %64, i64 2176, !dbg !1854
  %100 = bitcast i8* %99 to i64*, !dbg !1854
  store i64 0, i64* %100, align 8, !dbg !1855, !tbaa !1169
  %101 = getelementptr inbounds i8, i8* %64, i64 2168, !dbg !1856
  %102 = bitcast i8* %101 to i64*, !dbg !1856
  store i64 0, i64* %102, align 8, !dbg !1857, !tbaa !1172
  %103 = getelementptr inbounds i8, i8* %64, i64 2184, !dbg !1858
  %104 = bitcast i8* %103 to i64*, !dbg !1858
  store i64 0, i64* %104, align 8, !dbg !1859, !tbaa !1175
  %105 = getelementptr inbounds %struct.list, %struct.list* %94, i64 0, i32 3, !dbg !1860
  store void (i8*)* @zfree, void (i8*)** %105, align 8, !dbg !1860, !tbaa !1177
  %106 = load i8**, i8*** bitcast (%struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261) to i8***), align 8, !dbg !1861, !tbaa !784
  store i8* %64, i8** %106, align 8, !dbg !1862, !tbaa !914
  store i8* %64, i8** bitcast (%struct.clusterNode** @myself to i8**), align 8, !dbg !1863, !tbaa !757
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i64 0, i64 0), i8* nonnull %65) #8, !dbg !1864
  %107 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !1865, !tbaa !757
  %108 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1868, !tbaa !784
  %109 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %108, i64 0, i32 4, !dbg !1869
  %110 = load %struct.dict*, %struct.dict** %109, align 8, !dbg !1869, !tbaa !832
  %111 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %107, i64 0, i32 1, i64 0, !dbg !1870
  %112 = tail call i8* @sdsnewlen(i8* nonnull %111, i64 40) #8, !dbg !1871
  %113 = bitcast %struct.clusterNode* %107 to i8*, !dbg !1872
  %114 = tail call i32 @dictAdd(%struct.dict* %110, i8* %112, i8* %113) #8, !dbg !1873
  %115 = tail call i32 @clusterSaveConfig(i32 1) #8, !dbg !1878
  %116 = icmp eq i32 %115, -1, !dbg !1879
  br i1 %116, label %117, label %118, !dbg !1880

; <label>:117:                                    ; preds = %63
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #8, !dbg !1881
  tail call void @exit(i32 1) #10, !dbg !1882
  unreachable, !dbg !1882

; <label>:118:                                    ; preds = %63, %59
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 4, !dbg !1883, !tbaa !1884
  %119 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !1885, !tbaa !1887
  %120 = icmp sgt i32 %119, 55535, !dbg !1888
  br i1 %120, label %121, label %122, !dbg !1889

; <label>:121:                                    ; preds = %118
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.27, i64 0, i64 0)) #8, !dbg !1890
  tail call void @exit(i32 1) #10, !dbg !1892
  unreachable, !dbg !1892

; <label>:122:                                    ; preds = %118
  %123 = add nsw i32 %119, 10000, !dbg !1893
  %124 = tail call i32 @listenToPort(i32 %123, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 36, i64 0), i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37)) #8, !dbg !1894
  %125 = icmp eq i32 %124, -1, !dbg !1895
  br i1 %125, label %129, label %126, !dbg !1896

; <label>:126:                                    ; preds = %122
  %127 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 4, !dbg !1898, !tbaa !1884
  %128 = icmp sgt i32 %127, 0, !dbg !1901
  br i1 %128, label %134, label %143, !dbg !1902

; <label>:129:                                    ; preds = %122
  tail call void @exit(i32 1) #10, !dbg !1903
  unreachable, !dbg !1903

; <label>:130:                                    ; preds = %134
  %131 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 4, !dbg !1898, !tbaa !1884
  %132 = sext i32 %131 to i64, !dbg !1901
  %133 = icmp slt i64 %141, %132, !dbg !1901
  br i1 %133, label %134, label %143, !dbg !1902, !llvm.loop !1905

; <label>:134:                                    ; preds = %126, %130
  %135 = phi i64 [ %141, %130 ], [ 0, %126 ]
  %136 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !1907, !tbaa !1910
  %137 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 36, i64 %135, !dbg !1911
  %138 = load i32, i32* %137, align 4, !dbg !1911, !tbaa !708
  %139 = tail call i32 @aeCreateFileEvent(%struct.aeEventLoop* %136, i32 %138, i32 1, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @clusterAcceptHandler, i8* null) #8, !dbg !1912
  %140 = icmp eq i32 %139, -1, !dbg !1913
  %141 = add nuw nsw i64 %135, 1, !dbg !1914
  br i1 %140, label %142, label %130, !dbg !1915

; <label>:142:                                    ; preds = %134
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 500, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0)) #8, !dbg !1916
  tail call void @_exit(i32 1) #10, !dbg !1916
  unreachable, !dbg !1916

; <label>:143:                                    ; preds = %130, %126
  %144 = tail call %struct.rax* @raxNew() #8, !dbg !1917
  %145 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1918, !tbaa !784
  %146 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %145, i64 0, i32 10, !dbg !1919
  store %struct.rax* %144, %struct.rax** %146, align 8, !dbg !1920, !tbaa !1921
  %147 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %145, i64 0, i32 9, i64 0, !dbg !1922
  %148 = bitcast i64* %147 to i8*, !dbg !1922
  %149 = tail call i8* @memset(i8* nonnull %148, i32 0, i64 131072) #8, !dbg !1923
  %150 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !1924, !tbaa !1887
  %151 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !1925, !tbaa !757
  %152 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %151, i64 0, i32 17, !dbg !1926
  store i32 %150, i32* %152, align 8, !dbg !1927, !tbaa !891
  %153 = add nsw i32 %150, 10000, !dbg !1928
  %154 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %151, i64 0, i32 18, !dbg !1929
  store i32 %153, i32* %154, align 4, !dbg !1930, !tbaa !898
  %155 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 267), align 8, !dbg !1931, !tbaa !1933
  %156 = icmp eq i32 %155, 0, !dbg !1934
  br i1 %156, label %158, label %157, !dbg !1935

; <label>:157:                                    ; preds = %143
  store i32 %155, i32* %152, align 8, !dbg !1936, !tbaa !891
  br label %158, !dbg !1937

; <label>:158:                                    ; preds = %143, %157
  %159 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 268), align 4, !dbg !1938, !tbaa !1940
  %160 = icmp eq i32 %159, 0, !dbg !1941
  br i1 %160, label %162, label %161, !dbg !1942

; <label>:161:                                    ; preds = %158
  store i32 %159, i32* %154, align 4, !dbg !1943, !tbaa !898
  br label %162, !dbg !1944

; <label>:162:                                    ; preds = %161, %158
  %163 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1945, !tbaa !784
  %164 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %163, i64 0, i32 17, !dbg !1946
  store i64 0, i64* %164, align 8, !dbg !1949, !tbaa !1950
  %165 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %163, i64 0, i32 20, !dbg !1951
  store i32 0, i32* %165, align 8, !dbg !1952, !tbaa !1953
  %166 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %163, i64 0, i32 18, !dbg !1954
  store %struct.clusterNode* null, %struct.clusterNode** %166, align 8, !dbg !1955, !tbaa !1956
  %167 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %163, i64 0, i32 19, !dbg !1957
  store i64 0, i64* %167, align 8, !dbg !1958, !tbaa !1959
  %168 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %151, i64 0, i32 2, !dbg !1960
  %169 = load i32, i32* %168, align 8, !dbg !1960, !tbaa !918
  %170 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 265), align 4, !dbg !1963, !tbaa !1708
  %171 = icmp eq i32 %170, 0, !dbg !1964
  %172 = select i1 %171, i32 0, i32 512, !dbg !1964
  %173 = and i32 %169, -513, !dbg !1966
  %174 = or i32 %172, %173, !dbg !1967
  store i32 %174, i32* %168, align 8, !dbg !1967, !tbaa !918
  %175 = icmp eq i32 %174, %169, !dbg !1968
  br i1 %175, label %180, label %176, !dbg !1969

; <label>:176:                                    ; preds = %162
  %177 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %163, i64 0, i32 22, !dbg !1972
  %178 = load i32, i32* %177, align 8, !dbg !1973, !tbaa !1465
  %179 = or i32 %178, 6, !dbg !1973
  store i32 %179, i32* %177, align 8, !dbg !1973, !tbaa !1465
  br label %180, !dbg !1974

; <label>:180:                                    ; preds = %162, %176
  ret void, !dbg !1975
}

; Function Attrs: noredzone
declare dso_local %struct.dict* @dictCreate(%struct.dictType*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterCloseAllSlots() local_unnamed_addr #0 !dbg !1794 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1976, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 6, i64 0, !dbg !1977
  %3 = bitcast %struct.clusterNode** %2 to i8*, !dbg !1977
  %4 = tail call i8* @memset(i8* nonnull %3, i32 0, i64 131072) #8, !dbg !1978
  %5 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1979, !tbaa !784
  %6 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %5, i64 0, i32 7, i64 0, !dbg !1980
  %7 = bitcast %struct.clusterNode** %6 to i8*, !dbg !1980
  %8 = tail call i8* @memset(i8* nonnull %7, i32 0, i64 131072) #8, !dbg !1981
  ret void, !dbg !1982
}

; Function Attrs: noredzone
declare dso_local i32 @listenToPort(i32, i32*, i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @aeCreateFileEvent(%struct.aeEventLoop*, i32, i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterAcceptHandler(%struct.aeEventLoop* nocapture readnone, i32, i8* nocapture readnone, i32) #0 !dbg !1983 {
  %5 = alloca i32, align 4
  %6 = alloca [46 x i8], align 16
  %7 = bitcast i32* %5 to i8*, !dbg !2060
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9, !dbg !2060
  %8 = getelementptr inbounds [46 x i8], [46 x i8]* %6, i64 0, i64 0, !dbg !2062
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %8) #9, !dbg !2062
  %9 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !2064, !tbaa !2066
  %10 = icmp eq i8* %9, null, !dbg !2067
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !2068
  %12 = icmp ne i32 %11, 0, !dbg !2069
  %13 = and i1 %10, %12, !dbg !2070
  br i1 %13, label %44, label %14, !dbg !2070

; <label>:14:                                     ; preds = %4, %23
  %15 = phi i32 [ %42, %23 ], [ 999, %4 ]
  %16 = call i32 @anetTcpAccept(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i32 %1, i8* nonnull %8, i64 46, i32* nonnull %5) #8, !dbg !2072
  %17 = icmp eq i32 %16, -1, !dbg !2075
  br i1 %17, label %18, label %23, !dbg !2077

; <label>:18:                                     ; preds = %14
  %19 = call i32* @__errno() #8, !dbg !2078
  %20 = load i32, i32* %19, align 4, !dbg !2078, !tbaa !708
  %21 = icmp eq i32 %20, 11, !dbg !2081
  br i1 %21, label %44, label %22, !dbg !2082

; <label>:22:                                     ; preds = %18
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0)) #8, !dbg !2083
  br label %44, !dbg !2083

; <label>:23:                                     ; preds = %14
  %24 = call i32 @anetNonBlock(i8* null, i32 %16) #8, !dbg !2084
  %25 = call i32 @anetEnableTcpNoDelay(i8* null, i32 %16) #8, !dbg !2085
  %26 = load i32, i32* %5, align 4, !dbg !2086, !tbaa !708
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i64 0, i64 0), i8* nonnull %8, i32 %26) #8, !dbg !2087
  %27 = call i8* @zmalloc(i64 40) #8, !dbg !2096
  %28 = call i64 @mstime() #8, !dbg !2098
  %29 = bitcast i8* %27 to i64*, !dbg !2099
  store i64 %28, i64* %29, align 8, !dbg !2100, !tbaa !2101
  %30 = call i8* @sdsempty() #8, !dbg !2103
  %31 = getelementptr inbounds i8, i8* %27, i64 16, !dbg !2104
  %32 = bitcast i8* %31 to i8**, !dbg !2104
  store i8* %30, i8** %32, align 8, !dbg !2105, !tbaa !2106
  %33 = call i8* @sdsempty() #8, !dbg !2107
  %34 = getelementptr inbounds i8, i8* %27, i64 24, !dbg !2108
  %35 = bitcast i8* %34 to i8**, !dbg !2108
  store i8* %33, i8** %35, align 8, !dbg !2109, !tbaa !2110
  %36 = getelementptr inbounds i8, i8* %27, i64 32, !dbg !2111
  %37 = bitcast i8* %36 to %struct.clusterNode**, !dbg !2111
  store %struct.clusterNode* null, %struct.clusterNode** %37, align 8, !dbg !2112, !tbaa !2113
  %38 = getelementptr inbounds i8, i8* %27, i64 8, !dbg !2114
  %39 = bitcast i8* %38 to i32*, !dbg !2114
  store i32 %16, i32* %39, align 8, !dbg !2116, !tbaa !2117
  %40 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2118, !tbaa !1910
  %41 = call i32 @aeCreateFileEvent(%struct.aeEventLoop* %40, i32 %16, i32 1, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @clusterReadHandler, i8* %27) #8, !dbg !2119
  %42 = add nsw i32 %15, -1, !dbg !2120
  %43 = icmp eq i32 %15, 0, !dbg !2121
  br i1 %43, label %44, label %14, !dbg !2121, !llvm.loop !2122

; <label>:44:                                     ; preds = %23, %22, %18, %4
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %8) #9, !dbg !2124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9, !dbg !2124
  ret void, !dbg !2124
}

; Function Attrs: noredzone
declare dso_local %struct.rax* @raxNew() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @resetManualFailover() local_unnamed_addr #0 !dbg !1947 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2125, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 17, !dbg !2127
  %3 = load i64, i64* %2, align 8, !dbg !2127, !tbaa !1950
  %4 = icmp eq i64 %3, 0, !dbg !2128
  br i1 %4, label %10, label %5, !dbg !2129

; <label>:5:                                      ; preds = %0
  %6 = tail call i32 @clientsArePaused() #8, !dbg !2130
  %7 = icmp eq i32 %6, 0, !dbg !2130
  br i1 %7, label %10, label %8, !dbg !2131

; <label>:8:                                      ; preds = %5
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !2132, !tbaa !2134
  %9 = tail call i32 @clientsArePaused() #8, !dbg !2135
  br label %10, !dbg !2136

; <label>:10:                                     ; preds = %5, %0, %8
  %11 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2137, !tbaa !784
  %12 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 17, !dbg !2138
  store i64 0, i64* %12, align 8, !dbg !2139, !tbaa !1950
  %13 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 20, !dbg !2140
  store i32 0, i32* %13, align 8, !dbg !2141, !tbaa !1953
  %14 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 18, !dbg !2142
  store %struct.clusterNode* null, %struct.clusterNode** %14, align 8, !dbg !2143, !tbaa !1956
  %15 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 19, !dbg !2144
  store i64 0, i64* %15, align 8, !dbg !2145, !tbaa !1959
  ret void, !dbg !2146
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterReset(i32) local_unnamed_addr #0 !dbg !2147 {
  %2 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2159, !tbaa !757
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 2, !dbg !2159
  %4 = load i32, i32* %3, align 8, !dbg !2159, !tbaa !918
  %5 = and i32 %4, 2, !dbg !2159
  %6 = icmp eq i32 %5, 0, !dbg !2159
  br i1 %6, label %9, label %7, !dbg !2161

; <label>:7:                                      ; preds = %1
  tail call void @clusterSetNodeAsMaster(%struct.clusterNode* %2) #12, !dbg !2162
  tail call void @replicationUnsetMaster() #8, !dbg !2164
  %8 = tail call i64 @emptyDb(i32 -1, i32 0, void (i8*)* null) #8, !dbg !2165
  br label %9, !dbg !2166

; <label>:9:                                      ; preds = %1, %7
  %10 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2167, !tbaa !784
  %11 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %10, i64 0, i32 6, i64 0, !dbg !2169
  %12 = bitcast %struct.clusterNode** %11 to i8*, !dbg !2169
  %13 = tail call i8* @memset(i8* nonnull %12, i32 0, i64 131072) #8, !dbg !2170
  %14 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2171, !tbaa !784
  %15 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %14, i64 0, i32 7, i64 0, !dbg !2172
  %16 = bitcast %struct.clusterNode** %15 to i8*, !dbg !2172
  %17 = tail call i8* @memset(i8* nonnull %16, i32 0, i64 131072) #8, !dbg !2173
  %18 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2174, !tbaa !784
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %18, i64 0, i32 17, !dbg !2176
  %20 = load i64, i64* %19, align 8, !dbg !2176, !tbaa !1950
  %21 = icmp eq i64 %20, 0, !dbg !2177
  br i1 %21, label %27, label %22, !dbg !2178

; <label>:22:                                     ; preds = %9
  %23 = tail call i32 @clientsArePaused() #8, !dbg !2179
  %24 = icmp eq i32 %23, 0, !dbg !2179
  br i1 %24, label %27, label %25, !dbg !2180

; <label>:25:                                     ; preds = %22
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !2181, !tbaa !2134
  %26 = tail call i32 @clientsArePaused() #8, !dbg !2182
  br label %27, !dbg !2183

; <label>:27:                                     ; preds = %9, %22, %25
  %28 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2184, !tbaa !784
  %29 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 17, !dbg !2185
  store i64 0, i64* %29, align 8, !dbg !2186, !tbaa !1950
  %30 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 20, !dbg !2187
  store i32 0, i32* %30, align 8, !dbg !2188, !tbaa !1953
  %31 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 18, !dbg !2189
  store %struct.clusterNode* null, %struct.clusterNode** %31, align 8, !dbg !2190, !tbaa !1956
  %32 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 19, !dbg !2191
  store i64 0, i64* %32, align 8, !dbg !2192, !tbaa !1959
  br label %33, !dbg !2194

; <label>:33:                                     ; preds = %27, %61
  %34 = phi %struct.clusterState* [ %28, %27 ], [ %62, %61 ]
  %35 = phi i64 [ 0, %27 ], [ %63, %61 ]
  %36 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %34, i64 0, i32 8, i64 %35, !dbg !2203
  %37 = load %struct.clusterNode*, %struct.clusterNode** %36, align 8, !dbg !2203, !tbaa !757
  %38 = icmp eq %struct.clusterNode* %37, null, !dbg !2205
  br i1 %38, label %61, label %39, !dbg !2207

; <label>:39:                                     ; preds = %33
  %40 = trunc i64 %35 to i32
  %41 = lshr i64 %35, 3
  %42 = and i64 %41, 8191
  %43 = and i32 %40, 7, !dbg !2228
  %44 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %37, i64 0, i32 4, i64 %42, !dbg !2230
  %45 = load i8, i8* %44, align 1, !dbg !2230, !tbaa !745
  %46 = zext i8 %45 to i32, !dbg !2230
  %47 = shl i32 1, %43, !dbg !2231
  %48 = and i32 %47, %46, !dbg !2232
  %49 = icmp eq i32 %48, 0, !dbg !2233
  %50 = trunc i32 %47 to i8, !dbg !2247
  %51 = xor i8 %50, -1, !dbg !2247
  %52 = and i8 %45, %51, !dbg !2247
  store i8 %52, i8* %44, align 1, !dbg !2247, !tbaa !745
  br i1 %49, label %53, label %54, !dbg !2248

; <label>:53:                                     ; preds = %39
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !2249
  tail call void @_exit(i32 1) #10, !dbg !2249
  unreachable, !dbg !2249

; <label>:54:                                     ; preds = %39
  %55 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %37, i64 0, i32 5, !dbg !2250
  %56 = load i32, i32* %55, align 8, !dbg !2252, !tbaa !1139
  %57 = add nsw i32 %56, -1, !dbg !2252
  store i32 %57, i32* %55, align 8, !dbg !2252, !tbaa !1139
  %58 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2253, !tbaa !784
  %59 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %58, i64 0, i32 8, i64 %35, !dbg !2254
  store %struct.clusterNode* null, %struct.clusterNode** %59, align 8, !dbg !2255, !tbaa !757
  %60 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2256, !tbaa !784
  br label %61, !dbg !2257

; <label>:61:                                     ; preds = %33, %54
  %62 = phi %struct.clusterState* [ %34, %33 ], [ %60, %54 ], !dbg !2256
  %63 = add nuw nsw i64 %35, 1, !dbg !2258
  %64 = icmp ult i64 %63, 16384, !dbg !2259
  br i1 %64, label %33, label %65, !dbg !2194, !llvm.loop !2260

; <label>:65:                                     ; preds = %61
  %66 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %62, i64 0, i32 4, !dbg !2262
  %67 = load %struct.dict*, %struct.dict** %66, align 8, !dbg !2262, !tbaa !832
  %68 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %67) #8, !dbg !2263
  %69 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %68) #8, !dbg !2265
  %70 = icmp eq %struct.dictEntry* %69, null, !dbg !2267
  br i1 %70, label %82, label %71, !dbg !2268

; <label>:71:                                     ; preds = %65, %79
  %72 = phi %struct.dictEntry* [ %80, %79 ], [ %69, %65 ]
  %73 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %72, i64 0, i32 1, i32 0, !dbg !2269
  %74 = bitcast i8** %73 to %struct.clusterNode**, !dbg !2269
  %75 = load %struct.clusterNode*, %struct.clusterNode** %74, align 8, !dbg !2269, !tbaa !745
  %76 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2271, !tbaa !757
  %77 = icmp eq %struct.clusterNode* %75, %76, !dbg !2273
  br i1 %77, label %79, label %78, !dbg !2274, !llvm.loop !2275

; <label>:78:                                     ; preds = %71
  tail call void @clusterDelNode(%struct.clusterNode* %75) #12, !dbg !2277
  br label %79, !dbg !2276

; <label>:79:                                     ; preds = %71, %78
  %80 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %68) #8, !dbg !2265
  %81 = icmp eq %struct.dictEntry* %80, null, !dbg !2267
  br i1 %81, label %82, label %71, !dbg !2268

; <label>:82:                                     ; preds = %79, %65
  tail call void @dictReleaseIterator(%struct.dictIterator* %68) #8, !dbg !2278
  %83 = icmp eq i32 %0, 0, !dbg !2279
  br i1 %83, label %109, label %84, !dbg !2280

; <label>:84:                                     ; preds = %82
  %85 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2281, !tbaa !784
  %86 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %85, i64 0, i32 1, !dbg !2282
  store i64 0, i64* %86, align 8, !dbg !2283, !tbaa !793
  %87 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %85, i64 0, i32 21, !dbg !2284
  store i64 0, i64* %87, align 8, !dbg !2285, !tbaa !807
  %88 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2286, !tbaa !757
  %89 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %88, i64 0, i32 3, !dbg !2287
  store i64 0, i64* %89, align 8, !dbg !2288, !tbaa !1075
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !2289
  %90 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2290, !tbaa !757
  %91 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %90, i64 0, i32 1, i64 0, !dbg !2290
  %92 = tail call i8* @sdsnewlen(i8* nonnull %91, i64 40) #8, !dbg !2291
  %93 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2293, !tbaa !784
  %94 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %93, i64 0, i32 4, !dbg !2294
  %95 = load %struct.dict*, %struct.dict** %94, align 8, !dbg !2294, !tbaa !832
  %96 = tail call i32 @dictDelete(%struct.dict* %95, i8* %92) #8, !dbg !2295
  tail call void @sdsfree(i8* %92) #8, !dbg !2296
  %97 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2297, !tbaa !757
  %98 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %97, i64 0, i32 1, i64 0, !dbg !2297
  tail call void @getRandomHexChars(i8* nonnull %98, i64 40) #8, !dbg !2298
  %99 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2299, !tbaa !757
  %100 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2302, !tbaa !784
  %101 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %100, i64 0, i32 4, !dbg !2303
  %102 = load %struct.dict*, %struct.dict** %101, align 8, !dbg !2303, !tbaa !832
  %103 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %99, i64 0, i32 1, i64 0, !dbg !2304
  %104 = tail call i8* @sdsnewlen(i8* nonnull %103, i64 40) #8, !dbg !2305
  %105 = bitcast %struct.clusterNode* %99 to i8*, !dbg !2306
  %106 = tail call i32 @dictAdd(%struct.dict* %102, i8* %104, i8* %105) #8, !dbg !2307
  %107 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2309, !tbaa !757
  %108 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %107, i64 0, i32 1, i64 0, !dbg !2309
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i64 0, i64 0), i8* nonnull %108) #8, !dbg !2310
  br label %109, !dbg !2311

; <label>:109:                                    ; preds = %82, %84
  %110 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2314, !tbaa !784
  %111 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %110, i64 0, i32 22, !dbg !2315
  %112 = load i32, i32* %111, align 8, !dbg !2316, !tbaa !1465
  %113 = or i32 %112, 14, !dbg !2316
  store i32 %113, i32* %111, align 8, !dbg !2316, !tbaa !1465
  ret void, !dbg !2317
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSetNodeAsMaster(%struct.clusterNode*) local_unnamed_addr #0 !dbg !2318 {
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !2324
  %3 = load i32, i32* %2, align 8, !dbg !2324, !tbaa !918
  %4 = and i32 %3, 1, !dbg !2324
  %5 = icmp eq i32 %4, 0, !dbg !2324
  br i1 %5, label %6, label %63, !dbg !2326

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 8, !dbg !2327
  %8 = load %struct.clusterNode*, %struct.clusterNode** %7, align 8, !dbg !2327, !tbaa !1012
  %9 = icmp eq %struct.clusterNode* %8, null, !dbg !2329
  br i1 %9, label %55, label %10, !dbg !2330

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %8, i64 0, i32 6
  %12 = load i32, i32* %11, align 4, !tbaa !1027
  %13 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %8, i64 0, i32 7
  %14 = sext i32 %12 to i64, !dbg !2349
  br label %15, !dbg !2349

; <label>:15:                                     ; preds = %18, %10
  %16 = phi i64 [ %23, %18 ], [ 0, %10 ], !dbg !2350
  %17 = icmp slt i64 %16, %14, !dbg !2351
  br i1 %17, label %18, label %49, !dbg !2352

; <label>:18:                                     ; preds = %15
  %19 = load %struct.clusterNode**, %struct.clusterNode*** %13, align 8, !dbg !2353, !tbaa !1030
  %20 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %19, i64 %16, !dbg !2354
  %21 = load %struct.clusterNode*, %struct.clusterNode** %20, align 8, !dbg !2354, !tbaa !757
  %22 = icmp eq %struct.clusterNode* %21, %0, !dbg !2355
  %23 = add nuw nsw i64 %16, 1, !dbg !2350
  br i1 %22, label %24, label %15, !dbg !2356, !llvm.loop !2357

; <label>:24:                                     ; preds = %18
  %25 = trunc i64 %23 to i32, !dbg !2348
  %26 = icmp sgt i32 %12, %25, !dbg !2360
  br i1 %26, label %27, label %41, !dbg !2361

; <label>:27:                                     ; preds = %24
  %28 = trunc i64 %16 to i32, !dbg !2348
  %29 = and i64 %16, 4294967295, !dbg !2354
  %30 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %19, i64 %29, !dbg !2354
  %31 = xor i32 %28, -1, !dbg !2362
  %32 = add i32 %12, %31, !dbg !2362
  %33 = bitcast %struct.clusterNode** %30 to i8*, !dbg !2364
  %34 = and i64 %23, 4294967295, !dbg !2365
  %35 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %19, i64 %34, !dbg !2365
  %36 = bitcast %struct.clusterNode** %35 to i8*, !dbg !2366
  %37 = sext i32 %32 to i64, !dbg !2367
  %38 = shl nsw i64 %37, 3, !dbg !2368
  %39 = tail call i8* @memmove(i8* %33, i8* nonnull %36, i64 %38) #8, !dbg !2369
  %40 = load i32, i32* %11, align 4, !dbg !2370, !tbaa !1027
  br label %41, !dbg !2371

; <label>:41:                                     ; preds = %27, %24
  %42 = phi i32 [ %40, %27 ], [ %12, %24 ], !dbg !2370
  %43 = add nsw i32 %42, -1, !dbg !2370
  store i32 %43, i32* %11, align 4, !dbg !2370, !tbaa !1027
  %44 = icmp eq i32 %43, 0, !dbg !2372
  br i1 %44, label %45, label %49, !dbg !2374

; <label>:45:                                     ; preds = %41
  %46 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %8, i64 0, i32 2, !dbg !2375
  %47 = load i32, i32* %46, align 8, !dbg !2376, !tbaa !918
  %48 = and i32 %47, -257, !dbg !2376
  store i32 %48, i32* %46, align 8, !dbg !2376, !tbaa !918
  br label %49, !dbg !2377

; <label>:49:                                     ; preds = %15, %41, %45
  %50 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2378, !tbaa !757
  %51 = icmp eq %struct.clusterNode* %50, %0, !dbg !2380
  %52 = load i32, i32* %2, align 8, !dbg !2381, !tbaa !918
  br i1 %51, label %55, label %53, !dbg !2382

; <label>:53:                                     ; preds = %49
  %54 = or i32 %52, 256, !dbg !2383
  store i32 %54, i32* %2, align 8, !dbg !2383, !tbaa !918
  br label %55, !dbg !2384

; <label>:55:                                     ; preds = %49, %6, %53
  %56 = phi i32 [ %3, %6 ], [ %54, %53 ], [ %52, %49 ], !dbg !2385
  %57 = and i32 %56, -4, !dbg !2385
  %58 = or i32 %57, 1, !dbg !2386
  store i32 %58, i32* %2, align 8, !dbg !2386, !tbaa !918
  store %struct.clusterNode* null, %struct.clusterNode** %7, align 8, !dbg !2387, !tbaa !1012
  %59 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2390, !tbaa !784
  %60 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %59, i64 0, i32 22, !dbg !2391
  %61 = load i32, i32* %60, align 8, !dbg !2392, !tbaa !1465
  %62 = or i32 %61, 6, !dbg !2392
  store i32 %62, i32* %60, align 8, !dbg !2392, !tbaa !1465
  br label %63, !dbg !2393

; <label>:63:                                     ; preds = %1, %55
  ret void, !dbg !2393
}

; Function Attrs: noredzone
declare dso_local void @replicationUnsetMaster() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @emptyDb(i32, i32, void (i8*)*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterDelSlot(i32) local_unnamed_addr #0 !dbg !2197 {
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2395, !tbaa !784
  %3 = sext i32 %0 to i64, !dbg !2396
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 8, i64 %3, !dbg !2396
  %5 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !2396, !tbaa !757
  %6 = icmp eq %struct.clusterNode* %5, null, !dbg !2398
  br i1 %6, label %27, label %7, !dbg !2399

; <label>:7:                                      ; preds = %1
  %8 = sdiv i32 %0, 8, !dbg !2406
  %9 = sext i32 %8 to i64, !dbg !2407
  %10 = and i32 %0, 7, !dbg !2409
  %11 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 4, i64 %9, !dbg !2411
  %12 = load i8, i8* %11, align 1, !dbg !2411, !tbaa !745
  %13 = zext i8 %12 to i32, !dbg !2411
  %14 = shl i32 1, %10, !dbg !2412
  %15 = and i32 %14, %13, !dbg !2413
  %16 = icmp eq i32 %15, 0, !dbg !2414
  %17 = trunc i32 %14 to i8, !dbg !2420
  %18 = xor i8 %17, -1, !dbg !2420
  %19 = and i8 %12, %18, !dbg !2420
  store i8 %19, i8* %11, align 1, !dbg !2420, !tbaa !745
  br i1 %16, label %20, label %21, !dbg !2421

; <label>:20:                                     ; preds = %7
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !2422
  tail call void @_exit(i32 1) #10, !dbg !2422
  unreachable, !dbg !2422

; <label>:21:                                     ; preds = %7
  %22 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 5, !dbg !2423
  %23 = load i32, i32* %22, align 8, !dbg !2424, !tbaa !1139
  %24 = add nsw i32 %23, -1, !dbg !2424
  store i32 %24, i32* %22, align 8, !dbg !2424, !tbaa !1139
  %25 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2425, !tbaa !784
  %26 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %25, i64 0, i32 8, i64 %3, !dbg !2426
  store %struct.clusterNode* null, %struct.clusterNode** %26, align 8, !dbg !2427, !tbaa !757
  br label %27, !dbg !2428

; <label>:27:                                     ; preds = %1, %21
  %28 = phi i32 [ 0, %21 ], [ -1, %1 ], !dbg !2429
  ret i32 %28, !dbg !2430
}

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetSafeIterator(%struct.dict*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictNext(%struct.dictIterator*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterDelNode(%struct.clusterNode*) local_unnamed_addr #0 !dbg !2431 {
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2441, !tbaa !784
  %3 = icmp eq %struct.clusterNode* %0, null
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5
  br label %5, !dbg !2442

; <label>:5:                                      ; preds = %1, %47
  %6 = phi %struct.clusterState* [ %2, %1 ], [ %48, %47 ]
  %7 = phi i64 [ 0, %1 ], [ %49, %47 ]
  %8 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %6, i64 0, i32 7, i64 %7, !dbg !2444
  %9 = load %struct.clusterNode*, %struct.clusterNode** %8, align 8, !dbg !2444, !tbaa !757
  %10 = icmp eq %struct.clusterNode* %9, %0, !dbg !2448
  br i1 %10, label %11, label %13, !dbg !2449

; <label>:11:                                     ; preds = %5
  store %struct.clusterNode* null, %struct.clusterNode** %8, align 8, !dbg !2450, !tbaa !757
  %12 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2451, !tbaa !784
  br label %13, !dbg !2453

; <label>:13:                                     ; preds = %11, %5
  %14 = phi %struct.clusterState* [ %12, %11 ], [ %6, %5 ]
  %15 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %14, i64 0, i32 6, i64 %7, !dbg !2454
  %16 = load %struct.clusterNode*, %struct.clusterNode** %15, align 8, !dbg !2454, !tbaa !757
  %17 = icmp eq %struct.clusterNode* %16, %0, !dbg !2455
  br i1 %17, label %18, label %20, !dbg !2456

; <label>:18:                                     ; preds = %13
  store %struct.clusterNode* null, %struct.clusterNode** %15, align 8, !dbg !2457, !tbaa !757
  %19 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2458, !tbaa !784
  br label %20, !dbg !2460

; <label>:20:                                     ; preds = %18, %13
  %21 = phi %struct.clusterState* [ %19, %18 ], [ %14, %13 ]
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %21, i64 0, i32 8, i64 %7, !dbg !2461
  %23 = load %struct.clusterNode*, %struct.clusterNode** %22, align 8, !dbg !2461, !tbaa !757
  %24 = icmp ne %struct.clusterNode* %23, %0, !dbg !2462
  %25 = or i1 %24, %3, !dbg !2463
  br i1 %25, label %47, label %26, !dbg !2463

; <label>:26:                                     ; preds = %20
  %27 = trunc i64 %7 to i32
  %28 = lshr i64 %7, 3
  %29 = and i64 %28, 8191
  %30 = and i32 %27, 7, !dbg !2472
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %29, !dbg !2474
  %32 = load i8, i8* %31, align 1, !dbg !2474, !tbaa !745
  %33 = zext i8 %32 to i32, !dbg !2474
  %34 = shl i32 1, %30, !dbg !2475
  %35 = and i32 %34, %33, !dbg !2476
  %36 = icmp eq i32 %35, 0, !dbg !2477
  %37 = trunc i32 %34 to i8, !dbg !2483
  %38 = xor i8 %37, -1, !dbg !2483
  %39 = and i8 %32, %38, !dbg !2483
  store i8 %39, i8* %31, align 1, !dbg !2483, !tbaa !745
  br i1 %36, label %40, label %41, !dbg !2484

; <label>:40:                                     ; preds = %26
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !2485
  tail call void @_exit(i32 1) #10, !dbg !2485
  unreachable, !dbg !2485

; <label>:41:                                     ; preds = %26
  %42 = load i32, i32* %4, align 8, !dbg !2486, !tbaa !1139
  %43 = add nsw i32 %42, -1, !dbg !2486
  store i32 %43, i32* %4, align 8, !dbg !2486, !tbaa !1139
  %44 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2487, !tbaa !784
  %45 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %44, i64 0, i32 8, i64 %7, !dbg !2488
  store %struct.clusterNode* null, %struct.clusterNode** %45, align 8, !dbg !2489, !tbaa !757
  %46 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2441, !tbaa !784
  br label %47, !dbg !2490

; <label>:47:                                     ; preds = %20, %41
  %48 = phi %struct.clusterState* [ %46, %41 ], [ %21, %20 ], !dbg !2441
  %49 = add nuw nsw i64 %7, 1, !dbg !2491
  %50 = icmp ult i64 %49, 16384, !dbg !2492
  br i1 %50, label %5, label %51, !dbg !2442, !llvm.loop !2493

; <label>:51:                                     ; preds = %47
  %52 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %48, i64 0, i32 4, !dbg !2495
  %53 = load %struct.dict*, %struct.dict** %52, align 8, !dbg !2495, !tbaa !832
  %54 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %53) #8, !dbg !2496
  %55 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %54) #8, !dbg !2498
  %56 = icmp eq %struct.dictEntry* %55, null, !dbg !2500
  br i1 %56, label %68, label %57, !dbg !2501

; <label>:57:                                     ; preds = %51, %65
  %58 = phi %struct.dictEntry* [ %66, %65 ], [ %55, %51 ]
  %59 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %58, i64 0, i32 1, i32 0, !dbg !2502
  %60 = bitcast i8** %59 to %struct.clusterNode**, !dbg !2502
  %61 = load %struct.clusterNode*, %struct.clusterNode** %60, align 8, !dbg !2502, !tbaa !745
  %62 = icmp eq %struct.clusterNode* %61, %0, !dbg !2504
  br i1 %62, label %65, label %63, !dbg !2506, !llvm.loop !2507

; <label>:63:                                     ; preds = %57
  %64 = tail call i32 @clusterNodeDelFailureReport(%struct.clusterNode* %61, %struct.clusterNode* %0) #12, !dbg !2509
  br label %65, !dbg !2508

; <label>:65:                                     ; preds = %57, %63
  %66 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %54) #8, !dbg !2498
  %67 = icmp eq %struct.dictEntry* %66, null, !dbg !2500
  br i1 %67, label %68, label %57, !dbg !2501

; <label>:68:                                     ; preds = %65, %51
  tail call void @dictReleaseIterator(%struct.dictIterator* %54) #8, !dbg !2510
  tail call void @freeClusterNode(%struct.clusterNode* %0) #12, !dbg !2511
  ret void, !dbg !2512
}

; Function Attrs: noredzone
declare dso_local void @dictReleaseIterator(%struct.dictIterator*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsnewlen(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dictDelete(%struct.dict*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @getRandomHexChars(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.clusterLink* @createClusterLink(%struct.clusterNode*) local_unnamed_addr #0 !dbg !2089 {
  %2 = tail call i8* @zmalloc(i64 40) #8, !dbg !2514
  %3 = bitcast i8* %2 to %struct.clusterLink*, !dbg !2514
  %4 = tail call i64 @mstime() #8, !dbg !2516
  %5 = bitcast i8* %2 to i64*, !dbg !2517
  store i64 %4, i64* %5, align 8, !dbg !2518, !tbaa !2101
  %6 = tail call i8* @sdsempty() #8, !dbg !2519
  %7 = getelementptr inbounds i8, i8* %2, i64 16, !dbg !2520
  %8 = bitcast i8* %7 to i8**, !dbg !2520
  store i8* %6, i8** %8, align 8, !dbg !2521, !tbaa !2106
  %9 = tail call i8* @sdsempty() #8, !dbg !2522
  %10 = getelementptr inbounds i8, i8* %2, i64 24, !dbg !2523
  %11 = bitcast i8* %10 to i8**, !dbg !2523
  store i8* %9, i8** %11, align 8, !dbg !2524, !tbaa !2110
  %12 = getelementptr inbounds i8, i8* %2, i64 32, !dbg !2525
  %13 = bitcast i8* %12 to %struct.clusterNode**, !dbg !2525
  store %struct.clusterNode* %0, %struct.clusterNode** %13, align 8, !dbg !2526, !tbaa !2113
  %14 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !2527
  %15 = bitcast i8* %14 to i32*, !dbg !2527
  store i32 -1, i32* %15, align 8, !dbg !2528, !tbaa !2117
  ret %struct.clusterLink* %3, !dbg !2529
}

; Function Attrs: noredzone
declare dso_local i8* @sdsempty() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @freeClusterLink(%struct.clusterLink*) local_unnamed_addr #0 !dbg !2530 {
  %2 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !2536
  %3 = load i32, i32* %2, align 8, !dbg !2536, !tbaa !2117
  %4 = icmp eq i32 %3, -1, !dbg !2538
  br i1 %4, label %7, label %5, !dbg !2539

; <label>:5:                                      ; preds = %1
  %6 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2540, !tbaa !1910
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* %6, i32 %3, i32 3) #8, !dbg !2542
  br label %7, !dbg !2543

; <label>:7:                                      ; preds = %1, %5
  %8 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 2, !dbg !2544
  %9 = load i8*, i8** %8, align 8, !dbg !2544, !tbaa !2106
  tail call void @sdsfree(i8* %9) #8, !dbg !2545
  %10 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 3, !dbg !2546
  %11 = load i8*, i8** %10, align 8, !dbg !2546, !tbaa !2110
  tail call void @sdsfree(i8* %11) #8, !dbg !2547
  %12 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 4, !dbg !2548
  %13 = load %struct.clusterNode*, %struct.clusterNode** %12, align 8, !dbg !2548, !tbaa !2113
  %14 = icmp eq %struct.clusterNode* %13, null, !dbg !2550
  br i1 %14, label %17, label %15, !dbg !2551

; <label>:15:                                     ; preds = %7
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %13, i64 0, i32 19, !dbg !2552
  store %struct.clusterLink* null, %struct.clusterLink** %16, align 8, !dbg !2553, !tbaa !1153
  br label %17, !dbg !2554

; <label>:17:                                     ; preds = %7, %15
  %18 = load i32, i32* %2, align 8, !dbg !2555, !tbaa !2117
  %19 = tail call i32 @close(i32 %18) #8, !dbg !2556
  %20 = bitcast %struct.clusterLink* %0 to i8*, !dbg !2557
  tail call void @zfree(i8* %20) #8, !dbg !2558
  ret void, !dbg !2559
}

; Function Attrs: noredzone
declare dso_local void @aeDeleteFileEvent(%struct.aeEventLoop*, i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetTcpAccept(i8*, i32, i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetNonBlock(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetEnableTcpNoDelay(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterReadHandler(%struct.aeEventLoop* nocapture readnone, i32, i8*, i32) #0 !dbg !2560 {
  %5 = alloca [4352 x i8], align 16
  %6 = getelementptr inbounds [4352 x i8], [4352 x i8]* %5, i64 0, i64 0, !dbg !2579
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %6) #9, !dbg !2579
  %7 = bitcast i8* %2 to %struct.clusterLink*, !dbg !2581
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to i8**
  br label %10, !dbg !2583

; <label>:10:                                     ; preds = %144, %4
  %11 = load i8*, i8** %9, align 8, !dbg !2584, !tbaa !2110
  %12 = getelementptr inbounds i8, i8* %11, i64 -1, !dbg !2588
  %13 = load i8, i8* %12, align 1, !dbg !2588, !tbaa !745
  %14 = trunc i8 %13 to i3, !dbg !2590
  switch i3 %14, label %40 [
    i3 0, label %15
    i3 1, label %18
    i3 2, label %22
    i3 3, label %27
    i3 -4, label %32
  ], !dbg !2590

; <label>:15:                                     ; preds = %10
  %16 = lshr i8 %13, 3, !dbg !2591
  %17 = zext i8 %16 to i64, !dbg !2591
  br label %36, !dbg !2592

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds i8, i8* %11, i64 -3, !dbg !2593
  %20 = load i8, i8* %19, align 1, !dbg !2594, !tbaa !745
  %21 = zext i8 %20 to i64, !dbg !2593
  br label %36, !dbg !2595

; <label>:22:                                     ; preds = %10
  %23 = getelementptr inbounds i8, i8* %11, i64 -5, !dbg !2596
  %24 = bitcast i8* %23 to i16*, !dbg !2597
  %25 = load i16, i16* %24, align 1, !dbg !2597, !tbaa !1493
  %26 = zext i16 %25 to i64, !dbg !2596
  br label %36, !dbg !2598

; <label>:27:                                     ; preds = %10
  %28 = getelementptr inbounds i8, i8* %11, i64 -9, !dbg !2599
  %29 = bitcast i8* %28 to i32*, !dbg !2600
  %30 = load i32, i32* %29, align 1, !dbg !2600, !tbaa !708
  %31 = zext i32 %30 to i64, !dbg !2599
  br label %36, !dbg !2601

; <label>:32:                                     ; preds = %10
  %33 = getelementptr inbounds i8, i8* %11, i64 -17, !dbg !2602
  %34 = bitcast i8* %33 to i64*, !dbg !2603
  %35 = load i64, i64* %34, align 1, !dbg !2603, !tbaa !1500
  br label %36, !dbg !2604

; <label>:36:                                     ; preds = %15, %18, %22, %27, %32
  %37 = phi i64 [ %35, %32 ], [ %31, %27 ], [ %26, %22 ], [ %21, %18 ], [ %17, %15 ], !dbg !2605
  %38 = trunc i64 %37 to i32, !dbg !2606
  %39 = icmp ult i32 %38, 8, !dbg !2608
  br i1 %39, label %40, label %44, !dbg !2610

; <label>:40:                                     ; preds = %10, %36
  %41 = phi i32 [ %38, %36 ], [ 0, %10 ]
  %42 = phi i64 [ %37, %36 ], [ 0, %10 ]
  %43 = sub i32 8, %41, !dbg !2611
  br label %86, !dbg !2614

; <label>:44:                                     ; preds = %36
  %45 = icmp eq i32 %38, 8, !dbg !2616
  br i1 %45, label %49, label %46, !dbg !2619

; <label>:46:                                     ; preds = %44
  %47 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !2620
  %48 = bitcast i8* %47 to i32*, !dbg !2620
  br label %79, !dbg !2619

; <label>:49:                                     ; preds = %44
  %50 = call i32 @memcmp(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i64 4) #8, !dbg !2621
  %51 = icmp eq i32 %50, 0, !dbg !2624
  br i1 %51, label %52, label %58, !dbg !2625

; <label>:52:                                     ; preds = %49
  %53 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !2626
  %54 = bitcast i8* %53 to i32*, !dbg !2626
  %55 = load i32, i32* %54, align 4, !dbg !2626, !tbaa !2627
  %56 = call i32 @lwip_htonl(i32 %55) #8, !dbg !2626
  %57 = icmp ult i32 %56, 2256, !dbg !2629
  br i1 %57, label %58, label %79, !dbg !2630

; <label>:58:                                     ; preds = %49, %52
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.69, i64 0, i64 0)) #8, !dbg !2631
  %59 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !2640
  %60 = bitcast i8* %59 to i32*, !dbg !2640
  %61 = load i32, i32* %60, align 8, !dbg !2640, !tbaa !2117
  %62 = icmp eq i32 %61, -1, !dbg !2641
  br i1 %62, label %65, label %63, !dbg !2642

; <label>:63:                                     ; preds = %58
  %64 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2643, !tbaa !1910
  call void @aeDeleteFileEvent(%struct.aeEventLoop* %64, i32 %61, i32 3) #8, !dbg !2644
  br label %65, !dbg !2645

; <label>:65:                                     ; preds = %63, %58
  %66 = getelementptr inbounds i8, i8* %2, i64 16, !dbg !2646
  %67 = bitcast i8* %66 to i8**, !dbg !2646
  %68 = load i8*, i8** %67, align 8, !dbg !2646, !tbaa !2106
  call void @sdsfree(i8* %68) #8, !dbg !2647
  %69 = load i8*, i8** %9, align 8, !dbg !2648, !tbaa !2110
  call void @sdsfree(i8* %69) #8, !dbg !2649
  %70 = getelementptr inbounds i8, i8* %2, i64 32, !dbg !2650
  %71 = bitcast i8* %70 to %struct.clusterNode**, !dbg !2650
  %72 = load %struct.clusterNode*, %struct.clusterNode** %71, align 8, !dbg !2650, !tbaa !2113
  %73 = icmp eq %struct.clusterNode* %72, null, !dbg !2651
  br i1 %73, label %76, label %74, !dbg !2652

; <label>:74:                                     ; preds = %65
  %75 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %72, i64 0, i32 19, !dbg !2653
  store %struct.clusterLink* null, %struct.clusterLink** %75, align 8, !dbg !2654, !tbaa !1153
  br label %76, !dbg !2655

; <label>:76:                                     ; preds = %65, %74
  %77 = load i32, i32* %60, align 8, !dbg !2656, !tbaa !2117
  %78 = call i32 @close(i32 %77) #8, !dbg !2657
  call void @zfree(i8* nonnull %2) #8, !dbg !2658
  br label %145, !dbg !2659

; <label>:79:                                     ; preds = %46, %52
  %80 = phi i32* [ %48, %46 ], [ %54, %52 ], !dbg !2620
  %81 = load i32, i32* %80, align 4, !dbg !2620, !tbaa !2627
  %82 = call i32 @lwip_htonl(i32 %81) #8, !dbg !2620
  %83 = sub i32 %82, %38, !dbg !2660
  %84 = icmp ult i32 %83, 4352, !dbg !2661
  %85 = select i1 %84, i32 %83, i32 4352, !dbg !2661
  br label %86

; <label>:86:                                     ; preds = %79, %40
  %87 = phi i64 [ %42, %40 ], [ %37, %79 ]
  %88 = phi i32 [ %43, %40 ], [ %85, %79 ], !dbg !2662
  %89 = zext i32 %88 to i64, !dbg !2664
  %90 = call i64 @read(i32 %1, i8* nonnull %6, i64 %89) #8, !dbg !2665
  %91 = icmp eq i64 %90, -1, !dbg !2667
  br i1 %91, label %92, label %96, !dbg !2669

; <label>:92:                                     ; preds = %86
  %93 = call i32* @__errno() #8, !dbg !2670
  %94 = load i32, i32* %93, align 4, !dbg !2670, !tbaa !708
  %95 = icmp eq i32 %94, 11, !dbg !2671
  br i1 %95, label %145, label %100, !dbg !2672

; <label>:96:                                     ; preds = %86
  %97 = icmp slt i64 %90, 1, !dbg !2673
  br i1 %97, label %98, label %126, !dbg !2675

; <label>:98:                                     ; preds = %96
  %99 = icmp eq i64 %90, 0, !dbg !2676
  br i1 %99, label %104, label %100, !dbg !2678

; <label>:100:                                    ; preds = %92, %98
  %101 = call i32* @__errno() #8, !dbg !2679
  %102 = load i32, i32* %101, align 4, !dbg !2679, !tbaa !708
  %103 = call i8* @strerror(i32 %102) #8, !dbg !2680
  br label %104, !dbg !2678

; <label>:104:                                    ; preds = %98, %100
  %105 = phi i8* [ %103, %100 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i64 0, i64 0), %98 ], !dbg !2678
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0), i8* %105) #8, !dbg !2681
  %106 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !2686
  %107 = bitcast i8* %106 to i32*, !dbg !2686
  %108 = load i32, i32* %107, align 8, !dbg !2686, !tbaa !2117
  %109 = icmp eq i32 %108, -1, !dbg !2687
  br i1 %109, label %112, label %110, !dbg !2688

; <label>:110:                                    ; preds = %104
  %111 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2689, !tbaa !1910
  call void @aeDeleteFileEvent(%struct.aeEventLoop* %111, i32 %108, i32 3) #8, !dbg !2690
  br label %112, !dbg !2691

; <label>:112:                                    ; preds = %110, %104
  %113 = getelementptr inbounds i8, i8* %2, i64 16, !dbg !2692
  %114 = bitcast i8* %113 to i8**, !dbg !2692
  %115 = load i8*, i8** %114, align 8, !dbg !2692, !tbaa !2106
  call void @sdsfree(i8* %115) #8, !dbg !2693
  %116 = load i8*, i8** %9, align 8, !dbg !2694, !tbaa !2110
  call void @sdsfree(i8* %116) #8, !dbg !2695
  %117 = getelementptr inbounds i8, i8* %2, i64 32, !dbg !2696
  %118 = bitcast i8* %117 to %struct.clusterNode**, !dbg !2696
  %119 = load %struct.clusterNode*, %struct.clusterNode** %118, align 8, !dbg !2696, !tbaa !2113
  %120 = icmp eq %struct.clusterNode* %119, null, !dbg !2697
  br i1 %120, label %123, label %121, !dbg !2698

; <label>:121:                                    ; preds = %112
  %122 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %119, i64 0, i32 19, !dbg !2699
  store %struct.clusterLink* null, %struct.clusterLink** %122, align 8, !dbg !2700, !tbaa !1153
  br label %123, !dbg !2701

; <label>:123:                                    ; preds = %112, %121
  %124 = load i32, i32* %107, align 8, !dbg !2702, !tbaa !2117
  %125 = call i32 @close(i32 %124) #8, !dbg !2703
  call void @zfree(i8* nonnull %2) #8, !dbg !2704
  br label %145, !dbg !2705

; <label>:126:                                    ; preds = %96
  %127 = load i8*, i8** %9, align 8, !dbg !2706, !tbaa !2110
  %128 = call i8* @sdscatlen(i8* %127, i8* nonnull %6, i64 %90) #8, !dbg !2708
  store i8* %128, i8** %9, align 8, !dbg !2709, !tbaa !2110
  %129 = add i64 %90, %87, !dbg !2710
  %130 = trunc i64 %129 to i32, !dbg !2710
  %131 = icmp ugt i32 %130, 7, !dbg !2711
  br i1 %131, label %132, label %144, !dbg !2713

; <label>:132:                                    ; preds = %126
  %133 = getelementptr inbounds i8, i8* %128, i64 4, !dbg !2714
  %134 = bitcast i8* %133 to i32*, !dbg !2714
  %135 = load i32, i32* %134, align 4, !dbg !2714, !tbaa !2627
  %136 = call i32 @lwip_htonl(i32 %135) #8, !dbg !2714
  %137 = icmp eq i32 %136, %130, !dbg !2715
  br i1 %137, label %138, label %144, !dbg !2716

; <label>:138:                                    ; preds = %132
  %139 = call i32 @clusterProcessPacket(%struct.clusterLink* nonnull %7) #12, !dbg !2717
  %140 = icmp eq i32 %139, 0, !dbg !2717
  br i1 %140, label %145, label %141, !dbg !2720

; <label>:141:                                    ; preds = %138
  %142 = load i8*, i8** %9, align 8, !dbg !2721, !tbaa !2110
  call void @sdsfree(i8* %142) #8, !dbg !2723
  %143 = call i8* @sdsempty() #8, !dbg !2724
  store i8* %143, i8** %9, align 8, !dbg !2725, !tbaa !2110
  br label %144, !dbg !2726

; <label>:144:                                    ; preds = %141, %132, %126
  br label %10, !dbg !2584, !llvm.loop !2727

; <label>:145:                                    ; preds = %138, %92, %123, %76
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %6) #9, !dbg !2729
  ret void, !dbg !2729
}

; Function Attrs: noredzone nounwind
define dso_local i32 @keyHashSlot(i8*, i32) local_unnamed_addr #0 !dbg !2730 {
  %3 = icmp sgt i32 %1, 0, !dbg !2741
  br i1 %3, label %4, label %18, !dbg !2744

; <label>:4:                                      ; preds = %2
  %5 = sext i32 %1 to i64, !dbg !2745
  br label %6, !dbg !2745

; <label>:6:                                      ; preds = %4, %12
  %7 = phi i64 [ 0, %4 ], [ %13, %12 ]
  %8 = phi i32 [ 0, %4 ], [ %14, %12 ]
  %9 = getelementptr inbounds i8, i8* %0, i64 %7, !dbg !2745
  %10 = load i8, i8* %9, align 1, !dbg !2745, !tbaa !745
  %11 = icmp eq i8 %10, 123, !dbg !2747
  br i1 %11, label %16, label %12, !dbg !2748

; <label>:12:                                     ; preds = %6
  %13 = add nuw nsw i64 %7, 1, !dbg !2749
  %14 = add nuw nsw i32 %8, 1, !dbg !2749
  %15 = icmp slt i64 %13, %5, !dbg !2741
  br i1 %15, label %6, label %18, !dbg !2744, !llvm.loop !2750

; <label>:16:                                     ; preds = %6
  %17 = trunc i64 %7 to i32, !dbg !2748
  br label %18, !dbg !2752

; <label>:18:                                     ; preds = %12, %16, %2
  %19 = phi i32 [ 0, %2 ], [ %17, %16 ], [ %14, %12 ], !dbg !2754
  %20 = icmp eq i32 %19, %1, !dbg !2752
  br i1 %20, label %21, label %23, !dbg !2755

; <label>:21:                                     ; preds = %18
  %22 = tail call zeroext i16 @crc16(i8* %0, i32 %1) #8, !dbg !2756
  br label %55, !dbg !2757

; <label>:23:                                     ; preds = %18
  %24 = add i32 %19, 1, !dbg !2758
  %25 = icmp slt i32 %24, %1, !dbg !2761
  br i1 %25, label %26, label %46, !dbg !2763

; <label>:26:                                     ; preds = %23
  %27 = sext i32 %24 to i64, !dbg !2764
  %28 = sext i32 %1 to i64, !dbg !2764
  br label %29, !dbg !2764

; <label>:29:                                     ; preds = %26, %35
  %30 = phi i64 [ %27, %26 ], [ %36, %35 ]
  %31 = phi i32 [ %24, %26 ], [ %37, %35 ]
  %32 = getelementptr inbounds i8, i8* %0, i64 %30, !dbg !2764
  %33 = load i8, i8* %32, align 1, !dbg !2764, !tbaa !745
  %34 = icmp eq i8 %33, 125, !dbg !2766
  br i1 %34, label %39, label %35, !dbg !2767

; <label>:35:                                     ; preds = %29
  %36 = add nsw i64 %30, 1, !dbg !2768
  %37 = add nsw i32 %31, 1, !dbg !2768
  %38 = icmp slt i64 %36, %28, !dbg !2761
  br i1 %38, label %29, label %41, !dbg !2763, !llvm.loop !2769

; <label>:39:                                     ; preds = %29
  %40 = trunc i64 %30 to i32, !dbg !2767
  br label %41, !dbg !2771

; <label>:41:                                     ; preds = %35, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %35 ], !dbg !2773
  %43 = icmp eq i32 %42, %1, !dbg !2771
  %44 = icmp eq i32 %42, %24, !dbg !2774
  %45 = or i1 %43, %44, !dbg !2775
  br i1 %45, label %46, label %48, !dbg !2775

; <label>:46:                                     ; preds = %23, %41
  %47 = tail call zeroext i16 @crc16(i8* %0, i32 %1) #8, !dbg !2776
  br label %55, !dbg !2777

; <label>:48:                                     ; preds = %41
  %49 = zext i32 %19 to i64, !dbg !2778
  %50 = getelementptr inbounds i8, i8* %0, i64 %49, !dbg !2778
  %51 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !2779
  %52 = xor i32 %19, -1, !dbg !2780
  %53 = add i32 %42, %52, !dbg !2780
  %54 = tail call zeroext i16 @crc16(i8* nonnull %51, i32 %53) #8, !dbg !2781
  br label %55, !dbg !2782

; <label>:55:                                     ; preds = %48, %46, %21
  %56 = phi i16 [ %22, %21 ], [ %47, %46 ], [ %54, %48 ]
  %57 = and i16 %56, 16383, !dbg !2783
  %58 = zext i16 %57 to i32, !dbg !2783
  ret i32 %58, !dbg !2784
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @crc16(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.list* @listCreate() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeAddFailureReport(%struct.clusterNode* nocapture readonly, %struct.clusterNode*) local_unnamed_addr #0 !dbg !2785 {
  %3 = alloca %struct.listIter, align 8
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !2806
  %5 = load %struct.list*, %struct.list** %4, align 8, !dbg !2806, !tbaa !1163
  %6 = bitcast %struct.listIter* %3 to i8*, !dbg !2808
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9, !dbg !2808
  call void @listRewind(%struct.list* %5, %struct.listIter* nonnull %3) #8, !dbg !2810
  br label %7, !dbg !2811

; <label>:7:                                      ; preds = %10, %2
  %8 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #8, !dbg !2812
  %9 = icmp eq %struct.listNode* %8, null, !dbg !2814
  br i1 %9, label %20, label %10, !dbg !2811

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %struct.listNode, %struct.listNode* %8, i64 0, i32 2, !dbg !2815
  %12 = bitcast i8** %11 to %struct.clusterNodeFailReport**, !dbg !2815
  %13 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %12, align 8, !dbg !2815, !tbaa !2817
  %14 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %13, i64 0, i32 0, !dbg !2820
  %15 = load %struct.clusterNode*, %struct.clusterNode** %14, align 8, !dbg !2820, !tbaa !2822
  %16 = icmp eq %struct.clusterNode* %15, %1, !dbg !2824
  br i1 %16, label %17, label %7, !dbg !2825, !llvm.loop !2826

; <label>:17:                                     ; preds = %10
  %18 = call i64 @mstime() #8, !dbg !2828
  %19 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %13, i64 0, i32 1, !dbg !2830
  store i64 %18, i64* %19, align 8, !dbg !2831, !tbaa !2832
  br label %27, !dbg !2833

; <label>:20:                                     ; preds = %7
  %21 = call i8* @zmalloc(i64 16) #8, !dbg !2834
  %22 = bitcast i8* %21 to %struct.clusterNode**, !dbg !2835
  store %struct.clusterNode* %1, %struct.clusterNode** %22, align 8, !dbg !2836, !tbaa !2822
  %23 = call i64 @mstime() #8, !dbg !2837
  %24 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !2838
  %25 = bitcast i8* %24 to i64*, !dbg !2838
  store i64 %23, i64* %25, align 8, !dbg !2839, !tbaa !2832
  %26 = call %struct.list* @listAddNodeTail(%struct.list* %5, i8* %21) #8, !dbg !2840
  br label %27, !dbg !2841

; <label>:27:                                     ; preds = %20, %17
  %28 = phi i32 [ 0, %17 ], [ 1, %20 ], !dbg !2842
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9, !dbg !2843
  ret i32 %28, !dbg !2843
}

; Function Attrs: noredzone
declare dso_local void @listRewind(%struct.list*, %struct.listIter*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.listNode* @listNext(%struct.listIter*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.list* @listAddNodeTail(%struct.list*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterNodeCleanupFailureReports(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !2844 {
  %2 = alloca %struct.listIter, align 8
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !2854
  %4 = load %struct.list*, %struct.list** %3, align 8, !dbg !2854, !tbaa !1163
  %5 = bitcast %struct.listIter* %2 to i8*, !dbg !2856
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9, !dbg !2856
  %6 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !2857, !tbaa !2858
  %7 = shl nsw i64 %6, 1, !dbg !2859
  %8 = tail call i64 @mstime() #8, !dbg !2861
  call void @listRewind(%struct.list* %4, %struct.listIter* nonnull %2) #8, !dbg !2864
  %9 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #8, !dbg !2865
  %10 = icmp eq %struct.listNode* %9, null, !dbg !2867
  br i1 %10, label %24, label %11, !dbg !2868

; <label>:11:                                     ; preds = %1, %21
  %12 = phi %struct.listNode* [ %22, %21 ], [ %9, %1 ]
  %13 = getelementptr inbounds %struct.listNode, %struct.listNode* %12, i64 0, i32 2, !dbg !2869
  %14 = bitcast i8** %13 to %struct.clusterNodeFailReport**, !dbg !2869
  %15 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %14, align 8, !dbg !2869, !tbaa !2817
  %16 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %15, i64 0, i32 1, !dbg !2872
  %17 = load i64, i64* %16, align 8, !dbg !2872, !tbaa !2832
  %18 = sub nsw i64 %8, %17, !dbg !2874
  %19 = icmp sgt i64 %18, %7, !dbg !2875
  br i1 %19, label %20, label %21, !dbg !2876

; <label>:20:                                     ; preds = %11
  call void @listDelNode(%struct.list* %4, %struct.listNode* nonnull %12) #8, !dbg !2877
  br label %21, !dbg !2877

; <label>:21:                                     ; preds = %20, %11
  %22 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #8, !dbg !2865
  %23 = icmp eq %struct.listNode* %22, null, !dbg !2867
  br i1 %23, label %24, label %11, !dbg !2868, !llvm.loop !2878

; <label>:24:                                     ; preds = %21, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9, !dbg !2880
  ret void, !dbg !2880
}

; Function Attrs: noredzone
declare dso_local void @listDelNode(%struct.list*, %struct.listNode*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeDelFailureReport(%struct.clusterNode* nocapture readonly, %struct.clusterNode* readnone) local_unnamed_addr #0 !dbg !2881 {
  %3 = alloca %struct.listIter, align 8
  %4 = alloca %struct.listIter, align 8
  %5 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !2891
  %6 = load %struct.list*, %struct.list** %5, align 8, !dbg !2891, !tbaa !1163
  %7 = bitcast %struct.listIter* %4 to i8*, !dbg !2893
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9, !dbg !2893
  call void @listRewind(%struct.list* %6, %struct.listIter* nonnull %4) #8, !dbg !2895
  br label %8, !dbg !2896

; <label>:8:                                      ; preds = %11, %2
  %9 = call %struct.listNode* @listNext(%struct.listIter* nonnull %4) #8, !dbg !2897
  %10 = icmp eq %struct.listNode* %9, null, !dbg !2899
  br i1 %10, label %40, label %11, !dbg !2896

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds %struct.listNode, %struct.listNode* %9, i64 0, i32 2, !dbg !2900
  %13 = bitcast i8** %12 to %struct.clusterNodeFailReport**, !dbg !2900
  %14 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %13, align 8, !dbg !2900, !tbaa !2817
  %15 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %14, i64 0, i32 0, !dbg !2903
  %16 = load %struct.clusterNode*, %struct.clusterNode** %15, align 8, !dbg !2903, !tbaa !2822
  %17 = icmp eq %struct.clusterNode* %16, %1, !dbg !2905
  br i1 %17, label %18, label %8, !dbg !2906, !llvm.loop !2907

; <label>:18:                                     ; preds = %11
  call void @listDelNode(%struct.list* %6, %struct.listNode* nonnull %9) #8, !dbg !2909
  %19 = load %struct.list*, %struct.list** %5, align 8, !dbg !2912, !tbaa !1163
  %20 = bitcast %struct.listIter* %3 to i8*, !dbg !2914
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9, !dbg !2914
  %21 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !2915, !tbaa !2858
  %22 = shl nsw i64 %21, 1, !dbg !2916
  %23 = call i64 @mstime() #8, !dbg !2918
  call void @listRewind(%struct.list* %19, %struct.listIter* nonnull %3) #8, !dbg !2921
  %24 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #8, !dbg !2922
  %25 = icmp eq %struct.listNode* %24, null, !dbg !2924
  br i1 %25, label %39, label %26, !dbg !2925

; <label>:26:                                     ; preds = %18, %36
  %27 = phi %struct.listNode* [ %37, %36 ], [ %24, %18 ]
  %28 = getelementptr inbounds %struct.listNode, %struct.listNode* %27, i64 0, i32 2, !dbg !2926
  %29 = bitcast i8** %28 to %struct.clusterNodeFailReport**, !dbg !2926
  %30 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %29, align 8, !dbg !2926, !tbaa !2817
  %31 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %30, i64 0, i32 1, !dbg !2928
  %32 = load i64, i64* %31, align 8, !dbg !2928, !tbaa !2832
  %33 = sub nsw i64 %23, %32, !dbg !2929
  %34 = icmp sgt i64 %33, %22, !dbg !2930
  br i1 %34, label %35, label %36, !dbg !2931

; <label>:35:                                     ; preds = %26
  call void @listDelNode(%struct.list* %19, %struct.listNode* nonnull %27) #8, !dbg !2932
  br label %36, !dbg !2932

; <label>:36:                                     ; preds = %35, %26
  %37 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #8, !dbg !2922
  %38 = icmp eq %struct.listNode* %37, null, !dbg !2924
  br i1 %38, label %39, label %26, !dbg !2925, !llvm.loop !2878

; <label>:39:                                     ; preds = %36, %18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9, !dbg !2933
  br label %40, !dbg !2934

; <label>:40:                                     ; preds = %8, %39
  %41 = phi i32 [ 1, %39 ], [ 0, %8 ], !dbg !2935
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9, !dbg !2937
  ret i32 %41, !dbg !2937
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeFailureReportsCount(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !2938 {
  %2 = alloca %struct.listIter, align 8
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !2944
  %4 = load %struct.list*, %struct.list** %3, align 8, !dbg !2944, !tbaa !1163
  %5 = bitcast %struct.listIter* %2 to i8*, !dbg !2946
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9, !dbg !2946
  %6 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !2947, !tbaa !2858
  %7 = shl nsw i64 %6, 1, !dbg !2948
  %8 = tail call i64 @mstime() #8, !dbg !2950
  call void @listRewind(%struct.list* %4, %struct.listIter* nonnull %2) #8, !dbg !2953
  %9 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #8, !dbg !2954
  %10 = icmp eq %struct.listNode* %9, null, !dbg !2956
  br i1 %10, label %24, label %11, !dbg !2957

; <label>:11:                                     ; preds = %1, %21
  %12 = phi %struct.listNode* [ %22, %21 ], [ %9, %1 ]
  %13 = getelementptr inbounds %struct.listNode, %struct.listNode* %12, i64 0, i32 2, !dbg !2958
  %14 = bitcast i8** %13 to %struct.clusterNodeFailReport**, !dbg !2958
  %15 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %14, align 8, !dbg !2958, !tbaa !2817
  %16 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %15, i64 0, i32 1, !dbg !2960
  %17 = load i64, i64* %16, align 8, !dbg !2960, !tbaa !2832
  %18 = sub nsw i64 %8, %17, !dbg !2961
  %19 = icmp sgt i64 %18, %7, !dbg !2962
  br i1 %19, label %20, label %21, !dbg !2963

; <label>:20:                                     ; preds = %11
  call void @listDelNode(%struct.list* %4, %struct.listNode* nonnull %12) #8, !dbg !2964
  br label %21, !dbg !2964

; <label>:21:                                     ; preds = %20, %11
  %22 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #8, !dbg !2954
  %23 = icmp eq %struct.listNode* %22, null, !dbg !2956
  br i1 %23, label %24, label %11, !dbg !2957, !llvm.loop !2878

; <label>:24:                                     ; preds = %21, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9, !dbg !2965
  %25 = load %struct.list*, %struct.list** %3, align 8, !dbg !2966, !tbaa !1163
  %26 = getelementptr inbounds %struct.list, %struct.list* %25, i64 0, i32 5, !dbg !2966
  %27 = load i64, i64* %26, align 8, !dbg !2966, !tbaa !2967
  %28 = trunc i64 %27 to i32, !dbg !2966
  ret i32 %28, !dbg !2968
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeRemoveSlave(%struct.clusterNode* nocapture, %struct.clusterNode* readnone) local_unnamed_addr #0 !dbg !2332 {
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4, !tbaa !1027
  %5 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7
  %6 = sext i32 %4 to i64, !dbg !2972
  br label %7, !dbg !2972

; <label>:7:                                      ; preds = %10, %2
  %8 = phi i64 [ %15, %10 ], [ 0, %2 ], !dbg !2973
  %9 = icmp slt i64 %8, %6, !dbg !2974
  br i1 %9, label %10, label %41, !dbg !2358

; <label>:10:                                     ; preds = %7
  %11 = load %struct.clusterNode**, %struct.clusterNode*** %5, align 8, !dbg !2975, !tbaa !1030
  %12 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %11, i64 %8, !dbg !2976
  %13 = load %struct.clusterNode*, %struct.clusterNode** %12, align 8, !dbg !2976, !tbaa !757
  %14 = icmp eq %struct.clusterNode* %13, %1, !dbg !2977
  %15 = add nuw nsw i64 %8, 1, !dbg !2973
  br i1 %14, label %16, label %7, !dbg !2978, !llvm.loop !2357

; <label>:16:                                     ; preds = %10
  %17 = trunc i64 %15 to i32, !dbg !2971
  %18 = icmp sgt i32 %4, %17, !dbg !2979
  br i1 %18, label %19, label %33, !dbg !2980

; <label>:19:                                     ; preds = %16
  %20 = trunc i64 %8 to i32, !dbg !2971
  %21 = and i64 %8, 4294967295, !dbg !2976
  %22 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %11, i64 %21, !dbg !2976
  %23 = xor i32 %20, -1, !dbg !2981
  %24 = add i32 %4, %23, !dbg !2981
  %25 = bitcast %struct.clusterNode** %22 to i8*, !dbg !2983
  %26 = and i64 %15, 4294967295, !dbg !2984
  %27 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %11, i64 %26, !dbg !2984
  %28 = bitcast %struct.clusterNode** %27 to i8*, !dbg !2985
  %29 = sext i32 %24 to i64, !dbg !2986
  %30 = shl nsw i64 %29, 3, !dbg !2987
  %31 = tail call i8* @memmove(i8* %25, i8* nonnull %28, i64 %30) #8, !dbg !2988
  %32 = load i32, i32* %3, align 4, !dbg !2989, !tbaa !1027
  br label %33, !dbg !2990

; <label>:33:                                     ; preds = %19, %16
  %34 = phi i32 [ %32, %19 ], [ %4, %16 ], !dbg !2989
  %35 = add nsw i32 %34, -1, !dbg !2989
  store i32 %35, i32* %3, align 4, !dbg !2989, !tbaa !1027
  %36 = icmp eq i32 %35, 0, !dbg !2991
  br i1 %36, label %37, label %41, !dbg !2992

; <label>:37:                                     ; preds = %33
  %38 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !2993
  %39 = load i32, i32* %38, align 8, !dbg !2994, !tbaa !918
  %40 = and i32 %39, -257, !dbg !2994
  store i32 %40, i32* %38, align 8, !dbg !2994, !tbaa !918
  br label %41, !dbg !2995

; <label>:41:                                     ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %37 ], [ 0, %33 ], [ -1, %7 ], !dbg !2996
  ret i32 %42, !dbg !2997
}

; Function Attrs: noredzone
declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zrealloc(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @clusterCountNonFailingSlaves(%struct.clusterNode* nocapture readonly) local_unnamed_addr #6 !dbg !2998 {
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6, !dbg !3006
  %3 = load i32, i32* %2, align 4, !dbg !3006, !tbaa !1027
  %4 = icmp sgt i32 %3, 0, !dbg !3009
  br i1 %4, label %5, label %51, !dbg !3010

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7
  %7 = load %struct.clusterNode**, %struct.clusterNode*** %6, align 8, !tbaa !1030
  %8 = sext i32 %3 to i64, !dbg !3010
  %9 = and i64 %8, 1, !dbg !3010
  %10 = icmp eq i32 %3, 1, !dbg !3010
  br i1 %10, label %37, label %11, !dbg !3010

; <label>:11:                                     ; preds = %5
  %12 = sub nsw i64 %8, %9, !dbg !3010
  br label %13, !dbg !3010

; <label>:13:                                     ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %34, %13 ]
  %15 = phi i32 [ 0, %11 ], [ %33, %13 ]
  %16 = phi i64 [ %12, %11 ], [ %35, %13 ]
  %17 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %14, !dbg !3011
  %18 = load %struct.clusterNode*, %struct.clusterNode** %17, align 8, !dbg !3011, !tbaa !757
  %19 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 2, !dbg !3011
  %20 = load i32, i32* %19, align 8, !dbg !3011, !tbaa !918
  %21 = lshr i32 %20, 3, !dbg !3013
  %22 = and i32 %21, 1, !dbg !3013
  %23 = xor i32 %22, 1, !dbg !3013
  %24 = add nuw nsw i32 %23, %15, !dbg !3013
  %25 = or i64 %14, 1, !dbg !3014
  %26 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %25, !dbg !3011
  %27 = load %struct.clusterNode*, %struct.clusterNode** %26, align 8, !dbg !3011, !tbaa !757
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %27, i64 0, i32 2, !dbg !3011
  %29 = load i32, i32* %28, align 8, !dbg !3011, !tbaa !918
  %30 = lshr i32 %29, 3, !dbg !3013
  %31 = and i32 %30, 1, !dbg !3013
  %32 = xor i32 %31, 1, !dbg !3013
  %33 = add nuw nsw i32 %32, %24, !dbg !3013
  %34 = add nuw nsw i64 %14, 2, !dbg !3014
  %35 = add i64 %16, -2, !dbg !3010
  %36 = icmp eq i64 %35, 0, !dbg !3010
  br i1 %36, label %37, label %13, !dbg !3010, !llvm.loop !3015

; <label>:37:                                     ; preds = %13, %5
  %38 = phi i32 [ undef, %5 ], [ %33, %13 ]
  %39 = phi i64 [ 0, %5 ], [ %34, %13 ]
  %40 = phi i32 [ 0, %5 ], [ %33, %13 ]
  %41 = icmp eq i64 %9, 0, !dbg !3010
  br i1 %41, label %51, label %42, !dbg !3010

; <label>:42:                                     ; preds = %37
  %43 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %39, !dbg !3011
  %44 = load %struct.clusterNode*, %struct.clusterNode** %43, align 8, !dbg !3011, !tbaa !757
  %45 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %44, i64 0, i32 2, !dbg !3011
  %46 = load i32, i32* %45, align 8, !dbg !3011, !tbaa !918
  %47 = lshr i32 %46, 3, !dbg !3013
  %48 = and i32 %47, 1, !dbg !3013
  %49 = xor i32 %48, 1, !dbg !3013
  %50 = add nuw nsw i32 %49, %40, !dbg !3013
  br label %51, !dbg !3017

; <label>:51:                                     ; preds = %42, %37, %1
  %52 = phi i32 [ 0, %1 ], [ %38, %37 ], [ %50, %42 ], !dbg !3004
  ret i32 %52, !dbg !3017
}

; Function Attrs: noredzone nounwind
define dso_local void @freeClusterNode(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3018 {
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6, !dbg !3025
  %3 = load i32, i32* %2, align 4, !dbg !3025, !tbaa !1027
  %4 = icmp sgt i32 %3, 0, !dbg !3028
  br i1 %4, label %5, label %63, !dbg !3029

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7
  %7 = sext i32 %3 to i64, !dbg !3029
  %8 = load %struct.clusterNode**, %struct.clusterNode*** %6, align 8, !dbg !3030, !tbaa !1030
  %9 = add nsw i64 %7, -1, !dbg !3029
  %10 = and i64 %7, 7, !dbg !3029
  %11 = icmp ult i64 %9, 7, !dbg !3029
  br i1 %11, label %51, label %12, !dbg !3029

; <label>:12:                                     ; preds = %5
  %13 = sub nsw i64 %7, %10, !dbg !3029
  br label %14, !dbg !3029

; <label>:14:                                     ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %48, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %49, %14 ]
  %17 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %15, !dbg !3031
  %18 = load %struct.clusterNode*, %struct.clusterNode** %17, align 8, !dbg !3031, !tbaa !757
  %19 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 8, !dbg !3032
  store %struct.clusterNode* null, %struct.clusterNode** %19, align 8, !dbg !3033, !tbaa !1012
  %20 = or i64 %15, 1, !dbg !3034
  %21 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %20, !dbg !3031
  %22 = load %struct.clusterNode*, %struct.clusterNode** %21, align 8, !dbg !3031, !tbaa !757
  %23 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %22, i64 0, i32 8, !dbg !3032
  store %struct.clusterNode* null, %struct.clusterNode** %23, align 8, !dbg !3033, !tbaa !1012
  %24 = or i64 %15, 2, !dbg !3034
  %25 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %24, !dbg !3031
  %26 = load %struct.clusterNode*, %struct.clusterNode** %25, align 8, !dbg !3031, !tbaa !757
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 8, !dbg !3032
  store %struct.clusterNode* null, %struct.clusterNode** %27, align 8, !dbg !3033, !tbaa !1012
  %28 = or i64 %15, 3, !dbg !3034
  %29 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %28, !dbg !3031
  %30 = load %struct.clusterNode*, %struct.clusterNode** %29, align 8, !dbg !3031, !tbaa !757
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %30, i64 0, i32 8, !dbg !3032
  store %struct.clusterNode* null, %struct.clusterNode** %31, align 8, !dbg !3033, !tbaa !1012
  %32 = or i64 %15, 4, !dbg !3034
  %33 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %32, !dbg !3031
  %34 = load %struct.clusterNode*, %struct.clusterNode** %33, align 8, !dbg !3031, !tbaa !757
  %35 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %34, i64 0, i32 8, !dbg !3032
  store %struct.clusterNode* null, %struct.clusterNode** %35, align 8, !dbg !3033, !tbaa !1012
  %36 = or i64 %15, 5, !dbg !3034
  %37 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %36, !dbg !3031
  %38 = load %struct.clusterNode*, %struct.clusterNode** %37, align 8, !dbg !3031, !tbaa !757
  %39 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %38, i64 0, i32 8, !dbg !3032
  store %struct.clusterNode* null, %struct.clusterNode** %39, align 8, !dbg !3033, !tbaa !1012
  %40 = or i64 %15, 6, !dbg !3034
  %41 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %40, !dbg !3031
  %42 = load %struct.clusterNode*, %struct.clusterNode** %41, align 8, !dbg !3031, !tbaa !757
  %43 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %42, i64 0, i32 8, !dbg !3032
  store %struct.clusterNode* null, %struct.clusterNode** %43, align 8, !dbg !3033, !tbaa !1012
  %44 = or i64 %15, 7, !dbg !3034
  %45 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %44, !dbg !3031
  %46 = load %struct.clusterNode*, %struct.clusterNode** %45, align 8, !dbg !3031, !tbaa !757
  %47 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %46, i64 0, i32 8, !dbg !3032
  store %struct.clusterNode* null, %struct.clusterNode** %47, align 8, !dbg !3033, !tbaa !1012
  %48 = add nuw nsw i64 %15, 8, !dbg !3034
  %49 = add i64 %16, -8, !dbg !3029
  %50 = icmp eq i64 %49, 0, !dbg !3029
  br i1 %50, label %51, label %14, !dbg !3029, !llvm.loop !3035

; <label>:51:                                     ; preds = %14, %5
  %52 = phi i64 [ 0, %5 ], [ %48, %14 ]
  %53 = icmp eq i64 %10, 0, !dbg !3029
  br i1 %53, label %63, label %54, !dbg !3029

; <label>:54:                                     ; preds = %51, %54
  %55 = phi i64 [ %60, %54 ], [ %52, %51 ]
  %56 = phi i64 [ %61, %54 ], [ %10, %51 ]
  %57 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %55, !dbg !3031
  %58 = load %struct.clusterNode*, %struct.clusterNode** %57, align 8, !dbg !3031, !tbaa !757
  %59 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %58, i64 0, i32 8, !dbg !3032
  store %struct.clusterNode* null, %struct.clusterNode** %59, align 8, !dbg !3033, !tbaa !1012
  %60 = add nuw nsw i64 %55, 1, !dbg !3034
  %61 = add i64 %56, -1, !dbg !3029
  %62 = icmp eq i64 %61, 0, !dbg !3029
  br i1 %62, label %63, label %54, !dbg !3029, !llvm.loop !3037

; <label>:63:                                     ; preds = %51, %54, %1
  %64 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !3039
  %65 = load i32, i32* %64, align 8, !dbg !3039, !tbaa !918
  %66 = and i32 %65, 2, !dbg !3039
  %67 = icmp eq i32 %66, 0, !dbg !3039
  br i1 %67, label %111, label %68, !dbg !3041

; <label>:68:                                     ; preds = %63
  %69 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 8, !dbg !3042
  %70 = load %struct.clusterNode*, %struct.clusterNode** %69, align 8, !dbg !3042, !tbaa !1012
  %71 = icmp eq %struct.clusterNode* %70, null, !dbg !3043
  br i1 %71, label %111, label %72, !dbg !3044

; <label>:72:                                     ; preds = %68
  %73 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 6
  %74 = load i32, i32* %73, align 4, !tbaa !1027
  %75 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 7
  %76 = sext i32 %74 to i64, !dbg !3049
  br label %77, !dbg !3049

; <label>:77:                                     ; preds = %80, %72
  %78 = phi i64 [ %85, %80 ], [ 0, %72 ], !dbg !3050
  %79 = icmp slt i64 %78, %76, !dbg !3051
  br i1 %79, label %80, label %111, !dbg !3052

; <label>:80:                                     ; preds = %77
  %81 = load %struct.clusterNode**, %struct.clusterNode*** %75, align 8, !dbg !3053, !tbaa !1030
  %82 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %81, i64 %78, !dbg !3054
  %83 = load %struct.clusterNode*, %struct.clusterNode** %82, align 8, !dbg !3054, !tbaa !757
  %84 = icmp eq %struct.clusterNode* %83, %0, !dbg !3055
  %85 = add nuw nsw i64 %78, 1, !dbg !3050
  br i1 %84, label %86, label %77, !dbg !3056, !llvm.loop !2357

; <label>:86:                                     ; preds = %80
  %87 = trunc i64 %85 to i32, !dbg !3048
  %88 = icmp sgt i32 %74, %87, !dbg !3057
  br i1 %88, label %89, label %103, !dbg !3058

; <label>:89:                                     ; preds = %86
  %90 = trunc i64 %78 to i32, !dbg !3048
  %91 = and i64 %78, 4294967295, !dbg !3054
  %92 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %81, i64 %91, !dbg !3054
  %93 = xor i32 %90, -1, !dbg !3059
  %94 = add i32 %74, %93, !dbg !3059
  %95 = bitcast %struct.clusterNode** %92 to i8*, !dbg !3061
  %96 = and i64 %85, 4294967295, !dbg !3062
  %97 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %81, i64 %96, !dbg !3062
  %98 = bitcast %struct.clusterNode** %97 to i8*, !dbg !3063
  %99 = sext i32 %94 to i64, !dbg !3064
  %100 = shl nsw i64 %99, 3, !dbg !3065
  %101 = tail call i8* @memmove(i8* %95, i8* nonnull %98, i64 %100) #8, !dbg !3066
  %102 = load i32, i32* %73, align 4, !dbg !3067, !tbaa !1027
  br label %103, !dbg !3068

; <label>:103:                                    ; preds = %89, %86
  %104 = phi i32 [ %102, %89 ], [ %74, %86 ], !dbg !3067
  %105 = add nsw i32 %104, -1, !dbg !3067
  store i32 %105, i32* %73, align 4, !dbg !3067, !tbaa !1027
  %106 = icmp eq i32 %105, 0, !dbg !3069
  br i1 %106, label %107, label %111, !dbg !3070

; <label>:107:                                    ; preds = %103
  %108 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 2, !dbg !3071
  %109 = load i32, i32* %108, align 8, !dbg !3072, !tbaa !918
  %110 = and i32 %109, -257, !dbg !3072
  store i32 %110, i32* %108, align 8, !dbg !3072, !tbaa !918
  br label %111, !dbg !3073

; <label>:111:                                    ; preds = %77, %107, %103, %68, %63
  %112 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3074
  %113 = tail call i8* @sdsnewlen(i8* nonnull %112, i64 40) #8, !dbg !3075
  %114 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3077, !tbaa !784
  %115 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %114, i64 0, i32 4, !dbg !3077
  %116 = load %struct.dict*, %struct.dict** %115, align 8, !dbg !3077, !tbaa !832
  %117 = tail call i32 @dictDelete(%struct.dict* %116, i8* %113) #8, !dbg !3077
  %118 = icmp eq i32 %117, 0, !dbg !3077
  br i1 %118, label %120, label %119, !dbg !3077

; <label>:119:                                    ; preds = %111
  tail call void @_serverAssert(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 876) #8, !dbg !3077
  tail call void @_exit(i32 1) #10, !dbg !3077
  unreachable, !dbg !3077

; <label>:120:                                    ; preds = %111
  tail call void @sdsfree(i8* %113) #8, !dbg !3078
  %121 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !3079
  %122 = load %struct.clusterLink*, %struct.clusterLink** %121, align 8, !dbg !3079, !tbaa !1153
  %123 = icmp eq %struct.clusterLink* %122, null, !dbg !3081
  br i1 %123, label %144, label %124, !dbg !3082

; <label>:124:                                    ; preds = %120
  %125 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %122, i64 0, i32 1, !dbg !3085
  %126 = load i32, i32* %125, align 8, !dbg !3085, !tbaa !2117
  %127 = icmp eq i32 %126, -1, !dbg !3086
  br i1 %127, label %130, label %128, !dbg !3087

; <label>:128:                                    ; preds = %124
  %129 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !3088, !tbaa !1910
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* %129, i32 %126, i32 3) #8, !dbg !3089
  br label %130, !dbg !3090

; <label>:130:                                    ; preds = %128, %124
  %131 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %122, i64 0, i32 2, !dbg !3091
  %132 = load i8*, i8** %131, align 8, !dbg !3091, !tbaa !2106
  tail call void @sdsfree(i8* %132) #8, !dbg !3092
  %133 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %122, i64 0, i32 3, !dbg !3093
  %134 = load i8*, i8** %133, align 8, !dbg !3093, !tbaa !2110
  tail call void @sdsfree(i8* %134) #8, !dbg !3094
  %135 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %122, i64 0, i32 4, !dbg !3095
  %136 = load %struct.clusterNode*, %struct.clusterNode** %135, align 8, !dbg !3095, !tbaa !2113
  %137 = icmp eq %struct.clusterNode* %136, null, !dbg !3096
  br i1 %137, label %140, label %138, !dbg !3097

; <label>:138:                                    ; preds = %130
  %139 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %136, i64 0, i32 19, !dbg !3098
  store %struct.clusterLink* null, %struct.clusterLink** %139, align 8, !dbg !3099, !tbaa !1153
  br label %140, !dbg !3100

; <label>:140:                                    ; preds = %130, %138
  %141 = load i32, i32* %125, align 8, !dbg !3101, !tbaa !2117
  %142 = tail call i32 @close(i32 %141) #8, !dbg !3102
  %143 = bitcast %struct.clusterLink* %122 to i8*, !dbg !3103
  tail call void @zfree(i8* %143) #8, !dbg !3104
  br label %144, !dbg !3105

; <label>:144:                                    ; preds = %120, %140
  %145 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !3106
  %146 = load %struct.list*, %struct.list** %145, align 8, !dbg !3106, !tbaa !1163
  tail call void @listRelease(%struct.list* %146) #8, !dbg !3107
  %147 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7, !dbg !3108
  %148 = bitcast %struct.clusterNode*** %147 to i8**, !dbg !3108
  %149 = load i8*, i8** %148, align 8, !dbg !3108, !tbaa !1030
  tail call void @zfree(i8* %149) #8, !dbg !3109
  %150 = bitcast %struct.clusterNode* %0 to i8*, !dbg !3110
  tail call void @zfree(i8* %150) #8, !dbg !3111
  ret void, !dbg !3112
}

; Function Attrs: noredzone
declare dso_local void @listRelease(%struct.list*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dictAdd(%struct.dict*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictFind(%struct.dict*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterRenameNode(%struct.clusterNode*, i8*) local_unnamed_addr #0 !dbg !3113 {
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3123
  %4 = tail call i8* @sdsnewlen(i8* nonnull %3, i64 40) #8, !dbg !3124
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8* nonnull %3, i8* %1) #8, !dbg !3126
  %5 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3127, !tbaa !784
  %6 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %5, i64 0, i32 4, !dbg !3128
  %7 = load %struct.dict*, %struct.dict** %6, align 8, !dbg !3128, !tbaa !832
  %8 = tail call i32 @dictDelete(%struct.dict* %7, i8* %4) #8, !dbg !3129
  tail call void @sdsfree(i8* %4) #8, !dbg !3131
  %9 = icmp eq i32 %8, 0, !dbg !3132
  br i1 %9, label %11, label %10, !dbg !3132

; <label>:10:                                     ; preds = %2
  tail call void @_serverAssert(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 958) #8, !dbg !3132
  tail call void @_exit(i32 1) #10, !dbg !3132
  unreachable, !dbg !3132

; <label>:11:                                     ; preds = %2
  %12 = tail call i8* @memcpy(i8* nonnull %3, i8* %1, i64 40) #8, !dbg !3133
  %13 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3136, !tbaa !784
  %14 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %13, i64 0, i32 4, !dbg !3137
  %15 = load %struct.dict*, %struct.dict** %14, align 8, !dbg !3137, !tbaa !832
  %16 = tail call i8* @sdsnewlen(i8* nonnull %3, i64 40) #8, !dbg !3138
  %17 = bitcast %struct.clusterNode* %0 to i8*, !dbg !3139
  %18 = tail call i32 @dictAdd(%struct.dict* %15, i8* %16, i8* %17) #8, !dbg !3140
  ret void, !dbg !3142
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterBumpConfigEpochWithoutConsensus() local_unnamed_addr #0 !dbg !3143 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3150, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 4, !dbg !3151
  %3 = load %struct.dict*, %struct.dict** %2, align 8, !dbg !3151, !tbaa !832
  %4 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %3) #8, !dbg !3152
  %5 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #8, !dbg !3154
  %6 = icmp eq %struct.dictEntry* %5, null, !dbg !3156
  br i1 %6, label %19, label %7, !dbg !3157

; <label>:7:                                      ; preds = %0, %7
  %8 = phi %struct.dictEntry* [ %17, %7 ], [ %5, %0 ]
  %9 = phi i64 [ %16, %7 ], [ 0, %0 ]
  %10 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %8, i64 0, i32 1, i32 0, !dbg !3158
  %11 = bitcast i8** %10 to %struct.clusterNode**, !dbg !3158
  %12 = load %struct.clusterNode*, %struct.clusterNode** %11, align 8, !dbg !3158, !tbaa !745
  %13 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %12, i64 0, i32 3, !dbg !3160
  %14 = load i64, i64* %13, align 8, !dbg !3160, !tbaa !1075
  %15 = icmp ugt i64 %14, %9, !dbg !3161
  %16 = select i1 %15, i64 %14, i64 %9, !dbg !3162
  %17 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #8, !dbg !3154
  %18 = icmp eq %struct.dictEntry* %17, null, !dbg !3156
  br i1 %18, label %19, label %7, !dbg !3157, !llvm.loop !1277

; <label>:19:                                     ; preds = %7, %0
  %20 = phi i64 [ 0, %0 ], [ %16, %7 ], !dbg !3163
  tail call void @dictReleaseIterator(%struct.dictIterator* %4) #8, !dbg !3164
  %21 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3165, !tbaa !784
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %21, i64 0, i32 1, !dbg !3166
  %23 = load i64, i64* %22, align 8, !dbg !3166, !tbaa !793
  %24 = icmp ult i64 %20, %23, !dbg !3167
  %25 = select i1 %24, i64 %23, i64 %20, !dbg !3168
  %26 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3170, !tbaa !757
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 3, !dbg !3172
  %28 = load i64, i64* %27, align 8, !dbg !3172, !tbaa !1075
  %29 = icmp ne i64 %28, 0, !dbg !3173
  %30 = icmp eq i64 %28, %25, !dbg !3174
  %31 = and i1 %29, %30, !dbg !3175
  br i1 %31, label %37, label %32, !dbg !3175

; <label>:32:                                     ; preds = %19
  %33 = add i64 %23, 1, !dbg !3176
  store i64 %33, i64* %22, align 8, !dbg !3176, !tbaa !793
  store i64 %33, i64* %27, align 8, !dbg !3178, !tbaa !1075
  %34 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %21, i64 0, i32 22, !dbg !3181
  %35 = load i32, i32* %34, align 8, !dbg !3182, !tbaa !1465
  %36 = or i32 %35, 12, !dbg !3182
  store i32 %36, i32* %34, align 8, !dbg !3182, !tbaa !1465
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.36, i64 0, i64 0), i64 %33) #8, !dbg !3183
  br label %37, !dbg !3184

; <label>:37:                                     ; preds = %19, %32
  %38 = phi i32 [ 0, %32 ], [ -1, %19 ], !dbg !3185
  ret i32 %38, !dbg !3187
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterHandleConfigEpochCollision(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3188 {
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 3, !dbg !3192
  %3 = load i64, i64* %2, align 8, !dbg !3192, !tbaa !1075
  %4 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3194, !tbaa !757
  %5 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 3, !dbg !3195
  %6 = load i64, i64* %5, align 8, !dbg !3195, !tbaa !1075
  %7 = icmp eq i64 %3, %6, !dbg !3196
  br i1 %7, label %8, label %37, !dbg !3197

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !3198
  %10 = load i32, i32* %9, align 8, !dbg !3198, !tbaa !918
  %11 = and i32 %10, 1, !dbg !3198
  %12 = icmp eq i32 %11, 0, !dbg !3198
  br i1 %12, label %37, label %13, !dbg !3199

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 2, !dbg !3200
  %15 = load i32, i32* %14, align 8, !dbg !3200, !tbaa !918
  %16 = and i32 %15, 1, !dbg !3200
  %17 = icmp eq i32 %16, 0, !dbg !3200
  br i1 %17, label %37, label %18, !dbg !3201

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3202
  %20 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 1, i64 0, !dbg !3204
  %21 = tail call i32 @memcmp(i8* nonnull %19, i8* nonnull %20, i64 40) #8, !dbg !3205
  %22 = icmp slt i32 %21, 1, !dbg !3206
  br i1 %22, label %37, label %23, !dbg !3207

; <label>:23:                                     ; preds = %18
  %24 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3208, !tbaa !784
  %25 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %24, i64 0, i32 1, !dbg !3209
  %26 = load i64, i64* %25, align 8, !dbg !3210, !tbaa !793
  %27 = add i64 %26, 1, !dbg !3210
  store i64 %27, i64* %25, align 8, !dbg !3210, !tbaa !793
  %28 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3211, !tbaa !757
  %29 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %28, i64 0, i32 3, !dbg !3212
  store i64 %27, i64* %29, align 8, !dbg !3213, !tbaa !1075
  %30 = tail call i32 @clusterSaveConfig(i32 1) #8, !dbg !3216
  %31 = icmp eq i32 %30, -1, !dbg !3217
  br i1 %31, label %32, label %33, !dbg !3218

; <label>:32:                                     ; preds = %23
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #8, !dbg !3219
  tail call void @exit(i32 1) #10, !dbg !3220
  unreachable, !dbg !3220

; <label>:33:                                     ; preds = %23
  %34 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3221, !tbaa !757
  %35 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %34, i64 0, i32 3, !dbg !3222
  %36 = load i64, i64* %35, align 8, !dbg !3222, !tbaa !1075
  tail call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.37, i64 0, i64 0), i8* nonnull %19, i64 %36) #8, !dbg !3223
  br label %37, !dbg !3224

; <label>:37:                                     ; preds = %13, %8, %1, %18, %33
  ret void, !dbg !3224
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterBlacklistCleanup() local_unnamed_addr #0 !dbg !3225 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3231, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 5, !dbg !3232
  %3 = load %struct.dict*, %struct.dict** %2, align 8, !dbg !3232, !tbaa !1763
  %4 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %3) #8, !dbg !3233
  %5 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #8, !dbg !3235
  %6 = icmp eq %struct.dictEntry* %5, null, !dbg !3237
  br i1 %6, label %24, label %7, !dbg !3238

; <label>:7:                                      ; preds = %0, %21
  %8 = phi %struct.dictEntry* [ %22, %21 ], [ %5, %0 ]
  %9 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %8, i64 0, i32 1, !dbg !3239
  %10 = bitcast %union.anon.2* %9 to i64*, !dbg !3239
  %11 = load i64, i64* %10, align 8, !dbg !3239, !tbaa !745
  %12 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !3241, !tbaa !3243
  %13 = icmp slt i64 %11, %12, !dbg !3244
  br i1 %13, label %14, label %21, !dbg !3245

; <label>:14:                                     ; preds = %7
  %15 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3246, !tbaa !784
  %16 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 5, !dbg !3247
  %17 = load %struct.dict*, %struct.dict** %16, align 8, !dbg !3247, !tbaa !1763
  %18 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %8, i64 0, i32 0, !dbg !3248
  %19 = load i8*, i8** %18, align 8, !dbg !3248, !tbaa !3249
  %20 = tail call i32 @dictDelete(%struct.dict* %17, i8* %19) #8, !dbg !3251
  br label %21, !dbg !3251

; <label>:21:                                     ; preds = %14, %7
  %22 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #8, !dbg !3235
  %23 = icmp eq %struct.dictEntry* %22, null, !dbg !3237
  br i1 %23, label %24, label %7, !dbg !3238, !llvm.loop !3252

; <label>:24:                                     ; preds = %21, %0
  tail call void @dictReleaseIterator(%struct.dictIterator* %4) #8, !dbg !3254
  ret void, !dbg !3255
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterBlacklistAddNode(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3256 {
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3262
  %3 = tail call i8* @sdsnewlen(i8* nonnull %2, i64 40) #8, !dbg !3263
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3265, !tbaa !784
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 5, !dbg !3267
  %6 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !3267, !tbaa !1763
  %7 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %6) #8, !dbg !3268
  %8 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %7) #8, !dbg !3270
  %9 = icmp eq %struct.dictEntry* %8, null, !dbg !3272
  br i1 %9, label %27, label %10, !dbg !3273

; <label>:10:                                     ; preds = %1, %24
  %11 = phi %struct.dictEntry* [ %25, %24 ], [ %8, %1 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %11, i64 0, i32 1, !dbg !3274
  %13 = bitcast %union.anon.2* %12 to i64*, !dbg !3274
  %14 = load i64, i64* %13, align 8, !dbg !3274, !tbaa !745
  %15 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !3276, !tbaa !3243
  %16 = icmp slt i64 %14, %15, !dbg !3277
  br i1 %16, label %17, label %24, !dbg !3278

; <label>:17:                                     ; preds = %10
  %18 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3279, !tbaa !784
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %18, i64 0, i32 5, !dbg !3280
  %20 = load %struct.dict*, %struct.dict** %19, align 8, !dbg !3280, !tbaa !1763
  %21 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %11, i64 0, i32 0, !dbg !3281
  %22 = load i8*, i8** %21, align 8, !dbg !3281, !tbaa !3249
  %23 = tail call i32 @dictDelete(%struct.dict* %20, i8* %22) #8, !dbg !3282
  br label %24, !dbg !3282

; <label>:24:                                     ; preds = %17, %10
  %25 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %7) #8, !dbg !3270
  %26 = icmp eq %struct.dictEntry* %25, null, !dbg !3272
  br i1 %26, label %27, label %10, !dbg !3273, !llvm.loop !3252

; <label>:27:                                     ; preds = %24, %1
  tail call void @dictReleaseIterator(%struct.dictIterator* %7) #8, !dbg !3283
  %28 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3284, !tbaa !784
  %29 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 5, !dbg !3286
  %30 = load %struct.dict*, %struct.dict** %29, align 8, !dbg !3286, !tbaa !1763
  %31 = tail call i32 @dictAdd(%struct.dict* %30, i8* %3, i8* null) #8, !dbg !3287
  %32 = icmp eq i32 %31, 0, !dbg !3288
  br i1 %32, label %33, label %35, !dbg !3289

; <label>:33:                                     ; preds = %27
  %34 = tail call i8* @sdsdup(i8* %3) #8, !dbg !3290
  br label %35, !dbg !3292

; <label>:35:                                     ; preds = %33, %27
  %36 = phi i8* [ %34, %33 ], [ %3, %27 ], !dbg !3293
  %37 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3294, !tbaa !784
  %38 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %37, i64 0, i32 5, !dbg !3295
  %39 = load %struct.dict*, %struct.dict** %38, align 8, !dbg !3295, !tbaa !1763
  %40 = tail call %struct.dictEntry* @dictFind(%struct.dict* %39, i8* %36) #8, !dbg !3296
  %41 = tail call i64 @time(i64* null) #8, !dbg !3298
  %42 = add nsw i64 %41, 60, !dbg !3298
  %43 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %40, i64 0, i32 1, !dbg !3298
  %44 = bitcast %union.anon.2* %43 to i64*, !dbg !3298
  store i64 %42, i64* %44, align 8, !dbg !3298, !tbaa !745
  tail call void @sdsfree(i8* %36) #8, !dbg !3300
  ret void, !dbg !3301
}

; Function Attrs: noredzone
declare dso_local i8* @sdsdup(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @time(i64*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterBlacklistExists(i8*) local_unnamed_addr #0 !dbg !3302 {
  %2 = tail call i8* @sdsnewlen(i8* %0, i64 40) #8, !dbg !3308
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3310, !tbaa !784
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 5, !dbg !3312
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !3312, !tbaa !1763
  %6 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %5) #8, !dbg !3313
  %7 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #8, !dbg !3315
  %8 = icmp eq %struct.dictEntry* %7, null, !dbg !3317
  br i1 %8, label %26, label %9, !dbg !3318

; <label>:9:                                      ; preds = %1, %23
  %10 = phi %struct.dictEntry* [ %24, %23 ], [ %7, %1 ]
  %11 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, !dbg !3319
  %12 = bitcast %union.anon.2* %11 to i64*, !dbg !3319
  %13 = load i64, i64* %12, align 8, !dbg !3319, !tbaa !745
  %14 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !3321, !tbaa !3243
  %15 = icmp slt i64 %13, %14, !dbg !3322
  br i1 %15, label %16, label %23, !dbg !3323

; <label>:16:                                     ; preds = %9
  %17 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3324, !tbaa !784
  %18 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %17, i64 0, i32 5, !dbg !3325
  %19 = load %struct.dict*, %struct.dict** %18, align 8, !dbg !3325, !tbaa !1763
  %20 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 0, !dbg !3326
  %21 = load i8*, i8** %20, align 8, !dbg !3326, !tbaa !3249
  %22 = tail call i32 @dictDelete(%struct.dict* %19, i8* %21) #8, !dbg !3327
  br label %23, !dbg !3327

; <label>:23:                                     ; preds = %16, %9
  %24 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #8, !dbg !3315
  %25 = icmp eq %struct.dictEntry* %24, null, !dbg !3317
  br i1 %25, label %26, label %9, !dbg !3318, !llvm.loop !3252

; <label>:26:                                     ; preds = %23, %1
  tail call void @dictReleaseIterator(%struct.dictIterator* %6) #8, !dbg !3328
  %27 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3329, !tbaa !784
  %28 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %27, i64 0, i32 5, !dbg !3330
  %29 = load %struct.dict*, %struct.dict** %28, align 8, !dbg !3330, !tbaa !1763
  %30 = tail call %struct.dictEntry* @dictFind(%struct.dict* %29, i8* %2) #8, !dbg !3331
  %31 = icmp ne %struct.dictEntry* %30, null, !dbg !3332
  %32 = zext i1 %31 to i32, !dbg !3332
  tail call void @sdsfree(i8* %2) #8, !dbg !3334
  ret i32 %32, !dbg !3335
}

; Function Attrs: noredzone nounwind
define dso_local void @markNodeAsFailingIfNeeded(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3336 {
  %2 = alloca %struct.listIter, align 8
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3342, !tbaa !784
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 3, !dbg !3343
  %5 = load i32, i32* %4, align 4, !dbg !3343, !tbaa !1752
  %6 = sdiv i32 %5, 2, !dbg !3344
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !3346
  %8 = load i32, i32* %7, align 8, !dbg !3346, !tbaa !918
  %9 = and i32 %8, 12, !dbg !3348
  %10 = icmp eq i32 %9, 4, !dbg !3348
  br i1 %10, label %11, label %62, !dbg !3348

; <label>:11:                                     ; preds = %1
  %12 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !3353
  %13 = load %struct.list*, %struct.list** %12, align 8, !dbg !3353, !tbaa !1163
  %14 = bitcast %struct.listIter* %2 to i8*, !dbg !3355
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9, !dbg !3355
  %15 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !3356, !tbaa !2858
  %16 = shl nsw i64 %15, 1, !dbg !3357
  %17 = tail call i64 @mstime() #8, !dbg !3359
  call void @listRewind(%struct.list* %13, %struct.listIter* nonnull %2) #8, !dbg !3362
  %18 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #8, !dbg !3363
  %19 = icmp eq %struct.listNode* %18, null, !dbg !3365
  br i1 %19, label %33, label %20, !dbg !3366

; <label>:20:                                     ; preds = %11, %30
  %21 = phi %struct.listNode* [ %31, %30 ], [ %18, %11 ]
  %22 = getelementptr inbounds %struct.listNode, %struct.listNode* %21, i64 0, i32 2, !dbg !3367
  %23 = bitcast i8** %22 to %struct.clusterNodeFailReport**, !dbg !3367
  %24 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %23, align 8, !dbg !3367, !tbaa !2817
  %25 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %24, i64 0, i32 1, !dbg !3369
  %26 = load i64, i64* %25, align 8, !dbg !3369, !tbaa !2832
  %27 = sub nsw i64 %17, %26, !dbg !3370
  %28 = icmp sgt i64 %27, %16, !dbg !3371
  br i1 %28, label %29, label %30, !dbg !3372

; <label>:29:                                     ; preds = %20
  call void @listDelNode(%struct.list* %13, %struct.listNode* nonnull %21) #8, !dbg !3373
  br label %30, !dbg !3373

; <label>:30:                                     ; preds = %29, %20
  %31 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #8, !dbg !3363
  %32 = icmp eq %struct.listNode* %31, null, !dbg !3365
  br i1 %32, label %33, label %20, !dbg !3366, !llvm.loop !2878

; <label>:33:                                     ; preds = %30, %11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9, !dbg !3374
  %34 = load %struct.list*, %struct.list** %12, align 8, !dbg !3375, !tbaa !1163
  %35 = getelementptr inbounds %struct.list, %struct.list* %34, i64 0, i32 5, !dbg !3375
  %36 = load i64, i64* %35, align 8, !dbg !3375, !tbaa !2967
  %37 = trunc i64 %36 to i32, !dbg !3375
  %38 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3377, !tbaa !757
  %39 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %38, i64 0, i32 2, !dbg !3377
  %40 = load i32, i32* %39, align 8, !dbg !3377, !tbaa !918
  %41 = and i32 %40, 1, !dbg !3377
  %42 = add nsw i32 %41, %37, !dbg !3379
  %43 = icmp sgt i32 %42, %6, !dbg !3380
  br i1 %43, label %44, label %62, !dbg !3382

; <label>:44:                                     ; preds = %33
  %45 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3383
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.38, i64 0, i64 0), i8* nonnull %45) #8, !dbg !3384
  %46 = load i32, i32* %7, align 8, !dbg !3385, !tbaa !918
  %47 = and i32 %46, -13, !dbg !3385
  %48 = or i32 %47, 8, !dbg !3386
  store i32 %48, i32* %7, align 8, !dbg !3386, !tbaa !918
  %49 = call i64 @mstime() #8, !dbg !3387
  %50 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 11, !dbg !3388
  store i64 %49, i64* %50, align 8, !dbg !3389, !tbaa !945
  %51 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3390, !tbaa !757
  %52 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %51, i64 0, i32 2, !dbg !3390
  %53 = load i32, i32* %52, align 8, !dbg !3390, !tbaa !918
  %54 = and i32 %53, 1, !dbg !3390
  %55 = icmp eq i32 %54, 0, !dbg !3390
  br i1 %55, label %57, label %56, !dbg !3392

; <label>:56:                                     ; preds = %44
  call void @clusterSendFail(i8* nonnull %45) #12, !dbg !3393
  br label %57, !dbg !3393

; <label>:57:                                     ; preds = %44, %56
  %58 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3396, !tbaa !784
  %59 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %58, i64 0, i32 22, !dbg !3397
  %60 = load i32, i32* %59, align 8, !dbg !3398, !tbaa !1465
  %61 = or i32 %60, 6, !dbg !3398
  store i32 %61, i32* %59, align 8, !dbg !3398, !tbaa !1465
  br label %62, !dbg !3399

; <label>:62:                                     ; preds = %1, %33, %57
  ret void, !dbg !3399
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendFail(i8*) local_unnamed_addr #0 !dbg !3400 {
  %2 = alloca %struct.clusterMsg, align 16
  %3 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 0, i64 0, !dbg !3409
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %3) #9, !dbg !3409
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %2, i32 3) #12, !dbg !3412
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 18, !dbg !3413
  %5 = bitcast %union.clusterMsgData* %4 to i8*, !dbg !3414
  %6 = call i8* @memcpy(i8* nonnull %5, i8* %0, i64 40) #8, !dbg !3415
  %7 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 1, !dbg !3416
  %8 = load i32, i32* %7, align 4, !dbg !3416, !tbaa !2627
  %9 = call i32 @lwip_htonl(i32 %8) #8, !dbg !3416
  %10 = zext i32 %9 to i64, !dbg !3416
  %11 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3430, !tbaa !784
  %12 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 4, !dbg !3431
  %13 = load %struct.dict*, %struct.dict** %12, align 8, !dbg !3431, !tbaa !832
  %14 = call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %13) #8, !dbg !3432
  %15 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %14) #8, !dbg !3434
  %16 = icmp eq %struct.dictEntry* %15, null, !dbg !3436
  br i1 %16, label %34, label %17, !dbg !3437

; <label>:17:                                     ; preds = %1, %31
  %18 = phi %struct.dictEntry* [ %32, %31 ], [ %15, %1 ]
  %19 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %18, i64 0, i32 1, i32 0, !dbg !3438
  %20 = bitcast i8** %19 to %struct.clusterNode**, !dbg !3438
  %21 = load %struct.clusterNode*, %struct.clusterNode** %20, align 8, !dbg !3438, !tbaa !745
  %22 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %21, i64 0, i32 19, !dbg !3440
  %23 = load %struct.clusterLink*, %struct.clusterLink** %22, align 8, !dbg !3440, !tbaa !1153
  %24 = icmp eq %struct.clusterLink* %23, null, !dbg !3442
  br i1 %24, label %31, label %25, !dbg !3443, !llvm.loop !3444

; <label>:25:                                     ; preds = %17
  %26 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %21, i64 0, i32 2, !dbg !3447
  %27 = load i32, i32* %26, align 8, !dbg !3447, !tbaa !918
  %28 = and i32 %27, 48, !dbg !3449
  %29 = icmp eq i32 %28, 0, !dbg !3449
  br i1 %29, label %30, label %31, !dbg !3450, !llvm.loop !3444

; <label>:30:                                     ; preds = %25
  call void @clusterSendMessage(%struct.clusterLink* nonnull %23, i8* nonnull %3, i64 %10) #8, !dbg !3451
  br label %31, !dbg !3452

; <label>:31:                                     ; preds = %30, %25, %17
  %32 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %14) #8, !dbg !3434
  %33 = icmp eq %struct.dictEntry* %32, null, !dbg !3436
  br i1 %33, label %34, label %17, !dbg !3437

; <label>:34:                                     ; preds = %31, %1
  call void @dictReleaseIterator(%struct.dictIterator* %14) #8, !dbg !3453
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %3) #9, !dbg !3454
  ret void, !dbg !3454
}

; Function Attrs: noredzone nounwind
define dso_local void @clearNodeFailureIfNeeded(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3455 {
  %2 = tail call i64 @mstime() #8, !dbg !3460
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !3462
  %4 = load i32, i32* %3, align 8, !dbg !3462, !tbaa !918
  %5 = and i32 %4, 8, !dbg !3462
  %6 = icmp eq i32 %5, 0, !dbg !3462
  br i1 %6, label %7, label %8, !dbg !3462

; <label>:7:                                      ; preds = %1
  tail call void @_serverAssert(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 1226) #8, !dbg !3462
  tail call void @_exit(i32 1) #10, !dbg !3462
  unreachable, !dbg !3462

; <label>:8:                                      ; preds = %1
  %9 = and i32 %4, 2, !dbg !3463
  %10 = icmp eq i32 %9, 0, !dbg !3463
  br i1 %10, label %11, label %15, !dbg !3465

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5, !dbg !3466
  %13 = load i32, i32* %12, align 8, !dbg !3466, !tbaa !1139
  %14 = icmp eq i32 %13, 0, !dbg !3467
  br i1 %14, label %15, label %24, !dbg !3468

; <label>:15:                                     ; preds = %8, %11
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3469
  %17 = select i1 %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0), !dbg !3471
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.40, i64 0, i64 0), i8* nonnull %16, i8* %17) #8, !dbg !3472
  %18 = load i32, i32* %3, align 8, !dbg !3473, !tbaa !918
  %19 = and i32 %18, -9, !dbg !3473
  store i32 %19, i32* %3, align 8, !dbg !3473, !tbaa !918
  %20 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3476, !tbaa !784
  %21 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %20, i64 0, i32 22, !dbg !3477
  %22 = load i32, i32* %21, align 8, !dbg !3478, !tbaa !1465
  %23 = or i32 %22, 6, !dbg !3478
  store i32 %23, i32* %21, align 8, !dbg !3478, !tbaa !1465
  br label %24, !dbg !3479

; <label>:24:                                     ; preds = %15, %11
  %25 = phi i32 [ %19, %15 ], [ %4, %11 ], !dbg !3480
  %26 = and i32 %25, 1, !dbg !3480
  %27 = icmp eq i32 %26, 0, !dbg !3480
  br i1 %27, label %47, label %28, !dbg !3482

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5, !dbg !3483
  %30 = load i32, i32* %29, align 8, !dbg !3483, !tbaa !1139
  %31 = icmp sgt i32 %30, 0, !dbg !3484
  br i1 %31, label %32, label %47, !dbg !3485

; <label>:32:                                     ; preds = %28
  %33 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 11, !dbg !3486
  %34 = load i64, i64* %33, align 8, !dbg !3486, !tbaa !945
  %35 = sub nsw i64 %2, %34, !dbg !3487
  %36 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !3488, !tbaa !2858
  %37 = shl nsw i64 %36, 1, !dbg !3489
  %38 = icmp sgt i64 %35, %37, !dbg !3490
  br i1 %38, label %39, label %47, !dbg !3491

; <label>:39:                                     ; preds = %32
  %40 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3492
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.43, i64 0, i64 0), i8* nonnull %40) #8, !dbg !3494
  %41 = load i32, i32* %3, align 8, !dbg !3495, !tbaa !918
  %42 = and i32 %41, -9, !dbg !3495
  store i32 %42, i32* %3, align 8, !dbg !3495, !tbaa !918
  %43 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3498, !tbaa !784
  %44 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %43, i64 0, i32 22, !dbg !3499
  %45 = load i32, i32* %44, align 8, !dbg !3500, !tbaa !1465
  %46 = or i32 %45, 6, !dbg !3500
  store i32 %46, i32* %44, align 8, !dbg !3500, !tbaa !1465
  br label %47, !dbg !3501

; <label>:47:                                     ; preds = %24, %39, %32, %28
  ret void, !dbg !3502
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterHandshakeInProgress(i8* readonly, i32, i32) local_unnamed_addr #0 !dbg !3503 {
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3517, !tbaa !784
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 4, !dbg !3518
  %6 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !3518, !tbaa !832
  %7 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %6) #8, !dbg !3519
  %8 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %7) #8, !dbg !3521
  %9 = icmp eq %struct.dictEntry* %8, null, !dbg !3523
  br i1 %9, label %34, label %10, !dbg !3524

; <label>:10:                                     ; preds = %3, %31
  %11 = phi %struct.dictEntry* [ %32, %31 ], [ %8, %3 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %11, i64 0, i32 1, i32 0, !dbg !3525
  %13 = bitcast i8** %12 to %struct.clusterNode**, !dbg !3525
  %14 = load %struct.clusterNode*, %struct.clusterNode** %13, align 8, !dbg !3525, !tbaa !745
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 2, !dbg !3527
  %16 = load i32, i32* %15, align 8, !dbg !3527, !tbaa !918
  %17 = and i32 %16, 32, !dbg !3527
  %18 = icmp eq i32 %17, 0, !dbg !3527
  br i1 %18, label %31, label %19, !dbg !3529

; <label>:19:                                     ; preds = %10
  %20 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 16, i64 0, !dbg !3530
  %21 = tail call i32 @strcasecmp(i8* nonnull %20, i8* %0) #11, !dbg !3532
  %22 = icmp eq i32 %21, 0, !dbg !3532
  br i1 %22, label %23, label %31, !dbg !3533

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 17, !dbg !3534
  %25 = load i32, i32* %24, align 8, !dbg !3534, !tbaa !891
  %26 = icmp eq i32 %25, %1, !dbg !3535
  br i1 %26, label %27, label %31, !dbg !3536

; <label>:27:                                     ; preds = %23
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 18, !dbg !3537
  %29 = load i32, i32* %28, align 4, !dbg !3537, !tbaa !898
  %30 = icmp eq i32 %29, %2, !dbg !3538
  br i1 %30, label %34, label %31, !dbg !3539

; <label>:31:                                     ; preds = %23, %27, %19, %10
  %32 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %7) #8, !dbg !3521
  %33 = icmp eq %struct.dictEntry* %32, null, !dbg !3523
  br i1 %33, label %34, label %10, !dbg !3524, !llvm.loop !3540

; <label>:34:                                     ; preds = %27, %31, %3
  %35 = phi i32 [ 0, %3 ], [ 1, %27 ], [ 0, %31 ], !dbg !3523
  tail call void @dictReleaseIterator(%struct.dictIterator* %7) #8, !dbg !3542
  ret i32 %35, !dbg !3543
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterStartHandshake(i8*, i32, i32) local_unnamed_addr #0 !dbg !3544 {
  %4 = alloca [46 x i8], align 16
  %5 = alloca %struct.sockaddr_storage, align 4
  %6 = getelementptr inbounds [46 x i8], [46 x i8]* %4, i64 0, i64 0, !dbg !3564
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %6) #9, !dbg !3564
  %7 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 0, !dbg !3566
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %7) #9, !dbg !3566
  %8 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 3, !dbg !3567
  %9 = bitcast [3 x i32]* %8 to i8*, !dbg !3569
  %10 = call i32 @inet_pton(i32 2, i8* %0, i8* nonnull %9) #8, !dbg !3570
  %11 = icmp eq i32 %10, 0, !dbg !3570
  br i1 %11, label %12, label %19, !dbg !3571

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 3, i64 1, !dbg !3572
  %14 = bitcast i32* %13 to i8*, !dbg !3574
  %15 = call i32 @inet_pton(i32 10, i8* %0, i8* nonnull %14) #8, !dbg !3575
  %16 = icmp eq i32 %15, 0, !dbg !3575
  br i1 %16, label %17, label %19, !dbg !3576

; <label>:17:                                     ; preds = %12
  %18 = call i32* @__errno() #8, !dbg !3577
  store i32 22, i32* %18, align 4, !dbg !3579, !tbaa !708
  br label %94, !dbg !3580

; <label>:19:                                     ; preds = %12, %3
  %20 = phi i8 [ 2, %3 ], [ 10, %12 ]
  %21 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 1, !dbg !3581
  store i8 %20, i8* %21, align 1, !dbg !3581, !tbaa !3583
  %22 = add i32 %1, -1, !dbg !3585
  %23 = icmp ugt i32 %22, 65534, !dbg !3585
  %24 = add i32 %2, -1, !dbg !3585
  %25 = icmp ugt i32 %24, 65534, !dbg !3585
  %26 = or i1 %23, %25, !dbg !3585
  br i1 %26, label %27, label %29, !dbg !3585

; <label>:27:                                     ; preds = %19
  %28 = call i32* @__errno() #8, !dbg !3587
  store i32 22, i32* %28, align 4, !dbg !3589, !tbaa !708
  br label %94, !dbg !3590

; <label>:29:                                     ; preds = %19
  %30 = call i8* @memset(i8* nonnull %6, i32 0, i64 46) #8, !dbg !3591
  %31 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 1, !dbg !3592
  %32 = load i8, i8* %31, align 1, !dbg !3592, !tbaa !3583
  %33 = icmp eq i8 %32, 2, !dbg !3594
  br i1 %33, label %34, label %36, !dbg !3595

; <label>:34:                                     ; preds = %29
  %35 = call i8* @inet_ntop(i32 2, i8* nonnull %9, i8* nonnull %6, i32 46) #8, !dbg !3596
  br label %40, !dbg !3596

; <label>:36:                                     ; preds = %29
  %37 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 3, i64 1, !dbg !3597
  %38 = bitcast i32* %37 to i8*, !dbg !3598
  %39 = call i8* @inet_ntop(i32 10, i8* nonnull %38, i8* nonnull %6, i32 46) #8, !dbg !3599
  br label %40

; <label>:40:                                     ; preds = %36, %34
  %41 = call i32 @clusterHandshakeInProgress(i8* nonnull %6, i32 %1, i32 %2) #12, !dbg !3600
  %42 = icmp eq i32 %41, 0, !dbg !3600
  br i1 %42, label %45, label %43, !dbg !3602

; <label>:43:                                     ; preds = %40
  %44 = call i32* @__errno() #8, !dbg !3603
  store i32 11, i32* %44, align 4, !dbg !3605, !tbaa !708
  br label %94, !dbg !3606

; <label>:45:                                     ; preds = %40
  %46 = call i8* @zmalloc(i64 2264) #8, !dbg !3610
  %47 = getelementptr inbounds i8, i8* %46, i64 8, !dbg !3612
  call void @getRandomHexChars(i8* nonnull %47, i64 40) #8, !dbg !3613
  %48 = call i64 @mstime() #8, !dbg !3614
  %49 = bitcast i8* %46 to i64*, !dbg !3615
  store i64 %48, i64* %49, align 8, !dbg !3616, !tbaa !1130
  %50 = getelementptr inbounds i8, i8* %46, i64 56, !dbg !3617
  %51 = bitcast i8* %50 to i64*, !dbg !3617
  store i64 0, i64* %51, align 8, !dbg !3618, !tbaa !1075
  %52 = getelementptr inbounds i8, i8* %46, i64 48, !dbg !3619
  %53 = bitcast i8* %52 to i32*, !dbg !3619
  store i32 160, i32* %53, align 8, !dbg !3620, !tbaa !918
  %54 = getelementptr inbounds i8, i8* %46, i64 64, !dbg !3621
  %55 = call i8* @memset(i8* nonnull %54, i32 0, i64 2048) #8, !dbg !3622
  %56 = getelementptr inbounds i8, i8* %46, i64 2112, !dbg !3623
  %57 = bitcast i8* %56 to i32*, !dbg !3623
  store i32 0, i32* %57, align 8, !dbg !3624, !tbaa !1139
  %58 = getelementptr inbounds i8, i8* %46, i64 2116, !dbg !3625
  %59 = bitcast i8* %58 to i32*, !dbg !3625
  store i32 0, i32* %59, align 4, !dbg !3626, !tbaa !1027
  %60 = getelementptr inbounds i8, i8* %46, i64 2120, !dbg !3627
  %61 = bitcast i8* %60 to %struct.clusterNode***, !dbg !3627
  store %struct.clusterNode** null, %struct.clusterNode*** %61, align 8, !dbg !3628, !tbaa !1030
  %62 = getelementptr inbounds i8, i8* %46, i64 2128, !dbg !3629
  %63 = bitcast i8* %62 to %struct.clusterNode**, !dbg !3629
  store %struct.clusterNode* null, %struct.clusterNode** %63, align 8, !dbg !3630, !tbaa !1012
  %64 = getelementptr inbounds i8, i8* %46, i64 2136, !dbg !3631
  %65 = bitcast i8* %64 to <2 x i64>*, !dbg !3632
  store <2 x i64> zeroinitializer, <2 x i64>* %65, align 8, !dbg !3632, !tbaa !1148
  %66 = getelementptr inbounds i8, i8* %46, i64 2152, !dbg !3633
  %67 = bitcast i8* %66 to i64*, !dbg !3633
  store i64 0, i64* %67, align 8, !dbg !3634, !tbaa !945
  %68 = getelementptr inbounds i8, i8* %46, i64 2248, !dbg !3635
  %69 = bitcast i8* %68 to %struct.clusterLink**, !dbg !3635
  store %struct.clusterLink* null, %struct.clusterLink** %69, align 8, !dbg !3636, !tbaa !1153
  %70 = getelementptr inbounds i8, i8* %46, i64 2192, !dbg !3637
  %71 = call i8* @memset(i8* nonnull %70, i32 0, i64 46) #8, !dbg !3638
  %72 = getelementptr inbounds i8, i8* %46, i64 2240, !dbg !3639
  %73 = bitcast i8* %72 to i32*, !dbg !3639
  store i32 0, i32* %73, align 8, !dbg !3640, !tbaa !891
  %74 = getelementptr inbounds i8, i8* %46, i64 2244, !dbg !3641
  %75 = bitcast i8* %74 to i32*, !dbg !3641
  store i32 0, i32* %75, align 4, !dbg !3642, !tbaa !898
  %76 = call %struct.list* @listCreate() #8, !dbg !3643
  %77 = getelementptr inbounds i8, i8* %46, i64 2256, !dbg !3644
  %78 = bitcast i8* %77 to %struct.list**, !dbg !3644
  store %struct.list* %76, %struct.list** %78, align 8, !dbg !3645, !tbaa !1163
  %79 = getelementptr inbounds i8, i8* %46, i64 2160, !dbg !3646
  %80 = bitcast i8* %79 to i64*, !dbg !3646
  store i64 0, i64* %80, align 8, !dbg !3647, !tbaa !1166
  %81 = getelementptr inbounds i8, i8* %46, i64 2176, !dbg !3648
  %82 = bitcast i8* %81 to i64*, !dbg !3648
  store i64 0, i64* %82, align 8, !dbg !3649, !tbaa !1169
  %83 = getelementptr inbounds i8, i8* %46, i64 2168, !dbg !3650
  %84 = bitcast i8* %83 to i64*, !dbg !3650
  store i64 0, i64* %84, align 8, !dbg !3651, !tbaa !1172
  %85 = getelementptr inbounds i8, i8* %46, i64 2184, !dbg !3652
  %86 = bitcast i8* %85 to i64*, !dbg !3652
  store i64 0, i64* %86, align 8, !dbg !3653, !tbaa !1175
  %87 = getelementptr inbounds %struct.list, %struct.list* %76, i64 0, i32 3, !dbg !3654
  store void (i8*)* @zfree, void (i8*)** %87, align 8, !dbg !3654, !tbaa !1177
  %88 = call i8* @memcpy(i8* nonnull %70, i8* nonnull %6, i64 46) #8, !dbg !3656
  store i32 %1, i32* %73, align 8, !dbg !3657, !tbaa !891
  store i32 %2, i32* %75, align 4, !dbg !3658, !tbaa !898
  %89 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3661, !tbaa !784
  %90 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %89, i64 0, i32 4, !dbg !3662
  %91 = load %struct.dict*, %struct.dict** %90, align 8, !dbg !3662, !tbaa !832
  %92 = call i8* @sdsnewlen(i8* nonnull %47, i64 40) #8, !dbg !3663
  %93 = call i32 @dictAdd(%struct.dict* %91, i8* %92, i8* %46) #8, !dbg !3664
  br label %94, !dbg !3666

; <label>:94:                                     ; preds = %45, %43, %27, %17
  %95 = phi i32 [ 0, %27 ], [ 0, %43 ], [ 1, %45 ], [ 0, %17 ], !dbg !3667
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %7) #9, !dbg !3668
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %6) #9, !dbg !3668
  ret i32 %95, !dbg !3668
}

; Function Attrs: noredzone
declare dso_local i32 @inet_pton(i32, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @inet_ntop(i32, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterProcessGossipSection(%struct.clusterMsg*, %struct.clusterLink* nocapture readonly) local_unnamed_addr #0 !dbg !3669 {
  %3 = alloca %struct.listIter, align 8
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 5, !dbg !3689
  %5 = load i16, i16* %4, align 2, !dbg !3689, !tbaa !3690
  %6 = tail call zeroext i16 @lwip_htons(i16 zeroext %5) #8, !dbg !3689
  %7 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 18, !dbg !3692
  %8 = bitcast %union.clusterMsgData* %7 to %struct.clusterMsgDataGossip*, !dbg !3693
  %9 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %1, i64 0, i32 4, !dbg !3695
  %10 = load %struct.clusterNode*, %struct.clusterNode** %9, align 8, !dbg !3695, !tbaa !2113
  %11 = icmp eq %struct.clusterNode* %10, null, !dbg !3696
  br i1 %11, label %12, label %24, !dbg !3696

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 9, i64 0, !dbg !3697
  %14 = tail call i8* @sdsnewlen(i8* nonnull %13, i64 40) #8, !dbg !3700
  %15 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3702, !tbaa !784
  %16 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 4, !dbg !3703
  %17 = load %struct.dict*, %struct.dict** %16, align 8, !dbg !3703, !tbaa !832
  %18 = tail call %struct.dictEntry* @dictFind(%struct.dict* %17, i8* %14) #8, !dbg !3704
  tail call void @sdsfree(i8* %14) #8, !dbg !3706
  %19 = icmp eq %struct.dictEntry* %18, null, !dbg !3707
  br i1 %19, label %24, label %20, !dbg !3708

; <label>:20:                                     ; preds = %12
  %21 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %18, i64 0, i32 1, i32 0, !dbg !3709
  %22 = bitcast i8** %21 to %struct.clusterNode**, !dbg !3709
  %23 = load %struct.clusterNode*, %struct.clusterNode** %22, align 8, !dbg !3709, !tbaa !745
  br label %24, !dbg !3710

; <label>:24:                                     ; preds = %20, %12, %2
  %25 = phi %struct.clusterNode* [ %10, %2 ], [ %23, %20 ], [ null, %12 ], !dbg !3696
  %26 = icmp eq i16 %6, 0, !dbg !3712
  br i1 %26, label %228, label %27, !dbg !3712

; <label>:27:                                     ; preds = %24
  %28 = icmp ne %struct.clusterNode* %25, null
  %29 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %25, i64 0, i32 2
  %30 = bitcast %struct.listIter* %3 to i8*
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %25, i64 0, i32 1, i64 0
  br label %32, !dbg !3712

; <label>:32:                                     ; preds = %27, %225
  %33 = phi i16 [ %6, %27 ], [ %35, %225 ]
  %34 = phi %struct.clusterMsgDataGossip* [ %8, %27 ], [ %226, %225 ]
  %35 = add i16 %33, -1, !dbg !3713
  %36 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 6, !dbg !3714
  %37 = load i16, i16* %36, align 2, !dbg !3714, !tbaa !3715
  %38 = call zeroext i16 @lwip_htons(i16 zeroext %37) #8, !dbg !3714
  %39 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 100), align 8, !dbg !3718, !tbaa !3720
  %40 = icmp eq i32 %39, 0, !dbg !3721
  br i1 %40, label %43, label %41, !dbg !3722

; <label>:41:                                     ; preds = %32
  %42 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 0, i64 0, !dbg !3723
  br label %56, !dbg !3722

; <label>:43:                                     ; preds = %32
  %44 = call i8* @sdsempty() #8, !dbg !3724
  %45 = call i8* @representClusterNodeFlags(i8* %44, i16 zeroext %38) #12, !dbg !3726
  %46 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 0, i64 0, !dbg !3728
  %47 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 3, i64 0, !dbg !3729
  %48 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 4, !dbg !3730
  %49 = load i16, i16* %48, align 2, !dbg !3730, !tbaa !3731
  %50 = call zeroext i16 @lwip_htons(i16 zeroext %49) #8, !dbg !3730
  %51 = zext i16 %50 to i32, !dbg !3730
  %52 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 5, !dbg !3732
  %53 = load i16, i16* %52, align 4, !dbg !3732, !tbaa !3733
  %54 = call zeroext i16 @lwip_htons(i16 zeroext %53) #8, !dbg !3732
  %55 = zext i16 %54 to i32, !dbg !3732
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0), i8* %46, i8* nonnull %47, i32 %51, i32 %55, i8* %45) #8, !dbg !3734
  call void @sdsfree(i8* %45) #8, !dbg !3735
  br label %56, !dbg !3736

; <label>:56:                                     ; preds = %41, %43
  %57 = phi i8* [ %42, %41 ], [ %46, %43 ], !dbg !3723
  %58 = call i8* @sdsnewlen(i8* %57, i64 40) #8, !dbg !3739
  %59 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3741, !tbaa !784
  %60 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %59, i64 0, i32 4, !dbg !3742
  %61 = load %struct.dict*, %struct.dict** %60, align 8, !dbg !3742, !tbaa !832
  %62 = call %struct.dictEntry* @dictFind(%struct.dict* %61, i8* %58) #8, !dbg !3743
  call void @sdsfree(i8* %58) #8, !dbg !3745
  %63 = icmp eq %struct.dictEntry* %62, null, !dbg !3746
  br i1 %63, label %207, label %64, !dbg !3747

; <label>:64:                                     ; preds = %56
  %65 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %62, i64 0, i32 1, i32 0, !dbg !3748
  %66 = bitcast i8** %65 to %struct.clusterNode**, !dbg !3748
  %67 = load %struct.clusterNode*, %struct.clusterNode** %66, align 8, !dbg !3748, !tbaa !745
  %68 = icmp eq %struct.clusterNode* %67, null, !dbg !3750
  br i1 %68, label %207, label %69, !dbg !3751

; <label>:69:                                     ; preds = %64
  br i1 %28, label %70, label %91, !dbg !3752

; <label>:70:                                     ; preds = %69
  %71 = load i32, i32* %29, align 8, !dbg !3754, !tbaa !918
  %72 = and i32 %71, 1, !dbg !3754
  %73 = icmp eq i32 %72, 0, !dbg !3754
  %74 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3755
  %75 = icmp eq %struct.clusterNode* %67, %74, !dbg !3756
  %76 = or i1 %73, %75, !dbg !3757
  br i1 %76, label %91, label %77, !dbg !3757

; <label>:77:                                     ; preds = %70
  %78 = and i16 %38, 12, !dbg !3758
  %79 = icmp eq i16 %78, 0, !dbg !3758
  br i1 %79, label %86, label %80, !dbg !3761

; <label>:80:                                     ; preds = %77
  %81 = call i32 @clusterNodeAddFailureReport(%struct.clusterNode* nonnull %67, %struct.clusterNode* nonnull %25) #12, !dbg !3762
  %82 = icmp eq i32 %81, 0, !dbg !3762
  br i1 %82, label %85, label %83, !dbg !3765

; <label>:83:                                     ; preds = %80
  %84 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 1, i64 0, !dbg !3766
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i64 0, i64 0), i8* nonnull %31, i8* nonnull %84) #8, !dbg !3768
  br label %85, !dbg !3769

; <label>:85:                                     ; preds = %80, %83
  call void @markNodeAsFailingIfNeeded(%struct.clusterNode* nonnull %67) #12, !dbg !3770
  br label %91, !dbg !3771

; <label>:86:                                     ; preds = %77
  %87 = call i32 @clusterNodeDelFailureReport(%struct.clusterNode* nonnull %67, %struct.clusterNode* nonnull %25) #12, !dbg !3772
  %88 = icmp eq i32 %87, 0, !dbg !3772
  br i1 %88, label %91, label %89, !dbg !3775

; <label>:89:                                     ; preds = %86
  %90 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 1, i64 0, !dbg !3776
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.46, i64 0, i64 0), i8* nonnull %31, i8* nonnull %90) #8, !dbg !3778
  br label %91, !dbg !3779

; <label>:91:                                     ; preds = %86, %70, %85, %89, %69
  %92 = zext i16 %38 to i32, !dbg !3780
  %93 = and i32 %92, 12, !dbg !3781
  %94 = icmp eq i32 %93, 0, !dbg !3781
  br i1 %94, label %95, label %140, !dbg !3782

; <label>:95:                                     ; preds = %91
  %96 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 9, !dbg !3783
  %97 = load i64, i64* %96, align 8, !dbg !3783, !tbaa !1060
  %98 = icmp eq i64 %97, 0, !dbg !3784
  br i1 %98, label %99, label %140, !dbg !3785

; <label>:99:                                     ; preds = %95
  %100 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 20, !dbg !3790
  %101 = load %struct.list*, %struct.list** %100, align 8, !dbg !3790, !tbaa !1163
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9, !dbg !3792
  %102 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !3793, !tbaa !2858
  %103 = shl nsw i64 %102, 1, !dbg !3794
  %104 = call i64 @mstime() #8, !dbg !3796
  call void @listRewind(%struct.list* %101, %struct.listIter* nonnull %3) #8, !dbg !3799
  %105 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #8, !dbg !3800
  %106 = icmp eq %struct.listNode* %105, null, !dbg !3802
  br i1 %106, label %120, label %107, !dbg !3803

; <label>:107:                                    ; preds = %99, %117
  %108 = phi %struct.listNode* [ %118, %117 ], [ %105, %99 ]
  %109 = getelementptr inbounds %struct.listNode, %struct.listNode* %108, i64 0, i32 2, !dbg !3804
  %110 = bitcast i8** %109 to %struct.clusterNodeFailReport**, !dbg !3804
  %111 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %110, align 8, !dbg !3804, !tbaa !2817
  %112 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %111, i64 0, i32 1, !dbg !3806
  %113 = load i64, i64* %112, align 8, !dbg !3806, !tbaa !2832
  %114 = sub nsw i64 %104, %113, !dbg !3807
  %115 = icmp sgt i64 %114, %103, !dbg !3808
  br i1 %115, label %116, label %117, !dbg !3809

; <label>:116:                                    ; preds = %107
  call void @listDelNode(%struct.list* %101, %struct.listNode* nonnull %108) #8, !dbg !3810
  br label %117, !dbg !3810

; <label>:117:                                    ; preds = %116, %107
  %118 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #8, !dbg !3800
  %119 = icmp eq %struct.listNode* %118, null, !dbg !3802
  br i1 %119, label %120, label %107, !dbg !3803, !llvm.loop !2878

; <label>:120:                                    ; preds = %117, %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9, !dbg !3811
  %121 = load %struct.list*, %struct.list** %100, align 8, !dbg !3812, !tbaa !1163
  %122 = getelementptr inbounds %struct.list, %struct.list* %121, i64 0, i32 5, !dbg !3812
  %123 = load i64, i64* %122, align 8, !dbg !3812, !tbaa !2967
  %124 = trunc i64 %123 to i32, !dbg !3812
  %125 = icmp eq i32 %124, 0, !dbg !3813
  br i1 %125, label %126, label %140, !dbg !3814

; <label>:126:                                    ; preds = %120
  %127 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 2, !dbg !3815
  %128 = load i32, i32* %127, align 4, !dbg !3815, !tbaa !3816
  %129 = call i32 @lwip_htonl(i32 %128) #8, !dbg !3815
  %130 = zext i32 %129 to i64, !dbg !3815
  %131 = mul nuw nsw i64 %130, 1000, !dbg !3818
  %132 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 254), align 8, !dbg !3819, !tbaa !3821
  %133 = add nsw i64 %132, 500, !dbg !3822
  %134 = icmp sgt i64 %131, %133, !dbg !3823
  br i1 %134, label %140, label %135, !dbg !3824

; <label>:135:                                    ; preds = %126
  %136 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 10, !dbg !3825
  %137 = load i64, i64* %136, align 8, !dbg !3825, !tbaa !1069
  %138 = icmp sgt i64 %131, %137, !dbg !3826
  br i1 %138, label %139, label %140, !dbg !3827

; <label>:139:                                    ; preds = %135
  store i64 %131, i64* %136, align 8, !dbg !3828, !tbaa !1069
  br label %140, !dbg !3830

; <label>:140:                                    ; preds = %91, %135, %139, %126, %120, %95
  %141 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 2, !dbg !3831
  %142 = load i32, i32* %141, align 8, !dbg !3831, !tbaa !918
  %143 = and i32 %142, 12, !dbg !3833
  %144 = icmp eq i32 %143, 0, !dbg !3833
  %145 = and i32 %92, 76, !dbg !3834
  %146 = icmp ne i32 %145, 0, !dbg !3834
  %147 = or i1 %146, %144, !dbg !3834
  br i1 %147, label %225, label %148, !dbg !3834

; <label>:148:                                    ; preds = %140
  %149 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 16, i64 0, !dbg !3835
  %150 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 3, i64 0, !dbg !3836
  %151 = call i32 @strcasecmp(i8* nonnull %149, i8* nonnull %150) #11, !dbg !3837
  %152 = icmp eq i32 %151, 0, !dbg !3837
  br i1 %152, label %153, label %169, !dbg !3838

; <label>:153:                                    ; preds = %148
  %154 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 17, !dbg !3839
  %155 = load i32, i32* %154, align 8, !dbg !3839, !tbaa !891
  %156 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 4, !dbg !3840
  %157 = load i16, i16* %156, align 2, !dbg !3840, !tbaa !3731
  %158 = call zeroext i16 @lwip_htons(i16 zeroext %157) #8, !dbg !3840
  %159 = zext i16 %158 to i32, !dbg !3840
  %160 = icmp eq i32 %155, %159, !dbg !3841
  br i1 %160, label %161, label %169, !dbg !3842

; <label>:161:                                    ; preds = %153
  %162 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 18, !dbg !3843
  %163 = load i32, i32* %162, align 4, !dbg !3843, !tbaa !898
  %164 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 5, !dbg !3844
  %165 = load i16, i16* %164, align 4, !dbg !3844, !tbaa !3733
  %166 = call zeroext i16 @lwip_htons(i16 zeroext %165) #8, !dbg !3844
  %167 = zext i16 %166 to i32, !dbg !3844
  %168 = icmp eq i32 %163, %167, !dbg !3845
  br i1 %168, label %225, label %169, !dbg !3846

; <label>:169:                                    ; preds = %161, %153, %148
  %170 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 19, !dbg !3847
  %171 = load %struct.clusterLink*, %struct.clusterLink** %170, align 8, !dbg !3847, !tbaa !1153
  %172 = icmp eq %struct.clusterLink* %171, null, !dbg !3850
  br i1 %172, label %193, label %173, !dbg !3851

; <label>:173:                                    ; preds = %169
  %174 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %171, i64 0, i32 1, !dbg !3854
  %175 = load i32, i32* %174, align 8, !dbg !3854, !tbaa !2117
  %176 = icmp eq i32 %175, -1, !dbg !3855
  br i1 %176, label %179, label %177, !dbg !3856

; <label>:177:                                    ; preds = %173
  %178 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !3857, !tbaa !1910
  call void @aeDeleteFileEvent(%struct.aeEventLoop* %178, i32 %175, i32 3) #8, !dbg !3858
  br label %179, !dbg !3859

; <label>:179:                                    ; preds = %177, %173
  %180 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %171, i64 0, i32 2, !dbg !3860
  %181 = load i8*, i8** %180, align 8, !dbg !3860, !tbaa !2106
  call void @sdsfree(i8* %181) #8, !dbg !3861
  %182 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %171, i64 0, i32 3, !dbg !3862
  %183 = load i8*, i8** %182, align 8, !dbg !3862, !tbaa !2110
  call void @sdsfree(i8* %183) #8, !dbg !3863
  %184 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %171, i64 0, i32 4, !dbg !3864
  %185 = load %struct.clusterNode*, %struct.clusterNode** %184, align 8, !dbg !3864, !tbaa !2113
  %186 = icmp eq %struct.clusterNode* %185, null, !dbg !3865
  br i1 %186, label %189, label %187, !dbg !3866

; <label>:187:                                    ; preds = %179
  %188 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %185, i64 0, i32 19, !dbg !3867
  store %struct.clusterLink* null, %struct.clusterLink** %188, align 8, !dbg !3868, !tbaa !1153
  br label %189, !dbg !3869

; <label>:189:                                    ; preds = %179, %187
  %190 = load i32, i32* %174, align 8, !dbg !3870, !tbaa !2117
  %191 = call i32 @close(i32 %190) #8, !dbg !3871
  %192 = bitcast %struct.clusterLink* %171 to i8*, !dbg !3872
  call void @zfree(i8* %192) #8, !dbg !3873
  br label %193, !dbg !3874

; <label>:193:                                    ; preds = %169, %189
  %194 = call i8* @memcpy(i8* nonnull %149, i8* nonnull %150, i64 46) #8, !dbg !3875
  %195 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 4, !dbg !3876
  %196 = load i16, i16* %195, align 2, !dbg !3876, !tbaa !3731
  %197 = call zeroext i16 @lwip_htons(i16 zeroext %196) #8, !dbg !3876
  %198 = zext i16 %197 to i32, !dbg !3876
  %199 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 17, !dbg !3877
  store i32 %198, i32* %199, align 8, !dbg !3878, !tbaa !891
  %200 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 5, !dbg !3879
  %201 = load i16, i16* %200, align 4, !dbg !3879, !tbaa !3733
  %202 = call zeroext i16 @lwip_htons(i16 zeroext %201) #8, !dbg !3879
  %203 = zext i16 %202 to i32, !dbg !3879
  %204 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 18, !dbg !3880
  store i32 %203, i32* %204, align 4, !dbg !3881, !tbaa !898
  %205 = load i32, i32* %141, align 8, !dbg !3882, !tbaa !918
  %206 = and i32 %205, -65, !dbg !3882
  store i32 %206, i32* %141, align 8, !dbg !3882, !tbaa !918
  br label %225, !dbg !3883

; <label>:207:                                    ; preds = %56, %64
  %208 = and i16 %38, 64, !dbg !3884
  %209 = icmp eq i16 %208, 0, !dbg !3884
  %210 = and i1 %209, %28, !dbg !3887
  br i1 %210, label %211, label %225, !dbg !3887

; <label>:211:                                    ; preds = %207
  %212 = call i32 @clusterBlacklistExists(i8* %57) #12, !dbg !3888
  %213 = icmp eq i32 %212, 0, !dbg !3888
  br i1 %213, label %214, label %225, !dbg !3889

; <label>:214:                                    ; preds = %211
  %215 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 3, i64 0, !dbg !3890
  %216 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 4, !dbg !3892
  %217 = load i16, i16* %216, align 2, !dbg !3892, !tbaa !3731
  %218 = call zeroext i16 @lwip_htons(i16 zeroext %217) #8, !dbg !3892
  %219 = zext i16 %218 to i32, !dbg !3892
  %220 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 0, i32 5, !dbg !3893
  %221 = load i16, i16* %220, align 4, !dbg !3893, !tbaa !3733
  %222 = call zeroext i16 @lwip_htons(i16 zeroext %221) #8, !dbg !3893
  %223 = zext i16 %222 to i32, !dbg !3893
  %224 = call i32 @clusterStartHandshake(i8* nonnull %215, i32 %219, i32 %223) #12, !dbg !3894
  br label %225, !dbg !3895

; <label>:225:                                    ; preds = %140, %161, %211, %207, %214, %193
  %226 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %34, i64 1, !dbg !3896
  %227 = icmp eq i16 %35, 0, !dbg !3712
  br i1 %227, label %228, label %32, !dbg !3712, !llvm.loop !3897

; <label>:228:                                    ; preds = %225, %24
  ret void, !dbg !3899
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @lwip_htons(i16 zeroext) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i8* @representClusterNodeFlags(i8*, i16 zeroext) local_unnamed_addr #0 !dbg !3900 {
  %3 = getelementptr inbounds i8, i8* %0, i64 -1, !dbg !3918
  %4 = load i8, i8* %3, align 1, !dbg !3918, !tbaa !745
  %5 = trunc i8 %4 to i3, !dbg !3920
  switch i3 %5, label %27 [
    i3 0, label %6
    i3 1, label %9
    i3 2, label %13
    i3 3, label %18
    i3 -4, label %23
  ], !dbg !3920

; <label>:6:                                      ; preds = %2
  %7 = lshr i8 %4, 3, !dbg !3921
  %8 = zext i8 %7 to i64, !dbg !3921
  br label %27, !dbg !3922

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds i8, i8* %0, i64 -3, !dbg !3923
  %11 = load i8, i8* %10, align 1, !dbg !3924, !tbaa !745
  %12 = zext i8 %11 to i64, !dbg !3923
  br label %27, !dbg !3925

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i64 -5, !dbg !3926
  %15 = bitcast i8* %14 to i16*, !dbg !3927
  %16 = load i16, i16* %15, align 1, !dbg !3927, !tbaa !1493
  %17 = zext i16 %16 to i64, !dbg !3926
  br label %27, !dbg !3928

; <label>:18:                                     ; preds = %2
  %19 = getelementptr inbounds i8, i8* %0, i64 -9, !dbg !3929
  %20 = bitcast i8* %19 to i32*, !dbg !3930
  %21 = load i32, i32* %20, align 1, !dbg !3930, !tbaa !708
  %22 = zext i32 %21 to i64, !dbg !3929
  br label %27, !dbg !3931

; <label>:23:                                     ; preds = %2
  %24 = getelementptr inbounds i8, i8* %0, i64 -17, !dbg !3932
  %25 = bitcast i8* %24 to i64*, !dbg !3933
  %26 = load i64, i64* %25, align 1, !dbg !3933, !tbaa !1500
  br label %27, !dbg !3934

; <label>:27:                                     ; preds = %2, %6, %9, %13, %18, %23
  %28 = phi i64 [ %26, %23 ], [ %22, %18 ], [ %17, %13 ], [ %12, %9 ], [ %8, %6 ], [ 0, %2 ], !dbg !3935
  %29 = and i16 %1, 16, !dbg !3939
  %30 = icmp eq i16 %29, 0, !dbg !3939
  br i1 %30, label %33, label %31, !dbg !3941

; <label>:31:                                     ; preds = %27
  %32 = tail call i8* @sdscat(i8* nonnull %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.276, i64 0, i64 0)) #8, !dbg !3942
  br label %33, !dbg !3943

; <label>:33:                                     ; preds = %27, %31
  %34 = phi i8* [ %32, %31 ], [ %0, %27 ]
  %35 = and i16 %1, 1, !dbg !3939
  %36 = icmp eq i16 %35, 0, !dbg !3939
  br i1 %36, label %67, label %65, !dbg !3941

; <label>:37:                                     ; preds = %103
  %38 = lshr i8 %106, 3, !dbg !3944
  %39 = zext i8 %38 to i64, !dbg !3944
  br label %58, !dbg !3947

; <label>:40:                                     ; preds = %103
  %41 = getelementptr inbounds i8, i8* %104, i64 -3, !dbg !3948
  %42 = load i8, i8* %41, align 1, !dbg !3949, !tbaa !745
  %43 = zext i8 %42 to i64, !dbg !3948
  br label %58, !dbg !3950

; <label>:44:                                     ; preds = %103
  %45 = getelementptr inbounds i8, i8* %104, i64 -5, !dbg !3951
  %46 = bitcast i8* %45 to i16*, !dbg !3952
  %47 = load i16, i16* %46, align 1, !dbg !3952, !tbaa !1493
  %48 = zext i16 %47 to i64, !dbg !3951
  br label %58, !dbg !3953

; <label>:49:                                     ; preds = %103
  %50 = getelementptr inbounds i8, i8* %104, i64 -9, !dbg !3954
  %51 = bitcast i8* %50 to i32*, !dbg !3955
  %52 = load i32, i32* %51, align 1, !dbg !3955, !tbaa !708
  %53 = zext i32 %52 to i64, !dbg !3954
  br label %58, !dbg !3956

; <label>:54:                                     ; preds = %103
  %55 = getelementptr inbounds i8, i8* %104, i64 -17, !dbg !3957
  %56 = bitcast i8* %55 to i64*, !dbg !3958
  %57 = load i64, i64* %56, align 1, !dbg !3958, !tbaa !1500
  br label %58, !dbg !3959

; <label>:58:                                     ; preds = %103, %37, %40, %44, %49, %54
  %59 = phi i64 [ %57, %54 ], [ %53, %49 ], [ %48, %44 ], [ %43, %40 ], [ %39, %37 ], [ 0, %103 ], !dbg !3960
  %60 = icmp eq i64 %59, %28, !dbg !3961
  br i1 %60, label %61, label %63, !dbg !3962

; <label>:61:                                     ; preds = %58
  %62 = tail call i8* @sdscat(i8* nonnull %104, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i64 0, i64 0)) #8, !dbg !3963
  br label %63, !dbg !3964

; <label>:63:                                     ; preds = %61, %58
  %64 = phi i8* [ %62, %61 ], [ %104, %58 ]
  tail call void @sdsIncrLen(i8* %64, i64 -1) #8, !dbg !3965
  ret i8* %64, !dbg !3966

; <label>:65:                                     ; preds = %33
  %66 = tail call i8* @sdscat(i8* %34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.277, i64 0, i64 0)) #8, !dbg !3942
  br label %67, !dbg !3943

; <label>:67:                                     ; preds = %65, %33
  %68 = phi i8* [ %66, %65 ], [ %34, %33 ]
  %69 = and i16 %1, 2, !dbg !3939
  %70 = icmp eq i16 %69, 0, !dbg !3939
  br i1 %70, label %73, label %71, !dbg !3941

; <label>:71:                                     ; preds = %67
  %72 = tail call i8* @sdscat(i8* %68, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.278, i64 0, i64 0)) #8, !dbg !3942
  br label %73, !dbg !3943

; <label>:73:                                     ; preds = %71, %67
  %74 = phi i8* [ %72, %71 ], [ %68, %67 ]
  %75 = and i16 %1, 4, !dbg !3939
  %76 = icmp eq i16 %75, 0, !dbg !3939
  br i1 %76, label %79, label %77, !dbg !3941

; <label>:77:                                     ; preds = %73
  %78 = tail call i8* @sdscat(i8* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.279, i64 0, i64 0)) #8, !dbg !3942
  br label %79, !dbg !3943

; <label>:79:                                     ; preds = %77, %73
  %80 = phi i8* [ %78, %77 ], [ %74, %73 ]
  %81 = and i16 %1, 8, !dbg !3939
  %82 = icmp eq i16 %81, 0, !dbg !3939
  br i1 %82, label %85, label %83, !dbg !3941

; <label>:83:                                     ; preds = %79
  %84 = tail call i8* @sdscat(i8* %80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.280, i64 0, i64 0)) #8, !dbg !3942
  br label %85, !dbg !3943

; <label>:85:                                     ; preds = %83, %79
  %86 = phi i8* [ %84, %83 ], [ %80, %79 ]
  %87 = and i16 %1, 32, !dbg !3939
  %88 = icmp eq i16 %87, 0, !dbg !3939
  br i1 %88, label %91, label %89, !dbg !3941

; <label>:89:                                     ; preds = %85
  %90 = tail call i8* @sdscat(i8* %86, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.281, i64 0, i64 0)) #8, !dbg !3942
  br label %91, !dbg !3943

; <label>:91:                                     ; preds = %89, %85
  %92 = phi i8* [ %90, %89 ], [ %86, %85 ]
  %93 = and i16 %1, 64, !dbg !3939
  %94 = icmp eq i16 %93, 0, !dbg !3939
  br i1 %94, label %97, label %95, !dbg !3941

; <label>:95:                                     ; preds = %91
  %96 = tail call i8* @sdscat(i8* %92, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.282, i64 0, i64 0)) #8, !dbg !3942
  br label %97, !dbg !3943

; <label>:97:                                     ; preds = %95, %91
  %98 = phi i8* [ %96, %95 ], [ %92, %91 ]
  %99 = and i16 %1, 512, !dbg !3939
  %100 = icmp eq i16 %99, 0, !dbg !3939
  br i1 %100, label %103, label %101, !dbg !3941

; <label>:101:                                    ; preds = %97
  %102 = tail call i8* @sdscat(i8* %98, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)) #8, !dbg !3942
  br label %103, !dbg !3943

; <label>:103:                                    ; preds = %101, %97
  %104 = phi i8* [ %102, %101 ], [ %98, %97 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 -1, !dbg !3968
  %106 = load i8, i8* %105, align 1, !dbg !3968, !tbaa !745
  %107 = trunc i8 %106 to i3, !dbg !3970
  switch i3 %107, label %58 [
    i3 0, label %37
    i3 1, label %40
    i3 2, label %44
    i3 3, label %49
    i3 -4, label %54
  ], !dbg !3970
}

; Function Attrs: noredzone
declare dso_local i32 @lwip_htonl(i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @nodeIp2String(i8*, %struct.clusterLink* nocapture readonly, i8*) local_unnamed_addr #0 !dbg !3971 {
  %4 = load i8, i8* %2, align 1, !dbg !3981, !tbaa !745
  %5 = icmp eq i8 %4, 0, !dbg !3983
  br i1 %5, label %9, label %6, !dbg !3984

; <label>:6:                                      ; preds = %3
  %7 = tail call i8* @memcpy(i8* %0, i8* nonnull %2, i64 46) #8, !dbg !3985
  %8 = getelementptr inbounds i8, i8* %0, i64 45, !dbg !3987
  store i8 0, i8* %8, align 1, !dbg !3988, !tbaa !745
  br label %13, !dbg !3989

; <label>:9:                                      ; preds = %3
  %10 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %1, i64 0, i32 1, !dbg !3990
  %11 = load i32, i32* %10, align 8, !dbg !3990, !tbaa !2117
  %12 = tail call i32 @anetPeerToString(i32 %11, i8* %0, i64 46, i32* null) #8, !dbg !3992
  br label %13

; <label>:13:                                     ; preds = %9, %6
  ret void, !dbg !3993
}

; Function Attrs: noredzone
declare dso_local i32 @anetPeerToString(i32, i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @nodeUpdateAddressIfNeeded(%struct.clusterNode*, %struct.clusterLink* readonly, %struct.clusterMsg*) local_unnamed_addr #0 !dbg !3994 {
  %4 = alloca [46 x i8], align 16
  %5 = getelementptr inbounds [46 x i8], [46 x i8]* %4, i64 0, i64 0, !dbg !4007
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %5) #9, !dbg !4007
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 46, i1 false), !dbg !4008
  %6 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 3, !dbg !4009
  %7 = load i16, i16* %6, align 2, !dbg !4009, !tbaa !4010
  %8 = tail call zeroext i16 @lwip_htons(i16 zeroext %7) #8, !dbg !4009
  %9 = zext i16 %8 to i32, !dbg !4009
  %10 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 14, !dbg !4012
  %11 = load i16, i16* %10, align 8, !dbg !4012, !tbaa !4013
  %12 = tail call zeroext i16 @lwip_htons(i16 zeroext %11) #8, !dbg !4012
  %13 = zext i16 %12 to i32, !dbg !4012
  %14 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !4015
  %15 = load %struct.clusterLink*, %struct.clusterLink** %14, align 8, !dbg !4015, !tbaa !1153
  %16 = icmp eq %struct.clusterLink* %15, %1, !dbg !4017
  br i1 %16, label %83, label %17, !dbg !4018

; <label>:17:                                     ; preds = %3
  %18 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 12, i64 0, !dbg !4019
  %19 = load i8, i8* %18, align 1, !dbg !4024, !tbaa !745
  %20 = icmp eq i8 %19, 0, !dbg !4025
  br i1 %20, label %24, label %21, !dbg !4026

; <label>:21:                                     ; preds = %17
  %22 = call i8* @memcpy(i8* nonnull %5, i8* nonnull %18, i64 46) #8, !dbg !4027
  %23 = getelementptr inbounds [46 x i8], [46 x i8]* %4, i64 0, i64 45, !dbg !4028
  store i8 0, i8* %23, align 1, !dbg !4029, !tbaa !745
  br label %28, !dbg !4030

; <label>:24:                                     ; preds = %17
  %25 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %1, i64 0, i32 1, !dbg !4031
  %26 = load i32, i32* %25, align 8, !dbg !4031, !tbaa !2117
  %27 = call i32 @anetPeerToString(i32 %26, i8* nonnull %5, i64 46, i32* null) #8, !dbg !4032
  br label %28

; <label>:28:                                     ; preds = %21, %24
  %29 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 17, !dbg !4033
  %30 = load i32, i32* %29, align 8, !dbg !4033, !tbaa !891
  %31 = icmp eq i32 %30, %9, !dbg !4035
  %32 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 18, !dbg !4036
  br i1 %31, label %33, label %40, !dbg !4037

; <label>:33:                                     ; preds = %28
  %34 = load i32, i32* %32, align 4, !dbg !4038, !tbaa !898
  %35 = icmp eq i32 %34, %13, !dbg !4039
  br i1 %35, label %36, label %40, !dbg !4040

; <label>:36:                                     ; preds = %33
  %37 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 16, i64 0, !dbg !4041
  %38 = call i32 @strcmp(i8* nonnull %5, i8* nonnull %37) #8, !dbg !4042
  %39 = icmp eq i32 %38, 0, !dbg !4043
  br i1 %39, label %83, label %40, !dbg !4044

; <label>:40:                                     ; preds = %28, %36, %33
  %41 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 16, i64 0, !dbg !4045
  %42 = call i8* @memcpy(i8* nonnull %41, i8* nonnull %5, i64 46) #8, !dbg !4046
  store i32 %9, i32* %29, align 8, !dbg !4047, !tbaa !891
  store i32 %13, i32* %32, align 4, !dbg !4048, !tbaa !898
  %43 = load %struct.clusterLink*, %struct.clusterLink** %14, align 8, !dbg !4049, !tbaa !1153
  %44 = icmp eq %struct.clusterLink* %43, null, !dbg !4051
  br i1 %44, label %66, label %45, !dbg !4052

; <label>:45:                                     ; preds = %40
  %46 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %43, i64 0, i32 1, !dbg !4055
  %47 = load i32, i32* %46, align 8, !dbg !4055, !tbaa !2117
  %48 = icmp eq i32 %47, -1, !dbg !4056
  br i1 %48, label %51, label %49, !dbg !4057

; <label>:49:                                     ; preds = %45
  %50 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !4058, !tbaa !1910
  call void @aeDeleteFileEvent(%struct.aeEventLoop* %50, i32 %47, i32 3) #8, !dbg !4059
  br label %51, !dbg !4060

; <label>:51:                                     ; preds = %49, %45
  %52 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %43, i64 0, i32 2, !dbg !4061
  %53 = load i8*, i8** %52, align 8, !dbg !4061, !tbaa !2106
  call void @sdsfree(i8* %53) #8, !dbg !4062
  %54 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %43, i64 0, i32 3, !dbg !4063
  %55 = load i8*, i8** %54, align 8, !dbg !4063, !tbaa !2110
  call void @sdsfree(i8* %55) #8, !dbg !4064
  %56 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %43, i64 0, i32 4, !dbg !4065
  %57 = load %struct.clusterNode*, %struct.clusterNode** %56, align 8, !dbg !4065, !tbaa !2113
  %58 = icmp eq %struct.clusterNode* %57, null, !dbg !4066
  br i1 %58, label %61, label %59, !dbg !4067

; <label>:59:                                     ; preds = %51
  %60 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %57, i64 0, i32 19, !dbg !4068
  store %struct.clusterLink* null, %struct.clusterLink** %60, align 8, !dbg !4069, !tbaa !1153
  br label %61, !dbg !4070

; <label>:61:                                     ; preds = %51, %59
  %62 = load i32, i32* %46, align 8, !dbg !4071, !tbaa !2117
  %63 = call i32 @close(i32 %62) #8, !dbg !4072
  %64 = bitcast %struct.clusterLink* %43 to i8*, !dbg !4073
  call void @zfree(i8* %64) #8, !dbg !4074
  %65 = load i32, i32* %29, align 8, !dbg !4075, !tbaa !891
  br label %66, !dbg !4076

; <label>:66:                                     ; preds = %40, %61
  %67 = phi i32 [ %9, %40 ], [ %65, %61 ], !dbg !4075
  %68 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !4077
  %69 = load i32, i32* %68, align 8, !dbg !4078, !tbaa !918
  %70 = and i32 %69, -65, !dbg !4078
  store i32 %70, i32* %68, align 8, !dbg !4078, !tbaa !918
  %71 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !4079
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %71, i8* nonnull %41, i32 %67) #8, !dbg !4080
  %72 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4081, !tbaa !757
  %73 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %72, i64 0, i32 2, !dbg !4081
  %74 = load i32, i32* %73, align 8, !dbg !4081, !tbaa !918
  %75 = and i32 %74, 2, !dbg !4081
  %76 = icmp eq i32 %75, 0, !dbg !4081
  br i1 %76, label %83, label %77, !dbg !4083

; <label>:77:                                     ; preds = %66
  %78 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %72, i64 0, i32 8, !dbg !4084
  %79 = load %struct.clusterNode*, %struct.clusterNode** %78, align 8, !dbg !4084, !tbaa !1012
  %80 = icmp eq %struct.clusterNode* %79, %0, !dbg !4085
  br i1 %80, label %81, label %83, !dbg !4086

; <label>:81:                                     ; preds = %77
  %82 = load i32, i32* %29, align 8, !dbg !4087, !tbaa !891
  call void @replicationSetMaster(i8* nonnull %41, i32 %82) #8, !dbg !4088
  br label %83, !dbg !4088

; <label>:83:                                     ; preds = %77, %81, %66, %36, %3
  %84 = phi i32 [ 0, %3 ], [ 0, %36 ], [ 1, %66 ], [ 1, %81 ], [ 1, %77 ], !dbg !4036
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %5) #9, !dbg !4089
  ret i32 %84, !dbg !4089
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #2

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @replicationSetMaster(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterUpdateSlotsConfigWith(%struct.clusterNode*, i64, i8* nocapture readonly) local_unnamed_addr #0 !dbg !4090 {
  %4 = alloca [16384 x i16], align 16
  %5 = bitcast [16384 x i16]* %4 to i8*, !dbg !4109
  call void @llvm.lifetime.start.p0i8(i64 32768, i8* nonnull %5) #9, !dbg !4109
  %6 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4112, !tbaa !757
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %6, i64 0, i32 2, !dbg !4112
  %8 = load i32, i32* %7, align 8, !dbg !4112, !tbaa !918
  %9 = and i32 %8, 1, !dbg !4112
  %10 = icmp eq i32 %9, 0, !dbg !4112
  br i1 %10, label %11, label %14, !dbg !4112

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %6, i64 0, i32 8, !dbg !4113
  %13 = load %struct.clusterNode*, %struct.clusterNode** %12, align 8, !dbg !4113, !tbaa !1012
  br label %14, !dbg !4112

; <label>:14:                                     ; preds = %3, %11
  %15 = phi %struct.clusterNode* [ %13, %11 ], [ %6, %3 ], !dbg !4112
  %16 = icmp eq %struct.clusterNode* %6, %0, !dbg !4115
  br i1 %16, label %17, label %18, !dbg !4117

; <label>:17:                                     ; preds = %14
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.48, i64 0, i64 0)) #8, !dbg !4118
  br label %134, !dbg !4120

; <label>:18:                                     ; preds = %14, %100
  %19 = phi i64 [ %103, %100 ], [ 0, %14 ]
  %20 = phi i32 [ %102, %100 ], [ 0, %14 ]
  %21 = phi %struct.clusterNode* [ %101, %100 ], [ null, %14 ]
  %22 = phi i32 [ %104, %100 ], [ 0, %14 ]
  %23 = trunc i64 %19 to i32
  %24 = lshr i64 %19, 3
  %25 = and i64 %24, 8191
  %26 = and i32 %23, 7, !dbg !4130
  %27 = getelementptr inbounds i8, i8* %2, i64 %25, !dbg !4132
  %28 = load i8, i8* %27, align 1, !dbg !4132, !tbaa !745
  %29 = zext i8 %28 to i32, !dbg !4132
  %30 = shl i32 1, %26, !dbg !4133
  %31 = and i32 %30, %29, !dbg !4134
  %32 = icmp eq i32 %31, 0, !dbg !4135
  br i1 %32, label %100, label %33, !dbg !4136

; <label>:33:                                     ; preds = %18
  %34 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4137, !tbaa !784
  %35 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %34, i64 0, i32 8, i64 %19, !dbg !4140
  %36 = load %struct.clusterNode*, %struct.clusterNode** %35, align 8, !dbg !4140, !tbaa !757
  %37 = icmp eq %struct.clusterNode* %36, %0, !dbg !4141
  br i1 %37, label %100, label %38, !dbg !4142

; <label>:38:                                     ; preds = %33
  %39 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %34, i64 0, i32 7, i64 %19, !dbg !4143
  %40 = load %struct.clusterNode*, %struct.clusterNode** %39, align 8, !dbg !4143, !tbaa !757
  %41 = icmp eq %struct.clusterNode* %40, null, !dbg !4143
  br i1 %41, label %42, label %100, !dbg !4145

; <label>:42:                                     ; preds = %38
  %43 = icmp eq %struct.clusterNode* %36, null, !dbg !4146
  br i1 %43, label %48, label %44, !dbg !4148

; <label>:44:                                     ; preds = %42
  %45 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %36, i64 0, i32 3, !dbg !4149
  %46 = load i64, i64* %45, align 8, !dbg !4149, !tbaa !1075
  %47 = icmp ult i64 %46, %1, !dbg !4150
  br i1 %47, label %48, label %100, !dbg !4151

; <label>:48:                                     ; preds = %44, %42
  %49 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4152, !tbaa !757
  %50 = icmp eq %struct.clusterNode* %36, %49, !dbg !4155
  br i1 %50, label %51, label %62, !dbg !4156

; <label>:51:                                     ; preds = %48
  %52 = tail call i32 @countKeysInSlot(i32 %23) #8, !dbg !4157
  %53 = icmp eq i32 %52, 0, !dbg !4157
  %54 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4158
  %55 = icmp eq %struct.clusterNode* %54, %0, !dbg !4159
  %56 = or i1 %53, %55, !dbg !4160
  br i1 %56, label %62, label %57, !dbg !4160

; <label>:57:                                     ; preds = %51
  %58 = trunc i32 %22 to i16, !dbg !4161
  %59 = sext i32 %20 to i64, !dbg !4163
  %60 = getelementptr inbounds [16384 x i16], [16384 x i16]* %4, i64 0, i64 %59, !dbg !4163
  store i16 %58, i16* %60, align 2, !dbg !4164, !tbaa !1493
  %61 = add nsw i32 %20, 1, !dbg !4165
  br label %62, !dbg !4166

; <label>:62:                                     ; preds = %51, %57, %48
  %63 = phi i32 [ %61, %57 ], [ %20, %51 ], [ %20, %48 ], !dbg !4167
  %64 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4168, !tbaa !784
  %65 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %64, i64 0, i32 8, i64 %19, !dbg !4170
  %66 = load %struct.clusterNode*, %struct.clusterNode** %65, align 8, !dbg !4170, !tbaa !757
  %67 = icmp eq %struct.clusterNode* %66, %15, !dbg !4171
  %68 = select i1 %67, %struct.clusterNode* %0, %struct.clusterNode* %21, !dbg !4172
  %69 = icmp eq %struct.clusterNode* %66, null, !dbg !4176
  br i1 %69, label %90, label %70, !dbg !4177

; <label>:70:                                     ; preds = %62
  %71 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %66, i64 0, i32 4, i64 %25, !dbg !4186
  %72 = load i8, i8* %71, align 1, !dbg !4186, !tbaa !745
  %73 = zext i8 %72 to i32, !dbg !4186
  %74 = and i32 %30, %73, !dbg !4187
  %75 = icmp eq i32 %74, 0, !dbg !4188
  %76 = trunc i32 %30 to i8, !dbg !4194
  %77 = xor i8 %76, -1, !dbg !4194
  %78 = and i8 %72, %77, !dbg !4194
  store i8 %78, i8* %71, align 1, !dbg !4194, !tbaa !745
  br i1 %75, label %79, label %80, !dbg !4195

; <label>:79:                                     ; preds = %70
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !4196
  tail call void @_exit(i32 1) #10, !dbg !4196
  unreachable, !dbg !4196

; <label>:80:                                     ; preds = %70
  %81 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %66, i64 0, i32 5, !dbg !4197
  %82 = load i32, i32* %81, align 8, !dbg !4198, !tbaa !1139
  %83 = add nsw i32 %82, -1, !dbg !4198
  store i32 %83, i32* %81, align 8, !dbg !4198, !tbaa !1139
  %84 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4199, !tbaa !784
  %85 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %84, i64 0, i32 8, i64 %19, !dbg !4200
  store %struct.clusterNode* null, %struct.clusterNode** %85, align 8, !dbg !4201, !tbaa !757
  %86 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4202, !tbaa !784
  %87 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %86, i64 0, i32 8, i64 %19
  %88 = load %struct.clusterNode*, %struct.clusterNode** %87, align 8, !dbg !4204, !tbaa !757
  %89 = icmp eq %struct.clusterNode* %88, null, !dbg !4204
  br i1 %89, label %90, label %95, !dbg !4207

; <label>:90:                                     ; preds = %62, %80
  %91 = tail call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %0, i32 %23) #8, !dbg !4208
  %92 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4209, !tbaa !784
  %93 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %92, i64 0, i32 8, i64 %19, !dbg !4210
  store %struct.clusterNode* %0, %struct.clusterNode** %93, align 8, !dbg !4211, !tbaa !757
  %94 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4212, !tbaa !784
  br label %95, !dbg !4214

; <label>:95:                                     ; preds = %80, %90
  %96 = phi %struct.clusterState* [ %86, %80 ], [ %94, %90 ], !dbg !4212
  %97 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %96, i64 0, i32 22, !dbg !4216
  %98 = load i32, i32* %97, align 8, !dbg !4217, !tbaa !1465
  %99 = or i32 %98, 14, !dbg !4217
  store i32 %99, i32* %97, align 8, !dbg !4217, !tbaa !1465
  br label %100, !dbg !4218

; <label>:100:                                    ; preds = %38, %18, %95, %44, %33
  %101 = phi %struct.clusterNode* [ %21, %33 ], [ %21, %38 ], [ %68, %95 ], [ %21, %44 ], [ %21, %18 ], !dbg !4167
  %102 = phi i32 [ %20, %33 ], [ %20, %38 ], [ %63, %95 ], [ %20, %44 ], [ %20, %18 ], !dbg !4167
  %103 = add nuw nsw i64 %19, 1, !dbg !4219
  %104 = add nuw nsw i32 %22, 1, !dbg !4219
  %105 = icmp ult i64 %103, 16384, !dbg !4220
  br i1 %105, label %18, label %106, !dbg !4221, !llvm.loop !4222

; <label>:106:                                    ; preds = %100
  %107 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !4224, !tbaa !4226
  %108 = and i32 %107, 4, !dbg !4227
  %109 = icmp eq i32 %108, 0, !dbg !4227
  br i1 %109, label %110, label %134, !dbg !4228

; <label>:110:                                    ; preds = %106
  %111 = icmp eq %struct.clusterNode* %101, null, !dbg !4229
  br i1 %111, label %122, label %112, !dbg !4231

; <label>:112:                                    ; preds = %110
  %113 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %15, i64 0, i32 5, !dbg !4232
  %114 = load i32, i32* %113, align 8, !dbg !4232, !tbaa !1139
  %115 = icmp eq i32 %114, 0, !dbg !4233
  br i1 %115, label %116, label %122, !dbg !4234

; <label>:116:                                    ; preds = %112
  %117 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !4235
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.49, i64 0, i64 0), i8* nonnull %117) #8, !dbg !4237
  tail call void @clusterSetMaster(%struct.clusterNode* %0) #12, !dbg !4238
  %118 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4241, !tbaa !784
  %119 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %118, i64 0, i32 22, !dbg !4242
  %120 = load i32, i32* %119, align 8, !dbg !4243, !tbaa !1465
  %121 = or i32 %120, 14, !dbg !4243
  store i32 %121, i32* %119, align 8, !dbg !4243, !tbaa !1465
  br label %134, !dbg !4244

; <label>:122:                                    ; preds = %110, %112
  %123 = icmp sgt i32 %102, 0, !dbg !4245
  br i1 %123, label %124, label %134, !dbg !4250

; <label>:124:                                    ; preds = %122
  %125 = zext i32 %102 to i64
  br label %126, !dbg !4251

; <label>:126:                                    ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %132, %126 ]
  %128 = getelementptr inbounds [16384 x i16], [16384 x i16]* %4, i64 0, i64 %127, !dbg !4251
  %129 = load i16, i16* %128, align 2, !dbg !4251, !tbaa !1493
  %130 = zext i16 %129 to i32, !dbg !4251
  %131 = tail call i32 @delKeysInSlot(i32 %130) #8, !dbg !4252
  %132 = add nuw nsw i64 %127, 1, !dbg !4253
  %133 = icmp eq i64 %132, %125, !dbg !4245
  br i1 %133, label %134, label %126, !dbg !4254, !llvm.loop !4255

; <label>:134:                                    ; preds = %126, %122, %116, %106, %17
  call void @llvm.lifetime.end.p0i8(i64 32768, i8* nonnull %5) #9, !dbg !4257
  ret void, !dbg !4257
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @bitmapTestBit(i8* nocapture readonly, i32) local_unnamed_addr #6 !dbg !2217 {
  %3 = sdiv i32 %1, 8, !dbg !4260
  %4 = sext i32 %3 to i64, !dbg !4261
  %5 = and i32 %1, 7, !dbg !4263
  %6 = getelementptr inbounds i8, i8* %0, i64 %4, !dbg !4265
  %7 = load i8, i8* %6, align 1, !dbg !4265, !tbaa !745
  %8 = zext i8 %7 to i32, !dbg !4265
  %9 = shl i32 1, %5, !dbg !4266
  %10 = and i32 %9, %8, !dbg !4267
  %11 = icmp ne i32 %10, 0, !dbg !4268
  %12 = zext i1 %11 to i32, !dbg !4268
  ret i32 %12, !dbg !4269
}

; Function Attrs: noredzone
declare dso_local i32 @countKeysInSlot(i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSetMaster(%struct.clusterNode*) local_unnamed_addr #0 !dbg !4270 {
  %2 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4274, !tbaa !757
  %3 = icmp eq %struct.clusterNode* %2, %0, !dbg !4274
  br i1 %3, label %4, label %5, !dbg !4274

; <label>:4:                                      ; preds = %1
  tail call void @_serverAssert(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3934) #8, !dbg !4274
  tail call void @_exit(i32 1) #10, !dbg !4274
  unreachable, !dbg !4274

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 5, !dbg !4275
  %7 = load i32, i32* %6, align 8, !dbg !4275, !tbaa !1139
  %8 = icmp eq i32 %7, 0, !dbg !4275
  br i1 %8, label %10, label %9, !dbg !4275

; <label>:9:                                      ; preds = %5
  tail call void @_serverAssert(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3935) #8, !dbg !4275
  tail call void @_exit(i32 1) #10, !dbg !4275
  unreachable, !dbg !4275

; <label>:10:                                     ; preds = %5
  %11 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 2, !dbg !4276
  %12 = load i32, i32* %11, align 8, !dbg !4276, !tbaa !918
  %13 = and i32 %12, 1, !dbg !4276
  %14 = icmp eq i32 %13, 0, !dbg !4276
  br i1 %14, label %26, label %15, !dbg !4278

; <label>:15:                                     ; preds = %10
  %16 = and i32 %12, -260, !dbg !4279
  %17 = or i32 %16, 2, !dbg !4281
  store i32 %17, i32* %11, align 8, !dbg !4281, !tbaa !918
  %18 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4282, !tbaa !784
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %18, i64 0, i32 6, i64 0, !dbg !4284
  %20 = bitcast %struct.clusterNode** %19 to i8*, !dbg !4284
  %21 = tail call i8* @memset(i8* nonnull %20, i32 0, i64 131072) #8, !dbg !4285
  %22 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4286, !tbaa !784
  %23 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %22, i64 0, i32 7, i64 0, !dbg !4287
  %24 = bitcast %struct.clusterNode** %23 to i8*, !dbg !4287
  %25 = tail call i8* @memset(i8* nonnull %24, i32 0, i64 131072) #8, !dbg !4288
  br label %69, !dbg !4289

; <label>:26:                                     ; preds = %10
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 8, !dbg !4290
  %28 = load %struct.clusterNode*, %struct.clusterNode** %27, align 8, !dbg !4290, !tbaa !1012
  %29 = icmp eq %struct.clusterNode* %28, null, !dbg !4293
  br i1 %29, label %69, label %30, !dbg !4294

; <label>:30:                                     ; preds = %26
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %28, i64 0, i32 6
  %32 = load i32, i32* %31, align 4, !tbaa !1027
  %33 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %28, i64 0, i32 7
  %34 = sext i32 %32 to i64, !dbg !4299
  br label %35, !dbg !4299

; <label>:35:                                     ; preds = %38, %30
  %36 = phi i64 [ %43, %38 ], [ 0, %30 ], !dbg !4300
  %37 = icmp slt i64 %36, %34, !dbg !4301
  br i1 %37, label %38, label %69, !dbg !4302

; <label>:38:                                     ; preds = %35
  %39 = load %struct.clusterNode**, %struct.clusterNode*** %33, align 8, !dbg !4303, !tbaa !1030
  %40 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %39, i64 %36, !dbg !4304
  %41 = load %struct.clusterNode*, %struct.clusterNode** %40, align 8, !dbg !4304, !tbaa !757
  %42 = icmp eq %struct.clusterNode* %41, %2, !dbg !4305
  %43 = add nuw nsw i64 %36, 1, !dbg !4300
  br i1 %42, label %44, label %35, !dbg !4306, !llvm.loop !2357

; <label>:44:                                     ; preds = %38
  %45 = trunc i64 %43 to i32, !dbg !4298
  %46 = icmp sgt i32 %32, %45, !dbg !4307
  br i1 %46, label %47, label %61, !dbg !4308

; <label>:47:                                     ; preds = %44
  %48 = trunc i64 %36 to i32, !dbg !4298
  %49 = and i64 %36, 4294967295, !dbg !4304
  %50 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %39, i64 %49, !dbg !4304
  %51 = xor i32 %48, -1, !dbg !4309
  %52 = add i32 %32, %51, !dbg !4309
  %53 = bitcast %struct.clusterNode** %50 to i8*, !dbg !4311
  %54 = and i64 %43, 4294967295, !dbg !4312
  %55 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %39, i64 %54, !dbg !4312
  %56 = bitcast %struct.clusterNode** %55 to i8*, !dbg !4313
  %57 = sext i32 %52 to i64, !dbg !4314
  %58 = shl nsw i64 %57, 3, !dbg !4315
  %59 = tail call i8* @memmove(i8* %53, i8* nonnull %56, i64 %58) #8, !dbg !4316
  %60 = load i32, i32* %31, align 4, !dbg !4317, !tbaa !1027
  br label %61, !dbg !4318

; <label>:61:                                     ; preds = %47, %44
  %62 = phi i32 [ %60, %47 ], [ %32, %44 ], !dbg !4317
  %63 = add nsw i32 %62, -1, !dbg !4317
  store i32 %63, i32* %31, align 4, !dbg !4317, !tbaa !1027
  %64 = icmp eq i32 %63, 0, !dbg !4319
  br i1 %64, label %65, label %69, !dbg !4320

; <label>:65:                                     ; preds = %61
  %66 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %28, i64 0, i32 2, !dbg !4321
  %67 = load i32, i32* %66, align 8, !dbg !4322, !tbaa !918
  %68 = and i32 %67, -257, !dbg !4322
  store i32 %68, i32* %66, align 8, !dbg !4322, !tbaa !918
  br label %69, !dbg !4323

; <label>:69:                                     ; preds = %35, %65, %61, %26, %15
  %70 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4324, !tbaa !757
  %71 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 8, !dbg !4325
  store %struct.clusterNode* %0, %struct.clusterNode** %71, align 8, !dbg !4326, !tbaa !1012
  %72 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6, !dbg !4331
  %73 = load i32, i32* %72, align 4, !dbg !4331, !tbaa !1027
  %74 = icmp sgt i32 %73, 0, !dbg !4332
  %75 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7, !dbg !4333
  %76 = load %struct.clusterNode**, %struct.clusterNode*** %75, align 8, !dbg !4333, !tbaa !1030
  br i1 %74, label %77, label %87, !dbg !4334

; <label>:77:                                     ; preds = %69
  %78 = sext i32 %73 to i64
  br label %81, !dbg !4335

; <label>:79:                                     ; preds = %81
  %80 = icmp slt i64 %86, %78, !dbg !4332
  br i1 %80, label %81, label %87, !dbg !4334, !llvm.loop !1034

; <label>:81:                                     ; preds = %79, %77
  %82 = phi i64 [ 0, %77 ], [ %86, %79 ]
  %83 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %76, i64 %82, !dbg !4335
  %84 = load %struct.clusterNode*, %struct.clusterNode** %83, align 8, !dbg !4335, !tbaa !757
  %85 = icmp eq %struct.clusterNode* %84, %70, !dbg !4336
  %86 = add nuw nsw i64 %82, 1, !dbg !4337
  br i1 %85, label %102, label %79, !dbg !4338

; <label>:87:                                     ; preds = %79, %69
  %88 = bitcast %struct.clusterNode** %76 to i8*, !dbg !4339
  %89 = add nsw i32 %73, 1, !dbg !4340
  %90 = sext i32 %89 to i64, !dbg !4341
  %91 = shl nsw i64 %90, 3, !dbg !4342
  %92 = tail call i8* @zrealloc(i8* %88, i64 %91) #8, !dbg !4343
  %93 = bitcast i8* %92 to %struct.clusterNode**, !dbg !4343
  %94 = bitcast %struct.clusterNode*** %75 to i8**, !dbg !4344
  store i8* %92, i8** %94, align 8, !dbg !4344, !tbaa !1030
  %95 = load i32, i32* %72, align 4, !dbg !4345, !tbaa !1027
  %96 = sext i32 %95 to i64, !dbg !4346
  %97 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %93, i64 %96, !dbg !4346
  store %struct.clusterNode* %70, %struct.clusterNode** %97, align 8, !dbg !4347, !tbaa !757
  %98 = add nsw i32 %95, 1, !dbg !4348
  store i32 %98, i32* %72, align 4, !dbg !4348, !tbaa !1027
  %99 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !4349
  %100 = load i32, i32* %99, align 8, !dbg !4350, !tbaa !918
  %101 = or i32 %100, 256, !dbg !4350
  store i32 %101, i32* %99, align 8, !dbg !4350, !tbaa !918
  br label %102, !dbg !4351

; <label>:102:                                    ; preds = %81, %87
  %103 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 16, i64 0, !dbg !4352
  %104 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 17, !dbg !4353
  %105 = load i32, i32* %104, align 8, !dbg !4353, !tbaa !891
  tail call void @replicationSetMaster(i8* nonnull %103, i32 %105) #8, !dbg !4354
  %106 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4355, !tbaa !784
  %107 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %106, i64 0, i32 17, !dbg !4357
  %108 = load i64, i64* %107, align 8, !dbg !4357, !tbaa !1950
  %109 = icmp eq i64 %108, 0, !dbg !4358
  br i1 %109, label %115, label %110, !dbg !4359

; <label>:110:                                    ; preds = %102
  %111 = tail call i32 @clientsArePaused() #8, !dbg !4360
  %112 = icmp eq i32 %111, 0, !dbg !4360
  br i1 %112, label %115, label %113, !dbg !4361

; <label>:113:                                    ; preds = %110
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !4362, !tbaa !2134
  %114 = tail call i32 @clientsArePaused() #8, !dbg !4363
  br label %115, !dbg !4364

; <label>:115:                                    ; preds = %102, %110, %113
  %116 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4365, !tbaa !784
  %117 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %116, i64 0, i32 17, !dbg !4366
  store i64 0, i64* %117, align 8, !dbg !4367, !tbaa !1950
  %118 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %116, i64 0, i32 20, !dbg !4368
  store i32 0, i32* %118, align 8, !dbg !4369, !tbaa !1953
  %119 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %116, i64 0, i32 18, !dbg !4370
  store %struct.clusterNode* null, %struct.clusterNode** %119, align 8, !dbg !4371, !tbaa !1956
  %120 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %116, i64 0, i32 19, !dbg !4372
  store i64 0, i64* %120, align 8, !dbg !4373, !tbaa !1959
  ret void, !dbg !4374
}

; Function Attrs: noredzone
declare dso_local i32 @delKeysInSlot(i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterProcessPacket(%struct.clusterLink*) local_unnamed_addr #0 !dbg !4375 {
  %2 = alloca [46 x i8], align 16
  %3 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 3, !dbg !4461
  %4 = bitcast i8** %3 to %struct.clusterMsg**, !dbg !4461
  %5 = load %struct.clusterMsg*, %struct.clusterMsg** %4, align 8, !dbg !4461, !tbaa !2110
  %6 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 1, !dbg !4463
  %7 = load i32, i32* %6, align 4, !dbg !4463, !tbaa !2627
  %8 = tail call i32 @lwip_htonl(i32 %7) #8, !dbg !4463
  %9 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 4, !dbg !4465
  %10 = load i16, i16* %9, align 4, !dbg !4465, !tbaa !4466
  %11 = tail call zeroext i16 @lwip_htons(i16 zeroext %10) #8, !dbg !4465
  %12 = zext i16 %11 to i32, !dbg !4468
  %13 = icmp ult i16 %11, 10, !dbg !4470
  br i1 %13, label %14, label %20, !dbg !4471

; <label>:14:                                     ; preds = %1
  %15 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4472, !tbaa !784
  %16 = zext i16 %11 to i64, !dbg !4473
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 %16, !dbg !4473
  %18 = load i64, i64* %17, align 8, !dbg !4474, !tbaa !1148
  %19 = add nsw i64 %18, 1, !dbg !4474
  store i64 %19, i64* %17, align 8, !dbg !4474, !tbaa !1148
  br label %20, !dbg !4473

; <label>:20:                                     ; preds = %14, %1
  %21 = zext i32 %8 to i64, !dbg !4475
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.50, i64 0, i64 0), i32 %12, i64 %21) #8, !dbg !4476
  %22 = icmp ult i32 %8, 16, !dbg !4477
  br i1 %22, label %798, label %23, !dbg !4479

; <label>:23:                                     ; preds = %20
  %24 = load i8*, i8** %3, align 8, !dbg !4480, !tbaa !2110
  %25 = getelementptr inbounds i8, i8* %24, i64 -1, !dbg !4484
  %26 = load i8, i8* %25, align 1, !dbg !4484, !tbaa !745
  %27 = trunc i8 %26 to i3, !dbg !4486
  switch i3 %27, label %49 [
    i3 0, label %28
    i3 1, label %31
    i3 2, label %35
    i3 3, label %40
    i3 -4, label %45
  ], !dbg !4486

; <label>:28:                                     ; preds = %23
  %29 = lshr i8 %26, 3, !dbg !4487
  %30 = zext i8 %29 to i64, !dbg !4487
  br label %49, !dbg !4488

; <label>:31:                                     ; preds = %23
  %32 = getelementptr inbounds i8, i8* %24, i64 -3, !dbg !4489
  %33 = load i8, i8* %32, align 1, !dbg !4490, !tbaa !745
  %34 = zext i8 %33 to i64, !dbg !4489
  br label %49, !dbg !4491

; <label>:35:                                     ; preds = %23
  %36 = getelementptr inbounds i8, i8* %24, i64 -5, !dbg !4492
  %37 = bitcast i8* %36 to i16*, !dbg !4493
  %38 = load i16, i16* %37, align 1, !dbg !4493, !tbaa !1493
  %39 = zext i16 %38 to i64, !dbg !4492
  br label %49, !dbg !4494

; <label>:40:                                     ; preds = %23
  %41 = getelementptr inbounds i8, i8* %24, i64 -9, !dbg !4495
  %42 = bitcast i8* %41 to i32*, !dbg !4496
  %43 = load i32, i32* %42, align 1, !dbg !4496, !tbaa !708
  %44 = zext i32 %43 to i64, !dbg !4495
  br label %49, !dbg !4497

; <label>:45:                                     ; preds = %23
  %46 = getelementptr inbounds i8, i8* %24, i64 -17, !dbg !4498
  %47 = bitcast i8* %46 to i64*, !dbg !4499
  %48 = load i64, i64* %47, align 1, !dbg !4499, !tbaa !1500
  br label %49, !dbg !4500

; <label>:49:                                     ; preds = %23, %28, %31, %35, %40, %45
  %50 = phi i64 [ %48, %45 ], [ %44, %40 ], [ %39, %35 ], [ %34, %31 ], [ %30, %28 ], [ 0, %23 ], !dbg !4501
  %51 = icmp ult i64 %50, %21, !dbg !4502
  br i1 %51, label %798, label %52, !dbg !4503

; <label>:52:                                     ; preds = %49
  %53 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 2, !dbg !4504
  %54 = load i16, i16* %53, align 8, !dbg !4504, !tbaa !4506
  %55 = tail call zeroext i16 @lwip_htons(i16 zeroext %54) #8, !dbg !4504
  %56 = icmp eq i16 %55, 1, !dbg !4507
  br i1 %56, label %57, label %798, !dbg !4508

; <label>:57:                                     ; preds = %52
  %58 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 15, !dbg !4509
  %59 = load i16, i16* %58, align 2, !dbg !4509, !tbaa !4510
  %60 = tail call zeroext i16 @lwip_htons(i16 zeroext %59) #8, !dbg !4509
  %61 = icmp eq i16 %11, 0, !dbg !4514
  switch i16 %11, label %95 [
    i16 2, label %62
    i16 1, label %62
    i16 0, label %62
    i16 3, label %70
    i16 4, label %72
    i16 5, label %84
    i16 6, label %84
    i16 8, label %84
    i16 7, label %86
    i16 9, label %88
  ], !dbg !4515

; <label>:62:                                     ; preds = %57, %57, %57
  %63 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 5, !dbg !4516
  %64 = load i16, i16* %63, align 2, !dbg !4516, !tbaa !3690
  %65 = tail call zeroext i16 @lwip_htons(i16 zeroext %64) #8, !dbg !4516
  %66 = zext i16 %65 to i32, !dbg !4519
  %67 = mul nuw nsw i32 %66, 104, !dbg !4520
  %68 = add nuw nsw i32 %67, 2256, !dbg !4521
  %69 = icmp eq i32 %8, %68, !dbg !4522
  br i1 %69, label %95, label %798

; <label>:70:                                     ; preds = %57
  %71 = icmp eq i32 %8, 2296, !dbg !4525
  br i1 %71, label %95, label %798

; <label>:72:                                     ; preds = %57
  %73 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, !dbg !4528
  %74 = bitcast %union.clusterMsgData* %73 to %struct.clusterMsgDataPublish*, !dbg !4528
  %75 = bitcast %union.clusterMsgData* %73 to i32*, !dbg !4528
  %76 = load i32, i32* %75, align 8, !dbg !4528, !tbaa !745
  %77 = tail call i32 @lwip_htonl(i32 %76) #8, !dbg !4528
  %78 = getelementptr inbounds %struct.clusterMsgDataPublish, %struct.clusterMsgDataPublish* %74, i64 0, i32 1, !dbg !4529
  %79 = load i32, i32* %78, align 4, !dbg !4529, !tbaa !745
  %80 = tail call i32 @lwip_htonl(i32 %79) #8, !dbg !4529
  %81 = add i32 %77, 2264, !dbg !4530
  %82 = add i32 %81, %80, !dbg !4531
  %83 = icmp eq i32 %8, %82, !dbg !4532
  br i1 %83, label %95, label %798

; <label>:84:                                     ; preds = %57, %57, %57
  %85 = icmp eq i32 %8, 2256, !dbg !4535
  br i1 %85, label %95, label %798

; <label>:86:                                     ; preds = %57
  %87 = icmp eq i32 %8, 4352, !dbg !4538
  br i1 %87, label %95, label %798

; <label>:88:                                     ; preds = %57
  %89 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, !dbg !4541
  %90 = bitcast [40 x i8]* %89 to i32*, !dbg !4541
  %91 = load i32, i32* %90, align 8, !dbg !4541, !tbaa !745
  %92 = tail call i32 @lwip_htonl(i32 %91) #8, !dbg !4541
  %93 = add i32 %92, 2269, !dbg !4542
  %94 = icmp eq i32 %8, %93, !dbg !4543
  br i1 %94, label %95, label %798

; <label>:95:                                     ; preds = %57, %70, %84, %88, %86, %72, %62
  %96 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 9, i64 0, !dbg !4545
  %97 = tail call i8* @sdsnewlen(i8* nonnull %96, i64 40) #8, !dbg !4548
  %98 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4550, !tbaa !784
  %99 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %98, i64 0, i32 4, !dbg !4551
  %100 = load %struct.dict*, %struct.dict** %99, align 8, !dbg !4551, !tbaa !832
  %101 = tail call %struct.dictEntry* @dictFind(%struct.dict* %100, i8* %97) #8, !dbg !4552
  tail call void @sdsfree(i8* %97) #8, !dbg !4554
  %102 = icmp eq %struct.dictEntry* %101, null, !dbg !4555
  br i1 %102, label %165, label %103, !dbg !4556

; <label>:103:                                    ; preds = %95
  %104 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %101, i64 0, i32 1, i32 0, !dbg !4557
  %105 = bitcast i8** %104 to %struct.clusterNode**, !dbg !4557
  %106 = load %struct.clusterNode*, %struct.clusterNode** %105, align 8, !dbg !4557, !tbaa !745
  %107 = icmp eq %struct.clusterNode* %106, null, !dbg !4559
  br i1 %107, label %165, label %108, !dbg !4561

; <label>:108:                                    ; preds = %103
  %109 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 2, !dbg !4562
  %110 = load i32, i32* %109, align 8, !dbg !4562, !tbaa !918
  %111 = and i32 %110, 32, !dbg !4562
  %112 = icmp eq i32 %111, 0, !dbg !4562
  br i1 %112, label %113, label %165, !dbg !4563

; <label>:113:                                    ; preds = %108
  %114 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 6, !dbg !4564
  %115 = load i64, i64* %114, align 8, !dbg !4564, !tbaa !4566
  %116 = tail call i64 @intrev64(i64 %115) #8, !dbg !4564
  %117 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 7, !dbg !4567
  %118 = load i64, i64* %117, align 8, !dbg !4567, !tbaa !4568
  %119 = tail call i64 @intrev64(i64 %118) #8, !dbg !4567
  %120 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4569, !tbaa !784
  %121 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %120, i64 0, i32 1, !dbg !4571
  %122 = load i64, i64* %121, align 8, !dbg !4571, !tbaa !793
  %123 = icmp ugt i64 %116, %122, !dbg !4572
  br i1 %123, label %124, label %125, !dbg !4573

; <label>:124:                                    ; preds = %113
  store i64 %116, i64* %121, align 8, !dbg !4574, !tbaa !793
  br label %125, !dbg !4575

; <label>:125:                                    ; preds = %124, %113
  %126 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 3, !dbg !4576
  %127 = load i64, i64* %126, align 8, !dbg !4576, !tbaa !1075
  %128 = icmp ugt i64 %119, %127, !dbg !4578
  br i1 %128, label %129, label %133, !dbg !4579

; <label>:129:                                    ; preds = %125
  store i64 %119, i64* %126, align 8, !dbg !4580, !tbaa !1075
  %130 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %120, i64 0, i32 22, !dbg !4584
  %131 = load i32, i32* %130, align 8, !dbg !4585, !tbaa !1465
  %132 = or i32 %131, 12, !dbg !4585
  store i32 %132, i32* %130, align 8, !dbg !4585, !tbaa !1465
  br label %133, !dbg !4586

; <label>:133:                                    ; preds = %129, %125
  %134 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 8, !dbg !4587
  %135 = load i64, i64* %134, align 8, !dbg !4587, !tbaa !4588
  %136 = tail call i64 @intrev64(i64 %135) #8, !dbg !4587
  %137 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 15, !dbg !4589
  store i64 %136, i64* %137, align 8, !dbg !4590, !tbaa !1175
  %138 = tail call i64 @mstime() #8, !dbg !4591
  %139 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 13, !dbg !4592
  store i64 %138, i64* %139, align 8, !dbg !4593, !tbaa !1172
  %140 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4594, !tbaa !784
  %141 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %140, i64 0, i32 17, !dbg !4596
  %142 = load i64, i64* %141, align 8, !dbg !4596, !tbaa !1950
  %143 = icmp eq i64 %142, 0, !dbg !4597
  br i1 %143, label %165, label %144, !dbg !4598

; <label>:144:                                    ; preds = %133
  %145 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4599, !tbaa !757
  %146 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %145, i64 0, i32 2, !dbg !4599
  %147 = load i32, i32* %146, align 8, !dbg !4599, !tbaa !918
  %148 = and i32 %147, 2, !dbg !4599
  %149 = icmp eq i32 %148, 0, !dbg !4599
  br i1 %149, label %165, label %150, !dbg !4600

; <label>:150:                                    ; preds = %144
  %151 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %145, i64 0, i32 8, !dbg !4601
  %152 = load %struct.clusterNode*, %struct.clusterNode** %151, align 8, !dbg !4601, !tbaa !1012
  %153 = icmp eq %struct.clusterNode* %152, %106, !dbg !4602
  br i1 %153, label %154, label %165, !dbg !4603

; <label>:154:                                    ; preds = %150
  %155 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 17, i64 0, !dbg !4604
  %156 = load i8, i8* %155, align 1, !dbg !4604, !tbaa !745
  %157 = and i8 %156, 1, !dbg !4605
  %158 = icmp eq i8 %157, 0, !dbg !4605
  br i1 %158, label %165, label %159, !dbg !4606

; <label>:159:                                    ; preds = %154
  %160 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %140, i64 0, i32 19, !dbg !4607
  %161 = load i64, i64* %160, align 8, !dbg !4607, !tbaa !1959
  %162 = icmp eq i64 %161, 0, !dbg !4608
  br i1 %162, label %163, label %165, !dbg !4609

; <label>:163:                                    ; preds = %159
  %164 = load i64, i64* %137, align 8, !dbg !4610, !tbaa !1175
  store i64 %164, i64* %160, align 8, !dbg !4612, !tbaa !1959
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.51, i64 0, i64 0), i64 %164) #8, !dbg !4613
  br label %165, !dbg !4614

; <label>:165:                                    ; preds = %103, %95, %154, %144, %133, %108, %150, %159, %163
  %166 = phi i1 [ true, %108 ], [ true, %163 ], [ true, %159 ], [ true, %154 ], [ true, %150 ], [ true, %144 ], [ true, %133 ], [ false, %103 ], [ false, %95 ]
  %167 = phi %struct.clusterNode* [ %106, %108 ], [ %106, %163 ], [ %106, %159 ], [ %106, %154 ], [ %106, %150 ], [ %106, %144 ], [ %106, %133 ], [ null, %103 ], [ null, %95 ]
  %168 = phi i64 [ 0, %108 ], [ %119, %163 ], [ %119, %159 ], [ %119, %154 ], [ %119, %150 ], [ %119, %144 ], [ %119, %133 ], [ 0, %103 ], [ 0, %95 ], !dbg !4615
  %169 = phi i64 [ 0, %108 ], [ %116, %163 ], [ %116, %159 ], [ %116, %154 ], [ %116, %150 ], [ %116, %144 ], [ %116, %133 ], [ 0, %103 ], [ 0, %95 ], !dbg !4615
  switch i16 %11, label %797 [
    i16 2, label %173
    i16 0, label %173
    i16 1, label %170
    i16 3, label %637
    i16 4, label %669
    i16 5, label %698
    i16 6, label %700
    i16 8, label %722
    i16 7, label %752
    i16 9, label %785
  ], !dbg !4616

; <label>:170:                                    ; preds = %165
  %171 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 4, !dbg !4617
  %172 = bitcast %struct.clusterNode** %171 to i8**, !dbg !4617
  br label %286, !dbg !4616

; <label>:173:                                    ; preds = %165, %165
  %174 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 4, !dbg !4618
  %175 = bitcast %struct.clusterNode** %174 to i8**, !dbg !4618
  %176 = load i8*, i8** %175, align 8, !dbg !4618, !tbaa !2113
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.52, i64 0, i64 0), i8* %176) #8, !dbg !4619
  %177 = icmp eq i16 %11, 2, !dbg !4620
  br i1 %177, label %186, label %178, !dbg !4621

; <label>:178:                                    ; preds = %173
  %179 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4622, !tbaa !757
  %180 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %179, i64 0, i32 16, i64 0, !dbg !4622
  %181 = load i8, i8* %180, align 8, !dbg !4622, !tbaa !745
  %182 = icmp eq i8 %181, 0, !dbg !4623
  %183 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !4624
  %184 = icmp eq i8* %183, null, !dbg !4625
  %185 = and i1 %182, %184, !dbg !4626
  br i1 %185, label %189, label %285, !dbg !4626

; <label>:186:                                    ; preds = %173
  %187 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !4624, !tbaa !4627
  %188 = icmp eq i8* %187, null, !dbg !4625
  br i1 %188, label %189, label %211, !dbg !4628

; <label>:189:                                    ; preds = %178, %186
  %190 = getelementptr inbounds [46 x i8], [46 x i8]* %2, i64 0, i64 0, !dbg !4629
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %190) #9, !dbg !4629
  %191 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !4631
  %192 = load i32, i32* %191, align 8, !dbg !4631, !tbaa !2117
  %193 = call i32 @anetSockName(i32 %192, i8* nonnull %190, i64 46, i32* null) #8, !dbg !4633
  %194 = icmp eq i32 %193, -1, !dbg !4634
  br i1 %194, label %210, label %195, !dbg !4635

; <label>:195:                                    ; preds = %189
  %196 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4636, !tbaa !757
  %197 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %196, i64 0, i32 16, i64 0, !dbg !4636
  %198 = call i32 @strcmp(i8* nonnull %190, i8* nonnull %197) #8, !dbg !4637
  %199 = icmp eq i32 %198, 0, !dbg !4637
  br i1 %199, label %210, label %200, !dbg !4638

; <label>:200:                                    ; preds = %195
  %201 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4639, !tbaa !757
  %202 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %201, i64 0, i32 16, i64 0, !dbg !4639
  %203 = call i8* @memcpy(i8* nonnull %202, i8* nonnull %190, i64 46) #8, !dbg !4641
  %204 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4642, !tbaa !757
  %205 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %204, i64 0, i32 16, i64 0, !dbg !4642
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.53, i64 0, i64 0), i8* nonnull %205) #8, !dbg !4643
  %206 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4646, !tbaa !784
  %207 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %206, i64 0, i32 22, !dbg !4647
  %208 = load i32, i32* %207, align 8, !dbg !4648, !tbaa !1465
  %209 = or i32 %208, 4, !dbg !4648
  store i32 %209, i32* %207, align 8, !dbg !4648, !tbaa !1465
  br label %210, !dbg !4649

; <label>:210:                                    ; preds = %195, %189, %200
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %190) #9, !dbg !4650
  br label %211, !dbg !4651

; <label>:211:                                    ; preds = %210, %186
  %212 = xor i1 %177, true, !dbg !4652
  %213 = or i1 %166, %212, !dbg !4652
  br i1 %213, label %285, label %214, !dbg !4652

; <label>:214:                                    ; preds = %211
  %215 = call i8* @zmalloc(i64 2264) #8, !dbg !4656
  %216 = getelementptr inbounds i8, i8* %215, i64 8, !dbg !4658
  call void @getRandomHexChars(i8* nonnull %216, i64 40) #8, !dbg !4659
  %217 = call i64 @mstime() #8, !dbg !4660
  %218 = bitcast i8* %215 to i64*, !dbg !4661
  store i64 %217, i64* %218, align 8, !dbg !4662, !tbaa !1130
  %219 = getelementptr inbounds i8, i8* %215, i64 56, !dbg !4663
  %220 = bitcast i8* %219 to i64*, !dbg !4663
  store i64 0, i64* %220, align 8, !dbg !4664, !tbaa !1075
  %221 = getelementptr inbounds i8, i8* %215, i64 48, !dbg !4665
  %222 = bitcast i8* %221 to i32*, !dbg !4665
  store i32 32, i32* %222, align 8, !dbg !4666, !tbaa !918
  %223 = getelementptr inbounds i8, i8* %215, i64 64, !dbg !4667
  %224 = call i8* @memset(i8* nonnull %223, i32 0, i64 2048) #8, !dbg !4668
  %225 = getelementptr inbounds i8, i8* %215, i64 2112, !dbg !4669
  %226 = bitcast i8* %225 to i32*, !dbg !4669
  store i32 0, i32* %226, align 8, !dbg !4670, !tbaa !1139
  %227 = getelementptr inbounds i8, i8* %215, i64 2116, !dbg !4671
  %228 = bitcast i8* %227 to i32*, !dbg !4671
  store i32 0, i32* %228, align 4, !dbg !4672, !tbaa !1027
  %229 = getelementptr inbounds i8, i8* %215, i64 2120, !dbg !4673
  %230 = bitcast i8* %229 to %struct.clusterNode***, !dbg !4673
  store %struct.clusterNode** null, %struct.clusterNode*** %230, align 8, !dbg !4674, !tbaa !1030
  %231 = getelementptr inbounds i8, i8* %215, i64 2128, !dbg !4675
  %232 = bitcast i8* %231 to %struct.clusterNode**, !dbg !4675
  store %struct.clusterNode* null, %struct.clusterNode** %232, align 8, !dbg !4676, !tbaa !1012
  %233 = getelementptr inbounds i8, i8* %215, i64 2136, !dbg !4677
  %234 = bitcast i8* %233 to <2 x i64>*, !dbg !4678
  store <2 x i64> zeroinitializer, <2 x i64>* %234, align 8, !dbg !4678, !tbaa !1148
  %235 = getelementptr inbounds i8, i8* %215, i64 2152, !dbg !4679
  %236 = bitcast i8* %235 to i64*, !dbg !4679
  store i64 0, i64* %236, align 8, !dbg !4680, !tbaa !945
  %237 = getelementptr inbounds i8, i8* %215, i64 2248, !dbg !4681
  %238 = bitcast i8* %237 to %struct.clusterLink**, !dbg !4681
  store %struct.clusterLink* null, %struct.clusterLink** %238, align 8, !dbg !4682, !tbaa !1153
  %239 = getelementptr inbounds i8, i8* %215, i64 2192, !dbg !4683
  %240 = call i8* @memset(i8* nonnull %239, i32 0, i64 46) #8, !dbg !4684
  %241 = getelementptr inbounds i8, i8* %215, i64 2240, !dbg !4685
  %242 = bitcast i8* %241 to i32*, !dbg !4685
  store i32 0, i32* %242, align 8, !dbg !4686, !tbaa !891
  %243 = getelementptr inbounds i8, i8* %215, i64 2244, !dbg !4687
  %244 = bitcast i8* %243 to i32*, !dbg !4687
  store i32 0, i32* %244, align 4, !dbg !4688, !tbaa !898
  %245 = call %struct.list* @listCreate() #8, !dbg !4689
  %246 = getelementptr inbounds i8, i8* %215, i64 2256, !dbg !4690
  %247 = bitcast i8* %246 to %struct.list**, !dbg !4690
  store %struct.list* %245, %struct.list** %247, align 8, !dbg !4691, !tbaa !1163
  %248 = getelementptr inbounds i8, i8* %215, i64 2160, !dbg !4692
  %249 = bitcast i8* %248 to i64*, !dbg !4692
  store i64 0, i64* %249, align 8, !dbg !4693, !tbaa !1166
  %250 = getelementptr inbounds i8, i8* %215, i64 2176, !dbg !4694
  %251 = bitcast i8* %250 to i64*, !dbg !4694
  store i64 0, i64* %251, align 8, !dbg !4695, !tbaa !1169
  %252 = getelementptr inbounds i8, i8* %215, i64 2168, !dbg !4696
  %253 = bitcast i8* %252 to i64*, !dbg !4696
  store i64 0, i64* %253, align 8, !dbg !4697, !tbaa !1172
  %254 = getelementptr inbounds i8, i8* %215, i64 2184, !dbg !4698
  %255 = bitcast i8* %254 to i64*, !dbg !4698
  store i64 0, i64* %255, align 8, !dbg !4699, !tbaa !1175
  %256 = getelementptr inbounds %struct.list, %struct.list* %245, i64 0, i32 3, !dbg !4700
  store void (i8*)* @zfree, void (i8*)** %256, align 8, !dbg !4700, !tbaa !1177
  %257 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 12, i64 0, !dbg !4702
  %258 = load i8, i8* %257, align 1, !dbg !4707, !tbaa !745
  %259 = icmp eq i8 %258, 0, !dbg !4708
  br i1 %259, label %263, label %260, !dbg !4709

; <label>:260:                                    ; preds = %214
  %261 = call i8* @memcpy(i8* nonnull %239, i8* nonnull %257, i64 46) #8, !dbg !4710
  %262 = getelementptr inbounds i8, i8* %215, i64 2237, !dbg !4711
  store i8 0, i8* %262, align 1, !dbg !4712, !tbaa !745
  br label %267, !dbg !4713

; <label>:263:                                    ; preds = %214
  %264 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !4714
  %265 = load i32, i32* %264, align 8, !dbg !4714, !tbaa !2117
  %266 = call i32 @anetPeerToString(i32 %265, i8* nonnull %239, i64 46, i32* null) #8, !dbg !4715
  br label %267

; <label>:267:                                    ; preds = %263, %260
  %268 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 3, !dbg !4716
  %269 = load i16, i16* %268, align 2, !dbg !4716, !tbaa !4010
  %270 = call zeroext i16 @lwip_htons(i16 zeroext %269) #8, !dbg !4716
  %271 = zext i16 %270 to i32, !dbg !4716
  store i32 %271, i32* %242, align 8, !dbg !4717, !tbaa !891
  %272 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 14, !dbg !4718
  %273 = load i16, i16* %272, align 8, !dbg !4718, !tbaa !4013
  %274 = call zeroext i16 @lwip_htons(i16 zeroext %273) #8, !dbg !4718
  %275 = zext i16 %274 to i32, !dbg !4718
  store i32 %275, i32* %244, align 4, !dbg !4719, !tbaa !898
  %276 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4722, !tbaa !784
  %277 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %276, i64 0, i32 4, !dbg !4723
  %278 = load %struct.dict*, %struct.dict** %277, align 8, !dbg !4723, !tbaa !832
  %279 = call i8* @sdsnewlen(i8* nonnull %216, i64 40) #8, !dbg !4724
  %280 = call i32 @dictAdd(%struct.dict* %278, i8* %279, i8* %215) #8, !dbg !4725
  %281 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4729, !tbaa !784
  %282 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %281, i64 0, i32 22, !dbg !4730
  %283 = load i32, i32* %282, align 8, !dbg !4731, !tbaa !1465
  %284 = or i32 %283, 4, !dbg !4731
  store i32 %284, i32* %282, align 8, !dbg !4731, !tbaa !1465
  call void @clusterProcessGossipSection(%struct.clusterMsg* nonnull %5, %struct.clusterLink* nonnull %0) #12, !dbg !4732
  br label %285, !dbg !4732

; <label>:285:                                    ; preds = %178, %211, %267
  call void @clusterSendPing(%struct.clusterLink* nonnull %0, i32 1) #12, !dbg !4734
  br label %286

; <label>:286:                                    ; preds = %285, %170
  %287 = phi i8** [ %172, %170 ], [ %175, %285 ], !dbg !4617
  %288 = phi %struct.clusterNode** [ %171, %170 ], [ %174, %285 ], !dbg !4617
  %289 = select i1 %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), !dbg !4735
  %290 = load i8*, i8** %287, align 8, !dbg !4617, !tbaa !2113
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i64 0, i64 0), i8* %289, i8* %290) #8, !dbg !4736
  %291 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4737, !tbaa !2113
  %292 = icmp eq %struct.clusterNode* %291, null, !dbg !4739
  br i1 %292, label %368, label %293, !dbg !4740

; <label>:293:                                    ; preds = %286
  %294 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %291, i64 0, i32 2, !dbg !4741
  %295 = load i32, i32* %294, align 8, !dbg !4741, !tbaa !918
  %296 = and i32 %295, 32, !dbg !4741
  %297 = icmp eq i32 %296, 0, !dbg !4741
  br i1 %297, label %324, label %298, !dbg !4744

; <label>:298:                                    ; preds = %293
  br i1 %166, label %299, label %310, !dbg !4745

; <label>:299:                                    ; preds = %298
  %300 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 1, i64 0, !dbg !4747
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.57, i64 0, i64 0), i8* nonnull %300) #8, !dbg !4750
  %301 = call i32 @nodeUpdateAddressIfNeeded(%struct.clusterNode* nonnull %167, %struct.clusterLink* nonnull %0, %struct.clusterMsg* nonnull %5) #12, !dbg !4751
  %302 = icmp eq i32 %301, 0, !dbg !4751
  br i1 %302, label %308, label %303, !dbg !4753

; <label>:303:                                    ; preds = %299
  %304 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4757, !tbaa !784
  %305 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %304, i64 0, i32 22, !dbg !4758
  %306 = load i32, i32* %305, align 8, !dbg !4759, !tbaa !1465
  %307 = or i32 %306, 6, !dbg !4759
  store i32 %307, i32* %305, align 8, !dbg !4759, !tbaa !1465
  br label %308, !dbg !4760

; <label>:308:                                    ; preds = %299, %303
  %309 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4761, !tbaa !2113
  call void @clusterDelNode(%struct.clusterNode* %309) #12, !dbg !4762
  br label %798, !dbg !4763

; <label>:310:                                    ; preds = %298
  call void @clusterRenameNode(%struct.clusterNode* nonnull %291, i8* nonnull %96) #12, !dbg !4764
  %311 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4765, !tbaa !2113
  %312 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %311, i64 0, i32 1, i64 0, !dbg !4766
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.58, i64 0, i64 0), i8* nonnull %312) #8, !dbg !4767
  %313 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4768, !tbaa !2113
  %314 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %313, i64 0, i32 2, !dbg !4769
  %315 = load i32, i32* %314, align 8, !dbg !4770, !tbaa !918
  %316 = and i32 %315, -33, !dbg !4770
  %317 = and i16 %60, 3, !dbg !4771
  %318 = zext i16 %317 to i32, !dbg !4771
  %319 = or i32 %316, %318, !dbg !4772
  store i32 %319, i32* %314, align 8, !dbg !4772, !tbaa !918
  %320 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4775, !tbaa !784
  %321 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %320, i64 0, i32 22, !dbg !4776
  %322 = load i32, i32* %321, align 8, !dbg !4777, !tbaa !1465
  %323 = or i32 %322, 4, !dbg !4777
  store i32 %323, i32* %321, align 8, !dbg !4777, !tbaa !1465
  br label %387, !dbg !4778

; <label>:324:                                    ; preds = %293
  %325 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %291, i64 0, i32 1, i64 0, !dbg !4779
  %326 = call i32 @memcmp(i8* nonnull %325, i8* nonnull %96, i64 40) #8, !dbg !4781
  %327 = icmp eq i32 %326, 0, !dbg !4782
  br i1 %327, label %368, label %328, !dbg !4783

; <label>:328:                                    ; preds = %324
  %329 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4784, !tbaa !2113
  %330 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %329, i64 0, i32 1, i64 0, !dbg !4786
  %331 = call i64 @mstime() #8, !dbg !4787
  %332 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4788, !tbaa !2113
  %333 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %332, i64 0, i32 0, !dbg !4789
  %334 = load i64, i64* %333, align 8, !dbg !4789, !tbaa !1130
  %335 = sub nsw i64 %331, %334, !dbg !4790
  %336 = trunc i64 %335 to i32, !dbg !4791
  %337 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %332, i64 0, i32 2, !dbg !4792
  %338 = load i32, i32* %337, align 8, !dbg !4792, !tbaa !918
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.59, i64 0, i64 0), i8* nonnull %330, i32 %336, i32 %338) #8, !dbg !4793
  %339 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4794, !tbaa !2113
  %340 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %339, i64 0, i32 2, !dbg !4795
  %341 = load i32, i32* %340, align 8, !dbg !4796, !tbaa !918
  %342 = or i32 %341, 64, !dbg !4796
  store i32 %342, i32* %340, align 8, !dbg !4796, !tbaa !918
  %343 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %339, i64 0, i32 16, i64 0, !dbg !4797
  store i8 0, i8* %343, align 8, !dbg !4798, !tbaa !745
  %344 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4799, !tbaa !2113
  %345 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %344, i64 0, i32 17, !dbg !4800
  store i32 0, i32* %345, align 8, !dbg !4801, !tbaa !891
  %346 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %344, i64 0, i32 18, !dbg !4802
  store i32 0, i32* %346, align 4, !dbg !4803, !tbaa !898
  %347 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !4806
  %348 = load i32, i32* %347, align 8, !dbg !4806, !tbaa !2117
  %349 = icmp eq i32 %348, -1, !dbg !4807
  br i1 %349, label %352, label %350, !dbg !4808

; <label>:350:                                    ; preds = %328
  %351 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !4809, !tbaa !1910
  call void @aeDeleteFileEvent(%struct.aeEventLoop* %351, i32 %348, i32 3) #8, !dbg !4810
  br label %352, !dbg !4811

; <label>:352:                                    ; preds = %350, %328
  %353 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 2, !dbg !4812
  %354 = load i8*, i8** %353, align 8, !dbg !4812, !tbaa !2106
  call void @sdsfree(i8* %354) #8, !dbg !4813
  %355 = load i8*, i8** %3, align 8, !dbg !4814, !tbaa !2110
  call void @sdsfree(i8* %355) #8, !dbg !4815
  %356 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4816, !tbaa !2113
  %357 = icmp eq %struct.clusterNode* %356, null, !dbg !4817
  br i1 %357, label %360, label %358, !dbg !4818

; <label>:358:                                    ; preds = %352
  %359 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %356, i64 0, i32 19, !dbg !4819
  store %struct.clusterLink* null, %struct.clusterLink** %359, align 8, !dbg !4820, !tbaa !1153
  br label %360, !dbg !4821

; <label>:360:                                    ; preds = %352, %358
  %361 = load i32, i32* %347, align 8, !dbg !4822, !tbaa !2117
  %362 = call i32 @close(i32 %361) #8, !dbg !4823
  %363 = bitcast %struct.clusterLink* %0 to i8*, !dbg !4824
  call void @zfree(i8* %363) #8, !dbg !4825
  %364 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4828, !tbaa !784
  %365 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %364, i64 0, i32 22, !dbg !4829
  %366 = load i32, i32* %365, align 8, !dbg !4830, !tbaa !1465
  %367 = or i32 %366, 4, !dbg !4830
  store i32 %367, i32* %365, align 8, !dbg !4830, !tbaa !1465
  br label %798, !dbg !4831

; <label>:368:                                    ; preds = %324, %286
  br i1 %166, label %369, label %387, !dbg !4778

; <label>:369:                                    ; preds = %368
  %370 = and i16 %60, 512, !dbg !4832
  %371 = zext i16 %370 to i32, !dbg !4832
  %372 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 2, !dbg !4834
  %373 = load i32, i32* %372, align 8, !dbg !4835, !tbaa !918
  %374 = and i32 %373, -513, !dbg !4835
  %375 = or i32 %374, %371, !dbg !4836
  store i32 %375, i32* %372, align 8, !dbg !4836, !tbaa !918
  %376 = and i32 %373, 32, !dbg !4837
  %377 = icmp eq i32 %376, 0, !dbg !4837
  %378 = and i1 %61, %377, !dbg !4839
  br i1 %378, label %379, label %387, !dbg !4839

; <label>:379:                                    ; preds = %369
  %380 = call i32 @nodeUpdateAddressIfNeeded(%struct.clusterNode* nonnull %167, %struct.clusterLink* nonnull %0, %struct.clusterMsg* nonnull %5) #12, !dbg !4840
  %381 = icmp eq i32 %380, 0, !dbg !4840
  br i1 %381, label %413, label %382, !dbg !4841

; <label>:382:                                    ; preds = %379
  %383 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4845, !tbaa !784
  %384 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %383, i64 0, i32 22, !dbg !4846
  %385 = load i32, i32* %384, align 8, !dbg !4847, !tbaa !1465
  %386 = or i32 %385, 6, !dbg !4847
  store i32 %386, i32* %384, align 8, !dbg !4847, !tbaa !1465
  br label %413, !dbg !4848

; <label>:387:                                    ; preds = %369, %310, %368
  %388 = phi i1 [ false, %310 ], [ false, %368 ], [ true, %369 ]
  %389 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4849, !tbaa !2113
  %390 = icmp ne %struct.clusterNode* %389, null, !dbg !4851
  %391 = icmp eq i16 %11, 1, !dbg !4852
  %392 = and i1 %391, %390, !dbg !4853
  br i1 %392, label %393, label %412, !dbg !4853

; <label>:393:                                    ; preds = %387
  %394 = call i64 @mstime() #8, !dbg !4854
  %395 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !4856, !tbaa !2113
  %396 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %395, i64 0, i32 10, !dbg !4857
  store i64 %394, i64* %396, align 8, !dbg !4858, !tbaa !1069
  %397 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %395, i64 0, i32 9, !dbg !4859
  store i64 0, i64* %397, align 8, !dbg !4860, !tbaa !1060
  %398 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %395, i64 0, i32 2, !dbg !4861
  %399 = load i32, i32* %398, align 8, !dbg !4861, !tbaa !918
  %400 = and i32 %399, 4, !dbg !4861
  %401 = icmp eq i32 %400, 0, !dbg !4861
  br i1 %401, label %408, label %402, !dbg !4863

; <label>:402:                                    ; preds = %393
  %403 = and i32 %399, -5, !dbg !4864
  store i32 %403, i32* %398, align 8, !dbg !4864, !tbaa !918
  %404 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4868, !tbaa !784
  %405 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %404, i64 0, i32 22, !dbg !4869
  %406 = load i32, i32* %405, align 8, !dbg !4870, !tbaa !1465
  %407 = or i32 %406, 6, !dbg !4870
  store i32 %407, i32* %405, align 8, !dbg !4870, !tbaa !1465
  br i1 %388, label %413, label %798, !dbg !4871

; <label>:408:                                    ; preds = %393
  %409 = and i32 %399, 8, !dbg !4872
  %410 = icmp eq i32 %409, 0, !dbg !4872
  br i1 %410, label %412, label %411, !dbg !4874

; <label>:411:                                    ; preds = %408
  call void @clearNodeFailureIfNeeded(%struct.clusterNode* %395) #12, !dbg !4875
  br i1 %388, label %413, label %798, !dbg !4871

; <label>:412:                                    ; preds = %387, %408
  br i1 %388, label %413, label %798, !dbg !4871

; <label>:413:                                    ; preds = %379, %382, %411, %402, %412
  %414 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 11, i64 0, !dbg !4877
  %415 = call i32 @memcmp(i8* nonnull %414, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.60, i64 0, i64 0), i64 40) #8, !dbg !4878
  %416 = icmp eq i32 %415, 0, !dbg !4878
  br i1 %416, label %417, label %419, !dbg !4879

; <label>:417:                                    ; preds = %413
  call void @clusterSetNodeAsMaster(%struct.clusterNode* nonnull %167) #12, !dbg !4880
  %418 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 2, !dbg !4882
  br label %563, !dbg !4885

; <label>:419:                                    ; preds = %413
  %420 = call i8* @sdsnewlen(i8* nonnull %414, i64 40) #8, !dbg !4888
  %421 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4890, !tbaa !784
  %422 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %421, i64 0, i32 4, !dbg !4891
  %423 = load %struct.dict*, %struct.dict** %422, align 8, !dbg !4891, !tbaa !832
  %424 = call %struct.dictEntry* @dictFind(%struct.dict* %423, i8* %420) #8, !dbg !4892
  call void @sdsfree(i8* %420) #8, !dbg !4894
  %425 = icmp eq %struct.dictEntry* %424, null, !dbg !4895
  br i1 %425, label %430, label %426, !dbg !4896

; <label>:426:                                    ; preds = %419
  %427 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %424, i64 0, i32 1, i32 0, !dbg !4897
  %428 = bitcast i8** %427 to %struct.clusterNode**, !dbg !4897
  %429 = load %struct.clusterNode*, %struct.clusterNode** %428, align 8, !dbg !4897, !tbaa !745
  br label %430, !dbg !4898

; <label>:430:                                    ; preds = %419, %426
  %431 = phi %struct.clusterNode* [ %429, %426 ], [ null, %419 ], !dbg !4899
  %432 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 2, !dbg !4901
  %433 = load i32, i32* %432, align 8, !dbg !4901, !tbaa !918
  %434 = and i32 %433, 1, !dbg !4901
  %435 = icmp eq i32 %434, 0, !dbg !4901
  br i1 %435, label %480, label %436, !dbg !4903

; <label>:436:                                    ; preds = %430, %469
  %437 = phi i64 [ %470, %469 ], [ 0, %430 ]
  %438 = trunc i64 %437 to i32
  %439 = lshr i64 %437, 3
  %440 = and i64 %439, 8191
  %441 = and i32 %438, 7, !dbg !4927
  %442 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 4, i64 %440, !dbg !4929
  %443 = load i8, i8* %442, align 1, !dbg !4929, !tbaa !745
  %444 = zext i8 %443 to i32, !dbg !4929
  %445 = shl i32 1, %441, !dbg !4930
  %446 = and i32 %445, %444, !dbg !4931
  %447 = icmp eq i32 %446, 0, !dbg !4932
  br i1 %447, label %469, label %448, !dbg !4933

; <label>:448:                                    ; preds = %436
  %449 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4937, !tbaa !784
  %450 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %449, i64 0, i32 8, i64 %437, !dbg !4938
  %451 = load %struct.clusterNode*, %struct.clusterNode** %450, align 8, !dbg !4938, !tbaa !757
  %452 = icmp eq %struct.clusterNode* %451, null, !dbg !4940
  br i1 %452, label %469, label %453, !dbg !4941

; <label>:453:                                    ; preds = %448
  %454 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %451, i64 0, i32 4, i64 %440, !dbg !4950
  %455 = load i8, i8* %454, align 1, !dbg !4950, !tbaa !745
  %456 = zext i8 %455 to i32, !dbg !4950
  %457 = and i32 %445, %456, !dbg !4951
  %458 = icmp eq i32 %457, 0, !dbg !4952
  %459 = trunc i32 %445 to i8, !dbg !4958
  %460 = xor i8 %459, -1, !dbg !4958
  %461 = and i8 %455, %460, !dbg !4958
  store i8 %461, i8* %454, align 1, !dbg !4958, !tbaa !745
  br i1 %458, label %462, label %463, !dbg !4959

; <label>:462:                                    ; preds = %453
  call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !4960
  call void @_exit(i32 1) #10, !dbg !4960
  unreachable, !dbg !4960

; <label>:463:                                    ; preds = %453
  %464 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %451, i64 0, i32 5, !dbg !4961
  %465 = load i32, i32* %464, align 8, !dbg !4962, !tbaa !1139
  %466 = add nsw i32 %465, -1, !dbg !4962
  store i32 %466, i32* %464, align 8, !dbg !4962, !tbaa !1139
  %467 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4963, !tbaa !784
  %468 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %467, i64 0, i32 8, i64 %437, !dbg !4964
  store %struct.clusterNode* null, %struct.clusterNode** %468, align 8, !dbg !4965, !tbaa !757
  br label %469, !dbg !4966

; <label>:469:                                    ; preds = %448, %463, %436
  %470 = add nuw nsw i64 %437, 1, !dbg !4967
  %471 = icmp ult i64 %470, 16384, !dbg !4968
  br i1 %471, label %436, label %472, !dbg !4969, !llvm.loop !4970

; <label>:472:                                    ; preds = %469
  %473 = load i32, i32* %432, align 8, !dbg !4973, !tbaa !918
  %474 = and i32 %473, -260, !dbg !4973
  %475 = or i32 %474, 2, !dbg !4974
  store i32 %475, i32* %432, align 8, !dbg !4974, !tbaa !918
  %476 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4977, !tbaa !784
  %477 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %476, i64 0, i32 22, !dbg !4978
  %478 = load i32, i32* %477, align 8, !dbg !4979, !tbaa !1465
  %479 = or i32 %478, 6, !dbg !4979
  store i32 %479, i32* %477, align 8, !dbg !4979, !tbaa !1465
  br label %480, !dbg !4980

; <label>:480:                                    ; preds = %430, %472
  %481 = icmp eq %struct.clusterNode* %431, null, !dbg !4981
  br i1 %481, label %563, label %482, !dbg !4983

; <label>:482:                                    ; preds = %480
  %483 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 8, !dbg !4984
  %484 = load %struct.clusterNode*, %struct.clusterNode** %483, align 8, !dbg !4984, !tbaa !1012
  %485 = icmp eq %struct.clusterNode* %484, %431, !dbg !4985
  br i1 %485, label %563, label %486, !dbg !4986

; <label>:486:                                    ; preds = %482
  %487 = icmp eq %struct.clusterNode* %484, null, !dbg !4987
  br i1 %487, label %527, label %488, !dbg !4990

; <label>:488:                                    ; preds = %486
  %489 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %484, i64 0, i32 6
  %490 = load i32, i32* %489, align 4, !tbaa !1027
  %491 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %484, i64 0, i32 7
  %492 = sext i32 %490 to i64, !dbg !4995
  br label %493, !dbg !4995

; <label>:493:                                    ; preds = %496, %488
  %494 = phi i64 [ %501, %496 ], [ 0, %488 ], !dbg !4996
  %495 = icmp slt i64 %494, %492, !dbg !4997
  br i1 %495, label %496, label %527, !dbg !4998

; <label>:496:                                    ; preds = %493
  %497 = load %struct.clusterNode**, %struct.clusterNode*** %491, align 8, !dbg !4999, !tbaa !1030
  %498 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %497, i64 %494, !dbg !5000
  %499 = load %struct.clusterNode*, %struct.clusterNode** %498, align 8, !dbg !5000, !tbaa !757
  %500 = icmp eq %struct.clusterNode* %499, %167, !dbg !5001
  %501 = add nuw nsw i64 %494, 1, !dbg !4996
  br i1 %500, label %502, label %493, !dbg !5002, !llvm.loop !2357

; <label>:502:                                    ; preds = %496
  %503 = trunc i64 %501 to i32, !dbg !4994
  %504 = icmp sgt i32 %490, %503, !dbg !5003
  br i1 %504, label %505, label %519, !dbg !5004

; <label>:505:                                    ; preds = %502
  %506 = trunc i64 %494 to i32, !dbg !4994
  %507 = and i64 %494, 4294967295, !dbg !5000
  %508 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %497, i64 %507, !dbg !5000
  %509 = xor i32 %506, -1, !dbg !5005
  %510 = add i32 %490, %509, !dbg !5005
  %511 = bitcast %struct.clusterNode** %508 to i8*, !dbg !5007
  %512 = and i64 %501, 4294967295, !dbg !5008
  %513 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %497, i64 %512, !dbg !5008
  %514 = bitcast %struct.clusterNode** %513 to i8*, !dbg !5009
  %515 = sext i32 %510 to i64, !dbg !5010
  %516 = shl nsw i64 %515, 3, !dbg !5011
  %517 = call i8* @memmove(i8* %511, i8* nonnull %514, i64 %516) #8, !dbg !5012
  %518 = load i32, i32* %489, align 4, !dbg !5013, !tbaa !1027
  br label %519, !dbg !5014

; <label>:519:                                    ; preds = %505, %502
  %520 = phi i32 [ %518, %505 ], [ %490, %502 ], !dbg !5013
  %521 = add nsw i32 %520, -1, !dbg !5013
  store i32 %521, i32* %489, align 4, !dbg !5013, !tbaa !1027
  %522 = icmp eq i32 %521, 0, !dbg !5015
  br i1 %522, label %523, label %527, !dbg !5016

; <label>:523:                                    ; preds = %519
  %524 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %484, i64 0, i32 2, !dbg !5017
  %525 = load i32, i32* %524, align 8, !dbg !5018, !tbaa !918
  %526 = and i32 %525, -257, !dbg !5018
  store i32 %526, i32* %524, align 8, !dbg !5018, !tbaa !918
  br label %527, !dbg !5019

; <label>:527:                                    ; preds = %493, %523, %519, %486
  %528 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %431, i64 0, i32 6, !dbg !5024
  %529 = load i32, i32* %528, align 4, !dbg !5024, !tbaa !1027
  %530 = icmp sgt i32 %529, 0, !dbg !5025
  %531 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %431, i64 0, i32 7, !dbg !5026
  %532 = load %struct.clusterNode**, %struct.clusterNode*** %531, align 8, !dbg !5026, !tbaa !1030
  br i1 %530, label %533, label %543, !dbg !5027

; <label>:533:                                    ; preds = %527
  %534 = sext i32 %529 to i64
  br label %537, !dbg !5028

; <label>:535:                                    ; preds = %537
  %536 = icmp slt i64 %542, %534, !dbg !5025
  br i1 %536, label %537, label %543, !dbg !5027, !llvm.loop !1034

; <label>:537:                                    ; preds = %535, %533
  %538 = phi i64 [ 0, %533 ], [ %542, %535 ]
  %539 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %532, i64 %538, !dbg !5028
  %540 = load %struct.clusterNode*, %struct.clusterNode** %539, align 8, !dbg !5028, !tbaa !757
  %541 = icmp eq %struct.clusterNode* %540, %167, !dbg !5029
  %542 = add nuw nsw i64 %538, 1, !dbg !5030
  br i1 %541, label %558, label %535, !dbg !5031

; <label>:543:                                    ; preds = %535, %527
  %544 = bitcast %struct.clusterNode** %532 to i8*, !dbg !5032
  %545 = add nsw i32 %529, 1, !dbg !5033
  %546 = sext i32 %545 to i64, !dbg !5034
  %547 = shl nsw i64 %546, 3, !dbg !5035
  %548 = call i8* @zrealloc(i8* %544, i64 %547) #8, !dbg !5036
  %549 = bitcast i8* %548 to %struct.clusterNode**, !dbg !5036
  %550 = bitcast %struct.clusterNode*** %531 to i8**, !dbg !5037
  store i8* %548, i8** %550, align 8, !dbg !5037, !tbaa !1030
  %551 = load i32, i32* %528, align 4, !dbg !5038, !tbaa !1027
  %552 = sext i32 %551 to i64, !dbg !5039
  %553 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %549, i64 %552, !dbg !5039
  store %struct.clusterNode* %167, %struct.clusterNode** %553, align 8, !dbg !5040, !tbaa !757
  %554 = add nsw i32 %551, 1, !dbg !5041
  store i32 %554, i32* %528, align 4, !dbg !5041, !tbaa !1027
  %555 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %431, i64 0, i32 2, !dbg !5042
  %556 = load i32, i32* %555, align 8, !dbg !5043, !tbaa !918
  %557 = or i32 %556, 256, !dbg !5043
  store i32 %557, i32* %555, align 8, !dbg !5043, !tbaa !918
  br label %558, !dbg !5044

; <label>:558:                                    ; preds = %537, %543
  store %struct.clusterNode* %431, %struct.clusterNode** %483, align 8, !dbg !5045, !tbaa !1012
  %559 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5048, !tbaa !784
  %560 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %559, i64 0, i32 22, !dbg !5049
  %561 = load i32, i32* %560, align 8, !dbg !5050, !tbaa !1465
  %562 = or i32 %561, 4, !dbg !5050
  store i32 %562, i32* %560, align 8, !dbg !5050, !tbaa !1465
  br label %563, !dbg !5051

; <label>:563:                                    ; preds = %417, %482, %480, %558
  %564 = phi i32* [ %418, %417 ], [ %432, %482 ], [ %432, %480 ], [ %432, %558 ], !dbg !4882
  %565 = load i32, i32* %564, align 8, !dbg !4882, !tbaa !918
  %566 = and i32 %565, 1, !dbg !4882
  %567 = icmp eq i32 %566, 0, !dbg !4882
  br i1 %567, label %568, label %572, !dbg !4882

; <label>:568:                                    ; preds = %563
  %569 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 8, !dbg !5054
  %570 = load %struct.clusterNode*, %struct.clusterNode** %569, align 8, !dbg !5054, !tbaa !1012
  %571 = icmp eq %struct.clusterNode* %570, null, !dbg !5055
  br i1 %571, label %621, label %572, !dbg !5057

; <label>:572:                                    ; preds = %568, %563
  %573 = phi %struct.clusterNode* [ %570, %568 ], [ %167, %563 ]
  %574 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %573, i64 0, i32 4, i64 0, !dbg !5058
  %575 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 10, i64 0, !dbg !5060
  %576 = call i32 @memcmp(i8* nonnull %574, i8* nonnull %575, i64 2048) #8, !dbg !5061
  %577 = icmp ne i32 %576, 0, !dbg !5062
  %578 = load i32, i32* %564, align 8, !dbg !5063, !tbaa !918
  %579 = and i32 %578, 1, !dbg !5063
  %580 = icmp ne i32 %579, 0, !dbg !5063
  %581 = and i1 %577, %580, !dbg !5065
  br i1 %581, label %582, label %584, !dbg !5065

; <label>:582:                                    ; preds = %572
  %583 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 10, i64 0, !dbg !5066
  call void @clusterUpdateSlotsConfigWith(%struct.clusterNode* nonnull %167, i64 %168, i8* nonnull %583) #12, !dbg !5067
  br label %585, !dbg !5068

; <label>:584:                                    ; preds = %572
  br i1 %577, label %585, label %621, !dbg !5068

; <label>:585:                                    ; preds = %584, %582
  %586 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8
  br label %587, !dbg !5070

; <label>:587:                                    ; preds = %585, %618
  %588 = phi i64 [ 0, %585 ], [ %619, %618 ]
  %589 = trunc i64 %588 to i32
  %590 = lshr i64 %588, 3
  %591 = and i64 %590, 8191
  %592 = and i32 %589, 7, !dbg !5079
  %593 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 10, i64 %591, !dbg !5081
  %594 = load i8, i8* %593, align 1, !dbg !5081, !tbaa !745
  %595 = zext i8 %594 to i32, !dbg !5081
  %596 = shl i32 1, %592, !dbg !5082
  %597 = and i32 %596, %595, !dbg !5083
  %598 = icmp eq i32 %597, 0, !dbg !5084
  br i1 %598, label %618, label %599, !dbg !5085

; <label>:599:                                    ; preds = %587
  %600 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %586, i64 0, i32 8, i64 %588, !dbg !5086
  %601 = load %struct.clusterNode*, %struct.clusterNode** %600, align 8, !dbg !5086, !tbaa !757
  %602 = icmp eq %struct.clusterNode* %601, %167, !dbg !5089
  %603 = icmp eq %struct.clusterNode* %601, null, !dbg !5090
  %604 = or i1 %602, %603, !dbg !5091
  br i1 %604, label %618, label %605, !dbg !5091

; <label>:605:                                    ; preds = %599
  %606 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %601, i64 0, i32 3, !dbg !5092
  %607 = load i64, i64* %606, align 8, !dbg !5092, !tbaa !1075
  %608 = icmp ugt i64 %607, %168, !dbg !5094
  br i1 %608, label %609, label %618, !dbg !5095

; <label>:609:                                    ; preds = %605
  %610 = and i64 %588, 4294967295, !dbg !5086
  %611 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 1, i64 0, !dbg !5096
  %612 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %601, i64 0, i32 1, i64 0, !dbg !5098
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.61, i64 0, i64 0), i8* nonnull %611, i8* nonnull %612) #8, !dbg !5099
  %613 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 19, !dbg !5100
  %614 = load %struct.clusterLink*, %struct.clusterLink** %613, align 8, !dbg !5100, !tbaa !1153
  %615 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5101, !tbaa !784
  %616 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %615, i64 0, i32 8, i64 %610, !dbg !5102
  %617 = load %struct.clusterNode*, %struct.clusterNode** %616, align 8, !dbg !5102, !tbaa !757
  call void @clusterSendUpdate(%struct.clusterLink* %614, %struct.clusterNode* %617) #12, !dbg !5103
  br label %621, !dbg !5104

; <label>:618:                                    ; preds = %587, %605, %599
  %619 = add nuw nsw i64 %588, 1, !dbg !5105
  %620 = icmp ult i64 %619, 16384, !dbg !5106
  br i1 %620, label %587, label %621, !dbg !5070, !llvm.loop !5107

; <label>:621:                                    ; preds = %618, %584, %568, %609
  %622 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !5109, !tbaa !757
  %623 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %622, i64 0, i32 2, !dbg !5109
  %624 = load i32, i32* %623, align 8, !dbg !5109, !tbaa !918
  %625 = and i32 %624, 1, !dbg !5109
  %626 = icmp eq i32 %625, 0, !dbg !5109
  br i1 %626, label %636, label %627, !dbg !5111

; <label>:627:                                    ; preds = %621
  %628 = load i32, i32* %564, align 8, !dbg !5112, !tbaa !918
  %629 = and i32 %628, 1, !dbg !5112
  %630 = icmp eq i32 %629, 0, !dbg !5112
  br i1 %630, label %636, label %631, !dbg !5113

; <label>:631:                                    ; preds = %627
  %632 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %622, i64 0, i32 3, !dbg !5114
  %633 = load i64, i64* %632, align 8, !dbg !5114, !tbaa !1075
  %634 = icmp eq i64 %168, %633, !dbg !5115
  br i1 %634, label %635, label %636, !dbg !5116

; <label>:635:                                    ; preds = %631
  call void @clusterHandleConfigEpochCollision(%struct.clusterNode* nonnull %167) #12, !dbg !5117
  br label %636, !dbg !5119

; <label>:636:                                    ; preds = %631, %635, %621, %627
  call void @clusterProcessGossipSection(%struct.clusterMsg* %5, %struct.clusterLink* %0) #12, !dbg !5120
  br label %798, !dbg !5120

; <label>:637:                                    ; preds = %165
  %638 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, !dbg !5122
  br i1 %166, label %639, label %668, !dbg !5125

; <label>:639:                                    ; preds = %637
  %640 = bitcast %union.clusterMsgData* %638 to i8*, !dbg !5126
  %641 = tail call i8* @sdsnewlen(i8* nonnull %640, i64 40) #8, !dbg !5130
  %642 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5132, !tbaa !784
  %643 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %642, i64 0, i32 4, !dbg !5133
  %644 = load %struct.dict*, %struct.dict** %643, align 8, !dbg !5133, !tbaa !832
  %645 = tail call %struct.dictEntry* @dictFind(%struct.dict* %644, i8* %641) #8, !dbg !5134
  tail call void @sdsfree(i8* %641) #8, !dbg !5136
  %646 = icmp eq %struct.dictEntry* %645, null, !dbg !5137
  br i1 %646, label %798, label %647, !dbg !5138

; <label>:647:                                    ; preds = %639
  %648 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %645, i64 0, i32 1, i32 0, !dbg !5139
  %649 = bitcast i8** %648 to %struct.clusterNode**, !dbg !5139
  %650 = load %struct.clusterNode*, %struct.clusterNode** %649, align 8, !dbg !5139, !tbaa !745
  %651 = icmp eq %struct.clusterNode* %650, null, !dbg !5141
  br i1 %651, label %798, label %652, !dbg !5143

; <label>:652:                                    ; preds = %647
  %653 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %650, i64 0, i32 2, !dbg !5144
  %654 = load i32, i32* %653, align 8, !dbg !5144, !tbaa !918
  %655 = and i32 %654, 24, !dbg !5145
  %656 = icmp eq i32 %655, 0, !dbg !5145
  br i1 %656, label %657, label %798, !dbg !5146

; <label>:657:                                    ; preds = %652
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.62, i64 0, i64 0), i8* nonnull %96, %union.clusterMsgData* nonnull %638) #8, !dbg !5147
  %658 = load i32, i32* %653, align 8, !dbg !5149, !tbaa !918
  %659 = or i32 %658, 8, !dbg !5149
  store i32 %659, i32* %653, align 8, !dbg !5149, !tbaa !918
  %660 = tail call i64 @mstime() #8, !dbg !5150
  %661 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %650, i64 0, i32 11, !dbg !5151
  store i64 %660, i64* %661, align 8, !dbg !5152, !tbaa !945
  %662 = load i32, i32* %653, align 8, !dbg !5153, !tbaa !918
  %663 = and i32 %662, -5, !dbg !5153
  store i32 %663, i32* %653, align 8, !dbg !5153, !tbaa !918
  %664 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5156, !tbaa !784
  %665 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %664, i64 0, i32 22, !dbg !5157
  %666 = load i32, i32* %665, align 8, !dbg !5158, !tbaa !1465
  %667 = or i32 %666, 6, !dbg !5158
  store i32 %667, i32* %665, align 8, !dbg !5158, !tbaa !1465
  br label %798, !dbg !5159

; <label>:668:                                    ; preds = %637
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.63, i64 0, i64 0), i8* nonnull %96, %union.clusterMsgData* nonnull %638) #8, !dbg !5160
  br label %798

; <label>:669:                                    ; preds = %165
  %670 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 255), align 8, !dbg !5161, !tbaa !5163
  %671 = getelementptr inbounds %struct.dict, %struct.dict* %670, i64 0, i32 2, i64 0, i32 3, !dbg !5161
  %672 = load i64, i64* %671, align 8, !dbg !5161, !tbaa !5164
  %673 = getelementptr inbounds %struct.dict, %struct.dict* %670, i64 0, i32 2, i64 1, i32 3, !dbg !5161
  %674 = load i64, i64* %673, align 8, !dbg !5161, !tbaa !5164
  %675 = sub i64 0, %674, !dbg !5161
  %676 = icmp eq i64 %672, %675, !dbg !5161
  br i1 %676, label %677, label %682, !dbg !5166

; <label>:677:                                    ; preds = %669
  %678 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 256), align 8, !dbg !5167, !tbaa !5168
  %679 = getelementptr inbounds %struct.list, %struct.list* %678, i64 0, i32 5, !dbg !5167
  %680 = load i64, i64* %679, align 8, !dbg !5167, !tbaa !2967
  %681 = icmp eq i64 %680, 0, !dbg !5167
  br i1 %681, label %798, label %682, !dbg !5169

; <label>:682:                                    ; preds = %677, %669
  %683 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, !dbg !5170
  %684 = bitcast %union.clusterMsgData* %683 to %struct.clusterMsgDataPublish*, !dbg !5170
  %685 = bitcast %union.clusterMsgData* %683 to i32*, !dbg !5170
  %686 = load i32, i32* %685, align 8, !dbg !5170, !tbaa !745
  %687 = tail call i32 @lwip_htonl(i32 %686) #8, !dbg !5170
  %688 = getelementptr inbounds %struct.clusterMsgDataPublish, %struct.clusterMsgDataPublish* %684, i64 0, i32 1, !dbg !5173
  %689 = load i32, i32* %688, align 4, !dbg !5173, !tbaa !745
  %690 = tail call i32 @lwip_htonl(i32 %689) #8, !dbg !5173
  %691 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 0, !dbg !5175
  %692 = zext i32 %687 to i64, !dbg !5176
  %693 = tail call %struct.redisObject* @createStringObject(i8* nonnull %691, i64 %692) #8, !dbg !5177
  %694 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 %692, !dbg !5179
  %695 = zext i32 %690 to i64, !dbg !5180
  %696 = tail call %struct.redisObject* @createStringObject(i8* nonnull %694, i64 %695) #8, !dbg !5181
  %697 = tail call i32 @pubsubPublishMessage(%struct.redisObject* %693, %struct.redisObject* %696) #8, !dbg !5183
  tail call void @decrRefCount(%struct.redisObject* %693) #8, !dbg !5184
  tail call void @decrRefCount(%struct.redisObject* %696) #8, !dbg !5185
  br label %798, !dbg !5186

; <label>:698:                                    ; preds = %165
  br i1 %166, label %699, label %798, !dbg !5187

; <label>:699:                                    ; preds = %698
  tail call void @clusterSendFailoverAuthIfNeeded(%struct.clusterNode* nonnull %167, %struct.clusterMsg* nonnull %5) #12, !dbg !5189
  br label %798, !dbg !5190

; <label>:700:                                    ; preds = %165
  br i1 %166, label %701, label %798, !dbg !5191

; <label>:701:                                    ; preds = %700
  %702 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 2, !dbg !5193
  %703 = load i32, i32* %702, align 8, !dbg !5193, !tbaa !918
  %704 = and i32 %703, 1, !dbg !5193
  %705 = icmp eq i32 %704, 0, !dbg !5193
  br i1 %705, label %798, label %706, !dbg !5195

; <label>:706:                                    ; preds = %701
  %707 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 5, !dbg !5196
  %708 = load i32, i32* %707, align 8, !dbg !5196, !tbaa !1139
  %709 = icmp sgt i32 %708, 0, !dbg !5197
  br i1 %709, label %710, label %798, !dbg !5198

; <label>:710:                                    ; preds = %706
  %711 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5199, !tbaa !784
  %712 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %711, i64 0, i32 15, !dbg !5200
  %713 = load i64, i64* %712, align 8, !dbg !5200, !tbaa !1775
  %714 = icmp ult i64 %169, %713, !dbg !5201
  br i1 %714, label %798, label %715, !dbg !5202

; <label>:715:                                    ; preds = %710
  %716 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %711, i64 0, i32 12, !dbg !5203
  %717 = load i32, i32* %716, align 8, !dbg !5205, !tbaa !1769
  %718 = add nsw i32 %717, 1, !dbg !5205
  store i32 %718, i32* %716, align 8, !dbg !5205, !tbaa !1769
  %719 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %711, i64 0, i32 22, !dbg !5208
  %720 = load i32, i32* %719, align 8, !dbg !5209, !tbaa !1465
  %721 = or i32 %720, 1, !dbg !5209
  store i32 %721, i32* %719, align 8, !dbg !5209, !tbaa !1465
  br label %798, !dbg !5210

; <label>:722:                                    ; preds = %165
  br i1 %166, label %723, label %798, !dbg !5211

; <label>:723:                                    ; preds = %722
  %724 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 8, !dbg !5214
  %725 = load %struct.clusterNode*, %struct.clusterNode** %724, align 8, !dbg !5214, !tbaa !1012
  %726 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !5215, !tbaa !757
  %727 = icmp eq %struct.clusterNode* %725, %726, !dbg !5216
  br i1 %727, label %728, label %798, !dbg !5217

; <label>:728:                                    ; preds = %723
  %729 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5218, !tbaa !784
  %730 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %729, i64 0, i32 17, !dbg !5220
  %731 = load i64, i64* %730, align 8, !dbg !5220, !tbaa !1950
  %732 = icmp eq i64 %731, 0, !dbg !5221
  br i1 %732, label %738, label %733, !dbg !5222

; <label>:733:                                    ; preds = %728
  %734 = tail call i32 @clientsArePaused() #8, !dbg !5223
  %735 = icmp eq i32 %734, 0, !dbg !5223
  br i1 %735, label %738, label %736, !dbg !5224

; <label>:736:                                    ; preds = %733
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !5225, !tbaa !2134
  %737 = tail call i32 @clientsArePaused() #8, !dbg !5226
  br label %738, !dbg !5227

; <label>:738:                                    ; preds = %728, %733, %736
  %739 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5228, !tbaa !784
  %740 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %739, i64 0, i32 17, !dbg !5229
  store i64 0, i64* %740, align 8, !dbg !5230, !tbaa !1950
  %741 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %739, i64 0, i32 20, !dbg !5231
  store i32 0, i32* %741, align 8, !dbg !5232, !tbaa !1953
  %742 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %739, i64 0, i32 18, !dbg !5233
  store %struct.clusterNode* null, %struct.clusterNode** %742, align 8, !dbg !5234, !tbaa !1956
  %743 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %739, i64 0, i32 19, !dbg !5235
  store i64 0, i64* %743, align 8, !dbg !5236, !tbaa !1959
  %744 = tail call i64 @mstime() #8, !dbg !5237
  %745 = add nsw i64 %744, 5000, !dbg !5238
  %746 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5239, !tbaa !784
  %747 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %746, i64 0, i32 17, !dbg !5240
  store i64 %745, i64* %747, align 8, !dbg !5241, !tbaa !1950
  %748 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %746, i64 0, i32 18, !dbg !5242
  store %struct.clusterNode* %167, %struct.clusterNode** %748, align 8, !dbg !5243, !tbaa !1956
  %749 = tail call i64 @mstime() #8, !dbg !5244
  %750 = add nsw i64 %749, 10000, !dbg !5245
  tail call void @pauseClients(i64 %750) #8, !dbg !5246
  %751 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 1, i64 0, !dbg !5247
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0), i8* nonnull %751) #8, !dbg !5248
  br label %798, !dbg !5249

; <label>:752:                                    ; preds = %165
  %753 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 0, !dbg !5250
  %754 = load i64, i64* %753, align 8, !dbg !5250, !tbaa !745
  %755 = tail call i64 @intrev64(i64 %754) #8, !dbg !5250
  br i1 %166, label %756, label %798, !dbg !5252

; <label>:756:                                    ; preds = %752
  %757 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 0, !dbg !5253
  %758 = tail call i8* @sdsnewlen(i8* nonnull %757, i64 40) #8, !dbg !5256
  %759 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5258, !tbaa !784
  %760 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %759, i64 0, i32 4, !dbg !5259
  %761 = load %struct.dict*, %struct.dict** %760, align 8, !dbg !5259, !tbaa !832
  %762 = tail call %struct.dictEntry* @dictFind(%struct.dict* %761, i8* %758) #8, !dbg !5260
  tail call void @sdsfree(i8* %758) #8, !dbg !5262
  %763 = icmp eq %struct.dictEntry* %762, null, !dbg !5263
  br i1 %763, label %798, label %764, !dbg !5264

; <label>:764:                                    ; preds = %756
  %765 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %762, i64 0, i32 1, i32 0, !dbg !5265
  %766 = bitcast i8** %765 to %struct.clusterNode**, !dbg !5265
  %767 = load %struct.clusterNode*, %struct.clusterNode** %766, align 8, !dbg !5265, !tbaa !745
  %768 = icmp eq %struct.clusterNode* %767, null, !dbg !5267
  br i1 %768, label %798, label %769, !dbg !5269

; <label>:769:                                    ; preds = %764
  %770 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %767, i64 0, i32 3, !dbg !5270
  %771 = load i64, i64* %770, align 8, !dbg !5270, !tbaa !1075
  %772 = icmp ult i64 %771, %755, !dbg !5272
  br i1 %772, label %773, label %798, !dbg !5273

; <label>:773:                                    ; preds = %769
  %774 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %767, i64 0, i32 2, !dbg !5274
  %775 = load i32, i32* %774, align 8, !dbg !5274, !tbaa !918
  %776 = and i32 %775, 2, !dbg !5274
  %777 = icmp eq i32 %776, 0, !dbg !5274
  br i1 %777, label %779, label %778, !dbg !5276

; <label>:778:                                    ; preds = %773
  tail call void @clusterSetNodeAsMaster(%struct.clusterNode* nonnull %767) #12, !dbg !5277
  br label %779, !dbg !5277

; <label>:779:                                    ; preds = %773, %778
  store i64 %755, i64* %770, align 8, !dbg !5278, !tbaa !1075
  %780 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5281, !tbaa !784
  %781 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %780, i64 0, i32 22, !dbg !5282
  %782 = load i32, i32* %781, align 8, !dbg !5283, !tbaa !1465
  %783 = or i32 %782, 12, !dbg !5283
  store i32 %783, i32* %781, align 8, !dbg !5283, !tbaa !1465
  %784 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 2, i64 0, !dbg !5284
  tail call void @clusterUpdateSlotsConfigWith(%struct.clusterNode* nonnull %767, i64 %755, i8* nonnull %784) #12, !dbg !5285
  br label %798

; <label>:785:                                    ; preds = %165
  br i1 %166, label %786, label %798, !dbg !5286

; <label>:786:                                    ; preds = %785
  %787 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 0, !dbg !5287
  %788 = load i64, i64* %787, align 8, !dbg !5287, !tbaa !745
  %789 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, !dbg !5289
  %790 = bitcast [40 x i8]* %789 to i32*, !dbg !5289
  %791 = load i32, i32* %790, align 8, !dbg !5289, !tbaa !745
  %792 = tail call i32 @lwip_htonl(i32 %791) #8, !dbg !5289
  %793 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 4, !dbg !5291
  %794 = load i8, i8* %793, align 4, !dbg !5291, !tbaa !745
  %795 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 5, !dbg !5293
  %796 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %167, i64 0, i32 1, i64 0, !dbg !5295
  tail call void @moduleCallClusterReceivers(i8* nonnull %796, i64 %788, i8 zeroext %794, i8* nonnull %795, i32 %792) #8, !dbg !5296
  br label %798, !dbg !5297

; <label>:797:                                    ; preds = %165
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.65, i64 0, i64 0), i32 %12) #8, !dbg !5298
  br label %798

; <label>:798:                                    ; preds = %411, %402, %756, %639, %412, %308, %360, %88, %86, %84, %72, %70, %62, %698, %700, %723, %722, %769, %764, %752, %785, %779, %682, %677, %668, %657, %647, %652, %636, %710, %701, %699, %738, %786, %797, %706, %715, %52, %49, %20
  %799 = phi i32 [ 1, %20 ], [ 1, %49 ], [ 1, %52 ], [ 0, %308 ], [ 0, %360 ], [ 1, %62 ], [ 1, %70 ], [ 1, %72 ], [ 1, %84 ], [ 1, %86 ], [ 1, %88 ], [ 1, %698 ], [ 1, %700 ], [ 1, %723 ], [ 1, %722 ], [ 1, %769 ], [ 1, %764 ], [ 1, %752 ], [ 1, %785 ], [ 1, %779 ], [ 1, %682 ], [ 1, %677 ], [ 1, %668 ], [ 1, %657 ], [ 1, %647 ], [ 1, %652 ], [ 1, %636 ], [ 1, %710 ], [ 1, %701 ], [ 1, %699 ], [ 1, %738 ], [ 1, %786 ], [ 1, %797 ], [ 1, %706 ], [ 1, %715 ], [ 1, %412 ], [ 1, %639 ], [ 1, %756 ], [ 1, %402 ], [ 1, %411 ], !dbg !5300
  ret i32 %799, !dbg !5301
}

; Function Attrs: noredzone
declare dso_local i64 @intrev64(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetSockName(i32, i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendPing(%struct.clusterLink*, i32) local_unnamed_addr #0 !dbg !5302 {
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5328, !tbaa !784
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !5328
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !5328, !tbaa !832
  %6 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 0, i32 3, !dbg !5328
  %7 = load i64, i64* %6, align 8, !dbg !5328, !tbaa !5164
  %8 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 1, i32 3, !dbg !5328
  %9 = load i64, i64* %8, align 8, !dbg !5328, !tbaa !5164
  %10 = add i64 %9, %7, !dbg !5328
  %11 = trunc i64 %10 to i32, !dbg !5328
  %12 = add i32 %11, -2, !dbg !5328
  %13 = udiv i64 %10, 10, !dbg !5330
  %14 = uitofp i64 %13 to double, !dbg !5331
  %15 = tail call double @floor(double %14) #8, !dbg !5332
  %16 = fptosi double %15 to i32, !dbg !5332
  %17 = icmp sgt i32 %16, 3, !dbg !5334
  %18 = select i1 %17, i32 %16, i32 3, !dbg !5334
  %19 = icmp sgt i32 %18, %12, !dbg !5335
  %20 = select i1 %19, i32 %12, i32 %18, !dbg !5337
  %21 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5338, !tbaa !784
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %21, i64 0, i32 25, !dbg !5339
  %23 = load i64, i64* %22, align 8, !dbg !5339, !tbaa !1790
  %24 = trunc i64 %23 to i32, !dbg !5340
  %25 = add nsw i32 %20, %24, !dbg !5343
  %26 = mul i32 %25, 104, !dbg !5344
  %27 = add i32 %26, 2256, !dbg !5345
  %28 = icmp sgt i32 %27, 4352, !dbg !5346
  %29 = select i1 %28, i32 %27, i32 4352, !dbg !5346
  %30 = zext i32 %29 to i64, !dbg !5347
  %31 = tail call i8* @zcalloc(i64 %30) #8, !dbg !5348
  %32 = bitcast i8* %31 to %struct.clusterMsg*, !dbg !5350
  %33 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 4, !dbg !5352
  %34 = load %struct.clusterNode*, %struct.clusterNode** %33, align 8, !dbg !5352, !tbaa !2113
  %35 = icmp ne %struct.clusterNode* %34, null, !dbg !5354
  %36 = icmp eq i32 %1, 0, !dbg !5355
  %37 = and i1 %36, %35, !dbg !5356
  br i1 %37, label %38, label %42, !dbg !5356

; <label>:38:                                     ; preds = %2
  %39 = tail call i64 @mstime() #8, !dbg !5357
  %40 = load %struct.clusterNode*, %struct.clusterNode** %33, align 8, !dbg !5358, !tbaa !2113
  %41 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %40, i64 0, i32 9, !dbg !5359
  store i64 %39, i64* %41, align 8, !dbg !5360, !tbaa !1060
  br label %42, !dbg !5361

; <label>:42:                                     ; preds = %38, %2
  tail call void @clusterBuildMessageHdr(%struct.clusterMsg* %32, i32 %1) #12, !dbg !5362
  %43 = icmp sgt i32 %12, 0, !dbg !5363
  %44 = icmp sgt i32 %20, 0, !dbg !5364
  %45 = and i1 %43, %44, !dbg !5365
  br i1 %45, label %46, label %147, !dbg !5365

; <label>:46:                                     ; preds = %42
  %47 = mul nsw i32 %20, 3, !dbg !5366
  %48 = getelementptr inbounds i8, i8* %31, i64 2256
  %49 = bitcast i8* %48 to [1 x %struct.clusterMsgDataGossip]*
  br label %50, !dbg !5365

; <label>:50:                                     ; preds = %46, %141
  %51 = phi i32 [ 0, %46 ], [ %143, %141 ]
  %52 = phi i32 [ %12, %46 ], [ %142, %141 ]
  %53 = phi i32 [ %47, %46 ], [ %54, %141 ]
  %54 = add nsw i32 %53, -1, !dbg !5368
  %55 = icmp eq i32 %53, 0, !dbg !5369
  br i1 %55, label %147, label %56, !dbg !5370

; <label>:56:                                     ; preds = %50
  %57 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5371, !tbaa !784
  %58 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %57, i64 0, i32 4, !dbg !5372
  %59 = load %struct.dict*, %struct.dict** %58, align 8, !dbg !5372, !tbaa !832
  %60 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %59) #8, !dbg !5373
  %61 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %60, i64 0, i32 1, i32 0, !dbg !5375
  %62 = bitcast i8** %61 to %struct.clusterNode**, !dbg !5375
  %63 = load %struct.clusterNode*, %struct.clusterNode** %62, align 8, !dbg !5375, !tbaa !745
  %64 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !5377, !tbaa !757
  %65 = icmp eq %struct.clusterNode* %63, %64, !dbg !5379
  br i1 %65, label %141, label %66, !dbg !5380, !llvm.loop !5381

; <label>:66:                                     ; preds = %56
  %67 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 2, !dbg !5383
  %68 = load i32, i32* %67, align 8, !dbg !5383, !tbaa !918
  %69 = and i32 %68, 4, !dbg !5385
  %70 = icmp eq i32 %69, 0, !dbg !5385
  br i1 %70, label %71, label %141, !dbg !5386, !llvm.loop !5381

; <label>:71:                                     ; preds = %66
  %72 = and i32 %68, 96, !dbg !5387
  %73 = icmp eq i32 %72, 0, !dbg !5387
  br i1 %73, label %74, label %82, !dbg !5389

; <label>:74:                                     ; preds = %71
  %75 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 19, !dbg !5390
  %76 = load %struct.clusterLink*, %struct.clusterLink** %75, align 8, !dbg !5390, !tbaa !1153
  %77 = icmp eq %struct.clusterLink* %76, null, !dbg !5391
  br i1 %77, label %78, label %84, !dbg !5392

; <label>:78:                                     ; preds = %74
  %79 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 5, !dbg !5393
  %80 = load i32, i32* %79, align 8, !dbg !5393, !tbaa !1139
  %81 = icmp eq i32 %80, 0, !dbg !5394
  br i1 %81, label %82, label %84, !dbg !5395

; <label>:82:                                     ; preds = %71, %78
  %83 = add nsw i32 %52, -1, !dbg !5396
  br label %141, !dbg !5398, !llvm.loop !5381

; <label>:84:                                     ; preds = %78, %74
  %85 = icmp sgt i32 %51, 0, !dbg !5413
  br i1 %85, label %86, label %101, !dbg !5416

; <label>:86:                                     ; preds = %84
  %87 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 1, i64 0
  %88 = sext i32 %51 to i64, !dbg !5416
  br label %89, !dbg !5416

; <label>:89:                                     ; preds = %95, %86
  %90 = phi i64 [ 0, %86 ], [ %96, %95 ]
  %91 = phi i32 [ 0, %86 ], [ %97, %95 ]
  %92 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %90, i32 0, i64 0, !dbg !5417
  %93 = tail call i32 @memcmp(i8* %92, i8* nonnull %87, i64 40) #8, !dbg !5420
  %94 = icmp eq i32 %93, 0, !dbg !5421
  br i1 %94, label %99, label %95, !dbg !5422

; <label>:95:                                     ; preds = %89
  %96 = add nuw nsw i64 %90, 1, !dbg !5423
  %97 = add nuw nsw i32 %91, 1, !dbg !5423
  %98 = icmp slt i64 %96, %88, !dbg !5413
  br i1 %98, label %89, label %101, !dbg !5416, !llvm.loop !5424

; <label>:99:                                     ; preds = %89
  %100 = trunc i64 %90 to i32, !dbg !5422
  br label %101, !dbg !5427

; <label>:101:                                    ; preds = %95, %84, %99
  %102 = phi i32 [ 0, %84 ], [ %100, %99 ], [ %97, %95 ], !dbg !5428
  %103 = icmp eq i32 %102, %51, !dbg !5427
  br i1 %103, label %104, label %141, !dbg !5429, !llvm.loop !5381

; <label>:104:                                    ; preds = %101
  %105 = sext i32 %51 to i64, !dbg !5442
  %106 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %105, i32 0, i64 0, !dbg !5443
  %107 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 1, i64 0, !dbg !5444
  %108 = tail call i8* @memcpy(i8* %106, i8* nonnull %107, i64 40) #8, !dbg !5445
  %109 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 9, !dbg !5446
  %110 = load i64, i64* %109, align 8, !dbg !5446, !tbaa !1060
  %111 = sdiv i64 %110, 1000, !dbg !5446
  %112 = trunc i64 %111 to i32, !dbg !5446
  %113 = tail call i32 @lwip_htonl(i32 %112) #8, !dbg !5446
  %114 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %105, i32 1, !dbg !5447
  store i32 %113, i32* %114, align 4, !dbg !5448, !tbaa !5449
  %115 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 10, !dbg !5450
  %116 = load i64, i64* %115, align 8, !dbg !5450, !tbaa !1069
  %117 = sdiv i64 %116, 1000, !dbg !5450
  %118 = trunc i64 %117 to i32, !dbg !5450
  %119 = tail call i32 @lwip_htonl(i32 %118) #8, !dbg !5450
  %120 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %105, i32 2, !dbg !5451
  store i32 %119, i32* %120, align 4, !dbg !5452, !tbaa !3816
  %121 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %105, i32 3, i64 0, !dbg !5453
  %122 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 16, i64 0, !dbg !5454
  %123 = tail call i8* @memcpy(i8* nonnull %121, i8* nonnull %122, i64 46) #8, !dbg !5455
  %124 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 17, !dbg !5456
  %125 = load i32, i32* %124, align 8, !dbg !5456, !tbaa !891
  %126 = trunc i32 %125 to i16, !dbg !5456
  %127 = tail call zeroext i16 @lwip_htons(i16 zeroext %126) #8, !dbg !5456
  %128 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %105, i32 4, !dbg !5457
  store i16 %127, i16* %128, align 2, !dbg !5458, !tbaa !3731
  %129 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 18, !dbg !5459
  %130 = load i32, i32* %129, align 4, !dbg !5459, !tbaa !898
  %131 = trunc i32 %130 to i16, !dbg !5459
  %132 = tail call zeroext i16 @lwip_htons(i16 zeroext %131) #8, !dbg !5459
  %133 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %105, i32 5, !dbg !5460
  store i16 %132, i16* %133, align 4, !dbg !5461, !tbaa !3733
  %134 = load i32, i32* %67, align 8, !dbg !5462, !tbaa !918
  %135 = trunc i32 %134 to i16, !dbg !5462
  %136 = tail call zeroext i16 @lwip_htons(i16 zeroext %135) #8, !dbg !5462
  %137 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %105, i32 6, !dbg !5463
  store i16 %136, i16* %137, align 2, !dbg !5464, !tbaa !3715
  %138 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %105, i32 7, !dbg !5465
  store i32 0, i32* %138, align 4, !dbg !5466, !tbaa !5467
  %139 = add nsw i32 %52, -1, !dbg !5468
  %140 = add nsw i32 %51, 1, !dbg !5469
  br label %141, !dbg !5382

; <label>:141:                                    ; preds = %101, %66, %56, %104, %82
  %142 = phi i32 [ %83, %82 ], [ %139, %104 ], [ %52, %56 ], [ %52, %66 ], [ %52, %101 ], !dbg !5470
  %143 = phi i32 [ %51, %82 ], [ %140, %104 ], [ %51, %56 ], [ %51, %66 ], [ %51, %101 ], !dbg !5470
  %144 = icmp sgt i32 %142, 0, !dbg !5363
  %145 = icmp slt i32 %143, %20, !dbg !5364
  %146 = and i1 %144, %145, !dbg !5365
  br i1 %146, label %50, label %147, !dbg !5365

; <label>:147:                                    ; preds = %141, %50, %42
  %148 = phi i32 [ 0, %42 ], [ %51, %50 ], [ %143, %141 ], !dbg !5327
  %149 = icmp eq i32 %24, 0, !dbg !5471
  br i1 %149, label %219, label %150, !dbg !5472

; <label>:150:                                    ; preds = %147
  %151 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5473, !tbaa !784
  %152 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %151, i64 0, i32 4, !dbg !5474
  %153 = load %struct.dict*, %struct.dict** %152, align 8, !dbg !5474, !tbaa !832
  %154 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %153) #8, !dbg !5475
  %155 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %154) #8, !dbg !5477
  %156 = icmp ne %struct.dictEntry* %155, null, !dbg !5479
  %157 = icmp sgt i32 %24, 0, !dbg !5480
  %158 = and i1 %157, %156, !dbg !5481
  br i1 %158, label %159, label %217, !dbg !5482

; <label>:159:                                    ; preds = %150
  %160 = getelementptr inbounds i8, i8* %31, i64 2256
  %161 = bitcast i8* %160 to [1 x %struct.clusterMsgDataGossip]*
  br label %162, !dbg !5482

; <label>:162:                                    ; preds = %159, %210
  %163 = phi %struct.dictEntry* [ %155, %159 ], [ %213, %210 ]
  %164 = phi i32 [ %148, %159 ], [ %212, %210 ]
  %165 = phi i32 [ %24, %159 ], [ %211, %210 ]
  %166 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %163, i64 0, i32 1, i32 0, !dbg !5483
  %167 = bitcast i8** %166 to %struct.clusterNode**, !dbg !5483
  %168 = load %struct.clusterNode*, %struct.clusterNode** %167, align 8, !dbg !5483, !tbaa !745
  %169 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 2, !dbg !5485
  %170 = load i32, i32* %169, align 8, !dbg !5485, !tbaa !918
  %171 = and i32 %170, 100, !dbg !5487
  %172 = icmp eq i32 %171, 4, !dbg !5487
  br i1 %172, label %173, label %210, !dbg !5487, !llvm.loop !5488

; <label>:173:                                    ; preds = %162
  %174 = sext i32 %164 to i64, !dbg !5494
  %175 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %174, i32 0, i64 0, !dbg !5495
  %176 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 1, i64 0, !dbg !5496
  %177 = tail call i8* @memcpy(i8* %175, i8* nonnull %176, i64 40) #8, !dbg !5497
  %178 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 9, !dbg !5498
  %179 = load i64, i64* %178, align 8, !dbg !5498, !tbaa !1060
  %180 = sdiv i64 %179, 1000, !dbg !5498
  %181 = trunc i64 %180 to i32, !dbg !5498
  %182 = tail call i32 @lwip_htonl(i32 %181) #8, !dbg !5498
  %183 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %174, i32 1, !dbg !5499
  store i32 %182, i32* %183, align 4, !dbg !5500, !tbaa !5449
  %184 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 10, !dbg !5501
  %185 = load i64, i64* %184, align 8, !dbg !5501, !tbaa !1069
  %186 = sdiv i64 %185, 1000, !dbg !5501
  %187 = trunc i64 %186 to i32, !dbg !5501
  %188 = tail call i32 @lwip_htonl(i32 %187) #8, !dbg !5501
  %189 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %174, i32 2, !dbg !5502
  store i32 %188, i32* %189, align 4, !dbg !5503, !tbaa !3816
  %190 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %174, i32 3, i64 0, !dbg !5504
  %191 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 16, i64 0, !dbg !5505
  %192 = tail call i8* @memcpy(i8* nonnull %190, i8* nonnull %191, i64 46) #8, !dbg !5506
  %193 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 17, !dbg !5507
  %194 = load i32, i32* %193, align 8, !dbg !5507, !tbaa !891
  %195 = trunc i32 %194 to i16, !dbg !5507
  %196 = tail call zeroext i16 @lwip_htons(i16 zeroext %195) #8, !dbg !5507
  %197 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %174, i32 4, !dbg !5508
  store i16 %196, i16* %197, align 2, !dbg !5509, !tbaa !3731
  %198 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 18, !dbg !5510
  %199 = load i32, i32* %198, align 4, !dbg !5510, !tbaa !898
  %200 = trunc i32 %199 to i16, !dbg !5510
  %201 = tail call zeroext i16 @lwip_htons(i16 zeroext %200) #8, !dbg !5510
  %202 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %174, i32 5, !dbg !5511
  store i16 %201, i16* %202, align 4, !dbg !5512, !tbaa !3733
  %203 = load i32, i32* %169, align 8, !dbg !5513, !tbaa !918
  %204 = trunc i32 %203 to i16, !dbg !5513
  %205 = tail call zeroext i16 @lwip_htons(i16 zeroext %204) #8, !dbg !5513
  %206 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %174, i32 6, !dbg !5514
  store i16 %205, i16* %206, align 2, !dbg !5515, !tbaa !3715
  %207 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %174, i32 7, !dbg !5516
  store i32 0, i32* %207, align 4, !dbg !5517, !tbaa !5467
  %208 = add nsw i32 %164, 1, !dbg !5518
  %209 = add nsw i32 %165, -1, !dbg !5519
  br label %210, !dbg !5489

; <label>:210:                                    ; preds = %162, %173
  %211 = phi i32 [ %209, %173 ], [ %165, %162 ], !dbg !5520
  %212 = phi i32 [ %208, %173 ], [ %164, %162 ], !dbg !5520
  %213 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %154) #8, !dbg !5477
  %214 = icmp ne %struct.dictEntry* %213, null, !dbg !5479
  %215 = icmp sgt i32 %211, 0, !dbg !5480
  %216 = and i1 %215, %214, !dbg !5481
  br i1 %216, label %162, label %217, !dbg !5482

; <label>:217:                                    ; preds = %210, %150
  %218 = phi i32 [ %148, %150 ], [ %212, %210 ], !dbg !5327
  tail call void @dictReleaseIterator(%struct.dictIterator* %154) #8, !dbg !5521
  br label %219, !dbg !5522

; <label>:219:                                    ; preds = %147, %217
  %220 = phi i32 [ %218, %217 ], [ %148, %147 ], !dbg !5327
  %221 = mul i32 %220, 104, !dbg !5523
  %222 = add i32 %221, 2256, !dbg !5524
  %223 = trunc i32 %220 to i16, !dbg !5525
  %224 = tail call zeroext i16 @lwip_htons(i16 zeroext %223) #8, !dbg !5525
  %225 = getelementptr inbounds i8, i8* %31, i64 14, !dbg !5526
  %226 = bitcast i8* %225 to i16*, !dbg !5526
  store i16 %224, i16* %226, align 2, !dbg !5527, !tbaa !3690
  %227 = tail call i32 @lwip_htonl(i32 %222) #8, !dbg !5528
  %228 = getelementptr inbounds i8, i8* %31, i64 4, !dbg !5529
  %229 = bitcast i8* %228 to i32*, !dbg !5529
  store i32 %227, i32* %229, align 4, !dbg !5530, !tbaa !2627
  %230 = sext i32 %222 to i64, !dbg !5531
  tail call void @clusterSendMessage(%struct.clusterLink* %0, i8* %31, i64 %230) #12, !dbg !5532
  tail call void @zfree(i8* %31) #8, !dbg !5533
  ret void, !dbg !5534
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterDelNodeSlots(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !4905 {
  br label %2, !dbg !4971

; <label>:2:                                      ; preds = %1, %38
  %3 = phi i64 [ 0, %1 ], [ %40, %38 ]
  %4 = phi i32 [ 0, %1 ], [ %39, %38 ]
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 3
  %7 = and i64 %6, 8191
  %8 = and i32 %5, 7, !dbg !5545
  %9 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %7, !dbg !5547
  %10 = load i8, i8* %9, align 1, !dbg !5547, !tbaa !745
  %11 = zext i8 %10 to i32, !dbg !5547
  %12 = shl i32 1, %8, !dbg !5548
  %13 = and i32 %12, %11, !dbg !5549
  %14 = icmp eq i32 %13, 0, !dbg !5550
  br i1 %14, label %38, label %15, !dbg !5551

; <label>:15:                                     ; preds = %2
  %16 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5554, !tbaa !784
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %16, i64 0, i32 8, i64 %3, !dbg !5555
  %18 = load %struct.clusterNode*, %struct.clusterNode** %17, align 8, !dbg !5555, !tbaa !757
  %19 = icmp eq %struct.clusterNode* %18, null, !dbg !5557
  br i1 %19, label %36, label %20, !dbg !5558

; <label>:20:                                     ; preds = %15
  %21 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 4, i64 %7, !dbg !5567
  %22 = load i8, i8* %21, align 1, !dbg !5567, !tbaa !745
  %23 = zext i8 %22 to i32, !dbg !5567
  %24 = and i32 %12, %23, !dbg !5568
  %25 = icmp eq i32 %24, 0, !dbg !5569
  %26 = trunc i32 %12 to i8, !dbg !5575
  %27 = xor i8 %26, -1, !dbg !5575
  %28 = and i8 %22, %27, !dbg !5575
  store i8 %28, i8* %21, align 1, !dbg !5575, !tbaa !745
  br i1 %25, label %29, label %30, !dbg !5576

; <label>:29:                                     ; preds = %20
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !5577
  tail call void @_exit(i32 1) #10, !dbg !5577
  unreachable, !dbg !5577

; <label>:30:                                     ; preds = %20
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 5, !dbg !5578
  %32 = load i32, i32* %31, align 8, !dbg !5579, !tbaa !1139
  %33 = add nsw i32 %32, -1, !dbg !5579
  store i32 %33, i32* %31, align 8, !dbg !5579, !tbaa !1139
  %34 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5580, !tbaa !784
  %35 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %34, i64 0, i32 8, i64 %3, !dbg !5581
  store %struct.clusterNode* null, %struct.clusterNode** %35, align 8, !dbg !5582, !tbaa !757
  br label %36, !dbg !5583

; <label>:36:                                     ; preds = %15, %30
  %37 = add nsw i32 %4, 1, !dbg !5584
  br label %38, !dbg !5585

; <label>:38:                                     ; preds = %2, %36
  %39 = phi i32 [ %37, %36 ], [ %4, %2 ], !dbg !5586
  %40 = add nuw nsw i64 %3, 1, !dbg !5587
  %41 = icmp ult i64 %40, 16384, !dbg !5588
  br i1 %41, label %2, label %42, !dbg !4971, !llvm.loop !4970

; <label>:42:                                     ; preds = %38
  ret i32 %39, !dbg !5589
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendUpdate(%struct.clusterLink*, %struct.clusterNode*) local_unnamed_addr #0 !dbg !5590 {
  %3 = alloca %struct.clusterMsg, align 16
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 0, i64 0, !dbg !5600
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %4) #9, !dbg !5600
  %5 = icmp eq %struct.clusterLink* %0, null, !dbg !5602
  br i1 %5, label %21, label %6, !dbg !5604

; <label>:6:                                      ; preds = %2
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %3, i32 7) #12, !dbg !5606
  %7 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 18, i32 0, i32 0, i32 1, i64 0, !dbg !5607
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 1, i64 0, !dbg !5608
  %9 = call i8* @memcpy(i8* nonnull %7, i8* nonnull %8, i64 40) #8, !dbg !5609
  %10 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 3, !dbg !5610
  %11 = load i64, i64* %10, align 8, !dbg !5610, !tbaa !1075
  %12 = call i64 @intrev64(i64 %11) #8, !dbg !5610
  %13 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 18, i32 0, i32 0, i32 0, !dbg !5611
  store i64 %12, i64* %13, align 16, !dbg !5612, !tbaa !745
  %14 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 18, i32 0, i32 0, i32 2, i64 0, !dbg !5613
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 4, i64 0, !dbg !5614
  %16 = call i8* @memcpy(i8* nonnull %14, i8* nonnull %15, i64 2048) #8, !dbg !5615
  %17 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 1, !dbg !5616
  %18 = load i32, i32* %17, align 4, !dbg !5616, !tbaa !2627
  %19 = call i32 @lwip_htonl(i32 %18) #8, !dbg !5616
  %20 = zext i32 %19 to i64, !dbg !5616
  call void @clusterSendMessage(%struct.clusterLink* nonnull %0, i8* nonnull %4, i64 %20) #12, !dbg !5617
  br label %21, !dbg !5618

; <label>:21:                                     ; preds = %2, %6
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %4) #9, !dbg !5618
  ret void, !dbg !5618
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStringObject(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @pubsubPublishMessage(%struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @decrRefCount(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendFailoverAuthIfNeeded(%struct.clusterNode*, %struct.clusterMsg* nocapture readonly) local_unnamed_addr #0 !dbg !5619 {
  %3 = alloca %struct.clusterMsg, align 16
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 8, !dbg !5633
  %5 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !5633, !tbaa !1012
  %6 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 6, !dbg !5635
  %7 = load i64, i64* %6, align 8, !dbg !5635, !tbaa !4566
  %8 = tail call i64 @intrev64(i64 %7) #8, !dbg !5635
  %9 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 7, !dbg !5637
  %10 = load i64, i64* %9, align 8, !dbg !5637, !tbaa !4568
  %11 = tail call i64 @intrev64(i64 %10) #8, !dbg !5637
  %12 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 17, i64 0, !dbg !5640
  %13 = load i8, i8* %12, align 1, !dbg !5640, !tbaa !745
  %14 = and i8 %13, 2, !dbg !5641
  %15 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !5642, !tbaa !757
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %15, i64 0, i32 2, !dbg !5642
  %17 = load i32, i32* %16, align 8, !dbg !5642, !tbaa !918
  %18 = and i32 %17, 2, !dbg !5642
  %19 = icmp eq i32 %18, 0, !dbg !5642
  br i1 %19, label %20, label %135, !dbg !5644

; <label>:20:                                     ; preds = %2
  %21 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %15, i64 0, i32 5, !dbg !5645
  %22 = load i32, i32* %21, align 8, !dbg !5645, !tbaa !1139
  %23 = icmp eq i32 %22, 0, !dbg !5646
  br i1 %23, label %135, label %24, !dbg !5647

; <label>:24:                                     ; preds = %20
  %25 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5648, !tbaa !784
  %26 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %25, i64 0, i32 1, !dbg !5650
  %27 = load i64, i64* %26, align 8, !dbg !5650, !tbaa !793
  %28 = icmp ult i64 %8, %27, !dbg !5651
  br i1 %28, label %29, label %31, !dbg !5652

; <label>:29:                                     ; preds = %24
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5653
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.72, i64 0, i64 0), i8* nonnull %30, i64 %8, i64 %27) #8, !dbg !5655
  br label %135, !dbg !5656

; <label>:31:                                     ; preds = %24
  %32 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %25, i64 0, i32 21, !dbg !5657
  %33 = load i64, i64* %32, align 8, !dbg !5657, !tbaa !807
  %34 = icmp eq i64 %33, %27, !dbg !5659
  br i1 %34, label %35, label %37, !dbg !5660

; <label>:35:                                     ; preds = %31
  %36 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5661
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.73, i64 0, i64 0), i8* nonnull %36, i64 %27) #8, !dbg !5663
  br label %135, !dbg !5664

; <label>:37:                                     ; preds = %31
  %38 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !5665
  %39 = load i32, i32* %38, align 8, !dbg !5665, !tbaa !918
  %40 = and i32 %39, 1, !dbg !5665
  %41 = icmp ne i32 %40, 0, !dbg !5665
  %42 = icmp eq %struct.clusterNode* %5, null, !dbg !5667
  %43 = or i1 %42, %41, !dbg !5668
  br i1 %43, label %51, label %44, !dbg !5668

; <label>:44:                                     ; preds = %37
  %45 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 2, !dbg !5669
  %46 = load i32, i32* %45, align 8, !dbg !5669, !tbaa !918
  %47 = and i32 %46, 8, !dbg !5669
  %48 = icmp ne i32 %47, 0, !dbg !5669
  %49 = icmp ne i8 %14, 0, !dbg !5670
  %50 = or i1 %49, %48, !dbg !5671
  br i1 %50, label %65, label %55, !dbg !5671

; <label>:51:                                     ; preds = %37
  %52 = icmp eq i32 %40, 0, !dbg !5672
  br i1 %52, label %55, label %53, !dbg !5675

; <label>:53:                                     ; preds = %51
  %54 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5676
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.74, i64 0, i64 0), i8* nonnull %54) #8, !dbg !5678
  br label %135, !dbg !5679

; <label>:55:                                     ; preds = %44, %51
  br i1 %42, label %56, label %58, !dbg !5680

; <label>:56:                                     ; preds = %55
  %57 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5681
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.75, i64 0, i64 0), i8* nonnull %57) #8, !dbg !5684
  br label %135, !dbg !5685

; <label>:58:                                     ; preds = %55
  %59 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 2, !dbg !5686
  %60 = load i32, i32* %59, align 8, !dbg !5686, !tbaa !918
  %61 = and i32 %60, 8, !dbg !5686
  %62 = icmp eq i32 %61, 0, !dbg !5686
  br i1 %62, label %63, label %135, !dbg !5688

; <label>:63:                                     ; preds = %58
  %64 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5689
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.76, i64 0, i64 0), i8* nonnull %64) #8, !dbg !5691
  br label %135, !dbg !5692

; <label>:65:                                     ; preds = %44
  %66 = tail call i64 @mstime() #8, !dbg !5693
  %67 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !5695, !tbaa !1012
  %68 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 12, !dbg !5696
  %69 = load i64, i64* %68, align 8, !dbg !5696, !tbaa !1166
  %70 = sub nsw i64 %66, %69, !dbg !5697
  %71 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !5698, !tbaa !2858
  %72 = shl nsw i64 %71, 1, !dbg !5699
  %73 = icmp slt i64 %70, %72, !dbg !5700
  br i1 %73, label %76, label %74, !dbg !5701

; <label>:74:                                     ; preds = %65
  %75 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8
  br label %84, !dbg !5703

; <label>:76:                                     ; preds = %65
  %77 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5705
  %78 = tail call i64 @mstime() #8, !dbg !5707
  %79 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !5708, !tbaa !1012
  %80 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %79, i64 0, i32 12, !dbg !5709
  %81 = load i64, i64* %80, align 8, !dbg !5709, !tbaa !1166
  %82 = sub i64 %72, %78, !dbg !5710
  %83 = add i64 %82, %81, !dbg !5710
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.77, i64 0, i64 0), i8* nonnull %77, i64 %83) #8, !dbg !5711
  br label %135, !dbg !5712

; <label>:84:                                     ; preds = %74, %107
  %85 = phi i64 [ 0, %74 ], [ %108, %107 ]
  %86 = trunc i64 %85 to i32
  %87 = lshr i64 %85, 3
  %88 = and i64 %87, 8191
  %89 = and i32 %86, 7, !dbg !5720
  %90 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 10, i64 %88, !dbg !5722
  %91 = load i8, i8* %90, align 1, !dbg !5722, !tbaa !745
  %92 = zext i8 %91 to i32, !dbg !5722
  %93 = shl i32 1, %89, !dbg !5723
  %94 = and i32 %93, %92, !dbg !5724
  %95 = icmp eq i32 %94, 0, !dbg !5725
  br i1 %95, label %107, label %96, !dbg !5726

; <label>:96:                                     ; preds = %84
  %97 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %75, i64 0, i32 8, i64 %85, !dbg !5727
  %98 = load %struct.clusterNode*, %struct.clusterNode** %97, align 8, !dbg !5727, !tbaa !757
  %99 = icmp eq %struct.clusterNode* %98, null, !dbg !5729
  br i1 %99, label %107, label %100, !dbg !5730

; <label>:100:                                    ; preds = %96
  %101 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %98, i64 0, i32 3, !dbg !5731
  %102 = load i64, i64* %101, align 8, !dbg !5731, !tbaa !1075
  %103 = icmp ugt i64 %102, %11, !dbg !5732
  br i1 %103, label %104, label %107, !dbg !5733

; <label>:104:                                    ; preds = %100
  %105 = trunc i64 %85 to i32
  %106 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5734
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.78, i64 0, i64 0), i8* nonnull %106, i32 %105, i64 %102, i64 %11) #8, !dbg !5735
  br label %135, !dbg !5736

; <label>:107:                                    ; preds = %100, %96, %84
  %108 = add nuw nsw i64 %85, 1, !dbg !5737
  %109 = icmp ult i64 %108, 16384, !dbg !5738
  br i1 %109, label %84, label %110, !dbg !5703, !llvm.loop !5739

; <label>:110:                                    ; preds = %107
  %111 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %75, i64 0, i32 1, !dbg !5741
  %112 = load i64, i64* %111, align 8, !dbg !5741, !tbaa !793
  %113 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %75, i64 0, i32 21, !dbg !5742
  store i64 %112, i64* %113, align 8, !dbg !5743, !tbaa !807
  %114 = tail call i64 @mstime() #8, !dbg !5744
  %115 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !5745, !tbaa !1012
  %116 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %115, i64 0, i32 12, !dbg !5746
  store i64 %114, i64* %116, align 8, !dbg !5747, !tbaa !1166
  %117 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5750, !tbaa !784
  %118 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %117, i64 0, i32 22, !dbg !5751
  %119 = load i32, i32* %118, align 8, !dbg !5752, !tbaa !1465
  %120 = or i32 %119, 12, !dbg !5752
  store i32 %120, i32* %118, align 8, !dbg !5752, !tbaa !1465
  %121 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 0, i64 0, !dbg !5761
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %121) #9, !dbg !5761
  %122 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !5763
  %123 = load %struct.clusterLink*, %struct.clusterLink** %122, align 8, !dbg !5763, !tbaa !1153
  %124 = icmp eq %struct.clusterLink* %123, null, !dbg !5765
  br i1 %124, label %130, label %125, !dbg !5766

; <label>:125:                                    ; preds = %110
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %3, i32 6) #8, !dbg !5768
  %126 = call i32 @lwip_htonl(i32 2256) #8, !dbg !5770
  %127 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 1, !dbg !5771
  store i32 %126, i32* %127, align 4, !dbg !5772, !tbaa !2627
  %128 = load %struct.clusterLink*, %struct.clusterLink** %122, align 8, !dbg !5773, !tbaa !1153
  call void @clusterSendMessage(%struct.clusterLink* %128, i8* nonnull %121, i64 2256) #8, !dbg !5774
  %129 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5775, !tbaa !784
  br label %130, !dbg !5776

; <label>:130:                                    ; preds = %110, %125
  %131 = phi %struct.clusterState* [ %117, %110 ], [ %129, %125 ], !dbg !5775
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %121) #9, !dbg !5776
  %132 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5777
  %133 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %131, i64 0, i32 1, !dbg !5778
  %134 = load i64, i64* %133, align 8, !dbg !5778, !tbaa !793
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.79, i64 0, i64 0), i8* nonnull %132, i64 %134) #8, !dbg !5779
  br label %135, !dbg !5780

; <label>:135:                                    ; preds = %53, %63, %56, %58, %20, %2, %130, %104, %76, %35, %29
  ret void, !dbg !5780
}

; Function Attrs: noredzone
declare dso_local void @pauseClients(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @moduleCallClusterReceivers(i8*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @handleLinkIOError(%struct.clusterLink*) local_unnamed_addr #0 !dbg !2634 {
  %2 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !5784
  %3 = load i32, i32* %2, align 8, !dbg !5784, !tbaa !2117
  %4 = icmp eq i32 %3, -1, !dbg !5785
  br i1 %4, label %7, label %5, !dbg !5786

; <label>:5:                                      ; preds = %1
  %6 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !5787, !tbaa !1910
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* %6, i32 %3, i32 3) #8, !dbg !5788
  br label %7, !dbg !5789

; <label>:7:                                      ; preds = %5, %1
  %8 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 2, !dbg !5790
  %9 = load i8*, i8** %8, align 8, !dbg !5790, !tbaa !2106
  tail call void @sdsfree(i8* %9) #8, !dbg !5791
  %10 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 3, !dbg !5792
  %11 = load i8*, i8** %10, align 8, !dbg !5792, !tbaa !2110
  tail call void @sdsfree(i8* %11) #8, !dbg !5793
  %12 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 4, !dbg !5794
  %13 = load %struct.clusterNode*, %struct.clusterNode** %12, align 8, !dbg !5794, !tbaa !2113
  %14 = icmp eq %struct.clusterNode* %13, null, !dbg !5795
  br i1 %14, label %17, label %15, !dbg !5796

; <label>:15:                                     ; preds = %7
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %13, i64 0, i32 19, !dbg !5797
  store %struct.clusterLink* null, %struct.clusterLink** %16, align 8, !dbg !5798, !tbaa !1153
  br label %17, !dbg !5799

; <label>:17:                                     ; preds = %7, %15
  %18 = load i32, i32* %2, align 8, !dbg !5800, !tbaa !2117
  %19 = tail call i32 @close(i32 %18) #8, !dbg !5801
  %20 = bitcast %struct.clusterLink* %0 to i8*, !dbg !5802
  tail call void @zfree(i8* %20) #8, !dbg !5803
  ret void, !dbg !5804
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterWriteHandler(%struct.aeEventLoop* nocapture readnone, i32, i8*, i32) #0 !dbg !5805 {
  %5 = getelementptr inbounds i8, i8* %2, i64 16, !dbg !5818
  %6 = bitcast i8* %5 to i8**, !dbg !5818
  %7 = load i8*, i8** %6, align 8, !dbg !5818, !tbaa !2106
  %8 = getelementptr inbounds i8, i8* %7, i64 -1, !dbg !5821
  %9 = load i8, i8* %8, align 1, !dbg !5821, !tbaa !745
  %10 = trunc i8 %9 to i3, !dbg !5823
  switch i3 %10, label %32 [
    i3 0, label %11
    i3 1, label %14
    i3 2, label %18
    i3 3, label %23
    i3 -4, label %28
  ], !dbg !5823

; <label>:11:                                     ; preds = %4
  %12 = lshr i8 %9, 3, !dbg !5824
  %13 = zext i8 %12 to i64, !dbg !5824
  br label %32, !dbg !5825

; <label>:14:                                     ; preds = %4
  %15 = getelementptr inbounds i8, i8* %7, i64 -3, !dbg !5826
  %16 = load i8, i8* %15, align 1, !dbg !5827, !tbaa !745
  %17 = zext i8 %16 to i64, !dbg !5826
  br label %32, !dbg !5828

; <label>:18:                                     ; preds = %4
  %19 = getelementptr inbounds i8, i8* %7, i64 -5, !dbg !5829
  %20 = bitcast i8* %19 to i16*, !dbg !5830
  %21 = load i16, i16* %20, align 1, !dbg !5830, !tbaa !1493
  %22 = zext i16 %21 to i64, !dbg !5829
  br label %32, !dbg !5831

; <label>:23:                                     ; preds = %4
  %24 = getelementptr inbounds i8, i8* %7, i64 -9, !dbg !5832
  %25 = bitcast i8* %24 to i32*, !dbg !5833
  %26 = load i32, i32* %25, align 1, !dbg !5833, !tbaa !708
  %27 = zext i32 %26 to i64, !dbg !5832
  br label %32, !dbg !5834

; <label>:28:                                     ; preds = %4
  %29 = getelementptr inbounds i8, i8* %7, i64 -17, !dbg !5835
  %30 = bitcast i8* %29 to i64*, !dbg !5836
  %31 = load i64, i64* %30, align 1, !dbg !5836, !tbaa !1500
  br label %32, !dbg !5837

; <label>:32:                                     ; preds = %4, %11, %14, %18, %23, %28
  %33 = phi i64 [ %31, %28 ], [ %27, %23 ], [ %22, %18 ], [ %17, %14 ], [ %13, %11 ], [ 0, %4 ], !dbg !5838
  %34 = tail call i64 @write(i32 %1, i8* %7, i64 %33) #8, !dbg !5839
  %35 = icmp slt i64 %34, 1, !dbg !5841
  br i1 %35, label %36, label %64, !dbg !5843

; <label>:36:                                     ; preds = %32
  %37 = icmp eq i64 %34, -1, !dbg !5844
  br i1 %37, label %38, label %42, !dbg !5846

; <label>:38:                                     ; preds = %36
  %39 = tail call i32* @__errno() #8, !dbg !5847
  %40 = load i32, i32* %39, align 4, !dbg !5847, !tbaa !708
  %41 = tail call i8* @strerror(i32 %40) #8, !dbg !5848
  br label %42, !dbg !5846

; <label>:42:                                     ; preds = %36, %38
  %43 = phi i8* [ %41, %38 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i64 0, i64 0), %36 ], !dbg !5846
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.66, i64 0, i64 0), i8* %43) #8, !dbg !5849
  %44 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !5854
  %45 = bitcast i8* %44 to i32*, !dbg !5854
  %46 = load i32, i32* %45, align 8, !dbg !5854, !tbaa !2117
  %47 = icmp eq i32 %46, -1, !dbg !5855
  br i1 %47, label %50, label %48, !dbg !5856

; <label>:48:                                     ; preds = %42
  %49 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !5857, !tbaa !1910
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* %49, i32 %46, i32 3) #8, !dbg !5858
  br label %50, !dbg !5859

; <label>:50:                                     ; preds = %48, %42
  %51 = load i8*, i8** %6, align 8, !dbg !5860, !tbaa !2106
  tail call void @sdsfree(i8* %51) #8, !dbg !5861
  %52 = getelementptr inbounds i8, i8* %2, i64 24, !dbg !5862
  %53 = bitcast i8* %52 to i8**, !dbg !5862
  %54 = load i8*, i8** %53, align 8, !dbg !5862, !tbaa !2110
  tail call void @sdsfree(i8* %54) #8, !dbg !5863
  %55 = getelementptr inbounds i8, i8* %2, i64 32, !dbg !5864
  %56 = bitcast i8* %55 to %struct.clusterNode**, !dbg !5864
  %57 = load %struct.clusterNode*, %struct.clusterNode** %56, align 8, !dbg !5864, !tbaa !2113
  %58 = icmp eq %struct.clusterNode* %57, null, !dbg !5865
  br i1 %58, label %61, label %59, !dbg !5866

; <label>:59:                                     ; preds = %50
  %60 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %57, i64 0, i32 19, !dbg !5867
  store %struct.clusterLink* null, %struct.clusterLink** %60, align 8, !dbg !5868, !tbaa !1153
  br label %61, !dbg !5869

; <label>:61:                                     ; preds = %50, %59
  %62 = load i32, i32* %45, align 8, !dbg !5870, !tbaa !2117
  %63 = tail call i32 @close(i32 %62) #8, !dbg !5871
  tail call void @zfree(i8* nonnull %2) #8, !dbg !5872
  br label %99, !dbg !5873

; <label>:64:                                     ; preds = %32
  %65 = load i8*, i8** %6, align 8, !dbg !5874, !tbaa !2106
  tail call void @sdsrange(i8* %65, i64 %34, i64 -1) #8, !dbg !5875
  %66 = load i8*, i8** %6, align 8, !dbg !5876, !tbaa !2106
  %67 = getelementptr inbounds i8, i8* %66, i64 -1, !dbg !5880
  %68 = load i8, i8* %67, align 1, !dbg !5880, !tbaa !745
  %69 = trunc i8 %68 to i3, !dbg !5882
  switch i3 %69, label %94 [
    i3 0, label %70
    i3 1, label %73
    i3 2, label %77
    i3 3, label %82
    i3 -4, label %87
  ], !dbg !5882

; <label>:70:                                     ; preds = %64
  %71 = lshr i8 %68, 3, !dbg !5883
  %72 = zext i8 %71 to i64, !dbg !5883
  br label %91, !dbg !5884

; <label>:73:                                     ; preds = %64
  %74 = getelementptr inbounds i8, i8* %66, i64 -3, !dbg !5885
  %75 = load i8, i8* %74, align 1, !dbg !5886, !tbaa !745
  %76 = zext i8 %75 to i64, !dbg !5885
  br label %91, !dbg !5887

; <label>:77:                                     ; preds = %64
  %78 = getelementptr inbounds i8, i8* %66, i64 -5, !dbg !5888
  %79 = bitcast i8* %78 to i16*, !dbg !5889
  %80 = load i16, i16* %79, align 1, !dbg !5889, !tbaa !1493
  %81 = zext i16 %80 to i64, !dbg !5888
  br label %91, !dbg !5890

; <label>:82:                                     ; preds = %64
  %83 = getelementptr inbounds i8, i8* %66, i64 -9, !dbg !5891
  %84 = bitcast i8* %83 to i32*, !dbg !5892
  %85 = load i32, i32* %84, align 1, !dbg !5892, !tbaa !708
  %86 = zext i32 %85 to i64, !dbg !5891
  br label %91, !dbg !5893

; <label>:87:                                     ; preds = %64
  %88 = getelementptr inbounds i8, i8* %66, i64 -17, !dbg !5894
  %89 = bitcast i8* %88 to i64*, !dbg !5895
  %90 = load i64, i64* %89, align 1, !dbg !5895, !tbaa !1500
  br label %91, !dbg !5896

; <label>:91:                                     ; preds = %70, %73, %77, %82, %87
  %92 = phi i64 [ %90, %87 ], [ %86, %82 ], [ %81, %77 ], [ %76, %73 ], [ %72, %70 ], !dbg !5897
  %93 = icmp eq i64 %92, 0, !dbg !5898
  br i1 %93, label %94, label %99, !dbg !5899

; <label>:94:                                     ; preds = %64, %91
  %95 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !5900, !tbaa !1910
  %96 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !5901
  %97 = bitcast i8* %96 to i32*, !dbg !5901
  %98 = load i32, i32* %97, align 8, !dbg !5901, !tbaa !2117
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* %95, i32 %98, i32 2) #8, !dbg !5902
  br label %99, !dbg !5902

; <label>:99:                                     ; preds = %91, %94, %61
  ret void, !dbg !5903
}

; Function Attrs: noredzone
declare dso_local void @sdsrange(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @read(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdscatlen(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendMessage(%struct.clusterLink*, i8*, i64) local_unnamed_addr #0 !dbg !5904 {
  %4 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 2, !dbg !5916
  %5 = load i8*, i8** %4, align 8, !dbg !5916, !tbaa !2106
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !5920
  %7 = load i8, i8* %6, align 1, !dbg !5920, !tbaa !745
  %8 = trunc i8 %7 to i3, !dbg !5922
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !5922

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !5923
  %11 = zext i8 %10 to i64, !dbg !5923
  br label %30, !dbg !5924

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !5925
  %14 = load i8, i8* %13, align 1, !dbg !5926, !tbaa !745
  %15 = zext i8 %14 to i64, !dbg !5925
  br label %30, !dbg !5927

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !5928
  %18 = bitcast i8* %17 to i16*, !dbg !5929
  %19 = load i16, i16* %18, align 1, !dbg !5929, !tbaa !1493
  %20 = zext i16 %19 to i64, !dbg !5928
  br label %30, !dbg !5930

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !5931
  %23 = bitcast i8* %22 to i32*, !dbg !5932
  %24 = load i32, i32* %23, align 1, !dbg !5932, !tbaa !708
  %25 = zext i32 %24 to i64, !dbg !5931
  br label %30, !dbg !5933

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !5934
  %28 = bitcast i8* %27 to i64*, !dbg !5935
  %29 = load i64, i64* %28, align 1, !dbg !5935, !tbaa !1500
  br label %30, !dbg !5936

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !5937
  %32 = icmp eq i64 %31, 0, !dbg !5938
  %33 = icmp ne i64 %2, 0, !dbg !5939
  %34 = and i1 %33, %32, !dbg !5940
  br i1 %34, label %35, label %42, !dbg !5940

; <label>:35:                                     ; preds = %30
  %36 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !5941, !tbaa !1910
  %37 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !5942
  %38 = load i32, i32* %37, align 8, !dbg !5942, !tbaa !2117
  %39 = bitcast %struct.clusterLink* %0 to i8*, !dbg !5943
  %40 = tail call i32 @aeCreateFileEvent(%struct.aeEventLoop* %36, i32 %38, i32 6, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @clusterWriteHandler, i8* %39) #8, !dbg !5944
  %41 = load i8*, i8** %4, align 8, !dbg !5945, !tbaa !2106
  br label %42, !dbg !5944

; <label>:42:                                     ; preds = %35, %30
  %43 = phi i8* [ %41, %35 ], [ %5, %30 ], !dbg !5945
  %44 = tail call i8* @sdscatlen(i8* %43, i8* %1, i64 %2) #8, !dbg !5946
  store i8* %44, i8** %4, align 8, !dbg !5947, !tbaa !2106
  %45 = getelementptr inbounds i8, i8* %1, i64 12, !dbg !5949
  %46 = bitcast i8* %45 to i16*, !dbg !5949
  %47 = load i16, i16* %46, align 4, !dbg !5949, !tbaa !4466
  %48 = tail call zeroext i16 @lwip_htons(i16 zeroext %47) #8, !dbg !5949
  %49 = icmp ult i16 %48, 10, !dbg !5951
  br i1 %49, label %50, label %56, !dbg !5953

; <label>:50:                                     ; preds = %42
  %51 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5954, !tbaa !784
  %52 = zext i16 %48 to i64, !dbg !5955
  %53 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %51, i64 0, i32 23, i64 %52, !dbg !5955
  %54 = load i64, i64* %53, align 8, !dbg !5956, !tbaa !1148
  %55 = add nsw i64 %54, 1, !dbg !5956
  store i64 %55, i64* %53, align 8, !dbg !5956, !tbaa !1148
  br label %56, !dbg !5955

; <label>:56:                                     ; preds = %50, %42
  ret void, !dbg !5957
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterBroadcastMessage(i8*, i64) local_unnamed_addr #0 !dbg !3418 {
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5960, !tbaa !784
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !5961
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !5961, !tbaa !832
  %6 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %5) #8, !dbg !5962
  %7 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #8, !dbg !5964
  %8 = icmp eq %struct.dictEntry* %7, null, !dbg !5966
  br i1 %8, label %26, label %9, !dbg !3445

; <label>:9:                                      ; preds = %2, %23
  %10 = phi %struct.dictEntry* [ %24, %23 ], [ %7, %2 ]
  %11 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, i32 0, !dbg !5967
  %12 = bitcast i8** %11 to %struct.clusterNode**, !dbg !5967
  %13 = load %struct.clusterNode*, %struct.clusterNode** %12, align 8, !dbg !5967, !tbaa !745
  %14 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %13, i64 0, i32 19, !dbg !5969
  %15 = load %struct.clusterLink*, %struct.clusterLink** %14, align 8, !dbg !5969, !tbaa !1153
  %16 = icmp eq %struct.clusterLink* %15, null, !dbg !5970
  br i1 %16, label %23, label %17, !dbg !5971, !llvm.loop !3444

; <label>:17:                                     ; preds = %9
  %18 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %13, i64 0, i32 2, !dbg !5972
  %19 = load i32, i32* %18, align 8, !dbg !5972, !tbaa !918
  %20 = and i32 %19, 48, !dbg !5973
  %21 = icmp eq i32 %20, 0, !dbg !5973
  br i1 %21, label %22, label %23, !dbg !5974, !llvm.loop !3444

; <label>:22:                                     ; preds = %17
  tail call void @clusterSendMessage(%struct.clusterLink* nonnull %15, i8* %0, i64 %1) #12, !dbg !5975
  br label %23, !dbg !3446

; <label>:23:                                     ; preds = %17, %9, %22
  %24 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #8, !dbg !5964
  %25 = icmp eq %struct.dictEntry* %24, null, !dbg !5966
  br i1 %25, label %26, label %9, !dbg !3445

; <label>:26:                                     ; preds = %23, %2
  tail call void @dictReleaseIterator(%struct.dictIterator* %6) #8, !dbg !5976
  ret void, !dbg !5977
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterBuildMessageHdr(%struct.clusterMsg*, i32) local_unnamed_addr #0 !dbg !5978 {
  %3 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !5992, !tbaa !757
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %3, i64 0, i32 2, !dbg !5992
  %5 = load i32, i32* %4, align 8, !dbg !5992, !tbaa !918
  %6 = and i32 %5, 2, !dbg !5992
  %7 = icmp eq i32 %6, 0, !dbg !5992
  br i1 %7, label %12, label %8, !dbg !5993

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %3, i64 0, i32 8, !dbg !5994
  %10 = load %struct.clusterNode*, %struct.clusterNode** %9, align 8, !dbg !5994, !tbaa !1012
  %11 = icmp eq %struct.clusterNode* %10, null, !dbg !5995
  br i1 %11, label %12, label %13, !dbg !5996

; <label>:12:                                     ; preds = %8, %2
  br label %13, !dbg !5996

; <label>:13:                                     ; preds = %8, %12
  %14 = phi %struct.clusterNode* [ %3, %12 ], [ %10, %8 ], !dbg !5996
  %15 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 0, i64 0, !dbg !5998
  %16 = tail call i8* @memset(i8* %15, i32 0, i64 4352) #8, !dbg !5999
  %17 = tail call zeroext i16 @lwip_htons(i16 zeroext 1) #8, !dbg !6000
  %18 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 2, !dbg !6001
  store i16 %17, i16* %18, align 8, !dbg !6002, !tbaa !4506
  store i8 82, i8* %15, align 8, !dbg !6003, !tbaa !745
  %19 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 0, i64 1, !dbg !6004
  store i8 67, i8* %19, align 1, !dbg !6005, !tbaa !745
  %20 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 0, i64 2, !dbg !6006
  store i8 109, i8* %20, align 2, !dbg !6007, !tbaa !745
  %21 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 0, i64 3, !dbg !6008
  store i8 98, i8* %21, align 1, !dbg !6009, !tbaa !745
  %22 = trunc i32 %1 to i16, !dbg !6010
  %23 = tail call zeroext i16 @lwip_htons(i16 zeroext %22) #8, !dbg !6010
  %24 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 4, !dbg !6011
  store i16 %23, i16* %24, align 4, !dbg !6012, !tbaa !4466
  %25 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 9, i64 0, !dbg !6013
  %26 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6014, !tbaa !757
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 1, i64 0, !dbg !6014
  %28 = tail call i8* @memcpy(i8* nonnull %25, i8* nonnull %27, i64 40) #8, !dbg !6015
  %29 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 12, i64 0, !dbg !6016
  %30 = tail call i8* @memset(i8* nonnull %29, i32 0, i64 46) #8, !dbg !6017
  %31 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !6018, !tbaa !4627
  %32 = icmp eq i8* %31, null, !dbg !6020
  br i1 %32, label %36, label %33, !dbg !6021

; <label>:33:                                     ; preds = %13
  %34 = tail call i8* @strncpy(i8* nonnull %29, i8* nonnull %31, i64 46) #8, !dbg !6022
  %35 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 12, i64 45, !dbg !6024
  store i8 0, i8* %35, align 1, !dbg !6025, !tbaa !745
  br label %36, !dbg !6026

; <label>:36:                                     ; preds = %13, %33
  %37 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 267), align 8, !dbg !6027, !tbaa !1933
  %38 = icmp eq i32 %37, 0, !dbg !6028
  %39 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !6029
  %40 = select i1 %38, i32 %39, i32 %37, !dbg !6028
  %41 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 268), align 4, !dbg !6031, !tbaa !1940
  %42 = icmp eq i32 %41, 0, !dbg !6032
  %43 = add nsw i32 %39, 10000, !dbg !6033
  %44 = select i1 %42, i32 %43, i32 %41, !dbg !6032
  %45 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 10, i64 0, !dbg !6035
  %46 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 4, i64 0, !dbg !6036
  %47 = tail call i8* @memcpy(i8* nonnull %45, i8* nonnull %46, i64 2048) #8, !dbg !6037
  %48 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 11, i64 0, !dbg !6038
  %49 = tail call i8* @memset(i8* nonnull %48, i32 0, i64 40) #8, !dbg !6039
  %50 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6040, !tbaa !757
  %51 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %50, i64 0, i32 8, !dbg !6042
  %52 = load %struct.clusterNode*, %struct.clusterNode** %51, align 8, !dbg !6042, !tbaa !1012
  %53 = icmp eq %struct.clusterNode* %52, null, !dbg !6043
  br i1 %53, label %57, label %54, !dbg !6044

; <label>:54:                                     ; preds = %36
  %55 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %52, i64 0, i32 1, i64 0, !dbg !6045
  %56 = tail call i8* @memcpy(i8* nonnull %48, i8* nonnull %55, i64 40) #8, !dbg !6046
  br label %57, !dbg !6046

; <label>:57:                                     ; preds = %36, %54
  %58 = trunc i32 %40 to i16, !dbg !6047
  %59 = tail call zeroext i16 @lwip_htons(i16 zeroext %58) #8, !dbg !6047
  %60 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 3, !dbg !6048
  store i16 %59, i16* %60, align 2, !dbg !6049, !tbaa !4010
  %61 = trunc i32 %44 to i16, !dbg !6050
  %62 = tail call zeroext i16 @lwip_htons(i16 zeroext %61) #8, !dbg !6050
  %63 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 14, !dbg !6051
  store i16 %62, i16* %63, align 8, !dbg !6052, !tbaa !4013
  %64 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6053, !tbaa !757
  %65 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %64, i64 0, i32 2, !dbg !6053
  %66 = load i32, i32* %65, align 8, !dbg !6053, !tbaa !918
  %67 = trunc i32 %66 to i16, !dbg !6053
  %68 = tail call zeroext i16 @lwip_htons(i16 zeroext %67) #8, !dbg !6053
  %69 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 15, !dbg !6054
  store i16 %68, i16* %69, align 2, !dbg !6055, !tbaa !4510
  %70 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6056, !tbaa !784
  %71 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %70, i64 0, i32 2, !dbg !6057
  %72 = load i32, i32* %71, align 8, !dbg !6057, !tbaa !1749
  %73 = trunc i32 %72 to i8, !dbg !6058
  %74 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 16, !dbg !6059
  store i8 %73, i8* %74, align 4, !dbg !6060, !tbaa !6061
  %75 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %70, i64 0, i32 1, !dbg !6062
  %76 = load i64, i64* %75, align 8, !dbg !6062, !tbaa !793
  %77 = tail call i64 @intrev64(i64 %76) #8, !dbg !6062
  %78 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 6, !dbg !6063
  store i64 %77, i64* %78, align 8, !dbg !6064, !tbaa !4566
  %79 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 3, !dbg !6065
  %80 = load i64, i64* %79, align 8, !dbg !6065, !tbaa !1075
  %81 = tail call i64 @intrev64(i64 %80) #8, !dbg !6065
  %82 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 7, !dbg !6066
  store i64 %81, i64* %82, align 8, !dbg !6067, !tbaa !4568
  %83 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6068, !tbaa !757
  %84 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %83, i64 0, i32 2, !dbg !6068
  %85 = load i32, i32* %84, align 8, !dbg !6068, !tbaa !918
  %86 = and i32 %85, 2, !dbg !6068
  %87 = icmp eq i32 %86, 0, !dbg !6068
  br i1 %87, label %90, label %88, !dbg !6070

; <label>:88:                                     ; preds = %57
  %89 = tail call i64 @replicationGetSlaveOffset() #8, !dbg !6071
  br label %92, !dbg !6073

; <label>:90:                                     ; preds = %57
  %91 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 179), align 8, !dbg !6074, !tbaa !6075
  br label %92

; <label>:92:                                     ; preds = %90, %88
  %93 = phi i64 [ %89, %88 ], [ %91, %90 ], !dbg !6076
  %94 = tail call i64 @intrev64(i64 %93) #8, !dbg !6077
  %95 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 8, !dbg !6078
  store i64 %94, i64* %95, align 8, !dbg !6079, !tbaa !4588
  %96 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6080, !tbaa !757
  %97 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %96, i64 0, i32 2, !dbg !6080
  %98 = load i32, i32* %97, align 8, !dbg !6080, !tbaa !918
  %99 = and i32 %98, 1, !dbg !6080
  %100 = icmp eq i32 %99, 0, !dbg !6080
  br i1 %100, label %110, label %101, !dbg !6082

; <label>:101:                                    ; preds = %92
  %102 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6083, !tbaa !784
  %103 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %102, i64 0, i32 17, !dbg !6084
  %104 = load i64, i64* %103, align 8, !dbg !6084, !tbaa !1950
  %105 = icmp eq i64 %104, 0, !dbg !6085
  br i1 %105, label %110, label %106, !dbg !6086

; <label>:106:                                    ; preds = %101
  %107 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 17, i64 0, !dbg !6087
  %108 = load i8, i8* %107, align 1, !dbg !6088, !tbaa !745
  %109 = or i8 %108, 1, !dbg !6088
  store i8 %109, i8* %107, align 1, !dbg !6088, !tbaa !745
  br label %110, !dbg !6087

; <label>:110:                                    ; preds = %101, %92, %106
  %111 = icmp eq i32 %1, 7, !dbg !6089
  %112 = select i1 %111, i32 4352, i32 0, !dbg !6089
  %113 = icmp eq i32 %1, 3, !dbg !6089
  %114 = select i1 %113, i32 2296, i32 %112, !dbg !6089
  %115 = tail call i32 @lwip_htonl(i32 %114) #8, !dbg !6090
  %116 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 1, !dbg !6091
  store i32 %115, i32* %116, align 4, !dbg !6092, !tbaa !2627
  ret void, !dbg !6093
}

; Function Attrs: noredzone
declare dso_local i8* @strncpy(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @replicationGetSlaveOffset() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeIsInGossipSection(%struct.clusterMsg*, i32, %struct.clusterNode*) local_unnamed_addr #0 !dbg !5400 {
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 18, !dbg !6098
  %5 = bitcast %union.clusterMsgData* %4 to [1 x %struct.clusterMsgDataGossip]*, !dbg !6099
  %6 = icmp sgt i32 %1, 0, !dbg !6100
  br i1 %6, label %7, label %22, !dbg !5425

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 1, i64 0
  %9 = sext i32 %1 to i64, !dbg !5425
  br label %10, !dbg !5425

; <label>:10:                                     ; preds = %7, %16
  %11 = phi i64 [ 0, %7 ], [ %17, %16 ]
  %12 = phi i32 [ 0, %7 ], [ %18, %16 ]
  %13 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %11, i32 0, i64 0, !dbg !6101
  %14 = tail call i32 @memcmp(i8* %13, i8* nonnull %8, i64 40) #8, !dbg !6102
  %15 = icmp eq i32 %14, 0, !dbg !6103
  br i1 %15, label %20, label %16, !dbg !6104

; <label>:16:                                     ; preds = %10
  %17 = add nuw nsw i64 %11, 1, !dbg !6105
  %18 = add nuw nsw i32 %12, 1, !dbg !6105
  %19 = icmp slt i64 %17, %9, !dbg !6100
  br i1 %19, label %10, label %22, !dbg !5425, !llvm.loop !5424

; <label>:20:                                     ; preds = %10
  %21 = trunc i64 %11 to i32, !dbg !6104
  br label %22, !dbg !6106

; <label>:22:                                     ; preds = %16, %20, %3
  %23 = phi i32 [ 0, %3 ], [ %21, %20 ], [ %18, %16 ], !dbg !6107
  %24 = icmp ne i32 %23, %1, !dbg !6106
  %25 = zext i1 %24 to i32, !dbg !6106
  ret i32 %25, !dbg !6108
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSetGossipEntry(%struct.clusterMsg*, i32, %struct.clusterNode*) local_unnamed_addr #0 !dbg !5431 {
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 18, !dbg !6112
  %5 = bitcast %union.clusterMsgData* %4 to [1 x %struct.clusterMsgDataGossip]*, !dbg !6113
  %6 = sext i32 %1 to i64, !dbg !6114
  %7 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 0, i64 0, !dbg !6115
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 1, i64 0, !dbg !6116
  %9 = tail call i8* @memcpy(i8* %7, i8* nonnull %8, i64 40) #8, !dbg !6117
  %10 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 9, !dbg !6118
  %11 = load i64, i64* %10, align 8, !dbg !6118, !tbaa !1060
  %12 = sdiv i64 %11, 1000, !dbg !6118
  %13 = trunc i64 %12 to i32, !dbg !6118
  %14 = tail call i32 @lwip_htonl(i32 %13) #8, !dbg !6118
  %15 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 1, !dbg !6119
  store i32 %14, i32* %15, align 4, !dbg !6120, !tbaa !5449
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 10, !dbg !6121
  %17 = load i64, i64* %16, align 8, !dbg !6121, !tbaa !1069
  %18 = sdiv i64 %17, 1000, !dbg !6121
  %19 = trunc i64 %18 to i32, !dbg !6121
  %20 = tail call i32 @lwip_htonl(i32 %19) #8, !dbg !6121
  %21 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 2, !dbg !6122
  store i32 %20, i32* %21, align 4, !dbg !6123, !tbaa !3816
  %22 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 3, i64 0, !dbg !6124
  %23 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 16, i64 0, !dbg !6125
  %24 = tail call i8* @memcpy(i8* nonnull %22, i8* nonnull %23, i64 46) #8, !dbg !6126
  %25 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 17, !dbg !6127
  %26 = load i32, i32* %25, align 8, !dbg !6127, !tbaa !891
  %27 = trunc i32 %26 to i16, !dbg !6127
  %28 = tail call zeroext i16 @lwip_htons(i16 zeroext %27) #8, !dbg !6127
  %29 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 4, !dbg !6128
  store i16 %28, i16* %29, align 2, !dbg !6129, !tbaa !3731
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 18, !dbg !6130
  %31 = load i32, i32* %30, align 4, !dbg !6130, !tbaa !898
  %32 = trunc i32 %31 to i16, !dbg !6130
  %33 = tail call zeroext i16 @lwip_htons(i16 zeroext %32) #8, !dbg !6130
  %34 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 5, !dbg !6131
  store i16 %33, i16* %34, align 4, !dbg !6132, !tbaa !3733
  %35 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 2, !dbg !6133
  %36 = load i32, i32* %35, align 8, !dbg !6133, !tbaa !918
  %37 = trunc i32 %36 to i16, !dbg !6133
  %38 = tail call zeroext i16 @lwip_htons(i16 zeroext %37) #8, !dbg !6133
  %39 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 6, !dbg !6134
  store i16 %38, i16* %39, align 2, !dbg !6135, !tbaa !3715
  %40 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 7, !dbg !6136
  store i32 0, i32* %40, align 4, !dbg !6137, !tbaa !5467
  ret void, !dbg !6138
}

; Function Attrs: noredzone
declare dso_local double @floor(double) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zcalloc(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictGetRandomKey(%struct.dict*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterBroadcastPong(i32) local_unnamed_addr #0 !dbg !6139 {
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6150, !tbaa !784
  %3 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 4, !dbg !6151
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !6151, !tbaa !832
  %5 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %4) #8, !dbg !6152
  %6 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %5) #8, !dbg !6154
  %7 = icmp eq %struct.dictEntry* %6, null, !dbg !6156
  br i1 %7, label %44, label %8, !dbg !6157

; <label>:8:                                      ; preds = %1
  %9 = icmp eq i32 %0, 1
  br label %10, !dbg !6157

; <label>:10:                                     ; preds = %8, %41
  %11 = phi %struct.dictEntry* [ %6, %8 ], [ %42, %41 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %11, i64 0, i32 1, i32 0, !dbg !6158
  %13 = bitcast i8** %12 to %struct.clusterNode**, !dbg !6158
  %14 = load %struct.clusterNode*, %struct.clusterNode** %13, align 8, !dbg !6158, !tbaa !745
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 19, !dbg !6160
  %16 = load %struct.clusterLink*, %struct.clusterLink** %15, align 8, !dbg !6160, !tbaa !1153
  %17 = icmp eq %struct.clusterLink* %16, null, !dbg !6162
  br i1 %17, label %41, label %18, !dbg !6163, !llvm.loop !6164

; <label>:18:                                     ; preds = %10
  %19 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6166, !tbaa !757
  %20 = icmp eq %struct.clusterNode* %14, %19, !dbg !6168
  br i1 %20, label %41, label %21, !dbg !6169, !llvm.loop !6164

; <label>:21:                                     ; preds = %18
  %22 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 2, !dbg !6170
  %23 = load i32, i32* %22, align 8, !dbg !6170, !tbaa !918
  %24 = and i32 %23, 32, !dbg !6170
  %25 = icmp eq i32 %24, 0, !dbg !6170
  br i1 %25, label %26, label %41, !dbg !6171, !llvm.loop !6164

; <label>:26:                                     ; preds = %21
  br i1 %9, label %27, label %40, !dbg !6172

; <label>:27:                                     ; preds = %26
  %28 = and i32 %23, 2, !dbg !6173
  %29 = icmp eq i32 %28, 0, !dbg !6173
  br i1 %29, label %41, label %30, !dbg !6174

; <label>:30:                                     ; preds = %27
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 8, !dbg !6175
  %32 = load %struct.clusterNode*, %struct.clusterNode** %31, align 8, !dbg !6175, !tbaa !1012
  %33 = icmp eq %struct.clusterNode* %32, null, !dbg !6176
  br i1 %33, label %41, label %34, !dbg !6177

; <label>:34:                                     ; preds = %30
  %35 = icmp eq %struct.clusterNode* %32, %19, !dbg !6178
  br i1 %35, label %40, label %36, !dbg !6179

; <label>:36:                                     ; preds = %34
  %37 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %19, i64 0, i32 8, !dbg !6180
  %38 = load %struct.clusterNode*, %struct.clusterNode** %37, align 8, !dbg !6180, !tbaa !1012
  %39 = icmp eq %struct.clusterNode* %32, %38, !dbg !6181
  br i1 %39, label %40, label %41, !dbg !6182

; <label>:40:                                     ; preds = %34, %36, %26
  tail call void @clusterSendPing(%struct.clusterLink* nonnull %16, i32 1) #12, !dbg !6183
  br label %41, !dbg !6165

; <label>:41:                                     ; preds = %27, %30, %36, %18, %21, %10, %40
  %42 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %5) #8, !dbg !6154
  %43 = icmp eq %struct.dictEntry* %42, null, !dbg !6156
  br i1 %43, label %44, label %10, !dbg !6157

; <label>:44:                                     ; preds = %41, %1
  tail call void @dictReleaseIterator(%struct.dictIterator* %5) #8, !dbg !6184
  ret void, !dbg !6185
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendPublish(%struct.clusterLink*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #0 !dbg !6186 {
  %4 = alloca %struct.clusterMsg, align 16
  %5 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %4, i64 0, i32 0, i64 0, !dbg !6202
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %5) #9, !dbg !6202
  %6 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* %1) #8, !dbg !6204
  %7 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* %2) #8, !dbg !6205
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 2, !dbg !6206
  %9 = load i8*, i8** %8, align 8, !dbg !6206, !tbaa !6207
  %10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !6211
  %11 = load i8, i8* %10, align 1, !dbg !6211, !tbaa !745
  %12 = trunc i8 %11 to i3, !dbg !6213
  switch i3 %12, label %34 [
    i3 0, label %13
    i3 1, label %16
    i3 2, label %20
    i3 3, label %25
    i3 -4, label %30
  ], !dbg !6213

; <label>:13:                                     ; preds = %3
  %14 = lshr i8 %11, 3, !dbg !6214
  %15 = zext i8 %14 to i64, !dbg !6214
  br label %34, !dbg !6215

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %9, i64 -3, !dbg !6216
  %18 = load i8, i8* %17, align 1, !dbg !6217, !tbaa !745
  %19 = zext i8 %18 to i64, !dbg !6216
  br label %34, !dbg !6218

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds i8, i8* %9, i64 -5, !dbg !6219
  %22 = bitcast i8* %21 to i16*, !dbg !6220
  %23 = load i16, i16* %22, align 1, !dbg !6220, !tbaa !1493
  %24 = zext i16 %23 to i64, !dbg !6219
  br label %34, !dbg !6221

; <label>:25:                                     ; preds = %3
  %26 = getelementptr inbounds i8, i8* %9, i64 -9, !dbg !6222
  %27 = bitcast i8* %26 to i32*, !dbg !6223
  %28 = load i32, i32* %27, align 1, !dbg !6223, !tbaa !708
  %29 = zext i32 %28 to i64, !dbg !6222
  br label %34, !dbg !6224

; <label>:30:                                     ; preds = %3
  %31 = getelementptr inbounds i8, i8* %9, i64 -17, !dbg !6225
  %32 = bitcast i8* %31 to i64*, !dbg !6226
  %33 = load i64, i64* %32, align 1, !dbg !6226, !tbaa !1500
  br label %34, !dbg !6227

; <label>:34:                                     ; preds = %3, %13, %16, %20, %25, %30
  %35 = phi i64 [ %33, %30 ], [ %29, %25 ], [ %24, %20 ], [ %19, %16 ], [ %15, %13 ], [ 0, %3 ], !dbg !6228
  %36 = trunc i64 %35 to i32, !dbg !6229
  %37 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %7, i64 0, i32 2, !dbg !6231
  %38 = load i8*, i8** %37, align 8, !dbg !6231, !tbaa !6207
  %39 = getelementptr inbounds i8, i8* %38, i64 -1, !dbg !6234
  %40 = load i8, i8* %39, align 1, !dbg !6234, !tbaa !745
  %41 = trunc i8 %40 to i3, !dbg !6236
  switch i3 %41, label %63 [
    i3 0, label %42
    i3 1, label %45
    i3 2, label %49
    i3 3, label %54
    i3 -4, label %59
  ], !dbg !6236

; <label>:42:                                     ; preds = %34
  %43 = lshr i8 %40, 3, !dbg !6237
  %44 = zext i8 %43 to i64, !dbg !6237
  br label %63, !dbg !6238

; <label>:45:                                     ; preds = %34
  %46 = getelementptr inbounds i8, i8* %38, i64 -3, !dbg !6239
  %47 = load i8, i8* %46, align 1, !dbg !6240, !tbaa !745
  %48 = zext i8 %47 to i64, !dbg !6239
  br label %63, !dbg !6241

; <label>:49:                                     ; preds = %34
  %50 = getelementptr inbounds i8, i8* %38, i64 -5, !dbg !6242
  %51 = bitcast i8* %50 to i16*, !dbg !6243
  %52 = load i16, i16* %51, align 1, !dbg !6243, !tbaa !1493
  %53 = zext i16 %52 to i64, !dbg !6242
  br label %63, !dbg !6244

; <label>:54:                                     ; preds = %34
  %55 = getelementptr inbounds i8, i8* %38, i64 -9, !dbg !6245
  %56 = bitcast i8* %55 to i32*, !dbg !6246
  %57 = load i32, i32* %56, align 1, !dbg !6246, !tbaa !708
  %58 = zext i32 %57 to i64, !dbg !6245
  br label %63, !dbg !6247

; <label>:59:                                     ; preds = %34
  %60 = getelementptr inbounds i8, i8* %38, i64 -17, !dbg !6248
  %61 = bitcast i8* %60 to i64*, !dbg !6249
  %62 = load i64, i64* %61, align 1, !dbg !6249, !tbaa !1500
  br label %63, !dbg !6250

; <label>:63:                                     ; preds = %34, %42, %45, %49, %54, %59
  %64 = phi i64 [ %62, %59 ], [ %58, %54 ], [ %53, %49 ], [ %48, %45 ], [ %44, %42 ], [ 0, %34 ], !dbg !6251
  %65 = trunc i64 %64 to i32, !dbg !6252
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %4, i32 4) #12, !dbg !6255
  %66 = add i64 %35, 8, !dbg !6257
  %67 = add i64 %66, %64, !dbg !6258
  %68 = trunc i64 %67 to i32, !dbg !6259
  %69 = add i32 %68, 2256, !dbg !6259
  %70 = call i32 @lwip_htonl(i32 %36) #8, !dbg !6260
  %71 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %4, i64 0, i32 18, !dbg !6261
  %72 = bitcast %union.clusterMsgData* %71 to %struct.clusterMsgDataPublish*, !dbg !6262
  %73 = bitcast %union.clusterMsgData* %71 to i32*, !dbg !6263
  store i32 %70, i32* %73, align 16, !dbg !6264, !tbaa !745
  %74 = call i32 @lwip_htonl(i32 %65) #8, !dbg !6265
  %75 = getelementptr inbounds %struct.clusterMsgDataPublish, %struct.clusterMsgDataPublish* %72, i64 0, i32 1, !dbg !6266
  store i32 %74, i32* %75, align 4, !dbg !6267, !tbaa !745
  %76 = call i32 @lwip_htonl(i32 %69) #8, !dbg !6268
  %77 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %4, i64 0, i32 1, !dbg !6269
  store i32 %76, i32* %77, align 4, !dbg !6270, !tbaa !2627
  %78 = zext i32 %69 to i64, !dbg !6271
  %79 = icmp ult i32 %69, 4352, !dbg !6273
  br i1 %79, label %84, label %80, !dbg !6274

; <label>:80:                                     ; preds = %63
  %81 = call i8* @zmalloc(i64 %78) #8, !dbg !6275
  %82 = call i8* @memcpy(i8* %81, i8* nonnull %5, i64 4352) #8, !dbg !6278
  %83 = bitcast i8* %81 to %struct.clusterMsg*, !dbg !6279
  br label %84

; <label>:84:                                     ; preds = %63, %80
  %85 = phi i8* [ %81, %80 ], [ %5, %63 ], !dbg !6280
  %86 = phi %struct.clusterMsg* [ %83, %80 ], [ %4, %63 ], !dbg !6280
  %87 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %86, i64 0, i32 18, i32 0, i32 0, i32 1, i64 0, !dbg !6281
  %88 = load i8*, i8** %8, align 8, !dbg !6282, !tbaa !6207
  %89 = getelementptr inbounds i8, i8* %88, i64 -1, !dbg !6285
  %90 = load i8, i8* %89, align 1, !dbg !6285, !tbaa !745
  %91 = trunc i8 %90 to i3, !dbg !6287
  switch i3 %91, label %113 [
    i3 0, label %92
    i3 1, label %95
    i3 2, label %99
    i3 3, label %104
    i3 -4, label %109
  ], !dbg !6287

; <label>:92:                                     ; preds = %84
  %93 = lshr i8 %90, 3, !dbg !6288
  %94 = zext i8 %93 to i64, !dbg !6288
  br label %113, !dbg !6289

; <label>:95:                                     ; preds = %84
  %96 = getelementptr inbounds i8, i8* %88, i64 -3, !dbg !6290
  %97 = load i8, i8* %96, align 1, !dbg !6291, !tbaa !745
  %98 = zext i8 %97 to i64, !dbg !6290
  br label %113, !dbg !6292

; <label>:99:                                     ; preds = %84
  %100 = getelementptr inbounds i8, i8* %88, i64 -5, !dbg !6293
  %101 = bitcast i8* %100 to i16*, !dbg !6294
  %102 = load i16, i16* %101, align 1, !dbg !6294, !tbaa !1493
  %103 = zext i16 %102 to i64, !dbg !6293
  br label %113, !dbg !6295

; <label>:104:                                    ; preds = %84
  %105 = getelementptr inbounds i8, i8* %88, i64 -9, !dbg !6296
  %106 = bitcast i8* %105 to i32*, !dbg !6297
  %107 = load i32, i32* %106, align 1, !dbg !6297, !tbaa !708
  %108 = zext i32 %107 to i64, !dbg !6296
  br label %113, !dbg !6298

; <label>:109:                                    ; preds = %84
  %110 = getelementptr inbounds i8, i8* %88, i64 -17, !dbg !6299
  %111 = bitcast i8* %110 to i64*, !dbg !6300
  %112 = load i64, i64* %111, align 1, !dbg !6300, !tbaa !1500
  br label %113, !dbg !6301

; <label>:113:                                    ; preds = %84, %92, %95, %99, %104, %109
  %114 = phi i64 [ %112, %109 ], [ %108, %104 ], [ %103, %99 ], [ %98, %95 ], [ %94, %92 ], [ 0, %84 ], !dbg !6302
  %115 = call i8* @memcpy(i8* nonnull %87, i8* %88, i64 %114) #8, !dbg !6303
  %116 = load i8*, i8** %8, align 8, !dbg !6304, !tbaa !6207
  %117 = getelementptr inbounds i8, i8* %116, i64 -1, !dbg !6307
  %118 = load i8, i8* %117, align 1, !dbg !6307, !tbaa !745
  %119 = trunc i8 %118 to i3, !dbg !6309
  switch i3 %119, label %141 [
    i3 0, label %120
    i3 1, label %123
    i3 2, label %127
    i3 3, label %132
    i3 -4, label %137
  ], !dbg !6309

; <label>:120:                                    ; preds = %113
  %121 = lshr i8 %118, 3, !dbg !6310
  %122 = zext i8 %121 to i64, !dbg !6310
  br label %141, !dbg !6311

; <label>:123:                                    ; preds = %113
  %124 = getelementptr inbounds i8, i8* %116, i64 -3, !dbg !6312
  %125 = load i8, i8* %124, align 1, !dbg !6313, !tbaa !745
  %126 = zext i8 %125 to i64, !dbg !6312
  br label %141, !dbg !6314

; <label>:127:                                    ; preds = %113
  %128 = getelementptr inbounds i8, i8* %116, i64 -5, !dbg !6315
  %129 = bitcast i8* %128 to i16*, !dbg !6316
  %130 = load i16, i16* %129, align 1, !dbg !6316, !tbaa !1493
  %131 = zext i16 %130 to i64, !dbg !6315
  br label %141, !dbg !6317

; <label>:132:                                    ; preds = %113
  %133 = getelementptr inbounds i8, i8* %116, i64 -9, !dbg !6318
  %134 = bitcast i8* %133 to i32*, !dbg !6319
  %135 = load i32, i32* %134, align 1, !dbg !6319, !tbaa !708
  %136 = zext i32 %135 to i64, !dbg !6318
  br label %141, !dbg !6320

; <label>:137:                                    ; preds = %113
  %138 = getelementptr inbounds i8, i8* %116, i64 -17, !dbg !6321
  %139 = bitcast i8* %138 to i64*, !dbg !6322
  %140 = load i64, i64* %139, align 1, !dbg !6322, !tbaa !1500
  br label %141, !dbg !6323

; <label>:141:                                    ; preds = %113, %120, %123, %127, %132, %137
  %142 = phi i64 [ %140, %137 ], [ %136, %132 ], [ %131, %127 ], [ %126, %123 ], [ %122, %120 ], [ 0, %113 ], !dbg !6324
  %143 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %86, i64 0, i32 18, i32 0, i32 0, i32 1, i64 %142, !dbg !6325
  %144 = load i8*, i8** %37, align 8, !dbg !6326, !tbaa !6207
  %145 = getelementptr inbounds i8, i8* %144, i64 -1, !dbg !6329
  %146 = load i8, i8* %145, align 1, !dbg !6329, !tbaa !745
  %147 = trunc i8 %146 to i3, !dbg !6331
  switch i3 %147, label %169 [
    i3 0, label %148
    i3 1, label %151
    i3 2, label %155
    i3 3, label %160
    i3 -4, label %165
  ], !dbg !6331

; <label>:148:                                    ; preds = %141
  %149 = lshr i8 %146, 3, !dbg !6332
  %150 = zext i8 %149 to i64, !dbg !6332
  br label %169, !dbg !6333

; <label>:151:                                    ; preds = %141
  %152 = getelementptr inbounds i8, i8* %144, i64 -3, !dbg !6334
  %153 = load i8, i8* %152, align 1, !dbg !6335, !tbaa !745
  %154 = zext i8 %153 to i64, !dbg !6334
  br label %169, !dbg !6336

; <label>:155:                                    ; preds = %141
  %156 = getelementptr inbounds i8, i8* %144, i64 -5, !dbg !6337
  %157 = bitcast i8* %156 to i16*, !dbg !6338
  %158 = load i16, i16* %157, align 1, !dbg !6338, !tbaa !1493
  %159 = zext i16 %158 to i64, !dbg !6337
  br label %169, !dbg !6339

; <label>:160:                                    ; preds = %141
  %161 = getelementptr inbounds i8, i8* %144, i64 -9, !dbg !6340
  %162 = bitcast i8* %161 to i32*, !dbg !6341
  %163 = load i32, i32* %162, align 1, !dbg !6341, !tbaa !708
  %164 = zext i32 %163 to i64, !dbg !6340
  br label %169, !dbg !6342

; <label>:165:                                    ; preds = %141
  %166 = getelementptr inbounds i8, i8* %144, i64 -17, !dbg !6343
  %167 = bitcast i8* %166 to i64*, !dbg !6344
  %168 = load i64, i64* %167, align 1, !dbg !6344, !tbaa !1500
  br label %169, !dbg !6345

; <label>:169:                                    ; preds = %141, %148, %151, %155, %160, %165
  %170 = phi i64 [ %168, %165 ], [ %164, %160 ], [ %159, %155 ], [ %154, %151 ], [ %150, %148 ], [ 0, %141 ], !dbg !6346
  %171 = call i8* @memcpy(i8* nonnull %143, i8* %144, i64 %170) #8, !dbg !6347
  %172 = icmp eq %struct.clusterLink* %0, null, !dbg !6348
  br i1 %172, label %174, label %173, !dbg !6350

; <label>:173:                                    ; preds = %169
  call void @clusterSendMessage(%struct.clusterLink* nonnull %0, i8* %85, i64 %78) #12, !dbg !6351
  br label %199, !dbg !6351

; <label>:174:                                    ; preds = %169
  %175 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6355, !tbaa !784
  %176 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %175, i64 0, i32 4, !dbg !6356
  %177 = load %struct.dict*, %struct.dict** %176, align 8, !dbg !6356, !tbaa !832
  %178 = call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %177) #8, !dbg !6357
  %179 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %178) #8, !dbg !6359
  %180 = icmp eq %struct.dictEntry* %179, null, !dbg !6361
  br i1 %180, label %198, label %181, !dbg !6362

; <label>:181:                                    ; preds = %174, %195
  %182 = phi %struct.dictEntry* [ %196, %195 ], [ %179, %174 ]
  %183 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %182, i64 0, i32 1, i32 0, !dbg !6363
  %184 = bitcast i8** %183 to %struct.clusterNode**, !dbg !6363
  %185 = load %struct.clusterNode*, %struct.clusterNode** %184, align 8, !dbg !6363, !tbaa !745
  %186 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %185, i64 0, i32 19, !dbg !6365
  %187 = load %struct.clusterLink*, %struct.clusterLink** %186, align 8, !dbg !6365, !tbaa !1153
  %188 = icmp eq %struct.clusterLink* %187, null, !dbg !6366
  br i1 %188, label %195, label %189, !dbg !6367, !llvm.loop !3444

; <label>:189:                                    ; preds = %181
  %190 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %185, i64 0, i32 2, !dbg !6368
  %191 = load i32, i32* %190, align 8, !dbg !6368, !tbaa !918
  %192 = and i32 %191, 48, !dbg !6369
  %193 = icmp eq i32 %192, 0, !dbg !6369
  br i1 %193, label %194, label %195, !dbg !6370, !llvm.loop !3444

; <label>:194:                                    ; preds = %189
  call void @clusterSendMessage(%struct.clusterLink* nonnull %187, i8* %85, i64 %78) #8, !dbg !6371
  br label %195, !dbg !6372

; <label>:195:                                    ; preds = %194, %189, %181
  %196 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %178) #8, !dbg !6359
  %197 = icmp eq %struct.dictEntry* %196, null, !dbg !6361
  br i1 %197, label %198, label %181, !dbg !6362

; <label>:198:                                    ; preds = %195, %174
  call void @dictReleaseIterator(%struct.dictIterator* %178) #8, !dbg !6373
  br label %199

; <label>:199:                                    ; preds = %198, %173
  call void @decrRefCount(%struct.redisObject* %6) #8, !dbg !6374
  call void @decrRefCount(%struct.redisObject* %7) #8, !dbg !6375
  %200 = icmp eq i8* %85, %5, !dbg !6376
  br i1 %200, label %202, label %201, !dbg !6378

; <label>:201:                                    ; preds = %199
  call void @zfree(i8* %85) #8, !dbg !6379
  br label %202, !dbg !6379

; <label>:202:                                    ; preds = %199, %201
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %5) #9, !dbg !6380
  ret void, !dbg !6380
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @getDecodedObject(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendModule(%struct.clusterLink*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #0 !dbg !6381 {
  %6 = alloca %struct.clusterMsg, align 16
  %7 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 0, i64 0, !dbg !6399
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %7) #9, !dbg !6399
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %6, i32 9) #12, !dbg !6402
  %8 = zext i32 %4 to i64, !dbg !6404
  %9 = add i32 %4, 2269, !dbg !6405
  %10 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 18, i32 0, i32 0, i32 0, !dbg !6406
  store i64 %1, i64* %10, align 16, !dbg !6407, !tbaa !745
  %11 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 18, i32 0, i32 0, i32 1, i64 4, !dbg !6408
  store i8 %2, i8* %11, align 4, !dbg !6409, !tbaa !745
  %12 = call i32 @lwip_htonl(i32 %4) #8, !dbg !6410
  %13 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 18, i32 0, i32 0, i32 1, !dbg !6411
  %14 = bitcast [40 x i8]* %13 to i32*, !dbg !6411
  store i32 %12, i32* %14, align 8, !dbg !6412, !tbaa !745
  %15 = call i32 @lwip_htonl(i32 %9) #8, !dbg !6413
  %16 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 1, !dbg !6414
  store i32 %15, i32* %16, align 4, !dbg !6415, !tbaa !2627
  %17 = zext i32 %9 to i64, !dbg !6416
  %18 = icmp ult i32 %9, 4352, !dbg !6418
  br i1 %18, label %23, label %19, !dbg !6419

; <label>:19:                                     ; preds = %5
  %20 = call i8* @zmalloc(i64 %17) #8, !dbg !6420
  %21 = call i8* @memcpy(i8* %20, i8* nonnull %7, i64 4352) #8, !dbg !6423
  %22 = bitcast i8* %20 to %struct.clusterMsg*, !dbg !6424
  br label %23

; <label>:23:                                     ; preds = %5, %19
  %24 = phi i8* [ %20, %19 ], [ %7, %5 ], !dbg !6425
  %25 = phi %struct.clusterMsg* [ %22, %19 ], [ %6, %5 ], !dbg !6425
  %26 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %25, i64 0, i32 18, i32 0, i32 0, i32 1, i64 5, !dbg !6426
  %27 = call i8* @memcpy(i8* nonnull %26, i8* %3, i64 %8) #8, !dbg !6427
  %28 = icmp eq %struct.clusterLink* %0, null, !dbg !6428
  br i1 %28, label %30, label %29, !dbg !6430

; <label>:29:                                     ; preds = %23
  call void @clusterSendMessage(%struct.clusterLink* nonnull %0, i8* %24, i64 %17) #12, !dbg !6431
  br label %55, !dbg !6431

; <label>:30:                                     ; preds = %23
  %31 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6435, !tbaa !784
  %32 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %31, i64 0, i32 4, !dbg !6436
  %33 = load %struct.dict*, %struct.dict** %32, align 8, !dbg !6436, !tbaa !832
  %34 = call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %33) #8, !dbg !6437
  %35 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %34) #8, !dbg !6439
  %36 = icmp eq %struct.dictEntry* %35, null, !dbg !6441
  br i1 %36, label %54, label %37, !dbg !6442

; <label>:37:                                     ; preds = %30, %51
  %38 = phi %struct.dictEntry* [ %52, %51 ], [ %35, %30 ]
  %39 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %38, i64 0, i32 1, i32 0, !dbg !6443
  %40 = bitcast i8** %39 to %struct.clusterNode**, !dbg !6443
  %41 = load %struct.clusterNode*, %struct.clusterNode** %40, align 8, !dbg !6443, !tbaa !745
  %42 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %41, i64 0, i32 19, !dbg !6445
  %43 = load %struct.clusterLink*, %struct.clusterLink** %42, align 8, !dbg !6445, !tbaa !1153
  %44 = icmp eq %struct.clusterLink* %43, null, !dbg !6446
  br i1 %44, label %51, label %45, !dbg !6447, !llvm.loop !3444

; <label>:45:                                     ; preds = %37
  %46 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %41, i64 0, i32 2, !dbg !6448
  %47 = load i32, i32* %46, align 8, !dbg !6448, !tbaa !918
  %48 = and i32 %47, 48, !dbg !6449
  %49 = icmp eq i32 %48, 0, !dbg !6449
  br i1 %49, label %50, label %51, !dbg !6450, !llvm.loop !3444

; <label>:50:                                     ; preds = %45
  call void @clusterSendMessage(%struct.clusterLink* nonnull %43, i8* %24, i64 %17) #8, !dbg !6451
  br label %51, !dbg !6452

; <label>:51:                                     ; preds = %50, %45, %37
  %52 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %34) #8, !dbg !6439
  %53 = icmp eq %struct.dictEntry* %52, null, !dbg !6441
  br i1 %53, label %54, label %37, !dbg !6442

; <label>:54:                                     ; preds = %51, %30
  call void @dictReleaseIterator(%struct.dictIterator* %34) #8, !dbg !6453
  br label %55

; <label>:55:                                     ; preds = %54, %29
  %56 = icmp eq i8* %24, %7, !dbg !6454
  br i1 %56, label %58, label %57, !dbg !6456

; <label>:57:                                     ; preds = %55
  call void @zfree(i8* %24) #8, !dbg !6457
  br label %58, !dbg !6457

; <label>:58:                                     ; preds = %55, %57
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %7) #9, !dbg !6458
  ret void, !dbg !6458
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterSendModuleMessageToTarget(i8*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #0 !dbg !6459 {
  %6 = icmp eq i8* %0, null, !dbg !6475
  br i1 %6, label %23, label %7, !dbg !6477

; <label>:7:                                      ; preds = %5
  %8 = tail call i8* @sdsnewlen(i8* nonnull %0, i64 40) #8, !dbg !6481
  %9 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6483, !tbaa !784
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 4, !dbg !6484
  %11 = load %struct.dict*, %struct.dict** %10, align 8, !dbg !6484, !tbaa !832
  %12 = tail call %struct.dictEntry* @dictFind(%struct.dict* %11, i8* %8) #8, !dbg !6485
  tail call void @sdsfree(i8* %8) #8, !dbg !6487
  %13 = icmp eq %struct.dictEntry* %12, null, !dbg !6488
  br i1 %13, label %25, label %14, !dbg !6489

; <label>:14:                                     ; preds = %7
  %15 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %12, i64 0, i32 1, i32 0, !dbg !6490
  %16 = bitcast i8** %15 to %struct.clusterNode**, !dbg !6490
  %17 = load %struct.clusterNode*, %struct.clusterNode** %16, align 8, !dbg !6490, !tbaa !745
  %18 = icmp eq %struct.clusterNode* %17, null, !dbg !6491
  br i1 %18, label %25, label %19, !dbg !6493

; <label>:19:                                     ; preds = %14
  %20 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %17, i64 0, i32 19, !dbg !6494
  %21 = load %struct.clusterLink*, %struct.clusterLink** %20, align 8, !dbg !6494, !tbaa !1153
  %22 = icmp eq %struct.clusterLink* %21, null, !dbg !6495
  br i1 %22, label %25, label %23, !dbg !6496

; <label>:23:                                     ; preds = %19, %5
  %24 = phi %struct.clusterLink* [ null, %5 ], [ %21, %19 ], !dbg !6497
  tail call void @clusterSendModule(%struct.clusterLink* %24, i64 %1, i8 zeroext %2, i8* %3, i32 %4) #12, !dbg !6498
  br label %25, !dbg !6499

; <label>:25:                                     ; preds = %7, %14, %19, %23
  %26 = phi i32 [ 0, %23 ], [ -1, %19 ], [ -1, %14 ], [ -1, %7 ], !dbg !6500
  ret i32 %26, !dbg !6501
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterPropagatePublish(%struct.redisObject*, %struct.redisObject*) local_unnamed_addr #0 !dbg !6502 {
  tail call void @clusterSendPublish(%struct.clusterLink* null, %struct.redisObject* %0, %struct.redisObject* %1) #12, !dbg !6510
  ret void, !dbg !6511
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterRequestFailoverAuth() local_unnamed_addr #0 !dbg !6512 {
  %1 = alloca %struct.clusterMsg, align 16
  %2 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 0, i64 0, !dbg !6517
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %2) #9, !dbg !6517
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %1, i32 5) #12, !dbg !6520
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6521, !tbaa !784
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 17, !dbg !6523
  %5 = load i64, i64* %4, align 8, !dbg !6523, !tbaa !1950
  %6 = icmp eq i64 %5, 0, !dbg !6524
  br i1 %6, label %11, label %7, !dbg !6525

; <label>:7:                                      ; preds = %0
  %8 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 17, i64 0, !dbg !6526
  %9 = load i8, i8* %8, align 1, !dbg !6527, !tbaa !745
  %10 = or i8 %9, 2, !dbg !6527
  store i8 %10, i8* %8, align 1, !dbg !6527, !tbaa !745
  br label %11, !dbg !6526

; <label>:11:                                     ; preds = %0, %7
  %12 = call i32 @lwip_htonl(i32 2256) #8, !dbg !6529
  %13 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 1, !dbg !6530
  store i32 %12, i32* %13, align 4, !dbg !6531, !tbaa !2627
  %14 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6535, !tbaa !784
  %15 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %14, i64 0, i32 4, !dbg !6536
  %16 = load %struct.dict*, %struct.dict** %15, align 8, !dbg !6536, !tbaa !832
  %17 = call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %16) #8, !dbg !6537
  %18 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %17) #8, !dbg !6539
  %19 = icmp eq %struct.dictEntry* %18, null, !dbg !6541
  br i1 %19, label %37, label %20, !dbg !6542

; <label>:20:                                     ; preds = %11, %34
  %21 = phi %struct.dictEntry* [ %35, %34 ], [ %18, %11 ]
  %22 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %21, i64 0, i32 1, i32 0, !dbg !6543
  %23 = bitcast i8** %22 to %struct.clusterNode**, !dbg !6543
  %24 = load %struct.clusterNode*, %struct.clusterNode** %23, align 8, !dbg !6543, !tbaa !745
  %25 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %24, i64 0, i32 19, !dbg !6545
  %26 = load %struct.clusterLink*, %struct.clusterLink** %25, align 8, !dbg !6545, !tbaa !1153
  %27 = icmp eq %struct.clusterLink* %26, null, !dbg !6546
  br i1 %27, label %34, label %28, !dbg !6547, !llvm.loop !3444

; <label>:28:                                     ; preds = %20
  %29 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %24, i64 0, i32 2, !dbg !6548
  %30 = load i32, i32* %29, align 8, !dbg !6548, !tbaa !918
  %31 = and i32 %30, 48, !dbg !6549
  %32 = icmp eq i32 %31, 0, !dbg !6549
  br i1 %32, label %33, label %34, !dbg !6550, !llvm.loop !3444

; <label>:33:                                     ; preds = %28
  call void @clusterSendMessage(%struct.clusterLink* nonnull %26, i8* nonnull %2, i64 2256) #8, !dbg !6551
  br label %34, !dbg !6552

; <label>:34:                                     ; preds = %33, %28, %20
  %35 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %17) #8, !dbg !6539
  %36 = icmp eq %struct.dictEntry* %35, null, !dbg !6541
  br i1 %36, label %37, label %20, !dbg !6542

; <label>:37:                                     ; preds = %34, %11
  call void @dictReleaseIterator(%struct.dictIterator* %17) #8, !dbg !6553
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %2) #9, !dbg !6554
  ret void, !dbg !6554
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendFailoverAuth(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !5754 {
  %2 = alloca %struct.clusterMsg, align 16
  %3 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 0, i64 0, !dbg !6556
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %3) #9, !dbg !6556
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !6558
  %5 = load %struct.clusterLink*, %struct.clusterLink** %4, align 8, !dbg !6558, !tbaa !1153
  %6 = icmp eq %struct.clusterLink* %5, null, !dbg !6559
  br i1 %6, label %11, label %7, !dbg !6560

; <label>:7:                                      ; preds = %1
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %2, i32 6) #12, !dbg !6562
  %8 = call i32 @lwip_htonl(i32 2256) #8, !dbg !6564
  %9 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 1, !dbg !6565
  store i32 %8, i32* %9, align 4, !dbg !6566, !tbaa !2627
  %10 = load %struct.clusterLink*, %struct.clusterLink** %4, align 8, !dbg !6567, !tbaa !1153
  call void @clusterSendMessage(%struct.clusterLink* %10, i8* nonnull %3, i64 2256) #12, !dbg !6568
  br label %11, !dbg !6569

; <label>:11:                                     ; preds = %1, %7
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %3) #9, !dbg !6569
  ret void, !dbg !6569
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendMFStart(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !6570 {
  %2 = alloca %struct.clusterMsg, align 16
  %3 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 0, i64 0, !dbg !6577
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %3) #9, !dbg !6577
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !6579
  %5 = load %struct.clusterLink*, %struct.clusterLink** %4, align 8, !dbg !6579, !tbaa !1153
  %6 = icmp eq %struct.clusterLink* %5, null, !dbg !6581
  br i1 %6, label %11, label %7, !dbg !6582

; <label>:7:                                      ; preds = %1
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %2, i32 8) #12, !dbg !6584
  %8 = call i32 @lwip_htonl(i32 2256) #8, !dbg !6586
  %9 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 1, !dbg !6587
  store i32 %8, i32* %9, align 4, !dbg !6588, !tbaa !2627
  %10 = load %struct.clusterLink*, %struct.clusterLink** %4, align 8, !dbg !6589, !tbaa !1153
  call void @clusterSendMessage(%struct.clusterLink* %10, i8* nonnull %3, i64 2256) #12, !dbg !6590
  br label %11, !dbg !6591

; <label>:11:                                     ; preds = %1, %7
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %3) #9, !dbg !6591
  ret void, !dbg !6591
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterGetSlaveRank() local_unnamed_addr #0 !dbg !6592 {
  %1 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6599, !tbaa !757
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 2, !dbg !6599
  %3 = load i32, i32* %2, align 8, !dbg !6599, !tbaa !918
  %4 = and i32 %3, 2, !dbg !6599
  %5 = icmp eq i32 %4, 0, !dbg !6599
  br i1 %5, label %6, label %7, !dbg !6599

; <label>:6:                                      ; preds = %0
  tail call void @_serverAssert(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 2827) #8, !dbg !6599
  tail call void @_exit(i32 1) #10, !dbg !6599
  unreachable, !dbg !6599

; <label>:7:                                      ; preds = %0
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 8, !dbg !6600
  %9 = load %struct.clusterNode*, %struct.clusterNode** %8, align 8, !dbg !6600, !tbaa !1012
  %10 = icmp eq %struct.clusterNode* %9, null, !dbg !6602
  br i1 %10, label %69, label %11, !dbg !6604

; <label>:11:                                     ; preds = %7
  %12 = tail call i64 @replicationGetSlaveOffset() #8, !dbg !6605
  %13 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %9, i64 0, i32 6, !dbg !6608
  %14 = load i32, i32* %13, align 4, !dbg !6608, !tbaa !1027
  %15 = icmp sgt i32 %14, 0, !dbg !6611
  br i1 %15, label %16, label %69, !dbg !6612

; <label>:16:                                     ; preds = %11
  %17 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %9, i64 0, i32 7
  %18 = load %struct.clusterNode**, %struct.clusterNode*** %17, align 8, !tbaa !1030
  %19 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !tbaa !757
  %20 = sext i32 %14 to i64, !dbg !6612
  %21 = and i64 %20, 1, !dbg !6612
  %22 = icmp eq i32 %14, 1, !dbg !6612
  br i1 %22, label %49, label %23, !dbg !6612

; <label>:23:                                     ; preds = %16
  %24 = sub nsw i64 %20, %21, !dbg !6612
  br label %25, !dbg !6612

; <label>:25:                                     ; preds = %82, %23
  %26 = phi i64 [ 0, %23 ], [ %84, %82 ]
  %27 = phi i32 [ 0, %23 ], [ %83, %82 ]
  %28 = phi i64 [ %24, %23 ], [ %85, %82 ]
  %29 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %18, i64 %26, !dbg !6613
  %30 = load %struct.clusterNode*, %struct.clusterNode** %29, align 8, !dbg !6613, !tbaa !757
  %31 = icmp eq %struct.clusterNode* %30, %19, !dbg !6615
  br i1 %31, label %43, label %32, !dbg !6616

; <label>:32:                                     ; preds = %25
  %33 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %30, i64 0, i32 2, !dbg !6617
  %34 = load i32, i32* %33, align 8, !dbg !6617, !tbaa !918
  %35 = and i32 %34, 512, !dbg !6617
  %36 = icmp eq i32 %35, 0, !dbg !6617
  br i1 %36, label %37, label %43, !dbg !6618

; <label>:37:                                     ; preds = %32
  %38 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %30, i64 0, i32 15, !dbg !6619
  %39 = load i64, i64* %38, align 8, !dbg !6619, !tbaa !1175
  %40 = icmp sgt i64 %39, %12, !dbg !6620
  %41 = zext i1 %40 to i32, !dbg !6621
  %42 = add nsw i32 %27, %41, !dbg !6621
  br label %43, !dbg !6621

; <label>:43:                                     ; preds = %37, %32, %25
  %44 = phi i32 [ %27, %32 ], [ %27, %25 ], [ %42, %37 ], !dbg !6622
  %45 = or i64 %26, 1, !dbg !6623
  %46 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %18, i64 %45, !dbg !6613
  %47 = load %struct.clusterNode*, %struct.clusterNode** %46, align 8, !dbg !6613, !tbaa !757
  %48 = icmp eq %struct.clusterNode* %47, %19, !dbg !6615
  br i1 %48, label %82, label %71, !dbg !6616

; <label>:49:                                     ; preds = %82, %16
  %50 = phi i32 [ undef, %16 ], [ %83, %82 ]
  %51 = phi i64 [ 0, %16 ], [ %84, %82 ]
  %52 = phi i32 [ 0, %16 ], [ %83, %82 ]
  %53 = icmp eq i64 %21, 0, !dbg !6616
  br i1 %53, label %69, label %54, !dbg !6616

; <label>:54:                                     ; preds = %49
  %55 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %18, i64 %51, !dbg !6613
  %56 = load %struct.clusterNode*, %struct.clusterNode** %55, align 8, !dbg !6613, !tbaa !757
  %57 = icmp eq %struct.clusterNode* %56, %19, !dbg !6615
  br i1 %57, label %69, label %58, !dbg !6616

; <label>:58:                                     ; preds = %54
  %59 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %56, i64 0, i32 2, !dbg !6617
  %60 = load i32, i32* %59, align 8, !dbg !6617, !tbaa !918
  %61 = and i32 %60, 512, !dbg !6617
  %62 = icmp eq i32 %61, 0, !dbg !6617
  br i1 %62, label %63, label %69, !dbg !6618

; <label>:63:                                     ; preds = %58
  %64 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %56, i64 0, i32 15, !dbg !6619
  %65 = load i64, i64* %64, align 8, !dbg !6619, !tbaa !1175
  %66 = icmp sgt i64 %65, %12, !dbg !6620
  %67 = zext i1 %66 to i32, !dbg !6621
  %68 = add nsw i32 %52, %67, !dbg !6621
  br label %69, !dbg !6621

; <label>:69:                                     ; preds = %49, %54, %58, %63, %11, %7
  %70 = phi i32 [ 0, %7 ], [ 0, %11 ], [ %50, %49 ], [ %52, %58 ], [ %52, %54 ], [ %68, %63 ], !dbg !6622
  ret i32 %70, !dbg !6624

; <label>:71:                                     ; preds = %43
  %72 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %47, i64 0, i32 2, !dbg !6617
  %73 = load i32, i32* %72, align 8, !dbg !6617, !tbaa !918
  %74 = and i32 %73, 512, !dbg !6617
  %75 = icmp eq i32 %74, 0, !dbg !6617
  br i1 %75, label %76, label %82, !dbg !6618

; <label>:76:                                     ; preds = %71
  %77 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %47, i64 0, i32 15, !dbg !6619
  %78 = load i64, i64* %77, align 8, !dbg !6619, !tbaa !1175
  %79 = icmp sgt i64 %78, %12, !dbg !6620
  %80 = zext i1 %79 to i32, !dbg !6621
  %81 = add nsw i32 %44, %80, !dbg !6621
  br label %82, !dbg !6621

; <label>:82:                                     ; preds = %76, %71, %43
  %83 = phi i32 [ %44, %71 ], [ %44, %43 ], [ %81, %76 ], !dbg !6622
  %84 = add nuw nsw i64 %26, 2, !dbg !6623
  %85 = add i64 %28, -2, !dbg !6612
  %86 = icmp eq i64 %85, 0, !dbg !6612
  br i1 %86, label %49, label %25, !dbg !6612, !llvm.loop !6625
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterLogCantFailover(i32) local_unnamed_addr #0 !dbg !281 {
  %2 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !6628, !tbaa !2858
  %3 = add nsw i64 %2, 5000, !dbg !6629
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6631, !tbaa !784
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 16, !dbg !6633
  %6 = load i32, i32* %5, align 8, !dbg !6633, !tbaa !1778
  %7 = icmp eq i32 %6, %0, !dbg !6634
  br i1 %7, label %8, label %16, !dbg !6635

; <label>:8:                                      ; preds = %1
  %9 = tail call i64 @time(i64* null) #8, !dbg !6636
  %10 = load i64, i64* @clusterLogCantFailover.lastlog_time, align 8, !dbg !6637, !tbaa !1500
  %11 = sub nsw i64 %9, %10, !dbg !6638
  %12 = icmp slt i64 %11, 300, !dbg !6639
  br i1 %12, label %46, label %13, !dbg !6640

; <label>:13:                                     ; preds = %8
  %14 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6641, !tbaa !784
  %15 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %14, i64 0, i32 16, !dbg !6642
  br label %16, !dbg !6640

; <label>:16:                                     ; preds = %13, %1
  %17 = phi i32* [ %15, %13 ], [ %5, %1 ], !dbg !6642
  store i32 %0, i32* %17, align 8, !dbg !6643, !tbaa !1778
  %18 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6644, !tbaa !757
  %19 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 8, !dbg !6646
  %20 = load %struct.clusterNode*, %struct.clusterNode** %19, align 8, !dbg !6646, !tbaa !1012
  %21 = icmp eq %struct.clusterNode* %20, null, !dbg !6644
  br i1 %21, label %36, label %22, !dbg !6647

; <label>:22:                                     ; preds = %16
  %23 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %20, i64 0, i32 2, !dbg !6648
  %24 = load i32, i32* %23, align 8, !dbg !6648, !tbaa !918
  %25 = and i32 %24, 8, !dbg !6648
  %26 = icmp eq i32 %25, 0, !dbg !6648
  br i1 %26, label %36, label %27, !dbg !6649

; <label>:27:                                     ; preds = %22
  %28 = tail call i64 @mstime() #8, !dbg !6650
  %29 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6651, !tbaa !757
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %29, i64 0, i32 8, !dbg !6652
  %31 = load %struct.clusterNode*, %struct.clusterNode** %30, align 8, !dbg !6652, !tbaa !1012
  %32 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %31, i64 0, i32 11, !dbg !6653
  %33 = load i64, i64* %32, align 8, !dbg !6653, !tbaa !945
  %34 = sub nsw i64 %28, %33, !dbg !6654
  %35 = icmp slt i64 %34, %3, !dbg !6655
  br i1 %35, label %46, label %36, !dbg !6656

; <label>:36:                                     ; preds = %22, %16, %27
  %37 = add i32 %0, -1, !dbg !6657
  %38 = icmp ult i32 %37, 4, !dbg !6657
  br i1 %38, label %39, label %43, !dbg !6657

; <label>:39:                                     ; preds = %36
  %40 = sext i32 %37 to i64, !dbg !6657
  %41 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table.clusterLogCantFailover, i64 0, i64 %40, !dbg !6657
  %42 = load i8*, i8** %41, align 8, !dbg !6657
  br label %43, !dbg !6657

; <label>:43:                                     ; preds = %36, %39
  %44 = phi i8* [ %42, %39 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.85, i64 0, i64 0), %36 ], !dbg !6658
  %45 = tail call i64 @time(i64* null) #8, !dbg !6661
  store i64 %45, i64* @clusterLogCantFailover.lastlog_time, align 8, !dbg !6662, !tbaa !1500
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.86, i64 0, i64 0), i8* nonnull %44) #8, !dbg !6663
  br label %46, !dbg !6664

; <label>:46:                                     ; preds = %27, %8, %43
  ret void, !dbg !6664
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterFailoverReplaceYourMaster() local_unnamed_addr #0 !dbg !6665 {
  %1 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6669, !tbaa !757
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 8, !dbg !6670
  %3 = load %struct.clusterNode*, %struct.clusterNode** %2, align 8, !dbg !6670, !tbaa !1012
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 2, !dbg !6672
  %5 = load i32, i32* %4, align 8, !dbg !6672, !tbaa !918
  %6 = and i32 %5, 1, !dbg !6672
  %7 = icmp ne i32 %6, 0, !dbg !6672
  %8 = icmp eq %struct.clusterNode* %3, null, !dbg !6674
  %9 = or i1 %8, %7, !dbg !6675
  br i1 %9, label %76, label %10, !dbg !6675

; <label>:10:                                     ; preds = %0
  tail call void @clusterSetNodeAsMaster(%struct.clusterNode* %1) #12, !dbg !6676
  tail call void @replicationUnsetMaster() #8, !dbg !6677
  br label %11, !dbg !6679

; <label>:11:                                     ; preds = %10, %53
  %12 = phi i64 [ 0, %10 ], [ %54, %53 ]
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 3
  %15 = and i64 %14, 8191
  %16 = and i32 %13, 7, !dbg !6691
  %17 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %3, i64 0, i32 4, i64 %15, !dbg !6693
  %18 = load i8, i8* %17, align 1, !dbg !6693, !tbaa !745
  %19 = zext i8 %18 to i32, !dbg !6693
  %20 = shl i32 1, %16, !dbg !6694
  %21 = and i32 %20, %19, !dbg !6695
  %22 = icmp eq i32 %21, 0, !dbg !6696
  br i1 %22, label %53, label %23, !dbg !6697

; <label>:23:                                     ; preds = %11
  %24 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6701, !tbaa !784
  %25 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %24, i64 0, i32 8, i64 %12, !dbg !6702
  %26 = load %struct.clusterNode*, %struct.clusterNode** %25, align 8, !dbg !6702, !tbaa !757
  %27 = icmp eq %struct.clusterNode* %26, null, !dbg !6704
  br i1 %27, label %48, label %28, !dbg !6705

; <label>:28:                                     ; preds = %23
  %29 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 4, i64 %15, !dbg !6714
  %30 = load i8, i8* %29, align 1, !dbg !6714, !tbaa !745
  %31 = zext i8 %30 to i32, !dbg !6714
  %32 = and i32 %20, %31, !dbg !6715
  %33 = icmp eq i32 %32, 0, !dbg !6716
  %34 = trunc i32 %20 to i8, !dbg !6722
  %35 = xor i8 %34, -1, !dbg !6722
  %36 = and i8 %30, %35, !dbg !6722
  store i8 %36, i8* %29, align 1, !dbg !6722, !tbaa !745
  br i1 %33, label %37, label %38, !dbg !6723

; <label>:37:                                     ; preds = %28
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !6724
  tail call void @_exit(i32 1) #10, !dbg !6724
  unreachable, !dbg !6724

; <label>:38:                                     ; preds = %28
  %39 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 5, !dbg !6725
  %40 = load i32, i32* %39, align 8, !dbg !6726, !tbaa !1139
  %41 = add nsw i32 %40, -1, !dbg !6726
  store i32 %41, i32* %39, align 8, !dbg !6726, !tbaa !1139
  %42 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6727, !tbaa !784
  %43 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %42, i64 0, i32 8, i64 %12, !dbg !6728
  store %struct.clusterNode* null, %struct.clusterNode** %43, align 8, !dbg !6729, !tbaa !757
  %44 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6730, !tbaa !784
  %45 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %44, i64 0, i32 8, i64 %12
  %46 = load %struct.clusterNode*, %struct.clusterNode** %45, align 8, !dbg !6732, !tbaa !757
  %47 = icmp eq %struct.clusterNode* %46, null, !dbg !6732
  br i1 %47, label %48, label %53, !dbg !6735

; <label>:48:                                     ; preds = %23, %38
  %49 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6736, !tbaa !757
  %50 = tail call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %49, i32 %13) #8, !dbg !6737
  %51 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6738, !tbaa !784
  %52 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %51, i64 0, i32 8, i64 %12, !dbg !6739
  store %struct.clusterNode* %49, %struct.clusterNode** %52, align 8, !dbg !6740, !tbaa !757
  br label %53, !dbg !6741

; <label>:53:                                     ; preds = %48, %38, %11
  %54 = add nuw nsw i64 %12, 1, !dbg !6742
  %55 = icmp ult i64 %54, 16384, !dbg !6743
  br i1 %55, label %11, label %56, !dbg !6679, !llvm.loop !6744

; <label>:56:                                     ; preds = %53
  tail call void @clusterUpdateState() #12, !dbg !6746
  %57 = tail call i32 @clusterSaveConfig(i32 1) #8, !dbg !6749
  %58 = icmp eq i32 %57, -1, !dbg !6750
  br i1 %58, label %59, label %60, !dbg !6751

; <label>:59:                                     ; preds = %56
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #8, !dbg !6752
  tail call void @exit(i32 1) #10, !dbg !6753
  unreachable, !dbg !6753

; <label>:60:                                     ; preds = %56
  tail call void @clusterBroadcastPong(i32 0) #12, !dbg !6754
  %61 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6755, !tbaa !784
  %62 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %61, i64 0, i32 17, !dbg !6757
  %63 = load i64, i64* %62, align 8, !dbg !6757, !tbaa !1950
  %64 = icmp eq i64 %63, 0, !dbg !6758
  br i1 %64, label %70, label %65, !dbg !6759

; <label>:65:                                     ; preds = %60
  %66 = tail call i32 @clientsArePaused() #8, !dbg !6760
  %67 = icmp eq i32 %66, 0, !dbg !6760
  br i1 %67, label %70, label %68, !dbg !6761

; <label>:68:                                     ; preds = %65
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !6762, !tbaa !2134
  %69 = tail call i32 @clientsArePaused() #8, !dbg !6763
  br label %70, !dbg !6764

; <label>:70:                                     ; preds = %60, %65, %68
  %71 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6765, !tbaa !784
  %72 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %71, i64 0, i32 17, !dbg !6766
  store i64 0, i64* %72, align 8, !dbg !6767, !tbaa !1950
  %73 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %71, i64 0, i32 20, !dbg !6768
  store i32 0, i32* %73, align 8, !dbg !6769, !tbaa !1953
  %74 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %71, i64 0, i32 18, !dbg !6770
  store %struct.clusterNode* null, %struct.clusterNode** %74, align 8, !dbg !6771, !tbaa !1956
  %75 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %71, i64 0, i32 19, !dbg !6772
  store i64 0, i64* %75, align 8, !dbg !6773, !tbaa !1959
  br label %76, !dbg !6774

; <label>:76:                                     ; preds = %0, %70
  ret void, !dbg !6774
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @clusterNodeGetSlotBit(%struct.clusterNode* nocapture readonly, i32) local_unnamed_addr #6 !dbg !4913 {
  %3 = sdiv i32 %1, 8, !dbg !6780
  %4 = sext i32 %3 to i64, !dbg !6781
  %5 = and i32 %1, 7, !dbg !6783
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %4, !dbg !6785
  %7 = load i8, i8* %6, align 1, !dbg !6785, !tbaa !745
  %8 = zext i8 %7 to i32, !dbg !6785
  %9 = shl i32 1, %5, !dbg !6786
  %10 = and i32 %9, %8, !dbg !6787
  %11 = icmp ne i32 %10, 0, !dbg !6788
  %12 = zext i1 %11 to i32, !dbg !6788
  ret i32 %12, !dbg !6789
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterUpdateState() local_unnamed_addr #0 !dbg !408 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6791, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 22, !dbg !6792
  %3 = load i32, i32* %2, align 8, !dbg !6793, !tbaa !1465
  %4 = and i32 %3, -3, !dbg !6793
  store i32 %4, i32* %2, align 8, !dbg !6793, !tbaa !1465
  %5 = load i64, i64* @clusterUpdateState.first_call_time, align 8, !dbg !6794, !tbaa !1148
  %6 = icmp eq i64 %5, 0, !dbg !6796
  br i1 %6, label %7, label %9, !dbg !6797

; <label>:7:                                      ; preds = %0
  %8 = tail call i64 @mstime() #8, !dbg !6798
  store i64 %8, i64* @clusterUpdateState.first_call_time, align 8, !dbg !6799, !tbaa !1148
  br label %9, !dbg !6800

; <label>:9:                                      ; preds = %7, %0
  %10 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6801, !tbaa !757
  %11 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %10, i64 0, i32 2, !dbg !6801
  %12 = load i32, i32* %11, align 8, !dbg !6801, !tbaa !918
  %13 = and i32 %12, 1, !dbg !6801
  %14 = icmp eq i32 %13, 0, !dbg !6801
  br i1 %14, label %25, label %15, !dbg !6803

; <label>:15:                                     ; preds = %9
  %16 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6804, !tbaa !784
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %16, i64 0, i32 2, !dbg !6805
  %18 = load i32, i32* %17, align 8, !dbg !6805, !tbaa !1749
  %19 = icmp eq i32 %18, 1, !dbg !6806
  br i1 %19, label %20, label %25, !dbg !6807

; <label>:20:                                     ; preds = %15
  %21 = tail call i64 @mstime() #8, !dbg !6808
  %22 = load i64, i64* @clusterUpdateState.first_call_time, align 8, !dbg !6809, !tbaa !1148
  %23 = sub nsw i64 %21, %22, !dbg !6810
  %24 = icmp slt i64 %23, 2000, !dbg !6811
  br i1 %24, label %117, label %25, !dbg !6812

; <label>:25:                                     ; preds = %9, %20, %15
  %26 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 264), align 8, !dbg !6814, !tbaa !6816
  %27 = icmp eq i32 %26, 0, !dbg !6817
  %28 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !tbaa !784
  br i1 %27, label %44, label %34, !dbg !6818

; <label>:29:                                     ; preds = %39
  %30 = or i64 %35, 1, !dbg !6819
  %31 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 8, i64 %30, !dbg !6824
  %32 = load %struct.clusterNode*, %struct.clusterNode** %31, align 8, !dbg !6824, !tbaa !757
  %33 = icmp eq %struct.clusterNode* %32, null, !dbg !6827
  br i1 %33, label %44, label %118, !dbg !6828

; <label>:34:                                     ; preds = %25, %124
  %35 = phi i64 [ %123, %124 ], [ 0, %25 ]
  %36 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 8, i64 %35, !dbg !6824
  %37 = load %struct.clusterNode*, %struct.clusterNode** %36, align 8, !dbg !6824, !tbaa !757
  %38 = icmp eq %struct.clusterNode* %37, null, !dbg !6827
  br i1 %38, label %44, label %39, !dbg !6828

; <label>:39:                                     ; preds = %34
  %40 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %37, i64 0, i32 2, !dbg !6829
  %41 = load i32, i32* %40, align 8, !dbg !6829, !tbaa !918
  %42 = and i32 %41, 8, !dbg !6830
  %43 = icmp eq i32 %42, 0, !dbg !6830
  br i1 %43, label %29, label %44, !dbg !6831

; <label>:44:                                     ; preds = %34, %39, %29, %118, %124, %25
  %45 = phi i32 [ 0, %25 ], [ 1, %34 ], [ 1, %39 ], [ 1, %29 ], [ 1, %118 ], [ 0, %124 ], !dbg !6832
  %46 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 3, !dbg !6833
  store i32 0, i32* %46, align 4, !dbg !6834, !tbaa !1752
  %47 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 4, !dbg !6835
  %48 = load %struct.dict*, %struct.dict** %47, align 8, !dbg !6835, !tbaa !832
  %49 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %48) #8, !dbg !6836
  %50 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %49) #8, !dbg !6838
  %51 = icmp eq %struct.dictEntry* %50, null, !dbg !6840
  br i1 %51, label %79, label %52, !dbg !6841

; <label>:52:                                     ; preds = %44, %75
  %53 = phi %struct.dictEntry* [ %77, %75 ], [ %50, %44 ]
  %54 = phi i32 [ %76, %75 ], [ 0, %44 ]
  %55 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %53, i64 0, i32 1, i32 0, !dbg !6842
  %56 = bitcast i8** %55 to %struct.clusterNode**, !dbg !6842
  %57 = load %struct.clusterNode*, %struct.clusterNode** %56, align 8, !dbg !6842, !tbaa !745
  %58 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %57, i64 0, i32 2, !dbg !6844
  %59 = load i32, i32* %58, align 8, !dbg !6844, !tbaa !918
  %60 = and i32 %59, 1, !dbg !6844
  %61 = icmp eq i32 %60, 0, !dbg !6844
  br i1 %61, label %75, label %62, !dbg !6846

; <label>:62:                                     ; preds = %52
  %63 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %57, i64 0, i32 5, !dbg !6847
  %64 = load i32, i32* %63, align 8, !dbg !6847, !tbaa !1139
  %65 = icmp eq i32 %64, 0, !dbg !6848
  br i1 %65, label %75, label %66, !dbg !6849

; <label>:66:                                     ; preds = %62
  %67 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6850, !tbaa !784
  %68 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %67, i64 0, i32 3, !dbg !6852
  %69 = load i32, i32* %68, align 4, !dbg !6853, !tbaa !1752
  %70 = add nsw i32 %69, 1, !dbg !6853
  store i32 %70, i32* %68, align 4, !dbg !6853, !tbaa !1752
  %71 = and i32 %59, 12, !dbg !6854
  %72 = icmp eq i32 %71, 0, !dbg !6856
  %73 = zext i1 %72 to i32, !dbg !6857
  %74 = add nsw i32 %54, %73, !dbg !6857
  br label %75, !dbg !6857

; <label>:75:                                     ; preds = %66, %62, %52
  %76 = phi i32 [ %54, %62 ], [ %54, %52 ], [ %74, %66 ], !dbg !6832
  %77 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %49) #8, !dbg !6838
  %78 = icmp eq %struct.dictEntry* %77, null, !dbg !6840
  br i1 %78, label %79, label %52, !dbg !6841, !llvm.loop !6858

; <label>:79:                                     ; preds = %75, %44
  %80 = phi i32 [ 0, %44 ], [ %76, %75 ], !dbg !6860
  tail call void @dictReleaseIterator(%struct.dictIterator* %49) #8, !dbg !6861
  %81 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6862, !tbaa !784
  %82 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %81, i64 0, i32 3, !dbg !6863
  %83 = load i32, i32* %82, align 4, !dbg !6863, !tbaa !1752
  %84 = sdiv i32 %83, 2, !dbg !6864
  %85 = icmp sgt i32 %80, %84, !dbg !6866
  br i1 %85, label %89, label %86, !dbg !6868

; <label>:86:                                     ; preds = %79
  %87 = tail call i64 @mstime() #8, !dbg !6869
  store i64 %87, i64* @clusterUpdateState.among_minority_time, align 8, !dbg !6871, !tbaa !1148
  %88 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6872, !tbaa !784
  br label %89, !dbg !6873

; <label>:89:                                     ; preds = %79, %86
  %90 = phi %struct.clusterState* [ %88, %86 ], [ %81, %79 ], !dbg !6872
  %91 = phi i32 [ 1, %86 ], [ %45, %79 ], !dbg !6874
  %92 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %90, i64 0, i32 2, !dbg !6876
  %93 = load i32, i32* %92, align 8, !dbg !6876, !tbaa !1749
  %94 = icmp eq i32 %91, %93, !dbg !6877
  br i1 %94, label %117, label %95, !dbg !6878

; <label>:95:                                     ; preds = %89
  %96 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !6879, !tbaa !2858
  %97 = icmp slt i64 %96, 5000, !dbg !6881
  %98 = select i1 %97, i64 %96, i64 5000, !dbg !6881
  %99 = icmp sgt i64 %98, 500, !dbg !6882
  %100 = select i1 %99, i64 %98, i64 500, !dbg !6882
  %101 = icmp eq i32 %91, 0, !dbg !6883
  br i1 %101, label %102, label %113, !dbg !6885

; <label>:102:                                    ; preds = %95
  %103 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6886, !tbaa !757
  %104 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %103, i64 0, i32 2, !dbg !6886
  %105 = load i32, i32* %104, align 8, !dbg !6886, !tbaa !918
  %106 = and i32 %105, 1, !dbg !6886
  %107 = icmp eq i32 %106, 0, !dbg !6886
  br i1 %107, label %113, label %108, !dbg !6887

; <label>:108:                                    ; preds = %102
  %109 = tail call i64 @mstime() #8, !dbg !6888
  %110 = load i64, i64* @clusterUpdateState.among_minority_time, align 8, !dbg !6889, !tbaa !1148
  %111 = sub nsw i64 %109, %110, !dbg !6890
  %112 = icmp slt i64 %111, %100, !dbg !6891
  br i1 %112, label %117, label %113, !dbg !6892

; <label>:113:                                    ; preds = %102, %108, %95
  %114 = select i1 %101, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), !dbg !6893
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.100, i64 0, i64 0), i8* %114) #8, !dbg !6894
  %115 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6895, !tbaa !784
  %116 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %115, i64 0, i32 2, !dbg !6896
  store i32 %91, i32* %116, align 8, !dbg !6897, !tbaa !1749
  br label %117

; <label>:117:                                    ; preds = %89, %113, %108, %20
  ret void, !dbg !6898

; <label>:118:                                    ; preds = %29
  %119 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %32, i64 0, i32 2, !dbg !6829
  %120 = load i32, i32* %119, align 8, !dbg !6829, !tbaa !918
  %121 = and i32 %120, 8, !dbg !6830
  %122 = icmp eq i32 %121, 0, !dbg !6830
  %123 = add nuw nsw i64 %35, 2, !dbg !6819
  br i1 %122, label %124, label %44, !dbg !6831

; <label>:124:                                    ; preds = %118
  %125 = icmp ult i64 %123, 16384, !dbg !6899
  br i1 %125, label %34, label %44, !dbg !6900, !llvm.loop !6901
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterHandleSlaveFailover() local_unnamed_addr #0 !dbg !6903 {
  %1 = tail call i64 @mstime() #8, !dbg !6917
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6918, !tbaa !784
  %3 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 11, !dbg !6919
  %4 = load i64, i64* %3, align 8, !dbg !6919, !tbaa !1766
  %5 = sub nsw i64 %1, %4, !dbg !6920
  %6 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 3, !dbg !6922
  %7 = load i32, i32* %6, align 4, !dbg !6922, !tbaa !1752
  %8 = sdiv i32 %7, 2, !dbg !6923
  %9 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 17, !dbg !6925
  %10 = load i64, i64* %9, align 8, !dbg !6925, !tbaa !1950
  %11 = icmp eq i64 %10, 0, !dbg !6926
  br i1 %11, label %16, label %12, !dbg !6927

; <label>:12:                                     ; preds = %0
  %13 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 20, !dbg !6928
  %14 = load i32, i32* %13, align 8, !dbg !6928, !tbaa !1953
  %15 = icmp ne i32 %14, 0, !dbg !6927
  br label %16

; <label>:16:                                     ; preds = %0, %12
  %17 = phi i1 [ false, %0 ], [ %15, %12 ], !dbg !6929
  %18 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 22, !dbg !6930
  %19 = load i32, i32* %18, align 8, !dbg !6931, !tbaa !1465
  %20 = and i32 %19, -2, !dbg !6931
  store i32 %20, i32* %18, align 8, !dbg !6931, !tbaa !1465
  %21 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !6932, !tbaa !2858
  %22 = shl nsw i64 %21, 1, !dbg !6933
  %23 = icmp sgt i64 %22, 2000, !dbg !6935
  %24 = select i1 %23, i64 %22, i64 2000, !dbg !6935
  %25 = shl nuw nsw i64 %24, 1, !dbg !6936
  %26 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6938, !tbaa !757
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 2, !dbg !6938
  %28 = load i32, i32* %27, align 8, !dbg !6938, !tbaa !918
  %29 = and i32 %28, 1, !dbg !6938
  %30 = icmp eq i32 %29, 0, !dbg !6938
  br i1 %30, label %31, label %49, !dbg !6940

; <label>:31:                                     ; preds = %16
  %32 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 8, !dbg !6941
  %33 = load %struct.clusterNode*, %struct.clusterNode** %32, align 8, !dbg !6941, !tbaa !1012
  %34 = icmp eq %struct.clusterNode* %33, null, !dbg !6942
  br i1 %34, label %49, label %35, !dbg !6943

; <label>:35:                                     ; preds = %31
  %36 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %33, i64 0, i32 2, !dbg !6944
  %37 = load i32, i32* %36, align 8, !dbg !6944, !tbaa !918
  %38 = and i32 %37, 8, !dbg !6944
  %39 = icmp ne i32 %38, 0, !dbg !6944
  %40 = or i1 %17, %39, !dbg !6945
  br i1 %40, label %41, label %49, !dbg !6945

; <label>:41:                                     ; preds = %35
  %42 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 265), align 4, !dbg !6946, !tbaa !1708
  %43 = icmp eq i32 %42, 0, !dbg !6947
  %44 = or i1 %17, %43, !dbg !6948
  br i1 %44, label %45, label %49, !dbg !6948

; <label>:45:                                     ; preds = %41
  %46 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %33, i64 0, i32 5, !dbg !6949
  %47 = load i32, i32* %46, align 8, !dbg !6949, !tbaa !1139
  %48 = icmp eq i32 %47, 0, !dbg !6950
  br i1 %48, label %49, label %51, !dbg !6951

; <label>:49:                                     ; preds = %16, %41, %35, %45, %31
  %50 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 16, !dbg !6952
  store i32 0, i32* %50, align 8, !dbg !6954, !tbaa !1778
  br label %304, !dbg !6955

; <label>:51:                                     ; preds = %45
  %52 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !6956, !tbaa !6958
  %53 = icmp eq i32 %52, 15, !dbg !6959
  %54 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !6960, !tbaa !3243
  %55 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199), align 8, !dbg !6962
  %56 = getelementptr inbounds %struct.client, %struct.client* %55, i64 0, i32 19, !dbg !6964
  %57 = select i1 %53, i64* %56, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 213), !dbg !6965
  %58 = load i64, i64* %57, align 8, !dbg !6960, !tbaa !1500
  %59 = sub nsw i64 %54, %58, !dbg !6960
  %60 = mul nsw i64 %59, 1000, !dbg !6960
  %61 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 263), align 4, !dbg !6967, !tbaa !6969
  %62 = icmp eq i32 %61, 0, !dbg !6970
  br i1 %62, label %76, label %63, !dbg !6971

; <label>:63:                                     ; preds = %51
  %64 = icmp sgt i64 %60, %21, !dbg !6972
  %65 = select i1 %64, i64 %21, i64 0, !dbg !6974
  %66 = sub nsw i64 %60, %65, !dbg !6974
  %67 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 182), align 4, !dbg !6975, !tbaa !6976
  %68 = sext i32 %67 to i64, !dbg !6977
  %69 = mul nsw i64 %68, 1000, !dbg !6978
  %70 = sext i32 %61 to i64, !dbg !6979
  %71 = mul nsw i64 %21, %70, !dbg !6980
  %72 = add nsw i64 %69, %71, !dbg !6981
  %73 = icmp sle i64 %66, %72, !dbg !6982
  %74 = or i1 %17, %73, !dbg !6983
  br i1 %74, label %76, label %75, !dbg !6983

; <label>:75:                                     ; preds = %63
  tail call void @clusterLogCantFailover(i32 1) #12, !dbg !6984
  br label %304, !dbg !6988

; <label>:76:                                     ; preds = %51, %63
  %77 = icmp sgt i64 %5, %25, !dbg !6989
  br i1 %77, label %78, label %184, !dbg !6991

; <label>:78:                                     ; preds = %76
  %79 = tail call i64 @mstime() #8, !dbg !6992
  %80 = add nsw i64 %79, 500, !dbg !6994
  %81 = tail call i64 @random() #8, !dbg !6995
  %82 = srem i64 %81, 500, !dbg !6996
  %83 = add nsw i64 %80, %82, !dbg !6997
  %84 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6998, !tbaa !784
  %85 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %84, i64 0, i32 11, !dbg !6999
  store i64 %83, i64* %85, align 8, !dbg !7000, !tbaa !1766
  %86 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %84, i64 0, i32 12, !dbg !7001
  store i32 0, i32* %86, align 8, !dbg !7002, !tbaa !1769
  %87 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %84, i64 0, i32 13, !dbg !7003
  store i32 0, i32* %87, align 4, !dbg !7004, !tbaa !7005
  %88 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7008, !tbaa !757
  %89 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %88, i64 0, i32 2, !dbg !7008
  %90 = load i32, i32* %89, align 8, !dbg !7008, !tbaa !918
  %91 = and i32 %90, 2, !dbg !7008
  %92 = icmp eq i32 %91, 0, !dbg !7008
  br i1 %92, label %93, label %94, !dbg !7008

; <label>:93:                                     ; preds = %78
  tail call void @_serverAssert(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 2827) #8, !dbg !7008
  tail call void @_exit(i32 1) #10, !dbg !7008
  unreachable, !dbg !7008

; <label>:94:                                     ; preds = %78
  %95 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %88, i64 0, i32 8, !dbg !7009
  %96 = load %struct.clusterNode*, %struct.clusterNode** %95, align 8, !dbg !7009, !tbaa !1012
  %97 = icmp eq %struct.clusterNode* %96, null, !dbg !7011
  br i1 %97, label %156, label %98, !dbg !7012

; <label>:98:                                     ; preds = %94
  %99 = tail call i64 @replicationGetSlaveOffset() #8, !dbg !7013
  %100 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %96, i64 0, i32 6, !dbg !7016
  %101 = load i32, i32* %100, align 4, !dbg !7016, !tbaa !1027
  %102 = icmp sgt i32 %101, 0, !dbg !7017
  br i1 %102, label %103, label %156, !dbg !7018

; <label>:103:                                    ; preds = %98
  %104 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %96, i64 0, i32 7
  %105 = load %struct.clusterNode**, %struct.clusterNode*** %104, align 8, !tbaa !1030
  %106 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !tbaa !757
  %107 = sext i32 %101 to i64, !dbg !7018
  %108 = and i64 %107, 1, !dbg !7018
  %109 = icmp eq i32 %101, 1, !dbg !7018
  br i1 %109, label %136, label %110, !dbg !7018

; <label>:110:                                    ; preds = %103
  %111 = sub nsw i64 %107, %108, !dbg !7018
  br label %112, !dbg !7018

; <label>:112:                                    ; preds = %316, %110
  %113 = phi i64 [ 0, %110 ], [ %318, %316 ]
  %114 = phi i32 [ 0, %110 ], [ %317, %316 ]
  %115 = phi i64 [ %111, %110 ], [ %319, %316 ]
  %116 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %105, i64 %113, !dbg !7019
  %117 = load %struct.clusterNode*, %struct.clusterNode** %116, align 8, !dbg !7019, !tbaa !757
  %118 = icmp eq %struct.clusterNode* %117, %106, !dbg !7020
  br i1 %118, label %130, label %119, !dbg !7021

; <label>:119:                                    ; preds = %112
  %120 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %117, i64 0, i32 2, !dbg !7022
  %121 = load i32, i32* %120, align 8, !dbg !7022, !tbaa !918
  %122 = and i32 %121, 512, !dbg !7022
  %123 = icmp eq i32 %122, 0, !dbg !7022
  br i1 %123, label %124, label %130, !dbg !7023

; <label>:124:                                    ; preds = %119
  %125 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %117, i64 0, i32 15, !dbg !7024
  %126 = load i64, i64* %125, align 8, !dbg !7024, !tbaa !1175
  %127 = icmp sgt i64 %126, %99, !dbg !7025
  %128 = zext i1 %127 to i32, !dbg !7026
  %129 = add nsw i32 %114, %128, !dbg !7026
  br label %130, !dbg !7026

; <label>:130:                                    ; preds = %124, %119, %112
  %131 = phi i32 [ %114, %119 ], [ %114, %112 ], [ %129, %124 ], !dbg !7027
  %132 = or i64 %113, 1, !dbg !7028
  %133 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %105, i64 %132, !dbg !7019
  %134 = load %struct.clusterNode*, %struct.clusterNode** %133, align 8, !dbg !7019, !tbaa !757
  %135 = icmp eq %struct.clusterNode* %134, %106, !dbg !7020
  br i1 %135, label %316, label %305, !dbg !7021

; <label>:136:                                    ; preds = %316, %103
  %137 = phi i32 [ undef, %103 ], [ %317, %316 ]
  %138 = phi i64 [ 0, %103 ], [ %318, %316 ]
  %139 = phi i32 [ 0, %103 ], [ %317, %316 ]
  %140 = icmp eq i64 %108, 0, !dbg !7021
  br i1 %140, label %156, label %141, !dbg !7021

; <label>:141:                                    ; preds = %136
  %142 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %105, i64 %138, !dbg !7019
  %143 = load %struct.clusterNode*, %struct.clusterNode** %142, align 8, !dbg !7019, !tbaa !757
  %144 = icmp eq %struct.clusterNode* %143, %106, !dbg !7020
  br i1 %144, label %156, label %145, !dbg !7021

; <label>:145:                                    ; preds = %141
  %146 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %143, i64 0, i32 2, !dbg !7022
  %147 = load i32, i32* %146, align 8, !dbg !7022, !tbaa !918
  %148 = and i32 %147, 512, !dbg !7022
  %149 = icmp eq i32 %148, 0, !dbg !7022
  br i1 %149, label %150, label %156, !dbg !7023

; <label>:150:                                    ; preds = %145
  %151 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %143, i64 0, i32 15, !dbg !7024
  %152 = load i64, i64* %151, align 8, !dbg !7024, !tbaa !1175
  %153 = icmp sgt i64 %152, %99, !dbg !7025
  %154 = zext i1 %153 to i32, !dbg !7026
  %155 = add nsw i32 %139, %154, !dbg !7026
  br label %156, !dbg !7026

; <label>:156:                                    ; preds = %136, %141, %145, %150, %94, %98
  %157 = phi i32 [ 0, %94 ], [ 0, %98 ], [ %137, %136 ], [ %139, %145 ], [ %139, %141 ], [ %155, %150 ], !dbg !7027
  %158 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7029, !tbaa !784
  %159 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %158, i64 0, i32 14, !dbg !7030
  store i32 %157, i32* %159, align 8, !dbg !7031, !tbaa !1772
  %160 = mul nsw i32 %157, 1000, !dbg !7032
  %161 = sext i32 %160 to i64, !dbg !7033
  %162 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %158, i64 0, i32 11, !dbg !7034
  %163 = load i64, i64* %162, align 8, !dbg !7035, !tbaa !1766
  %164 = add nsw i64 %163, %161, !dbg !7035
  store i64 %164, i64* %162, align 8, !dbg !7035, !tbaa !1766
  %165 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %158, i64 0, i32 17, !dbg !7036
  %166 = load i64, i64* %165, align 8, !dbg !7036, !tbaa !1950
  %167 = icmp eq i64 %166, 0, !dbg !7038
  br i1 %167, label %176, label %168, !dbg !7039

; <label>:168:                                    ; preds = %156
  %169 = tail call i64 @mstime() #8, !dbg !7040
  %170 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7042, !tbaa !784
  %171 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %170, i64 0, i32 11, !dbg !7043
  store i64 %169, i64* %171, align 8, !dbg !7044, !tbaa !1766
  %172 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %170, i64 0, i32 14, !dbg !7045
  store i32 0, i32* %172, align 8, !dbg !7046, !tbaa !1772
  %173 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %170, i64 0, i32 22, !dbg !7049
  %174 = load i32, i32* %173, align 8, !dbg !7050, !tbaa !1465
  %175 = or i32 %174, 1, !dbg !7050
  store i32 %175, i32* %173, align 8, !dbg !7050, !tbaa !1465
  br label %176, !dbg !7051

; <label>:176:                                    ; preds = %156, %168
  %177 = phi i64 [ %164, %156 ], [ %169, %168 ], !dbg !7052
  %178 = tail call i64 @mstime() #8, !dbg !7053
  %179 = sub nsw i64 %177, %178, !dbg !7054
  %180 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7055, !tbaa !784
  %181 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %180, i64 0, i32 14, !dbg !7056
  %182 = load i32, i32* %181, align 8, !dbg !7056, !tbaa !1772
  %183 = tail call i64 @replicationGetSlaveOffset() #8, !dbg !7057
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.87, i64 0, i64 0), i64 %179, i32 %182, i64 %183) #8, !dbg !7058
  tail call void @clusterBroadcastPong(i32 1) #12, !dbg !7059
  br label %304, !dbg !7060

; <label>:184:                                    ; preds = %76
  %185 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 13, !dbg !7061
  %186 = load i32, i32* %185, align 4, !dbg !7061, !tbaa !7005
  %187 = icmp ne i32 %186, 0, !dbg !7062
  %188 = xor i1 %11, true, !dbg !7063
  %189 = or i1 %187, %188, !dbg !7063
  br i1 %189, label %265, label %190, !dbg !7063

; <label>:190:                                    ; preds = %184
  %191 = and i32 %28, 2, !dbg !7066
  %192 = icmp eq i32 %191, 0, !dbg !7066
  br i1 %192, label %193, label %194, !dbg !7066

; <label>:193:                                    ; preds = %190
  tail call void @_serverAssert(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 2827) #8, !dbg !7066
  tail call void @_exit(i32 1) #10, !dbg !7066
  unreachable, !dbg !7066

; <label>:194:                                    ; preds = %190
  %195 = tail call i64 @replicationGetSlaveOffset() #8, !dbg !7068
  %196 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %33, i64 0, i32 6, !dbg !7071
  %197 = load i32, i32* %196, align 4, !dbg !7071, !tbaa !1027
  %198 = icmp sgt i32 %197, 0, !dbg !7072
  br i1 %198, label %199, label %252, !dbg !7073

; <label>:199:                                    ; preds = %194
  %200 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %33, i64 0, i32 7
  %201 = load %struct.clusterNode**, %struct.clusterNode*** %200, align 8, !tbaa !1030
  %202 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !tbaa !757
  %203 = sext i32 %197 to i64, !dbg !7073
  %204 = and i64 %203, 1, !dbg !7073
  %205 = icmp eq i32 %197, 1, !dbg !7073
  br i1 %205, label %232, label %206, !dbg !7073

; <label>:206:                                    ; preds = %199
  %207 = sub nsw i64 %203, %204, !dbg !7073
  br label %208, !dbg !7073

; <label>:208:                                    ; preds = %332, %206
  %209 = phi i64 [ 0, %206 ], [ %334, %332 ]
  %210 = phi i32 [ 0, %206 ], [ %333, %332 ]
  %211 = phi i64 [ %207, %206 ], [ %335, %332 ]
  %212 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %201, i64 %209, !dbg !7074
  %213 = load %struct.clusterNode*, %struct.clusterNode** %212, align 8, !dbg !7074, !tbaa !757
  %214 = icmp eq %struct.clusterNode* %213, %202, !dbg !7075
  br i1 %214, label %226, label %215, !dbg !7076

; <label>:215:                                    ; preds = %208
  %216 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %213, i64 0, i32 2, !dbg !7077
  %217 = load i32, i32* %216, align 8, !dbg !7077, !tbaa !918
  %218 = and i32 %217, 512, !dbg !7077
  %219 = icmp eq i32 %218, 0, !dbg !7077
  br i1 %219, label %220, label %226, !dbg !7078

; <label>:220:                                    ; preds = %215
  %221 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %213, i64 0, i32 15, !dbg !7079
  %222 = load i64, i64* %221, align 8, !dbg !7079, !tbaa !1175
  %223 = icmp sgt i64 %222, %195, !dbg !7080
  %224 = zext i1 %223 to i32, !dbg !7081
  %225 = add nsw i32 %210, %224, !dbg !7081
  br label %226, !dbg !7081

; <label>:226:                                    ; preds = %220, %215, %208
  %227 = phi i32 [ %210, %215 ], [ %210, %208 ], [ %225, %220 ], !dbg !7082
  %228 = or i64 %209, 1, !dbg !7083
  %229 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %201, i64 %228, !dbg !7074
  %230 = load %struct.clusterNode*, %struct.clusterNode** %229, align 8, !dbg !7074, !tbaa !757
  %231 = icmp eq %struct.clusterNode* %230, %202, !dbg !7075
  br i1 %231, label %332, label %321, !dbg !7076

; <label>:232:                                    ; preds = %332, %199
  %233 = phi i32 [ undef, %199 ], [ %333, %332 ]
  %234 = phi i64 [ 0, %199 ], [ %334, %332 ]
  %235 = phi i32 [ 0, %199 ], [ %333, %332 ]
  %236 = icmp eq i64 %204, 0, !dbg !7076
  br i1 %236, label %252, label %237, !dbg !7076

; <label>:237:                                    ; preds = %232
  %238 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %201, i64 %234, !dbg !7074
  %239 = load %struct.clusterNode*, %struct.clusterNode** %238, align 8, !dbg !7074, !tbaa !757
  %240 = icmp eq %struct.clusterNode* %239, %202, !dbg !7075
  br i1 %240, label %252, label %241, !dbg !7076

; <label>:241:                                    ; preds = %237
  %242 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %239, i64 0, i32 2, !dbg !7077
  %243 = load i32, i32* %242, align 8, !dbg !7077, !tbaa !918
  %244 = and i32 %243, 512, !dbg !7077
  %245 = icmp eq i32 %244, 0, !dbg !7077
  br i1 %245, label %246, label %252, !dbg !7078

; <label>:246:                                    ; preds = %241
  %247 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %239, i64 0, i32 15, !dbg !7079
  %248 = load i64, i64* %247, align 8, !dbg !7079, !tbaa !1175
  %249 = icmp sgt i64 %248, %195, !dbg !7080
  %250 = zext i1 %249 to i32, !dbg !7081
  %251 = add nsw i32 %235, %250, !dbg !7081
  br label %252, !dbg !7081

; <label>:252:                                    ; preds = %232, %237, %241, %246, %194
  %253 = phi i32 [ 0, %194 ], [ %233, %232 ], [ %235, %241 ], [ %235, %237 ], [ %251, %246 ], !dbg !7082
  %254 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7085, !tbaa !784
  %255 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %254, i64 0, i32 14, !dbg !7086
  %256 = load i32, i32* %255, align 8, !dbg !7086, !tbaa !1772
  %257 = icmp sgt i32 %253, %256, !dbg !7087
  br i1 %257, label %258, label %265, !dbg !7088

; <label>:258:                                    ; preds = %252
  %259 = sub nsw i32 %253, %256, !dbg !7089
  %260 = mul nsw i32 %259, 1000, !dbg !7090
  %261 = sext i32 %260 to i64, !dbg !7091
  %262 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %254, i64 0, i32 11, !dbg !7093
  %263 = load i64, i64* %262, align 8, !dbg !7094, !tbaa !1766
  %264 = add nsw i64 %263, %261, !dbg !7094
  store i64 %264, i64* %262, align 8, !dbg !7094, !tbaa !1766
  store i32 %253, i32* %255, align 8, !dbg !7095, !tbaa !1772
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.88, i64 0, i64 0), i32 %253, i64 %261) #8, !dbg !7096
  br label %265, !dbg !7097

; <label>:265:                                    ; preds = %184, %252, %258
  %266 = tail call i64 @mstime() #8, !dbg !7098
  %267 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7100, !tbaa !784
  %268 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %267, i64 0, i32 11, !dbg !7101
  %269 = load i64, i64* %268, align 8, !dbg !7101, !tbaa !1766
  %270 = icmp slt i64 %266, %269, !dbg !7102
  br i1 %270, label %271, label %272, !dbg !7103

; <label>:271:                                    ; preds = %265
  tail call void @clusterLogCantFailover(i32 2) #12, !dbg !7104
  br label %304, !dbg !7106

; <label>:272:                                    ; preds = %265
  %273 = icmp sgt i64 %5, %24, !dbg !7107
  br i1 %273, label %274, label %275, !dbg !7109

; <label>:274:                                    ; preds = %272
  tail call void @clusterLogCantFailover(i32 3) #12, !dbg !7110
  br label %304, !dbg !7112

; <label>:275:                                    ; preds = %272
  %276 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %267, i64 0, i32 13, !dbg !7113
  %277 = load i32, i32* %276, align 4, !dbg !7113, !tbaa !7005
  %278 = icmp eq i32 %277, 0, !dbg !7115
  br i1 %278, label %279, label %289, !dbg !7116

; <label>:279:                                    ; preds = %275
  %280 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %267, i64 0, i32 1, !dbg !7117
  %281 = load i64, i64* %280, align 8, !dbg !7119, !tbaa !793
  %282 = add i64 %281, 1, !dbg !7119
  store i64 %282, i64* %280, align 8, !dbg !7119, !tbaa !793
  %283 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %267, i64 0, i32 15, !dbg !7120
  store i64 %282, i64* %283, align 8, !dbg !7121, !tbaa !1775
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.89, i64 0, i64 0), i64 %282) #8, !dbg !7122
  tail call void @clusterRequestFailoverAuth() #12, !dbg !7123
  %284 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7124, !tbaa !784
  %285 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %284, i64 0, i32 13, !dbg !7125
  store i32 1, i32* %285, align 4, !dbg !7126, !tbaa !7005
  %286 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %284, i64 0, i32 22, !dbg !7129
  %287 = load i32, i32* %286, align 8, !dbg !7130, !tbaa !1465
  %288 = or i32 %287, 14, !dbg !7130
  store i32 %288, i32* %286, align 8, !dbg !7130, !tbaa !1465
  br label %304, !dbg !7131

; <label>:289:                                    ; preds = %275
  %290 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %267, i64 0, i32 12, !dbg !7132
  %291 = load i32, i32* %290, align 8, !dbg !7132, !tbaa !1769
  %292 = icmp sgt i32 %291, %8, !dbg !7134
  br i1 %292, label %293, label %303, !dbg !7135

; <label>:293:                                    ; preds = %289
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.90, i64 0, i64 0)) #8, !dbg !7136
  %294 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7138, !tbaa !757
  %295 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %294, i64 0, i32 3, !dbg !7140
  %296 = load i64, i64* %295, align 8, !dbg !7140, !tbaa !1075
  %297 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7141, !tbaa !784
  %298 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %297, i64 0, i32 15, !dbg !7142
  %299 = load i64, i64* %298, align 8, !dbg !7142, !tbaa !1775
  %300 = icmp ult i64 %296, %299, !dbg !7143
  br i1 %300, label %301, label %302, !dbg !7144

; <label>:301:                                    ; preds = %293
  store i64 %299, i64* %295, align 8, !dbg !7145, !tbaa !1075
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.91, i64 0, i64 0), i64 %299) #8, !dbg !7147
  br label %302, !dbg !7148

; <label>:302:                                    ; preds = %301, %293
  tail call void @clusterFailoverReplaceYourMaster() #12, !dbg !7149
  br label %304, !dbg !7150

; <label>:303:                                    ; preds = %289
  tail call void @clusterLogCantFailover(i32 4) #12, !dbg !7151
  br label %304

; <label>:304:                                    ; preds = %302, %303, %279, %274, %271, %176, %75, %49
  ret void, !dbg !7153

; <label>:305:                                    ; preds = %130
  %306 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %134, i64 0, i32 2, !dbg !7022
  %307 = load i32, i32* %306, align 8, !dbg !7022, !tbaa !918
  %308 = and i32 %307, 512, !dbg !7022
  %309 = icmp eq i32 %308, 0, !dbg !7022
  br i1 %309, label %310, label %316, !dbg !7023

; <label>:310:                                    ; preds = %305
  %311 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %134, i64 0, i32 15, !dbg !7024
  %312 = load i64, i64* %311, align 8, !dbg !7024, !tbaa !1175
  %313 = icmp sgt i64 %312, %99, !dbg !7025
  %314 = zext i1 %313 to i32, !dbg !7026
  %315 = add nsw i32 %131, %314, !dbg !7026
  br label %316, !dbg !7026

; <label>:316:                                    ; preds = %310, %305, %130
  %317 = phi i32 [ %131, %305 ], [ %131, %130 ], [ %315, %310 ], !dbg !7027
  %318 = add nuw nsw i64 %113, 2, !dbg !7028
  %319 = add i64 %115, -2, !dbg !7018
  %320 = icmp eq i64 %319, 0, !dbg !7018
  br i1 %320, label %136, label %112, !dbg !7018, !llvm.loop !6625

; <label>:321:                                    ; preds = %226
  %322 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %230, i64 0, i32 2, !dbg !7077
  %323 = load i32, i32* %322, align 8, !dbg !7077, !tbaa !918
  %324 = and i32 %323, 512, !dbg !7077
  %325 = icmp eq i32 %324, 0, !dbg !7077
  br i1 %325, label %326, label %332, !dbg !7078

; <label>:326:                                    ; preds = %321
  %327 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %230, i64 0, i32 15, !dbg !7079
  %328 = load i64, i64* %327, align 8, !dbg !7079, !tbaa !1175
  %329 = icmp sgt i64 %328, %195, !dbg !7080
  %330 = zext i1 %329 to i32, !dbg !7081
  %331 = add nsw i32 %227, %330, !dbg !7081
  br label %332, !dbg !7081

; <label>:332:                                    ; preds = %326, %321, %226
  %333 = phi i32 [ %227, %321 ], [ %227, %226 ], [ %331, %326 ], !dbg !7082
  %334 = add nuw nsw i64 %209, 2, !dbg !7083
  %335 = add i64 %211, -2, !dbg !7073
  %336 = icmp eq i64 %335, 0, !dbg !7073
  br i1 %336, label %232, label %208, !dbg !7073, !llvm.loop !6625
}

; Function Attrs: noredzone
declare dso_local i64 @random() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterHandleSlaveMigration(i32) local_unnamed_addr #0 !dbg !7154 {
  %2 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7170, !tbaa !757
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 8, !dbg !7171
  %4 = load %struct.clusterNode*, %struct.clusterNode** %3, align 8, !dbg !7171, !tbaa !1012
  %5 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7175, !tbaa !784
  %6 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %5, i64 0, i32 2, !dbg !7177
  %7 = load i32, i32* %6, align 8, !dbg !7177, !tbaa !1749
  %8 = icmp ne i32 %7, 0, !dbg !7178
  %9 = icmp eq %struct.clusterNode* %4, null, !dbg !7179
  %10 = or i1 %9, %8, !dbg !7181
  br i1 %10, label %235, label %11, !dbg !7181

; <label>:11:                                     ; preds = %1
  %12 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 6, !dbg !7183
  %13 = load i32, i32* %12, align 4, !dbg !7183, !tbaa !1027
  %14 = icmp sgt i32 %13, 0, !dbg !7186
  br i1 %14, label %15, label %86, !dbg !7187

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 7
  %17 = load %struct.clusterNode**, %struct.clusterNode*** %16, align 8, !tbaa !1030
  %18 = sext i32 %13 to i64, !dbg !7187
  %19 = add nsw i64 %18, -1, !dbg !7187
  %20 = and i64 %18, 3, !dbg !7187
  %21 = icmp ult i64 %19, 3, !dbg !7187
  br i1 %21, label %66, label %22, !dbg !7187

; <label>:22:                                     ; preds = %15
  %23 = sub nsw i64 %18, %20, !dbg !7187
  br label %24, !dbg !7187

; <label>:24:                                     ; preds = %24, %22
  %25 = phi i64 [ 0, %22 ], [ %63, %24 ]
  %26 = phi i32 [ 0, %22 ], [ %62, %24 ]
  %27 = phi i64 [ %23, %22 ], [ %64, %24 ]
  %28 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %17, i64 %25, !dbg !7188
  %29 = load %struct.clusterNode*, %struct.clusterNode** %28, align 8, !dbg !7188, !tbaa !757
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %29, i64 0, i32 2, !dbg !7188
  %31 = load i32, i32* %30, align 8, !dbg !7188, !tbaa !918
  %32 = and i32 %31, 12, !dbg !7190
  %33 = icmp eq i32 %32, 0, !dbg !7190
  %34 = zext i1 %33 to i32, !dbg !7190
  %35 = add nuw nsw i32 %26, %34, !dbg !7190
  %36 = or i64 %25, 1, !dbg !7191
  %37 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %17, i64 %36, !dbg !7188
  %38 = load %struct.clusterNode*, %struct.clusterNode** %37, align 8, !dbg !7188, !tbaa !757
  %39 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %38, i64 0, i32 2, !dbg !7188
  %40 = load i32, i32* %39, align 8, !dbg !7188, !tbaa !918
  %41 = and i32 %40, 12, !dbg !7190
  %42 = icmp eq i32 %41, 0, !dbg !7190
  %43 = zext i1 %42 to i32, !dbg !7190
  %44 = add nuw nsw i32 %35, %43, !dbg !7190
  %45 = or i64 %25, 2, !dbg !7191
  %46 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %17, i64 %45, !dbg !7188
  %47 = load %struct.clusterNode*, %struct.clusterNode** %46, align 8, !dbg !7188, !tbaa !757
  %48 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %47, i64 0, i32 2, !dbg !7188
  %49 = load i32, i32* %48, align 8, !dbg !7188, !tbaa !918
  %50 = and i32 %49, 12, !dbg !7190
  %51 = icmp eq i32 %50, 0, !dbg !7190
  %52 = zext i1 %51 to i32, !dbg !7190
  %53 = add nuw nsw i32 %44, %52, !dbg !7190
  %54 = or i64 %25, 3, !dbg !7191
  %55 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %17, i64 %54, !dbg !7188
  %56 = load %struct.clusterNode*, %struct.clusterNode** %55, align 8, !dbg !7188, !tbaa !757
  %57 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %56, i64 0, i32 2, !dbg !7188
  %58 = load i32, i32* %57, align 8, !dbg !7188, !tbaa !918
  %59 = and i32 %58, 12, !dbg !7190
  %60 = icmp eq i32 %59, 0, !dbg !7190
  %61 = zext i1 %60 to i32, !dbg !7190
  %62 = add nuw nsw i32 %53, %61, !dbg !7190
  %63 = add nuw nsw i64 %25, 4, !dbg !7191
  %64 = add i64 %27, -4, !dbg !7187
  %65 = icmp eq i64 %64, 0, !dbg !7187
  br i1 %65, label %66, label %24, !dbg !7187, !llvm.loop !7192

; <label>:66:                                     ; preds = %24, %15
  %67 = phi i32 [ undef, %15 ], [ %62, %24 ]
  %68 = phi i64 [ 0, %15 ], [ %63, %24 ]
  %69 = phi i32 [ 0, %15 ], [ %62, %24 ]
  %70 = icmp eq i64 %20, 0, !dbg !7187
  br i1 %70, label %86, label %71, !dbg !7187

; <label>:71:                                     ; preds = %66, %71
  %72 = phi i64 [ %83, %71 ], [ %68, %66 ]
  %73 = phi i32 [ %82, %71 ], [ %69, %66 ]
  %74 = phi i64 [ %84, %71 ], [ %20, %66 ]
  %75 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %17, i64 %72, !dbg !7188
  %76 = load %struct.clusterNode*, %struct.clusterNode** %75, align 8, !dbg !7188, !tbaa !757
  %77 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %76, i64 0, i32 2, !dbg !7188
  %78 = load i32, i32* %77, align 8, !dbg !7188, !tbaa !918
  %79 = and i32 %78, 12, !dbg !7190
  %80 = icmp eq i32 %79, 0, !dbg !7190
  %81 = zext i1 %80 to i32, !dbg !7190
  %82 = add nuw nsw i32 %73, %81, !dbg !7190
  %83 = add nuw nsw i64 %72, 1, !dbg !7191
  %84 = add i64 %74, -1, !dbg !7187
  %85 = icmp eq i64 %84, 0, !dbg !7187
  br i1 %85, label %86, label %71, !dbg !7187, !llvm.loop !7194

; <label>:86:                                     ; preds = %66, %71, %11
  %87 = phi i32 [ 0, %11 ], [ %67, %66 ], [ %82, %71 ], !dbg !7169
  %88 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 262), align 8, !dbg !7195, !tbaa !7197
  %89 = icmp sgt i32 %87, %88, !dbg !7198
  br i1 %89, label %90, label %235, !dbg !7199

; <label>:90:                                     ; preds = %86
  %91 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %5, i64 0, i32 4, !dbg !7200
  %92 = load %struct.dict*, %struct.dict** %91, align 8, !dbg !7200, !tbaa !832
  %93 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %92) #8, !dbg !7201
  %94 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %93) #8, !dbg !7203
  %95 = icmp eq %struct.dictEntry* %94, null, !dbg !7205
  br i1 %95, label %216, label %96, !dbg !7206

; <label>:96:                                     ; preds = %90, %212
  %97 = phi %struct.dictEntry* [ %214, %212 ], [ %94, %90 ]
  %98 = phi %struct.clusterNode* [ %184, %212 ], [ null, %90 ]
  %99 = phi %struct.clusterNode* [ %213, %212 ], [ %2, %90 ]
  %100 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %97, i64 0, i32 1, i32 0, !dbg !7207
  %101 = bitcast i8** %100 to %struct.clusterNode**, !dbg !7207
  %102 = load %struct.clusterNode*, %struct.clusterNode** %101, align 8, !dbg !7207, !tbaa !745
  %103 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 2, !dbg !7211
  %104 = load i32, i32* %103, align 8, !dbg !7211, !tbaa !918
  %105 = and i32 %104, 266, !dbg !7213
  %106 = icmp eq i32 %105, 256, !dbg !7213
  %107 = and i32 %104, 1, !dbg !7214
  %108 = icmp eq i32 %107, 0, !dbg !7214
  br i1 %108, label %164, label %109, !dbg !7216

; <label>:109:                                    ; preds = %96
  %110 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 6, !dbg !7221
  %111 = load i32, i32* %110, align 4, !dbg !7221, !tbaa !1027
  %112 = icmp sgt i32 %111, 0, !dbg !7222
  br i1 %112, label %113, label %164, !dbg !7223

; <label>:113:                                    ; preds = %109
  %114 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 7
  %115 = load %struct.clusterNode**, %struct.clusterNode*** %114, align 8, !tbaa !1030
  %116 = sext i32 %111 to i64, !dbg !7223
  %117 = and i64 %116, 1, !dbg !7223
  %118 = icmp eq i32 %111, 1, !dbg !7223
  br i1 %118, label %145, label %119, !dbg !7223

; <label>:119:                                    ; preds = %113
  %120 = sub nsw i64 %116, %117, !dbg !7223
  br label %121, !dbg !7223

; <label>:121:                                    ; preds = %121, %119
  %122 = phi i64 [ 0, %119 ], [ %142, %121 ]
  %123 = phi i32 [ 0, %119 ], [ %141, %121 ]
  %124 = phi i64 [ %120, %119 ], [ %143, %121 ]
  %125 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %115, i64 %122, !dbg !7224
  %126 = load %struct.clusterNode*, %struct.clusterNode** %125, align 8, !dbg !7224, !tbaa !757
  %127 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %126, i64 0, i32 2, !dbg !7224
  %128 = load i32, i32* %127, align 8, !dbg !7224, !tbaa !918
  %129 = lshr i32 %128, 3, !dbg !7225
  %130 = and i32 %129, 1, !dbg !7225
  %131 = xor i32 %130, 1, !dbg !7225
  %132 = add nuw nsw i32 %131, %123, !dbg !7225
  %133 = or i64 %122, 1, !dbg !7226
  %134 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %115, i64 %133, !dbg !7224
  %135 = load %struct.clusterNode*, %struct.clusterNode** %134, align 8, !dbg !7224, !tbaa !757
  %136 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %135, i64 0, i32 2, !dbg !7224
  %137 = load i32, i32* %136, align 8, !dbg !7224, !tbaa !918
  %138 = lshr i32 %137, 3, !dbg !7225
  %139 = and i32 %138, 1, !dbg !7225
  %140 = xor i32 %139, 1, !dbg !7225
  %141 = add nuw nsw i32 %140, %132, !dbg !7225
  %142 = add nuw nsw i64 %122, 2, !dbg !7226
  %143 = add i64 %124, -2, !dbg !7223
  %144 = icmp eq i64 %143, 0, !dbg !7223
  br i1 %144, label %145, label %121, !dbg !7223, !llvm.loop !3015

; <label>:145:                                    ; preds = %121, %113
  %146 = phi i32 [ undef, %113 ], [ %141, %121 ]
  %147 = phi i64 [ 0, %113 ], [ %142, %121 ]
  %148 = phi i32 [ 0, %113 ], [ %141, %121 ]
  %149 = icmp eq i64 %117, 0, !dbg !7223
  br i1 %149, label %159, label %150, !dbg !7223

; <label>:150:                                    ; preds = %145
  %151 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %115, i64 %147, !dbg !7224
  %152 = load %struct.clusterNode*, %struct.clusterNode** %151, align 8, !dbg !7224, !tbaa !757
  %153 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %152, i64 0, i32 2, !dbg !7224
  %154 = load i32, i32* %153, align 8, !dbg !7224, !tbaa !918
  %155 = lshr i32 %154, 3, !dbg !7225
  %156 = and i32 %155, 1, !dbg !7225
  %157 = xor i32 %156, 1, !dbg !7225
  %158 = add nuw nsw i32 %157, %148, !dbg !7225
  br label %159, !dbg !7227

; <label>:159:                                    ; preds = %145, %150
  %160 = phi i32 [ %146, %145 ], [ %158, %150 ], !dbg !7225
  %161 = icmp ne i32 %160, 0, !dbg !7227
  %162 = xor i1 %106, true, !dbg !7229
  %163 = or i1 %161, %162, !dbg !7229
  br i1 %163, label %179, label %165, !dbg !7229

; <label>:164:                                    ; preds = %109, %96
  br i1 %106, label %165, label %179, !dbg !7230

; <label>:165:                                    ; preds = %159, %164
  %166 = icmp eq %struct.clusterNode* %98, null, !dbg !7231
  br i1 %166, label %167, label %172, !dbg !7235

; <label>:167:                                    ; preds = %165
  %168 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 5, !dbg !7236
  %169 = load i32, i32* %168, align 8, !dbg !7236, !tbaa !1139
  %170 = icmp sgt i32 %169, 0, !dbg !7237
  %171 = select i1 %170, %struct.clusterNode* %102, %struct.clusterNode* null, !dbg !7238
  br label %172, !dbg !7238

; <label>:172:                                    ; preds = %167, %165
  %173 = phi %struct.clusterNode* [ %98, %165 ], [ %171, %167 ], !dbg !7239
  %174 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 14, !dbg !7240
  %175 = load i64, i64* %174, align 8, !dbg !7240, !tbaa !1169
  %176 = icmp eq i64 %175, 0, !dbg !7242
  br i1 %176, label %177, label %182, !dbg !7243

; <label>:177:                                    ; preds = %172
  %178 = tail call i64 @mstime() #8, !dbg !7244
  store i64 %178, i64* %174, align 8, !dbg !7245, !tbaa !1169
  br label %182, !dbg !7246

; <label>:179:                                    ; preds = %159, %164
  %180 = phi i32 [ 0, %164 ], [ %160, %159 ]
  %181 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 14, !dbg !7247
  store i64 0, i64* %181, align 8, !dbg !7249, !tbaa !1169
  br label %182

; <label>:182:                                    ; preds = %172, %177, %179
  %183 = phi i32 [ 0, %172 ], [ 0, %177 ], [ %180, %179 ]
  %184 = phi %struct.clusterNode* [ %173, %172 ], [ %173, %177 ], [ %98, %179 ], !dbg !7173
  %185 = icmp eq i32 %183, %0, !dbg !7250
  br i1 %185, label %186, label %212, !dbg !7252

; <label>:186:                                    ; preds = %182
  %187 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 6, !dbg !7253
  %188 = load i32, i32* %187, align 4, !dbg !7253, !tbaa !1027
  %189 = icmp sgt i32 %188, 0, !dbg !7257
  br i1 %189, label %190, label %212, !dbg !7258

; <label>:190:                                    ; preds = %186
  %191 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %102, i64 0, i32 7
  br label %192, !dbg !7258

; <label>:192:                                    ; preds = %190, %206
  %193 = phi i64 [ 0, %190 ], [ %208, %206 ]
  %194 = phi %struct.clusterNode* [ %99, %190 ], [ %207, %206 ]
  %195 = load %struct.clusterNode**, %struct.clusterNode*** %191, align 8, !dbg !7259, !tbaa !1030
  %196 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %195, i64 %193, !dbg !7262
  %197 = load %struct.clusterNode*, %struct.clusterNode** %196, align 8, !dbg !7262, !tbaa !757
  %198 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %197, i64 0, i32 1, i64 0, !dbg !7262
  %199 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %194, i64 0, i32 1, i64 0, !dbg !7263
  %200 = tail call i32 @memcmp(i8* nonnull %198, i8* nonnull %199, i64 40) #8, !dbg !7264
  %201 = icmp slt i32 %200, 0, !dbg !7265
  br i1 %201, label %202, label %206, !dbg !7266

; <label>:202:                                    ; preds = %192
  %203 = load %struct.clusterNode**, %struct.clusterNode*** %191, align 8, !dbg !7267, !tbaa !1030
  %204 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %203, i64 %193, !dbg !7269
  %205 = load %struct.clusterNode*, %struct.clusterNode** %204, align 8, !dbg !7269, !tbaa !757
  br label %206, !dbg !7270

; <label>:206:                                    ; preds = %192, %202
  %207 = phi %struct.clusterNode* [ %205, %202 ], [ %194, %192 ], !dbg !7239
  %208 = add nuw nsw i64 %193, 1, !dbg !7271
  %209 = load i32, i32* %187, align 4, !dbg !7253, !tbaa !1027
  %210 = sext i32 %209 to i64, !dbg !7257
  %211 = icmp slt i64 %208, %210, !dbg !7257
  br i1 %211, label %192, label %212, !dbg !7258, !llvm.loop !7272

; <label>:212:                                    ; preds = %206, %186, %182
  %213 = phi %struct.clusterNode* [ %99, %182 ], [ %99, %186 ], [ %207, %206 ], !dbg !7274
  %214 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %93) #8, !dbg !7203
  %215 = icmp eq %struct.dictEntry* %214, null, !dbg !7205
  br i1 %215, label %216, label %96, !dbg !7206, !llvm.loop !7275

; <label>:216:                                    ; preds = %212, %90
  %217 = phi %struct.clusterNode* [ %2, %90 ], [ %213, %212 ], !dbg !7274
  %218 = phi %struct.clusterNode* [ null, %90 ], [ %184, %212 ], !dbg !7173
  tail call void @dictReleaseIterator(%struct.dictIterator* %93) #8, !dbg !7277
  %219 = icmp ne %struct.clusterNode* %218, null, !dbg !7278
  %220 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7280
  %221 = icmp eq %struct.clusterNode* %217, %220, !dbg !7281
  %222 = and i1 %219, %221, !dbg !7282
  br i1 %222, label %223, label %235, !dbg !7282

; <label>:223:                                    ; preds = %216
  %224 = tail call i64 @mstime() #8, !dbg !7283
  %225 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %218, i64 0, i32 14, !dbg !7284
  %226 = load i64, i64* %225, align 8, !dbg !7284, !tbaa !1169
  %227 = sub nsw i64 %224, %226, !dbg !7285
  %228 = icmp sgt i64 %227, 5000, !dbg !7286
  br i1 %228, label %229, label %235, !dbg !7287

; <label>:229:                                    ; preds = %223
  %230 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7288, !tbaa !4226
  %231 = and i32 %230, 2, !dbg !7289
  %232 = icmp eq i32 %231, 0, !dbg !7289
  br i1 %232, label %233, label %235, !dbg !7290

; <label>:233:                                    ; preds = %229
  %234 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %218, i64 0, i32 1, i64 0, !dbg !7291
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.92, i64 0, i64 0), i8* nonnull %234) #8, !dbg !7293
  tail call void @clusterSetMaster(%struct.clusterNode* nonnull %218) #12, !dbg !7294
  br label %235, !dbg !7295

; <label>:235:                                    ; preds = %1, %223, %233, %229, %216, %86
  ret void, !dbg !7296
}

; Function Attrs: noredzone
declare dso_local i32 @clientsArePaused() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @manualFailoverCheckTimeout() local_unnamed_addr #0 !dbg !7297 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7298, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 17, !dbg !7300
  %3 = load i64, i64* %2, align 8, !dbg !7300, !tbaa !1950
  %4 = icmp eq i64 %3, 0, !dbg !7301
  br i1 %4, label %24, label %5, !dbg !7302

; <label>:5:                                      ; preds = %0
  %6 = tail call i64 @mstime() #8, !dbg !7303
  %7 = icmp slt i64 %3, %6, !dbg !7304
  br i1 %7, label %8, label %24, !dbg !7305

; <label>:8:                                      ; preds = %5
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.93, i64 0, i64 0)) #8, !dbg !7306
  %9 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7308, !tbaa !784
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 17, !dbg !7310
  %11 = load i64, i64* %10, align 8, !dbg !7310, !tbaa !1950
  %12 = icmp eq i64 %11, 0, !dbg !7311
  br i1 %12, label %18, label %13, !dbg !7312

; <label>:13:                                     ; preds = %8
  %14 = tail call i32 @clientsArePaused() #8, !dbg !7313
  %15 = icmp eq i32 %14, 0, !dbg !7313
  br i1 %15, label %18, label %16, !dbg !7314

; <label>:16:                                     ; preds = %13
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !7315, !tbaa !2134
  %17 = tail call i32 @clientsArePaused() #8, !dbg !7316
  br label %18, !dbg !7317

; <label>:18:                                     ; preds = %8, %13, %16
  %19 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7318, !tbaa !784
  %20 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %19, i64 0, i32 17, !dbg !7319
  store i64 0, i64* %20, align 8, !dbg !7320, !tbaa !1950
  %21 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %19, i64 0, i32 20, !dbg !7321
  store i32 0, i32* %21, align 8, !dbg !7322, !tbaa !1953
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %19, i64 0, i32 18, !dbg !7323
  store %struct.clusterNode* null, %struct.clusterNode** %22, align 8, !dbg !7324, !tbaa !1956
  %23 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %19, i64 0, i32 19, !dbg !7325
  store i64 0, i64* %23, align 8, !dbg !7326, !tbaa !1959
  br label %24, !dbg !7327

; <label>:24:                                     ; preds = %0, %18, %5
  ret void, !dbg !7328
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterHandleManualFailover() local_unnamed_addr #0 !dbg !7329 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7330, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 17, !dbg !7332
  %3 = load i64, i64* %2, align 8, !dbg !7332, !tbaa !1950
  %4 = icmp eq i64 %3, 0, !dbg !7333
  br i1 %4, label %19, label %5, !dbg !7334

; <label>:5:                                      ; preds = %0
  %6 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 20, !dbg !7335
  %7 = load i32, i32* %6, align 8, !dbg !7335, !tbaa !1953
  %8 = icmp eq i32 %7, 0, !dbg !7337
  br i1 %8, label %9, label %19, !dbg !7338

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 19, !dbg !7339
  %11 = load i64, i64* %10, align 8, !dbg !7339, !tbaa !1959
  %12 = icmp eq i64 %11, 0, !dbg !7341
  br i1 %12, label %19, label %13, !dbg !7342

; <label>:13:                                     ; preds = %9
  %14 = tail call i64 @replicationGetSlaveOffset() #8, !dbg !7343
  %15 = icmp eq i64 %11, %14, !dbg !7345
  br i1 %15, label %16, label %19, !dbg !7346

; <label>:16:                                     ; preds = %13
  %17 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7347, !tbaa !784
  %18 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %17, i64 0, i32 20, !dbg !7349
  store i32 1, i32* %18, align 8, !dbg !7350, !tbaa !1953
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.94, i64 0, i64 0)) #8, !dbg !7351
  br label %19, !dbg !7352

; <label>:19:                                     ; preds = %5, %9, %0, %16, %13
  ret void, !dbg !7353
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterCron() local_unnamed_addr #0 !dbg !292 {
  %1 = tail call i64 @mstime() #8, !dbg !7356
  %2 = load i64, i64* @clusterCron.iteration, align 8, !dbg !7359, !tbaa !1148
  %3 = add i64 %2, 1, !dbg !7359
  store i64 %3, i64* @clusterCron.iteration, align 8, !dbg !7359, !tbaa !1148
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !7360, !tbaa !4627
  %5 = load i8*, i8** @clusterCron.prev_ip, align 8, !dbg !7363, !tbaa !757
  %6 = icmp eq i8* %5, null, !dbg !7365
  %7 = icmp ne i8* %4, null, !dbg !7366
  %8 = and i1 %7, %6, !dbg !7367
  br i1 %8, label %23, label %9, !dbg !7367

; <label>:9:                                      ; preds = %0
  %10 = icmp ne i8* %5, null, !dbg !7368
  %11 = icmp eq i8* %4, null, !dbg !7370
  %12 = and i1 %11, %10, !dbg !7371
  br i1 %12, label %21, label %13, !dbg !7371

; <label>:13:                                     ; preds = %9
  %14 = and i1 %7, %10, !dbg !7372
  br i1 %14, label %15, label %35, !dbg !7372

; <label>:15:                                     ; preds = %13
  %16 = tail call i32 @strcmp(i8* nonnull %5, i8* nonnull %4) #8, !dbg !7374
  %17 = icmp eq i32 %16, 0, !dbg !7374
  br i1 %17, label %35, label %18, !dbg !7375

; <label>:18:                                     ; preds = %15
  %19 = load i8*, i8** @clusterCron.prev_ip, align 8, !dbg !7376, !tbaa !757
  %20 = icmp eq i8* %19, null, !dbg !7376
  br i1 %20, label %23, label %21, !dbg !7380

; <label>:21:                                     ; preds = %9, %18
  %22 = phi i8* [ %19, %18 ], [ %5, %9 ]
  tail call void @zfree(i8* nonnull %22) #8, !dbg !7381
  br label %23, !dbg !7381

; <label>:23:                                     ; preds = %0, %18, %21
  store i8* %4, i8** @clusterCron.prev_ip, align 8, !dbg !7382, !tbaa !757
  br i1 %7, label %24, label %32, !dbg !7383

; <label>:24:                                     ; preds = %23
  %25 = tail call i8* @zstrdup(i8* nonnull %4) #8, !dbg !7384
  store i8* %25, i8** @clusterCron.prev_ip, align 8, !dbg !7387, !tbaa !757
  %26 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7388, !tbaa !757
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 16, i64 0, !dbg !7388
  %28 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !7389, !tbaa !4627
  %29 = tail call i8* @strncpy(i8* nonnull %27, i8* %28, i64 46) #8, !dbg !7390
  %30 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7391, !tbaa !757
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %30, i64 0, i32 16, i64 45, !dbg !7391
  store i8 0, i8* %31, align 1, !dbg !7392, !tbaa !745
  br label %35, !dbg !7393

; <label>:32:                                     ; preds = %23
  %33 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7394, !tbaa !757
  %34 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %33, i64 0, i32 16, i64 0, !dbg !7394
  store i8 0, i8* %34, align 8, !dbg !7396, !tbaa !745
  br label %35

; <label>:35:                                     ; preds = %15, %13, %24, %32
  %36 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !7397, !tbaa !2858
  %37 = icmp sgt i64 %36, 1000, !dbg !7399
  %38 = select i1 %37, i64 %36, i64 1000, !dbg !7399
  %39 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7400, !tbaa !757
  %40 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %39, i64 0, i32 2, !dbg !7402
  %41 = load i32, i32* %40, align 8, !dbg !7402, !tbaa !918
  %42 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 265), align 4, !dbg !7404, !tbaa !1708
  %43 = icmp eq i32 %42, 0, !dbg !7405
  %44 = select i1 %43, i32 0, i32 512, !dbg !7405
  %45 = and i32 %41, -513, !dbg !7407
  %46 = or i32 %44, %45, !dbg !7408
  store i32 %46, i32* %40, align 8, !dbg !7408, !tbaa !918
  %47 = icmp eq i32 %46, %41, !dbg !7409
  %48 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7410, !tbaa !784
  br i1 %47, label %53, label %49, !dbg !7411

; <label>:49:                                     ; preds = %35
  %50 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %48, i64 0, i32 22, !dbg !7414
  %51 = load i32, i32* %50, align 8, !dbg !7415, !tbaa !1465
  %52 = or i32 %51, 6, !dbg !7415
  store i32 %52, i32* %50, align 8, !dbg !7415, !tbaa !1465
  br label %53, !dbg !7416

; <label>:53:                                     ; preds = %35, %49
  %54 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %48, i64 0, i32 4, !dbg !7417
  %55 = load %struct.dict*, %struct.dict** %54, align 8, !dbg !7417, !tbaa !832
  %56 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %55) #8, !dbg !7418
  %57 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7420, !tbaa !784
  %58 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %57, i64 0, i32 25, !dbg !7421
  store i64 0, i64* %58, align 8, !dbg !7422, !tbaa !1790
  %59 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %56) #8, !dbg !7423
  %60 = icmp eq %struct.dictEntry* %59, null, !dbg !7425
  br i1 %60, label %142, label %61, !dbg !7426

; <label>:61:                                     ; preds = %53, %139
  %62 = phi %struct.dictEntry* [ %140, %139 ], [ %59, %53 ]
  %63 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %62, i64 0, i32 1, i32 0, !dbg !7427
  %64 = bitcast i8** %63 to %struct.clusterNode**, !dbg !7427
  %65 = load %struct.clusterNode*, %struct.clusterNode** %64, align 8, !dbg !7427, !tbaa !745
  %66 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 2, !dbg !7429
  %67 = load i32, i32* %66, align 8, !dbg !7429, !tbaa !918
  %68 = and i32 %67, 80, !dbg !7431
  %69 = icmp eq i32 %68, 0, !dbg !7431
  br i1 %69, label %70, label %139, !dbg !7432, !llvm.loop !7433

; <label>:70:                                     ; preds = %61
  %71 = and i32 %67, 4, !dbg !7435
  %72 = icmp eq i32 %71, 0, !dbg !7435
  br i1 %72, label %78, label %73, !dbg !7437

; <label>:73:                                     ; preds = %70
  %74 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7438, !tbaa !784
  %75 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %74, i64 0, i32 25, !dbg !7439
  %76 = load i64, i64* %75, align 8, !dbg !7440, !tbaa !1790
  %77 = add nsw i64 %76, 1, !dbg !7440
  store i64 %77, i64* %75, align 8, !dbg !7440, !tbaa !1790
  br label %78, !dbg !7441

; <label>:78:                                     ; preds = %70, %73
  %79 = and i32 %67, 32, !dbg !7442
  %80 = icmp eq i32 %79, 0, !dbg !7442
  br i1 %80, label %87, label %81, !dbg !7444

; <label>:81:                                     ; preds = %78
  %82 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 0, !dbg !7445
  %83 = load i64, i64* %82, align 8, !dbg !7445, !tbaa !1130
  %84 = sub nsw i64 %1, %83, !dbg !7446
  %85 = icmp sgt i64 %84, %38, !dbg !7447
  br i1 %85, label %86, label %87, !dbg !7448

; <label>:86:                                     ; preds = %81
  tail call void @clusterDelNode(%struct.clusterNode* nonnull %65) #12, !dbg !7449
  br label %139, !dbg !7451, !llvm.loop !7433

; <label>:87:                                     ; preds = %78, %81
  %88 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 19, !dbg !7452
  %89 = load %struct.clusterLink*, %struct.clusterLink** %88, align 8, !dbg !7452, !tbaa !1153
  %90 = icmp eq %struct.clusterLink* %89, null, !dbg !7453
  br i1 %90, label %91, label %139, !dbg !7454

; <label>:91:                                     ; preds = %87
  %92 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 16, i64 0, !dbg !7455
  %93 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 18, !dbg !7456
  %94 = load i32, i32* %93, align 4, !dbg !7456, !tbaa !898
  %95 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !7457, !tbaa !7458
  %96 = icmp eq i32 %95, 0, !dbg !7457
  %97 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 29, i64 0), align 8, !dbg !7457
  %98 = select i1 %96, i8* null, i8* %97, !dbg !7457
  %99 = tail call i32 @anetTcpNonBlockBindConnect(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i8* nonnull %92, i32 %94, i8* %98) #8, !dbg !7459
  %100 = icmp eq i32 %99, -1, !dbg !7461
  br i1 %100, label %101, label %109, !dbg !7463

; <label>:101:                                    ; preds = %91
  %102 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 9, !dbg !7464
  %103 = load i64, i64* %102, align 8, !dbg !7464, !tbaa !1060
  %104 = icmp eq i64 %103, 0, !dbg !7467
  br i1 %104, label %105, label %107, !dbg !7468

; <label>:105:                                    ; preds = %101
  %106 = tail call i64 @mstime() #8, !dbg !7469
  store i64 %106, i64* %102, align 8, !dbg !7470, !tbaa !1060
  br label %107, !dbg !7471

; <label>:107:                                    ; preds = %105, %101
  %108 = load i32, i32* %93, align 4, !dbg !7472, !tbaa !898
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.95, i64 0, i64 0), i8* nonnull %92, i32 %108, i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0)) #8, !dbg !7473
  br label %139

; <label>:109:                                    ; preds = %91
  %110 = tail call i8* @zmalloc(i64 40) #8, !dbg !7476
  %111 = bitcast i8* %110 to %struct.clusterLink*, !dbg !7476
  %112 = tail call i64 @mstime() #8, !dbg !7478
  %113 = bitcast i8* %110 to i64*, !dbg !7479
  store i64 %112, i64* %113, align 8, !dbg !7480, !tbaa !2101
  %114 = tail call i8* @sdsempty() #8, !dbg !7481
  %115 = getelementptr inbounds i8, i8* %110, i64 16, !dbg !7482
  %116 = bitcast i8* %115 to i8**, !dbg !7482
  store i8* %114, i8** %116, align 8, !dbg !7483, !tbaa !2106
  %117 = tail call i8* @sdsempty() #8, !dbg !7484
  %118 = getelementptr inbounds i8, i8* %110, i64 24, !dbg !7485
  %119 = bitcast i8* %118 to i8**, !dbg !7485
  store i8* %117, i8** %119, align 8, !dbg !7486, !tbaa !2110
  %120 = getelementptr inbounds i8, i8* %110, i64 32, !dbg !7487
  %121 = bitcast i8* %120 to %struct.clusterNode**, !dbg !7487
  store %struct.clusterNode* %65, %struct.clusterNode** %121, align 8, !dbg !7488, !tbaa !2113
  %122 = getelementptr inbounds i8, i8* %110, i64 8, !dbg !7489
  %123 = bitcast i8* %122 to i32*, !dbg !7489
  store i32 %99, i32* %123, align 8, !dbg !7491, !tbaa !2117
  %124 = bitcast %struct.clusterLink** %88 to i8**, !dbg !7492
  store i8* %110, i8** %124, align 8, !dbg !7492, !tbaa !1153
  %125 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !7493, !tbaa !1910
  %126 = tail call i32 @aeCreateFileEvent(%struct.aeEventLoop* %125, i32 %99, i32 1, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @clusterReadHandler, i8* %110) #8, !dbg !7494
  %127 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 9, !dbg !7495
  %128 = load i64, i64* %127, align 8, !dbg !7495, !tbaa !1060
  %129 = load i32, i32* %66, align 8, !dbg !7497, !tbaa !918
  %130 = lshr i32 %129, 6, !dbg !7498
  %131 = and i32 %130, 2, !dbg !7498
  tail call void @clusterSendPing(%struct.clusterLink* %111, i32 %131) #12, !dbg !7499
  %132 = icmp eq i64 %128, 0, !dbg !7500
  br i1 %132, label %134, label %133, !dbg !7502

; <label>:133:                                    ; preds = %109
  store i64 %128, i64* %127, align 8, !dbg !7503, !tbaa !1060
  br label %134, !dbg !7505

; <label>:134:                                    ; preds = %109, %133
  %135 = load i32, i32* %66, align 8, !dbg !7506, !tbaa !918
  %136 = and i32 %135, -129, !dbg !7506
  store i32 %136, i32* %66, align 8, !dbg !7506, !tbaa !918
  %137 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 1, i64 0, !dbg !7507
  %138 = load i32, i32* %93, align 4, !dbg !7508, !tbaa !898
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.96, i64 0, i64 0), i8* nonnull %137, i8* nonnull %92, i32 %138) #8, !dbg !7509
  br label %139

; <label>:139:                                    ; preds = %87, %134, %107, %61, %86
  %140 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %56) #8, !dbg !7423
  %141 = icmp eq %struct.dictEntry* %140, null, !dbg !7425
  br i1 %141, label %142, label %61, !dbg !7426

; <label>:142:                                    ; preds = %139, %53
  tail call void @dictReleaseIterator(%struct.dictIterator* %56) #8, !dbg !7510
  %143 = load i64, i64* @clusterCron.iteration, align 8, !dbg !7511, !tbaa !1148
  %144 = urem i64 %143, 10, !dbg !7512
  %145 = icmp eq i64 %144, 0, !dbg !7512
  br i1 %145, label %146, label %187, !dbg !7513

; <label>:146:                                    ; preds = %142
  %147 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7515, !tbaa !784
  %148 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %147, i64 0, i32 4, !dbg !7516
  %149 = load %struct.dict*, %struct.dict** %148, align 8, !dbg !7516, !tbaa !832
  %150 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %149) #8, !dbg !7517
  %151 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %150, i64 0, i32 1, i32 0, !dbg !7518
  %152 = bitcast i8** %151 to %struct.clusterNode**, !dbg !7518
  %153 = load %struct.clusterNode*, %struct.clusterNode** %152, align 8, !dbg !7518, !tbaa !745
  %154 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %153, i64 0, i32 19, !dbg !7520
  %155 = load %struct.clusterLink*, %struct.clusterLink** %154, align 8, !dbg !7520, !tbaa !1153
  %156 = icmp eq %struct.clusterLink* %155, null, !dbg !7522
  br i1 %156, label %169, label %157, !dbg !7523

; <label>:157:                                    ; preds = %146
  %158 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %153, i64 0, i32 9, !dbg !7524
  %159 = load i64, i64* %158, align 8, !dbg !7524, !tbaa !1060
  %160 = icmp eq i64 %159, 0, !dbg !7525
  br i1 %160, label %161, label %169, !dbg !7526

; <label>:161:                                    ; preds = %157
  %162 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %153, i64 0, i32 2, !dbg !7527
  %163 = load i32, i32* %162, align 8, !dbg !7527, !tbaa !918
  %164 = and i32 %163, 48, !dbg !7529
  %165 = icmp eq i32 %164, 0, !dbg !7529
  br i1 %165, label %166, label %169, !dbg !7530

; <label>:166:                                    ; preds = %161
  %167 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %153, i64 0, i32 10
  %168 = load i64, i64* %167, align 8, !dbg !7531, !tbaa !1069
  br label %169, !dbg !7534

; <label>:169:                                    ; preds = %166, %161, %146, %157
  %170 = phi %struct.clusterNode* [ null, %157 ], [ null, %146 ], [ null, %161 ], [ %153, %166 ], !dbg !7535
  %171 = phi i64 [ 0, %157 ], [ 0, %146 ], [ 0, %161 ], [ %168, %166 ], !dbg !7535
  %172 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7515, !tbaa !784
  %173 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %172, i64 0, i32 4, !dbg !7516
  %174 = load %struct.dict*, %struct.dict** %173, align 8, !dbg !7516, !tbaa !832
  %175 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %174) #8, !dbg !7517
  %176 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %175, i64 0, i32 1, i32 0, !dbg !7518
  %177 = bitcast i8** %176 to %struct.clusterNode**, !dbg !7518
  %178 = load %struct.clusterNode*, %struct.clusterNode** %177, align 8, !dbg !7518, !tbaa !745
  %179 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %178, i64 0, i32 19, !dbg !7520
  %180 = load %struct.clusterLink*, %struct.clusterLink** %179, align 8, !dbg !7520, !tbaa !1153
  %181 = icmp eq %struct.clusterLink* %180, null, !dbg !7522
  br i1 %181, label %507, label %490, !dbg !7523

; <label>:182:                                    ; preds = %591, %595, %596
  %183 = phi %struct.clusterNode* [ %568, %596 ], [ %568, %591 ], [ %576, %595 ]
  %184 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %183, i64 0, i32 1, i64 0, !dbg !7536
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.97, i64 0, i64 0), i8* nonnull %184) #8, !dbg !7539
  %185 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %183, i64 0, i32 19, !dbg !7540
  %186 = load %struct.clusterLink*, %struct.clusterLink** %185, align 8, !dbg !7540, !tbaa !1153
  tail call void @clusterSendPing(%struct.clusterLink* %186, i32 0) #12, !dbg !7541
  br label %187, !dbg !7542

; <label>:187:                                    ; preds = %182, %596, %142
  %188 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7546, !tbaa !784
  %189 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %188, i64 0, i32 4, !dbg !7547
  %190 = load %struct.dict*, %struct.dict** %189, align 8, !dbg !7547, !tbaa !832
  %191 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %190) #8, !dbg !7548
  %192 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %191) #8, !dbg !7549
  %193 = icmp eq %struct.dictEntry* %192, null, !dbg !7550
  br i1 %193, label %394, label %194, !dbg !7551

; <label>:194:                                    ; preds = %187, %387
  %195 = phi %struct.dictEntry* [ %392, %387 ], [ %192, %187 ]
  %196 = phi i32 [ %391, %387 ], [ 0, %187 ]
  %197 = phi i32 [ %390, %387 ], [ 0, %187 ]
  %198 = phi i32 [ %389, %387 ], [ 0, %187 ]
  %199 = phi i32 [ %388, %387 ], [ 0, %187 ]
  %200 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %195, i64 0, i32 1, i32 0, !dbg !7552
  %201 = bitcast i8** %200 to %struct.clusterNode**, !dbg !7552
  %202 = load %struct.clusterNode*, %struct.clusterNode** %201, align 8, !dbg !7552, !tbaa !745
  %203 = tail call i64 @mstime() #8, !dbg !7554
  %204 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 2, !dbg !7555
  %205 = load i32, i32* %204, align 8, !dbg !7555, !tbaa !918
  %206 = and i32 %205, 112, !dbg !7557
  %207 = icmp eq i32 %206, 0, !dbg !7557
  br i1 %207, label %208, label %387, !dbg !7558, !llvm.loop !7559

; <label>:208:                                    ; preds = %194
  %209 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7561, !tbaa !757
  %210 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 2, !dbg !7561
  %211 = load i32, i32* %210, align 8, !dbg !7561, !tbaa !918
  %212 = and i32 %211, 2, !dbg !7561
  %213 = icmp eq i32 %212, 0, !dbg !7561
  %214 = and i32 %205, 1, !dbg !7562
  %215 = icmp eq i32 %214, 0, !dbg !7562
  %216 = or i1 %215, %213, !dbg !7563
  %217 = xor i1 %216, true, !dbg !7563
  %218 = and i32 %205, 8, !dbg !7564
  %219 = icmp eq i32 %218, 0, !dbg !7564
  %220 = and i1 %219, %217, !dbg !7563
  br i1 %220, label %221, label %292, !dbg !7563

; <label>:221:                                    ; preds = %208
  %222 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 6, !dbg !7569
  %223 = load i32, i32* %222, align 4, !dbg !7569, !tbaa !1027
  %224 = icmp sgt i32 %223, 0, !dbg !7570
  br i1 %224, label %225, label %274, !dbg !7571

; <label>:225:                                    ; preds = %221
  %226 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 7
  %227 = load %struct.clusterNode**, %struct.clusterNode*** %226, align 8, !tbaa !1030
  %228 = sext i32 %223 to i64, !dbg !7571
  %229 = and i64 %228, 1, !dbg !7571
  %230 = icmp eq i32 %223, 1, !dbg !7571
  br i1 %230, label %257, label %231, !dbg !7571

; <label>:231:                                    ; preds = %225
  %232 = sub nsw i64 %228, %229, !dbg !7571
  br label %233, !dbg !7571

; <label>:233:                                    ; preds = %233, %231
  %234 = phi i64 [ 0, %231 ], [ %254, %233 ]
  %235 = phi i32 [ 0, %231 ], [ %253, %233 ]
  %236 = phi i64 [ %232, %231 ], [ %255, %233 ]
  %237 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %227, i64 %234, !dbg !7572
  %238 = load %struct.clusterNode*, %struct.clusterNode** %237, align 8, !dbg !7572, !tbaa !757
  %239 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %238, i64 0, i32 2, !dbg !7572
  %240 = load i32, i32* %239, align 8, !dbg !7572, !tbaa !918
  %241 = lshr i32 %240, 3, !dbg !7573
  %242 = and i32 %241, 1, !dbg !7573
  %243 = xor i32 %242, 1, !dbg !7573
  %244 = add nuw nsw i32 %243, %235, !dbg !7573
  %245 = or i64 %234, 1, !dbg !7574
  %246 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %227, i64 %245, !dbg !7572
  %247 = load %struct.clusterNode*, %struct.clusterNode** %246, align 8, !dbg !7572, !tbaa !757
  %248 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %247, i64 0, i32 2, !dbg !7572
  %249 = load i32, i32* %248, align 8, !dbg !7572, !tbaa !918
  %250 = lshr i32 %249, 3, !dbg !7573
  %251 = and i32 %250, 1, !dbg !7573
  %252 = xor i32 %251, 1, !dbg !7573
  %253 = add nuw nsw i32 %252, %244, !dbg !7573
  %254 = add nuw nsw i64 %234, 2, !dbg !7574
  %255 = add i64 %236, -2, !dbg !7571
  %256 = icmp eq i64 %255, 0, !dbg !7571
  br i1 %256, label %257, label %233, !dbg !7571, !llvm.loop !3015

; <label>:257:                                    ; preds = %233, %225
  %258 = phi i32 [ undef, %225 ], [ %253, %233 ]
  %259 = phi i64 [ 0, %225 ], [ %254, %233 ]
  %260 = phi i32 [ 0, %225 ], [ %253, %233 ]
  %261 = icmp eq i64 %229, 0, !dbg !7571
  br i1 %261, label %271, label %262, !dbg !7571

; <label>:262:                                    ; preds = %257
  %263 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %227, i64 %259, !dbg !7572
  %264 = load %struct.clusterNode*, %struct.clusterNode** %263, align 8, !dbg !7572, !tbaa !757
  %265 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %264, i64 0, i32 2, !dbg !7572
  %266 = load i32, i32* %265, align 8, !dbg !7572, !tbaa !918
  %267 = lshr i32 %266, 3, !dbg !7573
  %268 = and i32 %267, 1, !dbg !7573
  %269 = xor i32 %268, 1, !dbg !7573
  %270 = add nuw nsw i32 %269, %260, !dbg !7573
  br label %271, !dbg !7575

; <label>:271:                                    ; preds = %257, %262
  %272 = phi i32 [ %258, %257 ], [ %270, %262 ], !dbg !7573
  %273 = icmp eq i32 %272, 0, !dbg !7575
  br i1 %273, label %274, label %282, !dbg !7578

; <label>:274:                                    ; preds = %221, %271
  %275 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 5, !dbg !7579
  %276 = load i32, i32* %275, align 8, !dbg !7579, !tbaa !1139
  %277 = icmp sgt i32 %276, 0, !dbg !7580
  br i1 %277, label %278, label %282, !dbg !7581

; <label>:278:                                    ; preds = %274
  %279 = lshr i32 %205, 8, !dbg !7582
  %280 = and i32 %279, 1, !dbg !7582
  %281 = add nsw i32 %280, %197, !dbg !7582
  br label %282, !dbg !7582

; <label>:282:                                    ; preds = %278, %274, %271
  %283 = phi i32 [ 0, %274 ], [ %272, %271 ], [ 0, %278 ]
  %284 = phi i32 [ %197, %274 ], [ %197, %271 ], [ %281, %278 ], !dbg !7410
  %285 = icmp sgt i32 %283, %198, !dbg !7583
  %286 = select i1 %285, i32 %283, i32 %198, !dbg !7585
  br i1 %213, label %292, label %287, !dbg !7586

; <label>:287:                                    ; preds = %282
  %288 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 8, !dbg !7588
  %289 = load %struct.clusterNode*, %struct.clusterNode** %288, align 8, !dbg !7588, !tbaa !1012
  %290 = icmp eq %struct.clusterNode* %289, %202, !dbg !7589
  %291 = select i1 %290, i32 %283, i32 %199, !dbg !7590
  br label %292, !dbg !7590

; <label>:292:                                    ; preds = %287, %282, %208
  %293 = phi i32 [ %199, %208 ], [ %199, %282 ], [ %291, %287 ], !dbg !7410
  %294 = phi i32 [ %198, %208 ], [ %286, %282 ], [ %286, %287 ], !dbg !7410
  %295 = phi i32 [ %197, %208 ], [ %284, %282 ], [ %284, %287 ], !dbg !7410
  %296 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 19, !dbg !7591
  %297 = load %struct.clusterLink*, %struct.clusterLink** %296, align 8, !dbg !7591, !tbaa !1153
  %298 = icmp eq %struct.clusterLink* %297, null, !dbg !7593
  br i1 %298, label %352, label %299, !dbg !7594

; <label>:299:                                    ; preds = %292
  %300 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %297, i64 0, i32 0, !dbg !7595
  %301 = load i64, i64* %300, align 8, !dbg !7595, !tbaa !2101
  %302 = sub nsw i64 %203, %301, !dbg !7596
  %303 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !7597, !tbaa !2858
  %304 = icmp sgt i64 %302, %303, !dbg !7598
  br i1 %304, label %305, label %339, !dbg !7599

; <label>:305:                                    ; preds = %299
  %306 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 9, !dbg !7600
  %307 = load i64, i64* %306, align 8, !dbg !7600, !tbaa !1060
  %308 = icmp eq i64 %307, 0, !dbg !7601
  br i1 %308, label %339, label %309, !dbg !7602

; <label>:309:                                    ; preds = %305
  %310 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 10, !dbg !7603
  %311 = load i64, i64* %310, align 8, !dbg !7603, !tbaa !1069
  %312 = icmp slt i64 %311, %307, !dbg !7604
  br i1 %312, label %313, label %339, !dbg !7605

; <label>:313:                                    ; preds = %309
  %314 = sub nsw i64 %203, %307, !dbg !7606
  %315 = sdiv i64 %303, 2, !dbg !7607
  %316 = icmp sgt i64 %314, %315, !dbg !7608
  br i1 %316, label %317, label %339, !dbg !7609

; <label>:317:                                    ; preds = %313
  %318 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %297, i64 0, i32 1, !dbg !7613
  %319 = load i32, i32* %318, align 8, !dbg !7613, !tbaa !2117
  %320 = icmp eq i32 %319, -1, !dbg !7614
  br i1 %320, label %323, label %321, !dbg !7615

; <label>:321:                                    ; preds = %317
  %322 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !7616, !tbaa !1910
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* %322, i32 %319, i32 3) #8, !dbg !7617
  br label %323, !dbg !7618

; <label>:323:                                    ; preds = %321, %317
  %324 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %297, i64 0, i32 2, !dbg !7619
  %325 = load i8*, i8** %324, align 8, !dbg !7619, !tbaa !2106
  tail call void @sdsfree(i8* %325) #8, !dbg !7620
  %326 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %297, i64 0, i32 3, !dbg !7621
  %327 = load i8*, i8** %326, align 8, !dbg !7621, !tbaa !2110
  tail call void @sdsfree(i8* %327) #8, !dbg !7622
  %328 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %297, i64 0, i32 4, !dbg !7623
  %329 = load %struct.clusterNode*, %struct.clusterNode** %328, align 8, !dbg !7623, !tbaa !2113
  %330 = icmp eq %struct.clusterNode* %329, null, !dbg !7624
  br i1 %330, label %333, label %331, !dbg !7625

; <label>:331:                                    ; preds = %323
  %332 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %329, i64 0, i32 19, !dbg !7626
  store %struct.clusterLink* null, %struct.clusterLink** %332, align 8, !dbg !7627, !tbaa !1153
  br label %333, !dbg !7628

; <label>:333:                                    ; preds = %331, %323
  %334 = load i32, i32* %318, align 8, !dbg !7629, !tbaa !2117
  %335 = tail call i32 @close(i32 %334) #8, !dbg !7630
  %336 = bitcast %struct.clusterLink* %297 to i8*, !dbg !7631
  tail call void @zfree(i8* %336) #8, !dbg !7632
  %337 = load %struct.clusterLink*, %struct.clusterLink** %296, align 8, !dbg !7633, !tbaa !1153
  %338 = icmp eq %struct.clusterLink* %337, null, !dbg !7635
  br i1 %338, label %352, label %339, !dbg !7636

; <label>:339:                                    ; preds = %299, %309, %313, %305, %333
  %340 = phi %struct.clusterLink* [ %337, %333 ], [ %297, %305 ], [ %297, %313 ], [ %297, %309 ], [ %297, %299 ]
  %341 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 9, !dbg !7637
  %342 = load i64, i64* %341, align 8, !dbg !7637, !tbaa !1060
  %343 = icmp eq i64 %342, 0, !dbg !7638
  br i1 %343, label %344, label %352, !dbg !7639

; <label>:344:                                    ; preds = %339
  %345 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 10, !dbg !7640
  %346 = load i64, i64* %345, align 8, !dbg !7640, !tbaa !1069
  %347 = sub nsw i64 %203, %346, !dbg !7641
  %348 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !7642, !tbaa !2858
  %349 = sdiv i64 %348, 2, !dbg !7643
  %350 = icmp sgt i64 %347, %349, !dbg !7644
  br i1 %350, label %351, label %352, !dbg !7645

; <label>:351:                                    ; preds = %344
  tail call void @clusterSendPing(%struct.clusterLink* nonnull %340, i32 0) #12, !dbg !7646
  br label %387, !dbg !7648, !llvm.loop !7559

; <label>:352:                                    ; preds = %292, %333, %344, %339
  %353 = phi i1 [ true, %333 ], [ false, %344 ], [ false, %339 ], [ true, %292 ]
  %354 = phi %struct.clusterLink* [ null, %333 ], [ %340, %344 ], [ %340, %339 ], [ null, %292 ]
  %355 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7649, !tbaa !784
  %356 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %355, i64 0, i32 17, !dbg !7651
  %357 = load i64, i64* %356, align 8, !dbg !7651, !tbaa !1950
  %358 = icmp eq i64 %357, 0, !dbg !7652
  br i1 %358, label %371, label %359, !dbg !7653

; <label>:359:                                    ; preds = %352
  %360 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7654, !tbaa !757
  %361 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %360, i64 0, i32 2, !dbg !7654
  %362 = load i32, i32* %361, align 8, !dbg !7654, !tbaa !918
  %363 = and i32 %362, 1, !dbg !7654
  %364 = icmp eq i32 %363, 0, !dbg !7654
  br i1 %364, label %371, label %365, !dbg !7655

; <label>:365:                                    ; preds = %359
  %366 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %355, i64 0, i32 18, !dbg !7656
  %367 = load %struct.clusterNode*, %struct.clusterNode** %366, align 8, !dbg !7656, !tbaa !1956
  %368 = icmp ne %struct.clusterNode* %367, %202, !dbg !7657
  %369 = or i1 %353, %368, !dbg !7658
  br i1 %369, label %371, label %370, !dbg !7658

; <label>:370:                                    ; preds = %365
  tail call void @clusterSendPing(%struct.clusterLink* nonnull %354, i32 0) #12, !dbg !7659
  br label %387, !dbg !7661, !llvm.loop !7559

; <label>:371:                                    ; preds = %365, %359, %352
  %372 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 9, !dbg !7662
  %373 = load i64, i64* %372, align 8, !dbg !7662, !tbaa !1060
  %374 = icmp eq i64 %373, 0, !dbg !7664
  br i1 %374, label %387, label %375, !dbg !7665, !llvm.loop !7559

; <label>:375:                                    ; preds = %371
  %376 = sub nsw i64 %203, %373, !dbg !7666
  %377 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !7668, !tbaa !2858
  %378 = icmp sgt i64 %376, %377, !dbg !7670
  br i1 %378, label %379, label %387, !dbg !7671

; <label>:379:                                    ; preds = %375
  %380 = load i32, i32* %204, align 8, !dbg !7672, !tbaa !918
  %381 = and i32 %380, 12, !dbg !7675
  %382 = icmp eq i32 %381, 0, !dbg !7675
  br i1 %382, label %383, label %387, !dbg !7676

; <label>:383:                                    ; preds = %379
  %384 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %202, i64 0, i32 1, i64 0, !dbg !7677
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.98, i64 0, i64 0), i8* nonnull %384) #8, !dbg !7679
  %385 = load i32, i32* %204, align 8, !dbg !7680, !tbaa !918
  %386 = or i32 %385, 4, !dbg !7680
  store i32 %386, i32* %204, align 8, !dbg !7680, !tbaa !918
  br label %387, !dbg !7681

; <label>:387:                                    ; preds = %375, %383, %379, %371, %194, %370, %351
  %388 = phi i32 [ %293, %351 ], [ %293, %370 ], [ %199, %194 ], [ %293, %371 ], [ %293, %379 ], [ %293, %383 ], [ %293, %375 ], !dbg !7682
  %389 = phi i32 [ %294, %351 ], [ %294, %370 ], [ %198, %194 ], [ %294, %371 ], [ %294, %379 ], [ %294, %383 ], [ %294, %375 ], !dbg !7683
  %390 = phi i32 [ %295, %351 ], [ %295, %370 ], [ %197, %194 ], [ %295, %371 ], [ %295, %379 ], [ %295, %383 ], [ %295, %375 ], !dbg !7684
  %391 = phi i32 [ %196, %351 ], [ %196, %370 ], [ %196, %194 ], [ %196, %371 ], [ %196, %379 ], [ 1, %383 ], [ %196, %375 ], !dbg !7354
  %392 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %191) #8, !dbg !7549
  %393 = icmp eq %struct.dictEntry* %392, null, !dbg !7550
  br i1 %393, label %394, label %194, !dbg !7551

; <label>:394:                                    ; preds = %387, %187
  %395 = phi i32 [ 0, %187 ], [ %388, %387 ], !dbg !7682
  %396 = phi i32 [ 0, %187 ], [ %389, %387 ], !dbg !7683
  %397 = phi i32 [ 0, %187 ], [ %390, %387 ], !dbg !7684
  %398 = phi i32 [ 0, %187 ], [ %391, %387 ], !dbg !7354
  tail call void @dictReleaseIterator(%struct.dictIterator* %191) #8, !dbg !7685
  %399 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7686, !tbaa !757
  %400 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %399, i64 0, i32 2, !dbg !7686
  %401 = load i32, i32* %400, align 8, !dbg !7686, !tbaa !918
  %402 = and i32 %401, 2, !dbg !7686
  %403 = icmp ne i32 %402, 0, !dbg !7686
  %404 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !7688
  %405 = icmp eq i8* %404, null, !dbg !7689
  %406 = and i1 %403, %405, !dbg !7690
  br i1 %406, label %407, label %420, !dbg !7690

; <label>:407:                                    ; preds = %394
  %408 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %399, i64 0, i32 8, !dbg !7691
  %409 = load %struct.clusterNode*, %struct.clusterNode** %408, align 8, !dbg !7691, !tbaa !1012
  %410 = icmp eq %struct.clusterNode* %409, null, !dbg !7692
  br i1 %410, label %420, label %411, !dbg !7693

; <label>:411:                                    ; preds = %407
  %412 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %409, i64 0, i32 2, !dbg !7694
  %413 = load i32, i32* %412, align 8, !dbg !7694, !tbaa !918
  %414 = and i32 %413, 64, !dbg !7694
  %415 = icmp eq i32 %414, 0, !dbg !7694
  br i1 %415, label %416, label %420, !dbg !7695

; <label>:416:                                    ; preds = %411
  %417 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %409, i64 0, i32 16, i64 0, !dbg !7696
  %418 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %409, i64 0, i32 17, !dbg !7698
  %419 = load i32, i32* %418, align 8, !dbg !7698, !tbaa !891
  tail call void @replicationSetMaster(i8* nonnull %417, i32 %419) #8, !dbg !7699
  br label %420, !dbg !7700

; <label>:420:                                    ; preds = %411, %407, %416, %394
  %421 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7701, !tbaa !784
  %422 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %421, i64 0, i32 17, !dbg !7703
  %423 = load i64, i64* %422, align 8, !dbg !7703, !tbaa !1950
  %424 = icmp eq i64 %423, 0, !dbg !7704
  br i1 %424, label %444, label %425, !dbg !7705

; <label>:425:                                    ; preds = %420
  %426 = tail call i64 @mstime() #8, !dbg !7706
  %427 = icmp slt i64 %423, %426, !dbg !7707
  br i1 %427, label %428, label %444, !dbg !7708

; <label>:428:                                    ; preds = %425
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.93, i64 0, i64 0)) #8, !dbg !7709
  %429 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7710, !tbaa !784
  %430 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %429, i64 0, i32 17, !dbg !7712
  %431 = load i64, i64* %430, align 8, !dbg !7712, !tbaa !1950
  %432 = icmp eq i64 %431, 0, !dbg !7713
  br i1 %432, label %438, label %433, !dbg !7714

; <label>:433:                                    ; preds = %428
  %434 = tail call i32 @clientsArePaused() #8, !dbg !7715
  %435 = icmp eq i32 %434, 0, !dbg !7715
  br i1 %435, label %438, label %436, !dbg !7716

; <label>:436:                                    ; preds = %433
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !7717, !tbaa !2134
  %437 = tail call i32 @clientsArePaused() #8, !dbg !7718
  br label %438, !dbg !7719

; <label>:438:                                    ; preds = %436, %433, %428
  %439 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7720, !tbaa !784
  %440 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %439, i64 0, i32 17, !dbg !7721
  store i64 0, i64* %440, align 8, !dbg !7722, !tbaa !1950
  %441 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %439, i64 0, i32 20, !dbg !7723
  store i32 0, i32* %441, align 8, !dbg !7724, !tbaa !1953
  %442 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %439, i64 0, i32 18, !dbg !7725
  store %struct.clusterNode* null, %struct.clusterNode** %442, align 8, !dbg !7726, !tbaa !1956
  %443 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %439, i64 0, i32 19, !dbg !7727
  store i64 0, i64* %443, align 8, !dbg !7728, !tbaa !1959
  br label %444, !dbg !7729

; <label>:444:                                    ; preds = %420, %425, %438
  %445 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7730, !tbaa !757
  %446 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %445, i64 0, i32 2, !dbg !7730
  %447 = load i32, i32* %446, align 8, !dbg !7730, !tbaa !918
  %448 = and i32 %447, 2, !dbg !7730
  %449 = icmp eq i32 %448, 0, !dbg !7730
  br i1 %449, label %481, label %450, !dbg !7732

; <label>:450:                                    ; preds = %444
  %451 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7733, !tbaa !784
  %452 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %451, i64 0, i32 17, !dbg !7736
  %453 = load i64, i64* %452, align 8, !dbg !7736, !tbaa !1950
  %454 = icmp eq i64 %453, 0, !dbg !7737
  br i1 %454, label %469, label %455, !dbg !7738

; <label>:455:                                    ; preds = %450
  %456 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %451, i64 0, i32 20, !dbg !7739
  %457 = load i32, i32* %456, align 8, !dbg !7739, !tbaa !1953
  %458 = icmp eq i32 %457, 0, !dbg !7740
  br i1 %458, label %459, label %469, !dbg !7741

; <label>:459:                                    ; preds = %455
  %460 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %451, i64 0, i32 19, !dbg !7742
  %461 = load i64, i64* %460, align 8, !dbg !7742, !tbaa !1959
  %462 = icmp eq i64 %461, 0, !dbg !7743
  br i1 %462, label %469, label %463, !dbg !7744

; <label>:463:                                    ; preds = %459
  %464 = tail call i64 @replicationGetSlaveOffset() #8, !dbg !7745
  %465 = icmp eq i64 %461, %464, !dbg !7746
  br i1 %465, label %466, label %469, !dbg !7747

; <label>:466:                                    ; preds = %463
  %467 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7748, !tbaa !784
  %468 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %467, i64 0, i32 20, !dbg !7749
  store i32 1, i32* %468, align 8, !dbg !7750, !tbaa !1953
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.94, i64 0, i64 0)) #8, !dbg !7751
  br label %469, !dbg !7752

; <label>:469:                                    ; preds = %450, %455, %459, %463, %466
  %470 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7753, !tbaa !4226
  %471 = and i32 %470, 2, !dbg !7755
  %472 = icmp eq i32 %471, 0, !dbg !7755
  br i1 %472, label %473, label %474, !dbg !7756

; <label>:473:                                    ; preds = %469
  tail call void @clusterHandleSlaveFailover() #12, !dbg !7757
  br label %474, !dbg !7757

; <label>:474:                                    ; preds = %469, %473
  %475 = icmp ne i32 %397, 0, !dbg !7758
  %476 = icmp sgt i32 %396, 1, !dbg !7760
  %477 = and i1 %476, %475, !dbg !7761
  %478 = icmp eq i32 %395, %396, !dbg !7762
  %479 = and i1 %478, %477, !dbg !7761
  br i1 %479, label %480, label %481, !dbg !7761

; <label>:480:                                    ; preds = %474
  tail call void @clusterHandleSlaveMigration(i32 %395) #12, !dbg !7763
  br label %481, !dbg !7763

; <label>:481:                                    ; preds = %444, %474, %480
  %482 = icmp eq i32 %398, 0, !dbg !7764
  br i1 %482, label %483, label %488, !dbg !7766

; <label>:483:                                    ; preds = %481
  %484 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7767, !tbaa !784
  %485 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %484, i64 0, i32 2, !dbg !7768
  %486 = load i32, i32* %485, align 8, !dbg !7768, !tbaa !1749
  %487 = icmp eq i32 %486, 1, !dbg !7769
  br i1 %487, label %488, label %489, !dbg !7770

; <label>:488:                                    ; preds = %481, %483
  tail call void @clusterUpdateState() #12, !dbg !7771
  br label %489, !dbg !7771

; <label>:489:                                    ; preds = %488, %483
  ret void, !dbg !7772

; <label>:490:                                    ; preds = %169
  %491 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %178, i64 0, i32 9, !dbg !7524
  %492 = load i64, i64* %491, align 8, !dbg !7524, !tbaa !1060
  %493 = icmp eq i64 %492, 0, !dbg !7525
  br i1 %493, label %494, label %507, !dbg !7526

; <label>:494:                                    ; preds = %490
  %495 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %178, i64 0, i32 2, !dbg !7527
  %496 = load i32, i32* %495, align 8, !dbg !7527, !tbaa !918
  %497 = and i32 %496, 48, !dbg !7529
  %498 = icmp eq i32 %497, 0, !dbg !7529
  br i1 %498, label %499, label %507, !dbg !7530

; <label>:499:                                    ; preds = %494
  %500 = icmp eq %struct.clusterNode* %170, null, !dbg !7773
  %501 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %178, i64 0, i32 10
  %502 = load i64, i64* %501, align 8, !dbg !7774, !tbaa !1069
  %503 = icmp sgt i64 %171, %502, !dbg !7775
  %504 = or i1 %500, %503, !dbg !7776
  %505 = select i1 %504, %struct.clusterNode* %178, %struct.clusterNode* %170, !dbg !7776
  %506 = select i1 %504, i64 %502, i64 %171, !dbg !7776
  br label %507, !dbg !7776

; <label>:507:                                    ; preds = %499, %494, %490, %169
  %508 = phi %struct.clusterNode* [ %170, %490 ], [ %170, %169 ], [ %170, %494 ], [ %505, %499 ], !dbg !7535
  %509 = phi i64 [ %171, %490 ], [ %171, %169 ], [ %171, %494 ], [ %506, %499 ], !dbg !7535
  %510 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7515, !tbaa !784
  %511 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %510, i64 0, i32 4, !dbg !7516
  %512 = load %struct.dict*, %struct.dict** %511, align 8, !dbg !7516, !tbaa !832
  %513 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %512) #8, !dbg !7517
  %514 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %513, i64 0, i32 1, i32 0, !dbg !7518
  %515 = bitcast i8** %514 to %struct.clusterNode**, !dbg !7518
  %516 = load %struct.clusterNode*, %struct.clusterNode** %515, align 8, !dbg !7518, !tbaa !745
  %517 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %516, i64 0, i32 19, !dbg !7520
  %518 = load %struct.clusterLink*, %struct.clusterLink** %517, align 8, !dbg !7520, !tbaa !1153
  %519 = icmp eq %struct.clusterLink* %518, null, !dbg !7522
  br i1 %519, label %537, label %520, !dbg !7523

; <label>:520:                                    ; preds = %507
  %521 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %516, i64 0, i32 9, !dbg !7524
  %522 = load i64, i64* %521, align 8, !dbg !7524, !tbaa !1060
  %523 = icmp eq i64 %522, 0, !dbg !7525
  br i1 %523, label %524, label %537, !dbg !7526

; <label>:524:                                    ; preds = %520
  %525 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %516, i64 0, i32 2, !dbg !7527
  %526 = load i32, i32* %525, align 8, !dbg !7527, !tbaa !918
  %527 = and i32 %526, 48, !dbg !7529
  %528 = icmp eq i32 %527, 0, !dbg !7529
  br i1 %528, label %529, label %537, !dbg !7530

; <label>:529:                                    ; preds = %524
  %530 = icmp eq %struct.clusterNode* %508, null, !dbg !7773
  %531 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %516, i64 0, i32 10
  %532 = load i64, i64* %531, align 8, !dbg !7774, !tbaa !1069
  %533 = icmp sgt i64 %509, %532, !dbg !7775
  %534 = or i1 %530, %533, !dbg !7776
  %535 = select i1 %534, %struct.clusterNode* %516, %struct.clusterNode* %508, !dbg !7776
  %536 = select i1 %534, i64 %532, i64 %509, !dbg !7776
  br label %537, !dbg !7776

; <label>:537:                                    ; preds = %529, %524, %520, %507
  %538 = phi %struct.clusterNode* [ %508, %520 ], [ %508, %507 ], [ %508, %524 ], [ %535, %529 ], !dbg !7535
  %539 = phi i64 [ %509, %520 ], [ %509, %507 ], [ %509, %524 ], [ %536, %529 ], !dbg !7535
  %540 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7515, !tbaa !784
  %541 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %540, i64 0, i32 4, !dbg !7516
  %542 = load %struct.dict*, %struct.dict** %541, align 8, !dbg !7516, !tbaa !832
  %543 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %542) #8, !dbg !7517
  %544 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %543, i64 0, i32 1, i32 0, !dbg !7518
  %545 = bitcast i8** %544 to %struct.clusterNode**, !dbg !7518
  %546 = load %struct.clusterNode*, %struct.clusterNode** %545, align 8, !dbg !7518, !tbaa !745
  %547 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %546, i64 0, i32 19, !dbg !7520
  %548 = load %struct.clusterLink*, %struct.clusterLink** %547, align 8, !dbg !7520, !tbaa !1153
  %549 = icmp eq %struct.clusterLink* %548, null, !dbg !7522
  br i1 %549, label %567, label %550, !dbg !7523

; <label>:550:                                    ; preds = %537
  %551 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %546, i64 0, i32 9, !dbg !7524
  %552 = load i64, i64* %551, align 8, !dbg !7524, !tbaa !1060
  %553 = icmp eq i64 %552, 0, !dbg !7525
  br i1 %553, label %554, label %567, !dbg !7526

; <label>:554:                                    ; preds = %550
  %555 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %546, i64 0, i32 2, !dbg !7527
  %556 = load i32, i32* %555, align 8, !dbg !7527, !tbaa !918
  %557 = and i32 %556, 48, !dbg !7529
  %558 = icmp eq i32 %557, 0, !dbg !7529
  br i1 %558, label %559, label %567, !dbg !7530

; <label>:559:                                    ; preds = %554
  %560 = icmp eq %struct.clusterNode* %538, null, !dbg !7773
  %561 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %546, i64 0, i32 10
  %562 = load i64, i64* %561, align 8, !dbg !7774, !tbaa !1069
  %563 = icmp sgt i64 %539, %562, !dbg !7775
  %564 = or i1 %560, %563, !dbg !7776
  %565 = select i1 %564, %struct.clusterNode* %546, %struct.clusterNode* %538, !dbg !7776
  %566 = select i1 %564, i64 %562, i64 %539, !dbg !7776
  br label %567, !dbg !7776

; <label>:567:                                    ; preds = %559, %554, %550, %537
  %568 = phi %struct.clusterNode* [ %538, %550 ], [ %538, %537 ], [ %538, %554 ], [ %565, %559 ], !dbg !7535
  %569 = phi i64 [ %539, %550 ], [ %539, %537 ], [ %539, %554 ], [ %566, %559 ], !dbg !7535
  %570 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7515, !tbaa !784
  %571 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %570, i64 0, i32 4, !dbg !7516
  %572 = load %struct.dict*, %struct.dict** %571, align 8, !dbg !7516, !tbaa !832
  %573 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %572) #8, !dbg !7517
  %574 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %573, i64 0, i32 1, i32 0, !dbg !7518
  %575 = bitcast i8** %574 to %struct.clusterNode**, !dbg !7518
  %576 = load %struct.clusterNode*, %struct.clusterNode** %575, align 8, !dbg !7518, !tbaa !745
  %577 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %576, i64 0, i32 19, !dbg !7520
  %578 = load %struct.clusterLink*, %struct.clusterLink** %577, align 8, !dbg !7520, !tbaa !1153
  %579 = icmp eq %struct.clusterLink* %578, null, !dbg !7522
  br i1 %579, label %596, label %580, !dbg !7523

; <label>:580:                                    ; preds = %567
  %581 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %576, i64 0, i32 9, !dbg !7524
  %582 = load i64, i64* %581, align 8, !dbg !7524, !tbaa !1060
  %583 = icmp eq i64 %582, 0, !dbg !7525
  br i1 %583, label %584, label %596, !dbg !7526

; <label>:584:                                    ; preds = %580
  %585 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %576, i64 0, i32 2, !dbg !7527
  %586 = load i32, i32* %585, align 8, !dbg !7527, !tbaa !918
  %587 = and i32 %586, 48, !dbg !7529
  %588 = icmp eq i32 %587, 0, !dbg !7529
  br i1 %588, label %589, label %596, !dbg !7530

; <label>:589:                                    ; preds = %584
  %590 = icmp eq %struct.clusterNode* %568, null, !dbg !7773
  br i1 %590, label %595, label %591, !dbg !7776

; <label>:591:                                    ; preds = %589
  %592 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %576, i64 0, i32 10, !dbg !7777
  %593 = load i64, i64* %592, align 8, !dbg !7777, !tbaa !1069
  %594 = icmp sgt i64 %569, %593, !dbg !7775
  br i1 %594, label %595, label %182, !dbg !7778

; <label>:595:                                    ; preds = %589, %591
  br label %182, !dbg !7534

; <label>:596:                                    ; preds = %584, %580, %567
  %597 = icmp eq %struct.clusterNode* %568, null, !dbg !7779
  br i1 %597, label %187, label %182, !dbg !7780
}

; Function Attrs: noredzone
declare dso_local i8* @zstrdup(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetTcpNonBlockBindConnect(i8*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterBeforeSleep() local_unnamed_addr #0 !dbg !7781 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7786, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 22, !dbg !7788
  %3 = load i32, i32* %2, align 8, !dbg !7788, !tbaa !1465
  %4 = and i32 %3, 1, !dbg !7789
  %5 = icmp eq i32 %4, 0, !dbg !7789
  br i1 %5, label %10, label %6, !dbg !7790

; <label>:6:                                      ; preds = %0
  tail call void @clusterHandleSlaveFailover() #12, !dbg !7791
  %7 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7792, !tbaa !784
  %8 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %7, i64 0, i32 22
  %9 = load i32, i32* %8, align 8, !dbg !7794, !tbaa !1465
  br label %10, !dbg !7791

; <label>:10:                                     ; preds = %0, %6
  %11 = phi i32* [ %2, %0 ], [ %8, %6 ], !dbg !7794
  %12 = phi i32 [ %3, %0 ], [ %9, %6 ], !dbg !7794
  %13 = and i32 %12, 2, !dbg !7795
  %14 = icmp eq i32 %13, 0, !dbg !7795
  br i1 %14, label %19, label %15, !dbg !7796

; <label>:15:                                     ; preds = %10
  tail call void @clusterUpdateState() #12, !dbg !7797
  %16 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7798, !tbaa !784
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %16, i64 0, i32 22
  %18 = load i32, i32* %17, align 8, !dbg !7799, !tbaa !1465
  br label %19, !dbg !7797

; <label>:19:                                     ; preds = %10, %15
  %20 = phi i32* [ %11, %10 ], [ %17, %15 ], !dbg !7799
  %21 = phi i32 [ %12, %10 ], [ %18, %15 ], !dbg !7799
  %22 = and i32 %21, 4, !dbg !7800
  %23 = icmp eq i32 %22, 0, !dbg !7800
  br i1 %23, label %32, label %24, !dbg !7801

; <label>:24:                                     ; preds = %19
  %25 = and i32 %21, 8, !dbg !7802
  %26 = tail call i32 @clusterSaveConfig(i32 %25) #8, !dbg !7806
  %27 = icmp eq i32 %26, -1, !dbg !7807
  br i1 %27, label %31, label %28, !dbg !7808

; <label>:28:                                     ; preds = %24
  %29 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7809, !tbaa !784
  %30 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %29, i64 0, i32 22, !dbg !7810
  br label %32, !dbg !7808

; <label>:31:                                     ; preds = %24
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #8, !dbg !7811
  tail call void @exit(i32 1) #10, !dbg !7812
  unreachable, !dbg !7812

; <label>:32:                                     ; preds = %28, %19
  %33 = phi i32* [ %30, %28 ], [ %20, %19 ], !dbg !7810
  store i32 0, i32* %33, align 8, !dbg !7813, !tbaa !1465
  ret void, !dbg !7814
}

; Function Attrs: noredzone nounwind
define dso_local void @bitmapSetBit(i8* nocapture, i32) local_unnamed_addr #0 !dbg !7815 {
  %3 = sdiv i32 %1, 8, !dbg !7823
  %4 = sext i32 %3 to i64, !dbg !7824
  %5 = and i32 %1, 7, !dbg !7826
  %6 = shl i32 1, %5, !dbg !7828
  %7 = getelementptr inbounds i8, i8* %0, i64 %4, !dbg !7829
  %8 = load i8, i8* %7, align 1, !dbg !7830, !tbaa !745
  %9 = trunc i32 %6 to i8, !dbg !7830
  %10 = or i8 %8, %9, !dbg !7830
  store i8 %10, i8* %7, align 1, !dbg !7830, !tbaa !745
  ret void, !dbg !7831
}

; Function Attrs: noredzone nounwind
define dso_local void @bitmapClearBit(i8* nocapture, i32) local_unnamed_addr #0 !dbg !2235 {
  %3 = sdiv i32 %1, 8, !dbg !7834
  %4 = sext i32 %3 to i64, !dbg !7835
  %5 = and i32 %1, 7, !dbg !7837
  %6 = shl i32 1, %5, !dbg !7839
  %7 = getelementptr inbounds i8, i8* %0, i64 %4, !dbg !7840
  %8 = load i8, i8* %7, align 1, !dbg !7841, !tbaa !745
  %9 = trunc i32 %6 to i8, !dbg !7841
  %10 = xor i8 %9, -1, !dbg !7841
  %11 = and i8 %8, %10, !dbg !7841
  store i8 %11, i8* %7, align 1, !dbg !7841, !tbaa !745
  ret void, !dbg !7842
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterMastersHaveSlaves() local_unnamed_addr #0 !dbg !7843 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7850, !tbaa !784
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 4, !dbg !7851
  %3 = load %struct.dict*, %struct.dict** %2, align 8, !dbg !7851, !tbaa !832
  %4 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %3) #8, !dbg !7852
  %5 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #8, !dbg !7855
  %6 = icmp eq %struct.dictEntry* %5, null, !dbg !7857
  br i1 %6, label %25, label %7, !dbg !7858

; <label>:7:                                      ; preds = %0, %21
  %8 = phi %struct.dictEntry* [ %23, %21 ], [ %5, %0 ]
  %9 = phi i32 [ %22, %21 ], [ 0, %0 ]
  %10 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %8, i64 0, i32 1, i32 0, !dbg !7859
  %11 = bitcast i8** %10 to %struct.clusterNode**, !dbg !7859
  %12 = load %struct.clusterNode*, %struct.clusterNode** %11, align 8, !dbg !7859, !tbaa !745
  %13 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %12, i64 0, i32 2, !dbg !7861
  %14 = load i32, i32* %13, align 8, !dbg !7861, !tbaa !918
  %15 = and i32 %14, 2, !dbg !7861
  %16 = icmp eq i32 %15, 0, !dbg !7861
  br i1 %16, label %17, label %21, !dbg !7863, !llvm.loop !7864

; <label>:17:                                     ; preds = %7
  %18 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %12, i64 0, i32 6, !dbg !7866
  %19 = load i32, i32* %18, align 4, !dbg !7866, !tbaa !1027
  %20 = add nsw i32 %19, %9, !dbg !7867
  br label %21, !dbg !7865

; <label>:21:                                     ; preds = %7, %17
  %22 = phi i32 [ %20, %17 ], [ %9, %7 ], !dbg !7868
  %23 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #8, !dbg !7855
  %24 = icmp eq %struct.dictEntry* %23, null, !dbg !7857
  br i1 %24, label %25, label %7, !dbg !7858

; <label>:25:                                     ; preds = %21, %0
  %26 = phi i32 [ 0, %0 ], [ %22, %21 ], !dbg !7854
  tail call void @dictReleaseIterator(%struct.dictIterator* %4) #8, !dbg !7869
  %27 = icmp ne i32 %26, 0, !dbg !7870
  %28 = zext i1 %27 to i32, !dbg !7870
  ret i32 %28, !dbg !7871
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeSetSlotBit(%struct.clusterNode* nocapture, i32) local_unnamed_addr #0 !dbg !7872 {
  %3 = sdiv i32 %1, 8, !dbg !7882
  %4 = sext i32 %3 to i64, !dbg !7883
  %5 = and i32 %1, 7, !dbg !7885
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %4, !dbg !7887
  %7 = load i8, i8* %6, align 1, !dbg !7887, !tbaa !745
  %8 = zext i8 %7 to i32, !dbg !7887
  %9 = shl i32 1, %5, !dbg !7888
  %10 = and i32 %9, %8, !dbg !7889
  %11 = icmp ne i32 %10, 0, !dbg !7890
  %12 = zext i1 %11 to i32, !dbg !7890
  %13 = trunc i32 %9 to i8, !dbg !7897
  %14 = or i8 %7, %13, !dbg !7897
  store i8 %14, i8* %6, align 1, !dbg !7897, !tbaa !745
  br i1 %11, label %52, label %15, !dbg !7898

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5, !dbg !7899
  %17 = load i32, i32* %16, align 8, !dbg !7902, !tbaa !1139
  %18 = add nsw i32 %17, 1, !dbg !7902
  store i32 %18, i32* %16, align 8, !dbg !7902, !tbaa !1139
  %19 = icmp eq i32 %17, 0, !dbg !7903
  br i1 %19, label %20, label %52, !dbg !7905

; <label>:20:                                     ; preds = %15
  %21 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7906, !tbaa !784
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %21, i64 0, i32 4, !dbg !7908
  %23 = load %struct.dict*, %struct.dict** %22, align 8, !dbg !7908, !tbaa !832
  %24 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %23) #8, !dbg !7909
  %25 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %24) #8, !dbg !7912
  %26 = icmp eq %struct.dictEntry* %25, null, !dbg !7914
  br i1 %26, label %27, label %28, !dbg !7915

; <label>:27:                                     ; preds = %20
  tail call void @dictReleaseIterator(%struct.dictIterator* %24) #8, !dbg !7916
  br label %52, !dbg !7917

; <label>:28:                                     ; preds = %20, %42
  %29 = phi %struct.dictEntry* [ %44, %42 ], [ %25, %20 ]
  %30 = phi i32 [ %43, %42 ], [ 0, %20 ]
  %31 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %29, i64 0, i32 1, i32 0, !dbg !7918
  %32 = bitcast i8** %31 to %struct.clusterNode**, !dbg !7918
  %33 = load %struct.clusterNode*, %struct.clusterNode** %32, align 8, !dbg !7918, !tbaa !745
  %34 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %33, i64 0, i32 2, !dbg !7920
  %35 = load i32, i32* %34, align 8, !dbg !7920, !tbaa !918
  %36 = and i32 %35, 2, !dbg !7920
  %37 = icmp eq i32 %36, 0, !dbg !7920
  br i1 %37, label %38, label %42, !dbg !7921, !llvm.loop !7864

; <label>:38:                                     ; preds = %28
  %39 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %33, i64 0, i32 6, !dbg !7922
  %40 = load i32, i32* %39, align 4, !dbg !7922, !tbaa !1027
  %41 = add nsw i32 %40, %30, !dbg !7923
  br label %42, !dbg !7924

; <label>:42:                                     ; preds = %38, %28
  %43 = phi i32 [ %41, %38 ], [ %30, %28 ], !dbg !7925
  %44 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %24) #8, !dbg !7912
  %45 = icmp eq %struct.dictEntry* %44, null, !dbg !7914
  br i1 %45, label %46, label %28, !dbg !7915

; <label>:46:                                     ; preds = %42
  tail call void @dictReleaseIterator(%struct.dictIterator* %24) #8, !dbg !7916
  %47 = icmp eq i32 %43, 0, !dbg !7926
  br i1 %47, label %52, label %48, !dbg !7917

; <label>:48:                                     ; preds = %46
  %49 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !7927
  %50 = load i32, i32* %49, align 8, !dbg !7928, !tbaa !918
  %51 = or i32 %50, 256, !dbg !7928
  store i32 %51, i32* %49, align 8, !dbg !7928, !tbaa !918
  br label %52, !dbg !7929

; <label>:52:                                     ; preds = %27, %2, %46, %15, %48
  ret i32 %12, !dbg !7930
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeClearSlotBit(%struct.clusterNode* nocapture, i32) local_unnamed_addr #0 !dbg !2209 {
  %3 = sdiv i32 %1, 8, !dbg !7936
  %4 = sext i32 %3 to i64, !dbg !7937
  %5 = and i32 %1, 7, !dbg !7939
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %4, !dbg !7941
  %7 = load i8, i8* %6, align 1, !dbg !7941, !tbaa !745
  %8 = zext i8 %7 to i32, !dbg !7941
  %9 = shl i32 1, %5, !dbg !7942
  %10 = and i32 %9, %8, !dbg !7943
  %11 = icmp ne i32 %10, 0, !dbg !7944
  %12 = zext i1 %11 to i32, !dbg !7944
  %13 = trunc i32 %9 to i8, !dbg !7951
  %14 = xor i8 %13, -1, !dbg !7951
  %15 = and i8 %7, %14, !dbg !7951
  store i8 %15, i8* %6, align 1, !dbg !7951, !tbaa !745
  br i1 %11, label %16, label %20, !dbg !7952

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5, !dbg !7953
  %18 = load i32, i32* %17, align 8, !dbg !7954, !tbaa !1139
  %19 = add nsw i32 %18, -1, !dbg !7954
  store i32 %19, i32* %17, align 8, !dbg !7954, !tbaa !1139
  br label %20, !dbg !7955

; <label>:20:                                     ; preds = %2, %16
  ret i32 %12, !dbg !7956
}

; Function Attrs: noredzone nounwind
define dso_local i32 @verifyClusterConfigWithData() local_unnamed_addr #0 !dbg !7957 {
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7962, !tbaa !4226
  %2 = and i32 %1, 4, !dbg !7964
  %3 = icmp eq i32 %2, 0, !dbg !7964
  br i1 %3, label %4, label %76, !dbg !7965

; <label>:4:                                      ; preds = %0
  %5 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7966, !tbaa !757
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 2, !dbg !7966
  %7 = load i32, i32* %6, align 8, !dbg !7966, !tbaa !918
  %8 = and i32 %7, 2, !dbg !7966
  %9 = icmp eq i32 %8, 0, !dbg !7966
  br i1 %9, label %10, label %76, !dbg !7968

; <label>:10:                                     ; preds = %4
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !7970, !tbaa !7973
  %12 = icmp sgt i32 %11, 1, !dbg !7974
  br i1 %12, label %14, label %13, !dbg !7975

; <label>:13:                                     ; preds = %17, %10
  br label %30, !dbg !7976

; <label>:14:                                     ; preds = %10
  %15 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !tbaa !7981
  %16 = sext i32 %11 to i64, !dbg !7975
  br label %19, !dbg !7975

; <label>:17:                                     ; preds = %19
  %18 = icmp slt i64 %29, %16, !dbg !7974
  br i1 %18, label %19, label %13, !dbg !7975, !llvm.loop !7982

; <label>:19:                                     ; preds = %14, %17
  %20 = phi i64 [ 1, %14 ], [ %29, %17 ]
  %21 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %15, i64 %20, i32 0, !dbg !7984
  %22 = load %struct.dict*, %struct.dict** %21, align 8, !dbg !7984, !tbaa !7987
  %23 = getelementptr inbounds %struct.dict, %struct.dict* %22, i64 0, i32 2, i64 0, i32 3, !dbg !7984
  %24 = load i64, i64* %23, align 8, !dbg !7984, !tbaa !5164
  %25 = getelementptr inbounds %struct.dict, %struct.dict* %22, i64 0, i32 2, i64 1, i32 3, !dbg !7984
  %26 = load i64, i64* %25, align 8, !dbg !7984, !tbaa !5164
  %27 = sub i64 0, %26, !dbg !7984
  %28 = icmp eq i64 %24, %27, !dbg !7984
  %29 = add nuw nsw i64 %20, 1, !dbg !7989
  br i1 %28, label %17, label %76, !dbg !7990

; <label>:30:                                     ; preds = %13, %66
  %31 = phi i64 [ %68, %66 ], [ 0, %13 ]
  %32 = phi i32 [ %67, %66 ], [ 0, %13 ]
  %33 = trunc i64 %31 to i32, !dbg !7976
  %34 = tail call i32 @countKeysInSlot(i32 %33) #8, !dbg !7976
  %35 = icmp eq i32 %34, 0, !dbg !7976
  br i1 %35, label %66, label %36, !dbg !7991

; <label>:36:                                     ; preds = %30
  %37 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7992, !tbaa !784
  %38 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %37, i64 0, i32 8, i64 %31, !dbg !7994
  %39 = load %struct.clusterNode*, %struct.clusterNode** %38, align 8, !dbg !7994, !tbaa !757
  %40 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7995, !tbaa !757
  %41 = icmp eq %struct.clusterNode* %39, %40, !dbg !7996
  br i1 %41, label %66, label %42, !dbg !7997

; <label>:42:                                     ; preds = %36
  %43 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %37, i64 0, i32 7, i64 %31, !dbg !7998
  %44 = load %struct.clusterNode*, %struct.clusterNode** %43, align 8, !dbg !7998, !tbaa !757
  %45 = icmp eq %struct.clusterNode* %44, null, !dbg !7999
  br i1 %45, label %46, label %66, !dbg !8000

; <label>:46:                                     ; preds = %42
  %47 = add nsw i32 %32, 1, !dbg !8001
  %48 = icmp eq %struct.clusterNode* %39, null, !dbg !8002
  br i1 %48, label %49, label %59, !dbg !8004

; <label>:49:                                     ; preds = %46
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.102, i64 0, i64 0), i32 %33) #8, !dbg !8005
  %50 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8007, !tbaa !757
  %51 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8011, !tbaa !784
  %52 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %51, i64 0, i32 8, i64 %31, !dbg !8012
  %53 = load %struct.clusterNode*, %struct.clusterNode** %52, align 8, !dbg !8012, !tbaa !757
  %54 = icmp eq %struct.clusterNode* %53, null, !dbg !8012
  br i1 %54, label %55, label %66, !dbg !8013

; <label>:55:                                     ; preds = %49
  %56 = tail call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %50, i32 %33) #8, !dbg !8014
  %57 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8015, !tbaa !784
  %58 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %57, i64 0, i32 8, i64 %31, !dbg !8016
  store %struct.clusterNode* %50, %struct.clusterNode** %58, align 8, !dbg !8017, !tbaa !757
  br label %66, !dbg !8018

; <label>:59:                                     ; preds = %46
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.103, i64 0, i64 0), i32 %33) #8, !dbg !8019
  %60 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8021, !tbaa !784
  %61 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %60, i64 0, i32 8, i64 %31, !dbg !8022
  %62 = bitcast %struct.clusterNode** %61 to i64*, !dbg !8022
  %63 = load i64, i64* %62, align 8, !dbg !8022, !tbaa !757
  %64 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %60, i64 0, i32 7, i64 %31, !dbg !8023
  %65 = bitcast %struct.clusterNode** %64 to i64*, !dbg !8024
  store i64 %63, i64* %65, align 8, !dbg !8024, !tbaa !757
  br label %66

; <label>:66:                                     ; preds = %55, %49, %42, %30, %59, %36
  %67 = phi i32 [ %32, %36 ], [ %32, %42 ], [ %47, %59 ], [ %32, %30 ], [ %47, %49 ], [ %47, %55 ], !dbg !8025
  %68 = add nuw nsw i64 %31, 1, !dbg !8026
  %69 = icmp eq i64 %68, 16384, !dbg !8027
  br i1 %69, label %70, label %30, !dbg !8028, !llvm.loop !8029

; <label>:70:                                     ; preds = %66
  %71 = icmp eq i32 %67, 0, !dbg !8031
  br i1 %71, label %76, label %72, !dbg !8033

; <label>:72:                                     ; preds = %70
  %73 = tail call i32 @clusterSaveConfig(i32 1) #8, !dbg !8036
  %74 = icmp eq i32 %73, -1, !dbg !8037
  br i1 %74, label %75, label %76, !dbg !8038

; <label>:75:                                     ; preds = %72
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #8, !dbg !8039
  tail call void @exit(i32 1) #10, !dbg !8040
  unreachable, !dbg !8040

; <label>:76:                                     ; preds = %19, %72, %70, %4, %0
  %77 = phi i32 [ 0, %0 ], [ 0, %4 ], [ 0, %70 ], [ 0, %72 ], [ -1, %19 ], !dbg !8025
  ret i32 %77, !dbg !8041
}

; Function Attrs: noredzone
declare dso_local i8* @sdscat(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sdsIncrLen(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i8* @clusterGenNodeDescription(%struct.clusterNode*) local_unnamed_addr #0 !dbg !8042 {
  %2 = tail call i8* @sdsempty() #8, !dbg !8055
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !8056
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 16, i64 0, !dbg !8057
  %5 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 17, !dbg !8058
  %6 = load i32, i32* %5, align 8, !dbg !8058, !tbaa !891
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 18, !dbg !8059
  %8 = load i32, i32* %7, align 4, !dbg !8059, !tbaa !898
  %9 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0), i8* nonnull %3, i8* nonnull %4, i32 %6, i32 %8) #8, !dbg !8060
  %10 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !8062
  %11 = load i32, i32* %10, align 8, !dbg !8062, !tbaa !918
  %12 = trunc i32 %11 to i16, !dbg !8063
  %13 = tail call i8* @representClusterNodeFlags(i8* %9, i16 zeroext %12) #12, !dbg !8064
  %14 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 8, !dbg !8065
  %15 = load %struct.clusterNode*, %struct.clusterNode** %14, align 8, !dbg !8065, !tbaa !1012
  %16 = icmp eq %struct.clusterNode* %15, null, !dbg !8067
  br i1 %16, label %20, label %17, !dbg !8068

; <label>:17:                                     ; preds = %1
  %18 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %15, i64 0, i32 1, i64 0, !dbg !8069
  %19 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.108, i64 0, i64 0), i8* nonnull %18) #8, !dbg !8070
  br label %22, !dbg !8071

; <label>:20:                                     ; preds = %1
  %21 = tail call i8* @sdscatlen(i8* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i64 0, i64 0), i64 3) #8, !dbg !8072
  br label %22

; <label>:22:                                     ; preds = %20, %17
  %23 = phi i8* [ %19, %17 ], [ %21, %20 ], !dbg !8073
  %24 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 9, !dbg !8074
  %25 = load i64, i64* %24, align 8, !dbg !8074, !tbaa !1060
  %26 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 10, !dbg !8075
  %27 = load i64, i64* %26, align 8, !dbg !8075, !tbaa !1069
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 3, !dbg !8076
  %29 = load i64, i64* %28, align 8, !dbg !8076, !tbaa !1075
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !8077
  %31 = load %struct.clusterLink*, %struct.clusterLink** %30, align 8, !dbg !8077, !tbaa !1153
  %32 = icmp eq %struct.clusterLink* %31, null, !dbg !8078
  br i1 %32, label %33, label %38, !dbg !8079

; <label>:33:                                     ; preds = %22
  %34 = load i32, i32* %10, align 8, !dbg !8080, !tbaa !918
  %35 = and i32 %34, 16, !dbg !8081
  %36 = icmp eq i32 %35, 0, !dbg !8079
  %37 = select i1 %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), !dbg !8079
  br label %38, !dbg !8079

; <label>:38:                                     ; preds = %22, %33
  %39 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), %22 ], [ %37, %33 ]
  %40 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.110, i64 0, i64 0), i64 %25, i64 %27, i64 %29, i8* %39) #8, !dbg !8082
  br label %41, !dbg !8085

; <label>:41:                                     ; preds = %38, %72
  %42 = phi i32 [ 0, %38 ], [ %76, %72 ]
  %43 = phi i8* [ %40, %38 ], [ %74, %72 ]
  %44 = phi i32 [ -1, %38 ], [ %73, %72 ]
  %45 = sdiv i32 %42, 8, !dbg !8093
  %46 = sext i32 %45 to i64, !dbg !8094
  %47 = and i32 %42, 7, !dbg !8096
  %48 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %46, !dbg !8098
  %49 = load i8, i8* %48, align 1, !dbg !8098, !tbaa !745
  %50 = zext i8 %49 to i32, !dbg !8098
  %51 = shl i32 1, %47, !dbg !8099
  %52 = and i32 %51, %50, !dbg !8100
  %53 = icmp ne i32 %52, 0, !dbg !8101
  %54 = icmp eq i32 %44, -1, !dbg !8102
  %55 = and i1 %54, %53, !dbg !8105
  %56 = select i1 %55, i32 %42, i32 %44, !dbg !8105
  %57 = icmp eq i32 %56, -1, !dbg !8106
  br i1 %57, label %72, label %58, !dbg !8108

; <label>:58:                                     ; preds = %41
  %59 = xor i1 %53, true, !dbg !8109
  %60 = icmp eq i32 %42, 16383, !dbg !8110
  %61 = or i1 %60, %59, !dbg !8111
  br i1 %61, label %62, label %72, !dbg !8111

; <label>:62:                                     ; preds = %58
  %63 = and i1 %60, %53, !dbg !8112
  %64 = zext i1 %63 to i32, !dbg !8112
  %65 = add nsw i32 %42, %64, !dbg !8112
  %66 = add nsw i32 %65, -1, !dbg !8115
  %67 = icmp eq i32 %56, %66, !dbg !8117
  br i1 %67, label %68, label %70, !dbg !8118

; <label>:68:                                     ; preds = %62
  %69 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i64 0, i64 0), i32 %56) #8, !dbg !8119
  br label %72, !dbg !8121

; <label>:70:                                     ; preds = %62
  %71 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i64 0, i64 0), i32 %56, i32 %66) #8, !dbg !8122
  br label %72

; <label>:72:                                     ; preds = %68, %70, %41, %58
  %73 = phi i32 [ %56, %58 ], [ -1, %41 ], [ -1, %70 ], [ -1, %68 ], !dbg !8124
  %74 = phi i8* [ %43, %58 ], [ %43, %41 ], [ %71, %70 ], [ %69, %68 ], !dbg !8125
  %75 = phi i32 [ %42, %58 ], [ %42, %41 ], [ %65, %70 ], [ %65, %68 ], !dbg !8126
  %76 = add nsw i32 %75, 1, !dbg !8127
  %77 = icmp slt i32 %75, 16383, !dbg !8128
  br i1 %77, label %41, label %78, !dbg !8085, !llvm.loop !8129

; <label>:78:                                     ; preds = %72
  %79 = load i32, i32* %10, align 8, !dbg !8131, !tbaa !918
  %80 = and i32 %79, 16, !dbg !8133
  %81 = icmp eq i32 %80, 0, !dbg !8133
  br i1 %81, label %103, label %82, !dbg !8134

; <label>:82:                                     ; preds = %78, %99
  %83 = phi i64 [ %101, %99 ], [ 0, %78 ]
  %84 = phi i8* [ %100, %99 ], [ %74, %78 ]
  %85 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8135, !tbaa !784
  %86 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %85, i64 0, i32 6, i64 %83, !dbg !8141
  %87 = load %struct.clusterNode*, %struct.clusterNode** %86, align 8, !dbg !8141, !tbaa !757
  %88 = icmp eq %struct.clusterNode* %87, null, !dbg !8141
  br i1 %88, label %89, label %93, !dbg !8142

; <label>:89:                                     ; preds = %82
  %90 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %85, i64 0, i32 7, i64 %83, !dbg !8143
  %91 = load %struct.clusterNode*, %struct.clusterNode** %90, align 8, !dbg !8143, !tbaa !757
  %92 = icmp eq %struct.clusterNode* %91, null, !dbg !8143
  br i1 %92, label %99, label %93, !dbg !8145

; <label>:93:                                     ; preds = %89, %82
  %94 = phi %struct.clusterNode* [ %87, %82 ], [ %91, %89 ]
  %95 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115, i64 0, i64 0), %82 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.116, i64 0, i64 0), %89 ]
  %96 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %94, i64 0, i32 1, i64 0, !dbg !8146
  %97 = trunc i64 %83 to i32, !dbg !8146
  %98 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %84, i8* %95, i32 %97, i8* nonnull %96) #8, !dbg !8146
  br label %99, !dbg !8148

; <label>:99:                                     ; preds = %93, %89
  %100 = phi i8* [ %84, %89 ], [ %98, %93 ], !dbg !8125
  %101 = add nuw nsw i64 %83, 1, !dbg !8148
  %102 = icmp eq i64 %101, 16384, !dbg !8149
  br i1 %102, label %103, label %82, !dbg !8150, !llvm.loop !8151

; <label>:103:                                    ; preds = %99, %78
  %104 = phi i8* [ %74, %78 ], [ %100, %99 ], !dbg !8153
  ret i8* %104, !dbg !8154
}

; Function Attrs: noredzone
declare dso_local i8* @sdscatsds(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind readnone
define dso_local i8* @clusterGetMessageTypeString(i32) local_unnamed_addr #7 !dbg !8155 {
  %2 = icmp ult i32 %0, 10, !dbg !8161
  br i1 %2, label %3, label %7, !dbg !8161

; <label>:3:                                      ; preds = %1
  %4 = sext i32 %0 to i64, !dbg !8161
  %5 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.clusterCommand.284, i64 0, i64 %4, !dbg !8161
  %6 = load i8*, i8** %5, align 8, !dbg !8161
  ret i8* %6, !dbg !8161

; <label>:7:                                      ; preds = %1
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.125, i64 0, i64 0), !dbg !8162
}

; Function Attrs: noredzone nounwind
define dso_local i32 @getSlotOrReply(%struct.client*, %struct.redisObject*) local_unnamed_addr #0 !dbg !8163 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !8295
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9, !dbg !8295
  %5 = call i32 @getLongLongFromObject(%struct.redisObject* %1, i64* nonnull %3) #8, !dbg !8297
  %6 = icmp ne i32 %5, 0, !dbg !8299
  %7 = load i64, i64* %3, align 8, !dbg !8300
  %8 = icmp ugt i64 %7, 16383, !dbg !8301
  %9 = or i1 %6, %8, !dbg !8301
  br i1 %9, label %10, label %11, !dbg !8301

; <label>:10:                                     ; preds = %2
  call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i64 0, i64 0)) #8, !dbg !8302
  br label %13, !dbg !8304

; <label>:11:                                     ; preds = %2
  %12 = trunc i64 %7 to i32, !dbg !8305
  br label %13, !dbg !8306

; <label>:13:                                     ; preds = %11, %10
  %14 = phi i32 [ -1, %10 ], [ %12, %11 ], !dbg !8307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9, !dbg !8308
  ret i32 %14, !dbg !8308
}

; Function Attrs: noredzone
declare dso_local i32 @getLongLongFromObject(%struct.redisObject*, i64*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyError(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterReplyMultiBulkSlots(%struct.client*) local_unnamed_addr #0 !dbg !8309 {
  %2 = tail call i8* @addDeferredMultiBulkLength(%struct.client* %0) #8, !dbg !8331
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8333, !tbaa !784
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !8334
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !8334, !tbaa !832
  %6 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %5) #8, !dbg !8335
  %7 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #8, !dbg !8337
  %8 = icmp eq %struct.dictEntry* %7, null, !dbg !8339
  br i1 %8, label %114, label %9, !dbg !8340

; <label>:9:                                      ; preds = %1, %110
  %10 = phi %struct.dictEntry* [ %112, %110 ], [ %7, %1 ]
  %11 = phi i32 [ %111, %110 ], [ 0, %1 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, i32 0, !dbg !8341
  %13 = bitcast i8** %12 to %struct.clusterNode**, !dbg !8341
  %14 = load %struct.clusterNode*, %struct.clusterNode** %13, align 8, !dbg !8341, !tbaa !745
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 2, !dbg !8345
  %16 = load i32, i32* %15, align 8, !dbg !8345, !tbaa !918
  %17 = and i32 %16, 1, !dbg !8345
  %18 = icmp eq i32 %17, 0, !dbg !8345
  br i1 %18, label %110, label %19, !dbg !8347, !llvm.loop !8348

; <label>:19:                                     ; preds = %9
  %20 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 5, !dbg !8350
  %21 = load i32, i32* %20, align 8, !dbg !8350, !tbaa !1139
  %22 = icmp eq i32 %21, 0, !dbg !8351
  br i1 %22, label %110, label %23, !dbg !8352, !llvm.loop !8348

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 16, i64 0
  %25 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 17
  %26 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 1, i64 0
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 6
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 7
  br label %29, !dbg !8353

; <label>:29:                                     ; preds = %23, %104
  %30 = phi i32 [ %11, %23 ], [ %107, %104 ]
  %31 = phi i32 [ 0, %23 ], [ %108, %104 ]
  %32 = phi i32 [ -1, %23 ], [ %105, %104 ]
  %33 = sdiv i32 %31, 8, !dbg !8361
  %34 = sext i32 %33 to i64, !dbg !8362
  %35 = and i32 %31, 7, !dbg !8364
  %36 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 4, i64 %34, !dbg !8366
  %37 = load i8, i8* %36, align 1, !dbg !8366, !tbaa !745
  %38 = zext i8 %37 to i32, !dbg !8366
  %39 = shl i32 1, %35, !dbg !8367
  %40 = and i32 %39, %38, !dbg !8368
  %41 = icmp ne i32 %40, 0, !dbg !8369
  %42 = icmp eq i32 %32, -1, !dbg !8370
  %43 = and i1 %42, %41, !dbg !8373
  %44 = select i1 %43, i32 %31, i32 %32, !dbg !8373
  %45 = icmp eq i32 %44, -1, !dbg !8374
  br i1 %45, label %104, label %46, !dbg !8375

; <label>:46:                                     ; preds = %29
  %47 = xor i1 %41, true, !dbg !8376
  %48 = icmp eq i32 %31, 16383, !dbg !8377
  %49 = or i1 %48, %47, !dbg !8378
  br i1 %49, label %50, label %104, !dbg !8378

; <label>:50:                                     ; preds = %46
  %51 = tail call i8* @addDeferredMultiBulkLength(%struct.client* %0) #8, !dbg !8380
  %52 = and i1 %48, %41, !dbg !8382
  %53 = zext i1 %52 to i32, !dbg !8382
  %54 = add nsw i32 %31, %53, !dbg !8382
  %55 = add nsw i32 %54, -1, !dbg !8384
  %56 = icmp eq i32 %44, %55, !dbg !8386
  %57 = sext i32 %44 to i64, !dbg !8387
  tail call void @addReplyLongLong(%struct.client* %0, i64 %57) #8, !dbg !8387
  br i1 %56, label %58, label %59, !dbg !8389

; <label>:58:                                     ; preds = %50
  tail call void @addReplyLongLong(%struct.client* %0, i64 %57) #8, !dbg !8390
  br label %61, !dbg !8392

; <label>:59:                                     ; preds = %50
  %60 = sext i32 %55 to i64, !dbg !8393
  tail call void @addReplyLongLong(%struct.client* %0, i64 %60) #8, !dbg !8394
  br label %61

; <label>:61:                                     ; preds = %59, %58
  tail call void @addReplyMultiBulkLen(%struct.client* %0, i64 3) #8, !dbg !8395
  tail call void @addReplyBulkCString(%struct.client* %0, i8* nonnull %24) #8, !dbg !8396
  %62 = load i32, i32* %25, align 8, !dbg !8397, !tbaa !891
  %63 = sext i32 %62 to i64, !dbg !8398
  tail call void @addReplyLongLong(%struct.client* %0, i64 %63) #8, !dbg !8399
  tail call void @addReplyBulkCBuffer(%struct.client* %0, i8* nonnull %26, i64 40) #8, !dbg !8400
  %64 = load i32, i32* %27, align 4, !dbg !8402, !tbaa !1027
  %65 = icmp sgt i32 %64, 0, !dbg !8405
  br i1 %65, label %66, label %100, !dbg !8406

; <label>:66:                                     ; preds = %61, %94
  %67 = phi i32 [ %95, %94 ], [ %64, %61 ]
  %68 = phi i64 [ %97, %94 ], [ 0, %61 ]
  %69 = phi i32 [ %96, %94 ], [ 3, %61 ]
  %70 = load %struct.clusterNode**, %struct.clusterNode*** %28, align 8, !dbg !8407, !tbaa !1030
  %71 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %70, i64 %68, !dbg !8407
  %72 = load %struct.clusterNode*, %struct.clusterNode** %71, align 8, !dbg !8407, !tbaa !757
  %73 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %72, i64 0, i32 2, !dbg !8407
  %74 = load i32, i32* %73, align 8, !dbg !8407, !tbaa !918
  %75 = and i32 %74, 8, !dbg !8407
  %76 = icmp eq i32 %75, 0, !dbg !8407
  br i1 %76, label %77, label %94, !dbg !8410

; <label>:77:                                     ; preds = %66
  tail call void @addReplyMultiBulkLen(%struct.client* %0, i64 3) #8, !dbg !8411
  %78 = load %struct.clusterNode**, %struct.clusterNode*** %28, align 8, !dbg !8412, !tbaa !1030
  %79 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %78, i64 %68, !dbg !8413
  %80 = load %struct.clusterNode*, %struct.clusterNode** %79, align 8, !dbg !8413, !tbaa !757
  %81 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %80, i64 0, i32 16, i64 0, !dbg !8413
  tail call void @addReplyBulkCString(%struct.client* %0, i8* nonnull %81) #8, !dbg !8414
  %82 = load %struct.clusterNode**, %struct.clusterNode*** %28, align 8, !dbg !8415, !tbaa !1030
  %83 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %82, i64 %68, !dbg !8416
  %84 = load %struct.clusterNode*, %struct.clusterNode** %83, align 8, !dbg !8416, !tbaa !757
  %85 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %84, i64 0, i32 17, !dbg !8417
  %86 = load i32, i32* %85, align 8, !dbg !8417, !tbaa !891
  %87 = sext i32 %86 to i64, !dbg !8416
  tail call void @addReplyLongLong(%struct.client* %0, i64 %87) #8, !dbg !8418
  %88 = load %struct.clusterNode**, %struct.clusterNode*** %28, align 8, !dbg !8419, !tbaa !1030
  %89 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %88, i64 %68, !dbg !8420
  %90 = load %struct.clusterNode*, %struct.clusterNode** %89, align 8, !dbg !8420, !tbaa !757
  %91 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %90, i64 0, i32 1, i64 0, !dbg !8420
  tail call void @addReplyBulkCBuffer(%struct.client* %0, i8* nonnull %91, i64 40) #8, !dbg !8421
  %92 = add nsw i32 %69, 1, !dbg !8422
  %93 = load i32, i32* %27, align 4, !dbg !8402, !tbaa !1027
  br label %94, !dbg !8423

; <label>:94:                                     ; preds = %66, %77
  %95 = phi i32 [ %67, %66 ], [ %93, %77 ], !dbg !8402
  %96 = phi i32 [ %69, %66 ], [ %92, %77 ], !dbg !8424
  %97 = add nuw nsw i64 %68, 1, !dbg !8425
  %98 = sext i32 %95 to i64, !dbg !8405
  %99 = icmp slt i64 %97, %98, !dbg !8405
  br i1 %99, label %66, label %100, !dbg !8406, !llvm.loop !8426

; <label>:100:                                    ; preds = %94, %61
  %101 = phi i32 [ 3, %61 ], [ %96, %94 ], !dbg !8379
  %102 = sext i32 %101 to i64, !dbg !8428
  tail call void @setDeferredMultiBulkLength(%struct.client* %0, i8* %51, i64 %102) #8, !dbg !8429
  %103 = add nsw i32 %30, 1, !dbg !8430
  br label %104, !dbg !8431

; <label>:104:                                    ; preds = %29, %46, %100
  %105 = phi i32 [ -1, %100 ], [ %44, %46 ], [ -1, %29 ], !dbg !8432
  %106 = phi i32 [ %54, %100 ], [ %31, %46 ], [ %31, %29 ], !dbg !8433
  %107 = phi i32 [ %103, %100 ], [ %30, %46 ], [ %30, %29 ], !dbg !8434
  %108 = add nsw i32 %106, 1, !dbg !8435
  %109 = icmp slt i32 %106, 16383, !dbg !8436
  br i1 %109, label %29, label %110, !dbg !8353, !llvm.loop !8437

; <label>:110:                                    ; preds = %104, %19, %9
  %111 = phi i32 [ %11, %9 ], [ %11, %19 ], [ %107, %104 ], !dbg !8330
  %112 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #8, !dbg !8337
  %113 = icmp eq %struct.dictEntry* %112, null, !dbg !8339
  br i1 %113, label %114, label %9, !dbg !8340

; <label>:114:                                    ; preds = %110, %1
  %115 = phi i32 [ 0, %1 ], [ %111, %110 ], !dbg !8330
  tail call void @dictReleaseIterator(%struct.dictIterator* %6) #8, !dbg !8439
  %116 = sext i32 %115 to i64, !dbg !8440
  tail call void @setDeferredMultiBulkLength(%struct.client* %0, i8* %2, i64 %116) #8, !dbg !8441
  ret void, !dbg !8442
}

; Function Attrs: noredzone
declare dso_local i8* @addDeferredMultiBulkLength(%struct.client*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyLongLong(%struct.client*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyMultiBulkLen(%struct.client*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCString(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCBuffer(%struct.client*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @setDeferredMultiBulkLength(%struct.client*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterCommand(%struct.client*) local_unnamed_addr #0 !dbg !8443 {
  %2 = alloca %struct.clusterMsg, align 16
  %3 = alloca %struct.listIter, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca [23 x i8*], align 16
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !8555, !tbaa !8557
  %14 = icmp eq i32 %13, 0, !dbg !8558
  br i1 %14, label %15, label %16, !dbg !8559

; <label>:15:                                     ; preds = %1
  tail call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.127, i64 0, i64 0)) #8, !dbg !8560
  br label %1211, !dbg !8562

; <label>:16:                                     ; preds = %1
  %17 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !8563
  %18 = load i32, i32* %17, align 8, !dbg !8563, !tbaa !8564
  %19 = icmp eq i32 %18, 2, !dbg !8568
  %20 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9
  %21 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8569, !tbaa !8570
  %22 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 1
  %23 = load %struct.redisObject*, %struct.redisObject** %22, align 8, !dbg !8569, !tbaa !757
  %24 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %23, i64 0, i32 2
  %25 = load i8*, i8** %24, align 8, !dbg !8569, !tbaa !6207
  br i1 %19, label %26, label %32, !dbg !8571

; <label>:26:                                     ; preds = %16
  %27 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.128, i64 0, i64 0)) #11, !dbg !8572
  %28 = icmp eq i32 %27, 0, !dbg !8572
  br i1 %28, label %29, label %32, !dbg !8573

; <label>:29:                                     ; preds = %26
  %30 = bitcast [23 x i8*]* %6 to i8*, !dbg !8574
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %30) #9, !dbg !8574
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %30, i8* align 16 bitcast ([23 x i8*]* @clusterCommand.help to i8*), i64 184, i1 false), !dbg !8575
  %31 = getelementptr inbounds [23 x i8*], [23 x i8*]* %6, i64 0, i64 0, !dbg !8576
  call void @addReplyHelp(%struct.client* nonnull %0, i8** nonnull %31) #8, !dbg !8577
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %30) #9, !dbg !8578
  br label %1211, !dbg !8579

; <label>:32:                                     ; preds = %16, %26
  %33 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0)) #11, !dbg !8580
  %34 = icmp eq i32 %33, 0, !dbg !8580
  %35 = and i32 %18, -2, !dbg !8581
  %36 = icmp eq i32 %35, 4, !dbg !8581
  %37 = and i1 %36, %34, !dbg !8582
  br i1 %37, label %38, label %101, !dbg !8582

; <label>:38:                                     ; preds = %32
  %39 = bitcast i64* %7 to i8*, !dbg !8583
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9, !dbg !8583
  %40 = bitcast i64* %8 to i8*, !dbg !8583
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9, !dbg !8583
  %41 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 3, !dbg !8584
  %42 = load %struct.redisObject*, %struct.redisObject** %41, align 8, !dbg !8584, !tbaa !757
  %43 = call i32 @getLongLongFromObject(%struct.redisObject* %42, i64* nonnull %7) #8, !dbg !8587
  %44 = icmp eq i32 %43, 0, !dbg !8588
  br i1 %44, label %51, label %45, !dbg !8589

; <label>:45:                                     ; preds = %38
  %46 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8590, !tbaa !8570
  %47 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %46, i64 3, !dbg !8592
  %48 = load %struct.redisObject*, %struct.redisObject** %47, align 8, !dbg !8592, !tbaa !757
  %49 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %48, i64 0, i32 2, !dbg !8593
  %50 = load i8*, i8** %49, align 8, !dbg !8593, !tbaa !6207
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.151, i64 0, i64 0), i8* %50) #8, !dbg !8594
  br label %100, !dbg !8595

; <label>:51:                                     ; preds = %38
  %52 = load i32, i32* %17, align 8, !dbg !8596, !tbaa !8564
  %53 = icmp eq i32 %52, 5, !dbg !8598
  br i1 %53, label %54, label %69, !dbg !8599

; <label>:54:                                     ; preds = %51
  %55 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8600, !tbaa !8570
  %56 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %55, i64 4, !dbg !8603
  %57 = load %struct.redisObject*, %struct.redisObject** %56, align 8, !dbg !8603, !tbaa !757
  %58 = call i32 @getLongLongFromObject(%struct.redisObject* %57, i64* nonnull %8) #8, !dbg !8605
  %59 = icmp eq i32 %58, 0, !dbg !8606
  br i1 %59, label %60, label %63, !dbg !8607

; <label>:60:                                     ; preds = %54
  %61 = load i64, i64* %7, align 8, !dbg !8608, !tbaa !1148
  %62 = load i64, i64* %8, align 8, !dbg !8610, !tbaa !1148
  br label %72, !dbg !8607

; <label>:63:                                     ; preds = %54
  %64 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8611, !tbaa !8570
  %65 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %64, i64 4, !dbg !8613
  %66 = load %struct.redisObject*, %struct.redisObject** %65, align 8, !dbg !8613, !tbaa !757
  %67 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %66, i64 0, i32 2, !dbg !8614
  %68 = load i8*, i8** %67, align 8, !dbg !8614, !tbaa !6207
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.152, i64 0, i64 0), i8* %68) #8, !dbg !8615
  br label %100, !dbg !8616

; <label>:69:                                     ; preds = %51
  %70 = load i64, i64* %7, align 8, !dbg !8617, !tbaa !1148
  %71 = add nsw i64 %70, 10000, !dbg !8619
  store i64 %71, i64* %8, align 8, !dbg !8620, !tbaa !1148
  br label %72

; <label>:72:                                     ; preds = %60, %69
  %73 = phi i64 [ %62, %60 ], [ %71, %69 ], !dbg !8610
  %74 = phi i64 [ %61, %60 ], [ %70, %69 ], !dbg !8608
  %75 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8621, !tbaa !8570
  %76 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %75, i64 2, !dbg !8622
  %77 = load %struct.redisObject*, %struct.redisObject** %76, align 8, !dbg !8622, !tbaa !757
  %78 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %77, i64 0, i32 2, !dbg !8623
  %79 = load i8*, i8** %78, align 8, !dbg !8623, !tbaa !6207
  %80 = trunc i64 %74 to i32, !dbg !8608
  %81 = trunc i64 %73 to i32, !dbg !8610
  %82 = call i32 @clusterStartHandshake(i8* %79, i32 %80, i32 %81) #12, !dbg !8624
  %83 = icmp eq i32 %82, 0, !dbg !8625
  br i1 %83, label %84, label %98, !dbg !8626

; <label>:84:                                     ; preds = %72
  %85 = call i32* @__errno() #8, !dbg !8627
  %86 = load i32, i32* %85, align 4, !dbg !8627, !tbaa !708
  %87 = icmp eq i32 %86, 22, !dbg !8628
  br i1 %87, label %88, label %98, !dbg !8629

; <label>:88:                                     ; preds = %84
  %89 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8630, !tbaa !8570
  %90 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %89, i64 2, !dbg !8632
  %91 = load %struct.redisObject*, %struct.redisObject** %90, align 8, !dbg !8632, !tbaa !757
  %92 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %91, i64 0, i32 2, !dbg !8633
  %93 = load i8*, i8** %92, align 8, !dbg !8633, !tbaa !6207
  %94 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %89, i64 3, !dbg !8634
  %95 = load %struct.redisObject*, %struct.redisObject** %94, align 8, !dbg !8634, !tbaa !757
  %96 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %95, i64 0, i32 2, !dbg !8635
  %97 = load i8*, i8** %96, align 8, !dbg !8635, !tbaa !6207
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.153, i64 0, i64 0), i8* %93, i8* %97) #8, !dbg !8636
  br label %100, !dbg !8637

; <label>:98:                                     ; preds = %84, %72
  %99 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !8638, !tbaa !8640
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %99) #8, !dbg !8642
  br label %100

; <label>:100:                                    ; preds = %88, %98, %63, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9, !dbg !8643
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9, !dbg !8643
  ret void

; <label>:101:                                    ; preds = %32
  %102 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.154, i64 0, i64 0)) #11, !dbg !8644
  %103 = icmp ne i32 %102, 0, !dbg !8644
  %104 = xor i1 %19, true, !dbg !8645
  %105 = or i1 %103, %104, !dbg !8645
  br i1 %105, label %109, label %106, !dbg !8645

; <label>:106:                                    ; preds = %101
  %107 = tail call i8* @clusterGenNodesDescription(i32 0) #12, !dbg !8646
  %108 = tail call %struct.redisObject* @createObject(i32 0, i8* %107) #8, !dbg !8648
  tail call void @addReplyBulk(%struct.client* nonnull %0, %struct.redisObject* %108) #8, !dbg !8650
  tail call void @decrRefCount(%struct.redisObject* %108) #8, !dbg !8651
  br label %1211, !dbg !8652

; <label>:109:                                    ; preds = %101
  %110 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.155, i64 0, i64 0)) #11, !dbg !8653
  %111 = icmp ne i32 %110, 0, !dbg !8653
  %112 = or i1 %111, %104, !dbg !8654
  br i1 %112, label %116, label %113, !dbg !8654

; <label>:113:                                    ; preds = %109
  %114 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8655, !tbaa !757
  %115 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %114, i64 0, i32 1, i64 0, !dbg !8655
  tail call void @addReplyBulkCBuffer(%struct.client* nonnull %0, i8* nonnull %115, i64 40) #8, !dbg !8657
  br label %1211, !dbg !8658

; <label>:116:                                    ; preds = %109
  %117 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i64 0, i64 0)) #11, !dbg !8659
  %118 = icmp ne i32 %117, 0, !dbg !8659
  %119 = or i1 %118, %104, !dbg !8660
  br i1 %119, label %121, label %120, !dbg !8660

; <label>:120:                                    ; preds = %116
  tail call void @clusterReplyMultiBulkSlots(%struct.client* nonnull %0) #12, !dbg !8661
  br label %1211, !dbg !8663

; <label>:121:                                    ; preds = %116
  %122 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i64 0, i64 0)) #11, !dbg !8664
  %123 = icmp ne i32 %122, 0, !dbg !8664
  %124 = or i1 %123, %104, !dbg !8665
  br i1 %124, label %180, label %125, !dbg !8665

; <label>:125:                                    ; preds = %121
  %126 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !8666, !tbaa !7981
  %127 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %126, i64 0, i32 0, !dbg !8666
  %128 = load %struct.dict*, %struct.dict** %127, align 8, !dbg !8666, !tbaa !7987
  %129 = getelementptr inbounds %struct.dict, %struct.dict* %128, i64 0, i32 2, i64 0, i32 3, !dbg !8666
  %130 = load i64, i64* %129, align 8, !dbg !8666, !tbaa !5164
  %131 = getelementptr inbounds %struct.dict, %struct.dict* %128, i64 0, i32 2, i64 1, i32 3, !dbg !8666
  %132 = load i64, i64* %131, align 8, !dbg !8666, !tbaa !5164
  %133 = sub i64 0, %132, !dbg !8669
  %134 = icmp eq i64 %130, %133, !dbg !8669
  br i1 %134, label %136, label %135, !dbg !8670

; <label>:135:                                    ; preds = %125
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.158, i64 0, i64 0)) #8, !dbg !8671
  br label %1211, !dbg !8673

; <label>:136:                                    ; preds = %125
  %137 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8674, !tbaa !757
  br label %138, !dbg !8679

; <label>:138:                                    ; preds = %171, %136
  %139 = phi i64 [ 0, %136 ], [ %172, %171 ]
  %140 = trunc i64 %139 to i32
  %141 = lshr i64 %139, 3
  %142 = and i64 %141, 8191
  %143 = and i32 %140, 7, !dbg !8687
  %144 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %137, i64 0, i32 4, i64 %142, !dbg !8689
  %145 = load i8, i8* %144, align 1, !dbg !8689, !tbaa !745
  %146 = zext i8 %145 to i32, !dbg !8689
  %147 = shl i32 1, %143, !dbg !8690
  %148 = and i32 %147, %146, !dbg !8691
  %149 = icmp eq i32 %148, 0, !dbg !8692
  br i1 %149, label %171, label %150, !dbg !8693

; <label>:150:                                    ; preds = %138
  %151 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8696, !tbaa !784
  %152 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %151, i64 0, i32 8, i64 %139, !dbg !8697
  %153 = load %struct.clusterNode*, %struct.clusterNode** %152, align 8, !dbg !8697, !tbaa !757
  %154 = icmp eq %struct.clusterNode* %153, null, !dbg !8699
  br i1 %154, label %171, label %155, !dbg !8700

; <label>:155:                                    ; preds = %150
  %156 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %153, i64 0, i32 4, i64 %142, !dbg !8709
  %157 = load i8, i8* %156, align 1, !dbg !8709, !tbaa !745
  %158 = zext i8 %157 to i32, !dbg !8709
  %159 = and i32 %147, %158, !dbg !8710
  %160 = icmp eq i32 %159, 0, !dbg !8711
  %161 = trunc i32 %147 to i8, !dbg !8717
  %162 = xor i8 %161, -1, !dbg !8717
  %163 = and i8 %157, %162, !dbg !8717
  store i8 %163, i8* %156, align 1, !dbg !8717, !tbaa !745
  br i1 %160, label %164, label %165, !dbg !8718

; <label>:164:                                    ; preds = %155
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !8719
  tail call void @_exit(i32 1) #10, !dbg !8719
  unreachable, !dbg !8719

; <label>:165:                                    ; preds = %155
  %166 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %153, i64 0, i32 5, !dbg !8720
  %167 = load i32, i32* %166, align 8, !dbg !8721, !tbaa !1139
  %168 = add nsw i32 %167, -1, !dbg !8721
  store i32 %168, i32* %166, align 8, !dbg !8721, !tbaa !1139
  %169 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8722, !tbaa !784
  %170 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %169, i64 0, i32 8, i64 %139, !dbg !8723
  store %struct.clusterNode* null, %struct.clusterNode** %170, align 8, !dbg !8724, !tbaa !757
  br label %171, !dbg !8725

; <label>:171:                                    ; preds = %150, %165, %138
  %172 = add nuw nsw i64 %139, 1, !dbg !8726
  %173 = icmp ult i64 %172, 16384, !dbg !8727
  br i1 %173, label %138, label %174, !dbg !8679, !llvm.loop !4970

; <label>:174:                                    ; preds = %171
  %175 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8730, !tbaa !784
  %176 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %175, i64 0, i32 22, !dbg !8731
  %177 = load i32, i32* %176, align 8, !dbg !8732, !tbaa !1465
  %178 = or i32 %177, 6, !dbg !8732
  store i32 %178, i32* %176, align 8, !dbg !8732, !tbaa !1465
  %179 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !8733, !tbaa !8640
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %179) #8, !dbg !8734
  br label %1211, !dbg !8735

; <label>:180:                                    ; preds = %121
  %181 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i64 0, i64 0)) #11, !dbg !8736
  %182 = icmp eq i32 %181, 0, !dbg !8736
  br i1 %182, label %188, label %183, !dbg !8737

; <label>:183:                                    ; preds = %180
  %184 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i64 0, i64 0)) #11, !dbg !8738
  %185 = icmp eq i32 %184, 0, !dbg !8738
  %186 = icmp sgt i32 %18, 2, !dbg !8739
  %187 = and i1 %186, %185, !dbg !8740
  br i1 %187, label %190, label %304, !dbg !8740

; <label>:188:                                    ; preds = %180
  %189 = icmp sgt i32 %18, 2, !dbg !8739
  br i1 %189, label %190, label %304, !dbg !8741

; <label>:190:                                    ; preds = %183, %188
  %191 = tail call i8* @zmalloc(i64 16384) #8, !dbg !8742
  %192 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8744, !tbaa !8570
  %193 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %192, i64 1, !dbg !8745
  %194 = load %struct.redisObject*, %struct.redisObject** %193, align 8, !dbg !8745, !tbaa !757
  %195 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %194, i64 0, i32 2, !dbg !8746
  %196 = load i8*, i8** %195, align 8, !dbg !8746, !tbaa !6207
  %197 = tail call i32 @strcasecmp(i8* %196, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i64 0, i64 0)) #11, !dbg !8747
  %198 = icmp eq i32 %197, 0, !dbg !8748
  %199 = tail call i8* @memset(i8* %191, i32 0, i64 16384) #8, !dbg !8749
  %200 = load i32, i32* %17, align 8, !dbg !8751, !tbaa !8564
  %201 = icmp sgt i32 %200, 2, !dbg !8754
  br i1 %201, label %203, label %202, !dbg !8755

; <label>:202:                                    ; preds = %205, %190
  br label %245, !dbg !8756

; <label>:203:                                    ; preds = %190
  %204 = bitcast i64* %5 to i8*
  br label %209, !dbg !8755

; <label>:205:                                    ; preds = %237
  %206 = load i32, i32* %17, align 8, !dbg !8751, !tbaa !8564
  %207 = sext i32 %206 to i64, !dbg !8754
  %208 = icmp slt i64 %242, %207, !dbg !8754
  br i1 %208, label %209, label %202, !dbg !8755, !llvm.loop !8757

; <label>:209:                                    ; preds = %203, %205
  %210 = phi i64 [ 2, %203 ], [ %242, %205 ]
  %211 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8759, !tbaa !8570
  %212 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %211, i64 %210, !dbg !8762
  %213 = load %struct.redisObject*, %struct.redisObject** %212, align 8, !dbg !8762, !tbaa !757
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #9, !dbg !8766
  %214 = call i32 @getLongLongFromObject(%struct.redisObject* %213, i64* nonnull %5) #8, !dbg !8768
  %215 = icmp ne i32 %214, 0, !dbg !8769
  %216 = load i64, i64* %5, align 8, !dbg !8770
  %217 = icmp ugt i64 %216, 16383, !dbg !8771
  %218 = or i1 %215, %217, !dbg !8771
  br i1 %218, label %219, label %220, !dbg !8771

; <label>:219:                                    ; preds = %209
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i64 0, i64 0)) #8, !dbg !8772
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #9, !dbg !8773
  br label %223, !dbg !8775

; <label>:220:                                    ; preds = %209
  %221 = trunc i64 %216 to i32, !dbg !8776
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #9, !dbg !8773
  %222 = icmp eq i32 %221, -1, !dbg !8777
  br i1 %222, label %223, label %224, !dbg !8775

; <label>:223:                                    ; preds = %220, %219
  call void @zfree(i8* %191) #8, !dbg !8778
  br label %1211, !dbg !8780

; <label>:224:                                    ; preds = %220
  %225 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8781, !tbaa !784
  %226 = shl i64 %216, 32, !dbg !8781
  %227 = ashr exact i64 %226, 32, !dbg !8781
  %228 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %225, i64 0, i32 8, i64 %227, !dbg !8781
  %229 = load %struct.clusterNode*, %struct.clusterNode** %228, align 8, !dbg !8781, !tbaa !757
  %230 = icmp eq %struct.clusterNode* %229, null, !dbg !8781
  br i1 %198, label %231, label %234, !dbg !8784

; <label>:231:                                    ; preds = %224
  br i1 %230, label %232, label %237, !dbg !8785

; <label>:232:                                    ; preds = %231
  %233 = trunc i64 %216 to i32, !dbg !8776
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.161, i64 0, i64 0), i32 %233) #8, !dbg !8786
  call void @zfree(i8* %191) #8, !dbg !8788
  br label %1211, !dbg !8789

; <label>:234:                                    ; preds = %224
  br i1 %230, label %237, label %235, !dbg !8790

; <label>:235:                                    ; preds = %234
  %236 = trunc i64 %216 to i32, !dbg !8776
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.162, i64 0, i64 0), i32 %236) #8, !dbg !8791
  call void @zfree(i8* %191) #8, !dbg !8793
  br label %1211, !dbg !8794

; <label>:237:                                    ; preds = %231, %234
  %238 = getelementptr inbounds i8, i8* %191, i64 %227, !dbg !8795
  %239 = load i8, i8* %238, align 1, !dbg !8797, !tbaa !745
  %240 = add i8 %239, 1, !dbg !8797
  store i8 %240, i8* %238, align 1, !dbg !8797, !tbaa !745
  %241 = icmp eq i8 %239, 1, !dbg !8798
  %242 = add nuw nsw i64 %210, 1, !dbg !8799
  br i1 %241, label %243, label %205, !dbg !8800

; <label>:243:                                    ; preds = %237
  %244 = trunc i64 %216 to i32, !dbg !8776
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.163, i64 0, i64 0), i32 %244) #8, !dbg !8801
  call void @zfree(i8* nonnull %191) #8, !dbg !8803
  br label %1211, !dbg !8804

; <label>:245:                                    ; preds = %202, %295
  %246 = phi i64 [ %296, %295 ], [ 0, %202 ]
  %247 = getelementptr inbounds i8, i8* %191, i64 %246, !dbg !8756
  %248 = load i8, i8* %247, align 1, !dbg !8756, !tbaa !745
  %249 = icmp eq i8 %248, 0, !dbg !8756
  br i1 %249, label %295, label %250, !dbg !8805

; <label>:250:                                    ; preds = %245
  %251 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8806, !tbaa !784
  %252 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %251, i64 0, i32 7, i64 %246, !dbg !8808
  %253 = load %struct.clusterNode*, %struct.clusterNode** %252, align 8, !dbg !8808, !tbaa !757
  %254 = icmp eq %struct.clusterNode* %253, null, !dbg !8808
  br i1 %254, label %256, label %255, !dbg !8809

; <label>:255:                                    ; preds = %250
  store %struct.clusterNode* null, %struct.clusterNode** %252, align 8, !dbg !8810, !tbaa !757
  br label %256, !dbg !8811

; <label>:256:                                    ; preds = %250, %255
  br i1 %198, label %257, label %281, !dbg !8812

; <label>:257:                                    ; preds = %256
  %258 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8815, !tbaa !784
  %259 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %258, i64 0, i32 8, i64 %246, !dbg !8816
  %260 = load %struct.clusterNode*, %struct.clusterNode** %259, align 8, !dbg !8816, !tbaa !757
  %261 = icmp eq %struct.clusterNode* %260, null, !dbg !8818
  br i1 %261, label %290, label %262, !dbg !8819

; <label>:262:                                    ; preds = %257
  %263 = trunc i64 %246 to i32
  %264 = lshr i64 %246, 3
  %265 = and i64 %264, 8191
  %266 = and i32 %263, 7, !dbg !8827
  %267 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %260, i64 0, i32 4, i64 %265, !dbg !8829
  %268 = load i8, i8* %267, align 1, !dbg !8829, !tbaa !745
  %269 = zext i8 %268 to i32, !dbg !8829
  %270 = shl i32 1, %266, !dbg !8830
  %271 = and i32 %270, %269, !dbg !8831
  %272 = icmp eq i32 %271, 0, !dbg !8832
  %273 = trunc i32 %270 to i8, !dbg !8838
  %274 = xor i8 %273, -1, !dbg !8838
  %275 = and i8 %268, %274, !dbg !8838
  store i8 %275, i8* %267, align 1, !dbg !8838, !tbaa !745
  br i1 %272, label %276, label %277, !dbg !8839

; <label>:276:                                    ; preds = %262
  call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !8840
  call void @_exit(i32 1) #10, !dbg !8840
  unreachable, !dbg !8840

; <label>:277:                                    ; preds = %262
  %278 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %260, i64 0, i32 5, !dbg !8841
  %279 = load i32, i32* %278, align 8, !dbg !8842, !tbaa !1139
  %280 = add nsw i32 %279, -1, !dbg !8842
  store i32 %280, i32* %278, align 8, !dbg !8842, !tbaa !1139
  br label %291, !dbg !8843

; <label>:281:                                    ; preds = %256
  %282 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8844, !tbaa !757
  %283 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8848, !tbaa !784
  %284 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %283, i64 0, i32 8, i64 %246, !dbg !8849
  %285 = load %struct.clusterNode*, %struct.clusterNode** %284, align 8, !dbg !8849, !tbaa !757
  %286 = icmp eq %struct.clusterNode* %285, null, !dbg !8849
  br i1 %286, label %287, label %290, !dbg !8850

; <label>:287:                                    ; preds = %281
  %288 = trunc i64 %246 to i32, !dbg !8851
  %289 = call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %282, i32 %288) #8, !dbg !8851
  br label %291, !dbg !8852

; <label>:290:                                    ; preds = %257, %281
  call void @_serverAssertWithInfo(%struct.client* %0, %struct.redisObject* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 4320) #8, !dbg !8854
  call void @_exit(i32 1) #10, !dbg !8854
  unreachable, !dbg !8854

; <label>:291:                                    ; preds = %277, %287
  %292 = phi %struct.clusterNode* [ %282, %287 ], [ null, %277 ]
  %293 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8855, !tbaa !784
  %294 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %293, i64 0, i32 8, i64 %246, !dbg !8855
  store %struct.clusterNode* %292, %struct.clusterNode** %294, align 8, !dbg !8855, !tbaa !757
  br label %295, !dbg !8856

; <label>:295:                                    ; preds = %291, %245
  %296 = add nuw nsw i64 %246, 1, !dbg !8856
  %297 = icmp ult i64 %296, 16384, !dbg !8857
  br i1 %297, label %245, label %298, !dbg !8858, !llvm.loop !8859

; <label>:298:                                    ; preds = %295
  call void @zfree(i8* nonnull %191) #8, !dbg !8861
  %299 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8864, !tbaa !784
  %300 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %299, i64 0, i32 22, !dbg !8865
  %301 = load i32, i32* %300, align 8, !dbg !8866, !tbaa !1465
  %302 = or i32 %301, 6, !dbg !8866
  store i32 %302, i32* %300, align 8, !dbg !8866, !tbaa !1465
  %303 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !8867, !tbaa !8640
  call void @addReply(%struct.client* %0, %struct.redisObject* %303) #8, !dbg !8868
  br label %1211, !dbg !8869

; <label>:304:                                    ; preds = %183, %188
  %305 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i64 0, i64 0)) #11, !dbg !8870
  %306 = icmp eq i32 %305, 0, !dbg !8870
  %307 = icmp sgt i32 %18, 3, !dbg !8871
  %308 = and i1 %307, %306, !dbg !8872
  br i1 %308, label %309, label %533, !dbg !8872

; <label>:309:                                    ; preds = %304
  %310 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8873, !tbaa !757
  %311 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %310, i64 0, i32 2, !dbg !8873
  %312 = load i32, i32* %311, align 8, !dbg !8873, !tbaa !918
  %313 = and i32 %312, 2, !dbg !8873
  %314 = icmp eq i32 %313, 0, !dbg !8873
  br i1 %314, label %316, label %315, !dbg !8875

; <label>:315:                                    ; preds = %309
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.166, i64 0, i64 0)) #8, !dbg !8876
  br label %1211, !dbg !8878

; <label>:316:                                    ; preds = %309
  %317 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !8879
  %318 = load %struct.redisObject*, %struct.redisObject** %317, align 8, !dbg !8879, !tbaa !757
  %319 = bitcast i64* %4 to i8*, !dbg !8884
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #9, !dbg !8884
  %320 = call i32 @getLongLongFromObject(%struct.redisObject* %318, i64* nonnull %4) #8, !dbg !8886
  %321 = icmp ne i32 %320, 0, !dbg !8887
  %322 = load i64, i64* %4, align 8, !dbg !8888
  %323 = icmp ugt i64 %322, 16383, !dbg !8889
  %324 = or i1 %321, %323, !dbg !8889
  br i1 %324, label %325, label %326, !dbg !8889

; <label>:325:                                    ; preds = %316
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i64 0, i64 0)) #8, !dbg !8890
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #9, !dbg !8891
  br label %1211, !dbg !8893

; <label>:326:                                    ; preds = %316
  %327 = trunc i64 %322 to i32, !dbg !8894
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #9, !dbg !8891
  %328 = icmp eq i32 %327, -1, !dbg !8895
  br i1 %328, label %1211, label %329, !dbg !8893

; <label>:329:                                    ; preds = %326
  %330 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8896, !tbaa !8570
  %331 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %330, i64 3, !dbg !8897
  %332 = load %struct.redisObject*, %struct.redisObject** %331, align 8, !dbg !8897, !tbaa !757
  %333 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %332, i64 0, i32 2, !dbg !8898
  %334 = load i8*, i8** %333, align 8, !dbg !8898, !tbaa !6207
  %335 = call i32 @strcasecmp(i8* %334, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.167, i64 0, i64 0)) #11, !dbg !8899
  %336 = icmp eq i32 %335, 0, !dbg !8899
  br i1 %336, label %337, label %374, !dbg !8900

; <label>:337:                                    ; preds = %329
  %338 = load i32, i32* %17, align 8, !dbg !8901, !tbaa !8564
  %339 = icmp eq i32 %338, 5, !dbg !8902
  br i1 %339, label %340, label %374, !dbg !8903

; <label>:340:                                    ; preds = %337
  %341 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8904, !tbaa !784
  %342 = shl i64 %322, 32, !dbg !8907
  %343 = ashr exact i64 %342, 32, !dbg !8907
  %344 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %341, i64 0, i32 8, i64 %343, !dbg !8907
  %345 = load %struct.clusterNode*, %struct.clusterNode** %344, align 8, !dbg !8907, !tbaa !757
  %346 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8908, !tbaa !757
  %347 = icmp eq %struct.clusterNode* %345, %346, !dbg !8909
  br i1 %347, label %349, label %348, !dbg !8910

; <label>:348:                                    ; preds = %340
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.168, i64 0, i64 0), i32 %327) #8, !dbg !8911
  br label %1211, !dbg !8913

; <label>:349:                                    ; preds = %340
  %350 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %330, i64 4, !dbg !8914
  %351 = load %struct.redisObject*, %struct.redisObject** %350, align 8, !dbg !8914, !tbaa !757
  %352 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %351, i64 0, i32 2, !dbg !8916
  %353 = load i8*, i8** %352, align 8, !dbg !8916, !tbaa !6207
  %354 = call i8* @sdsnewlen(i8* %353, i64 40) #8, !dbg !8919
  %355 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8921, !tbaa !784
  %356 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %355, i64 0, i32 4, !dbg !8922
  %357 = load %struct.dict*, %struct.dict** %356, align 8, !dbg !8922, !tbaa !832
  %358 = call %struct.dictEntry* @dictFind(%struct.dict* %357, i8* %354) #8, !dbg !8923
  call void @sdsfree(i8* %354) #8, !dbg !8925
  %359 = icmp eq %struct.dictEntry* %358, null, !dbg !8926
  br i1 %359, label %365, label %360, !dbg !8927

; <label>:360:                                    ; preds = %349
  %361 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %358, i64 0, i32 1, i32 0, !dbg !8928
  %362 = bitcast i8** %361 to %struct.clusterNode**, !dbg !8928
  %363 = load %struct.clusterNode*, %struct.clusterNode** %362, align 8, !dbg !8928, !tbaa !745
  %364 = icmp eq %struct.clusterNode* %363, null, !dbg !8930
  br i1 %364, label %365, label %371, !dbg !8931

; <label>:365:                                    ; preds = %349, %360
  %366 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8932, !tbaa !8570
  %367 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %366, i64 4, !dbg !8934
  %368 = load %struct.redisObject*, %struct.redisObject** %367, align 8, !dbg !8934, !tbaa !757
  %369 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %368, i64 0, i32 2, !dbg !8935
  %370 = load i8*, i8** %369, align 8, !dbg !8935, !tbaa !6207
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i64 0, i64 0), i8* %370) #8, !dbg !8936
  br label %1211, !dbg !8937

; <label>:371:                                    ; preds = %360
  %372 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8938, !tbaa !784
  %373 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %372, i64 0, i32 6, i64 %343, !dbg !8939
  store %struct.clusterNode* %363, %struct.clusterNode** %373, align 8, !dbg !8940, !tbaa !757
  br label %527, !dbg !8941

; <label>:374:                                    ; preds = %329, %337
  %375 = call i32 @strcasecmp(i8* %334, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0)) #11, !dbg !8942
  %376 = icmp eq i32 %375, 0, !dbg !8942
  br i1 %376, label %377, label %414, !dbg !8943

; <label>:377:                                    ; preds = %374
  %378 = load i32, i32* %17, align 8, !dbg !8944, !tbaa !8564
  %379 = icmp eq i32 %378, 5, !dbg !8945
  br i1 %379, label %380, label %414, !dbg !8946

; <label>:380:                                    ; preds = %377
  %381 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8947, !tbaa !784
  %382 = shl i64 %322, 32, !dbg !8950
  %383 = ashr exact i64 %382, 32, !dbg !8950
  %384 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %381, i64 0, i32 8, i64 %383, !dbg !8950
  %385 = load %struct.clusterNode*, %struct.clusterNode** %384, align 8, !dbg !8950, !tbaa !757
  %386 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8951, !tbaa !757
  %387 = icmp eq %struct.clusterNode* %385, %386, !dbg !8952
  br i1 %387, label %388, label %389, !dbg !8953

; <label>:388:                                    ; preds = %380
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.171, i64 0, i64 0), i32 %327) #8, !dbg !8954
  br label %1211, !dbg !8956

; <label>:389:                                    ; preds = %380
  %390 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %330, i64 4, !dbg !8957
  %391 = load %struct.redisObject*, %struct.redisObject** %390, align 8, !dbg !8957, !tbaa !757
  %392 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %391, i64 0, i32 2, !dbg !8959
  %393 = load i8*, i8** %392, align 8, !dbg !8959, !tbaa !6207
  %394 = call i8* @sdsnewlen(i8* %393, i64 40) #8, !dbg !8962
  %395 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8964, !tbaa !784
  %396 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %395, i64 0, i32 4, !dbg !8965
  %397 = load %struct.dict*, %struct.dict** %396, align 8, !dbg !8965, !tbaa !832
  %398 = call %struct.dictEntry* @dictFind(%struct.dict* %397, i8* %394) #8, !dbg !8966
  call void @sdsfree(i8* %394) #8, !dbg !8968
  %399 = icmp eq %struct.dictEntry* %398, null, !dbg !8969
  br i1 %399, label %405, label %400, !dbg !8970

; <label>:400:                                    ; preds = %389
  %401 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %398, i64 0, i32 1, i32 0, !dbg !8971
  %402 = bitcast i8** %401 to %struct.clusterNode**, !dbg !8971
  %403 = load %struct.clusterNode*, %struct.clusterNode** %402, align 8, !dbg !8971, !tbaa !745
  %404 = icmp eq %struct.clusterNode* %403, null, !dbg !8972
  br i1 %404, label %405, label %411, !dbg !8973

; <label>:405:                                    ; preds = %389, %400
  %406 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !8974, !tbaa !8570
  %407 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %406, i64 4, !dbg !8976
  %408 = load %struct.redisObject*, %struct.redisObject** %407, align 8, !dbg !8976, !tbaa !757
  %409 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %408, i64 0, i32 2, !dbg !8977
  %410 = load i8*, i8** %409, align 8, !dbg !8977, !tbaa !6207
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i64 0, i64 0), i8* %410) #8, !dbg !8978
  br label %1211, !dbg !8979

; <label>:411:                                    ; preds = %400
  %412 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8980, !tbaa !784
  %413 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %412, i64 0, i32 7, i64 %383, !dbg !8981
  store %struct.clusterNode* %403, %struct.clusterNode** %413, align 8, !dbg !8982, !tbaa !757
  br label %527, !dbg !8983

; <label>:414:                                    ; preds = %374, %377
  %415 = call i32 @strcasecmp(i8* %334, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0)) #11, !dbg !8984
  %416 = icmp eq i32 %415, 0, !dbg !8984
  br i1 %416, label %417, label %427, !dbg !8985

; <label>:417:                                    ; preds = %414
  %418 = load i32, i32* %17, align 8, !dbg !8986, !tbaa !8564
  %419 = icmp eq i32 %418, 4, !dbg !8987
  br i1 %419, label %420, label %427, !dbg !8988

; <label>:420:                                    ; preds = %417
  %421 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8989, !tbaa !784
  %422 = shl i64 %322, 32, !dbg !8991
  %423 = ashr exact i64 %422, 32, !dbg !8991
  %424 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %421, i64 0, i32 7, i64 %423, !dbg !8991
  store %struct.clusterNode* null, %struct.clusterNode** %424, align 8, !dbg !8992, !tbaa !757
  %425 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8993, !tbaa !784
  %426 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %425, i64 0, i32 6, i64 %423, !dbg !8994
  store %struct.clusterNode* null, %struct.clusterNode** %426, align 8, !dbg !8995, !tbaa !757
  br label %527, !dbg !8996

; <label>:427:                                    ; preds = %414, %417
  %428 = call i32 @strcasecmp(i8* %334, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i64 0, i64 0)) #11, !dbg !8997
  %429 = icmp eq i32 %428, 0, !dbg !8997
  br i1 %429, label %430, label %526, !dbg !8998

; <label>:430:                                    ; preds = %427
  %431 = load i32, i32* %17, align 8, !dbg !8999, !tbaa !8564
  %432 = icmp eq i32 %431, 5, !dbg !9000
  br i1 %432, label %433, label %526, !dbg !9001

; <label>:433:                                    ; preds = %430
  %434 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %330, i64 4, !dbg !9002
  %435 = load %struct.redisObject*, %struct.redisObject** %434, align 8, !dbg !9002, !tbaa !757
  %436 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %435, i64 0, i32 2, !dbg !9003
  %437 = load i8*, i8** %436, align 8, !dbg !9003, !tbaa !6207
  %438 = call i8* @sdsnewlen(i8* %437, i64 40) #8, !dbg !9006
  %439 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9008, !tbaa !784
  %440 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %439, i64 0, i32 4, !dbg !9009
  %441 = load %struct.dict*, %struct.dict** %440, align 8, !dbg !9009, !tbaa !832
  %442 = call %struct.dictEntry* @dictFind(%struct.dict* %441, i8* %438) #8, !dbg !9010
  call void @sdsfree(i8* %438) #8, !dbg !9012
  %443 = icmp eq %struct.dictEntry* %442, null, !dbg !9013
  br i1 %443, label %449, label %444, !dbg !9014

; <label>:444:                                    ; preds = %433
  %445 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %442, i64 0, i32 1, i32 0, !dbg !9015
  %446 = bitcast i8** %445 to %struct.clusterNode**, !dbg !9015
  %447 = load %struct.clusterNode*, %struct.clusterNode** %446, align 8, !dbg !9015, !tbaa !745
  %448 = icmp eq %struct.clusterNode* %447, null, !dbg !9017
  br i1 %448, label %449, label %455, !dbg !9019

; <label>:449:                                    ; preds = %433, %444
  %450 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !9020, !tbaa !8570
  %451 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %450, i64 4, !dbg !9022
  %452 = load %struct.redisObject*, %struct.redisObject** %451, align 8, !dbg !9022, !tbaa !757
  %453 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %452, i64 0, i32 2, !dbg !9023
  %454 = load i8*, i8** %453, align 8, !dbg !9023, !tbaa !6207
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %454) #8, !dbg !9024
  br label %1211

; <label>:455:                                    ; preds = %444
  %456 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9025, !tbaa !784
  %457 = shl i64 %322, 32, !dbg !9027
  %458 = ashr exact i64 %457, 32, !dbg !9027
  %459 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %456, i64 0, i32 8, i64 %458, !dbg !9027
  %460 = load %struct.clusterNode*, %struct.clusterNode** %459, align 8, !dbg !9027, !tbaa !757
  %461 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9028, !tbaa !757
  %462 = icmp ne %struct.clusterNode* %460, %461, !dbg !9029
  %463 = icmp eq %struct.clusterNode* %447, %461, !dbg !9030
  %464 = or i1 %462, %463, !dbg !9031
  br i1 %464, label %469, label %465, !dbg !9031

; <label>:465:                                    ; preds = %455
  %466 = call i32 @countKeysInSlot(i32 %327) #8, !dbg !9032
  %467 = icmp eq i32 %466, 0, !dbg !9035
  br i1 %467, label %469, label %468, !dbg !9036

; <label>:468:                                    ; preds = %465
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.175, i64 0, i64 0), i32 %327) #8, !dbg !9037
  br label %1211

; <label>:469:                                    ; preds = %455, %465
  %470 = call i32 @countKeysInSlot(i32 %327) #8, !dbg !9039
  %471 = icmp eq i32 %470, 0, !dbg !9041
  br i1 %471, label %472, label %478, !dbg !9042

; <label>:472:                                    ; preds = %469
  %473 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9043, !tbaa !784
  %474 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %473, i64 0, i32 6, i64 %458, !dbg !9044
  %475 = load %struct.clusterNode*, %struct.clusterNode** %474, align 8, !dbg !9044, !tbaa !757
  %476 = icmp eq %struct.clusterNode* %475, null, !dbg !9044
  br i1 %476, label %478, label %477, !dbg !9045

; <label>:477:                                    ; preds = %472
  store %struct.clusterNode* null, %struct.clusterNode** %474, align 8, !dbg !9046, !tbaa !757
  br label %478, !dbg !9047

; <label>:478:                                    ; preds = %472, %477, %469
  %479 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9048, !tbaa !757
  %480 = icmp eq %struct.clusterNode* %447, %479, !dbg !9050
  br i1 %480, label %481, label %493, !dbg !9051

; <label>:481:                                    ; preds = %478
  %482 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9052, !tbaa !784
  %483 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %482, i64 0, i32 7, i64 %458, !dbg !9053
  %484 = load %struct.clusterNode*, %struct.clusterNode** %483, align 8, !dbg !9053, !tbaa !757
  %485 = icmp eq %struct.clusterNode* %484, null, !dbg !9053
  br i1 %485, label %493, label %486, !dbg !9054

; <label>:486:                                    ; preds = %481
  %487 = call i32 @clusterBumpConfigEpochWithoutConsensus() #12, !dbg !9055
  %488 = icmp eq i32 %487, 0, !dbg !9058
  br i1 %488, label %489, label %490, !dbg !9059

; <label>:489:                                    ; preds = %486
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.176, i64 0, i64 0), i32 %327) #8, !dbg !9060
  br label %490, !dbg !9062

; <label>:490:                                    ; preds = %489, %486
  %491 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9063, !tbaa !784
  %492 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %491, i64 0, i32 7, i64 %458, !dbg !9064
  store %struct.clusterNode* null, %struct.clusterNode** %492, align 8, !dbg !9065, !tbaa !757
  br label %493, !dbg !9066

; <label>:493:                                    ; preds = %481, %490, %478
  %494 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9069, !tbaa !784
  %495 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %494, i64 0, i32 8, i64 %458, !dbg !9070
  %496 = load %struct.clusterNode*, %struct.clusterNode** %495, align 8, !dbg !9070, !tbaa !757
  %497 = icmp eq %struct.clusterNode* %496, null, !dbg !9072
  br i1 %497, label %522, label %498, !dbg !9073

; <label>:498:                                    ; preds = %493
  %499 = lshr i64 %322, 3
  %500 = and i64 %499, 8191
  %501 = and i32 %327, 7, !dbg !9081
  %502 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %496, i64 0, i32 4, i64 %500, !dbg !9083
  %503 = load i8, i8* %502, align 1, !dbg !9083, !tbaa !745
  %504 = zext i8 %503 to i32, !dbg !9083
  %505 = shl i32 1, %501, !dbg !9084
  %506 = and i32 %505, %504, !dbg !9085
  %507 = icmp eq i32 %506, 0, !dbg !9086
  %508 = trunc i32 %505 to i8, !dbg !9092
  %509 = xor i8 %508, -1, !dbg !9092
  %510 = and i8 %503, %509, !dbg !9092
  store i8 %510, i8* %502, align 1, !dbg !9092, !tbaa !745
  br i1 %507, label %511, label %512, !dbg !9093

; <label>:511:                                    ; preds = %498
  call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #8, !dbg !9094
  call void @_exit(i32 1) #10, !dbg !9094
  unreachable, !dbg !9094

; <label>:512:                                    ; preds = %498
  %513 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %496, i64 0, i32 5, !dbg !9095
  %514 = load i32, i32* %513, align 8, !dbg !9096, !tbaa !1139
  %515 = add nsw i32 %514, -1, !dbg !9096
  store i32 %515, i32* %513, align 8, !dbg !9096, !tbaa !1139
  %516 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9097, !tbaa !784
  %517 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %516, i64 0, i32 8, i64 %458, !dbg !9098
  store %struct.clusterNode* null, %struct.clusterNode** %517, align 8, !dbg !9099, !tbaa !757
  %518 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9100, !tbaa !784
  %519 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %518, i64 0, i32 8, i64 %458
  %520 = load %struct.clusterNode*, %struct.clusterNode** %519, align 8, !dbg !9102, !tbaa !757
  %521 = icmp eq %struct.clusterNode* %520, null, !dbg !9103
  br i1 %521, label %522, label %527, !dbg !9106

; <label>:522:                                    ; preds = %493, %512
  %523 = call i32 @clusterNodeSetSlotBit(%struct.clusterNode* nonnull %447, i32 %327) #8, !dbg !9107
  %524 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9108, !tbaa !784
  %525 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %524, i64 0, i32 8, i64 %458, !dbg !9109
  store %struct.clusterNode* %447, %struct.clusterNode** %525, align 8, !dbg !9110, !tbaa !757
  br label %527, !dbg !9111

; <label>:526:                                    ; preds = %427, %430
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.177, i64 0, i64 0)) #8, !dbg !9112
  br label %1211, !dbg !9114

; <label>:527:                                    ; preds = %522, %512, %411, %420, %371
  %528 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9117, !tbaa !784
  %529 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %528, i64 0, i32 22, !dbg !9118
  %530 = load i32, i32* %529, align 8, !dbg !9119, !tbaa !1465
  %531 = or i32 %530, 6, !dbg !9119
  store i32 %531, i32* %529, align 8, !dbg !9119, !tbaa !1465
  %532 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9120, !tbaa !8640
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %532) #8, !dbg !9121
  br label %1211, !dbg !9122

; <label>:533:                                    ; preds = %304
  %534 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i64 0, i64 0)) #11, !dbg !9123
  %535 = icmp ne i32 %534, 0, !dbg !9123
  %536 = or i1 %535, %104, !dbg !9124
  br i1 %536, label %546, label %537, !dbg !9124

; <label>:537:                                    ; preds = %533
  %538 = tail call i32 @clusterBumpConfigEpochWithoutConsensus() #12, !dbg !9125
  %539 = tail call i8* @sdsempty() #8, !dbg !9127
  %540 = icmp eq i32 %538, 0, !dbg !9128
  %541 = select i1 %540, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i64 0, i64 0), !dbg !9129
  %542 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9130, !tbaa !757
  %543 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %542, i64 0, i32 3, !dbg !9131
  %544 = load i64, i64* %543, align 8, !dbg !9131, !tbaa !1075
  %545 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %539, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.179, i64 0, i64 0), i8* %541, i64 %544) #8, !dbg !9132
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %545) #8, !dbg !9134
  br label %1211, !dbg !9135

; <label>:546:                                    ; preds = %533
  %547 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i64 0, i64 0)) #11, !dbg !9136
  %548 = icmp ne i32 %547, 0, !dbg !9136
  %549 = or i1 %548, %104, !dbg !9137
  br i1 %549, label %702, label %550, !dbg !9137

; <label>:550:                                    ; preds = %546
  %551 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !tbaa !784
  br label %552, !dbg !9143

; <label>:552:                                    ; preds = %576, %550
  %553 = phi i64 [ 0, %550 ], [ %581, %576 ]
  %554 = phi i32 [ 0, %550 ], [ %580, %576 ]
  %555 = phi i32 [ 0, %550 ], [ %579, %576 ]
  %556 = phi i32 [ 0, %550 ], [ %578, %576 ]
  %557 = phi i32 [ 0, %550 ], [ %577, %576 ]
  %558 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %551, i64 0, i32 8, i64 %553, !dbg !9144
  %559 = load %struct.clusterNode*, %struct.clusterNode** %558, align 8, !dbg !9144, !tbaa !757
  %560 = icmp eq %struct.clusterNode* %559, null, !dbg !9146
  br i1 %560, label %576, label %561, !dbg !9148

; <label>:561:                                    ; preds = %552
  %562 = add nsw i32 %554, 1, !dbg !9149
  %563 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %559, i64 0, i32 2, !dbg !9150
  %564 = load i32, i32* %563, align 8, !dbg !9150, !tbaa !918
  %565 = and i32 %564, 8, !dbg !9150
  %566 = icmp eq i32 %565, 0, !dbg !9150
  br i1 %566, label %569, label %567, !dbg !9152

; <label>:567:                                    ; preds = %561
  %568 = add nsw i32 %557, 1, !dbg !9153
  br label %576, !dbg !9155

; <label>:569:                                    ; preds = %561
  %570 = and i32 %564, 4, !dbg !9156
  %571 = icmp eq i32 %570, 0, !dbg !9156
  br i1 %571, label %574, label %572, !dbg !9158

; <label>:572:                                    ; preds = %569
  %573 = add nsw i32 %556, 1, !dbg !9159
  br label %576, !dbg !9161

; <label>:574:                                    ; preds = %569
  %575 = add nsw i32 %555, 1, !dbg !9162
  br label %576

; <label>:576:                                    ; preds = %567, %574, %572, %552
  %577 = phi i32 [ %557, %552 ], [ %568, %567 ], [ %557, %572 ], [ %557, %574 ], !dbg !9164
  %578 = phi i32 [ %556, %552 ], [ %556, %567 ], [ %573, %572 ], [ %556, %574 ], !dbg !9140
  %579 = phi i32 [ %555, %552 ], [ %555, %567 ], [ %555, %572 ], [ %575, %574 ], !dbg !9139
  %580 = phi i32 [ %554, %552 ], [ %562, %567 ], [ %562, %572 ], [ %562, %574 ], !dbg !9165
  %581 = add nuw nsw i64 %553, 1, !dbg !9166
  %582 = icmp eq i64 %581, 16384, !dbg !9167
  br i1 %582, label %583, label %552, !dbg !9143, !llvm.loop !9168

; <label>:583:                                    ; preds = %576
  %584 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9170, !tbaa !757
  %585 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %584, i64 0, i32 2, !dbg !9170
  %586 = load i32, i32* %585, align 8, !dbg !9170, !tbaa !918
  %587 = and i32 %586, 2, !dbg !9170
  %588 = icmp eq i32 %587, 0, !dbg !9170
  br i1 %588, label %593, label %589, !dbg !9171

; <label>:589:                                    ; preds = %583
  %590 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %584, i64 0, i32 8, !dbg !9172
  %591 = load %struct.clusterNode*, %struct.clusterNode** %590, align 8, !dbg !9172, !tbaa !1012
  %592 = icmp eq %struct.clusterNode* %591, null, !dbg !9173
  br i1 %592, label %593, label %594, !dbg !9174

; <label>:593:                                    ; preds = %589, %583
  br label %594, !dbg !9174

; <label>:594:                                    ; preds = %589, %593
  %595 = phi %struct.clusterNode* [ %584, %593 ], [ %591, %589 ]
  %596 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %595, i64 0, i32 3, !dbg !9175
  %597 = load i64, i64* %596, align 8, !dbg !9174, !tbaa !1075
  %598 = tail call i8* @sdsempty() #8, !dbg !9177
  %599 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9178, !tbaa !784
  %600 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %599, i64 0, i32 2, !dbg !9179
  %601 = load i32, i32* %600, align 8, !dbg !9179, !tbaa !1749
  %602 = sext i32 %601 to i64, !dbg !9180
  %603 = getelementptr inbounds [3 x i8*], [3 x i8*]* @clusterCommand.statestr, i64 0, i64 %602, !dbg !9180
  %604 = load i8*, i8** %603, align 8, !dbg !9180, !tbaa !757
  %605 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %599, i64 0, i32 4, !dbg !9181
  %606 = load %struct.dict*, %struct.dict** %605, align 8, !dbg !9181, !tbaa !832
  %607 = getelementptr inbounds %struct.dict, %struct.dict* %606, i64 0, i32 2, i64 0, i32 3, !dbg !9181
  %608 = load i64, i64* %607, align 8, !dbg !9181, !tbaa !5164
  %609 = getelementptr inbounds %struct.dict, %struct.dict* %606, i64 0, i32 2, i64 1, i32 3, !dbg !9181
  %610 = load i64, i64* %609, align 8, !dbg !9181, !tbaa !5164
  %611 = add i64 %610, %608, !dbg !9181
  %612 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %599, i64 0, i32 3, !dbg !9182
  %613 = load i32, i32* %612, align 4, !dbg !9182, !tbaa !1752
  %614 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %599, i64 0, i32 1, !dbg !9183
  %615 = load i64, i64* %614, align 8, !dbg !9183, !tbaa !793
  %616 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %598, i8* getelementptr inbounds ([207 x i8], [207 x i8]* @.str.184, i64 0, i64 0), i8* %604, i32 %580, i32 %579, i32 %578, i32 %577, i64 %611, i32 %613, i64 %615, i64 %597) #8, !dbg !9184
  br label %619, !dbg !9189

; <label>:617:                                    ; preds = %639
  %618 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %641, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.186, i64 0, i64 0), i64 %640) #8, !dbg !9190
  br label %676, !dbg !9192

; <label>:619:                                    ; preds = %639, %594
  %620 = phi i64 [ 0, %594 ], [ %642, %639 ]
  %621 = phi i8* [ %616, %594 ], [ %641, %639 ]
  %622 = phi i64 [ 0, %594 ], [ %640, %639 ]
  %623 = phi i32 [ 0, %594 ], [ %643, %639 ]
  %624 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9193, !tbaa !784
  %625 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %624, i64 0, i32 23, i64 %620, !dbg !9197
  %626 = load i64, i64* %625, align 8, !dbg !9197, !tbaa !1148
  %627 = icmp eq i64 %626, 0, !dbg !9198
  br i1 %627, label %639, label %628, !dbg !9199

; <label>:628:                                    ; preds = %619
  %629 = add nsw i64 %626, %622, !dbg !9200
  %630 = trunc i32 %623 to i31, !dbg !9203
  %631 = icmp ult i31 %630, 10, !dbg !9203
  br i1 %631, label %632, label %636, !dbg !9203

; <label>:632:                                    ; preds = %628
  %633 = sext i31 %630 to i64, !dbg !9203
  %634 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.clusterCommand.284, i64 0, i64 %633, !dbg !9203
  %635 = load i8*, i8** %634, align 8, !dbg !9203
  br label %636, !dbg !9203

; <label>:636:                                    ; preds = %628, %632
  %637 = phi i8* [ %635, %632 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.125, i64 0, i64 0), %628 ], !dbg !9204
  %638 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %621, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.185, i64 0, i64 0), i8* nonnull %637, i64 %626) #8, !dbg !9206
  br label %639, !dbg !9207

; <label>:639:                                    ; preds = %619, %636
  %640 = phi i64 [ %622, %619 ], [ %629, %636 ], !dbg !9208
  %641 = phi i8* [ %621, %619 ], [ %638, %636 ], !dbg !9208
  %642 = add nuw nsw i64 %620, 1, !dbg !9209
  %643 = add nuw nsw i32 %623, 1, !dbg !9209
  %644 = icmp eq i64 %642, 10, !dbg !9210
  br i1 %644, label %617, label %619, !dbg !9189, !llvm.loop !9211

; <label>:645:                                    ; preds = %696
  %646 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %698, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.188, i64 0, i64 0), i64 %697) #8, !dbg !9213
  %647 = tail call i8* @sdsempty() #8, !dbg !9214
  %648 = getelementptr inbounds i8, i8* %646, i64 -1, !dbg !9217
  %649 = load i8, i8* %648, align 1, !dbg !9217, !tbaa !745
  %650 = trunc i8 %649 to i3, !dbg !9219
  switch i3 %650, label %672 [
    i3 0, label %651
    i3 1, label %654
    i3 2, label %658
    i3 3, label %663
    i3 -4, label %668
  ], !dbg !9219

; <label>:651:                                    ; preds = %645
  %652 = lshr i8 %649, 3, !dbg !9220
  %653 = zext i8 %652 to i64, !dbg !9220
  br label %672, !dbg !9221

; <label>:654:                                    ; preds = %645
  %655 = getelementptr inbounds i8, i8* %646, i64 -3, !dbg !9222
  %656 = load i8, i8* %655, align 1, !dbg !9223, !tbaa !745
  %657 = zext i8 %656 to i64, !dbg !9222
  br label %672, !dbg !9224

; <label>:658:                                    ; preds = %645
  %659 = getelementptr inbounds i8, i8* %646, i64 -5, !dbg !9225
  %660 = bitcast i8* %659 to i16*, !dbg !9226
  %661 = load i16, i16* %660, align 1, !dbg !9226, !tbaa !1493
  %662 = zext i16 %661 to i64, !dbg !9225
  br label %672, !dbg !9227

; <label>:663:                                    ; preds = %645
  %664 = getelementptr inbounds i8, i8* %646, i64 -9, !dbg !9228
  %665 = bitcast i8* %664 to i32*, !dbg !9229
  %666 = load i32, i32* %665, align 1, !dbg !9229, !tbaa !708
  %667 = zext i32 %666 to i64, !dbg !9228
  br label %672, !dbg !9230

; <label>:668:                                    ; preds = %645
  %669 = getelementptr inbounds i8, i8* %646, i64 -17, !dbg !9231
  %670 = bitcast i8* %669 to i64*, !dbg !9232
  %671 = load i64, i64* %670, align 1, !dbg !9232, !tbaa !1500
  br label %672, !dbg !9233

; <label>:672:                                    ; preds = %645, %651, %654, %658, %663, %668
  %673 = phi i64 [ %671, %668 ], [ %667, %663 ], [ %662, %658 ], [ %657, %654 ], [ %653, %651 ], [ 0, %645 ], !dbg !9234
  %674 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %647, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i64 0, i64 0), i64 %673) #8, !dbg !9235
  tail call void @addReplySds(%struct.client* %0, i8* %674) #8, !dbg !9236
  tail call void @addReplySds(%struct.client* %0, i8* %646) #8, !dbg !9237
  %675 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), align 8, !dbg !9238, !tbaa !9239
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %675) #8, !dbg !9240
  br label %1211, !dbg !9241

; <label>:676:                                    ; preds = %696, %617
  %677 = phi i64 [ 0, %617 ], [ %699, %696 ]
  %678 = phi i8* [ %618, %617 ], [ %698, %696 ]
  %679 = phi i32 [ 0, %617 ], [ %700, %696 ]
  %680 = phi i64 [ 0, %617 ], [ %697, %696 ]
  %681 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9242, !tbaa !784
  %682 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %681, i64 0, i32 24, i64 %677, !dbg !9246
  %683 = load i64, i64* %682, align 8, !dbg !9246, !tbaa !1148
  %684 = icmp eq i64 %683, 0, !dbg !9247
  br i1 %684, label %696, label %685, !dbg !9248

; <label>:685:                                    ; preds = %676
  %686 = add nsw i64 %683, %680, !dbg !9249
  %687 = trunc i32 %679 to i31, !dbg !9252
  %688 = icmp ult i31 %687, 10, !dbg !9252
  br i1 %688, label %689, label %693, !dbg !9252

; <label>:689:                                    ; preds = %685
  %690 = sext i31 %687 to i64, !dbg !9252
  %691 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.clusterCommand.284, i64 0, i64 %690, !dbg !9252
  %692 = load i8*, i8** %691, align 8, !dbg !9252
  br label %693, !dbg !9252

; <label>:693:                                    ; preds = %685, %689
  %694 = phi i8* [ %692, %689 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.125, i64 0, i64 0), %685 ], !dbg !9253
  %695 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %678, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.187, i64 0, i64 0), i8* nonnull %694, i64 %683) #8, !dbg !9254
  br label %696, !dbg !9255

; <label>:696:                                    ; preds = %676, %693
  %697 = phi i64 [ %680, %676 ], [ %686, %693 ], !dbg !9256
  %698 = phi i8* [ %678, %676 ], [ %695, %693 ], !dbg !9256
  %699 = add nuw nsw i64 %677, 1, !dbg !9257
  %700 = add nuw nsw i32 %679, 1, !dbg !9257
  %701 = icmp eq i64 %699, 10, !dbg !9258
  br i1 %701, label %645, label %676, !dbg !9192, !llvm.loop !9259

; <label>:702:                                    ; preds = %546
  %703 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.190, i64 0, i64 0)) #11, !dbg !9261
  %704 = icmp ne i32 %703, 0, !dbg !9261
  %705 = or i1 %704, %104, !dbg !9262
  br i1 %705, label %715, label %706, !dbg !9262

; <label>:706:                                    ; preds = %702
  %707 = tail call i32 @clusterSaveConfig(i32 1) #12, !dbg !9263
  %708 = icmp eq i32 %707, 0, !dbg !9265
  br i1 %708, label %709, label %711, !dbg !9267

; <label>:709:                                    ; preds = %706
  %710 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9268, !tbaa !8640
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %710) #8, !dbg !9269
  br label %1211, !dbg !9269

; <label>:711:                                    ; preds = %706
  %712 = tail call i32* @__errno() #8, !dbg !9270
  %713 = load i32, i32* %712, align 4, !dbg !9270, !tbaa !708
  %714 = tail call i8* @strerror(i32 %713) #8, !dbg !9271
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.191, i64 0, i64 0), i8* %714) #8, !dbg !9272
  br label %1211

; <label>:715:                                    ; preds = %702
  %716 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i64 0, i64 0)) #11, !dbg !9273
  %717 = icmp eq i32 %716, 0, !dbg !9273
  %718 = icmp eq i32 %18, 3, !dbg !9274
  %719 = and i1 %718, %717, !dbg !9275
  br i1 %719, label %720, label %754, !dbg !9275

; <label>:720:                                    ; preds = %715
  %721 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9276
  %722 = load %struct.redisObject*, %struct.redisObject** %721, align 8, !dbg !9276, !tbaa !757
  %723 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %722, i64 0, i32 2, !dbg !9277
  %724 = load i8*, i8** %723, align 8, !dbg !9277, !tbaa !6207
  %725 = getelementptr inbounds i8, i8* %724, i64 -1, !dbg !9281
  %726 = load i8, i8* %725, align 1, !dbg !9281, !tbaa !745
  %727 = trunc i8 %726 to i3, !dbg !9283
  switch i3 %727, label %749 [
    i3 0, label %728
    i3 1, label %731
    i3 2, label %735
    i3 3, label %740
    i3 -4, label %745
  ], !dbg !9283

; <label>:728:                                    ; preds = %720
  %729 = lshr i8 %726, 3, !dbg !9284
  %730 = zext i8 %729 to i64, !dbg !9284
  br label %749, !dbg !9285

; <label>:731:                                    ; preds = %720
  %732 = getelementptr inbounds i8, i8* %724, i64 -3, !dbg !9286
  %733 = load i8, i8* %732, align 1, !dbg !9287, !tbaa !745
  %734 = zext i8 %733 to i64, !dbg !9286
  br label %749, !dbg !9288

; <label>:735:                                    ; preds = %720
  %736 = getelementptr inbounds i8, i8* %724, i64 -5, !dbg !9289
  %737 = bitcast i8* %736 to i16*, !dbg !9290
  %738 = load i16, i16* %737, align 1, !dbg !9290, !tbaa !1493
  %739 = zext i16 %738 to i64, !dbg !9289
  br label %749, !dbg !9291

; <label>:740:                                    ; preds = %720
  %741 = getelementptr inbounds i8, i8* %724, i64 -9, !dbg !9292
  %742 = bitcast i8* %741 to i32*, !dbg !9293
  %743 = load i32, i32* %742, align 1, !dbg !9293, !tbaa !708
  %744 = zext i32 %743 to i64, !dbg !9292
  br label %749, !dbg !9294

; <label>:745:                                    ; preds = %720
  %746 = getelementptr inbounds i8, i8* %724, i64 -17, !dbg !9295
  %747 = bitcast i8* %746 to i64*, !dbg !9296
  %748 = load i64, i64* %747, align 1, !dbg !9296, !tbaa !1500
  br label %749, !dbg !9297

; <label>:749:                                    ; preds = %720, %728, %731, %735, %740, %745
  %750 = phi i64 [ %748, %745 ], [ %744, %740 ], [ %739, %735 ], [ %734, %731 ], [ %730, %728 ], [ 0, %720 ], !dbg !9298
  %751 = trunc i64 %750 to i32, !dbg !9299
  %752 = tail call i32 @keyHashSlot(i8* %724, i32 %751) #12, !dbg !9300
  %753 = zext i32 %752 to i64, !dbg !9300
  tail call void @addReplyLongLong(%struct.client* nonnull %0, i64 %753) #8, !dbg !9301
  br label %1211, !dbg !9302

; <label>:754:                                    ; preds = %715
  %755 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.193, i64 0, i64 0)) #11, !dbg !9303
  %756 = icmp eq i32 %755, 0, !dbg !9303
  %757 = and i1 %718, %756, !dbg !9304
  br i1 %757, label %758, label %773, !dbg !9304

; <label>:758:                                    ; preds = %754
  %759 = bitcast i64* %9 to i8*, !dbg !9305
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %759) #9, !dbg !9305
  %760 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9306
  %761 = load %struct.redisObject*, %struct.redisObject** %760, align 8, !dbg !9306, !tbaa !757
  %762 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %761, i64* nonnull %9, i8* null) #8, !dbg !9309
  %763 = icmp eq i32 %762, 0, !dbg !9310
  br i1 %763, label %764, label %772, !dbg !9311

; <label>:764:                                    ; preds = %758
  %765 = load i64, i64* %9, align 8, !dbg !9312, !tbaa !1148
  %766 = icmp ugt i64 %765, 16383, !dbg !9314
  br i1 %766, label %767, label %768, !dbg !9314

; <label>:767:                                    ; preds = %764
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.194, i64 0, i64 0)) #8, !dbg !9315
  br label %772, !dbg !9317

; <label>:768:                                    ; preds = %764
  %769 = trunc i64 %765 to i32, !dbg !9318
  %770 = call i32 @countKeysInSlot(i32 %769) #8, !dbg !9319
  %771 = zext i32 %770 to i64, !dbg !9319
  call void @addReplyLongLong(%struct.client* nonnull %0, i64 %771) #8, !dbg !9320
  br label %772, !dbg !9321

; <label>:772:                                    ; preds = %758, %768, %767
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %759) #9, !dbg !9321
  br label %1211

; <label>:773:                                    ; preds = %754
  %774 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i64 0, i64 0)) #11, !dbg !9322
  %775 = icmp eq i32 %774, 0, !dbg !9322
  %776 = icmp eq i32 %18, 4, !dbg !9323
  %777 = and i1 %776, %775, !dbg !9324
  br i1 %777, label %778, label %826, !dbg !9324

; <label>:778:                                    ; preds = %773
  %779 = bitcast i64* %10 to i8*, !dbg !9325
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %779) #9, !dbg !9325
  %780 = bitcast i64* %11 to i8*, !dbg !9325
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %780) #9, !dbg !9325
  %781 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9326
  %782 = load %struct.redisObject*, %struct.redisObject** %781, align 8, !dbg !9326, !tbaa !757
  %783 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %782, i64* nonnull %11, i8* null) #8, !dbg !9329
  %784 = icmp eq i32 %783, 0, !dbg !9330
  br i1 %784, label %785, label %825, !dbg !9331

; <label>:785:                                    ; preds = %778
  %786 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !9332, !tbaa !8570
  %787 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %786, i64 3, !dbg !9334
  %788 = load %struct.redisObject*, %struct.redisObject** %787, align 8, !dbg !9334, !tbaa !757
  %789 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %788, i64* nonnull %10, i8* null) #8, !dbg !9336
  %790 = icmp eq i32 %789, 0, !dbg !9337
  br i1 %790, label %791, label %825, !dbg !9338

; <label>:791:                                    ; preds = %785
  %792 = load i64, i64* %11, align 8, !dbg !9339, !tbaa !1148
  %793 = icmp ugt i64 %792, 16383, !dbg !9341
  %794 = load i64, i64* %10, align 8, !dbg !9342
  %795 = icmp slt i64 %794, 0, !dbg !9343
  %796 = or i1 %793, %795, !dbg !9341
  br i1 %796, label %797, label %798, !dbg !9341

; <label>:797:                                    ; preds = %791
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.196, i64 0, i64 0)) #8, !dbg !9344
  br label %825, !dbg !9346

; <label>:798:                                    ; preds = %791
  %799 = trunc i64 %792 to i32, !dbg !9347
  %800 = call i32 @countKeysInSlot(i32 %799) #8, !dbg !9348
  %801 = load i64, i64* %10, align 8, !dbg !9350, !tbaa !1148
  %802 = zext i32 %800 to i64, !dbg !9352
  %803 = icmp sgt i64 %801, %802, !dbg !9353
  br i1 %803, label %804, label %805, !dbg !9354

; <label>:804:                                    ; preds = %798
  store i64 %802, i64* %10, align 8, !dbg !9355, !tbaa !1148
  br label %805, !dbg !9356

; <label>:805:                                    ; preds = %804, %798
  %806 = phi i64 [ %802, %804 ], [ %801, %798 ], !dbg !9357
  %807 = shl i64 %806, 3, !dbg !9358
  %808 = call i8* @zmalloc(i64 %807) #8, !dbg !9359
  %809 = bitcast i8* %808 to %struct.redisObject**, !dbg !9359
  %810 = load i64, i64* %11, align 8, !dbg !9361, !tbaa !1148
  %811 = trunc i64 %810 to i32, !dbg !9361
  %812 = load i64, i64* %10, align 8, !dbg !9362, !tbaa !1148
  %813 = trunc i64 %812 to i32, !dbg !9362
  %814 = call i32 @getKeysInSlot(i32 %811, %struct.redisObject** %809, i32 %813) #8, !dbg !9363
  %815 = zext i32 %814 to i64, !dbg !9365
  call void @addReplyMultiBulkLen(%struct.client* nonnull %0, i64 %815) #8, !dbg !9366
  %816 = icmp eq i32 %814, 0, !dbg !9368
  br i1 %816, label %824, label %817, !dbg !9371

; <label>:817:                                    ; preds = %805, %817
  %818 = phi i64 [ %822, %817 ], [ 0, %805 ]
  %819 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %809, i64 %818, !dbg !9372
  %820 = load %struct.redisObject*, %struct.redisObject** %819, align 8, !dbg !9372, !tbaa !757
  call void @addReplyBulk(%struct.client* %0, %struct.redisObject* %820) #8, !dbg !9374
  %821 = load %struct.redisObject*, %struct.redisObject** %819, align 8, !dbg !9375, !tbaa !757
  call void @decrRefCount(%struct.redisObject* %821) #8, !dbg !9376
  %822 = add nuw nsw i64 %818, 1, !dbg !9377
  %823 = icmp eq i64 %822, %815, !dbg !9368
  br i1 %823, label %824, label %817, !dbg !9371, !llvm.loop !9378

; <label>:824:                                    ; preds = %817, %805
  call void @zfree(i8* %808) #8, !dbg !9380
  br label %825, !dbg !9381

; <label>:825:                                    ; preds = %785, %778, %824, %797
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %780) #9, !dbg !9381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %779) #9, !dbg !9381
  br label %1211

; <label>:826:                                    ; preds = %773
  %827 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i64 0, i64 0)) #11, !dbg !9382
  %828 = icmp eq i32 %827, 0, !dbg !9382
  %829 = and i1 %718, %828, !dbg !9383
  br i1 %829, label %830, label %872, !dbg !9383

; <label>:830:                                    ; preds = %826
  %831 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9384
  %832 = load %struct.redisObject*, %struct.redisObject** %831, align 8, !dbg !9384, !tbaa !757
  %833 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %832, i64 0, i32 2, !dbg !9385
  %834 = load i8*, i8** %833, align 8, !dbg !9385, !tbaa !6207
  %835 = tail call i8* @sdsnewlen(i8* %834, i64 40) #8, !dbg !9388
  %836 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9390, !tbaa !784
  %837 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %836, i64 0, i32 4, !dbg !9391
  %838 = load %struct.dict*, %struct.dict** %837, align 8, !dbg !9391, !tbaa !832
  %839 = tail call %struct.dictEntry* @dictFind(%struct.dict* %838, i8* %835) #8, !dbg !9392
  tail call void @sdsfree(i8* %835) #8, !dbg !9394
  %840 = icmp eq %struct.dictEntry* %839, null, !dbg !9395
  br i1 %840, label %846, label %841, !dbg !9396

; <label>:841:                                    ; preds = %830
  %842 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %839, i64 0, i32 1, i32 0, !dbg !9397
  %843 = bitcast i8** %842 to %struct.clusterNode**, !dbg !9397
  %844 = load %struct.clusterNode*, %struct.clusterNode** %843, align 8, !dbg !9397, !tbaa !745
  %845 = icmp eq %struct.clusterNode* %844, null, !dbg !9399
  br i1 %845, label %846, label %852, !dbg !9401

; <label>:846:                                    ; preds = %830, %841
  %847 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !9402, !tbaa !8570
  %848 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %847, i64 2, !dbg !9404
  %849 = load %struct.redisObject*, %struct.redisObject** %848, align 8, !dbg !9404, !tbaa !757
  %850 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %849, i64 0, i32 2, !dbg !9405
  %851 = load i8*, i8** %850, align 8, !dbg !9405, !tbaa !6207
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %851) #8, !dbg !9406
  br label %1211, !dbg !9407

; <label>:852:                                    ; preds = %841
  %853 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9408, !tbaa !757
  %854 = icmp eq %struct.clusterNode* %844, %853, !dbg !9410
  br i1 %854, label %855, label %856, !dbg !9411

; <label>:855:                                    ; preds = %852
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.198, i64 0, i64 0)) #8, !dbg !9412
  br label %1211, !dbg !9414

; <label>:856:                                    ; preds = %852
  %857 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %853, i64 0, i32 2, !dbg !9415
  %858 = load i32, i32* %857, align 8, !dbg !9415, !tbaa !918
  %859 = and i32 %858, 2, !dbg !9415
  %860 = icmp eq i32 %859, 0, !dbg !9415
  br i1 %860, label %866, label %861, !dbg !9417

; <label>:861:                                    ; preds = %856
  %862 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %853, i64 0, i32 8, !dbg !9418
  %863 = load %struct.clusterNode*, %struct.clusterNode** %862, align 8, !dbg !9418, !tbaa !1012
  %864 = icmp eq %struct.clusterNode* %863, %844, !dbg !9419
  br i1 %864, label %865, label %866, !dbg !9420

; <label>:865:                                    ; preds = %861
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.199, i64 0, i64 0)) #8, !dbg !9421
  br label %1211, !dbg !9423

; <label>:866:                                    ; preds = %856, %861
  tail call void @clusterBlacklistAddNode(%struct.clusterNode* nonnull %844) #12, !dbg !9424
  tail call void @clusterDelNode(%struct.clusterNode* nonnull %844) #12, !dbg !9425
  %867 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9428, !tbaa !784
  %868 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %867, i64 0, i32 22, !dbg !9429
  %869 = load i32, i32* %868, align 8, !dbg !9430, !tbaa !1465
  %870 = or i32 %869, 6, !dbg !9430
  store i32 %870, i32* %868, align 8, !dbg !9430, !tbaa !1465
  %871 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9431, !tbaa !8640
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %871) #8, !dbg !9432
  br label %1211, !dbg !9433

; <label>:872:                                    ; preds = %826
  %873 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.200, i64 0, i64 0)) #11, !dbg !9434
  %874 = icmp eq i32 %873, 0, !dbg !9434
  %875 = and i1 %718, %874, !dbg !9435
  br i1 %875, label %876, label %934, !dbg !9435

; <label>:876:                                    ; preds = %872
  %877 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9436
  %878 = load %struct.redisObject*, %struct.redisObject** %877, align 8, !dbg !9436, !tbaa !757
  %879 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %878, i64 0, i32 2, !dbg !9437
  %880 = load i8*, i8** %879, align 8, !dbg !9437, !tbaa !6207
  %881 = tail call i8* @sdsnewlen(i8* %880, i64 40) #8, !dbg !9440
  %882 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9442, !tbaa !784
  %883 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %882, i64 0, i32 4, !dbg !9443
  %884 = load %struct.dict*, %struct.dict** %883, align 8, !dbg !9443, !tbaa !832
  %885 = tail call %struct.dictEntry* @dictFind(%struct.dict* %884, i8* %881) #8, !dbg !9444
  tail call void @sdsfree(i8* %881) #8, !dbg !9446
  %886 = icmp eq %struct.dictEntry* %885, null, !dbg !9447
  br i1 %886, label %892, label %887, !dbg !9448

; <label>:887:                                    ; preds = %876
  %888 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %885, i64 0, i32 1, i32 0, !dbg !9449
  %889 = bitcast i8** %888 to %struct.clusterNode**, !dbg !9449
  %890 = load %struct.clusterNode*, %struct.clusterNode** %889, align 8, !dbg !9449, !tbaa !745
  %891 = icmp eq %struct.clusterNode* %890, null, !dbg !9451
  br i1 %891, label %892, label %898, !dbg !9453

; <label>:892:                                    ; preds = %876, %887
  %893 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !9454, !tbaa !8570
  %894 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %893, i64 2, !dbg !9456
  %895 = load %struct.redisObject*, %struct.redisObject** %894, align 8, !dbg !9456, !tbaa !757
  %896 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %895, i64 0, i32 2, !dbg !9457
  %897 = load i8*, i8** %896, align 8, !dbg !9457, !tbaa !6207
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %897) #8, !dbg !9458
  br label %1211, !dbg !9459

; <label>:898:                                    ; preds = %887
  %899 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9460, !tbaa !757
  %900 = icmp eq %struct.clusterNode* %890, %899, !dbg !9462
  br i1 %900, label %901, label %902, !dbg !9463

; <label>:901:                                    ; preds = %898
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.201, i64 0, i64 0)) #8, !dbg !9464
  br label %1211, !dbg !9466

; <label>:902:                                    ; preds = %898
  %903 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %890, i64 0, i32 2, !dbg !9467
  %904 = load i32, i32* %903, align 8, !dbg !9467, !tbaa !918
  %905 = and i32 %904, 2, !dbg !9467
  %906 = icmp eq i32 %905, 0, !dbg !9467
  br i1 %906, label %908, label %907, !dbg !9469

; <label>:907:                                    ; preds = %902
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.202, i64 0, i64 0)) #8, !dbg !9470
  br label %1211, !dbg !9472

; <label>:908:                                    ; preds = %902
  %909 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %899, i64 0, i32 2, !dbg !9473
  %910 = load i32, i32* %909, align 8, !dbg !9473, !tbaa !918
  %911 = and i32 %910, 1, !dbg !9473
  %912 = icmp eq i32 %911, 0, !dbg !9473
  br i1 %912, label %928, label %913, !dbg !9475

; <label>:913:                                    ; preds = %908
  %914 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %899, i64 0, i32 5, !dbg !9476
  %915 = load i32, i32* %914, align 8, !dbg !9476, !tbaa !1139
  %916 = icmp eq i32 %915, 0, !dbg !9477
  br i1 %916, label %917, label %927, !dbg !9478

; <label>:917:                                    ; preds = %913
  %918 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !9479, !tbaa !7981
  %919 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %918, i64 0, i32 0, !dbg !9479
  %920 = load %struct.dict*, %struct.dict** %919, align 8, !dbg !9479, !tbaa !7987
  %921 = getelementptr inbounds %struct.dict, %struct.dict* %920, i64 0, i32 2, i64 0, i32 3, !dbg !9479
  %922 = load i64, i64* %921, align 8, !dbg !9479, !tbaa !5164
  %923 = getelementptr inbounds %struct.dict, %struct.dict* %920, i64 0, i32 2, i64 1, i32 3, !dbg !9479
  %924 = load i64, i64* %923, align 8, !dbg !9479, !tbaa !5164
  %925 = sub i64 0, %924, !dbg !9480
  %926 = icmp eq i64 %922, %925, !dbg !9480
  br i1 %926, label %928, label %927, !dbg !9481

; <label>:927:                                    ; preds = %917, %913
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.203, i64 0, i64 0)) #8, !dbg !9482
  br label %1211, !dbg !9484

; <label>:928:                                    ; preds = %917, %908
  tail call void @clusterSetMaster(%struct.clusterNode* nonnull %890) #12, !dbg !9485
  %929 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9488, !tbaa !784
  %930 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %929, i64 0, i32 22, !dbg !9489
  %931 = load i32, i32* %930, align 8, !dbg !9490, !tbaa !1465
  %932 = or i32 %931, 6, !dbg !9490
  store i32 %932, i32* %930, align 8, !dbg !9490, !tbaa !1465
  %933 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9491, !tbaa !8640
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %933) #8, !dbg !9492
  br label %1211, !dbg !9493

; <label>:934:                                    ; preds = %872
  %935 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i64 0, i64 0)) #11, !dbg !9494
  %936 = icmp eq i32 %935, 0, !dbg !9494
  br i1 %936, label %941, label %937, !dbg !9495

; <label>:937:                                    ; preds = %934
  %938 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.205, i64 0, i64 0)) #11, !dbg !9496
  %939 = icmp eq i32 %938, 0, !dbg !9496
  %940 = and i1 %718, %939, !dbg !9497
  br i1 %940, label %942, label %988, !dbg !9497

; <label>:941:                                    ; preds = %934
  br i1 %718, label %942, label %1042, !dbg !9498

; <label>:942:                                    ; preds = %937, %941
  %943 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9499
  %944 = load %struct.redisObject*, %struct.redisObject** %943, align 8, !dbg !9499, !tbaa !757
  %945 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %944, i64 0, i32 2, !dbg !9500
  %946 = load i8*, i8** %945, align 8, !dbg !9500, !tbaa !6207
  %947 = tail call i8* @sdsnewlen(i8* %946, i64 40) #8, !dbg !9503
  %948 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9505, !tbaa !784
  %949 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %948, i64 0, i32 4, !dbg !9506
  %950 = load %struct.dict*, %struct.dict** %949, align 8, !dbg !9506, !tbaa !832
  %951 = tail call %struct.dictEntry* @dictFind(%struct.dict* %950, i8* %947) #8, !dbg !9507
  tail call void @sdsfree(i8* %947) #8, !dbg !9509
  %952 = icmp eq %struct.dictEntry* %951, null, !dbg !9510
  br i1 %952, label %958, label %953, !dbg !9511

; <label>:953:                                    ; preds = %942
  %954 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %951, i64 0, i32 1, i32 0, !dbg !9512
  %955 = bitcast i8** %954 to %struct.clusterNode**, !dbg !9512
  %956 = load %struct.clusterNode*, %struct.clusterNode** %955, align 8, !dbg !9512, !tbaa !745
  %957 = icmp eq %struct.clusterNode* %956, null, !dbg !9514
  br i1 %957, label %958, label %964, !dbg !9516

; <label>:958:                                    ; preds = %942, %953
  %959 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !9517, !tbaa !8570
  %960 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %959, i64 2, !dbg !9519
  %961 = load %struct.redisObject*, %struct.redisObject** %960, align 8, !dbg !9519, !tbaa !757
  %962 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %961, i64 0, i32 2, !dbg !9520
  %963 = load i8*, i8** %962, align 8, !dbg !9520, !tbaa !6207
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %963) #8, !dbg !9521
  br label %1211, !dbg !9522

; <label>:964:                                    ; preds = %953
  %965 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %956, i64 0, i32 2, !dbg !9523
  %966 = load i32, i32* %965, align 8, !dbg !9523, !tbaa !918
  %967 = and i32 %966, 2, !dbg !9523
  %968 = icmp eq i32 %967, 0, !dbg !9523
  br i1 %968, label %970, label %969, !dbg !9525

; <label>:969:                                    ; preds = %964
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.206, i64 0, i64 0)) #8, !dbg !9526
  br label %1211, !dbg !9528

; <label>:970:                                    ; preds = %964
  %971 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %956, i64 0, i32 6, !dbg !9529
  %972 = load i32, i32* %971, align 4, !dbg !9529, !tbaa !1027
  %973 = sext i32 %972 to i64, !dbg !9530
  tail call void @addReplyMultiBulkLen(%struct.client* nonnull %0, i64 %973) #8, !dbg !9531
  %974 = load i32, i32* %971, align 4, !dbg !9533, !tbaa !1027
  %975 = icmp sgt i32 %974, 0, !dbg !9534
  br i1 %975, label %976, label %1211, !dbg !9535

; <label>:976:                                    ; preds = %970
  %977 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %956, i64 0, i32 7
  br label %978, !dbg !9535

; <label>:978:                                    ; preds = %976, %978
  %979 = phi i64 [ 0, %976 ], [ %984, %978 ]
  %980 = load %struct.clusterNode**, %struct.clusterNode*** %977, align 8, !dbg !9536, !tbaa !1030
  %981 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %980, i64 %979, !dbg !9537
  %982 = load %struct.clusterNode*, %struct.clusterNode** %981, align 8, !dbg !9537, !tbaa !757
  %983 = tail call i8* @clusterGenNodeDescription(%struct.clusterNode* %982) #12, !dbg !9538
  tail call void @addReplyBulkCString(%struct.client* %0, i8* %983) #8, !dbg !9540
  tail call void @sdsfree(i8* %983) #8, !dbg !9541
  %984 = add nuw nsw i64 %979, 1, !dbg !9542
  %985 = load i32, i32* %971, align 4, !dbg !9533, !tbaa !1027
  %986 = sext i32 %985 to i64, !dbg !9534
  %987 = icmp slt i64 %984, %986, !dbg !9534
  br i1 %987, label %978, label %1211, !dbg !9535, !llvm.loop !9543

; <label>:988:                                    ; preds = %937
  %989 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.207, i64 0, i64 0)) #11, !dbg !9545
  %990 = icmp eq i32 %989, 0, !dbg !9545
  %991 = and i1 %718, %990, !dbg !9546
  br i1 %991, label %992, label %1042, !dbg !9546

; <label>:992:                                    ; preds = %988
  %993 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9547
  %994 = load %struct.redisObject*, %struct.redisObject** %993, align 8, !dbg !9547, !tbaa !757
  %995 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %994, i64 0, i32 2, !dbg !9548
  %996 = load i8*, i8** %995, align 8, !dbg !9548, !tbaa !6207
  %997 = tail call i8* @sdsnewlen(i8* %996, i64 40) #8, !dbg !9551
  %998 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9553, !tbaa !784
  %999 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %998, i64 0, i32 4, !dbg !9554
  %1000 = load %struct.dict*, %struct.dict** %999, align 8, !dbg !9554, !tbaa !832
  %1001 = tail call %struct.dictEntry* @dictFind(%struct.dict* %1000, i8* %997) #8, !dbg !9555
  tail call void @sdsfree(i8* %997) #8, !dbg !9557
  %1002 = icmp eq %struct.dictEntry* %1001, null, !dbg !9558
  br i1 %1002, label %1008, label %1003, !dbg !9559

; <label>:1003:                                   ; preds = %992
  %1004 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %1001, i64 0, i32 1, i32 0, !dbg !9560
  %1005 = bitcast i8** %1004 to %struct.clusterNode**, !dbg !9560
  %1006 = load %struct.clusterNode*, %struct.clusterNode** %1005, align 8, !dbg !9560, !tbaa !745
  %1007 = icmp eq %struct.clusterNode* %1006, null, !dbg !9562
  br i1 %1007, label %1008, label %1014, !dbg !9564

; <label>:1008:                                   ; preds = %992, %1003
  %1009 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !9565, !tbaa !8570
  %1010 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1009, i64 2, !dbg !9567
  %1011 = load %struct.redisObject*, %struct.redisObject** %1010, align 8, !dbg !9567, !tbaa !757
  %1012 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1011, i64 0, i32 2, !dbg !9568
  %1013 = load i8*, i8** %1012, align 8, !dbg !9568, !tbaa !6207
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %1013) #8, !dbg !9569
  br label %1211, !dbg !9570

; <label>:1014:                                   ; preds = %1003
  %1015 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1006, i64 0, i32 20, !dbg !9576
  %1016 = load %struct.list*, %struct.list** %1015, align 8, !dbg !9576, !tbaa !1163
  %1017 = bitcast %struct.listIter* %3 to i8*, !dbg !9578
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1017) #9, !dbg !9578
  %1018 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !9579, !tbaa !2858
  %1019 = shl nsw i64 %1018, 1, !dbg !9580
  %1020 = tail call i64 @mstime() #8, !dbg !9582
  call void @listRewind(%struct.list* %1016, %struct.listIter* nonnull %3) #8, !dbg !9585
  %1021 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #8, !dbg !9586
  %1022 = icmp eq %struct.listNode* %1021, null, !dbg !9588
  br i1 %1022, label %1036, label %1023, !dbg !9589

; <label>:1023:                                   ; preds = %1014, %1033
  %1024 = phi %struct.listNode* [ %1034, %1033 ], [ %1021, %1014 ]
  %1025 = getelementptr inbounds %struct.listNode, %struct.listNode* %1024, i64 0, i32 2, !dbg !9590
  %1026 = bitcast i8** %1025 to %struct.clusterNodeFailReport**, !dbg !9590
  %1027 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %1026, align 8, !dbg !9590, !tbaa !2817
  %1028 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %1027, i64 0, i32 1, !dbg !9592
  %1029 = load i64, i64* %1028, align 8, !dbg !9592, !tbaa !2832
  %1030 = sub nsw i64 %1020, %1029, !dbg !9593
  %1031 = icmp sgt i64 %1030, %1019, !dbg !9594
  br i1 %1031, label %1032, label %1033, !dbg !9595

; <label>:1032:                                   ; preds = %1023
  call void @listDelNode(%struct.list* %1016, %struct.listNode* nonnull %1024) #8, !dbg !9596
  br label %1033, !dbg !9596

; <label>:1033:                                   ; preds = %1032, %1023
  %1034 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #8, !dbg !9586
  %1035 = icmp eq %struct.listNode* %1034, null, !dbg !9588
  br i1 %1035, label %1036, label %1023, !dbg !9589, !llvm.loop !2878

; <label>:1036:                                   ; preds = %1033, %1014
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1017) #9, !dbg !9597
  %1037 = load %struct.list*, %struct.list** %1015, align 8, !dbg !9598, !tbaa !1163
  %1038 = getelementptr inbounds %struct.list, %struct.list* %1037, i64 0, i32 5, !dbg !9598
  %1039 = load i64, i64* %1038, align 8, !dbg !9598, !tbaa !2967
  %1040 = shl i64 %1039, 32, !dbg !9599
  %1041 = ashr exact i64 %1040, 32, !dbg !9599
  call void @addReplyLongLong(%struct.client* %0, i64 %1041) #8, !dbg !9600
  br label %1211, !dbg !9601

; <label>:1042:                                   ; preds = %941, %988
  %1043 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.208, i64 0, i64 0)) #11, !dbg !9602
  %1044 = icmp eq i32 %1043, 0, !dbg !9602
  %1045 = icmp eq i32 %35, 2, !dbg !9603
  %1046 = and i1 %1045, %1044, !dbg !9604
  br i1 %1046, label %1047, label %1128, !dbg !9604

; <label>:1047:                                   ; preds = %1042
  br i1 %718, label %1048, label %1060, !dbg !9607

; <label>:1048:                                   ; preds = %1047
  %1049 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9608
  %1050 = load %struct.redisObject*, %struct.redisObject** %1049, align 8, !dbg !9608, !tbaa !757
  %1051 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1050, i64 0, i32 2, !dbg !9612
  %1052 = load i8*, i8** %1051, align 8, !dbg !9612, !tbaa !6207
  %1053 = tail call i32 @strcasecmp(i8* %1052, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.209, i64 0, i64 0)) #11, !dbg !9613
  %1054 = icmp eq i32 %1053, 0, !dbg !9613
  br i1 %1054, label %1060, label %1055, !dbg !9614

; <label>:1055:                                   ; preds = %1048
  %1056 = tail call i32 @strcasecmp(i8* %1052, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.210, i64 0, i64 0)) #11, !dbg !9615
  %1057 = icmp eq i32 %1056, 0, !dbg !9615
  br i1 %1057, label %1060, label %1058, !dbg !9617

; <label>:1058:                                   ; preds = %1055
  %1059 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !9618, !tbaa !9620
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1059) #8, !dbg !9621
  br label %1211, !dbg !9622

; <label>:1060:                                   ; preds = %1055, %1048, %1047
  %1061 = phi i32 [ 0, %1047 ], [ 1, %1048 ], [ 1, %1055 ], !dbg !9623
  %1062 = phi i32 [ 0, %1047 ], [ 0, %1048 ], [ 1, %1055 ], !dbg !9623
  %1063 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9624, !tbaa !757
  %1064 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1063, i64 0, i32 2, !dbg !9624
  %1065 = load i32, i32* %1064, align 8, !dbg !9624, !tbaa !918
  %1066 = and i32 %1065, 1, !dbg !9624
  %1067 = icmp eq i32 %1066, 0, !dbg !9624
  br i1 %1067, label %1069, label %1068, !dbg !9626

; <label>:1068:                                   ; preds = %1060
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.211, i64 0, i64 0)) #8, !dbg !9627
  br label %1211, !dbg !9629

; <label>:1069:                                   ; preds = %1060
  %1070 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1063, i64 0, i32 8, !dbg !9630
  %1071 = load %struct.clusterNode*, %struct.clusterNode** %1070, align 8, !dbg !9630, !tbaa !1012
  %1072 = icmp eq %struct.clusterNode* %1071, null, !dbg !9632
  br i1 %1072, label %1073, label %1074, !dbg !9633

; <label>:1073:                                   ; preds = %1069
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.212, i64 0, i64 0)) #8, !dbg !9634
  br label %1211, !dbg !9636

; <label>:1074:                                   ; preds = %1069
  %1075 = icmp ne i32 %1061, 0, !dbg !9637
  br i1 %1075, label %1086, label %1076, !dbg !9639

; <label>:1076:                                   ; preds = %1074
  %1077 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1071, i64 0, i32 2, !dbg !9640
  %1078 = load i32, i32* %1077, align 8, !dbg !9640, !tbaa !918
  %1079 = and i32 %1078, 8, !dbg !9640
  %1080 = icmp eq i32 %1079, 0, !dbg !9640
  br i1 %1080, label %1081, label %1085, !dbg !9641

; <label>:1081:                                   ; preds = %1076
  %1082 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1071, i64 0, i32 19, !dbg !9642
  %1083 = load %struct.clusterLink*, %struct.clusterLink** %1082, align 8, !dbg !9642, !tbaa !1153
  %1084 = icmp eq %struct.clusterLink* %1083, null, !dbg !9643
  br i1 %1084, label %1085, label %1086, !dbg !9644

; <label>:1085:                                   ; preds = %1076, %1081
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.213, i64 0, i64 0)) #8, !dbg !9645
  br label %1211, !dbg !9647

; <label>:1086:                                   ; preds = %1081, %1074
  %1087 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9648, !tbaa !784
  %1088 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1087, i64 0, i32 17, !dbg !9650
  %1089 = load i64, i64* %1088, align 8, !dbg !9650, !tbaa !1950
  %1090 = icmp eq i64 %1089, 0, !dbg !9651
  br i1 %1090, label %1096, label %1091, !dbg !9652

; <label>:1091:                                   ; preds = %1086
  %1092 = tail call i32 @clientsArePaused() #8, !dbg !9653
  %1093 = icmp eq i32 %1092, 0, !dbg !9653
  br i1 %1093, label %1096, label %1094, !dbg !9654

; <label>:1094:                                   ; preds = %1091
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !9655, !tbaa !2134
  %1095 = tail call i32 @clientsArePaused() #8, !dbg !9656
  br label %1096, !dbg !9657

; <label>:1096:                                   ; preds = %1086, %1091, %1094
  %1097 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9658, !tbaa !784
  %1098 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1097, i64 0, i32 17, !dbg !9659
  store i64 0, i64* %1098, align 8, !dbg !9660, !tbaa !1950
  %1099 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1097, i64 0, i32 20, !dbg !9661
  store i32 0, i32* %1099, align 8, !dbg !9662, !tbaa !1953
  %1100 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1097, i64 0, i32 18, !dbg !9663
  store %struct.clusterNode* null, %struct.clusterNode** %1100, align 8, !dbg !9664, !tbaa !1956
  %1101 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1097, i64 0, i32 19, !dbg !9665
  store i64 0, i64* %1101, align 8, !dbg !9666, !tbaa !1959
  %1102 = tail call i64 @mstime() #8, !dbg !9667
  %1103 = add nsw i64 %1102, 5000, !dbg !9668
  %1104 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9669, !tbaa !784
  %1105 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1104, i64 0, i32 17, !dbg !9670
  store i64 %1103, i64* %1105, align 8, !dbg !9671, !tbaa !1950
  %1106 = icmp eq i32 %1062, 0, !dbg !9672
  br i1 %1106, label %1109, label %1107, !dbg !9674

; <label>:1107:                                   ; preds = %1096
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.214, i64 0, i64 0)) #8, !dbg !9675
  %1108 = tail call i32 @clusterBumpConfigEpochWithoutConsensus() #12, !dbg !9677
  tail call void @clusterFailoverReplaceYourMaster() #12, !dbg !9678
  br label %1126, !dbg !9679

; <label>:1109:                                   ; preds = %1096
  br i1 %1075, label %1110, label %1113, !dbg !9680

; <label>:1110:                                   ; preds = %1109
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.215, i64 0, i64 0)) #8, !dbg !9681
  %1111 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9684, !tbaa !784
  %1112 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1111, i64 0, i32 20, !dbg !9685
  store i32 1, i32* %1112, align 8, !dbg !9686, !tbaa !1953
  br label %1126, !dbg !9687

; <label>:1113:                                   ; preds = %1109
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.216, i64 0, i64 0)) #8, !dbg !9688
  %1114 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9690, !tbaa !757
  %1115 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1114, i64 0, i32 8, !dbg !9691
  %1116 = load %struct.clusterNode*, %struct.clusterNode** %1115, align 8, !dbg !9691, !tbaa !1012
  %1117 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 0, i64 0, !dbg !9694
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %1117) #9, !dbg !9694
  %1118 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1116, i64 0, i32 19, !dbg !9696
  %1119 = load %struct.clusterLink*, %struct.clusterLink** %1118, align 8, !dbg !9696, !tbaa !1153
  %1120 = icmp eq %struct.clusterLink* %1119, null, !dbg !9697
  br i1 %1120, label %1125, label %1121, !dbg !9698

; <label>:1121:                                   ; preds = %1113
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %2, i32 8) #8, !dbg !9700
  %1122 = call i32 @lwip_htonl(i32 2256) #8, !dbg !9702
  %1123 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 1, !dbg !9703
  store i32 %1122, i32* %1123, align 4, !dbg !9704, !tbaa !2627
  %1124 = load %struct.clusterLink*, %struct.clusterLink** %1118, align 8, !dbg !9705, !tbaa !1153
  call void @clusterSendMessage(%struct.clusterLink* %1124, i8* nonnull %1117, i64 2256) #8, !dbg !9706
  br label %1125, !dbg !9707

; <label>:1125:                                   ; preds = %1113, %1121
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %1117) #9, !dbg !9707
  br label %1126

; <label>:1126:                                   ; preds = %1110, %1125, %1107
  %1127 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9708, !tbaa !8640
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1127) #8, !dbg !9709
  br label %1211, !dbg !9710

; <label>:1128:                                   ; preds = %1042
  %1129 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.217, i64 0, i64 0)) #11, !dbg !9711
  %1130 = icmp eq i32 %1129, 0, !dbg !9711
  %1131 = and i1 %718, %1130, !dbg !9712
  br i1 %1131, label %1132, label %1172, !dbg !9712

; <label>:1132:                                   ; preds = %1128
  %1133 = bitcast i64* %12 to i8*, !dbg !9713
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1133) #9, !dbg !9713
  %1134 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9714
  %1135 = load %struct.redisObject*, %struct.redisObject** %1134, align 8, !dbg !9714, !tbaa !757
  %1136 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %1135, i64* nonnull %12, i8* null) #8, !dbg !9717
  %1137 = icmp eq i32 %1136, 0, !dbg !9718
  br i1 %1137, label %1138, label %1171, !dbg !9719

; <label>:1138:                                   ; preds = %1132
  %1139 = load i64, i64* %12, align 8, !dbg !9720, !tbaa !1148
  %1140 = icmp slt i64 %1139, 0, !dbg !9722
  br i1 %1140, label %1141, label %1142, !dbg !9723

; <label>:1141:                                   ; preds = %1138
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.218, i64 0, i64 0), i64 %1139) #8, !dbg !9724
  br label %1171, !dbg !9726

; <label>:1142:                                   ; preds = %1138
  %1143 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9727, !tbaa !784
  %1144 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1143, i64 0, i32 4, !dbg !9727
  %1145 = load %struct.dict*, %struct.dict** %1144, align 8, !dbg !9727, !tbaa !832
  %1146 = getelementptr inbounds %struct.dict, %struct.dict* %1145, i64 0, i32 2, i64 0, i32 3, !dbg !9727
  %1147 = load i64, i64* %1146, align 8, !dbg !9727, !tbaa !5164
  %1148 = getelementptr inbounds %struct.dict, %struct.dict* %1145, i64 0, i32 2, i64 1, i32 3, !dbg !9727
  %1149 = load i64, i64* %1148, align 8, !dbg !9727, !tbaa !5164
  %1150 = add i64 %1149, %1147, !dbg !9727
  %1151 = icmp ugt i64 %1150, 1, !dbg !9729
  br i1 %1151, label %1152, label %1153, !dbg !9730

; <label>:1152:                                   ; preds = %1142
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.219, i64 0, i64 0)) #8, !dbg !9731
  br label %1171, !dbg !9733

; <label>:1153:                                   ; preds = %1142
  %1154 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9734, !tbaa !757
  %1155 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1154, i64 0, i32 3, !dbg !9736
  %1156 = load i64, i64* %1155, align 8, !dbg !9736, !tbaa !1075
  %1157 = icmp eq i64 %1156, 0, !dbg !9737
  br i1 %1157, label %1159, label %1158, !dbg !9738

; <label>:1158:                                   ; preds = %1153
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.220, i64 0, i64 0)) #8, !dbg !9739
  br label %1171, !dbg !9741

; <label>:1159:                                   ; preds = %1153
  store i64 %1139, i64* %1155, align 8, !dbg !9742, !tbaa !1075
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.221, i64 0, i64 0), i64 %1139) #8, !dbg !9744
  %1160 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9745, !tbaa !784
  %1161 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1160, i64 0, i32 1, !dbg !9747
  %1162 = load i64, i64* %1161, align 8, !dbg !9747, !tbaa !793
  %1163 = load i64, i64* %12, align 8, !dbg !9748, !tbaa !1148
  %1164 = icmp ult i64 %1162, %1163, !dbg !9749
  br i1 %1164, label %1165, label %1166, !dbg !9750

; <label>:1165:                                   ; preds = %1159
  store i64 %1163, i64* %1161, align 8, !dbg !9751, !tbaa !793
  br label %1166, !dbg !9752

; <label>:1166:                                   ; preds = %1165, %1159
  %1167 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1160, i64 0, i32 22, !dbg !9755
  %1168 = load i32, i32* %1167, align 8, !dbg !9756, !tbaa !1465
  %1169 = or i32 %1168, 6, !dbg !9756
  store i32 %1169, i32* %1167, align 8, !dbg !9756, !tbaa !1465
  %1170 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9757, !tbaa !8640
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1170) #8, !dbg !9758
  br label %1171

; <label>:1171:                                   ; preds = %1141, %1158, %1166, %1152, %1132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1133) #9, !dbg !9759
  br label %1211

; <label>:1172:                                   ; preds = %1128
  %1173 = tail call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i64 0, i64 0)) #11, !dbg !9760
  %1174 = icmp eq i32 %1173, 0, !dbg !9760
  %1175 = and i1 %1045, %1174, !dbg !9761
  br i1 %1175, label %1176, label %1210, !dbg !9761

; <label>:1176:                                   ; preds = %1172
  br i1 %718, label %1177, label %1189, !dbg !9763

; <label>:1177:                                   ; preds = %1176
  %1178 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !9764
  %1179 = load %struct.redisObject*, %struct.redisObject** %1178, align 8, !dbg !9764, !tbaa !757
  %1180 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1179, i64 0, i32 2, !dbg !9768
  %1181 = load i8*, i8** %1180, align 8, !dbg !9768, !tbaa !6207
  %1182 = tail call i32 @strcasecmp(i8* %1181, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.223, i64 0, i64 0)) #11, !dbg !9769
  %1183 = icmp eq i32 %1182, 0, !dbg !9769
  br i1 %1183, label %1189, label %1184, !dbg !9770

; <label>:1184:                                   ; preds = %1177
  %1185 = tail call i32 @strcasecmp(i8* %1181, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0)) #11, !dbg !9771
  %1186 = icmp eq i32 %1185, 0, !dbg !9771
  br i1 %1186, label %1189, label %1187, !dbg !9773

; <label>:1187:                                   ; preds = %1184
  %1188 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !9774, !tbaa !9620
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1188) #8, !dbg !9776
  br label %1211, !dbg !9777

; <label>:1189:                                   ; preds = %1184, %1177, %1176
  %1190 = phi i32 [ 0, %1176 ], [ 1, %1177 ], [ 0, %1184 ], !dbg !9778
  %1191 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9779, !tbaa !757
  %1192 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1191, i64 0, i32 2, !dbg !9779
  %1193 = load i32, i32* %1192, align 8, !dbg !9779, !tbaa !918
  %1194 = and i32 %1193, 1, !dbg !9779
  %1195 = icmp eq i32 %1194, 0, !dbg !9779
  br i1 %1195, label %1208, label %1196, !dbg !9781

; <label>:1196:                                   ; preds = %1189
  %1197 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !9782
  %1198 = load %struct.redisDb*, %struct.redisDb** %1197, align 8, !dbg !9782, !tbaa !9783
  %1199 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %1198, i64 0, i32 0, !dbg !9782
  %1200 = load %struct.dict*, %struct.dict** %1199, align 8, !dbg !9782, !tbaa !7987
  %1201 = getelementptr inbounds %struct.dict, %struct.dict* %1200, i64 0, i32 2, i64 0, i32 3, !dbg !9782
  %1202 = load i64, i64* %1201, align 8, !dbg !9782, !tbaa !5164
  %1203 = getelementptr inbounds %struct.dict, %struct.dict* %1200, i64 0, i32 2, i64 1, i32 3, !dbg !9782
  %1204 = load i64, i64* %1203, align 8, !dbg !9782, !tbaa !5164
  %1205 = sub i64 0, %1204, !dbg !9784
  %1206 = icmp eq i64 %1202, %1205, !dbg !9784
  br i1 %1206, label %1208, label %1207, !dbg !9785

; <label>:1207:                                   ; preds = %1196
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.225, i64 0, i64 0)) #8, !dbg !9786
  br label %1211, !dbg !9788

; <label>:1208:                                   ; preds = %1196, %1189
  tail call void @clusterReset(i32 %1190) #12, !dbg !9789
  %1209 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9790, !tbaa !8640
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1209) #8, !dbg !9791
  br label %1211, !dbg !9792

; <label>:1210:                                   ; preds = %1172
  tail call void @addReplySubcommandSyntaxError(%struct.client* nonnull %0) #8, !dbg !9793
  br label %1211, !dbg !9795

; <label>:1211:                                   ; preds = %978, %970, %325, %1187, %1207, %1208, %1058, %1068, %1073, %1085, %1126, %1008, %1036, %958, %969, %892, %901, %907, %927, %928, %846, %855, %865, %866, %709, %711, %315, %348, %365, %388, %405, %526, %527, %326, %468, %449, %223, %232, %235, %243, %298, %1171, %825, %772, %113, %174, %672, %749, %537, %120, %106, %15, %135, %1210, %29
  ret void, !dbg !9796
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #2

; Function Attrs: noredzone
declare dso_local void @addReplyHelp(%struct.client*, i8**) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyErrorFormat(%struct.client*, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReply(%struct.client*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createObject(i32, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyBulk(%struct.client*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @_serverAssertWithInfo(%struct.client*, %struct.redisObject*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplySds(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @getLongLongFromObjectOrReply(%struct.client*, %struct.redisObject*, i64*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @getKeysInSlot(i32, %struct.redisObject**, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplySubcommandSyntaxError(%struct.client*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @createDumpPayload(%struct._rio*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #0 !dbg !9797 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0, !dbg !9861
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #9, !dbg !9861
  %7 = bitcast i64* %5 to i8*, !dbg !9863
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9, !dbg !9863
  %8 = tail call i8* @sdsempty() #8, !dbg !9864
  tail call void @rioInitWithBuffer(%struct._rio* %0, i8* %8) #8, !dbg !9865
  %9 = tail call i32 @rdbSaveObjectType(%struct._rio* %0, %struct.redisObject* %1) #8, !dbg !9866
  %10 = icmp eq i32 %9, 0, !dbg !9866
  br i1 %10, label %11, label %12, !dbg !9866

; <label>:11:                                     ; preds = %3
  tail call void @_serverAssert(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 4787) #8, !dbg !9866
  tail call void @_exit(i32 1) #10, !dbg !9866
  unreachable, !dbg !9866

; <label>:12:                                     ; preds = %3
  %13 = tail call i64 @rdbSaveObject(%struct._rio* %0, %struct.redisObject* %1, %struct.redisObject* %2) #8, !dbg !9867
  %14 = icmp eq i64 %13, 0, !dbg !9867
  br i1 %14, label %15, label %16, !dbg !9867

; <label>:15:                                     ; preds = %12
  tail call void @_serverAssert(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 4788) #8, !dbg !9867
  tail call void @_exit(i32 1) #10, !dbg !9867
  unreachable, !dbg !9867

; <label>:16:                                     ; preds = %12
  store i8 9, i8* %6, align 1, !dbg !9868, !tbaa !745
  %17 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1, !dbg !9869
  store i8 0, i8* %17, align 1, !dbg !9870, !tbaa !745
  %18 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 8, !dbg !9871
  %19 = bitcast %union.anon.11* %18 to i8**, !dbg !9872
  %20 = load i8*, i8** %19, align 8, !dbg !9872, !tbaa !745
  %21 = call i8* @sdscatlen(i8* %20, i8* nonnull %6, i64 2) #8, !dbg !9873
  store i8* %21, i8** %19, align 8, !dbg !9874, !tbaa !745
  %22 = getelementptr inbounds i8, i8* %21, i64 -1, !dbg !9877
  %23 = load i8, i8* %22, align 1, !dbg !9877, !tbaa !745
  %24 = trunc i8 %23 to i3, !dbg !9879
  switch i3 %24, label %46 [
    i3 0, label %25
    i3 1, label %28
    i3 2, label %32
    i3 3, label %37
    i3 -4, label %42
  ], !dbg !9879

; <label>:25:                                     ; preds = %16
  %26 = lshr i8 %23, 3, !dbg !9880
  %27 = zext i8 %26 to i64, !dbg !9880
  br label %46, !dbg !9881

; <label>:28:                                     ; preds = %16
  %29 = getelementptr inbounds i8, i8* %21, i64 -3, !dbg !9882
  %30 = load i8, i8* %29, align 1, !dbg !9883, !tbaa !745
  %31 = zext i8 %30 to i64, !dbg !9882
  br label %46, !dbg !9884

; <label>:32:                                     ; preds = %16
  %33 = getelementptr inbounds i8, i8* %21, i64 -5, !dbg !9885
  %34 = bitcast i8* %33 to i16*, !dbg !9886
  %35 = load i16, i16* %34, align 1, !dbg !9886, !tbaa !1493
  %36 = zext i16 %35 to i64, !dbg !9885
  br label %46, !dbg !9887

; <label>:37:                                     ; preds = %16
  %38 = getelementptr inbounds i8, i8* %21, i64 -9, !dbg !9888
  %39 = bitcast i8* %38 to i32*, !dbg !9889
  %40 = load i32, i32* %39, align 1, !dbg !9889, !tbaa !708
  %41 = zext i32 %40 to i64, !dbg !9888
  br label %46, !dbg !9890

; <label>:42:                                     ; preds = %16
  %43 = getelementptr inbounds i8, i8* %21, i64 -17, !dbg !9891
  %44 = bitcast i8* %43 to i64*, !dbg !9892
  %45 = load i64, i64* %44, align 1, !dbg !9892, !tbaa !1500
  br label %46, !dbg !9893

; <label>:46:                                     ; preds = %16, %25, %28, %32, %37, %42
  %47 = phi i64 [ %45, %42 ], [ %41, %37 ], [ %36, %32 ], [ %31, %28 ], [ %27, %25 ], [ 0, %16 ], !dbg !9894
  %48 = call i64 @crc64(i64 0, i8* %21, i64 %47) #8, !dbg !9895
  store i64 %48, i64* %5, align 8, !dbg !9897, !tbaa !1500
  %49 = load i8*, i8** %19, align 8, !dbg !9898, !tbaa !745
  %50 = call i8* @sdscatlen(i8* %49, i8* nonnull %7, i64 8) #8, !dbg !9899
  store i8* %50, i8** %19, align 8, !dbg !9900, !tbaa !745
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9, !dbg !9901
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #9, !dbg !9901
  ret void, !dbg !9901
}

; Function Attrs: noredzone
declare dso_local void @rioInitWithBuffer(%struct._rio*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @rdbSaveObjectType(%struct._rio*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveObject(%struct._rio*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @crc64(i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @verifyDumpPayload(i8*, i64) local_unnamed_addr #0 !dbg !9902 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !9913
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9, !dbg !9913
  %5 = icmp ult i64 %1, 10, !dbg !9914
  br i1 %5, label %24, label %6, !dbg !9916

; <label>:6:                                      ; preds = %2
  %7 = add i64 %1, -10, !dbg !9917
  %8 = getelementptr inbounds i8, i8* %0, i64 %7, !dbg !9918
  %9 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !9920
  %10 = load i8, i8* %9, align 1, !dbg !9920, !tbaa !745
  %11 = zext i8 %10 to i32, !dbg !9920
  %12 = shl nuw nsw i32 %11, 8, !dbg !9921
  %13 = load i8, i8* %8, align 1, !dbg !9922, !tbaa !745
  %14 = zext i8 %13 to i32, !dbg !9922
  %15 = or i32 %12, %14, !dbg !9923
  %16 = icmp ugt i32 %15, 9, !dbg !9925
  br i1 %16, label %24, label %17, !dbg !9927

; <label>:17:                                     ; preds = %6
  %18 = add i64 %1, -8, !dbg !9928
  %19 = tail call i64 @crc64(i64 0, i8* nonnull %0, i64 %18) #8, !dbg !9929
  store i64 %19, i64* %3, align 8, !dbg !9931, !tbaa !1500
  %20 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !9932
  %21 = call i32 @memcmp(i8* nonnull %4, i8* nonnull %20, i64 8) #8, !dbg !9933
  %22 = icmp ne i32 %21, 0, !dbg !9934
  %23 = sext i1 %22 to i32, !dbg !9935
  br label %24, !dbg !9936

; <label>:24:                                     ; preds = %6, %2, %17
  %25 = phi i32 [ %23, %17 ], [ -1, %2 ], [ -1, %6 ], !dbg !9937
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9, !dbg !9938
  ret i32 %25, !dbg !9938
}

; Function Attrs: noredzone nounwind
define dso_local void @dumpCommand(%struct.client*) local_unnamed_addr #0 !dbg !9939 {
  %2 = alloca %struct._rio, align 8
  %3 = bitcast %struct._rio* %2 to i8*, !dbg !9946
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %3) #9, !dbg !9946
  %4 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !9947
  %5 = load %struct.redisDb*, %struct.redisDb** %4, align 8, !dbg !9947, !tbaa !9783
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !9949
  %7 = load %struct.redisObject**, %struct.redisObject*** %6, align 8, !dbg !9949, !tbaa !8570
  %8 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 1, !dbg !9950
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !9950, !tbaa !757
  %10 = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* %5, %struct.redisObject* %9) #8, !dbg !9951
  %11 = icmp eq %struct.redisObject* %10, null, !dbg !9953
  br i1 %11, label %12, label %14, !dbg !9954

; <label>:12:                                     ; preds = %1
  %13 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 10), align 8, !dbg !9955, !tbaa !9957
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %13) #8, !dbg !9958
  br label %22, !dbg !9959

; <label>:14:                                     ; preds = %1
  %15 = load %struct.redisObject**, %struct.redisObject*** %6, align 8, !dbg !9960, !tbaa !8570
  %16 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %15, i64 1, !dbg !9961
  %17 = load %struct.redisObject*, %struct.redisObject** %16, align 8, !dbg !9961, !tbaa !757
  call void @createDumpPayload(%struct._rio* nonnull %2, %struct.redisObject* nonnull %10, %struct.redisObject* %17) #12, !dbg !9963
  %18 = getelementptr inbounds %struct._rio, %struct._rio* %2, i64 0, i32 8, !dbg !9964
  %19 = bitcast %union.anon.11* %18 to i8**, !dbg !9965
  %20 = load i8*, i8** %19, align 8, !dbg !9965, !tbaa !745
  %21 = call %struct.redisObject* @createObject(i32 0, i8* %20) #8, !dbg !9966
  call void @addReplyBulk(%struct.client* nonnull %0, %struct.redisObject* %21) #8, !dbg !9968
  call void @decrRefCount(%struct.redisObject* %21) #8, !dbg !9969
  br label %22, !dbg !9970

; <label>:22:                                     ; preds = %14, %12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %3) #9, !dbg !9971
  ret void, !dbg !9971
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @lookupKeyRead(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @restoreCommand(%struct.client*) local_unnamed_addr #0 !dbg !9972 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct._rio, align 8
  %7 = bitcast i64* %3 to i8*, !dbg !9990
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9, !dbg !9990
  %8 = bitcast i64* %4 to i8*, !dbg !9990
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9, !dbg !9990
  store i64 -1, i64* %4, align 8, !dbg !9991, !tbaa !1148
  %9 = bitcast i64* %5 to i8*, !dbg !9990
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9, !dbg !9990
  store i64 -1, i64* %5, align 8, !dbg !9992, !tbaa !1148
  %10 = bitcast %struct._rio* %6 to i8*, !dbg !9994
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %10) #9, !dbg !9994
  %11 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !9998
  %12 = load i32, i32* %11, align 8, !dbg !9998, !tbaa !8564
  %13 = icmp sgt i32 %12, 4, !dbg !9999
  br i1 %13, label %14, label %89, !dbg !10000

; <label>:14:                                     ; preds = %1
  %15 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9
  br label %16, !dbg !10000

; <label>:16:                                     ; preds = %14, %77
  %17 = phi i32 [ %12, %14 ], [ %83, %77 ]
  %18 = phi i64 [ -1, %14 ], [ %81, %77 ]
  %19 = phi i32 [ 4, %14 ], [ %82, %77 ]
  %20 = phi i32 [ 0, %14 ], [ %79, %77 ]
  %21 = phi i32 [ 0, %14 ], [ %78, %77 ]
  %22 = xor i32 %19, -1, !dbg !10001
  %23 = add i32 %17, %22, !dbg !10001
  %24 = load %struct.redisObject**, %struct.redisObject*** %15, align 8, !dbg !10003, !tbaa !8570
  %25 = sext i32 %19 to i64, !dbg !10005
  %26 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %24, i64 %25, !dbg !10005
  %27 = load %struct.redisObject*, %struct.redisObject** %26, align 8, !dbg !10005, !tbaa !757
  %28 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %27, i64 0, i32 2, !dbg !10006
  %29 = load i8*, i8** %28, align 8, !dbg !10006, !tbaa !6207
  %30 = call i32 @strcasecmp(i8* %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.228, i64 0, i64 0)) #11, !dbg !10007
  %31 = icmp eq i32 %30, 0, !dbg !10007
  br i1 %31, label %77, label %32, !dbg !10008

; <label>:32:                                     ; preds = %16
  %33 = call i32 @strcasecmp(i8* %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.229, i64 0, i64 0)) #11, !dbg !10009
  %34 = icmp eq i32 %33, 0, !dbg !10009
  br i1 %34, label %77, label %35, !dbg !10011

; <label>:35:                                     ; preds = %32
  %36 = call i32 @strcasecmp(i8* %29, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.230, i64 0, i64 0)) #11, !dbg !10012
  %37 = icmp eq i32 %36, 0, !dbg !10012
  %38 = icmp sgt i32 %23, 0, !dbg !10014
  %39 = and i1 %38, %37, !dbg !10015
  %40 = load i64, i64* %4, align 8, !dbg !10016
  %41 = icmp eq i64 %40, -1, !dbg !10017
  %42 = and i1 %39, %41, !dbg !10015
  br i1 %42, label %43, label %57, !dbg !10015

; <label>:43:                                     ; preds = %35
  %44 = add nsw i32 %19, 1, !dbg !10018
  %45 = sext i32 %44 to i64, !dbg !10021
  %46 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %24, i64 %45, !dbg !10021
  %47 = load %struct.redisObject*, %struct.redisObject** %46, align 8, !dbg !10021, !tbaa !757
  %48 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %47, i64* nonnull %5, i8* null) #8, !dbg !10022
  %49 = icmp eq i32 %48, 0, !dbg !10023
  br i1 %49, label %50, label %224, !dbg !10024

; <label>:50:                                     ; preds = %43
  %51 = load i64, i64* %5, align 8, !dbg !10025, !tbaa !1148
  %52 = icmp slt i64 %51, 0, !dbg !10027
  br i1 %52, label %53, label %54, !dbg !10028

; <label>:53:                                     ; preds = %50
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.231, i64 0, i64 0)) #8, !dbg !10029
  br label %224, !dbg !10031

; <label>:54:                                     ; preds = %50
  %55 = call i32 @LRU_CLOCK() #8, !dbg !10032
  %56 = zext i32 %55 to i64, !dbg !10032
  br label %77, !dbg !10033

; <label>:57:                                     ; preds = %35
  %58 = call i32 @strcasecmp(i8* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.232, i64 0, i64 0)) #11, !dbg !10034
  %59 = icmp eq i32 %58, 0, !dbg !10034
  %60 = and i1 %38, %59, !dbg !10036
  %61 = load i64, i64* %5, align 8, !dbg !10037
  %62 = icmp eq i64 %61, -1, !dbg !10038
  %63 = and i1 %60, %62, !dbg !10036
  br i1 %63, label %64, label %75, !dbg !10036

; <label>:64:                                     ; preds = %57
  %65 = add nsw i32 %19, 1, !dbg !10039
  %66 = sext i32 %65 to i64, !dbg !10042
  %67 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %24, i64 %66, !dbg !10042
  %68 = load %struct.redisObject*, %struct.redisObject** %67, align 8, !dbg !10042, !tbaa !757
  %69 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %68, i64* nonnull %4, i8* null) #8, !dbg !10043
  %70 = icmp eq i32 %69, 0, !dbg !10044
  br i1 %70, label %71, label %224, !dbg !10045

; <label>:71:                                     ; preds = %64
  %72 = load i64, i64* %4, align 8, !dbg !10046, !tbaa !1148
  %73 = icmp ugt i64 %72, 255, !dbg !10048
  br i1 %73, label %74, label %77, !dbg !10048

; <label>:74:                                     ; preds = %71
  call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.233, i64 0, i64 0)) #8, !dbg !10049
  br label %224, !dbg !10051

; <label>:75:                                     ; preds = %57
  %76 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !10052, !tbaa !9620
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %76) #8, !dbg !10054
  br label %224, !dbg !10055

; <label>:77:                                     ; preds = %71, %32, %16, %54
  %78 = phi i32 [ %21, %54 ], [ 1, %16 ], [ %21, %32 ], [ %21, %71 ], !dbg !9995
  %79 = phi i32 [ %20, %54 ], [ %20, %16 ], [ 1, %32 ], [ %20, %71 ], !dbg !9996
  %80 = phi i32 [ %44, %54 ], [ %19, %16 ], [ %19, %32 ], [ %65, %71 ], !dbg !10056
  %81 = phi i64 [ %56, %54 ], [ %18, %16 ], [ %18, %32 ], [ %18, %71 ], !dbg !10057
  %82 = add nsw i32 %80, 1, !dbg !10058
  %83 = load i32, i32* %11, align 8, !dbg !9998, !tbaa !8564
  %84 = icmp sgt i32 %83, %82, !dbg !9999
  br i1 %84, label %16, label %85, !dbg !10000, !llvm.loop !10059

; <label>:85:                                     ; preds = %77
  %86 = icmp eq i32 %78, 0, !dbg !10061
  br i1 %86, label %89, label %87, !dbg !10063

; <label>:87:                                     ; preds = %85
  %88 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !10064
  br label %102, !dbg !10063

; <label>:89:                                     ; preds = %85, %1
  %90 = phi i64 [ %81, %85 ], [ -1, %1 ]
  %91 = phi i32 [ %79, %85 ], [ 0, %1 ]
  %92 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !10066
  %93 = load %struct.redisDb*, %struct.redisDb** %92, align 8, !dbg !10066, !tbaa !9783
  %94 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !10067
  %95 = load %struct.redisObject**, %struct.redisObject*** %94, align 8, !dbg !10067, !tbaa !8570
  %96 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %95, i64 1, !dbg !10068
  %97 = load %struct.redisObject*, %struct.redisObject** %96, align 8, !dbg !10068, !tbaa !757
  %98 = call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* %93, %struct.redisObject* %97) #8, !dbg !10069
  %99 = icmp eq %struct.redisObject* %98, null, !dbg !10070
  br i1 %99, label %102, label %100, !dbg !10071

; <label>:100:                                    ; preds = %89
  %101 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 28), align 8, !dbg !10072, !tbaa !10074
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %101) #8, !dbg !10075
  br label %224, !dbg !10076

; <label>:102:                                    ; preds = %87, %89
  %103 = phi i1 [ true, %87 ], [ false, %89 ]
  %104 = phi i64 [ %81, %87 ], [ %90, %89 ]
  %105 = phi i32 [ %79, %87 ], [ %91, %89 ]
  %106 = phi %struct.redisObject*** [ %88, %87 ], [ %94, %89 ], !dbg !10064
  %107 = load %struct.redisObject**, %struct.redisObject*** %106, align 8, !dbg !10064, !tbaa !8570
  %108 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %107, i64 2, !dbg !10077
  %109 = load %struct.redisObject*, %struct.redisObject** %108, align 8, !dbg !10077, !tbaa !757
  %110 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %109, i64* nonnull %3, i8* null) #8, !dbg !10079
  %111 = icmp eq i32 %110, 0, !dbg !10080
  br i1 %111, label %112, label %224, !dbg !10081

; <label>:112:                                    ; preds = %102
  %113 = load i64, i64* %3, align 8, !dbg !10082, !tbaa !1148
  %114 = icmp slt i64 %113, 0, !dbg !10084
  br i1 %114, label %115, label %116, !dbg !10085

; <label>:115:                                    ; preds = %112
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.234, i64 0, i64 0)) #8, !dbg !10086
  br label %224, !dbg !10088

; <label>:116:                                    ; preds = %112
  %117 = load %struct.redisObject**, %struct.redisObject*** %106, align 8, !dbg !10089, !tbaa !8570
  %118 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %117, i64 3, !dbg !10091
  %119 = load %struct.redisObject*, %struct.redisObject** %118, align 8, !dbg !10091, !tbaa !757
  %120 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %119, i64 0, i32 2, !dbg !10092
  %121 = load i8*, i8** %120, align 8, !dbg !10092, !tbaa !6207
  %122 = getelementptr inbounds i8, i8* %121, i64 -1, !dbg !10095
  %123 = load i8, i8* %122, align 1, !dbg !10095, !tbaa !745
  %124 = trunc i8 %123 to i3, !dbg !10097
  switch i3 %124, label %125 [
    i3 0, label %127
    i3 1, label %130
    i3 2, label %134
    i3 3, label %139
    i3 -4, label %144
  ], !dbg !10097

; <label>:125:                                    ; preds = %116
  %126 = bitcast i64* %2 to i8*, !dbg !10101
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #9, !dbg !10101
  br label %163, !dbg !10102

; <label>:127:                                    ; preds = %116
  %128 = lshr i8 %123, 3, !dbg !10103
  %129 = zext i8 %128 to i64, !dbg !10103
  br label %148, !dbg !10104

; <label>:130:                                    ; preds = %116
  %131 = getelementptr inbounds i8, i8* %121, i64 -3, !dbg !10105
  %132 = load i8, i8* %131, align 1, !dbg !10106, !tbaa !745
  %133 = zext i8 %132 to i64, !dbg !10105
  br label %148, !dbg !10107

; <label>:134:                                    ; preds = %116
  %135 = getelementptr inbounds i8, i8* %121, i64 -5, !dbg !10108
  %136 = bitcast i8* %135 to i16*, !dbg !10109
  %137 = load i16, i16* %136, align 1, !dbg !10109, !tbaa !1493
  %138 = zext i16 %137 to i64, !dbg !10108
  br label %148, !dbg !10110

; <label>:139:                                    ; preds = %116
  %140 = getelementptr inbounds i8, i8* %121, i64 -9, !dbg !10111
  %141 = bitcast i8* %140 to i32*, !dbg !10112
  %142 = load i32, i32* %141, align 1, !dbg !10112, !tbaa !708
  %143 = zext i32 %142 to i64, !dbg !10111
  br label %148, !dbg !10113

; <label>:144:                                    ; preds = %116
  %145 = getelementptr inbounds i8, i8* %121, i64 -17, !dbg !10114
  %146 = bitcast i8* %145 to i64*, !dbg !10115
  %147 = load i64, i64* %146, align 1, !dbg !10115, !tbaa !1500
  br label %148, !dbg !10116

; <label>:148:                                    ; preds = %127, %130, %134, %139, %144
  %149 = phi i64 [ %147, %144 ], [ %143, %139 ], [ %138, %134 ], [ %133, %130 ], [ %129, %127 ], !dbg !10117
  %150 = bitcast i64* %2 to i8*, !dbg !10101
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #9, !dbg !10101
  %151 = icmp ult i64 %149, 10, !dbg !10118
  br i1 %151, label %163, label %152, !dbg !10102

; <label>:152:                                    ; preds = %148
  %153 = add i64 %149, -10, !dbg !10119
  %154 = getelementptr inbounds i8, i8* %121, i64 %153, !dbg !10120
  %155 = getelementptr inbounds i8, i8* %154, i64 1, !dbg !10122
  %156 = load i8, i8* %155, align 1, !dbg !10122, !tbaa !745
  %157 = zext i8 %156 to i32, !dbg !10122
  %158 = shl nuw nsw i32 %157, 8, !dbg !10123
  %159 = load i8, i8* %154, align 1, !dbg !10124, !tbaa !745
  %160 = zext i8 %159 to i32, !dbg !10124
  %161 = or i32 %158, %160, !dbg !10125
  %162 = icmp ugt i32 %161, 9, !dbg !10127
  br i1 %162, label %163, label %165, !dbg !10128

; <label>:163:                                    ; preds = %148, %152, %125
  %164 = phi i8* [ %126, %125 ], [ %150, %152 ], [ %150, %148 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #9, !dbg !10129
  br label %171, !dbg !10130

; <label>:165:                                    ; preds = %152
  %166 = add i64 %149, -8, !dbg !10131
  %167 = call i64 @crc64(i64 0, i8* nonnull %121, i64 %166) #8, !dbg !10132
  store i64 %167, i64* %2, align 8, !dbg !10134, !tbaa !1500
  %168 = getelementptr inbounds i8, i8* %154, i64 2, !dbg !10135
  %169 = call i32 @memcmp(i8* nonnull %150, i8* nonnull %168, i64 8) #8, !dbg !10136
  %170 = icmp eq i32 %169, 0, !dbg !10137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #9, !dbg !10129
  br i1 %170, label %172, label %171, !dbg !10130

; <label>:171:                                    ; preds = %165, %163
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.235, i64 0, i64 0)) #8, !dbg !10138
  br label %224, !dbg !10140

; <label>:172:                                    ; preds = %165
  %173 = load %struct.redisObject**, %struct.redisObject*** %106, align 8, !dbg !10141, !tbaa !8570
  %174 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %173, i64 3, !dbg !10142
  %175 = load %struct.redisObject*, %struct.redisObject** %174, align 8, !dbg !10142, !tbaa !757
  %176 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %175, i64 0, i32 2, !dbg !10143
  %177 = load i8*, i8** %176, align 8, !dbg !10143, !tbaa !6207
  call void @rioInitWithBuffer(%struct._rio* nonnull %6, i8* %177) #8, !dbg !10145
  %178 = call i32 @rdbLoadObjectType(%struct._rio* nonnull %6) #8, !dbg !10146
  %179 = icmp eq i32 %178, -1, !dbg !10149
  br i1 %179, label %186, label %180, !dbg !10150

; <label>:180:                                    ; preds = %172
  %181 = load %struct.redisObject**, %struct.redisObject*** %106, align 8, !dbg !10151, !tbaa !8570
  %182 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %181, i64 1, !dbg !10152
  %183 = load %struct.redisObject*, %struct.redisObject** %182, align 8, !dbg !10152, !tbaa !757
  %184 = call %struct.redisObject* @rdbLoadObject(i32 %178, %struct._rio* nonnull %6, %struct.redisObject* %183) #8, !dbg !10153
  %185 = icmp eq %struct.redisObject* %184, null, !dbg !10155
  br i1 %185, label %186, label %187, !dbg !10156

; <label>:186:                                    ; preds = %180, %172
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.236, i64 0, i64 0)) #8, !dbg !10157
  br label %224, !dbg !10159

; <label>:187:                                    ; preds = %180
  %188 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !10057
  br i1 %103, label %189, label %195, !dbg !10160

; <label>:189:                                    ; preds = %187
  %190 = load %struct.redisDb*, %struct.redisDb** %188, align 8, !dbg !10161, !tbaa !9783
  %191 = load %struct.redisObject**, %struct.redisObject*** %106, align 8, !dbg !10163, !tbaa !8570
  %192 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %191, i64 1, !dbg !10164
  %193 = load %struct.redisObject*, %struct.redisObject** %192, align 8, !dbg !10164, !tbaa !757
  %194 = call i32 @dbDelete(%struct.redisDb* %190, %struct.redisObject* %193) #8, !dbg !10165
  br label %195, !dbg !10165

; <label>:195:                                    ; preds = %187, %189
  %196 = load %struct.redisDb*, %struct.redisDb** %188, align 8, !dbg !10166, !tbaa !9783
  %197 = load %struct.redisObject**, %struct.redisObject*** %106, align 8, !dbg !10167, !tbaa !8570
  %198 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %197, i64 1, !dbg !10168
  %199 = load %struct.redisObject*, %struct.redisObject** %198, align 8, !dbg !10168, !tbaa !757
  call void @dbAdd(%struct.redisDb* %196, %struct.redisObject* %199, %struct.redisObject* nonnull %184) #8, !dbg !10169
  %200 = load i64, i64* %3, align 8, !dbg !10170, !tbaa !1148
  %201 = icmp eq i64 %200, 0, !dbg !10170
  br i1 %201, label %214, label %202, !dbg !10172

; <label>:202:                                    ; preds = %195
  %203 = icmp eq i32 %105, 0, !dbg !10173
  br i1 %203, label %204, label %208, !dbg !10176

; <label>:204:                                    ; preds = %202
  %205 = call i64 @mstime() #8, !dbg !10177
  %206 = load i64, i64* %3, align 8, !dbg !10178, !tbaa !1148
  %207 = add nsw i64 %206, %205, !dbg !10178
  store i64 %207, i64* %3, align 8, !dbg !10178, !tbaa !1148
  br label %208, !dbg !10179

; <label>:208:                                    ; preds = %202, %204
  %209 = phi i64 [ %200, %202 ], [ %207, %204 ], !dbg !10180
  %210 = load %struct.redisDb*, %struct.redisDb** %188, align 8, !dbg !10181, !tbaa !9783
  %211 = load %struct.redisObject**, %struct.redisObject*** %106, align 8, !dbg !10182, !tbaa !8570
  %212 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %211, i64 1, !dbg !10183
  %213 = load %struct.redisObject*, %struct.redisObject** %212, align 8, !dbg !10183, !tbaa !757
  call void @setExpire(%struct.client* nonnull %0, %struct.redisDb* %210, %struct.redisObject* %213, i64 %209) #8, !dbg !10184
  br label %214, !dbg !10185

; <label>:214:                                    ; preds = %195, %208
  %215 = load i64, i64* %4, align 8, !dbg !10186, !tbaa !1148
  %216 = load i64, i64* %5, align 8, !dbg !10187, !tbaa !1148
  call void @objectSetLRUOrLFU(%struct.redisObject* nonnull %184, i64 %215, i64 %216, i64 %104) #8, !dbg !10188
  %217 = load %struct.redisDb*, %struct.redisDb** %188, align 8, !dbg !10189, !tbaa !9783
  %218 = load %struct.redisObject**, %struct.redisObject*** %106, align 8, !dbg !10190, !tbaa !8570
  %219 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %218, i64 1, !dbg !10191
  %220 = load %struct.redisObject*, %struct.redisObject** %219, align 8, !dbg !10191, !tbaa !757
  call void @signalModifiedKey(%struct.redisDb* %217, %struct.redisObject* %220) #8, !dbg !10192
  %221 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10193, !tbaa !8640
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %221) #8, !dbg !10194
  %222 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !10195, !tbaa !10196
  %223 = add nsw i64 %222, 1, !dbg !10195
  store i64 %223, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !10195, !tbaa !10196
  br label %224, !dbg !10197

; <label>:224:                                    ; preds = %64, %43, %75, %74, %53, %102, %214, %186, %171, %115, %100
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %10) #9, !dbg !10197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9, !dbg !10197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9, !dbg !10197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9, !dbg !10197
  ret void, !dbg !10197
}

; Function Attrs: noredzone
declare dso_local i32 @LRU_CLOCK() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @lookupKeyWrite(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @rdbLoadObjectType(%struct._rio*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @rdbLoadObject(i32, %struct._rio*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dbDelete(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @dbAdd(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @setExpire(%struct.client*, %struct.redisDb*, %struct.redisObject*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @objectSetLRUOrLFU(%struct.redisObject*, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @signalModifiedKey(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.migrateCachedSocket* @migrateGetSocket(%struct.client*, %struct.redisObject* nocapture readonly, %struct.redisObject* nocapture readonly, i64) local_unnamed_addr #0 !dbg !10198 {
  %5 = tail call i8* @sdsempty() #8, !dbg !10223
  %6 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !10225
  %7 = load i8*, i8** %6, align 8, !dbg !10225, !tbaa !6207
  %8 = getelementptr inbounds i8, i8* %7, i64 -1, !dbg !10228
  %9 = load i8, i8* %8, align 1, !dbg !10228, !tbaa !745
  %10 = trunc i8 %9 to i3, !dbg !10230
  switch i3 %10, label %32 [
    i3 0, label %11
    i3 1, label %14
    i3 2, label %18
    i3 3, label %23
    i3 -4, label %28
  ], !dbg !10230

; <label>:11:                                     ; preds = %4
  %12 = lshr i8 %9, 3, !dbg !10231
  %13 = zext i8 %12 to i64, !dbg !10231
  br label %32, !dbg !10232

; <label>:14:                                     ; preds = %4
  %15 = getelementptr inbounds i8, i8* %7, i64 -3, !dbg !10233
  %16 = load i8, i8* %15, align 1, !dbg !10234, !tbaa !745
  %17 = zext i8 %16 to i64, !dbg !10233
  br label %32, !dbg !10235

; <label>:18:                                     ; preds = %4
  %19 = getelementptr inbounds i8, i8* %7, i64 -5, !dbg !10236
  %20 = bitcast i8* %19 to i16*, !dbg !10237
  %21 = load i16, i16* %20, align 1, !dbg !10237, !tbaa !1493
  %22 = zext i16 %21 to i64, !dbg !10236
  br label %32, !dbg !10238

; <label>:23:                                     ; preds = %4
  %24 = getelementptr inbounds i8, i8* %7, i64 -9, !dbg !10239
  %25 = bitcast i8* %24 to i32*, !dbg !10240
  %26 = load i32, i32* %25, align 1, !dbg !10240, !tbaa !708
  %27 = zext i32 %26 to i64, !dbg !10239
  br label %32, !dbg !10241

; <label>:28:                                     ; preds = %4
  %29 = getelementptr inbounds i8, i8* %7, i64 -17, !dbg !10242
  %30 = bitcast i8* %29 to i64*, !dbg !10243
  %31 = load i64, i64* %30, align 1, !dbg !10243, !tbaa !1500
  br label %32, !dbg !10244

; <label>:32:                                     ; preds = %4, %11, %14, %18, %23, %28
  %33 = phi i64 [ %31, %28 ], [ %27, %23 ], [ %22, %18 ], [ %17, %14 ], [ %13, %11 ], [ 0, %4 ], !dbg !10245
  %34 = tail call i8* @sdscatlen(i8* %5, i8* %7, i64 %33) #8, !dbg !10246
  %35 = tail call i8* @sdscatlen(i8* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #8, !dbg !10247
  %36 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !10248
  %37 = load i8*, i8** %36, align 8, !dbg !10248, !tbaa !6207
  %38 = getelementptr inbounds i8, i8* %37, i64 -1, !dbg !10251
  %39 = load i8, i8* %38, align 1, !dbg !10251, !tbaa !745
  %40 = trunc i8 %39 to i3, !dbg !10253
  switch i3 %40, label %62 [
    i3 0, label %41
    i3 1, label %44
    i3 2, label %48
    i3 3, label %53
    i3 -4, label %58
  ], !dbg !10253

; <label>:41:                                     ; preds = %32
  %42 = lshr i8 %39, 3, !dbg !10254
  %43 = zext i8 %42 to i64, !dbg !10254
  br label %62, !dbg !10255

; <label>:44:                                     ; preds = %32
  %45 = getelementptr inbounds i8, i8* %37, i64 -3, !dbg !10256
  %46 = load i8, i8* %45, align 1, !dbg !10257, !tbaa !745
  %47 = zext i8 %46 to i64, !dbg !10256
  br label %62, !dbg !10258

; <label>:48:                                     ; preds = %32
  %49 = getelementptr inbounds i8, i8* %37, i64 -5, !dbg !10259
  %50 = bitcast i8* %49 to i16*, !dbg !10260
  %51 = load i16, i16* %50, align 1, !dbg !10260, !tbaa !1493
  %52 = zext i16 %51 to i64, !dbg !10259
  br label %62, !dbg !10261

; <label>:53:                                     ; preds = %32
  %54 = getelementptr inbounds i8, i8* %37, i64 -9, !dbg !10262
  %55 = bitcast i8* %54 to i32*, !dbg !10263
  %56 = load i32, i32* %55, align 1, !dbg !10263, !tbaa !708
  %57 = zext i32 %56 to i64, !dbg !10262
  br label %62, !dbg !10264

; <label>:58:                                     ; preds = %32
  %59 = getelementptr inbounds i8, i8* %37, i64 -17, !dbg !10265
  %60 = bitcast i8* %59 to i64*, !dbg !10266
  %61 = load i64, i64* %60, align 1, !dbg !10266, !tbaa !1500
  br label %62, !dbg !10267

; <label>:62:                                     ; preds = %32, %41, %44, %48, %53, %58
  %63 = phi i64 [ %61, %58 ], [ %57, %53 ], [ %52, %48 ], [ %47, %44 ], [ %43, %41 ], [ 0, %32 ], !dbg !10268
  %64 = tail call i8* @sdscatlen(i8* %35, i8* %37, i64 %63) #8, !dbg !10269
  %65 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10270, !tbaa !10271
  %66 = tail call i8* @dictFetchValue(%struct.dict* %65, i8* %64) #8, !dbg !10272
  %67 = icmp eq i8* %66, null, !dbg !10273
  br i1 %67, label %73, label %68, !dbg !10275

; <label>:68:                                     ; preds = %62
  %69 = bitcast i8* %66 to %struct.migrateCachedSocket*, !dbg !10272
  tail call void @sdsfree(i8* %64) #8, !dbg !10277
  %70 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !10279, !tbaa !3243
  %71 = getelementptr inbounds i8, i8* %66, i64 16, !dbg !10280
  %72 = bitcast i8* %71 to i64*, !dbg !10280
  store i64 %70, i64* %72, align 8, !dbg !10281, !tbaa !10282
  br label %126, !dbg !10284

; <label>:73:                                     ; preds = %62
  %74 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10285, !tbaa !10271
  %75 = getelementptr inbounds %struct.dict, %struct.dict* %74, i64 0, i32 2, i64 0, i32 3, !dbg !10285
  %76 = load i64, i64* %75, align 8, !dbg !10285, !tbaa !5164
  %77 = getelementptr inbounds %struct.dict, %struct.dict* %74, i64 0, i32 2, i64 1, i32 3, !dbg !10285
  %78 = load i64, i64* %77, align 8, !dbg !10285, !tbaa !5164
  %79 = add i64 %78, %76, !dbg !10285
  %80 = icmp eq i64 %79, 64, !dbg !10286
  br i1 %80, label %81, label %92, !dbg !10287

; <label>:81:                                     ; preds = %73
  %82 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %74) #8, !dbg !10288
  %83 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %82, i64 0, i32 1, i32 0, !dbg !10290
  %84 = load i8*, i8** %83, align 8, !dbg !10290, !tbaa !745
  %85 = bitcast i8* %84 to i32*, !dbg !10291
  %86 = load i32, i32* %85, align 8, !dbg !10291, !tbaa !10292
  %87 = tail call i32 @close(i32 %86) #8, !dbg !10293
  tail call void @zfree(i8* %84) #8, !dbg !10294
  %88 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10295, !tbaa !10271
  %89 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %82, i64 0, i32 0, !dbg !10296
  %90 = load i8*, i8** %89, align 8, !dbg !10296, !tbaa !3249
  %91 = tail call i32 @dictDelete(%struct.dict* %88, i8* %90) #8, !dbg !10297
  br label %92, !dbg !10298

; <label>:92:                                     ; preds = %81, %73
  %93 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !10299
  %94 = load %struct.redisObject**, %struct.redisObject*** %93, align 8, !dbg !10299, !tbaa !8570
  %95 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %94, i64 1, !dbg !10300
  %96 = load %struct.redisObject*, %struct.redisObject** %95, align 8, !dbg !10300, !tbaa !757
  %97 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %96, i64 0, i32 2, !dbg !10301
  %98 = load i8*, i8** %97, align 8, !dbg !10301, !tbaa !6207
  %99 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %94, i64 2, !dbg !10302
  %100 = load %struct.redisObject*, %struct.redisObject** %99, align 8, !dbg !10302, !tbaa !757
  %101 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %100, i64 0, i32 2, !dbg !10303
  %102 = load i8*, i8** %101, align 8, !dbg !10303, !tbaa !6207
  %103 = tail call i32 @atoi(i8* %102) #8, !dbg !10304
  %104 = tail call i32 @anetTcpNonBlockConnect(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i8* %98, i32 %103) #8, !dbg !10305
  %105 = icmp eq i32 %104, -1, !dbg !10307
  br i1 %105, label %106, label %107, !dbg !10309

; <label>:106:                                    ; preds = %92
  tail call void @sdsfree(i8* %64) #8, !dbg !10310
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.238, i64 0, i64 0), i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0)) #8, !dbg !10312
  br label %126, !dbg !10313

; <label>:107:                                    ; preds = %92
  %108 = tail call i32 @anetEnableTcpNoDelay(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i32 %104) #8, !dbg !10314
  %109 = tail call i32 @aeWait(i32 %104, i32 2, i64 %3) #8, !dbg !10315
  %110 = and i32 %109, 2, !dbg !10317
  %111 = icmp eq i32 %110, 0, !dbg !10318
  br i1 %111, label %112, label %115, !dbg !10319

; <label>:112:                                    ; preds = %107
  tail call void @sdsfree(i8* %64) #8, !dbg !10320
  %113 = tail call i8* @sdsnew(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.239, i64 0, i64 0)) #8, !dbg !10322
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %113) #8, !dbg !10323
  %114 = tail call i32 @close(i32 %104) #8, !dbg !10324
  br label %126, !dbg !10325

; <label>:115:                                    ; preds = %107
  %116 = tail call i8* @zmalloc(i64 24) #8, !dbg !10326
  %117 = bitcast i8* %116 to %struct.migrateCachedSocket*, !dbg !10326
  %118 = bitcast i8* %116 to i32*, !dbg !10327
  store i32 %104, i32* %118, align 8, !dbg !10328, !tbaa !10292
  %119 = getelementptr inbounds i8, i8* %116, i64 8, !dbg !10329
  %120 = bitcast i8* %119 to i64*, !dbg !10329
  store i64 -1, i64* %120, align 8, !dbg !10330, !tbaa !10331
  %121 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !10332, !tbaa !3243
  %122 = getelementptr inbounds i8, i8* %116, i64 16, !dbg !10333
  %123 = bitcast i8* %122 to i64*, !dbg !10333
  store i64 %121, i64* %123, align 8, !dbg !10334, !tbaa !10282
  %124 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10335, !tbaa !10271
  %125 = tail call i32 @dictAdd(%struct.dict* %124, i8* %64, i8* %116) #8, !dbg !10336
  br label %126, !dbg !10337

; <label>:126:                                    ; preds = %115, %112, %106, %68
  %127 = phi %struct.migrateCachedSocket* [ %69, %68 ], [ null, %106 ], [ null, %112 ], [ %117, %115 ], !dbg !10338
  ret %struct.migrateCachedSocket* %127, !dbg !10339
}

; Function Attrs: noredzone
declare dso_local i8* @dictFetchValue(%struct.dict*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetTcpNonBlockConnect(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @aeWait(i32, i32, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsnew(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @migrateCloseSocket(%struct.redisObject* nocapture readonly, %struct.redisObject* nocapture readonly) local_unnamed_addr #0 !dbg !10340 {
  %3 = tail call i8* @sdsempty() #8, !dbg !10348
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2, !dbg !10350
  %5 = load i8*, i8** %4, align 8, !dbg !10350, !tbaa !6207
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !10353
  %7 = load i8, i8* %6, align 1, !dbg !10353, !tbaa !745
  %8 = trunc i8 %7 to i3, !dbg !10355
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !10355

; <label>:9:                                      ; preds = %2
  %10 = lshr i8 %7, 3, !dbg !10356
  %11 = zext i8 %10 to i64, !dbg !10356
  br label %30, !dbg !10357

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !10358
  %14 = load i8, i8* %13, align 1, !dbg !10359, !tbaa !745
  %15 = zext i8 %14 to i64, !dbg !10358
  br label %30, !dbg !10360

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !10361
  %18 = bitcast i8* %17 to i16*, !dbg !10362
  %19 = load i16, i16* %18, align 1, !dbg !10362, !tbaa !1493
  %20 = zext i16 %19 to i64, !dbg !10361
  br label %30, !dbg !10363

; <label>:21:                                     ; preds = %2
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !10364
  %23 = bitcast i8* %22 to i32*, !dbg !10365
  %24 = load i32, i32* %23, align 1, !dbg !10365, !tbaa !708
  %25 = zext i32 %24 to i64, !dbg !10364
  br label %30, !dbg !10366

; <label>:26:                                     ; preds = %2
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !10367
  %28 = bitcast i8* %27 to i64*, !dbg !10368
  %29 = load i64, i64* %28, align 1, !dbg !10368, !tbaa !1500
  br label %30, !dbg !10369

; <label>:30:                                     ; preds = %2, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %2 ], !dbg !10370
  %32 = tail call i8* @sdscatlen(i8* %3, i8* %5, i64 %31) #8, !dbg !10371
  %33 = tail call i8* @sdscatlen(i8* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #8, !dbg !10372
  %34 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !10373
  %35 = load i8*, i8** %34, align 8, !dbg !10373, !tbaa !6207
  %36 = getelementptr inbounds i8, i8* %35, i64 -1, !dbg !10376
  %37 = load i8, i8* %36, align 1, !dbg !10376, !tbaa !745
  %38 = trunc i8 %37 to i3, !dbg !10378
  switch i3 %38, label %60 [
    i3 0, label %39
    i3 1, label %42
    i3 2, label %46
    i3 3, label %51
    i3 -4, label %56
  ], !dbg !10378

; <label>:39:                                     ; preds = %30
  %40 = lshr i8 %37, 3, !dbg !10379
  %41 = zext i8 %40 to i64, !dbg !10379
  br label %60, !dbg !10380

; <label>:42:                                     ; preds = %30
  %43 = getelementptr inbounds i8, i8* %35, i64 -3, !dbg !10381
  %44 = load i8, i8* %43, align 1, !dbg !10382, !tbaa !745
  %45 = zext i8 %44 to i64, !dbg !10381
  br label %60, !dbg !10383

; <label>:46:                                     ; preds = %30
  %47 = getelementptr inbounds i8, i8* %35, i64 -5, !dbg !10384
  %48 = bitcast i8* %47 to i16*, !dbg !10385
  %49 = load i16, i16* %48, align 1, !dbg !10385, !tbaa !1493
  %50 = zext i16 %49 to i64, !dbg !10384
  br label %60, !dbg !10386

; <label>:51:                                     ; preds = %30
  %52 = getelementptr inbounds i8, i8* %35, i64 -9, !dbg !10387
  %53 = bitcast i8* %52 to i32*, !dbg !10388
  %54 = load i32, i32* %53, align 1, !dbg !10388, !tbaa !708
  %55 = zext i32 %54 to i64, !dbg !10387
  br label %60, !dbg !10389

; <label>:56:                                     ; preds = %30
  %57 = getelementptr inbounds i8, i8* %35, i64 -17, !dbg !10390
  %58 = bitcast i8* %57 to i64*, !dbg !10391
  %59 = load i64, i64* %58, align 1, !dbg !10391, !tbaa !1500
  br label %60, !dbg !10392

; <label>:60:                                     ; preds = %30, %39, %42, %46, %51, %56
  %61 = phi i64 [ %59, %56 ], [ %55, %51 ], [ %50, %46 ], [ %45, %42 ], [ %41, %39 ], [ 0, %30 ], !dbg !10393
  %62 = tail call i8* @sdscatlen(i8* %33, i8* %35, i64 %61) #8, !dbg !10394
  %63 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10395, !tbaa !10271
  %64 = tail call i8* @dictFetchValue(%struct.dict* %63, i8* %62) #8, !dbg !10396
  %65 = icmp eq i8* %64, null, !dbg !10397
  br i1 %65, label %66, label %67, !dbg !10399

; <label>:66:                                     ; preds = %60
  tail call void @sdsfree(i8* %62) #8, !dbg !10400
  br label %73, !dbg !10402

; <label>:67:                                     ; preds = %60
  %68 = bitcast i8* %64 to i32*, !dbg !10404
  %69 = load i32, i32* %68, align 8, !dbg !10404, !tbaa !10292
  %70 = tail call i32 @close(i32 %69) #8, !dbg !10405
  tail call void @zfree(i8* nonnull %64) #8, !dbg !10406
  %71 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10407, !tbaa !10271
  %72 = tail call i32 @dictDelete(%struct.dict* %71, i8* %62) #8, !dbg !10408
  tail call void @sdsfree(i8* %62) #8, !dbg !10409
  br label %73, !dbg !10410

; <label>:73:                                     ; preds = %67, %66
  ret void, !dbg !10410
}

; Function Attrs: noredzone nounwind
define dso_local void @migrateCloseTimedoutSockets() local_unnamed_addr #0 !dbg !10411 {
  %1 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10417, !tbaa !10271
  %2 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %1) #8, !dbg !10418
  %3 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %2) #8, !dbg !10420
  %4 = icmp eq %struct.dictEntry* %3, null, !dbg !10422
  br i1 %4, label %26, label %5, !dbg !10423

; <label>:5:                                      ; preds = %0, %23
  %6 = phi %struct.dictEntry* [ %24, %23 ], [ %3, %0 ]
  %7 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %6, i64 0, i32 1, i32 0, !dbg !10424
  %8 = load i8*, i8** %7, align 8, !dbg !10424, !tbaa !745
  %9 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !10425, !tbaa !3243
  %10 = getelementptr inbounds i8, i8* %8, i64 16, !dbg !10427
  %11 = bitcast i8* %10 to i64*, !dbg !10427
  %12 = load i64, i64* %11, align 8, !dbg !10427, !tbaa !10282
  %13 = sub nsw i64 %9, %12, !dbg !10428
  %14 = icmp sgt i64 %13, 10, !dbg !10429
  br i1 %14, label %15, label %23, !dbg !10430

; <label>:15:                                     ; preds = %5
  %16 = bitcast i8* %8 to i32*, !dbg !10432
  %17 = load i32, i32* %16, align 8, !dbg !10432, !tbaa !10292
  %18 = tail call i32 @close(i32 %17) #8, !dbg !10434
  tail call void @zfree(i8* %8) #8, !dbg !10435
  %19 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10436, !tbaa !10271
  %20 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %6, i64 0, i32 0, !dbg !10437
  %21 = load i8*, i8** %20, align 8, !dbg !10437, !tbaa !3249
  %22 = tail call i32 @dictDelete(%struct.dict* %19, i8* %21) #8, !dbg !10438
  br label %23, !dbg !10439

; <label>:23:                                     ; preds = %15, %5
  %24 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %2) #8, !dbg !10420
  %25 = icmp eq %struct.dictEntry* %24, null, !dbg !10422
  br i1 %25, label %26, label %5, !dbg !10423, !llvm.loop !10440

; <label>:26:                                     ; preds = %23, %0
  tail call void @dictReleaseIterator(%struct.dictIterator* %2) #8, !dbg !10442
  ret void, !dbg !10443
}

; Function Attrs: noredzone nounwind
define dso_local void @migrateCommand(%struct.client*) #0 !dbg !10444 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct._rio, align 8
  %5 = alloca %struct._rio, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [1024 x i8], align 16
  %9 = bitcast i64* %2 to i8*, !dbg !10502
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9, !dbg !10502
  %10 = bitcast i64* %3 to i8*, !dbg !10503
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9, !dbg !10503
  %11 = bitcast %struct._rio* %4 to i8*, !dbg !10507
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %11) #9, !dbg !10507
  %12 = bitcast %struct._rio* %5 to i8*, !dbg !10507
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %12) #9, !dbg !10507
  %13 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !10514
  %14 = load i32, i32* %13, align 8, !dbg !10514, !tbaa !8564
  %15 = icmp sgt i32 %14, 6, !dbg !10515
  %16 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9
  %17 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !tbaa !8570
  br i1 %15, label %18, label %99, !dbg !10516

; <label>:18:                                     ; preds = %1
  %19 = add nsw i32 %14, -1
  br label %20, !dbg !10516

; <label>:20:                                     ; preds = %18, %92
  %21 = phi i32 [ 0, %18 ], [ %96, %92 ]
  %22 = phi i32 [ 0, %18 ], [ %95, %92 ]
  %23 = phi i32 [ 6, %18 ], [ %97, %92 ]
  %24 = phi i8* [ null, %18 ], [ %93, %92 ]
  %25 = icmp slt i32 %23, %19, !dbg !10517
  %26 = sext i32 %23 to i64, !dbg !10518
  %27 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 %26, !dbg !10518
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !10518, !tbaa !757
  %29 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %28, i64 0, i32 2, !dbg !10520
  %30 = load i8*, i8** %29, align 8, !dbg !10520, !tbaa !6207
  %31 = tail call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.240, i64 0, i64 0)) #11, !dbg !10521
  %32 = icmp eq i32 %31, 0, !dbg !10521
  br i1 %32, label %92, label %33, !dbg !10522

; <label>:33:                                     ; preds = %20
  %34 = tail call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.228, i64 0, i64 0)) #11, !dbg !10523
  %35 = icmp eq i32 %34, 0, !dbg !10523
  br i1 %35, label %92, label %36, !dbg !10525

; <label>:36:                                     ; preds = %33
  %37 = tail call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.241, i64 0, i64 0)) #11, !dbg !10526
  %38 = icmp eq i32 %37, 0, !dbg !10526
  br i1 %38, label %39, label %49, !dbg !10528

; <label>:39:                                     ; preds = %36
  br i1 %25, label %42, label %40, !dbg !10529

; <label>:40:                                     ; preds = %39
  %41 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !10531, !tbaa !9620
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %41) #8, !dbg !10534
  br label %567, !dbg !10535

; <label>:42:                                     ; preds = %39
  %43 = add nsw i32 %23, 1, !dbg !10536
  %44 = sext i32 %43 to i64, !dbg !10537
  %45 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 %44, !dbg !10537
  %46 = load %struct.redisObject*, %struct.redisObject** %45, align 8, !dbg !10537, !tbaa !757
  %47 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %46, i64 0, i32 2, !dbg !10538
  %48 = load i8*, i8** %47, align 8, !dbg !10538, !tbaa !6207
  br label %92

; <label>:49:                                     ; preds = %36
  %50 = tail call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i64 0, i64 0)) #11, !dbg !10539
  %51 = icmp eq i32 %50, 0, !dbg !10539
  br i1 %51, label %52, label %85, !dbg !10541

; <label>:52:                                     ; preds = %49
  %53 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 3, !dbg !10542
  %54 = load %struct.redisObject*, %struct.redisObject** %53, align 8, !dbg !10542, !tbaa !757
  %55 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %54, i64 0, i32 2, !dbg !10545
  %56 = load i8*, i8** %55, align 8, !dbg !10545, !tbaa !6207
  %57 = getelementptr inbounds i8, i8* %56, i64 -1, !dbg !10548
  %58 = load i8, i8* %57, align 1, !dbg !10548, !tbaa !745
  %59 = trunc i8 %58 to i3, !dbg !10550
  switch i3 %59, label %87 [
    i3 0, label %60
    i3 1, label %63
    i3 2, label %67
    i3 3, label %72
    i3 -4, label %77
  ], !dbg !10550

; <label>:60:                                     ; preds = %52
  %61 = lshr i8 %58, 3, !dbg !10551
  %62 = zext i8 %61 to i64, !dbg !10551
  br label %81, !dbg !10552

; <label>:63:                                     ; preds = %52
  %64 = getelementptr inbounds i8, i8* %56, i64 -3, !dbg !10553
  %65 = load i8, i8* %64, align 1, !dbg !10554, !tbaa !745
  %66 = zext i8 %65 to i64, !dbg !10553
  br label %81, !dbg !10555

; <label>:67:                                     ; preds = %52
  %68 = getelementptr inbounds i8, i8* %56, i64 -5, !dbg !10556
  %69 = bitcast i8* %68 to i16*, !dbg !10557
  %70 = load i16, i16* %69, align 1, !dbg !10557, !tbaa !1493
  %71 = zext i16 %70 to i64, !dbg !10556
  br label %81, !dbg !10558

; <label>:72:                                     ; preds = %52
  %73 = getelementptr inbounds i8, i8* %56, i64 -9, !dbg !10559
  %74 = bitcast i8* %73 to i32*, !dbg !10560
  %75 = load i32, i32* %74, align 1, !dbg !10560, !tbaa !708
  %76 = zext i32 %75 to i64, !dbg !10559
  br label %81, !dbg !10561

; <label>:77:                                     ; preds = %52
  %78 = getelementptr inbounds i8, i8* %56, i64 -17, !dbg !10562
  %79 = bitcast i8* %78 to i64*, !dbg !10563
  %80 = load i64, i64* %79, align 1, !dbg !10563, !tbaa !1500
  br label %81, !dbg !10564

; <label>:81:                                     ; preds = %60, %63, %67, %72, %77
  %82 = phi i64 [ %80, %77 ], [ %76, %72 ], [ %71, %67 ], [ %66, %63 ], [ %62, %60 ], !dbg !10565
  %83 = icmp eq i64 %82, 0, !dbg !10566
  br i1 %83, label %87, label %84, !dbg !10567

; <label>:84:                                     ; preds = %81
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.243, i64 0, i64 0)) #8, !dbg !10568
  br label %567, !dbg !10570

; <label>:85:                                     ; preds = %49
  %86 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !10571, !tbaa !9620
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %86) #8, !dbg !10573
  br label %567, !dbg !10574

; <label>:87:                                     ; preds = %52, %81
  %88 = add nsw i32 %23, 1, !dbg !10575
  %89 = xor i32 %23, -1, !dbg !10576
  %90 = add i32 %14, %89, !dbg !10576
  %91 = sext i32 %88 to i64
  br label %99

; <label>:92:                                     ; preds = %33, %20, %42
  %93 = phi i8* [ %24, %33 ], [ %24, %20 ], [ %48, %42 ]
  %94 = phi i32 [ %23, %33 ], [ %23, %20 ], [ %43, %42 ]
  %95 = phi i32 [ 1, %33 ], [ %22, %20 ], [ %22, %42 ]
  %96 = phi i32 [ %21, %33 ], [ 1, %20 ], [ %21, %42 ]
  %97 = add nsw i32 %94, 1, !dbg !10577
  %98 = icmp slt i32 %97, %14, !dbg !10515
  br i1 %98, label %20, label %99, !dbg !10516, !llvm.loop !10578

; <label>:99:                                     ; preds = %92, %1, %87
  %100 = phi i8* [ %24, %87 ], [ null, %1 ], [ %93, %92 ]
  %101 = phi i32 [ %22, %87 ], [ 0, %1 ], [ %95, %92 ]
  %102 = phi i32 [ %21, %87 ], [ 0, %1 ], [ %96, %92 ]
  %103 = phi i64 [ %91, %87 ], [ 3, %1 ], [ 3, %92 ]
  %104 = phi i32 [ %90, %87 ], [ 1, %1 ], [ 1, %92 ], !dbg !10512
  %105 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 5, !dbg !10580
  %106 = load %struct.redisObject*, %struct.redisObject** %105, align 8, !dbg !10580, !tbaa !757
  %107 = call i32 @getLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %106, i64* nonnull %2, i8* null) #8, !dbg !10583
  %108 = icmp eq i32 %107, 0, !dbg !10584
  br i1 %108, label %109, label %567, !dbg !10585

; <label>:109:                                    ; preds = %99
  %110 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10586, !tbaa !8570
  %111 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %110, i64 4, !dbg !10587
  %112 = load %struct.redisObject*, %struct.redisObject** %111, align 8, !dbg !10587, !tbaa !757
  %113 = call i32 @getLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %112, i64* nonnull %3, i8* null) #8, !dbg !10589
  %114 = icmp eq i32 %113, 0, !dbg !10590
  br i1 %114, label %115, label %567, !dbg !10591

; <label>:115:                                    ; preds = %109
  %116 = load i64, i64* %2, align 8, !dbg !10592, !tbaa !1500
  %117 = icmp slt i64 %116, 1, !dbg !10594
  br i1 %117, label %118, label %119, !dbg !10595

; <label>:118:                                    ; preds = %115
  store i64 1000, i64* %2, align 8, !dbg !10596, !tbaa !1500
  br label %119, !dbg !10597

; <label>:119:                                    ; preds = %118, %115
  %120 = sext i32 %104 to i64, !dbg !10598
  %121 = shl nsw i64 %120, 3, !dbg !10599
  %122 = call i8* @zrealloc(i8* null, i64 %121) #8, !dbg !10600
  %123 = bitcast i8* %122 to %struct.redisObject**, !dbg !10600
  %124 = call i8* @zrealloc(i8* null, i64 %121) #8, !dbg !10601
  %125 = bitcast i8* %124 to %struct.redisObject**, !dbg !10601
  %126 = icmp sgt i32 %104, 0, !dbg !10603
  br i1 %126, label %127, label %177, !dbg !10606

; <label>:127:                                    ; preds = %119
  %128 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2
  %129 = zext i32 %104 to i64
  br label %130, !dbg !10606

; <label>:130:                                    ; preds = %150, %127
  %131 = phi i64 [ 0, %127 ], [ %152, %150 ]
  %132 = phi i32 [ 0, %127 ], [ %151, %150 ]
  %133 = load %struct.redisDb*, %struct.redisDb** %128, align 8, !dbg !10607, !tbaa !9783
  %134 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10610, !tbaa !8570
  %135 = add nsw i64 %131, %103, !dbg !10611
  %136 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %134, i64 %135, !dbg !10612
  %137 = load %struct.redisObject*, %struct.redisObject** %136, align 8, !dbg !10612, !tbaa !757
  %138 = call %struct.redisObject* @lookupKeyRead(%struct.redisDb* %133, %struct.redisObject* %137) #8, !dbg !10613
  %139 = sext i32 %132 to i64, !dbg !10614
  %140 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %123, i64 %139, !dbg !10614
  store %struct.redisObject* %138, %struct.redisObject** %140, align 8, !dbg !10615, !tbaa !757
  %141 = icmp eq %struct.redisObject* %138, null, !dbg !10616
  br i1 %141, label %150, label %142, !dbg !10617

; <label>:142:                                    ; preds = %130
  %143 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10618, !tbaa !8570
  %144 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %143, i64 %135, !dbg !10620
  %145 = bitcast %struct.redisObject** %144 to i64*, !dbg !10620
  %146 = load i64, i64* %145, align 8, !dbg !10620, !tbaa !757
  %147 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %125, i64 %139, !dbg !10621
  %148 = bitcast %struct.redisObject** %147 to i64*, !dbg !10622
  store i64 %146, i64* %148, align 8, !dbg !10622, !tbaa !757
  %149 = add nsw i32 %132, 1, !dbg !10623
  br label %150, !dbg !10624

; <label>:150:                                    ; preds = %130, %142
  %151 = phi i32 [ %149, %142 ], [ %132, %130 ], !dbg !10625
  %152 = add nuw nsw i64 %131, 1, !dbg !10626
  %153 = icmp eq i64 %152, %129, !dbg !10603
  br i1 %153, label %154, label %130, !dbg !10606, !llvm.loop !10627

; <label>:154:                                    ; preds = %150
  %155 = icmp eq i32 %151, 0, !dbg !10629
  br i1 %155, label %177, label %156, !dbg !10631

; <label>:156:                                    ; preds = %154
  %157 = icmp ne i8* %100, null
  %158 = getelementptr inbounds i8, i8* %100, i64 -1
  %159 = getelementptr inbounds %struct._rio, %struct._rio* %4, i64 0, i32 8
  %160 = bitcast %union.anon.11* %159 to i8**
  %161 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2
  %162 = icmp ne i32 %101, 0
  %163 = select i1 %162, i64 5, i64 4
  %164 = getelementptr inbounds %struct._rio, %struct._rio* %5, i64 0, i32 8
  %165 = bitcast %union.anon.11* %164 to i8**
  %166 = getelementptr inbounds i8, i8* %100, i64 -3
  %167 = getelementptr inbounds i8, i8* %100, i64 -5
  %168 = bitcast i8* %167 to i16*
  %169 = getelementptr inbounds i8, i8* %100, i64 -9
  %170 = bitcast i8* %169 to i32*
  %171 = getelementptr inbounds i8, i8* %100, i64 -17
  %172 = bitcast i8* %171 to i64*
  %173 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %174 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %175 = icmp ne i32 %102, 0
  %176 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  br label %179, !dbg !10632

; <label>:177:                                    ; preds = %119, %154
  call void @zfree(i8* %122) #8, !dbg !10633
  call void @zfree(i8* %124) #8, !dbg !10635
  %178 = call i8* @sdsnew(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.244, i64 0, i64 0)) #8, !dbg !10636
  call void @addReplySds(%struct.client* nonnull %0, i8* %178) #8, !dbg !10637
  br label %567, !dbg !10638

; <label>:179:                                    ; preds = %156, %556
  %180 = phi i32 [ 0, %556 ], [ 1, %156 ], !dbg !10639
  %181 = phi i32 [ %547, %556 ], [ 0, %156 ], !dbg !10510
  %182 = phi i32 [ %372, %556 ], [ %151, %156 ], !dbg !10625
  %183 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10632, !tbaa !8570
  %184 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %183, i64 1, !dbg !10642
  %185 = load %struct.redisObject*, %struct.redisObject** %184, align 8, !dbg !10642, !tbaa !757
  %186 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %183, i64 2, !dbg !10643
  %187 = load %struct.redisObject*, %struct.redisObject** %186, align 8, !dbg !10643, !tbaa !757
  %188 = load i64, i64* %2, align 8, !dbg !10644, !tbaa !1500
  %189 = call %struct.migrateCachedSocket* @migrateGetSocket(%struct.client* %0, %struct.redisObject* %185, %struct.redisObject* %187, i64 %188) #12, !dbg !10645
  %190 = icmp eq %struct.migrateCachedSocket* %189, null, !dbg !10647
  br i1 %190, label %191, label %192, !dbg !10649

; <label>:191:                                    ; preds = %179
  call void @zfree(i8* %122) #8, !dbg !10650
  call void @zfree(i8* %124) #8, !dbg !10652
  br label %567, !dbg !10653

; <label>:192:                                    ; preds = %179
  %193 = call i8* @sdsempty() #8, !dbg !10654
  call void @rioInitWithBuffer(%struct._rio* nonnull %4, i8* %193) #8, !dbg !10656
  br i1 %157, label %194, label %224, !dbg !10657

; <label>:194:                                    ; preds = %192
  %195 = call i64 @rioWriteBulkCount(%struct._rio* nonnull %4, i8 signext 42, i64 2) #8, !dbg !10658
  %196 = icmp eq i64 %195, 0, !dbg !10658
  br i1 %196, label %197, label %198, !dbg !10658

; <label>:197:                                    ; preds = %194
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.245, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5155) #8, !dbg !10658
  call void @_exit(i32 1) #10, !dbg !10658
  unreachable, !dbg !10658

; <label>:198:                                    ; preds = %194
  %199 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i64 0, i64 0), i64 4) #8, !dbg !10661
  %200 = icmp eq i64 %199, 0, !dbg !10661
  br i1 %200, label %201, label %202, !dbg !10661

; <label>:201:                                    ; preds = %198
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5156) #8, !dbg !10661
  call void @_exit(i32 1) #10, !dbg !10661
  unreachable, !dbg !10661

; <label>:202:                                    ; preds = %198
  %203 = load i8, i8* %158, align 1, !dbg !10664, !tbaa !745
  %204 = trunc i8 %203 to i3, !dbg !10666
  switch i3 %204, label %219 [
    i3 0, label %205
    i3 1, label %208
    i3 2, label %211
    i3 3, label %214
    i3 -4, label %217
  ], !dbg !10666

; <label>:205:                                    ; preds = %202
  %206 = lshr i8 %203, 3, !dbg !10667
  %207 = zext i8 %206 to i64, !dbg !10667
  br label %219, !dbg !10668

; <label>:208:                                    ; preds = %202
  %209 = load i8, i8* %166, align 1, !dbg !10669, !tbaa !745
  %210 = zext i8 %209 to i64, !dbg !10670
  br label %219, !dbg !10671

; <label>:211:                                    ; preds = %202
  %212 = load i16, i16* %168, align 1, !dbg !10672, !tbaa !1493
  %213 = zext i16 %212 to i64, !dbg !10673
  br label %219, !dbg !10674

; <label>:214:                                    ; preds = %202
  %215 = load i32, i32* %170, align 1, !dbg !10675, !tbaa !708
  %216 = zext i32 %215 to i64, !dbg !10676
  br label %219, !dbg !10677

; <label>:217:                                    ; preds = %202
  %218 = load i64, i64* %172, align 1, !dbg !10678, !tbaa !1500
  br label %219, !dbg !10679

; <label>:219:                                    ; preds = %202, %205, %208, %211, %214, %217
  %220 = phi i64 [ %218, %217 ], [ %216, %214 ], [ %213, %211 ], [ %210, %208 ], [ %207, %205 ], [ 0, %202 ], !dbg !10680
  %221 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* nonnull %100, i64 %220) #8, !dbg !10681
  %222 = icmp eq i64 %221, 0, !dbg !10681
  br i1 %222, label %223, label %224, !dbg !10681

; <label>:223:                                    ; preds = %219
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.248, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5158) #8, !dbg !10681
  call void @_exit(i32 1) #10, !dbg !10681
  unreachable, !dbg !10681

; <label>:224:                                    ; preds = %219, %192
  %225 = getelementptr inbounds %struct.migrateCachedSocket, %struct.migrateCachedSocket* %189, i64 0, i32 1, !dbg !10682
  %226 = load i64, i64* %225, align 8, !dbg !10682, !tbaa !10331
  %227 = load i64, i64* %3, align 8, !dbg !10683, !tbaa !1500
  %228 = icmp ne i64 %226, %227, !dbg !10684
  br i1 %228, label %229, label %242, !dbg !10685

; <label>:229:                                    ; preds = %224
  %230 = call i64 @rioWriteBulkCount(%struct._rio* nonnull %4, i8 signext 42, i64 2) #8, !dbg !10686
  %231 = icmp eq i64 %230, 0, !dbg !10686
  br i1 %231, label %232, label %233, !dbg !10686

; <label>:232:                                    ; preds = %229
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.245, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5164) #8, !dbg !10686
  call void @_exit(i32 1) #10, !dbg !10686
  unreachable, !dbg !10686

; <label>:233:                                    ; preds = %229
  %234 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.249, i64 0, i64 0), i64 6) #8, !dbg !10689
  %235 = icmp eq i64 %234, 0, !dbg !10689
  br i1 %235, label %236, label %237, !dbg !10689

; <label>:236:                                    ; preds = %233
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.250, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5165) #8, !dbg !10689
  call void @_exit(i32 1) #10, !dbg !10689
  unreachable, !dbg !10689

; <label>:237:                                    ; preds = %233
  %238 = load i64, i64* %3, align 8, !dbg !10690, !tbaa !1500
  %239 = call i64 @rioWriteBulkLongLong(%struct._rio* nonnull %4, i64 %238) #8, !dbg !10690
  %240 = icmp eq i64 %239, 0, !dbg !10690
  br i1 %240, label %241, label %242, !dbg !10690

; <label>:241:                                    ; preds = %237
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.251, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5166) #8, !dbg !10690
  call void @_exit(i32 1) #10, !dbg !10690
  unreachable, !dbg !10690

; <label>:242:                                    ; preds = %237, %224
  %243 = icmp sgt i32 %182, 0, !dbg !10692
  br i1 %243, label %244, label %371, !dbg !10693

; <label>:244:                                    ; preds = %242
  %245 = sext i32 %182 to i64, !dbg !10694
  br label %246, !dbg !10694

; <label>:246:                                    ; preds = %244, %367
  %247 = phi i64 [ 0, %244 ], [ %369, %367 ]
  %248 = phi i32 [ 0, %244 ], [ %368, %367 ]
  %249 = load %struct.redisDb*, %struct.redisDb** %161, align 8, !dbg !10694, !tbaa !9783
  %250 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %125, i64 %247, !dbg !10696
  %251 = load %struct.redisObject*, %struct.redisObject** %250, align 8, !dbg !10696, !tbaa !757
  %252 = call i64 @getExpire(%struct.redisDb* %249, %struct.redisObject* %251) #8, !dbg !10697
  %253 = icmp eq i64 %252, -1, !dbg !10699
  br i1 %253, label %261, label %254, !dbg !10701

; <label>:254:                                    ; preds = %246
  %255 = call i64 @mstime() #8, !dbg !10702
  %256 = sub nsw i64 %252, %255, !dbg !10704
  %257 = icmp slt i64 %256, 0, !dbg !10705
  br i1 %257, label %367, label %258, !dbg !10707

; <label>:258:                                    ; preds = %254
  %259 = icmp eq i64 %256, 0, !dbg !10708
  %260 = select i1 %259, i64 1, i64 %256, !dbg !10710
  br label %261, !dbg !10710

; <label>:261:                                    ; preds = %258, %246
  %262 = phi i64 [ 0, %246 ], [ %260, %258 ], !dbg !10711
  %263 = bitcast %struct.redisObject** %250 to i64*, !dbg !10712
  %264 = load i64, i64* %263, align 8, !dbg !10712, !tbaa !757
  %265 = add nsw i32 %248, 1, !dbg !10713
  %266 = sext i32 %248 to i64, !dbg !10714
  %267 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %125, i64 %266, !dbg !10714
  %268 = bitcast %struct.redisObject** %267 to i64*, !dbg !10715
  store i64 %264, i64* %268, align 8, !dbg !10715, !tbaa !757
  %269 = call i64 @rioWriteBulkCount(%struct._rio* nonnull %4, i8 signext 42, i64 %163) #8, !dbg !10716
  %270 = icmp eq i64 %269, 0, !dbg !10716
  br i1 %270, label %271, label %272, !dbg !10716

; <label>:271:                                    ; preds = %261
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.252, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5193) #8, !dbg !10716
  call void @_exit(i32 1) #10, !dbg !10716
  unreachable, !dbg !10716

; <label>:272:                                    ; preds = %261
  %273 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !10717, !tbaa !8557
  %274 = icmp eq i32 %273, 0, !dbg !10719
  br i1 %274, label %279, label %275, !dbg !10720

; <label>:275:                                    ; preds = %272
  %276 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.253, i64 0, i64 0), i64 14) #8, !dbg !10721
  %277 = icmp eq i64 %276, 0, !dbg !10721
  br i1 %277, label %278, label %283, !dbg !10721

; <label>:278:                                    ; preds = %275
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.254, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5197) #8, !dbg !10721
  call void @_exit(i32 1) #10, !dbg !10721
  unreachable, !dbg !10721

; <label>:279:                                    ; preds = %272
  %280 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.255, i64 0, i64 0), i64 7) #8, !dbg !10722
  %281 = icmp eq i64 %280, 0, !dbg !10722
  br i1 %281, label %282, label %283, !dbg !10722

; <label>:282:                                    ; preds = %279
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.256, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5199) #8, !dbg !10722
  call void @_exit(i32 1) #10, !dbg !10722
  unreachable, !dbg !10722

; <label>:283:                                    ; preds = %275, %279
  %284 = bitcast %struct.redisObject** %250 to i32**, !dbg !10723
  %285 = load i32*, i32** %284, align 8, !dbg !10723, !tbaa !757
  %286 = load i32, i32* %285, align 8, !dbg !10723
  %287 = lshr i32 %286, 4, !dbg !10723
  %288 = trunc i32 %287 to i4, !dbg !10723
  switch i4 %288, label %289 [
    i4 0, label %290
    i4 -8, label %290
  ], !dbg !10723

; <label>:289:                                    ; preds = %283
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.257, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5200) #8, !dbg !10723
  call void @_exit(i32 1) #10, !dbg !10723
  unreachable, !dbg !10723

; <label>:290:                                    ; preds = %283, %283
  %291 = getelementptr inbounds i32, i32* %285, i64 2, !dbg !10724
  %292 = bitcast i32* %291 to i8**, !dbg !10724
  %293 = load i8*, i8** %292, align 8, !dbg !10724, !tbaa !6207
  %294 = getelementptr inbounds i8, i8* %293, i64 -1, !dbg !10727
  %295 = load i8, i8* %294, align 1, !dbg !10727, !tbaa !745
  %296 = trunc i8 %295 to i3, !dbg !10729
  switch i3 %296, label %318 [
    i3 0, label %297
    i3 1, label %300
    i3 2, label %304
    i3 3, label %309
    i3 -4, label %314
  ], !dbg !10729

; <label>:297:                                    ; preds = %290
  %298 = lshr i8 %295, 3, !dbg !10730
  %299 = zext i8 %298 to i64, !dbg !10730
  br label %318, !dbg !10731

; <label>:300:                                    ; preds = %290
  %301 = getelementptr inbounds i8, i8* %293, i64 -3, !dbg !10732
  %302 = load i8, i8* %301, align 1, !dbg !10733, !tbaa !745
  %303 = zext i8 %302 to i64, !dbg !10732
  br label %318, !dbg !10734

; <label>:304:                                    ; preds = %290
  %305 = getelementptr inbounds i8, i8* %293, i64 -5, !dbg !10735
  %306 = bitcast i8* %305 to i16*, !dbg !10736
  %307 = load i16, i16* %306, align 1, !dbg !10736, !tbaa !1493
  %308 = zext i16 %307 to i64, !dbg !10735
  br label %318, !dbg !10737

; <label>:309:                                    ; preds = %290
  %310 = getelementptr inbounds i8, i8* %293, i64 -9, !dbg !10738
  %311 = bitcast i8* %310 to i32*, !dbg !10739
  %312 = load i32, i32* %311, align 1, !dbg !10739, !tbaa !708
  %313 = zext i32 %312 to i64, !dbg !10738
  br label %318, !dbg !10740

; <label>:314:                                    ; preds = %290
  %315 = getelementptr inbounds i8, i8* %293, i64 -17, !dbg !10741
  %316 = bitcast i8* %315 to i64*, !dbg !10742
  %317 = load i64, i64* %316, align 1, !dbg !10742, !tbaa !1500
  br label %318, !dbg !10743

; <label>:318:                                    ; preds = %290, %297, %300, %304, %309, %314
  %319 = phi i64 [ %317, %314 ], [ %313, %309 ], [ %308, %304 ], [ %303, %300 ], [ %299, %297 ], [ 0, %290 ], !dbg !10744
  %320 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* %293, i64 %319) #8, !dbg !10724
  %321 = icmp eq i64 %320, 0, !dbg !10724
  br i1 %321, label %322, label %323, !dbg !10724

; <label>:322:                                    ; preds = %318
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.258, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5202) #8, !dbg !10724
  call void @_exit(i32 1) #10, !dbg !10724
  unreachable, !dbg !10724

; <label>:323:                                    ; preds = %318
  %324 = call i64 @rioWriteBulkLongLong(%struct._rio* nonnull %4, i64 %262) #8, !dbg !10745
  %325 = icmp eq i64 %324, 0, !dbg !10745
  br i1 %325, label %326, label %327, !dbg !10745

; <label>:326:                                    ; preds = %323
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.259, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5203) #8, !dbg !10745
  call void @_exit(i32 1) #10, !dbg !10745
  unreachable, !dbg !10745

; <label>:327:                                    ; preds = %323
  %328 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %123, i64 %247, !dbg !10746
  %329 = load %struct.redisObject*, %struct.redisObject** %328, align 8, !dbg !10746, !tbaa !757
  %330 = load %struct.redisObject*, %struct.redisObject** %250, align 8, !dbg !10747, !tbaa !757
  call void @createDumpPayload(%struct._rio* nonnull %5, %struct.redisObject* %329, %struct.redisObject* %330) #12, !dbg !10749
  %331 = load i8*, i8** %165, align 8, !dbg !10750, !tbaa !745
  %332 = getelementptr inbounds i8, i8* %331, i64 -1, !dbg !10753
  %333 = load i8, i8* %332, align 1, !dbg !10753, !tbaa !745
  %334 = trunc i8 %333 to i3, !dbg !10755
  switch i3 %334, label %356 [
    i3 0, label %335
    i3 1, label %338
    i3 2, label %342
    i3 3, label %347
    i3 -4, label %352
  ], !dbg !10755

; <label>:335:                                    ; preds = %327
  %336 = lshr i8 %333, 3, !dbg !10756
  %337 = zext i8 %336 to i64, !dbg !10756
  br label %356, !dbg !10757

; <label>:338:                                    ; preds = %327
  %339 = getelementptr inbounds i8, i8* %331, i64 -3, !dbg !10758
  %340 = load i8, i8* %339, align 1, !dbg !10759, !tbaa !745
  %341 = zext i8 %340 to i64, !dbg !10758
  br label %356, !dbg !10760

; <label>:342:                                    ; preds = %327
  %343 = getelementptr inbounds i8, i8* %331, i64 -5, !dbg !10761
  %344 = bitcast i8* %343 to i16*, !dbg !10762
  %345 = load i16, i16* %344, align 1, !dbg !10762, !tbaa !1493
  %346 = zext i16 %345 to i64, !dbg !10761
  br label %356, !dbg !10763

; <label>:347:                                    ; preds = %327
  %348 = getelementptr inbounds i8, i8* %331, i64 -9, !dbg !10764
  %349 = bitcast i8* %348 to i32*, !dbg !10765
  %350 = load i32, i32* %349, align 1, !dbg !10765, !tbaa !708
  %351 = zext i32 %350 to i64, !dbg !10764
  br label %356, !dbg !10766

; <label>:352:                                    ; preds = %327
  %353 = getelementptr inbounds i8, i8* %331, i64 -17, !dbg !10767
  %354 = bitcast i8* %353 to i64*, !dbg !10768
  %355 = load i64, i64* %354, align 1, !dbg !10768, !tbaa !1500
  br label %356, !dbg !10769

; <label>:356:                                    ; preds = %327, %335, %338, %342, %347, %352
  %357 = phi i64 [ %355, %352 ], [ %351, %347 ], [ %346, %342 ], [ %341, %338 ], [ %337, %335 ], [ 0, %327 ], !dbg !10770
  %358 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* %331, i64 %357) #8, !dbg !10750
  %359 = icmp eq i64 %358, 0, !dbg !10750
  br i1 %359, label %360, label %361, !dbg !10750

; <label>:360:                                    ; preds = %356
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.260, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5210) #8, !dbg !10750
  call void @_exit(i32 1) #10, !dbg !10750
  unreachable, !dbg !10750

; <label>:361:                                    ; preds = %356
  %362 = load i8*, i8** %165, align 8, !dbg !10771, !tbaa !745
  call void @sdsfree(i8* %362) #8, !dbg !10772
  br i1 %162, label %363, label %367, !dbg !10773

; <label>:363:                                    ; preds = %361
  %364 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.261, i64 0, i64 0), i64 7) #8, !dbg !10774
  %365 = icmp eq i64 %364, 0, !dbg !10774
  br i1 %365, label %366, label %367, !dbg !10774

; <label>:366:                                    ; preds = %363
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.262, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5216) #8, !dbg !10774
  call void @_exit(i32 1) #10, !dbg !10774
  unreachable, !dbg !10774

; <label>:367:                                    ; preds = %361, %363, %254
  %368 = phi i32 [ %248, %254 ], [ %265, %363 ], [ %265, %361 ], !dbg !10711
  %369 = add nuw nsw i64 %247, 1, !dbg !10776
  %370 = icmp slt i64 %369, %245, !dbg !10692
  br i1 %370, label %246, label %371, !dbg !10693, !llvm.loop !10777

; <label>:371:                                    ; preds = %367, %242
  %372 = phi i32 [ 0, %242 ], [ %368, %367 ], !dbg !10691
  %373 = call i32* @__errno() #8, !dbg !10779
  store i32 0, i32* %373, align 4, !dbg !10780, !tbaa !708
  %374 = load i8*, i8** %160, align 8, !dbg !10781, !tbaa !745
  %375 = getelementptr inbounds i8, i8* %374, i64 -1
  %376 = getelementptr inbounds i8, i8* %374, i64 -3
  %377 = getelementptr inbounds i8, i8* %374, i64 -5
  %378 = bitcast i8* %377 to i16*
  %379 = getelementptr inbounds i8, i8* %374, i64 -9
  %380 = bitcast i8* %379 to i32*
  %381 = getelementptr inbounds i8, i8* %374, i64 -17
  %382 = bitcast i8* %381 to i64*
  %383 = getelementptr inbounds %struct.migrateCachedSocket, %struct.migrateCachedSocket* %189, i64 0, i32 0
  br label %384, !dbg !10785

; <label>:384:                                    ; preds = %416, %371
  %385 = phi i64 [ 0, %371 ], [ %419, %416 ], !dbg !10786
  %386 = load i8, i8* %375, align 1, !dbg !10790, !tbaa !745
  %387 = trunc i8 %386 to i3, !dbg !10792
  switch i3 %387, label %402 [
    i3 0, label %388
    i3 1, label %391
    i3 2, label %394
    i3 3, label %397
    i3 -4, label %400
  ], !dbg !10792

; <label>:388:                                    ; preds = %384
  %389 = lshr i8 %386, 3, !dbg !10793
  %390 = zext i8 %389 to i64, !dbg !10793
  br label %402, !dbg !10794

; <label>:391:                                    ; preds = %384
  %392 = load i8, i8* %376, align 1, !dbg !10795, !tbaa !745
  %393 = zext i8 %392 to i64, !dbg !10796
  br label %402, !dbg !10797

; <label>:394:                                    ; preds = %384
  %395 = load i16, i16* %378, align 1, !dbg !10798, !tbaa !1493
  %396 = zext i16 %395 to i64, !dbg !10799
  br label %402, !dbg !10800

; <label>:397:                                    ; preds = %384
  %398 = load i32, i32* %380, align 1, !dbg !10801, !tbaa !708
  %399 = zext i32 %398 to i64, !dbg !10802
  br label %402, !dbg !10803

; <label>:400:                                    ; preds = %384
  %401 = load i64, i64* %382, align 1, !dbg !10804, !tbaa !1500
  br label %402, !dbg !10805

; <label>:402:                                    ; preds = %384, %388, %391, %394, %397, %400
  %403 = phi i64 [ %401, %400 ], [ %399, %397 ], [ %396, %394 ], [ %393, %391 ], [ %390, %388 ], [ 0, %384 ], !dbg !10806
  %404 = sub i64 %403, %385, !dbg !10807
  %405 = icmp eq i64 %404, 0, !dbg !10809
  br i1 %405, label %420, label %406, !dbg !10785

; <label>:406:                                    ; preds = %402
  %407 = icmp ult i64 %404, 65536, !dbg !10810
  %408 = select i1 %407, i64 %404, i64 65536, !dbg !10810
  %409 = load i32, i32* %383, align 8, !dbg !10811, !tbaa !10292
  %410 = getelementptr inbounds i8, i8* %374, i64 %385, !dbg !10812
  %411 = load i64, i64* %2, align 8, !dbg !10813, !tbaa !1500
  %412 = call i64 @syncWrite(i32 %409, i8* %410, i64 %408, i64 %411) #8, !dbg !10814
  %413 = trunc i64 %412 to i32, !dbg !10814
  %414 = trunc i64 %408 to i32, !dbg !10815
  %415 = icmp eq i32 %413, %414, !dbg !10817
  br i1 %415, label %416, label %543, !dbg !10818

; <label>:416:                                    ; preds = %406
  %417 = shl i64 %412, 32, !dbg !10819
  %418 = ashr exact i64 %417, 32, !dbg !10819
  %419 = add i64 %418, %385, !dbg !10820
  br label %384, !dbg !10785, !llvm.loop !10821

; <label>:420:                                    ; preds = %402
  br i1 %157, label %421, label %426, !dbg !10826

; <label>:421:                                    ; preds = %420
  %422 = load i32, i32* %383, align 8, !dbg !10828, !tbaa !10292
  %423 = load i64, i64* %2, align 8, !dbg !10829, !tbaa !1500
  %424 = call i64 @syncReadLine(i32 %422, i8* nonnull %173, i64 1024, i64 %423) #8, !dbg !10830
  %425 = icmp slt i64 %424, 1, !dbg !10831
  br i1 %425, label %543, label %426, !dbg !10832

; <label>:426:                                    ; preds = %421, %420
  br i1 %228, label %427, label %432, !dbg !10833

; <label>:427:                                    ; preds = %426
  %428 = load i32, i32* %383, align 8, !dbg !10835, !tbaa !10292
  %429 = load i64, i64* %2, align 8, !dbg !10836, !tbaa !1500
  %430 = call i64 @syncReadLine(i32 %428, i8* nonnull %174, i64 1024, i64 %429) #8, !dbg !10837
  %431 = icmp slt i64 %430, 1, !dbg !10838
  br i1 %431, label %543, label %432, !dbg !10839

; <label>:432:                                    ; preds = %427, %426
  br i1 %175, label %439, label %433, !dbg !10843

; <label>:433:                                    ; preds = %432
  %434 = add nsw i32 %372, 1, !dbg !10844
  %435 = sext i32 %434 to i64, !dbg !10846
  %436 = shl nsw i64 %435, 3, !dbg !10847
  %437 = call i8* @zmalloc(i64 %436) #8, !dbg !10848
  %438 = bitcast i8* %437 to %struct.redisObject**, !dbg !10848
  br label %439, !dbg !10849

; <label>:439:                                    ; preds = %433, %432
  %440 = phi i8* [ null, %432 ], [ %437, %433 ], !dbg !10850
  %441 = phi %struct.redisObject** [ null, %432 ], [ %438, %433 ], !dbg !10850
  %442 = icmp sgt i32 %372, 0, !dbg !10851
  br i1 %442, label %443, label %515, !dbg !10852

; <label>:443:                                    ; preds = %439
  %444 = xor i1 %228, true
  %445 = sext i32 %372 to i64, !dbg !10852
  br label %446, !dbg !10852

; <label>:446:                                    ; preds = %443, %499
  %447 = phi i64 [ 0, %443 ], [ %502, %499 ]
  %448 = phi i32 [ 1, %443 ], [ %501, %499 ]
  %449 = phi i32 [ 0, %443 ], [ %500, %499 ]
  %450 = load i32, i32* %383, align 8, !dbg !10853, !tbaa !10292
  %451 = load i64, i64* %2, align 8, !dbg !10855, !tbaa !1500
  %452 = call i64 @syncReadLine(i32 %450, i8* nonnull %176, i64 1024, i64 %451) #8, !dbg !10856
  %453 = icmp slt i64 %452, 1, !dbg !10857
  br i1 %453, label %504, label %454, !dbg !10858

; <label>:454:                                    ; preds = %446
  %455 = load i8, i8* %173, align 16, !dbg !10859
  %456 = icmp eq i8 %455, 45, !dbg !10860
  %457 = and i1 %157, %456, !dbg !10861
  br i1 %457, label %468, label %458, !dbg !10861

; <label>:458:                                    ; preds = %454
  br i1 %228, label %459, label %465, !dbg !10862

; <label>:459:                                    ; preds = %458
  %460 = load i8, i8* %174, align 16, !dbg !10863, !tbaa !745
  %461 = icmp eq i8 %460, 45, !dbg !10864
  %462 = load i8, i8* %176, align 16, !dbg !10865
  %463 = icmp eq i8 %462, 45, !dbg !10866
  %464 = or i1 %461, %463, !dbg !10867
  br i1 %464, label %468, label %482, !dbg !10867

; <label>:465:                                    ; preds = %458
  %466 = load i8, i8* %176, align 16, !dbg !10865, !tbaa !745
  %467 = icmp eq i8 %466, 45, !dbg !10866
  br i1 %467, label %468, label %482, !dbg !10868

; <label>:468:                                    ; preds = %454, %465, %459
  %469 = icmp eq i32 %449, 0, !dbg !10869
  br i1 %469, label %470, label %499, !dbg !10870

; <label>:470:                                    ; preds = %468
  store i64 -1, i64* %225, align 8, !dbg !10871, !tbaa !10331
  br i1 %157, label %471, label %474, !dbg !10872

; <label>:471:                                    ; preds = %470
  %472 = or i1 %456, %444, !dbg !10874
  %473 = select i1 %456, i8* %173, i8* %176, !dbg !10874
  br i1 %472, label %479, label %475, !dbg !10874

; <label>:474:                                    ; preds = %470
  br i1 %228, label %475, label %479, !dbg !10875

; <label>:475:                                    ; preds = %471, %474
  %476 = load i8, i8* %174, align 16, !dbg !10877, !tbaa !745
  %477 = icmp eq i8 %476, 45, !dbg !10878
  %478 = select i1 %477, i8* %174, i8* %176, !dbg !10879
  br label %479, !dbg !10879

; <label>:479:                                    ; preds = %471, %475, %474
  %480 = phi i8* [ %176, %474 ], [ %478, %475 ], [ %473, %471 ], !dbg !10880
  %481 = getelementptr inbounds i8, i8* %480, i64 1, !dbg !10882
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.263, i64 0, i64 0), i8* nonnull %481) #8, !dbg !10883
  br label %499, !dbg !10884

; <label>:482:                                    ; preds = %459, %465
  br i1 %175, label %499, label %483, !dbg !10885

; <label>:483:                                    ; preds = %482
  %484 = load %struct.redisDb*, %struct.redisDb** %161, align 8, !dbg !10887, !tbaa !9783
  %485 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %125, i64 %447, !dbg !10890
  %486 = load %struct.redisObject*, %struct.redisObject** %485, align 8, !dbg !10890, !tbaa !757
  %487 = call i32 @dbDelete(%struct.redisDb* %484, %struct.redisObject* %486) #8, !dbg !10891
  %488 = load %struct.redisDb*, %struct.redisDb** %161, align 8, !dbg !10892, !tbaa !9783
  %489 = load %struct.redisObject*, %struct.redisObject** %485, align 8, !dbg !10893, !tbaa !757
  call void @signalModifiedKey(%struct.redisDb* %488, %struct.redisObject* %489) #8, !dbg !10894
  %490 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !10895, !tbaa !10196
  %491 = add nsw i64 %490, 1, !dbg !10895
  store i64 %491, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !10895, !tbaa !10196
  %492 = bitcast %struct.redisObject** %485 to i64*, !dbg !10896
  %493 = load i64, i64* %492, align 8, !dbg !10896, !tbaa !757
  %494 = add nsw i32 %448, 1, !dbg !10897
  %495 = sext i32 %448 to i64, !dbg !10898
  %496 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %441, i64 %495, !dbg !10898
  %497 = bitcast %struct.redisObject** %496 to i64*, !dbg !10899
  store i64 %493, i64* %497, align 8, !dbg !10899, !tbaa !757
  %498 = load %struct.redisObject*, %struct.redisObject** %485, align 8, !dbg !10900, !tbaa !757
  call void @incrRefCount(%struct.redisObject* %498) #8, !dbg !10901
  br label %499, !dbg !10902

; <label>:499:                                    ; preds = %468, %479, %483, %482
  %500 = phi i32 [ %449, %468 ], [ 1, %479 ], [ %449, %482 ], [ %449, %483 ], !dbg !10625
  %501 = phi i32 [ %448, %468 ], [ %448, %479 ], [ %448, %482 ], [ %494, %483 ], !dbg !10903
  %502 = add nuw nsw i64 %447, 1, !dbg !10904
  %503 = icmp slt i64 %502, %445, !dbg !10851
  br i1 %503, label %446, label %515, !dbg !10852, !llvm.loop !10905

; <label>:504:                                    ; preds = %446
  %505 = trunc i64 %447 to i32, !dbg !10842
  %506 = icmp eq i32 %449, 0, !dbg !10907
  %507 = or i32 %449, %505, !dbg !10909
  %508 = icmp eq i32 %507, 0, !dbg !10909
  %509 = icmp ne i32 %180, 0, !dbg !10910
  %510 = and i1 %509, %508, !dbg !10909
  br i1 %510, label %511, label %519, !dbg !10909

; <label>:511:                                    ; preds = %504
  %512 = call i32* @__errno() #8, !dbg !10911
  %513 = load i32, i32* %512, align 4, !dbg !10911, !tbaa !708
  %514 = icmp eq i32 %513, 116, !dbg !10912
  br i1 %514, label %519, label %543, !dbg !10913

; <label>:515:                                    ; preds = %499, %439
  %516 = phi i32 [ 0, %439 ], [ %500, %499 ], !dbg !10840
  %517 = phi i32 [ 1, %439 ], [ %501, %499 ], !dbg !10842
  %518 = icmp eq i32 %516, 0, !dbg !10907
  br label %525, !dbg !10914

; <label>:519:                                    ; preds = %511, %504
  %520 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10915, !tbaa !8570
  %521 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %520, i64 1, !dbg !10917
  %522 = load %struct.redisObject*, %struct.redisObject** %521, align 8, !dbg !10917, !tbaa !757
  %523 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %520, i64 2, !dbg !10918
  %524 = load %struct.redisObject*, %struct.redisObject** %523, align 8, !dbg !10918, !tbaa !757
  call void @migrateCloseSocket(%struct.redisObject* %522, %struct.redisObject* %524) #12, !dbg !10919
  br label %525, !dbg !10919

; <label>:525:                                    ; preds = %515, %519
  %526 = phi i32 [ %448, %519 ], [ %517, %515 ]
  %527 = phi i1 [ %506, %519 ], [ %518, %515 ]
  %528 = phi i1 [ %506, %519 ], [ false, %515 ]
  br i1 %175, label %534, label %529, !dbg !10920

; <label>:529:                                    ; preds = %525
  %530 = icmp sgt i32 %526, 1, !dbg !10921
  br i1 %530, label %531, label %533, !dbg !10925

; <label>:531:                                    ; preds = %529
  %532 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i64 0, i64 0), i64 3) #8, !dbg !10926
  store %struct.redisObject* %532, %struct.redisObject** %441, align 8, !dbg !10928, !tbaa !757
  call void @replaceClientCommandVector(%struct.client* %0, i32 %526, %struct.redisObject** %441) #8, !dbg !10929
  br label %534, !dbg !10930

; <label>:533:                                    ; preds = %529
  call void @zfree(i8* %440) #8, !dbg !10931
  br label %534

; <label>:534:                                    ; preds = %531, %533, %525
  %535 = phi i8* [ %440, %525 ], [ null, %533 ], [ null, %531 ], !dbg !10933
  %536 = phi i32 [ %181, %525 ], [ %181, %533 ], [ 1, %531 ], !dbg !10934
  br i1 %528, label %543, label %537, !dbg !10935

; <label>:537:                                    ; preds = %534
  br i1 %527, label %538, label %541, !dbg !10937

; <label>:538:                                    ; preds = %537
  %539 = load i64, i64* %3, align 8, !dbg !10938, !tbaa !1500
  store i64 %539, i64* %225, align 8, !dbg !10941, !tbaa !10331
  %540 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10942, !tbaa !8640
  call void @addReply(%struct.client* %0, %struct.redisObject* %540) #8, !dbg !10943
  br label %541, !dbg !10944

; <label>:541:                                    ; preds = %537, %538
  %542 = load i8*, i8** %160, align 8, !dbg !10945, !tbaa !745
  call void @sdsfree(i8* %542) #8, !dbg !10946
  call void @zfree(i8* %122) #8, !dbg !10947
  call void @zfree(i8* %124) #8, !dbg !10948
  call void @zfree(i8* %535) #8, !dbg !10949
  br label %567, !dbg !10950

; <label>:543:                                    ; preds = %406, %534, %511, %427, %421
  %544 = phi i32 [ 0, %421 ], [ 0, %427 ], [ 0, %511 ], [ 0, %534 ], [ 1, %406 ]
  %545 = phi i8* [ null, %421 ], [ null, %427 ], [ %440, %511 ], [ %535, %534 ], [ null, %406 ], !dbg !10506
  %546 = phi i32 [ %180, %421 ], [ %180, %427 ], [ %180, %511 ], [ 0, %534 ], [ %180, %406 ], !dbg !10951
  %547 = phi i32 [ %181, %421 ], [ %181, %427 ], [ %181, %511 ], [ %536, %534 ], [ %181, %406 ], !dbg !10510
  %548 = load i8*, i8** %160, align 8, !dbg !10953, !tbaa !745
  call void @sdsfree(i8* %548) #8, !dbg !10954
  %549 = icmp eq i32 %547, 0, !dbg !10955
  br i1 %549, label %550, label %556, !dbg !10957

; <label>:550:                                    ; preds = %543
  %551 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10958, !tbaa !8570
  %552 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %551, i64 1, !dbg !10959
  %553 = load %struct.redisObject*, %struct.redisObject** %552, align 8, !dbg !10959, !tbaa !757
  %554 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %551, i64 2, !dbg !10960
  %555 = load %struct.redisObject*, %struct.redisObject** %554, align 8, !dbg !10960, !tbaa !757
  call void @migrateCloseSocket(%struct.redisObject* %553, %struct.redisObject* %555) #12, !dbg !10961
  br label %556, !dbg !10961

; <label>:556:                                    ; preds = %543, %550
  call void @zfree(i8* %545) #8, !dbg !10962
  %557 = call i32* @__errno() #8, !dbg !10963
  %558 = load i32, i32* %557, align 4, !dbg !10963, !tbaa !708
  %559 = icmp ne i32 %558, 116, !dbg !10964
  %560 = icmp ne i32 %546, 0, !dbg !10965
  %561 = and i1 %560, %559, !dbg !10966
  br i1 %561, label %179, label %562, !dbg !10966

; <label>:562:                                    ; preds = %556
  call void @zfree(i8* %122) #8, !dbg !10967
  call void @zfree(i8* %124) #8, !dbg !10968
  %563 = call i8* @sdsempty() #8, !dbg !10969
  %564 = icmp eq i32 %544, 0, !dbg !10970
  %565 = select i1 %564, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.267, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.266, i64 0, i64 0), !dbg !10970
  %566 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %563, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.265, i64 0, i64 0), i8* %565) #8, !dbg !10971
  call void @addReplySds(%struct.client* %0, i8* %566) #8, !dbg !10972
  br label %567, !dbg !10973

; <label>:567:                                    ; preds = %40, %84, %85, %177, %191, %541, %562, %99, %109
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %12) #9, !dbg !10974
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %11) #9, !dbg !10974
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9, !dbg !10974
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9, !dbg !10974
  ret void, !dbg !10974
}

; Function Attrs: noredzone
declare dso_local i32 @getLongFromObjectOrReply(%struct.client*, %struct.redisObject*, i64*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @rioWriteBulkCount(%struct._rio*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @rioWriteBulkString(%struct._rio*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @rioWriteBulkLongLong(%struct._rio*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @getExpire(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @syncWrite(i32, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @syncReadLine(i32, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @incrRefCount(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @replaceClientCommandVector(%struct.client*, i32, %struct.redisObject**) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @askingCommand(%struct.client*) local_unnamed_addr #0 !dbg !10975 {
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !10979, !tbaa !8557
  %3 = icmp eq i32 %2, 0, !dbg !10981
  br i1 %3, label %4, label %5, !dbg !10982

; <label>:4:                                      ; preds = %1
  tail call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.127, i64 0, i64 0)) #8, !dbg !10983
  br label %10, !dbg !10985

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !10986
  %7 = load i32, i32* %6, align 8, !dbg !10987, !tbaa !10988
  %8 = or i32 %7, 512, !dbg !10987
  store i32 %8, i32* %6, align 8, !dbg !10987, !tbaa !10988
  %9 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10989, !tbaa !8640
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %9) #8, !dbg !10990
  br label %10, !dbg !10991

; <label>:10:                                     ; preds = %5, %4
  ret void, !dbg !10991
}

; Function Attrs: noredzone nounwind
define dso_local void @readonlyCommand(%struct.client*) local_unnamed_addr #0 !dbg !10992 {
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !10996, !tbaa !8557
  %3 = icmp eq i32 %2, 0, !dbg !10998
  br i1 %3, label %4, label %5, !dbg !10999

; <label>:4:                                      ; preds = %1
  tail call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.127, i64 0, i64 0)) #8, !dbg !11000
  br label %10, !dbg !11002

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !11003
  %7 = load i32, i32* %6, align 8, !dbg !11004, !tbaa !10988
  %8 = or i32 %7, 131072, !dbg !11004
  store i32 %8, i32* %6, align 8, !dbg !11004, !tbaa !10988
  %9 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11005, !tbaa !8640
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %9) #8, !dbg !11006
  br label %10, !dbg !11007

; <label>:10:                                     ; preds = %5, %4
  ret void, !dbg !11007
}

; Function Attrs: noredzone nounwind
define dso_local void @readwriteCommand(%struct.client*) local_unnamed_addr #0 !dbg !11008 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !11012
  %3 = load i32, i32* %2, align 8, !dbg !11013, !tbaa !10988
  %4 = and i32 %3, -131073, !dbg !11013
  store i32 %4, i32* %2, align 8, !dbg !11013, !tbaa !10988
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11014, !tbaa !8640
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %5) #8, !dbg !11015
  ret void, !dbg !11016
}

; Function Attrs: noredzone nounwind
define dso_local %struct.clusterNode* @getNodeByQuery(%struct.client* nocapture readonly, %struct.redisCommand*, %struct.redisObject**, i32, i32*, i32*) local_unnamed_addr #0 !dbg !11017 {
  %7 = alloca %struct.multiState, align 8
  %8 = alloca %struct.multiCmd, align 8
  %9 = alloca i32, align 4
  %10 = bitcast %struct.multiState* %7 to i8*, !dbg !11062
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9, !dbg !11062
  %11 = bitcast %struct.multiCmd* %8 to i8*, !dbg !11063
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9, !dbg !11063
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !11068, !tbaa !4226
  %13 = and i32 %12, 4, !dbg !11070
  %14 = icmp eq i32 %13, 0, !dbg !11070
  br i1 %14, label %17, label %15, !dbg !11071

; <label>:15:                                     ; preds = %6
  %16 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11072, !tbaa !757
  br label %251, !dbg !11073

; <label>:17:                                     ; preds = %6
  %18 = icmp ne i32* %5, null, !dbg !11074
  br i1 %18, label %19, label %20, !dbg !11076

; <label>:19:                                     ; preds = %17
  store i32 0, i32* %5, align 4, !dbg !11077, !tbaa !708
  br label %20, !dbg !11078

; <label>:20:                                     ; preds = %19, %17
  %21 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 1, !dbg !11079
  %22 = load void (%struct.client*)*, void (%struct.client*)** %21, align 8, !dbg !11079, !tbaa !11081
  %23 = icmp eq void (%struct.client*)* %22, @execCommand, !dbg !11083
  br i1 %23, label %24, label %31, !dbg !11084

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !11085
  %26 = load i32, i32* %25, align 8, !dbg !11085, !tbaa !10988
  %27 = and i32 %26, 8, !dbg !11088
  %28 = icmp eq i32 %27, 0, !dbg !11088
  br i1 %28, label %29, label %37, !dbg !11089

; <label>:29:                                     ; preds = %24
  %30 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11090, !tbaa !757
  br label %251, !dbg !11091

; <label>:31:                                     ; preds = %20
  %32 = getelementptr inbounds %struct.multiState, %struct.multiState* %7, i64 0, i32 0, !dbg !11093
  store %struct.multiCmd* %8, %struct.multiCmd** %32, align 8, !dbg !11095, !tbaa !11096
  %33 = getelementptr inbounds %struct.multiState, %struct.multiState* %7, i64 0, i32 1, !dbg !11097
  store i32 1, i32* %33, align 8, !dbg !11098, !tbaa !11099
  %34 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %8, i64 0, i32 0, !dbg !11100
  store %struct.redisObject** %2, %struct.redisObject*** %34, align 8, !dbg !11101, !tbaa !11102
  %35 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %8, i64 0, i32 1, !dbg !11104
  store i32 %3, i32* %35, align 8, !dbg !11105, !tbaa !11106
  %36 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %8, i64 0, i32 2, !dbg !11107
  store %struct.redisCommand* %1, %struct.redisCommand** %36, align 8, !dbg !11108, !tbaa !11109
  br label %42, !dbg !11111

; <label>:37:                                     ; preds = %24
  %38 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 38, !dbg !11112
  %39 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 38, i32 1
  %40 = load i32, i32* %39, align 8, !dbg !11113, !tbaa !11099
  %41 = icmp sgt i32 %40, 0, !dbg !11114
  br i1 %41, label %42, label %174, !dbg !11111

; <label>:42:                                     ; preds = %31, %37
  %43 = phi %struct.multiState* [ %7, %31 ], [ %38, %37 ]
  %44 = phi i32* [ %33, %31 ], [ %39, %37 ]
  %45 = bitcast i32* %9 to i8*
  %46 = getelementptr inbounds %struct.multiState, %struct.multiState* %43, i64 0, i32 0
  br label %47, !dbg !11111

; <label>:47:                                     ; preds = %42, %160
  %48 = phi i64 [ 0, %42 ], [ %168, %160 ]
  %49 = phi %struct.clusterNode* [ null, %42 ], [ %167, %160 ]
  %50 = phi %struct.redisObject* [ null, %42 ], [ %166, %160 ]
  %51 = phi i32 [ 0, %42 ], [ %165, %160 ]
  %52 = phi i32 [ 0, %42 ], [ %164, %160 ]
  %53 = phi i32 [ 0, %42 ], [ %163, %160 ]
  %54 = phi i32 [ 0, %42 ], [ %162, %160 ]
  %55 = phi i32 [ 0, %42 ], [ %161, %160 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #9, !dbg !11115
  %56 = load %struct.multiCmd*, %struct.multiCmd** %46, align 8, !dbg !11116, !tbaa !11096
  %57 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %56, i64 %48, i32 2, !dbg !11117
  %58 = load %struct.redisCommand*, %struct.redisCommand** %57, align 8, !dbg !11117, !tbaa !11109
  %59 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %56, i64 %48, i32 1, !dbg !11119
  %60 = load i32, i32* %59, align 8, !dbg !11119, !tbaa !11106
  %61 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %56, i64 %48, i32 0, !dbg !11121
  %62 = load %struct.redisObject**, %struct.redisObject*** %61, align 8, !dbg !11121, !tbaa !11102
  %63 = call i32* @getKeysFromCommand(%struct.redisCommand* %58, %struct.redisObject** %62, i32 %60, i32* nonnull %9) #8, !dbg !11124
  %64 = load i32, i32* %9, align 4, !dbg !11127, !tbaa !708
  %65 = icmp sgt i32 %64, 0, !dbg !11128
  br i1 %65, label %66, label %160, !dbg !11129

; <label>:66:                                     ; preds = %47, %153
  %67 = phi i64 [ %155, %153 ], [ 0, %47 ]
  %68 = phi %struct.clusterNode* [ %144, %153 ], [ %49, %47 ]
  %69 = phi %struct.redisObject* [ %143, %153 ], [ %50, %47 ]
  %70 = phi i32 [ %142, %153 ], [ %51, %47 ]
  %71 = phi i32 [ %154, %153 ], [ %52, %47 ]
  %72 = phi i32 [ %141, %153 ], [ %53, %47 ]
  %73 = phi i32 [ %140, %153 ], [ %54, %47 ]
  %74 = phi i32 [ %139, %153 ], [ %55, %47 ]
  %75 = getelementptr inbounds i32, i32* %63, i64 %67, !dbg !11130
  %76 = load i32, i32* %75, align 4, !dbg !11130, !tbaa !708
  %77 = sext i32 %76 to i64, !dbg !11131
  %78 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %62, i64 %77, !dbg !11131
  %79 = load %struct.redisObject*, %struct.redisObject** %78, align 8, !dbg !11131, !tbaa !757
  %80 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %79, i64 0, i32 2, !dbg !11133
  %81 = load i8*, i8** %80, align 8, !dbg !11133, !tbaa !6207
  %82 = getelementptr inbounds i8, i8* %81, i64 -1, !dbg !11136
  %83 = load i8, i8* %82, align 1, !dbg !11136, !tbaa !745
  %84 = trunc i8 %83 to i3, !dbg !11138
  switch i3 %84, label %106 [
    i3 0, label %85
    i3 1, label %88
    i3 2, label %92
    i3 3, label %97
    i3 -4, label %102
  ], !dbg !11138

; <label>:85:                                     ; preds = %66
  %86 = lshr i8 %83, 3, !dbg !11139
  %87 = zext i8 %86 to i64, !dbg !11139
  br label %106, !dbg !11140

; <label>:88:                                     ; preds = %66
  %89 = getelementptr inbounds i8, i8* %81, i64 -3, !dbg !11141
  %90 = load i8, i8* %89, align 1, !dbg !11142, !tbaa !745
  %91 = zext i8 %90 to i64, !dbg !11141
  br label %106, !dbg !11143

; <label>:92:                                     ; preds = %66
  %93 = getelementptr inbounds i8, i8* %81, i64 -5, !dbg !11144
  %94 = bitcast i8* %93 to i16*, !dbg !11145
  %95 = load i16, i16* %94, align 1, !dbg !11145, !tbaa !1493
  %96 = zext i16 %95 to i64, !dbg !11144
  br label %106, !dbg !11146

; <label>:97:                                     ; preds = %66
  %98 = getelementptr inbounds i8, i8* %81, i64 -9, !dbg !11147
  %99 = bitcast i8* %98 to i32*, !dbg !11148
  %100 = load i32, i32* %99, align 1, !dbg !11148, !tbaa !708
  %101 = zext i32 %100 to i64, !dbg !11147
  br label %106, !dbg !11149

; <label>:102:                                    ; preds = %66
  %103 = getelementptr inbounds i8, i8* %81, i64 -17, !dbg !11150
  %104 = bitcast i8* %103 to i64*, !dbg !11151
  %105 = load i64, i64* %104, align 1, !dbg !11151, !tbaa !1500
  br label %106, !dbg !11152

; <label>:106:                                    ; preds = %66, %85, %88, %92, %97, %102
  %107 = phi i64 [ %105, %102 ], [ %101, %97 ], [ %96, %92 ], [ %91, %88 ], [ %87, %85 ], [ 0, %66 ], !dbg !11153
  %108 = trunc i64 %107 to i32, !dbg !11154
  %109 = call i32 @keyHashSlot(i8* %81, i32 %108) #12, !dbg !11155
  %110 = icmp eq %struct.redisObject* %69, null, !dbg !11157
  br i1 %110, label %111, label %131, !dbg !11159

; <label>:111:                                    ; preds = %106
  %112 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !11160, !tbaa !784
  %113 = sext i32 %109 to i64, !dbg !11162
  %114 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %112, i64 0, i32 8, i64 %113, !dbg !11162
  %115 = load %struct.clusterNode*, %struct.clusterNode** %114, align 8, !dbg !11162, !tbaa !757
  %116 = icmp eq %struct.clusterNode* %115, null, !dbg !11163
  br i1 %116, label %117, label %119, !dbg !11165

; <label>:117:                                    ; preds = %111
  call void @getKeysFreeResult(i32* nonnull %63) #8, !dbg !11166
  br i1 %18, label %118, label %159, !dbg !11168

; <label>:118:                                    ; preds = %117
  store i32 6, i32* %5, align 4, !dbg !11169, !tbaa !708
  br label %159, !dbg !11171

; <label>:119:                                    ; preds = %111
  %120 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11172, !tbaa !757
  %121 = icmp eq %struct.clusterNode* %115, %120, !dbg !11174
  br i1 %121, label %122, label %126, !dbg !11175

; <label>:122:                                    ; preds = %119
  %123 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %112, i64 0, i32 6, i64 %113, !dbg !11176
  %124 = load %struct.clusterNode*, %struct.clusterNode** %123, align 8, !dbg !11176, !tbaa !757
  %125 = icmp eq %struct.clusterNode* %124, null, !dbg !11177
  br i1 %125, label %126, label %138, !dbg !11178

; <label>:126:                                    ; preds = %122, %119
  %127 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %112, i64 0, i32 7, i64 %113, !dbg !11179
  %128 = load %struct.clusterNode*, %struct.clusterNode** %127, align 8, !dbg !11179, !tbaa !757
  %129 = icmp eq %struct.clusterNode* %128, null, !dbg !11181
  %130 = select i1 %129, i32 %72, i32 1, !dbg !11182
  br label %138, !dbg !11182

; <label>:131:                                    ; preds = %106
  %132 = call i32 @equalStringObjects(%struct.redisObject* nonnull %69, %struct.redisObject* %79) #8, !dbg !11183
  %133 = icmp eq i32 %132, 0, !dbg !11183
  br i1 %133, label %134, label %138, !dbg !11186

; <label>:134:                                    ; preds = %131
  %135 = icmp eq i32 %74, %109, !dbg !11187
  br i1 %135, label %138, label %136, !dbg !11190

; <label>:136:                                    ; preds = %134
  call void @getKeysFreeResult(i32* nonnull %63) #8, !dbg !11191
  br i1 %18, label %137, label %159, !dbg !11193

; <label>:137:                                    ; preds = %136
  store i32 1, i32* %5, align 4, !dbg !11194, !tbaa !708
  br label %159, !dbg !11196

; <label>:138:                                    ; preds = %126, %134, %122, %131
  %139 = phi i32 [ %74, %131 ], [ %109, %122 ], [ %109, %126 ], [ %74, %134 ], !dbg !11197
  %140 = phi i32 [ %73, %131 ], [ 1, %122 ], [ %73, %126 ], [ %73, %134 ], !dbg !11197
  %141 = phi i32 [ %72, %131 ], [ %72, %122 ], [ %130, %126 ], [ %72, %134 ], !dbg !11197
  %142 = phi i32 [ %70, %131 ], [ %70, %122 ], [ %70, %126 ], [ 1, %134 ], !dbg !11198
  %143 = phi %struct.redisObject* [ %69, %131 ], [ %79, %122 ], [ %79, %126 ], [ %69, %134 ], !dbg !11197
  %144 = phi %struct.clusterNode* [ %68, %131 ], [ %115, %122 ], [ %115, %126 ], [ %68, %134 ], !dbg !11197
  %145 = or i32 %141, %140, !dbg !11200
  %146 = icmp eq i32 %145, 0, !dbg !11200
  br i1 %146, label %153, label %147, !dbg !11200

; <label>:147:                                    ; preds = %138
  %148 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !11202, !tbaa !7981
  %149 = call %struct.redisObject* @lookupKeyRead(%struct.redisDb* %148, %struct.redisObject* %79) #8, !dbg !11203
  %150 = icmp eq %struct.redisObject* %149, null, !dbg !11204
  %151 = zext i1 %150 to i32, !dbg !11205
  %152 = add nsw i32 %71, %151, !dbg !11205
  br label %153, !dbg !11205

; <label>:153:                                    ; preds = %138, %147
  %154 = phi i32 [ %71, %138 ], [ %152, %147 ], !dbg !11197
  %155 = add nuw nsw i64 %67, 1, !dbg !11206
  %156 = load i32, i32* %9, align 4, !dbg !11127, !tbaa !708
  %157 = sext i32 %156 to i64, !dbg !11128
  %158 = icmp slt i64 %155, %157, !dbg !11128
  br i1 %158, label %66, label %160, !dbg !11129, !llvm.loop !11207

; <label>:159:                                    ; preds = %118, %117, %137, %136
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #9, !dbg !11209
  br label %251

; <label>:160:                                    ; preds = %153, %47
  %161 = phi i32 [ %55, %47 ], [ %139, %153 ], !dbg !11210
  %162 = phi i32 [ %54, %47 ], [ %140, %153 ], !dbg !11065
  %163 = phi i32 [ %53, %47 ], [ %141, %153 ], !dbg !11066
  %164 = phi i32 [ %52, %47 ], [ %154, %153 ], !dbg !11067
  %165 = phi i32 [ %51, %47 ], [ %142, %153 ], !dbg !11061
  %166 = phi %struct.redisObject* [ %50, %47 ], [ %143, %153 ], !dbg !11210
  %167 = phi %struct.clusterNode* [ %49, %47 ], [ %144, %153 ], !dbg !11210
  call void @getKeysFreeResult(i32* %63) #8, !dbg !11211
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #9, !dbg !11209
  %168 = add nuw nsw i64 %48, 1, !dbg !11212
  %169 = load i32, i32* %44, align 8, !dbg !11113, !tbaa !11099
  %170 = sext i32 %169 to i64, !dbg !11114
  %171 = icmp slt i64 %168, %170, !dbg !11114
  br i1 %171, label %47, label %172, !dbg !11111, !llvm.loop !11213

; <label>:172:                                    ; preds = %160
  %173 = icmp eq %struct.clusterNode* %167, null, !dbg !11215
  br i1 %173, label %174, label %176, !dbg !11217

; <label>:174:                                    ; preds = %37, %172
  %175 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11218, !tbaa !757
  br label %251, !dbg !11219

; <label>:176:                                    ; preds = %172
  %177 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !11220, !tbaa !784
  %178 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %177, i64 0, i32 2, !dbg !11222
  %179 = load i32, i32* %178, align 8, !dbg !11222, !tbaa !1749
  %180 = icmp eq i32 %179, 0, !dbg !11223
  br i1 %180, label %183, label %181, !dbg !11224

; <label>:181:                                    ; preds = %176
  br i1 %18, label %182, label %251, !dbg !11225

; <label>:182:                                    ; preds = %181
  store i32 5, i32* %5, align 4, !dbg !11227, !tbaa !708
  br label %251, !dbg !11229

; <label>:183:                                    ; preds = %176
  %184 = icmp eq i32* %4, null, !dbg !11230
  br i1 %184, label %186, label %185, !dbg !11232

; <label>:185:                                    ; preds = %183
  store i32 %161, i32* %4, align 4, !dbg !11233, !tbaa !708
  br label %186, !dbg !11234

; <label>:186:                                    ; preds = %183, %185
  %187 = icmp ne i32 %162, 0, !dbg !11235
  %188 = icmp eq i32 %163, 0, !dbg !11237
  %189 = or i32 %163, %162, !dbg !11238
  %190 = icmp eq i32 %189, 0, !dbg !11238
  br i1 %190, label %196, label %191, !dbg !11238

; <label>:191:                                    ; preds = %186
  %192 = load void (%struct.client*)*, void (%struct.client*)** %21, align 8, !dbg !11239, !tbaa !11081
  %193 = icmp eq void (%struct.client*)* %192, @migrateCommand, !dbg !11240
  br i1 %193, label %194, label %196, !dbg !11241

; <label>:194:                                    ; preds = %191
  %195 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11242, !tbaa !757
  br label %251, !dbg !11243

; <label>:196:                                    ; preds = %186, %191
  %197 = icmp ne i32 %164, 0, !dbg !11244
  %198 = and i1 %187, %197, !dbg !11246
  br i1 %198, label %199, label %205, !dbg !11246

; <label>:199:                                    ; preds = %196
  br i1 %18, label %200, label %201, !dbg !11247

; <label>:200:                                    ; preds = %199
  store i32 3, i32* %5, align 4, !dbg !11249, !tbaa !708
  br label %201, !dbg !11251

; <label>:201:                                    ; preds = %200, %199
  %202 = sext i32 %161 to i64, !dbg !11252
  %203 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %177, i64 0, i32 6, i64 %202, !dbg !11252
  %204 = load %struct.clusterNode*, %struct.clusterNode** %203, align 8, !dbg !11252, !tbaa !757
  br label %251, !dbg !11253

; <label>:205:                                    ; preds = %196
  %206 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21
  %207 = load i32, i32* %206, align 8, !dbg !11254, !tbaa !10988
  br i1 %188, label %223, label %208, !dbg !11256

; <label>:208:                                    ; preds = %205
  %209 = and i32 %207, 512, !dbg !11257
  %210 = icmp eq i32 %209, 0, !dbg !11257
  br i1 %210, label %211, label %216, !dbg !11258

; <label>:211:                                    ; preds = %208
  %212 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 4, !dbg !11259
  %213 = load i32, i32* %212, align 8, !dbg !11259, !tbaa !11260
  %214 = and i32 %213, 4096, !dbg !11261
  %215 = icmp eq i32 %214, 0, !dbg !11261
  br i1 %215, label %223, label %216, !dbg !11262

; <label>:216:                                    ; preds = %211, %208
  %217 = icmp ne i32 %165, 0, !dbg !11263
  %218 = and i1 %197, %217, !dbg !11266
  br i1 %218, label %219, label %221, !dbg !11266

; <label>:219:                                    ; preds = %216
  br i1 %18, label %220, label %251, !dbg !11267

; <label>:220:                                    ; preds = %219
  store i32 2, i32* %5, align 4, !dbg !11269, !tbaa !708
  br label %251, !dbg !11271

; <label>:221:                                    ; preds = %216
  %222 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11272, !tbaa !757
  br label %251, !dbg !11274

; <label>:223:                                    ; preds = %205, %211
  %224 = and i32 %207, 131072, !dbg !11275
  %225 = icmp eq i32 %224, 0, !dbg !11275
  br i1 %225, label %246, label %226, !dbg !11277

; <label>:226:                                    ; preds = %223
  %227 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 4, !dbg !11278
  %228 = load i32, i32* %227, align 8, !dbg !11278, !tbaa !11260
  %229 = and i32 %228, 2, !dbg !11279
  %230 = icmp eq i32 %229, 0, !dbg !11279
  br i1 %230, label %231, label %236, !dbg !11280

; <label>:231:                                    ; preds = %226
  %232 = load void (%struct.client*)*, void (%struct.client*)** %21, align 8, !dbg !11281, !tbaa !11081
  %233 = icmp eq void (%struct.client*)* %232, @evalCommand, !dbg !11282
  %234 = icmp eq void (%struct.client*)* %232, @evalShaCommand, !dbg !11283
  %235 = or i1 %233, %234, !dbg !11284
  br i1 %235, label %236, label %246, !dbg !11284

; <label>:236:                                    ; preds = %226, %231
  %237 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11285, !tbaa !757
  %238 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %237, i64 0, i32 2, !dbg !11285
  %239 = load i32, i32* %238, align 8, !dbg !11285, !tbaa !918
  %240 = and i32 %239, 2, !dbg !11285
  %241 = icmp eq i32 %240, 0, !dbg !11285
  br i1 %241, label %246, label %242, !dbg !11286

; <label>:242:                                    ; preds = %236
  %243 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %237, i64 0, i32 8, !dbg !11287
  %244 = load %struct.clusterNode*, %struct.clusterNode** %243, align 8, !dbg !11287, !tbaa !1012
  %245 = icmp eq %struct.clusterNode* %244, %167, !dbg !11288
  br i1 %245, label %251, label %246, !dbg !11289

; <label>:246:                                    ; preds = %231, %236, %223, %242
  %247 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11290, !tbaa !757
  %248 = icmp ne %struct.clusterNode* %167, %247, !dbg !11292
  %249 = and i1 %18, %248, !dbg !11293
  br i1 %249, label %250, label %251, !dbg !11293

; <label>:250:                                    ; preds = %246
  store i32 4, i32* %5, align 4, !dbg !11294, !tbaa !708
  br label %251, !dbg !11295

; <label>:251:                                    ; preds = %159, %246, %250, %242, %219, %220, %181, %182, %221, %201, %194, %174, %29, %15
  %252 = phi %struct.clusterNode* [ %16, %15 ], [ null, %159 ], [ %175, %174 ], [ %195, %194 ], [ %204, %201 ], [ %222, %221 ], [ %30, %29 ], [ null, %182 ], [ null, %181 ], [ null, %220 ], [ null, %219 ], [ %237, %242 ], [ %167, %250 ], [ %167, %246 ], !dbg !11296
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9, !dbg !11297
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9, !dbg !11297
  ret %struct.clusterNode* %252, !dbg !11297
}

; Function Attrs: noredzone
declare dso_local void @execCommand(%struct.client*) #3

; Function Attrs: noredzone
declare dso_local i32* @getKeysFromCommand(%struct.redisCommand*, %struct.redisObject**, i32, i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @getKeysFreeResult(i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @equalStringObjects(%struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @evalCommand(%struct.client*) #3

; Function Attrs: noredzone
declare dso_local void @evalShaCommand(%struct.client*) #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterRedirectClient(%struct.client*, %struct.clusterNode*, i32, i32) local_unnamed_addr #0 !dbg !11298 {
  switch i32 %3, label %13 [
    i32 1, label %5
    i32 2, label %7
    i32 5, label %9
    i32 6, label %11
  ], !dbg !11310

; <label>:5:                                      ; preds = %4
  %6 = tail call i8* @sdsnew(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.268, i64 0, i64 0)) #8, !dbg !11311
  tail call void @addReplySds(%struct.client* %0, i8* %6) #8, !dbg !11314
  br label %25, !dbg !11315

; <label>:7:                                      ; preds = %4
  %8 = tail call i8* @sdsnew(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.269, i64 0, i64 0)) #8, !dbg !11316
  tail call void @addReplySds(%struct.client* %0, i8* %8) #8, !dbg !11319
  br label %25, !dbg !11320

; <label>:9:                                      ; preds = %4
  %10 = tail call i8* @sdsnew(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.270, i64 0, i64 0)) #8, !dbg !11321
  tail call void @addReplySds(%struct.client* %0, i8* %10) #8, !dbg !11324
  br label %25, !dbg !11325

; <label>:11:                                     ; preds = %4
  %12 = tail call i8* @sdsnew(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.271, i64 0, i64 0)) #8, !dbg !11326
  tail call void @addReplySds(%struct.client* %0, i8* %12) #8, !dbg !11329
  br label %25, !dbg !11330

; <label>:13:                                     ; preds = %4
  %14 = add i32 %3, -3, !dbg !11331
  %15 = icmp ult i32 %14, 2, !dbg !11331
  br i1 %15, label %16, label %24, !dbg !11331

; <label>:16:                                     ; preds = %13
  %17 = icmp eq i32 %3, 3, !dbg !11333
  %18 = tail call i8* @sdsempty() #8, !dbg !11334
  %19 = select i1 %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.273, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0), !dbg !11336
  %20 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 16, i64 0, !dbg !11337
  %21 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 17, !dbg !11338
  %22 = load i32, i32* %21, align 8, !dbg !11338, !tbaa !891
  %23 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), i8* %19, i32 %2, i8* nonnull %20, i32 %22) #8, !dbg !11339
  tail call void @addReplySds(%struct.client* %0, i8* %23) #8, !dbg !11340
  br label %25

; <label>:24:                                     ; preds = %13
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5652, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.275, i64 0, i64 0)) #8, !dbg !11341
  tail call void @_exit(i32 1) #10, !dbg !11341
  unreachable, !dbg !11341

; <label>:25:                                     ; preds = %7, %11, %16, %9, %5
  ret void, !dbg !11343
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterRedirectBlockedClientIfNeeded(%struct.client*) local_unnamed_addr #0 !dbg !11344 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !11359
  %3 = load i32, i32* %2, align 8, !dbg !11359, !tbaa !10988
  %4 = and i32 %3, 16, !dbg !11360
  %5 = icmp eq i32 %4, 0, !dbg !11360
  br i1 %5, label %77, label %6, !dbg !11361

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 39, !dbg !11362
  %8 = load i32, i32* %7, align 8, !dbg !11362, !tbaa !11363
  switch i32 %8, label %77 [
    i32 1, label %9
    i32 5, label %9
    i32 4, label %9
  ], !dbg !11364

; <label>:9:                                      ; preds = %6, %6, %6
  %10 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !11365, !tbaa !784
  %11 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %10, i64 0, i32 2, !dbg !11367
  %12 = load i32, i32* %11, align 8, !dbg !11367, !tbaa !1749
  %13 = icmp eq i32 %12, 1, !dbg !11368
  br i1 %13, label %14, label %16, !dbg !11369

; <label>:14:                                     ; preds = %9
  %15 = tail call i8* @sdsnew(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.270, i64 0, i64 0)) #8, !dbg !11376
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %15) #8, !dbg !11377
  br label %77, !dbg !11378

; <label>:16:                                     ; preds = %9
  %17 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 40, i32 1, !dbg !11379
  %18 = load %struct.dict*, %struct.dict** %17, align 8, !dbg !11379, !tbaa !11380
  %19 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %18) #8, !dbg !11381
  %20 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %19) #8, !dbg !11383
  %21 = icmp eq %struct.dictEntry* %20, null, !dbg !11385
  br i1 %21, label %76, label %22, !dbg !11386

; <label>:22:                                     ; preds = %16
  %23 = bitcast %struct.dictEntry* %20 to %struct.redisObject**, !dbg !11387
  %24 = load %struct.redisObject*, %struct.redisObject** %23, align 8, !dbg !11387, !tbaa !3249
  %25 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %24, i64 0, i32 2, !dbg !11389
  %26 = load i8*, i8** %25, align 8, !dbg !11389, !tbaa !6207
  %27 = getelementptr inbounds i8, i8* %26, i64 -1, !dbg !11392
  %28 = load i8, i8* %27, align 1, !dbg !11392, !tbaa !745
  %29 = trunc i8 %28 to i3, !dbg !11394
  switch i3 %29, label %51 [
    i3 0, label %30
    i3 1, label %33
    i3 2, label %37
    i3 3, label %42
    i3 -4, label %47
  ], !dbg !11394

; <label>:30:                                     ; preds = %22
  %31 = lshr i8 %28, 3, !dbg !11395
  %32 = zext i8 %31 to i64, !dbg !11395
  br label %51, !dbg !11396

; <label>:33:                                     ; preds = %22
  %34 = getelementptr inbounds i8, i8* %26, i64 -3, !dbg !11397
  %35 = load i8, i8* %34, align 1, !dbg !11398, !tbaa !745
  %36 = zext i8 %35 to i64, !dbg !11397
  br label %51, !dbg !11399

; <label>:37:                                     ; preds = %22
  %38 = getelementptr inbounds i8, i8* %26, i64 -5, !dbg !11400
  %39 = bitcast i8* %38 to i16*, !dbg !11401
  %40 = load i16, i16* %39, align 1, !dbg !11401, !tbaa !1493
  %41 = zext i16 %40 to i64, !dbg !11400
  br label %51, !dbg !11402

; <label>:42:                                     ; preds = %22
  %43 = getelementptr inbounds i8, i8* %26, i64 -9, !dbg !11403
  %44 = bitcast i8* %43 to i32*, !dbg !11404
  %45 = load i32, i32* %44, align 1, !dbg !11404, !tbaa !708
  %46 = zext i32 %45 to i64, !dbg !11403
  br label %51, !dbg !11405

; <label>:47:                                     ; preds = %22
  %48 = getelementptr inbounds i8, i8* %26, i64 -17, !dbg !11406
  %49 = bitcast i8* %48 to i64*, !dbg !11407
  %50 = load i64, i64* %49, align 1, !dbg !11407, !tbaa !1500
  br label %51, !dbg !11408

; <label>:51:                                     ; preds = %22, %30, %33, %37, %42, %47
  %52 = phi i64 [ %50, %47 ], [ %46, %42 ], [ %41, %37 ], [ %36, %33 ], [ %32, %30 ], [ 0, %22 ], !dbg !11409
  %53 = trunc i64 %52 to i32, !dbg !11410
  %54 = tail call i32 @keyHashSlot(i8* %26, i32 %53) #12, !dbg !11411
  %55 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !11413, !tbaa !784
  %56 = sext i32 %54 to i64, !dbg !11414
  %57 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %55, i64 0, i32 8, i64 %56, !dbg !11414
  %58 = load %struct.clusterNode*, %struct.clusterNode** %57, align 8, !dbg !11414, !tbaa !757
  %59 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11416, !tbaa !757
  %60 = icmp eq %struct.clusterNode* %58, %59, !dbg !11418
  br i1 %60, label %76, label %61, !dbg !11419

; <label>:61:                                     ; preds = %51
  %62 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %55, i64 0, i32 7, i64 %56, !dbg !11420
  %63 = load %struct.clusterNode*, %struct.clusterNode** %62, align 8, !dbg !11420, !tbaa !757
  %64 = icmp eq %struct.clusterNode* %63, null, !dbg !11421
  br i1 %64, label %65, label %76, !dbg !11422

; <label>:65:                                     ; preds = %61
  %66 = icmp eq %struct.clusterNode* %58, null, !dbg !11423
  br i1 %66, label %67, label %69, !dbg !11432

; <label>:67:                                     ; preds = %65
  %68 = tail call i8* @sdsnew(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.271, i64 0, i64 0)) #8, !dbg !11436
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %68) #8, !dbg !11437
  br label %75, !dbg !11438

; <label>:69:                                     ; preds = %65
  %70 = tail call i8* @sdsempty() #8, !dbg !11442
  %71 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %58, i64 0, i32 16, i64 0, !dbg !11443
  %72 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %58, i64 0, i32 17, !dbg !11444
  %73 = load i32, i32* %72, align 8, !dbg !11444, !tbaa !891
  %74 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %70, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0), i32 %54, i8* nonnull %71, i32 %73) #8, !dbg !11445
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %74) #8, !dbg !11446
  br label %75

; <label>:75:                                     ; preds = %67, %69
  tail call void @dictReleaseIterator(%struct.dictIterator* %19) #8, !dbg !11447
  br label %77

; <label>:76:                                     ; preds = %61, %51, %16
  tail call void @dictReleaseIterator(%struct.dictIterator* %19) #8, !dbg !11448
  br label %77

; <label>:77:                                     ; preds = %75, %14, %1, %6, %76
  %78 = phi i32 [ 0, %76 ], [ 0, %6 ], [ 0, %1 ], [ 1, %14 ], [ 1, %75 ], !dbg !11449
  ret i32 %78, !dbg !11450
}

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetIterator(%struct.dict*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable

attributes #0 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noredzone nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin noredzone nounwind }
attributes #9 = { nounwind }
attributes #10 = { nobuiltin noredzone noreturn nounwind }
attributes #11 = { nobuiltin noredzone nounwind readonly }
attributes #12 = { nobuiltin noredzone }

!llvm.module.flags = !{!432, !433, !434}
!llvm.ident = !{!435}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "myself", scope: !2, file: !3, line: 47, type: !378, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !278)
!3 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.c", directory: "/root/.unikraft/apps/redis/build")
!4 = !{}
!5 = !{!6, !7, !8, !14, !16, !51, !73, !92, !106, !177, !178, !179, !186, !184, !104, !246, !247, !257, !264, !271}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!7 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !9, line: 173, baseType: !10)
!9 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/types.h", directory: "/root/.unikraft/apps/redis/build")
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !11, line: 100, baseType: !12)
!11 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_types.h", directory: "/root/.unikraft/apps/redis/build")
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !11, line: 44, baseType: !13)
!13 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !9, line: 200, baseType: !15)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "_ssize_t", file: !11, line: 145, baseType: !13)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !18, line: 73, size: 128, elements: !19)
!18 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/sockets.h", directory: "/root/.unikraft/apps/redis/build")
!19 = !{!20, !28, !30, !36, !46}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "sin_len", scope: !17, file: !18, line: 74, baseType: !21, size: 8)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8_t", file: !22, line: 125, baseType: !23)
!22 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/arch.h", directory: "/root/.unikraft/apps/redis/build")
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !24, line: 24, baseType: !25)
!24 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !26, line: 43, baseType: !27)
!26 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!27 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !17, file: !18, line: 75, baseType: !29, size: 8, offset: 8)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !18, line: 63, baseType: !21)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !17, file: !18, line: 76, baseType: !31, size: 16, offset: 16)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !18, line: 68, baseType: !32)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16_t", file: !22, line: 127, baseType: !33)
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !24, line: 36, baseType: !34)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !26, line: 57, baseType: !35)
!35 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !17, file: !18, line: 77, baseType: !37, size: 32, offset: 32)
!37 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !38, line: 58, size: 32, elements: !39)
!38 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/inet.h", directory: "/root/.unikraft/apps/redis/build")
!39 = !{!40}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !37, file: !38, line: 59, baseType: !41, size: 32)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !38, line: 55, baseType: !42)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32_t", file: !22, line: 129, baseType: !43)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !24, line: 48, baseType: !44)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !26, line: 79, baseType: !45)
!45 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !17, file: !18, line: 79, baseType: !47, size: 64, offset: 64)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 64, elements: !49)
!48 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!49 = !{!50}
!50 = !DISubrange(count: 8)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !18, line: 84, size: 224, elements: !53)
!53 = !{!54, !55, !56, !57, !58, !72}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_len", scope: !52, file: !18, line: 85, baseType: !21, size: 8)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !52, file: !18, line: 86, baseType: !29, size: 8, offset: 8)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !52, file: !18, line: 87, baseType: !31, size: 16, offset: 16)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !52, file: !18, line: 88, baseType: !42, size: 32, offset: 32)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !52, file: !18, line: 89, baseType: !59, size: 128, offset: 64)
!59 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !38, line: 62, size: 128, elements: !60)
!60 = !{!61}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "un", scope: !59, file: !38, line: 66, baseType: !62, size: 128)
!62 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !59, file: !38, line: 63, size: 128, elements: !63)
!63 = !{!64, !68}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "u32_addr", scope: !62, file: !38, line: 64, baseType: !65, size: 128)
!65 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 128, elements: !66)
!66 = !{!67}
!67 = !DISubrange(count: 4)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "u8_addr", scope: !62, file: !38, line: 65, baseType: !69, size: 128)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 128, elements: !70)
!70 = !{!71}
!71 = !DISubrange(count: 16)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !52, file: !18, line: 90, baseType: !42, size: 32, offset: 192)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgDataGossip", file: !75, line: 197, baseType: !76)
!75 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.h", directory: "/root/.unikraft/apps/redis/build")
!76 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 188, size: 832, elements: !77)
!77 = !{!78, !82, !83, !84, !88, !89, !90, !91}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !76, file: !75, line: 189, baseType: !79, size: 320)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 320, elements: !80)
!80 = !{!81}
!81 = !DISubrange(count: 40)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "ping_sent", scope: !76, file: !75, line: 190, baseType: !43, size: 32, offset: 320)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "pong_received", scope: !76, file: !75, line: 191, baseType: !43, size: 32, offset: 352)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !76, file: !75, line: 192, baseType: !85, size: 368, offset: 384)
!85 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 368, elements: !86)
!86 = !{!87}
!87 = !DISubrange(count: 46)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !76, file: !75, line: 193, baseType: !33, size: 16, offset: 752)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "cport", scope: !76, file: !75, line: 194, baseType: !33, size: 16, offset: 768)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !76, file: !75, line: 195, baseType: !33, size: 16, offset: 784)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "notused1", scope: !76, file: !75, line: 196, baseType: !43, size: 32, offset: 800)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsg", file: !75, line: 275, baseType: !94)
!94 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 252, size: 34816, elements: !95)
!95 = !{!96, !98, !99, !100, !101, !102, !103, !107, !108, !109, !110, !114, !115, !116, !120, !121, !122, !123, !127}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !94, file: !75, line: 253, baseType: !97, size: 32)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !66)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "totlen", scope: !94, file: !75, line: 254, baseType: !43, size: 32, offset: 32)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !94, file: !75, line: 255, baseType: !33, size: 16, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !94, file: !75, line: 256, baseType: !33, size: 16, offset: 80)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !94, file: !75, line: 257, baseType: !33, size: 16, offset: 96)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !94, file: !75, line: 258, baseType: !33, size: 16, offset: 112)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "currentEpoch", scope: !94, file: !75, line: 259, baseType: !104, size: 64, offset: 128)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !24, line: 60, baseType: !105)
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !26, line: 105, baseType: !106)
!106 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "configEpoch", scope: !94, file: !75, line: 260, baseType: !104, size: 64, offset: 192)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !94, file: !75, line: 263, baseType: !104, size: 64, offset: 256)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "sender", scope: !94, file: !75, line: 265, baseType: !79, size: 320, offset: 320)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "myslots", scope: !94, file: !75, line: 266, baseType: !111, size: 16384, offset: 640)
!111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 16384, elements: !112)
!112 = !{!113}
!113 = !DISubrange(count: 2048)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "slaveof", scope: !94, file: !75, line: 267, baseType: !79, size: 320, offset: 17024)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "myip", scope: !94, file: !75, line: 268, baseType: !85, size: 368, offset: 17344)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "notused1", scope: !94, file: !75, line: 269, baseType: !117, size: 272, offset: 17712)
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 272, elements: !118)
!118 = !{!119}
!119 = !DISubrange(count: 34)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "cport", scope: !94, file: !75, line: 270, baseType: !33, size: 16, offset: 17984)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !94, file: !75, line: 271, baseType: !33, size: 16, offset: 18000)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !94, file: !75, line: 272, baseType: !27, size: 8, offset: 18016)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "mflags", scope: !94, file: !75, line: 273, baseType: !124, size: 24, offset: 18024)
!124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 24, elements: !125)
!125 = !{!126}
!126 = !DISubrange(count: 3)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !94, file: !75, line: 274, baseType: !128, size: 16768, offset: 18048)
!128 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "clusterMsgData", file: !75, line: 222, size: 16768, elements: !129)
!129 = !{!130, !137, !145, !156, !166}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !128, file: !75, line: 227, baseType: !131, size: 832)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 224, size: 832, elements: !132)
!132 = !{!133}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "gossip", scope: !131, file: !75, line: 226, baseType: !134, size: 832)
!134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 832, elements: !135)
!135 = !{!136}
!136 = !DISubrange(count: 1)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "fail", scope: !128, file: !75, line: 232, baseType: !138, size: 320)
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 230, size: 320, elements: !139)
!139 = !{!140}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "about", scope: !138, file: !75, line: 231, baseType: !141, size: 320)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgDataFail", file: !75, line: 201, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 199, size: 320, elements: !143)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !142, file: !75, line: 200, baseType: !79, size: 320)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "publish", scope: !128, file: !75, line: 237, baseType: !146, size: 128)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 235, size: 128, elements: !147)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !146, file: !75, line: 236, baseType: !149, size: 128)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgDataPublish", file: !75, line: 207, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 203, size: 128, elements: !151)
!151 = !{!152, !153, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "channel_len", scope: !150, file: !75, line: 204, baseType: !43, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "message_len", scope: !150, file: !75, line: 205, baseType: !43, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_data", scope: !150, file: !75, line: 206, baseType: !155, size: 64, offset: 64)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 64, elements: !49)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !128, file: !75, line: 242, baseType: !157, size: 16768)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 240, size: 16768, elements: !158)
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nodecfg", scope: !157, file: !75, line: 241, baseType: !160, size: 16768)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgDataUpdate", file: !75, line: 213, baseType: !161)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 209, size: 16768, elements: !162)
!162 = !{!163, !164, !165}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "configEpoch", scope: !161, file: !75, line: 210, baseType: !104, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !161, file: !75, line: 211, baseType: !79, size: 320, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !161, file: !75, line: 212, baseType: !111, size: 16384, offset: 384)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !128, file: !75, line: 247, baseType: !167, size: 128)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 245, size: 128, elements: !168)
!168 = !{!169}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !167, file: !75, line: 246, baseType: !170, size: 128)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgModule", file: !75, line: 220, baseType: !171)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 215, size: 128, elements: !172)
!172 = !{!173, !174, !175, !176}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "module_id", scope: !171, file: !75, line: 216, baseType: !104, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !171, file: !75, line: 217, baseType: !43, size: 32, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !171, file: !75, line: 218, baseType: !23, size: 8, offset: 96)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_data", scope: !171, file: !75, line: 219, baseType: !124, size: 24, offset: 104)
!177 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterLink", file: !75, line: 47, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterLink", file: !75, line: 41, size: 320, elements: !182)
!182 = !{!183, !187, !188, !191, !192}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !181, file: !75, line: 42, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "mstime_t", file: !185, line: 52, baseType: !186)
!185 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.h", directory: "/root/.unikraft/apps/redis/build")
!186 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !181, file: !75, line: 43, baseType: !177, size: 32, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sndbuf", scope: !181, file: !75, line: 44, baseType: !189, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "sds", file: !190, line: 43, baseType: !178)
!190 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/sds.h", directory: "/root/.unikraft/apps/redis/build")
!191 = !DIDerivedType(tag: DW_TAG_member, name: "rcvbuf", scope: !181, file: !75, line: 45, baseType: !189, size: 64, offset: 192)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !181, file: !75, line: 46, baseType: !193, size: 64, offset: 256)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterNode", file: !75, line: 116, size: 18112, elements: !195)
!195 = !{!196, !197, !198, !199, !200, !201, !202, !203, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !194, file: !75, line: 117, baseType: !184, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !194, file: !75, line: 118, baseType: !79, size: 320, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !194, file: !75, line: 119, baseType: !177, size: 32, offset: 384)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "configEpoch", scope: !194, file: !75, line: 120, baseType: !104, size: 64, offset: 448)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !194, file: !75, line: 121, baseType: !111, size: 16384, offset: 512)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "numslots", scope: !194, file: !75, line: 122, baseType: !177, size: 32, offset: 16896)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "numslaves", scope: !194, file: !75, line: 123, baseType: !177, size: 32, offset: 16928)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "slaves", scope: !194, file: !75, line: 124, baseType: !204, size: 64, offset: 16960)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "slaveof", scope: !194, file: !75, line: 125, baseType: !193, size: 64, offset: 17024)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ping_sent", scope: !194, file: !75, line: 129, baseType: !184, size: 64, offset: 17088)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "pong_received", scope: !194, file: !75, line: 130, baseType: !184, size: 64, offset: 17152)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "fail_time", scope: !194, file: !75, line: 131, baseType: !184, size: 64, offset: 17216)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "voted_time", scope: !194, file: !75, line: 132, baseType: !184, size: 64, offset: 17280)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset_time", scope: !194, file: !75, line: 133, baseType: !184, size: 64, offset: 17344)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "orphaned_time", scope: !194, file: !75, line: 134, baseType: !184, size: 64, offset: 17408)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset", scope: !194, file: !75, line: 135, baseType: !186, size: 64, offset: 17472)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !194, file: !75, line: 136, baseType: !85, size: 368, offset: 17536)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !194, file: !75, line: 137, baseType: !177, size: 32, offset: 17920)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "cport", scope: !194, file: !75, line: 138, baseType: !177, size: 32, offset: 17952)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !194, file: !75, line: 139, baseType: !179, size: 64, offset: 17984)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "fail_reports", scope: !194, file: !75, line: 140, baseType: !218, size: 64, offset: 18048)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !220, line: 54, baseType: !221)
!220 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/adlist.h", directory: "/root/.unikraft/apps/redis/build")
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list", file: !220, line: 47, size: 384, elements: !222)
!222 = !{!223, !232, !233, !237, !241, !245}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !221, file: !220, line: 48, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "listNode", file: !220, line: 40, baseType: !226)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listNode", file: !220, line: 36, size: 192, elements: !227)
!227 = !{!228, !230, !231}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !226, file: !220, line: 37, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !226, file: !220, line: 38, baseType: !229, size: 64, offset: 64)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !226, file: !220, line: 39, baseType: !6, size: 64, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !221, file: !220, line: 49, baseType: !224, size: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "dup", scope: !221, file: !220, line: 50, baseType: !234, size: 64, offset: 128)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DISubroutineType(types: !236)
!236 = !{!6, !6}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !221, file: !220, line: 51, baseType: !238, size: 64, offset: 192)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DISubroutineType(types: !240)
!240 = !{null, !6}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !221, file: !220, line: 52, baseType: !242, size: 64, offset: 256)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DISubroutineType(types: !244)
!244 = !{!177, !6, !6}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !221, file: !220, line: 53, baseType: !106, size: 64, offset: 320)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr8", file: !190, line: 51, size: 24, elements: !249)
!249 = !{!250, !251, !252, !253}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !248, file: !190, line: 52, baseType: !23, size: 8)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !248, file: !190, line: 53, baseType: !23, size: 8, offset: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !248, file: !190, line: 54, baseType: !27, size: 8, offset: 16)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !248, file: !190, line: 55, baseType: !254, offset: 24)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, elements: !255)
!255 = !{!256}
!256 = !DISubrange(count: -1)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr16", file: !190, line: 57, size: 40, elements: !259)
!259 = !{!260, !261, !262, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !258, file: !190, line: 58, baseType: !33, size: 16)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !258, file: !190, line: 59, baseType: !33, size: 16, offset: 16)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !190, line: 60, baseType: !27, size: 8, offset: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !258, file: !190, line: 61, baseType: !254, offset: 40)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr32", file: !190, line: 63, size: 72, elements: !266)
!266 = !{!267, !268, !269, !270}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !265, file: !190, line: 64, baseType: !43, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !265, file: !190, line: 65, baseType: !43, size: 32, offset: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !265, file: !190, line: 66, baseType: !27, size: 8, offset: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !265, file: !190, line: 67, baseType: !254, offset: 72)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr64", file: !190, line: 69, size: 136, elements: !273)
!273 = !{!274, !275, !276, !277}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !272, file: !190, line: 70, baseType: !104, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !272, file: !190, line: 71, baseType: !104, size: 64, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !272, file: !190, line: 72, baseType: !27, size: 8, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !272, file: !190, line: 73, baseType: !254, offset: 136)
!278 = !{!0, !279, !290, !404, !406, !423, !425}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "lastlog_time", scope: !281, file: !3, line: 2863, type: !288, isLocal: true, isDefinition: true)
!281 = distinct !DISubprogram(name: "clusterLogCantFailover", scope: !3, file: !3, line: 2861, type: !282, isLocal: false, isDefinition: true, scopeLine: 2861, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !284)
!282 = !DISubroutineType(types: !283)
!283 = !{null, !177}
!284 = !{!285, !286, !287}
!285 = !DILocalVariable(name: "reason", arg: 1, scope: !281, file: !3, line: 2861, type: !177)
!286 = !DILocalVariable(name: "msg", scope: !281, file: !3, line: 2862, type: !178)
!287 = !DILocalVariable(name: "nolog_fail_time", scope: !281, file: !3, line: 2864, type: !184)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !289, line: 34, baseType: !13)
!289 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/include/uk/time_types.h", directory: "/root/.unikraft/apps/redis/build")
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "iteration", scope: !292, file: !3, line: 3319, type: !7, isLocal: true, isDefinition: true)
!292 = distinct !DISubprogram(name: "clusterCron", scope: !3, file: !3, line: 3310, type: !293, isLocal: false, isDefinition: true, scopeLine: 3310, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !295)
!293 = !DISubroutineType(types: !294)
!294 = !{null}
!295 = !{!296, !370, !371, !372, !373, !374, !375, !376, !377, !380, !381, !383, !384, !386, !389, !390, !391, !394, !398, !400, !401}
!296 = !DILocalVariable(name: "di", scope: !292, file: !3, line: 3311, type: !297)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictIterator", file: !299, line: 95, baseType: !300)
!299 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/dict.h", directory: "/root/.unikraft/apps/redis/build")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictIterator", file: !299, line: 88, size: 384, elements: !301)
!301 = !{!302, !364, !365, !366, !367, !368, !369}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !300, file: !299, line: 89, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict", file: !299, line: 82, baseType: !305)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !299, line: 76, size: 768, elements: !306)
!306 = !{!307, !332, !333, !362, !363}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !305, file: !299, line: 77, baseType: !308, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictType", file: !299, line: 65, baseType: !310)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictType", file: !299, line: 58, size: 384, elements: !311)
!311 = !{!312, !318, !322, !323, !327, !331}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "hashFunction", scope: !310, file: !299, line: 59, baseType: !313, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DISubroutineType(types: !315)
!315 = !{!104, !316}
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "keyDup", scope: !310, file: !299, line: 60, baseType: !319, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!6, !6, !316}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "valDup", scope: !310, file: !299, line: 61, baseType: !319, size: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "keyCompare", scope: !310, file: !299, line: 62, baseType: !324, size: 64, offset: 192)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!177, !6, !316, !316}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "keyDestructor", scope: !310, file: !299, line: 63, baseType: !328, size: 64, offset: 256)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DISubroutineType(types: !330)
!330 = !{null, !6, !6}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "valDestructor", scope: !310, file: !299, line: 64, baseType: !328, size: 64, offset: 320)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !305, file: !299, line: 78, baseType: !6, size: 64, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !305, file: !299, line: 79, baseType: !334, size: 512, offset: 128)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 512, elements: !360)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictht", file: !299, line: 74, baseType: !336)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictht", file: !299, line: 69, size: 256, elements: !337)
!337 = !{!338, !357, !358, !359}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !336, file: !299, line: 70, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictEntry", file: !299, line: 56, baseType: !342)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictEntry", file: !299, line: 47, size: 192, elements: !343)
!343 = !{!344, !345, !355}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !342, file: !299, line: 48, baseType: !6, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !342, file: !299, line: 54, baseType: !346, size: 64, offset: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !342, file: !299, line: 49, size: 64, elements: !347)
!347 = !{!348, !349, !350, !353}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !346, file: !299, line: 50, baseType: !6, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !346, file: !299, line: 51, baseType: !104, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "s64", scope: !346, file: !299, line: 52, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !24, line: 56, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !26, line: 103, baseType: !13)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !346, file: !299, line: 53, baseType: !354, size: 64)
!354 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !342, file: !299, line: 55, baseType: !356, size: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !336, file: !299, line: 71, baseType: !106, size: 64, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "sizemask", scope: !336, file: !299, line: 72, baseType: !106, size: 64, offset: 128)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !336, file: !299, line: 73, baseType: !106, size: 64, offset: 192)
!360 = !{!361}
!361 = !DISubrange(count: 2)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rehashidx", scope: !305, file: !299, line: 80, baseType: !13, size: 64, offset: 640)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "iterators", scope: !305, file: !299, line: 81, baseType: !106, size: 64, offset: 704)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !300, file: !299, line: 90, baseType: !13, size: 64, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !300, file: !299, line: 91, baseType: !177, size: 32, offset: 128)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "safe", scope: !300, file: !299, line: 91, baseType: !177, size: 32, offset: 160)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !300, file: !299, line: 92, baseType: !340, size: 64, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "nextEntry", scope: !300, file: !299, line: 92, baseType: !340, size: 64, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fingerprint", scope: !300, file: !299, line: 94, baseType: !186, size: 64, offset: 320)
!370 = !DILocalVariable(name: "de", scope: !292, file: !3, line: 3312, type: !340)
!371 = !DILocalVariable(name: "update_state", scope: !292, file: !3, line: 3313, type: !177)
!372 = !DILocalVariable(name: "orphaned_masters", scope: !292, file: !3, line: 3314, type: !177)
!373 = !DILocalVariable(name: "max_slaves", scope: !292, file: !3, line: 3315, type: !177)
!374 = !DILocalVariable(name: "this_slaves", scope: !292, file: !3, line: 3316, type: !177)
!375 = !DILocalVariable(name: "min_pong", scope: !292, file: !3, line: 3317, type: !184)
!376 = !DILocalVariable(name: "now", scope: !292, file: !3, line: 3317, type: !184)
!377 = !DILocalVariable(name: "min_pong_node", scope: !292, file: !3, line: 3318, type: !378)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterNode", file: !75, line: 141, baseType: !194)
!380 = !DILocalVariable(name: "handshake_timeout", scope: !292, file: !3, line: 3320, type: !184)
!381 = !DILocalVariable(name: "curr_ip", scope: !382, file: !3, line: 3329, type: !178)
!382 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3327, column: 5)
!383 = !DILocalVariable(name: "changed", scope: !382, file: !3, line: 3330, type: !177)
!384 = !DILocalVariable(name: "node", scope: !385, file: !3, line: 3369, type: !378)
!385 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3368, column: 40)
!386 = !DILocalVariable(name: "fd", scope: !387, file: !3, line: 3386, type: !177)
!387 = distinct !DILexicalBlock(scope: !388, file: !3, line: 3385, column: 33)
!388 = distinct !DILexicalBlock(scope: !385, file: !3, line: 3385, column: 13)
!389 = !DILocalVariable(name: "old_ping_sent", scope: !387, file: !3, line: 3387, type: !184)
!390 = !DILocalVariable(name: "link", scope: !387, file: !3, line: 3388, type: !179)
!391 = !DILocalVariable(name: "j", scope: !392, file: !3, line: 3440, type: !177)
!392 = distinct !DILexicalBlock(scope: !393, file: !3, line: 3439, column: 28)
!393 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3439, column: 9)
!394 = !DILocalVariable(name: "this", scope: !395, file: !3, line: 3446, type: !378)
!395 = distinct !DILexicalBlock(scope: !396, file: !3, line: 3444, column: 33)
!396 = distinct !DILexicalBlock(scope: !397, file: !3, line: 3444, column: 9)
!397 = distinct !DILexicalBlock(scope: !392, file: !3, line: 3444, column: 9)
!398 = !DILocalVariable(name: "node", scope: !399, file: !3, line: 3474, type: !378)
!399 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3473, column: 40)
!400 = !DILocalVariable(name: "delay", scope: !399, file: !3, line: 3476, type: !184)
!401 = !DILocalVariable(name: "okslaves", scope: !402, file: !3, line: 3485, type: !177)
!402 = distinct !DILexicalBlock(scope: !403, file: !3, line: 3484, column: 77)
!403 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3484, column: 13)
!404 = !DIGlobalVariableExpression(var: !405, expr: !DIExpression())
!405 = distinct !DIGlobalVariable(name: "prev_ip", scope: !292, file: !3, line: 3328, type: !178, isLocal: true, isDefinition: true)
!406 = !DIGlobalVariableExpression(var: !407, expr: !DIExpression())
!407 = distinct !DIGlobalVariable(name: "among_minority_time", scope: !408, file: !3, line: 3763, type: !184, isLocal: true, isDefinition: true)
!408 = distinct !DISubprogram(name: "clusterUpdateState", scope: !3, file: !3, line: 3760, type: !293, isLocal: false, isDefinition: true, scopeLine: 3760, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !409)
!409 = !{!410, !411, !412, !413, !415, !416, !418, !420}
!410 = !DILocalVariable(name: "j", scope: !408, file: !3, line: 3761, type: !177)
!411 = !DILocalVariable(name: "new_state", scope: !408, file: !3, line: 3761, type: !177)
!412 = !DILocalVariable(name: "reachable_masters", scope: !408, file: !3, line: 3762, type: !177)
!413 = !DILocalVariable(name: "di", scope: !414, file: !3, line: 3801, type: !297)
!414 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3800, column: 5)
!415 = !DILocalVariable(name: "de", scope: !414, file: !3, line: 3802, type: !340)
!416 = !DILocalVariable(name: "node", scope: !417, file: !3, line: 3807, type: !378)
!417 = distinct !DILexicalBlock(scope: !414, file: !3, line: 3806, column: 44)
!418 = !DILocalVariable(name: "needed_quorum", scope: !419, file: !3, line: 3821, type: !177)
!419 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3820, column: 5)
!420 = !DILocalVariable(name: "rejoin_delay", scope: !421, file: !3, line: 3831, type: !184)
!421 = distinct !DILexicalBlock(scope: !422, file: !3, line: 3830, column: 45)
!422 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3830, column: 9)
!423 = !DIGlobalVariableExpression(var: !424, expr: !DIExpression())
!424 = distinct !DIGlobalVariable(name: "first_call_time", scope: !408, file: !3, line: 3764, type: !184, isLocal: true, isDefinition: true)
!425 = !DIGlobalVariableExpression(var: !426, expr: !DIExpression())
!426 = distinct !DIGlobalVariable(name: "redisNodeFlagsTable", scope: !2, file: !3, line: 3960, type: !427, isLocal: true, isDefinition: true)
!427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !428, size: 1024, elements: !49)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisNodeFlags", file: !3, line: 3955, size: 128, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !428, file: !3, line: 3956, baseType: !33, size: 16)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !428, file: !3, line: 3957, baseType: !178, size: 64, offset: 64)
!432 = !{i32 2, !"Dwarf Version", i32 4}
!433 = !{i32 2, !"Debug Info Version", i32 3}
!434 = !{i32 1, !"wchar_size", i32 4}
!435 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!436 = distinct !DISubprogram(name: "clusterLoadConfig", scope: !3, file: !3, line: 90, type: !437, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !439)
!437 = !DISubroutineType(types: !438)
!438 = !{!177, !178}
!439 = !{!440, !441, !638, !675, !676, !677, !678, !680, !682, !683, !684, !685, !686, !687, !688, !692, !693, !696, !697}
!440 = !DILocalVariable(name: "filename", arg: 1, scope: !436, file: !3, line: 90, type: !178)
!441 = !DILocalVariable(name: "fp", scope: !436, file: !3, line: 91, type: !442)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !444, line: 66, baseType: !445)
!444 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/stdio.h", directory: "/root/.unikraft/apps/redis/build")
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !446, line: 287, baseType: !447)
!446 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/reent.h", directory: "/root/.unikraft/apps/redis/build")
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !446, line: 181, size: 1408, elements: !448)
!448 = !{!449, !450, !451, !452, !454, !455, !460, !461, !462, !607, !613, !618, !622, !623, !624, !625, !626, !628, !629, !630, !631, !632, !636, !637}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !447, file: !446, line: 182, baseType: !246, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !447, file: !446, line: 183, baseType: !177, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !447, file: !446, line: 184, baseType: !177, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !447, file: !446, line: 185, baseType: !453, size: 16, offset: 128)
!453 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !447, file: !446, line: 186, baseType: !453, size: 16, offset: 144)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !447, file: !446, line: 187, baseType: !456, size: 128, offset: 192)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !446, line: 117, size: 128, elements: !457)
!457 = !{!458, !459}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !456, file: !446, line: 118, baseType: !246, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !456, file: !446, line: 119, baseType: !177, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !447, file: !446, line: 188, baseType: !177, size: 32, offset: 320)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !447, file: !446, line: 195, baseType: !6, size: 64, offset: 384)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !447, file: !446, line: 197, baseType: !463, size: 64, offset: 448)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = !DISubroutineType(types: !465)
!465 = !{!15, !466, !6, !178, !177}
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !446, line: 569, size: 14912, elements: !468)
!468 = !{!469, !470, !472, !473, !474, !475, !479, !480, !483, !484, !488, !500, !501, !502, !504, !505, !506, !575, !594, !595, !598, !605}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !467, file: !446, line: 571, baseType: !177, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !467, file: !446, line: 576, baseType: !471, size: 64, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !467, file: !446, line: 576, baseType: !471, size: 64, offset: 128)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !467, file: !446, line: 576, baseType: !471, size: 64, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !467, file: !446, line: 578, baseType: !177, size: 32, offset: 256)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !467, file: !446, line: 579, baseType: !476, size: 200, offset: 288)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 200, elements: !477)
!477 = !{!478}
!478 = !DISubrange(count: 25)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !467, file: !446, line: 582, baseType: !177, size: 32, offset: 512)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !467, file: !446, line: 583, baseType: !481, size: 64, offset: 576)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !446, line: 40, flags: DIFlagFwdDecl)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !467, file: !446, line: 585, baseType: !177, size: 32, offset: 640)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !467, file: !446, line: 587, baseType: !485, size: 64, offset: 704)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{null, !466}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !467, file: !446, line: 590, baseType: !489, size: 64, offset: 768)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !446, line: 47, size: 256, elements: !491)
!491 = !{!492, !493, !494, !495, !496, !497}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !490, file: !446, line: 49, baseType: !489, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !490, file: !446, line: 50, baseType: !177, size: 32, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !490, file: !446, line: 50, baseType: !177, size: 32, offset: 96)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !490, file: !446, line: 50, baseType: !177, size: 32, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !490, file: !446, line: 50, baseType: !177, size: 32, offset: 160)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !490, file: !446, line: 51, baseType: !498, size: 32, offset: 192)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 32, elements: !135)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !446, line: 25, baseType: !45)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !467, file: !446, line: 591, baseType: !177, size: 32, offset: 832)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !467, file: !446, line: 592, baseType: !489, size: 64, offset: 896)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !467, file: !446, line: 593, baseType: !503, size: 64, offset: 960)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !467, file: !446, line: 596, baseType: !177, size: 32, offset: 1024)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !467, file: !446, line: 597, baseType: !178, size: 64, offset: 1088)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !467, file: !446, line: 632, baseType: !507, size: 2880, offset: 1152)
!507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !467, file: !446, line: 599, size: 2880, elements: !508)
!508 = !{!509, !566}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !507, file: !446, line: 622, baseType: !510, size: 1728)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !446, line: 601, size: 1728, elements: !511)
!511 = !{!512, !513, !514, !518, !530, !531, !532, !539, !552, !553, !554, !555, !559, !560, !561, !562, !563, !564, !565}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !510, file: !446, line: 603, baseType: !45, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !510, file: !446, line: 604, baseType: !178, size: 64, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !510, file: !446, line: 605, baseType: !515, size: 208, offset: 128)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 208, elements: !516)
!516 = !{!517}
!517 = !DISubrange(count: 26)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !510, file: !446, line: 606, baseType: !519, size: 288, offset: 352)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !446, line: 55, size: 288, elements: !520)
!520 = !{!521, !522, !523, !524, !525, !526, !527, !528, !529}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !519, file: !446, line: 57, baseType: !177, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !519, file: !446, line: 58, baseType: !177, size: 32, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !519, file: !446, line: 59, baseType: !177, size: 32, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !519, file: !446, line: 60, baseType: !177, size: 32, offset: 96)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !519, file: !446, line: 61, baseType: !177, size: 32, offset: 128)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !519, file: !446, line: 62, baseType: !177, size: 32, offset: 160)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !519, file: !446, line: 63, baseType: !177, size: 32, offset: 192)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !519, file: !446, line: 64, baseType: !177, size: 32, offset: 224)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !519, file: !446, line: 65, baseType: !177, size: 32, offset: 256)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !510, file: !446, line: 607, baseType: !177, size: 32, offset: 640)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !510, file: !446, line: 608, baseType: !7, size: 64, offset: 704)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !510, file: !446, line: 609, baseType: !533, size: 112, offset: 768)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !446, line: 319, size: 112, elements: !534)
!534 = !{!535, !537, !538}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !533, file: !446, line: 320, baseType: !536, size: 48)
!536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 48, elements: !125)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !533, file: !446, line: 321, baseType: !536, size: 48, offset: 48)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !533, file: !446, line: 322, baseType: !35, size: 16, offset: 96)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !510, file: !446, line: 610, baseType: !540, size: 64, offset: 896)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !11, line: 171, baseType: !541)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11, line: 163, size: 64, elements: !542)
!542 = !{!543, !544}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !541, file: !11, line: 165, baseType: !177, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !541, file: !11, line: 170, baseType: !545, size: 32, offset: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !541, file: !11, line: 166, size: 32, elements: !546)
!546 = !{!547, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !545, file: !11, line: 168, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !549, line: 124, baseType: !45)
!549 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stddef.h", directory: "/root/.unikraft/apps/redis/build")
!550 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !545, file: !11, line: 169, baseType: !551, size: 32)
!551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 32, elements: !66)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !510, file: !446, line: 611, baseType: !540, size: 64, offset: 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !510, file: !446, line: 612, baseType: !540, size: 64, offset: 1024)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !510, file: !446, line: 613, baseType: !47, size: 64, offset: 1088)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !510, file: !446, line: 614, baseType: !556, size: 192, offset: 1152)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 192, elements: !557)
!557 = !{!558}
!558 = !DISubrange(count: 24)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !510, file: !446, line: 615, baseType: !177, size: 32, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !510, file: !446, line: 616, baseType: !540, size: 64, offset: 1376)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !510, file: !446, line: 617, baseType: !540, size: 64, offset: 1440)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !510, file: !446, line: 618, baseType: !540, size: 64, offset: 1504)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !510, file: !446, line: 619, baseType: !540, size: 64, offset: 1568)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !510, file: !446, line: 620, baseType: !540, size: 64, offset: 1632)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !510, file: !446, line: 621, baseType: !177, size: 32, offset: 1696)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !507, file: !446, line: 631, baseType: !567, size: 2880)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !446, line: 626, size: 2880, elements: !568)
!568 = !{!569, !573}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !567, file: !446, line: 629, baseType: !570, size: 1920)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 1920, elements: !571)
!571 = !{!572}
!572 = !DISubrange(count: 30)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !567, file: !446, line: 630, baseType: !574, size: 960, offset: 1920)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 960, elements: !571)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !467, file: !446, line: 636, baseType: !576, size: 64, offset: 4032)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !446, line: 93, size: 6336, elements: !578)
!578 = !{!579, !580, !581, !586}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !577, file: !446, line: 94, baseType: !576, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !577, file: !446, line: 95, baseType: !177, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !577, file: !446, line: 97, baseType: !582, size: 2048, offset: 128)
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !583, size: 2048, elements: !584)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!584 = !{!585}
!585 = !DISubrange(count: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !577, file: !446, line: 98, baseType: !587, size: 4160, offset: 2176)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !446, line: 74, size: 4160, elements: !588)
!588 = !{!589, !591, !592, !593}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !587, file: !446, line: 75, baseType: !590, size: 2048)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2048, elements: !584)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !587, file: !446, line: 76, baseType: !590, size: 2048, offset: 2048)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !587, file: !446, line: 78, baseType: !499, size: 32, offset: 4096)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !587, file: !446, line: 81, baseType: !499, size: 32, offset: 4128)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !467, file: !446, line: 637, baseType: !577, size: 6336, offset: 4096)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !467, file: !446, line: 641, baseType: !596, size: 64, offset: 10432)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !467, file: !446, line: 646, baseType: !599, size: 192, offset: 10496)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !446, line: 291, size: 192, elements: !600)
!600 = !{!601, !603, !604}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !599, file: !446, line: 293, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !599, file: !446, line: 294, baseType: !177, size: 32, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !599, file: !446, line: 295, baseType: !471, size: 64, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !467, file: !446, line: 648, baseType: !606, size: 4224, offset: 10688)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !445, size: 4224, elements: !125)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !447, file: !446, line: 199, baseType: !608, size: 64, offset: 512)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!15, !466, !6, !611, !177}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !447, file: !446, line: 202, baseType: !614, size: 64, offset: 576)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DISubroutineType(types: !616)
!616 = !{!617, !466, !6, !617, !177}
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !11, line: 114, baseType: !13)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !447, file: !446, line: 203, baseType: !619, size: 64, offset: 640)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{!177, !466, !6}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !447, file: !446, line: 206, baseType: !456, size: 128, offset: 704)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !447, file: !446, line: 207, baseType: !246, size: 64, offset: 832)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !447, file: !446, line: 208, baseType: !177, size: 32, offset: 896)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !447, file: !446, line: 211, baseType: !124, size: 24, offset: 928)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !447, file: !446, line: 212, baseType: !627, size: 8, offset: 952)
!627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 8, elements: !135)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !447, file: !446, line: 215, baseType: !456, size: 128, offset: 960)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !447, file: !446, line: 218, baseType: !177, size: 32, offset: 1088)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !447, file: !446, line: 219, baseType: !12, size: 64, offset: 1152)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !447, file: !446, line: 222, baseType: !466, size: 64, offset: 1216)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !447, file: !446, line: 226, baseType: !633, size: 32, offset: 1280)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !11, line: 175, baseType: !634)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_RECURSIVE_T", file: !635, line: 12, baseType: !177)
!635 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/lock.h", directory: "/root/.unikraft/apps/redis/build")
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !447, file: !446, line: 228, baseType: !540, size: 64, offset: 1312)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !447, file: !446, line: 229, baseType: !177, size: 32, offset: 1376)
!638 = !DILocalVariable(name: "sb", scope: !436, file: !3, line: 92, type: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !640, line: 27, size: 704, elements: !641)
!640 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/stat.h", directory: "/root/.unikraft/apps/redis/build")
!641 = !{!642, !645, !648, !651, !654, !657, !660, !661, !662, !667, !668, !669, !672}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !639, file: !640, line: 29, baseType: !643, size: 16)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !9, line: 177, baseType: !644)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !11, line: 54, baseType: !453)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !639, file: !640, line: 30, baseType: !646, size: 16, offset: 16)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !9, line: 155, baseType: !647)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !11, line: 73, baseType: !35)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !639, file: !640, line: 31, baseType: !649, size: 32, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !9, line: 205, baseType: !650)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !11, line: 88, baseType: !44)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !639, file: !640, line: 32, baseType: !652, size: 16, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !9, line: 210, baseType: !653)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !11, line: 210, baseType: !35)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !639, file: !640, line: 33, baseType: !655, size: 16, offset: 80)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !9, line: 181, baseType: !656)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !11, line: 58, baseType: !35)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !639, file: !640, line: 34, baseType: !658, size: 16, offset: 96)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !9, line: 185, baseType: !659)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !11, line: 61, baseType: !35)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !639, file: !640, line: 35, baseType: !643, size: 16, offset: 112)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !639, file: !640, line: 36, baseType: !8, size: 64, offset: 128)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !639, file: !640, line: 37, baseType: !663, size: 128, offset: 192)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !289, line: 52, size: 128, elements: !664)
!664 = !{!665, !666}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !663, file: !289, line: 53, baseType: !288, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !663, file: !289, line: 54, baseType: !13, size: 64, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !639, file: !640, line: 38, baseType: !663, size: 128, offset: 320)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !639, file: !640, line: 39, baseType: !663, size: 128, offset: 448)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !639, file: !640, line: 40, baseType: !670, size: 64, offset: 576)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !9, line: 118, baseType: !671)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !11, line: 32, baseType: !13)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !639, file: !640, line: 41, baseType: !673, size: 64, offset: 640)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !9, line: 113, baseType: !674)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !11, line: 28, baseType: !13)
!675 = !DILocalVariable(name: "line", scope: !436, file: !3, line: 93, type: !178)
!676 = !DILocalVariable(name: "maxline", scope: !436, file: !3, line: 94, type: !177)
!677 = !DILocalVariable(name: "j", scope: !436, file: !3, line: 94, type: !177)
!678 = !DILocalVariable(name: "argc", scope: !679, file: !3, line: 124, type: !177)
!679 = distinct !DILexicalBlock(scope: !436, file: !3, line: 123, column: 43)
!680 = !DILocalVariable(name: "argv", scope: !679, file: !3, line: 125, type: !681)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!682 = !DILocalVariable(name: "n", scope: !679, file: !3, line: 126, type: !378)
!683 = !DILocalVariable(name: "master", scope: !679, file: !3, line: 126, type: !378)
!684 = !DILocalVariable(name: "p", scope: !679, file: !3, line: 127, type: !178)
!685 = !DILocalVariable(name: "s", scope: !679, file: !3, line: 127, type: !178)
!686 = !DILocalVariable(name: "port", scope: !679, file: !3, line: 172, type: !178)
!687 = !DILocalVariable(name: "busp", scope: !679, file: !3, line: 173, type: !178)
!688 = !DILocalVariable(name: "start", scope: !689, file: !3, line: 237, type: !177)
!689 = distinct !DILexicalBlock(scope: !690, file: !3, line: 236, column: 36)
!690 = distinct !DILexicalBlock(scope: !691, file: !3, line: 236, column: 9)
!691 = distinct !DILexicalBlock(scope: !679, file: !3, line: 236, column: 9)
!692 = !DILocalVariable(name: "stop", scope: !689, file: !3, line: 237, type: !177)
!693 = !DILocalVariable(name: "slot", scope: !694, file: !3, line: 241, type: !177)
!694 = distinct !DILexicalBlock(scope: !695, file: !3, line: 239, column: 36)
!695 = distinct !DILexicalBlock(scope: !689, file: !3, line: 239, column: 17)
!696 = !DILocalVariable(name: "direction", scope: !694, file: !3, line: 242, type: !48)
!697 = !DILocalVariable(name: "cn", scope: !694, file: !3, line: 243, type: !378)
!698 = !DILocation(line: 90, column: 29, scope: !436)
!699 = !DILocation(line: 91, column: 16, scope: !436)
!700 = !DILocation(line: 91, column: 11, scope: !436)
!701 = !DILocation(line: 92, column: 5, scope: !436)
!702 = !DILocation(line: 96, column: 12, scope: !703)
!703 = distinct !DILexicalBlock(scope: !436, file: !3, line: 96, column: 9)
!704 = !DILocation(line: 96, column: 9, scope: !436)
!705 = !DILocation(line: 97, column: 13, scope: !706)
!706 = distinct !DILexicalBlock(scope: !707, file: !3, line: 97, column: 13)
!707 = distinct !DILexicalBlock(scope: !703, file: !3, line: 96, column: 21)
!708 = !{!709, !709, i64 0}
!709 = !{!"int", !710, i64 0}
!710 = !{!"omnipotent char", !711, i64 0}
!711 = !{!"Simple C/C++ TBAA"}
!712 = !DILocation(line: 97, column: 19, scope: !706)
!713 = !DILocation(line: 97, column: 13, scope: !707)
!714 = !DILocation(line: 102, column: 36, scope: !715)
!715 = distinct !DILexicalBlock(scope: !706, file: !3, line: 99, column: 16)
!716 = !DILocation(line: 102, column: 27, scope: !715)
!717 = !DILocation(line: 100, column: 13, scope: !715)
!718 = !DILocation(line: 103, column: 13, scope: !715)
!719 = !DILocation(line: 109, column: 15, scope: !720)
!720 = distinct !DILexicalBlock(scope: !436, file: !3, line: 109, column: 9)
!721 = !DILocation(line: 92, column: 17, scope: !436)
!722 = !DILocation(line: 109, column: 9, scope: !720)
!723 = !DILocation(line: 109, column: 31, scope: !720)
!724 = !DILocation(line: 109, column: 37, scope: !720)
!725 = !DILocation(line: 109, column: 43, scope: !720)
!726 = !{!727, !729, i64 16}
!727 = !{!"stat", !728, i64 0, !728, i64 2, !709, i64 4, !728, i64 8, !728, i64 10, !728, i64 12, !728, i64 14, !729, i64 16, !730, i64 24, !730, i64 40, !730, i64 56, !729, i64 72, !729, i64 80}
!728 = !{!"short", !710, i64 0}
!729 = !{!"long", !710, i64 0}
!730 = !{!"timespec", !729, i64 0, !729, i64 8}
!731 = !DILocation(line: 109, column: 51, scope: !720)
!732 = !DILocation(line: 109, column: 9, scope: !436)
!733 = !DILocation(line: 110, column: 9, scope: !734)
!734 = distinct !DILexicalBlock(scope: !720, file: !3, line: 109, column: 57)
!735 = !DILocation(line: 111, column: 9, scope: !734)
!736 = !DILocation(line: 94, column: 9, scope: !436)
!737 = !DILocation(line: 122, column: 12, scope: !436)
!738 = !DILocation(line: 93, column: 11, scope: !436)
!739 = !DILocation(line: 123, column: 11, scope: !436)
!740 = !DILocation(line: 123, column: 34, scope: !436)
!741 = !DILocation(line: 123, column: 5, scope: !436)
!742 = !DILocation(line: 124, column: 9, scope: !679)
!743 = !DILocation(line: 132, column: 13, scope: !744)
!744 = distinct !DILexicalBlock(scope: !679, file: !3, line: 132, column: 13)
!745 = !{!710, !710, i64 0}
!746 = !DILocation(line: 132, column: 29, scope: !744)
!747 = distinct !{!747, !741, !748}
!748 = !DILocation(line: 276, column: 5, scope: !436)
!749 = !DILocation(line: 124, column: 13, scope: !679)
!750 = !DILocation(line: 135, column: 16, scope: !679)
!751 = !DILocation(line: 125, column: 14, scope: !679)
!752 = !DILocation(line: 136, column: 18, scope: !753)
!753 = distinct !DILexicalBlock(scope: !679, file: !3, line: 136, column: 13)
!754 = !DILocation(line: 136, column: 13, scope: !679)
!755 = !DILocation(line: 140, column: 24, scope: !756)
!756 = distinct !DILexicalBlock(scope: !679, file: !3, line: 140, column: 13)
!757 = !{!758, !758, i64 0}
!758 = !{!"any pointer", !710, i64 0}
!759 = !DILocation(line: 140, column: 13, scope: !756)
!760 = !DILocation(line: 140, column: 40, scope: !756)
!761 = !DILocation(line: 0, scope: !762)
!762 = distinct !DILexicalBlock(scope: !679, file: !3, line: 160, column: 13)
!763 = !DILocation(line: 140, column: 13, scope: !679)
!764 = !DILocation(line: 141, column: 24, scope: !765)
!765 = distinct !DILexicalBlock(scope: !766, file: !3, line: 141, column: 17)
!766 = distinct !DILexicalBlock(scope: !756, file: !3, line: 140, column: 46)
!767 = !DILocation(line: 141, column: 17, scope: !766)
!768 = !DILocation(line: 94, column: 18, scope: !436)
!769 = !DILocation(line: 142, column: 27, scope: !770)
!770 = distinct !DILexicalBlock(scope: !771, file: !3, line: 142, column: 13)
!771 = distinct !DILexicalBlock(scope: !766, file: !3, line: 142, column: 13)
!772 = !DILocation(line: 142, column: 13, scope: !771)
!773 = !DILocation(line: 143, column: 32, scope: !774)
!774 = distinct !DILexicalBlock(scope: !775, file: !3, line: 143, column: 21)
!775 = distinct !DILexicalBlock(scope: !770, file: !3, line: 142, column: 43)
!776 = !DILocation(line: 143, column: 21, scope: !774)
!777 = !DILocation(line: 143, column: 56, scope: !774)
!778 = !DILocation(line: 143, column: 21, scope: !775)
!779 = !DILocation(line: 145, column: 44, scope: !780)
!780 = distinct !DILexicalBlock(scope: !774, file: !3, line: 143, column: 62)
!781 = !DILocation(line: 145, column: 38, scope: !780)
!782 = !DILocation(line: 145, column: 29, scope: !780)
!783 = !DILocation(line: 144, column: 28, scope: !780)
!784 = !{!785, !758, i64 2944}
!785 = !{!"redisServer", !709, i64 0, !758, i64 8, !758, i64 16, !758, i64 24, !709, i64 32, !709, i64 36, !709, i64 40, !758, i64 48, !758, i64 56, !758, i64 64, !758, i64 72, !709, i64 80, !709, i64 84, !709, i64 88, !709, i64 92, !758, i64 96, !758, i64 104, !709, i64 112, !709, i64 116, !710, i64 120, !709, i64 164, !729, i64 168, !709, i64 176, !758, i64 184, !758, i64 192, !758, i64 200, !710, i64 208, !709, i64 216, !709, i64 220, !710, i64 224, !709, i64 352, !758, i64 360, !709, i64 368, !710, i64 372, !709, i64 436, !709, i64 440, !710, i64 444, !709, i64 508, !758, i64 512, !758, i64 520, !758, i64 528, !758, i64 536, !758, i64 544, !758, i64 552, !758, i64 560, !709, i64 568, !786, i64 576, !710, i64 584, !758, i64 840, !729, i64 848, !709, i64 856, !709, i64 860, !729, i64 864, !729, i64 872, !729, i64 880, !729, i64 888, !758, i64 896, !758, i64 904, !758, i64 912, !758, i64 920, !758, i64 928, !758, i64 936, !758, i64 944, !758, i64 952, !758, i64 960, !758, i64 968, !758, i64 976, !758, i64 984, !758, i64 992, !729, i64 1000, !786, i64 1008, !786, i64 1016, !786, i64 1024, !787, i64 1032, !786, i64 1040, !786, i64 1048, !786, i64 1056, !786, i64 1064, !786, i64 1072, !786, i64 1080, !786, i64 1088, !786, i64 1096, !786, i64 1104, !729, i64 1112, !786, i64 1120, !787, i64 1128, !786, i64 1136, !786, i64 1144, !786, i64 1152, !786, i64 1160, !758, i64 1168, !786, i64 1176, !786, i64 1184, !729, i64 1192, !788, i64 1200, !786, i64 1240, !786, i64 1248, !729, i64 1256, !729, i64 1264, !710, i64 1272, !709, i64 1728, !709, i64 1732, !709, i64 1736, !709, i64 1740, !709, i64 1744, !729, i64 1752, !709, i64 1760, !709, i64 1764, !709, i64 1768, !709, i64 1772, !729, i64 1776, !729, i64 1784, !709, i64 1792, !709, i64 1796, !709, i64 1800, !709, i64 1804, !710, i64 1808, !709, i64 1880, !709, i64 1884, !758, i64 1888, !709, i64 1896, !709, i64 1900, !729, i64 1904, !729, i64 1912, !729, i64 1920, !729, i64 1928, !709, i64 1936, !709, i64 1940, !758, i64 1944, !758, i64 1952, !709, i64 1960, !709, i64 1964, !729, i64 1968, !729, i64 1976, !729, i64 1984, !729, i64 1992, !709, i64 2000, !729, i64 2008, !709, i64 2016, !709, i64 2020, !709, i64 2024, !709, i64 2028, !709, i64 2032, !709, i64 2036, !709, i64 2040, !709, i64 2044, !709, i64 2048, !709, i64 2052, !709, i64 2056, !709, i64 2060, !709, i64 2064, !758, i64 2072, !786, i64 2080, !786, i64 2088, !709, i64 2096, !758, i64 2104, !709, i64 2112, !758, i64 2120, !709, i64 2128, !709, i64 2132, !729, i64 2136, !729, i64 2144, !729, i64 2152, !729, i64 2160, !709, i64 2168, !709, i64 2172, !709, i64 2176, !709, i64 2180, !709, i64 2184, !709, i64 2188, !710, i64 2192, !789, i64 2200, !790, i64 2224, !758, i64 2240, !709, i64 2248, !758, i64 2256, !709, i64 2264, !710, i64 2268, !710, i64 2309, !786, i64 2352, !786, i64 2360, !709, i64 2368, !709, i64 2372, !758, i64 2376, !786, i64 2384, !786, i64 2392, !786, i64 2400, !786, i64 2408, !729, i64 2416, !729, i64 2424, !709, i64 2432, !709, i64 2436, !709, i64 2440, !709, i64 2444, !709, i64 2448, !758, i64 2456, !758, i64 2464, !709, i64 2472, !709, i64 2476, !758, i64 2480, !758, i64 2488, !709, i64 2496, !709, i64 2500, !729, i64 2504, !729, i64 2512, !729, i64 2520, !709, i64 2528, !709, i64 2532, !758, i64 2536, !729, i64 2544, !709, i64 2552, !709, i64 2556, !709, i64 2560, !729, i64 2568, !709, i64 2576, !709, i64 2580, !709, i64 2584, !758, i64 2592, !710, i64 2600, !786, i64 2648, !709, i64 2656, !758, i64 2664, !758, i64 2672, !709, i64 2680, !758, i64 2688, !709, i64 2696, !709, i64 2700, !786, i64 2704, !709, i64 2712, !709, i64 2716, !709, i64 2720, !709, i64 2724, !786, i64 2728, !709, i64 2736, !710, i64 2740, !758, i64 2768, !758, i64 2776, !709, i64 2784, !709, i64 2788, !709, i64 2792, !709, i64 2796, !729, i64 2800, !729, i64 2808, !729, i64 2816, !729, i64 2824, !729, i64 2832, !729, i64 2840, !729, i64 2848, !729, i64 2856, !709, i64 2864, !709, i64 2868, !729, i64 2872, !729, i64 2880, !709, i64 2888, !786, i64 2896, !758, i64 2904, !758, i64 2912, !709, i64 2920, !709, i64 2924, !786, i64 2928, !758, i64 2936, !758, i64 2944, !709, i64 2952, !709, i64 2956, !709, i64 2960, !709, i64 2964, !758, i64 2968, !709, i64 2976, !709, i64 2980, !709, i64 2984, !758, i64 2992, !758, i64 3000, !758, i64 3008, !758, i64 3016, !786, i64 3024, !786, i64 3032, !786, i64 3040, !709, i64 3048, !709, i64 3052, !709, i64 3056, !709, i64 3060, !709, i64 3064, !709, i64 3068, !709, i64 3072, !709, i64 3076, !709, i64 3080, !709, i64 3084, !709, i64 3088, !786, i64 3096, !758, i64 3104, !758, i64 3112, !758, i64 3120, !709, i64 3128, !709, i64 3132, !709, i64 3136, !729, i64 3144, !758, i64 3152, !758, i64 3160, !758, i64 3168}
!786 = !{!"long long", !710, i64 0}
!787 = !{!"double", !710, i64 0}
!788 = !{!"malloc_stats", !729, i64 0, !729, i64 8, !729, i64 16, !729, i64 24, !729, i64 32}
!789 = !{!"", !709, i64 0, !729, i64 8, !786, i64 16}
!790 = !{!"redisOpArray", !758, i64 0, !709, i64 8}
!791 = !DILocation(line: 144, column: 37, scope: !780)
!792 = !DILocation(line: 144, column: 50, scope: !780)
!793 = !{!794, !729, i64 8}
!794 = !{!"clusterState", !758, i64 0, !729, i64 8, !709, i64 16, !709, i64 20, !758, i64 24, !758, i64 32, !710, i64 40, !710, i64 131112, !710, i64 262184, !710, i64 393256, !758, i64 524328, !786, i64 524336, !709, i64 524344, !709, i64 524348, !709, i64 524352, !729, i64 524360, !709, i64 524368, !786, i64 524376, !758, i64 524384, !786, i64 524392, !709, i64 524400, !729, i64 524408, !709, i64 524416, !710, i64 524424, !710, i64 524504, !786, i64 524584}
!795 = !DILocation(line: 146, column: 17, scope: !780)
!796 = !DILocation(line: 146, column: 28, scope: !797)
!797 = distinct !DILexicalBlock(scope: !774, file: !3, line: 146, column: 28)
!798 = !DILocation(line: 146, column: 64, scope: !797)
!799 = !DILocation(line: 146, column: 28, scope: !774)
!800 = !DILocation(line: 148, column: 44, scope: !801)
!801 = distinct !DILexicalBlock(scope: !797, file: !3, line: 146, column: 70)
!802 = !DILocation(line: 148, column: 38, scope: !801)
!803 = !DILocation(line: 148, column: 29, scope: !801)
!804 = !DILocation(line: 147, column: 28, scope: !801)
!805 = !DILocation(line: 147, column: 37, scope: !801)
!806 = !DILocation(line: 147, column: 51, scope: !801)
!807 = !{!794, !729, i64 524408}
!808 = !DILocation(line: 149, column: 17, scope: !801)
!809 = !DILocation(line: 150, column: 21, scope: !810)
!810 = distinct !DILexicalBlock(scope: !797, file: !3, line: 149, column: 24)
!811 = !DILocation(line: 142, column: 37, scope: !770)
!812 = !DILocation(line: 142, column: 29, scope: !770)
!813 = distinct !{!813, !772, !814}
!814 = !DILocation(line: 154, column: 13, scope: !771)
!815 = !DILocation(line: 155, column: 13, scope: !766)
!816 = !DILocation(line: 156, column: 13, scope: !766)
!817 = !DILocation(line: 160, column: 18, scope: !762)
!818 = !DILocation(line: 160, column: 13, scope: !679)
!819 = !DILocalVariable(name: "name", arg: 1, scope: !820, file: !3, line: 936, type: !611)
!820 = distinct !DISubprogram(name: "clusterLookupNode", scope: !3, file: !3, line: 936, type: !821, isLocal: false, isDefinition: true, scopeLine: 936, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !823)
!821 = !DISubroutineType(types: !822)
!822 = !{!378, !611}
!823 = !{!819, !824, !825}
!824 = !DILocalVariable(name: "s", scope: !820, file: !3, line: 937, type: !189)
!825 = !DILocalVariable(name: "de", scope: !820, file: !3, line: 938, type: !340)
!826 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !827)
!827 = distinct !DILocation(line: 163, column: 13, scope: !679)
!828 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !827)
!829 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !827)
!830 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !827)
!831 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !827)
!832 = !{!794, !758, i64 24}
!833 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !827)
!834 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !827)
!835 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !827)
!836 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !827)
!837 = distinct !DILexicalBlock(scope: !820, file: !3, line: 942, column: 9)
!838 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !827)
!839 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !827)
!840 = !DILocation(line: 126, column: 22, scope: !679)
!841 = !DILocation(line: 164, column: 14, scope: !842)
!842 = distinct !DILexicalBlock(scope: !679, file: !3, line: 164, column: 13)
!843 = !DILocation(line: 164, column: 13, scope: !679)
!844 = !DILocation(line: 165, column: 35, scope: !845)
!845 = distinct !DILexicalBlock(scope: !842, file: !3, line: 164, column: 17)
!846 = !DILocation(line: 165, column: 17, scope: !845)
!847 = !DILocalVariable(name: "node", arg: 1, scope: !848, file: !3, line: 887, type: !378)
!848 = distinct !DISubprogram(name: "clusterAddNode", scope: !3, file: !3, line: 887, type: !849, isLocal: false, isDefinition: true, scopeLine: 887, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !851)
!849 = !DISubroutineType(types: !850)
!850 = !{!177, !378}
!851 = !{!847, !852}
!852 = !DILocalVariable(name: "retval", scope: !848, file: !3, line: 888, type: !177)
!853 = !DILocation(line: 887, column: 33, scope: !848, inlinedAt: !854)
!854 = distinct !DILocation(line: 166, column: 13, scope: !845)
!855 = !DILocation(line: 890, column: 29, scope: !848, inlinedAt: !854)
!856 = !DILocation(line: 890, column: 38, scope: !848, inlinedAt: !854)
!857 = !DILocation(line: 891, column: 23, scope: !848, inlinedAt: !854)
!858 = !DILocation(line: 891, column: 13, scope: !848, inlinedAt: !854)
!859 = !DILocation(line: 891, column: 52, scope: !848, inlinedAt: !854)
!860 = !DILocation(line: 890, column: 14, scope: !848, inlinedAt: !854)
!861 = !DILocation(line: 888, column: 9, scope: !848, inlinedAt: !854)
!862 = !DILocation(line: 167, column: 9, scope: !845)
!863 = !DILocation(line: 0, scope: !845)
!864 = !DILocation(line: 169, column: 26, scope: !865)
!865 = distinct !DILexicalBlock(scope: !679, file: !3, line: 169, column: 13)
!866 = !DILocation(line: 169, column: 18, scope: !865)
!867 = !DILocation(line: 127, column: 15, scope: !679)
!868 = !DILocation(line: 169, column: 40, scope: !865)
!869 = !DILocation(line: 169, column: 13, scope: !679)
!870 = !DILocation(line: 170, column: 12, scope: !679)
!871 = !DILocation(line: 171, column: 16, scope: !679)
!872 = !DILocation(line: 171, column: 22, scope: !679)
!873 = !DILocation(line: 171, column: 30, scope: !679)
!874 = !DILocation(line: 171, column: 45, scope: !679)
!875 = !DILocation(line: 171, column: 9, scope: !679)
!876 = !DILocation(line: 172, column: 23, scope: !679)
!877 = !DILocation(line: 172, column: 15, scope: !679)
!878 = !DILocation(line: 173, column: 22, scope: !679)
!879 = !DILocation(line: 173, column: 15, scope: !679)
!880 = !DILocation(line: 174, column: 13, scope: !881)
!881 = distinct !DILexicalBlock(scope: !679, file: !3, line: 174, column: 13)
!882 = !DILocation(line: 174, column: 13, scope: !679)
!883 = !DILocation(line: 175, column: 19, scope: !884)
!884 = distinct !DILexicalBlock(scope: !881, file: !3, line: 174, column: 19)
!885 = !DILocation(line: 176, column: 17, scope: !884)
!886 = !DILocation(line: 177, column: 9, scope: !884)
!887 = !DILocation(line: 0, scope: !679)
!888 = !DILocation(line: 178, column: 19, scope: !679)
!889 = !DILocation(line: 178, column: 12, scope: !679)
!890 = !DILocation(line: 178, column: 17, scope: !679)
!891 = !{!892, !709, i64 2240}
!892 = !{!"clusterNode", !786, i64 0, !710, i64 8, !709, i64 48, !729, i64 56, !710, i64 64, !709, i64 2112, !709, i64 2116, !758, i64 2120, !758, i64 2128, !786, i64 2136, !786, i64 2144, !786, i64 2152, !786, i64 2160, !786, i64 2168, !786, i64 2176, !786, i64 2184, !710, i64 2192, !709, i64 2240, !709, i64 2244, !758, i64 2248, !758, i64 2256}
!893 = !DILocation(line: 182, column: 20, scope: !679)
!894 = !DILocation(line: 182, column: 27, scope: !679)
!895 = !DILocation(line: 182, column: 48, scope: !679)
!896 = !DILocation(line: 182, column: 12, scope: !679)
!897 = !DILocation(line: 182, column: 18, scope: !679)
!898 = !{!892, !709, i64 2244}
!899 = !DILocation(line: 185, column: 17, scope: !679)
!900 = !DILocation(line: 127, column: 19, scope: !679)
!901 = !DILocation(line: 186, column: 9, scope: !679)
!902 = !DILocation(line: 187, column: 17, scope: !903)
!903 = distinct !DILexicalBlock(scope: !679, file: !3, line: 186, column: 18)
!904 = !DILocation(line: 188, column: 17, scope: !905)
!905 = distinct !DILexicalBlock(scope: !903, file: !3, line: 188, column: 17)
!906 = !DILocation(line: 188, column: 17, scope: !903)
!907 = !DILocation(line: 188, column: 23, scope: !905)
!908 = !DILocation(line: 188, column: 20, scope: !905)
!909 = !DILocation(line: 189, column: 18, scope: !910)
!910 = distinct !DILexicalBlock(scope: !903, file: !3, line: 189, column: 17)
!911 = !DILocation(line: 189, column: 17, scope: !903)
!912 = !DILocation(line: 190, column: 17, scope: !913)
!913 = distinct !DILexicalBlock(scope: !910, file: !3, line: 189, column: 42)
!914 = !{!794, !758, i64 0}
!915 = !DILocation(line: 191, column: 49, scope: !913)
!916 = !DILocation(line: 191, column: 24, scope: !913)
!917 = !DILocation(line: 192, column: 26, scope: !913)
!918 = !{!892, !709, i64 48}
!919 = !DILocation(line: 193, column: 13, scope: !913)
!920 = !DILocation(line: 193, column: 25, scope: !921)
!921 = distinct !DILexicalBlock(scope: !910, file: !3, line: 193, column: 24)
!922 = !DILocation(line: 193, column: 24, scope: !910)
!923 = !DILocation(line: 194, column: 26, scope: !924)
!924 = distinct !DILexicalBlock(scope: !921, file: !3, line: 193, column: 49)
!925 = !DILocation(line: 195, column: 13, scope: !924)
!926 = !DILocation(line: 195, column: 25, scope: !927)
!927 = distinct !DILexicalBlock(scope: !921, file: !3, line: 195, column: 24)
!928 = !DILocation(line: 195, column: 24, scope: !921)
!929 = !DILocation(line: 196, column: 26, scope: !930)
!930 = distinct !DILexicalBlock(scope: !927, file: !3, line: 195, column: 48)
!931 = !DILocation(line: 197, column: 13, scope: !930)
!932 = !DILocation(line: 197, column: 25, scope: !933)
!933 = distinct !DILexicalBlock(scope: !927, file: !3, line: 197, column: 24)
!934 = !DILocation(line: 197, column: 24, scope: !927)
!935 = !DILocation(line: 198, column: 26, scope: !936)
!936 = distinct !DILexicalBlock(scope: !933, file: !3, line: 197, column: 48)
!937 = !DILocation(line: 199, column: 13, scope: !936)
!938 = !DILocation(line: 199, column: 25, scope: !939)
!939 = distinct !DILexicalBlock(scope: !933, file: !3, line: 199, column: 24)
!940 = !DILocation(line: 199, column: 24, scope: !933)
!941 = !DILocation(line: 200, column: 26, scope: !942)
!942 = distinct !DILexicalBlock(scope: !939, file: !3, line: 199, column: 47)
!943 = !DILocation(line: 201, column: 32, scope: !942)
!944 = !DILocation(line: 201, column: 30, scope: !942)
!945 = !{!892, !786, i64 2152}
!946 = !DILocation(line: 202, column: 13, scope: !942)
!947 = !DILocation(line: 202, column: 25, scope: !948)
!948 = distinct !DILexicalBlock(scope: !939, file: !3, line: 202, column: 24)
!949 = !DILocation(line: 202, column: 24, scope: !939)
!950 = !DILocation(line: 203, column: 26, scope: !951)
!951 = distinct !DILexicalBlock(scope: !948, file: !3, line: 202, column: 52)
!952 = !DILocation(line: 204, column: 13, scope: !951)
!953 = !DILocation(line: 204, column: 25, scope: !954)
!954 = distinct !DILexicalBlock(scope: !948, file: !3, line: 204, column: 24)
!955 = !DILocation(line: 204, column: 24, scope: !948)
!956 = !DILocation(line: 205, column: 26, scope: !957)
!957 = distinct !DILexicalBlock(scope: !954, file: !3, line: 204, column: 49)
!958 = !DILocation(line: 206, column: 13, scope: !957)
!959 = !DILocation(line: 206, column: 25, scope: !960)
!960 = distinct !DILexicalBlock(scope: !954, file: !3, line: 206, column: 24)
!961 = !DILocation(line: 206, column: 24, scope: !954)
!962 = !DILocation(line: 207, column: 26, scope: !963)
!963 = distinct !DILexicalBlock(scope: !960, file: !3, line: 206, column: 53)
!964 = !DILocation(line: 208, column: 13, scope: !963)
!965 = !DILocation(line: 208, column: 25, scope: !966)
!966 = distinct !DILexicalBlock(scope: !960, file: !3, line: 208, column: 24)
!967 = !DILocation(line: 208, column: 24, scope: !960)
!968 = !DILocation(line: 211, column: 17, scope: !969)
!969 = distinct !DILexicalBlock(scope: !966, file: !3, line: 210, column: 20)
!970 = !DILocation(line: 213, column: 25, scope: !971)
!971 = distinct !DILexicalBlock(scope: !903, file: !3, line: 213, column: 17)
!972 = !DILocation(line: 213, column: 17, scope: !903)
!973 = distinct !{!973, !901, !974}
!974 = !DILocation(line: 214, column: 9, scope: !679)
!975 = !DILocation(line: 218, column: 13, scope: !976)
!976 = distinct !DILexicalBlock(scope: !679, file: !3, line: 218, column: 13)
!977 = !DILocation(line: 218, column: 24, scope: !976)
!978 = !DILocation(line: 218, column: 13, scope: !679)
!979 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !980)
!980 = distinct !DILocation(line: 219, column: 22, scope: !981)
!981 = distinct !DILexicalBlock(scope: !976, file: !3, line: 218, column: 32)
!982 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !980)
!983 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !980)
!984 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !980)
!985 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !980)
!986 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !980)
!987 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !980)
!988 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !980)
!989 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !980)
!990 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !980)
!991 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !980)
!992 = !DILocation(line: 126, column: 26, scope: !679)
!993 = !DILocation(line: 220, column: 18, scope: !994)
!994 = distinct !DILexicalBlock(scope: !981, file: !3, line: 220, column: 17)
!995 = !DILocation(line: 220, column: 17, scope: !981)
!996 = !DILocation(line: 221, column: 44, scope: !997)
!997 = distinct !DILexicalBlock(scope: !994, file: !3, line: 220, column: 26)
!998 = !DILocation(line: 221, column: 26, scope: !997)
!999 = !DILocation(line: 887, column: 33, scope: !848, inlinedAt: !1000)
!1000 = distinct !DILocation(line: 222, column: 17, scope: !997)
!1001 = !DILocation(line: 890, column: 29, scope: !848, inlinedAt: !1000)
!1002 = !DILocation(line: 890, column: 38, scope: !848, inlinedAt: !1000)
!1003 = !DILocation(line: 891, column: 23, scope: !848, inlinedAt: !1000)
!1004 = !DILocation(line: 891, column: 13, scope: !848, inlinedAt: !1000)
!1005 = !DILocation(line: 891, column: 52, scope: !848, inlinedAt: !1000)
!1006 = !DILocation(line: 890, column: 14, scope: !848, inlinedAt: !1000)
!1007 = !DILocation(line: 888, column: 9, scope: !848, inlinedAt: !1000)
!1008 = !DILocation(line: 223, column: 13, scope: !997)
!1009 = !DILocation(line: 0, scope: !997)
!1010 = !DILocation(line: 224, column: 16, scope: !981)
!1011 = !DILocation(line: 224, column: 24, scope: !981)
!1012 = !{!892, !758, i64 2128}
!1013 = !DILocalVariable(name: "master", arg: 1, scope: !1014, file: !3, line: 839, type: !378)
!1014 = distinct !DISubprogram(name: "clusterNodeAddSlave", scope: !3, file: !3, line: 839, type: !1015, isLocal: false, isDefinition: true, scopeLine: 839, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1017)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!177, !378, !378}
!1017 = !{!1013, !1018, !1019}
!1018 = !DILocalVariable(name: "slave", arg: 2, scope: !1014, file: !3, line: 839, type: !378)
!1019 = !DILocalVariable(name: "j", scope: !1014, file: !3, line: 840, type: !177)
!1020 = !DILocation(line: 839, column: 38, scope: !1014, inlinedAt: !1021)
!1021 = distinct !DILocation(line: 225, column: 13, scope: !981)
!1022 = !DILocation(line: 839, column: 59, scope: !1014, inlinedAt: !1021)
!1023 = !DILocation(line: 840, column: 9, scope: !1014, inlinedAt: !1021)
!1024 = !DILocation(line: 843, column: 29, scope: !1025, inlinedAt: !1021)
!1025 = distinct !DILexicalBlock(scope: !1026, file: !3, line: 843, column: 5)
!1026 = distinct !DILexicalBlock(scope: !1014, file: !3, line: 843, column: 5)
!1027 = !{!892, !709, i64 2116}
!1028 = !DILocation(line: 843, column: 19, scope: !1025, inlinedAt: !1021)
!1029 = !DILocation(line: 0, scope: !1014, inlinedAt: !1021)
!1030 = !{!892, !758, i64 2120}
!1031 = !DILocation(line: 843, column: 5, scope: !1026, inlinedAt: !1021)
!1032 = !DILocation(line: 844, column: 13, scope: !1033, inlinedAt: !1021)
!1033 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 844, column: 13)
!1034 = distinct !{!1034, !1035, !1036}
!1035 = !DILocation(line: 843, column: 5, scope: !1026)
!1036 = !DILocation(line: 844, column: 48, scope: !1026)
!1037 = !DILocation(line: 844, column: 31, scope: !1033, inlinedAt: !1021)
!1038 = !DILocation(line: 843, column: 41, scope: !1025, inlinedAt: !1021)
!1039 = !DILocation(line: 844, column: 13, scope: !1025, inlinedAt: !1021)
!1040 = !DILocation(line: 845, column: 31, scope: !1014, inlinedAt: !1021)
!1041 = !DILocation(line: 846, column: 48, scope: !1014, inlinedAt: !1021)
!1042 = !DILocation(line: 846, column: 30, scope: !1014, inlinedAt: !1021)
!1043 = !DILocation(line: 846, column: 29, scope: !1014, inlinedAt: !1021)
!1044 = !DILocation(line: 845, column: 22, scope: !1014, inlinedAt: !1021)
!1045 = !DILocation(line: 845, column: 20, scope: !1014, inlinedAt: !1021)
!1046 = !DILocation(line: 847, column: 28, scope: !1014, inlinedAt: !1021)
!1047 = !DILocation(line: 847, column: 5, scope: !1014, inlinedAt: !1021)
!1048 = !DILocation(line: 847, column: 39, scope: !1014, inlinedAt: !1021)
!1049 = !DILocation(line: 848, column: 22, scope: !1014, inlinedAt: !1021)
!1050 = !DILocation(line: 849, column: 13, scope: !1014, inlinedAt: !1021)
!1051 = !DILocation(line: 849, column: 19, scope: !1014, inlinedAt: !1021)
!1052 = !DILocation(line: 850, column: 5, scope: !1014, inlinedAt: !1021)
!1053 = !DILocation(line: 229, column: 18, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !679, file: !3, line: 229, column: 13)
!1055 = !DILocation(line: 229, column: 13, scope: !1054)
!1056 = !DILocation(line: 229, column: 13, scope: !679)
!1057 = !DILocation(line: 229, column: 43, scope: !1054)
!1058 = !DILocation(line: 229, column: 31, scope: !1054)
!1059 = !DILocation(line: 229, column: 41, scope: !1054)
!1060 = !{!892, !786, i64 2136}
!1061 = !DILocation(line: 229, column: 28, scope: !1054)
!1062 = !DILocation(line: 230, column: 18, scope: !1063)
!1063 = distinct !DILexicalBlock(scope: !679, file: !3, line: 230, column: 13)
!1064 = !DILocation(line: 230, column: 13, scope: !1063)
!1065 = !DILocation(line: 230, column: 13, scope: !679)
!1066 = !DILocation(line: 230, column: 47, scope: !1063)
!1067 = !DILocation(line: 230, column: 31, scope: !1063)
!1068 = !DILocation(line: 230, column: 45, scope: !1063)
!1069 = !{!892, !786, i64 2144}
!1070 = !DILocation(line: 230, column: 28, scope: !1063)
!1071 = !DILocation(line: 233, column: 35, scope: !679)
!1072 = !DILocation(line: 233, column: 26, scope: !679)
!1073 = !DILocation(line: 233, column: 12, scope: !679)
!1074 = !DILocation(line: 233, column: 24, scope: !679)
!1075 = !{!892, !729, i64 56}
!1076 = !DILocation(line: 236, column: 25, scope: !690)
!1077 = !DILocation(line: 236, column: 23, scope: !690)
!1078 = !DILocation(line: 236, column: 9, scope: !691)
!1079 = !DILocation(line: 239, column: 17, scope: !695)
!1080 = !DILocation(line: 239, column: 28, scope: !695)
!1081 = !DILocation(line: 0, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !695, file: !3, line: 263, column: 24)
!1083 = !DILocation(line: 239, column: 17, scope: !689)
!1084 = !DILocation(line: 246, column: 17, scope: !694)
!1085 = !DILocation(line: 247, column: 20, scope: !694)
!1086 = !DILocation(line: 248, column: 29, scope: !694)
!1087 = !DILocation(line: 242, column: 22, scope: !694)
!1088 = !DILocation(line: 249, column: 29, scope: !694)
!1089 = !DILocation(line: 249, column: 36, scope: !694)
!1090 = !DILocation(line: 249, column: 24, scope: !694)
!1091 = !DILocation(line: 241, column: 21, scope: !694)
!1092 = !DILocation(line: 250, column: 30, scope: !1093)
!1093 = distinct !DILexicalBlock(scope: !694, file: !3, line: 250, column: 21)
!1094 = !DILocation(line: 251, column: 19, scope: !694)
!1095 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !1096)
!1096 = distinct !DILocation(line: 252, column: 22, scope: !694)
!1097 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !1096)
!1098 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !1096)
!1099 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !1096)
!1100 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !1096)
!1101 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !1096)
!1102 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !1096)
!1103 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !1096)
!1104 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !1096)
!1105 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !1096)
!1106 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !1096)
!1107 = !DILocation(line: 243, column: 30, scope: !694)
!1108 = !DILocation(line: 253, column: 22, scope: !1109)
!1109 = distinct !DILexicalBlock(scope: !694, file: !3, line: 253, column: 21)
!1110 = !DILocation(line: 253, column: 21, scope: !694)
!1111 = !DILocalVariable(name: "nodename", arg: 1, scope: !1112, file: !3, line: 695, type: !178)
!1112 = distinct !DISubprogram(name: "createClusterNode", scope: !3, file: !3, line: 695, type: !1113, isLocal: false, isDefinition: true, scopeLine: 695, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1115)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!378, !178, !177}
!1115 = !{!1111, !1116, !1117}
!1116 = !DILocalVariable(name: "flags", arg: 2, scope: !1112, file: !3, line: 695, type: !177)
!1117 = !DILocalVariable(name: "node", scope: !1112, file: !3, line: 696, type: !378)
!1118 = !DILocation(line: 695, column: 38, scope: !1112, inlinedAt: !1119)
!1119 = distinct !DILocation(line: 254, column: 26, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1109, file: !3, line: 253, column: 26)
!1121 = !DILocation(line: 695, column: 52, scope: !1112, inlinedAt: !1119)
!1122 = !DILocation(line: 696, column: 25, scope: !1112, inlinedAt: !1119)
!1123 = !DILocation(line: 696, column: 18, scope: !1112, inlinedAt: !1119)
!1124 = !DILocation(line: 0, scope: !1125, inlinedAt: !1119)
!1125 = distinct !DILexicalBlock(scope: !1112, file: !3, line: 698, column: 9)
!1126 = !DILocation(line: 699, column: 9, scope: !1125, inlinedAt: !1119)
!1127 = !DILocation(line: 702, column: 19, scope: !1112, inlinedAt: !1119)
!1128 = !DILocation(line: 702, column: 11, scope: !1112, inlinedAt: !1119)
!1129 = !DILocation(line: 702, column: 17, scope: !1112, inlinedAt: !1119)
!1130 = !{!892, !786, i64 0}
!1131 = !DILocation(line: 703, column: 11, scope: !1112, inlinedAt: !1119)
!1132 = !DILocation(line: 703, column: 23, scope: !1112, inlinedAt: !1119)
!1133 = !DILocation(line: 704, column: 11, scope: !1112, inlinedAt: !1119)
!1134 = !DILocation(line: 704, column: 17, scope: !1112, inlinedAt: !1119)
!1135 = !DILocation(line: 705, column: 18, scope: !1112, inlinedAt: !1119)
!1136 = !DILocation(line: 705, column: 5, scope: !1112, inlinedAt: !1119)
!1137 = !DILocation(line: 706, column: 11, scope: !1112, inlinedAt: !1119)
!1138 = !DILocation(line: 706, column: 20, scope: !1112, inlinedAt: !1119)
!1139 = !{!892, !709, i64 2112}
!1140 = !DILocation(line: 707, column: 11, scope: !1112, inlinedAt: !1119)
!1141 = !DILocation(line: 707, column: 21, scope: !1112, inlinedAt: !1119)
!1142 = !DILocation(line: 708, column: 11, scope: !1112, inlinedAt: !1119)
!1143 = !DILocation(line: 708, column: 18, scope: !1112, inlinedAt: !1119)
!1144 = !DILocation(line: 709, column: 11, scope: !1112, inlinedAt: !1119)
!1145 = !DILocation(line: 709, column: 19, scope: !1112, inlinedAt: !1119)
!1146 = !DILocation(line: 710, column: 11, scope: !1112, inlinedAt: !1119)
!1147 = !DILocation(line: 710, column: 21, scope: !1112, inlinedAt: !1119)
!1148 = !{!786, !786, i64 0}
!1149 = !DILocation(line: 711, column: 11, scope: !1112, inlinedAt: !1119)
!1150 = !DILocation(line: 711, column: 21, scope: !1112, inlinedAt: !1119)
!1151 = !DILocation(line: 712, column: 11, scope: !1112, inlinedAt: !1119)
!1152 = !DILocation(line: 712, column: 16, scope: !1112, inlinedAt: !1119)
!1153 = !{!892, !758, i64 2248}
!1154 = !DILocation(line: 713, column: 18, scope: !1112, inlinedAt: !1119)
!1155 = !DILocation(line: 713, column: 5, scope: !1112, inlinedAt: !1119)
!1156 = !DILocation(line: 714, column: 11, scope: !1112, inlinedAt: !1119)
!1157 = !DILocation(line: 714, column: 16, scope: !1112, inlinedAt: !1119)
!1158 = !DILocation(line: 715, column: 11, scope: !1112, inlinedAt: !1119)
!1159 = !DILocation(line: 715, column: 17, scope: !1112, inlinedAt: !1119)
!1160 = !DILocation(line: 716, column: 26, scope: !1112, inlinedAt: !1119)
!1161 = !DILocation(line: 716, column: 11, scope: !1112, inlinedAt: !1119)
!1162 = !DILocation(line: 716, column: 24, scope: !1112, inlinedAt: !1119)
!1163 = !{!892, !758, i64 2256}
!1164 = !DILocation(line: 717, column: 11, scope: !1112, inlinedAt: !1119)
!1165 = !DILocation(line: 717, column: 22, scope: !1112, inlinedAt: !1119)
!1166 = !{!892, !786, i64 2160}
!1167 = !DILocation(line: 718, column: 11, scope: !1112, inlinedAt: !1119)
!1168 = !DILocation(line: 718, column: 25, scope: !1112, inlinedAt: !1119)
!1169 = !{!892, !786, i64 2176}
!1170 = !DILocation(line: 719, column: 11, scope: !1112, inlinedAt: !1119)
!1171 = !DILocation(line: 719, column: 28, scope: !1112, inlinedAt: !1119)
!1172 = !{!892, !786, i64 2168}
!1173 = !DILocation(line: 720, column: 11, scope: !1112, inlinedAt: !1119)
!1174 = !DILocation(line: 720, column: 23, scope: !1112, inlinedAt: !1119)
!1175 = !{!892, !786, i64 2184}
!1176 = !DILocation(line: 721, column: 5, scope: !1112, inlinedAt: !1119)
!1177 = !{!1178, !758, i64 24}
!1178 = !{!"list", !758, i64 0, !758, i64 8, !758, i64 16, !758, i64 24, !758, i64 32, !729, i64 40}
!1179 = !DILocation(line: 887, column: 33, scope: !848, inlinedAt: !1180)
!1180 = distinct !DILocation(line: 255, column: 21, scope: !1120)
!1181 = !DILocation(line: 890, column: 29, scope: !848, inlinedAt: !1180)
!1182 = !DILocation(line: 890, column: 38, scope: !848, inlinedAt: !1180)
!1183 = !DILocation(line: 891, column: 13, scope: !848, inlinedAt: !1180)
!1184 = !DILocation(line: 890, column: 14, scope: !848, inlinedAt: !1180)
!1185 = !DILocation(line: 888, column: 9, scope: !848, inlinedAt: !1180)
!1186 = !DILocation(line: 256, column: 17, scope: !1120)
!1187 = !DILocation(line: 0, scope: !1120)
!1188 = !DILocation(line: 257, column: 31, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !694, file: !3, line: 257, column: 21)
!1190 = !DILocation(line: 0, scope: !1191)
!1191 = distinct !DILexicalBlock(scope: !1189, file: !3, line: 259, column: 24)
!1192 = !DILocation(line: 257, column: 21, scope: !694)
!1193 = !DILocation(line: 258, column: 21, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !1189, file: !3, line: 257, column: 39)
!1195 = !DILocation(line: 258, column: 62, scope: !1194)
!1196 = !DILocation(line: 259, column: 17, scope: !1194)
!1197 = !DILocation(line: 260, column: 21, scope: !1191)
!1198 = !DILocation(line: 260, column: 64, scope: !1191)
!1199 = !DILocation(line: 263, column: 24, scope: !695)
!1200 = !DILocation(line: 264, column: 20, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1082, file: !3, line: 263, column: 59)
!1202 = !DILocation(line: 265, column: 30, scope: !1201)
!1203 = !DILocation(line: 265, column: 25, scope: !1201)
!1204 = !DILocation(line: 237, column: 17, scope: !689)
!1205 = !DILocation(line: 266, column: 30, scope: !1201)
!1206 = !DILocation(line: 266, column: 24, scope: !1201)
!1207 = !DILocation(line: 237, column: 24, scope: !689)
!1208 = !DILocation(line: 267, column: 13, scope: !1201)
!1209 = !DILocation(line: 268, column: 37, scope: !1210)
!1210 = distinct !DILexicalBlock(scope: !1082, file: !3, line: 267, column: 20)
!1211 = !DILocation(line: 268, column: 32, scope: !1210)
!1212 = !DILocation(line: 0, scope: !1210)
!1213 = !DILocation(line: 270, column: 27, scope: !1214)
!1214 = distinct !DILexicalBlock(scope: !689, file: !3, line: 270, column: 17)
!1215 = !DILocation(line: 272, column: 25, scope: !689)
!1216 = !DILocation(line: 272, column: 13, scope: !689)
!1217 = !DILocation(line: 272, column: 57, scope: !689)
!1218 = !DILocalVariable(name: "n", arg: 1, scope: !1219, file: !3, line: 3706, type: !378)
!1219 = distinct !DISubprogram(name: "clusterAddSlot", scope: !3, file: !3, line: 3706, type: !1220, isLocal: false, isDefinition: true, scopeLine: 3706, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1222)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!177, !378, !177}
!1222 = !{!1218, !1223}
!1223 = !DILocalVariable(name: "slot", arg: 2, scope: !1219, file: !3, line: 3706, type: !177)
!1224 = !DILocation(line: 3706, column: 33, scope: !1219, inlinedAt: !1225)
!1225 = distinct !DILocation(line: 272, column: 34, scope: !689)
!1226 = !DILocation(line: 3706, column: 40, scope: !1219, inlinedAt: !1225)
!1227 = !DILocation(line: 3707, column: 16, scope: !1228, inlinedAt: !1225)
!1228 = distinct !DILexicalBlock(scope: !1219, file: !3, line: 3707, column: 9)
!1229 = !DILocation(line: 3707, column: 9, scope: !1228, inlinedAt: !1225)
!1230 = !DILocation(line: 3707, column: 9, scope: !1219, inlinedAt: !1225)
!1231 = !DILocation(line: 3708, column: 5, scope: !1219, inlinedAt: !1225)
!1232 = !DILocation(line: 3709, column: 12, scope: !1219, inlinedAt: !1225)
!1233 = !DILocation(line: 3709, column: 5, scope: !1219, inlinedAt: !1225)
!1234 = !DILocation(line: 3709, column: 33, scope: !1219, inlinedAt: !1225)
!1235 = !DILocation(line: 3710, column: 5, scope: !1219, inlinedAt: !1225)
!1236 = distinct !{!1236, !1216, !1237}
!1237 = !DILocation(line: 272, column: 59, scope: !689)
!1238 = !DILocation(line: 236, column: 32, scope: !690)
!1239 = distinct !{!1239, !1078, !1240}
!1240 = !DILocation(line: 273, column: 9, scope: !691)
!1241 = !DILocation(line: 275, column: 9, scope: !679)
!1242 = !DILocation(line: 278, column: 16, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !436, file: !3, line: 278, column: 9)
!1244 = !DILocation(line: 278, column: 25, scope: !1243)
!1245 = !DILocation(line: 278, column: 32, scope: !1243)
!1246 = !DILocation(line: 278, column: 9, scope: !436)
!1247 = !DILocation(line: 280, column: 5, scope: !436)
!1248 = !DILocation(line: 281, column: 5, scope: !436)
!1249 = !DILocation(line: 283, column: 65, scope: !436)
!1250 = !DILocation(line: 283, column: 5, scope: !436)
!1251 = !DILocalVariable(name: "max", scope: !1252, file: !3, line: 970, type: !104)
!1252 = distinct !DISubprogram(name: "clusterGetMaxEpoch", scope: !3, file: !3, line: 969, type: !1253, isLocal: false, isDefinition: true, scopeLine: 969, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1255)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!104}
!1255 = !{!1251, !1256, !1257, !1258}
!1256 = !DILocalVariable(name: "di", scope: !1252, file: !3, line: 971, type: !297)
!1257 = !DILocalVariable(name: "de", scope: !1252, file: !3, line: 972, type: !340)
!1258 = !DILocalVariable(name: "node", scope: !1259, file: !3, line: 976, type: !378)
!1259 = distinct !DILexicalBlock(scope: !1252, file: !3, line: 975, column: 40)
!1260 = !DILocation(line: 970, column: 14, scope: !1252, inlinedAt: !1261)
!1261 = distinct !DILocation(line: 288, column: 9, scope: !1262)
!1262 = distinct !DILexicalBlock(scope: !436, file: !3, line: 288, column: 9)
!1263 = !DILocation(line: 974, column: 37, scope: !1252, inlinedAt: !1261)
!1264 = !DILocation(line: 974, column: 46, scope: !1252, inlinedAt: !1261)
!1265 = !DILocation(line: 974, column: 10, scope: !1252, inlinedAt: !1261)
!1266 = !DILocation(line: 971, column: 19, scope: !1252, inlinedAt: !1261)
!1267 = !DILocation(line: 975, column: 17, scope: !1252, inlinedAt: !1261)
!1268 = !DILocation(line: 972, column: 16, scope: !1252, inlinedAt: !1261)
!1269 = !DILocation(line: 975, column: 31, scope: !1252, inlinedAt: !1261)
!1270 = !DILocation(line: 975, column: 5, scope: !1252, inlinedAt: !1261)
!1271 = !DILocation(line: 976, column: 29, scope: !1259, inlinedAt: !1261)
!1272 = !DILocation(line: 976, column: 22, scope: !1259, inlinedAt: !1261)
!1273 = !DILocation(line: 977, column: 19, scope: !1274, inlinedAt: !1261)
!1274 = distinct !DILexicalBlock(scope: !1259, file: !3, line: 977, column: 13)
!1275 = !DILocation(line: 977, column: 31, scope: !1274, inlinedAt: !1261)
!1276 = !DILocation(line: 977, column: 13, scope: !1259, inlinedAt: !1261)
!1277 = distinct !{!1277, !1278, !1279}
!1278 = !DILocation(line: 975, column: 5, scope: !1252)
!1279 = !DILocation(line: 978, column: 5, scope: !1252)
!1280 = !DILocation(line: 0, scope: !1274, inlinedAt: !1261)
!1281 = !DILocation(line: 979, column: 5, scope: !1252, inlinedAt: !1261)
!1282 = !DILocation(line: 980, column: 22, scope: !1283, inlinedAt: !1261)
!1283 = distinct !DILexicalBlock(scope: !1252, file: !3, line: 980, column: 9)
!1284 = !DILocation(line: 980, column: 31, scope: !1283, inlinedAt: !1261)
!1285 = !DILocation(line: 288, column: 30, scope: !1262)
!1286 = !DILocation(line: 288, column: 9, scope: !436)
!1287 = !DILocation(line: 970, column: 14, scope: !1252, inlinedAt: !1288)
!1288 = distinct !DILocation(line: 289, column: 40, scope: !1289)
!1289 = distinct !DILexicalBlock(scope: !1262, file: !3, line: 288, column: 62)
!1290 = !DILocation(line: 974, column: 46, scope: !1252, inlinedAt: !1288)
!1291 = !DILocation(line: 974, column: 10, scope: !1252, inlinedAt: !1288)
!1292 = !DILocation(line: 971, column: 19, scope: !1252, inlinedAt: !1288)
!1293 = !DILocation(line: 975, column: 17, scope: !1252, inlinedAt: !1288)
!1294 = !DILocation(line: 972, column: 16, scope: !1252, inlinedAt: !1288)
!1295 = !DILocation(line: 975, column: 31, scope: !1252, inlinedAt: !1288)
!1296 = !DILocation(line: 975, column: 5, scope: !1252, inlinedAt: !1288)
!1297 = !DILocation(line: 976, column: 29, scope: !1259, inlinedAt: !1288)
!1298 = !DILocation(line: 976, column: 22, scope: !1259, inlinedAt: !1288)
!1299 = !DILocation(line: 977, column: 19, scope: !1274, inlinedAt: !1288)
!1300 = !DILocation(line: 977, column: 31, scope: !1274, inlinedAt: !1288)
!1301 = !DILocation(line: 977, column: 13, scope: !1259, inlinedAt: !1288)
!1302 = !DILocation(line: 0, scope: !1274, inlinedAt: !1288)
!1303 = !DILocation(line: 979, column: 5, scope: !1252, inlinedAt: !1288)
!1304 = !DILocation(line: 980, column: 22, scope: !1283, inlinedAt: !1288)
!1305 = !DILocation(line: 980, column: 31, scope: !1283, inlinedAt: !1288)
!1306 = !DILocation(line: 980, column: 13, scope: !1283, inlinedAt: !1288)
!1307 = !DILocation(line: 980, column: 9, scope: !1252, inlinedAt: !1288)
!1308 = !DILocation(line: 289, column: 38, scope: !1289)
!1309 = !DILocation(line: 290, column: 5, scope: !1289)
!1310 = !DILocation(line: 294, column: 5, scope: !436)
!1311 = !DILocation(line: 296, column: 5, scope: !436)
!1312 = !DILocation(line: 297, column: 13, scope: !1313)
!1313 = distinct !DILexicalBlock(scope: !436, file: !3, line: 297, column: 9)
!1314 = !DILocation(line: 298, column: 5, scope: !436)
!1315 = !DILocation(line: 299, column: 1, scope: !436)
!1316 = !DILocation(line: 936, column: 44, scope: !820)
!1317 = !DILocation(line: 937, column: 13, scope: !820)
!1318 = !DILocation(line: 937, column: 9, scope: !820)
!1319 = !DILocation(line: 940, column: 26, scope: !820)
!1320 = !DILocation(line: 940, column: 35, scope: !820)
!1321 = !DILocation(line: 940, column: 10, scope: !820)
!1322 = !DILocation(line: 938, column: 16, scope: !820)
!1323 = !DILocation(line: 941, column: 5, scope: !820)
!1324 = !DILocation(line: 942, column: 12, scope: !837)
!1325 = !DILocation(line: 942, column: 9, scope: !820)
!1326 = !DILocation(line: 943, column: 12, scope: !820)
!1327 = !DILocation(line: 943, column: 5, scope: !820)
!1328 = !DILocation(line: 0, scope: !820)
!1329 = !DILocation(line: 944, column: 1, scope: !820)
!1330 = !DILocation(line: 695, column: 38, scope: !1112)
!1331 = !DILocation(line: 695, column: 52, scope: !1112)
!1332 = !DILocation(line: 696, column: 25, scope: !1112)
!1333 = !DILocation(line: 696, column: 18, scope: !1112)
!1334 = !DILocation(line: 698, column: 9, scope: !1125)
!1335 = !DILocation(line: 0, scope: !1125)
!1336 = !DILocation(line: 698, column: 9, scope: !1112)
!1337 = !DILocation(line: 699, column: 9, scope: !1125)
!1338 = !DILocation(line: 701, column: 9, scope: !1125)
!1339 = !DILocation(line: 702, column: 19, scope: !1112)
!1340 = !DILocation(line: 702, column: 11, scope: !1112)
!1341 = !DILocation(line: 702, column: 17, scope: !1112)
!1342 = !DILocation(line: 703, column: 11, scope: !1112)
!1343 = !DILocation(line: 703, column: 23, scope: !1112)
!1344 = !DILocation(line: 704, column: 11, scope: !1112)
!1345 = !DILocation(line: 704, column: 17, scope: !1112)
!1346 = !DILocation(line: 705, column: 18, scope: !1112)
!1347 = !DILocation(line: 705, column: 5, scope: !1112)
!1348 = !DILocation(line: 706, column: 11, scope: !1112)
!1349 = !DILocation(line: 706, column: 20, scope: !1112)
!1350 = !DILocation(line: 707, column: 11, scope: !1112)
!1351 = !DILocation(line: 707, column: 21, scope: !1112)
!1352 = !DILocation(line: 708, column: 11, scope: !1112)
!1353 = !DILocation(line: 708, column: 18, scope: !1112)
!1354 = !DILocation(line: 709, column: 11, scope: !1112)
!1355 = !DILocation(line: 709, column: 19, scope: !1112)
!1356 = !DILocation(line: 710, column: 11, scope: !1112)
!1357 = !DILocation(line: 710, column: 21, scope: !1112)
!1358 = !DILocation(line: 711, column: 11, scope: !1112)
!1359 = !DILocation(line: 711, column: 21, scope: !1112)
!1360 = !DILocation(line: 712, column: 11, scope: !1112)
!1361 = !DILocation(line: 712, column: 16, scope: !1112)
!1362 = !DILocation(line: 713, column: 18, scope: !1112)
!1363 = !DILocation(line: 713, column: 5, scope: !1112)
!1364 = !DILocation(line: 714, column: 11, scope: !1112)
!1365 = !DILocation(line: 714, column: 16, scope: !1112)
!1366 = !DILocation(line: 715, column: 11, scope: !1112)
!1367 = !DILocation(line: 715, column: 17, scope: !1112)
!1368 = !DILocation(line: 716, column: 26, scope: !1112)
!1369 = !DILocation(line: 716, column: 11, scope: !1112)
!1370 = !DILocation(line: 716, column: 24, scope: !1112)
!1371 = !DILocation(line: 717, column: 11, scope: !1112)
!1372 = !DILocation(line: 717, column: 22, scope: !1112)
!1373 = !DILocation(line: 718, column: 11, scope: !1112)
!1374 = !DILocation(line: 718, column: 25, scope: !1112)
!1375 = !DILocation(line: 719, column: 11, scope: !1112)
!1376 = !DILocation(line: 719, column: 28, scope: !1112)
!1377 = !DILocation(line: 720, column: 11, scope: !1112)
!1378 = !DILocation(line: 720, column: 23, scope: !1112)
!1379 = !DILocation(line: 721, column: 5, scope: !1112)
!1380 = !DILocation(line: 722, column: 5, scope: !1112)
!1381 = !DILocation(line: 887, column: 33, scope: !848)
!1382 = !DILocation(line: 890, column: 29, scope: !848)
!1383 = !DILocation(line: 890, column: 38, scope: !848)
!1384 = !DILocation(line: 891, column: 23, scope: !848)
!1385 = !DILocation(line: 891, column: 13, scope: !848)
!1386 = !DILocation(line: 891, column: 52, scope: !848)
!1387 = !DILocation(line: 890, column: 14, scope: !848)
!1388 = !DILocation(line: 888, column: 9, scope: !848)
!1389 = !DILocation(line: 892, column: 20, scope: !848)
!1390 = !DILocation(line: 892, column: 12, scope: !848)
!1391 = !DILocation(line: 892, column: 5, scope: !848)
!1392 = !DILocation(line: 839, column: 38, scope: !1014)
!1393 = !DILocation(line: 839, column: 59, scope: !1014)
!1394 = !DILocation(line: 840, column: 9, scope: !1014)
!1395 = !DILocation(line: 843, column: 29, scope: !1025)
!1396 = !DILocation(line: 843, column: 19, scope: !1025)
!1397 = !DILocation(line: 0, scope: !1014)
!1398 = !DILocation(line: 844, column: 13, scope: !1033)
!1399 = !DILocation(line: 844, column: 31, scope: !1033)
!1400 = !DILocation(line: 843, column: 41, scope: !1025)
!1401 = !DILocation(line: 844, column: 13, scope: !1025)
!1402 = !DILocation(line: 845, column: 31, scope: !1014)
!1403 = !DILocation(line: 846, column: 48, scope: !1014)
!1404 = !DILocation(line: 846, column: 30, scope: !1014)
!1405 = !DILocation(line: 846, column: 29, scope: !1014)
!1406 = !DILocation(line: 845, column: 22, scope: !1014)
!1407 = !DILocation(line: 845, column: 20, scope: !1014)
!1408 = !DILocation(line: 847, column: 28, scope: !1014)
!1409 = !DILocation(line: 847, column: 5, scope: !1014)
!1410 = !DILocation(line: 847, column: 39, scope: !1014)
!1411 = !DILocation(line: 848, column: 22, scope: !1014)
!1412 = !DILocation(line: 849, column: 13, scope: !1014)
!1413 = !DILocation(line: 849, column: 19, scope: !1014)
!1414 = !DILocation(line: 850, column: 5, scope: !1014)
!1415 = !DILocation(line: 851, column: 1, scope: !1014)
!1416 = !DILocation(line: 3706, column: 33, scope: !1219)
!1417 = !DILocation(line: 3706, column: 40, scope: !1219)
!1418 = !DILocation(line: 3707, column: 16, scope: !1228)
!1419 = !DILocation(line: 3707, column: 9, scope: !1228)
!1420 = !DILocation(line: 3707, column: 9, scope: !1219)
!1421 = !DILocation(line: 3708, column: 5, scope: !1219)
!1422 = !DILocation(line: 3709, column: 12, scope: !1219)
!1423 = !DILocation(line: 3709, column: 5, scope: !1219)
!1424 = !DILocation(line: 3709, column: 33, scope: !1219)
!1425 = !DILocation(line: 3710, column: 5, scope: !1219)
!1426 = !DILocation(line: 0, scope: !1219)
!1427 = !DILocation(line: 3711, column: 1, scope: !1219)
!1428 = !DILocation(line: 970, column: 14, scope: !1252)
!1429 = !DILocation(line: 974, column: 37, scope: !1252)
!1430 = !DILocation(line: 974, column: 46, scope: !1252)
!1431 = !DILocation(line: 974, column: 10, scope: !1252)
!1432 = !DILocation(line: 971, column: 19, scope: !1252)
!1433 = !DILocation(line: 975, column: 17, scope: !1252)
!1434 = !DILocation(line: 972, column: 16, scope: !1252)
!1435 = !DILocation(line: 975, column: 31, scope: !1252)
!1436 = !DILocation(line: 976, column: 29, scope: !1259)
!1437 = !DILocation(line: 976, column: 22, scope: !1259)
!1438 = !DILocation(line: 977, column: 19, scope: !1274)
!1439 = !DILocation(line: 977, column: 31, scope: !1274)
!1440 = !DILocation(line: 977, column: 13, scope: !1259)
!1441 = !DILocation(line: 0, scope: !1274)
!1442 = !DILocation(line: 979, column: 5, scope: !1252)
!1443 = !DILocation(line: 980, column: 22, scope: !1283)
!1444 = !DILocation(line: 980, column: 31, scope: !1283)
!1445 = !DILocation(line: 980, column: 13, scope: !1283)
!1446 = !DILocation(line: 980, column: 9, scope: !1252)
!1447 = !DILocation(line: 981, column: 5, scope: !1252)
!1448 = distinct !DISubprogram(name: "clusterSaveConfig", scope: !3, file: !3, line: 313, type: !1449, isLocal: false, isDefinition: true, scopeLine: 313, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1451)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!177, !177}
!1451 = !{!1452, !1453, !1454, !1458, !1459}
!1452 = !DILocalVariable(name: "do_fsync", arg: 1, scope: !1448, file: !3, line: 313, type: !177)
!1453 = !DILocalVariable(name: "ci", scope: !1448, file: !3, line: 314, type: !189)
!1454 = !DILocalVariable(name: "content_size", scope: !1448, file: !3, line: 315, type: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1456, line: 40, baseType: !1457)
!1456 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/strings.h", directory: "/root/.unikraft/apps/redis/build")
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !11, line: 129, baseType: !106)
!1458 = !DILocalVariable(name: "sb", scope: !1448, file: !3, line: 316, type: !639)
!1459 = !DILocalVariable(name: "fd", scope: !1448, file: !3, line: 317, type: !177)
!1460 = !DILocation(line: 313, column: 27, scope: !1448)
!1461 = !DILocation(line: 316, column: 5, scope: !1448)
!1462 = !DILocation(line: 319, column: 12, scope: !1448)
!1463 = !DILocation(line: 319, column: 21, scope: !1448)
!1464 = !DILocation(line: 319, column: 39, scope: !1448)
!1465 = !{!794, !709, i64 524416}
!1466 = !DILocation(line: 323, column: 10, scope: !1448)
!1467 = !DILocation(line: 314, column: 9, scope: !1448)
!1468 = !DILocation(line: 325, column: 37, scope: !1448)
!1469 = !DILocation(line: 325, column: 46, scope: !1448)
!1470 = !DILocation(line: 326, column: 46, scope: !1448)
!1471 = !DILocation(line: 324, column: 10, scope: !1448)
!1472 = !DILocalVariable(name: "s", arg: 1, scope: !1473, file: !190, line: 87, type: !1477)
!1473 = distinct !DISubprogram(name: "sdslen", scope: !190, file: !190, line: 87, type: !1474, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1478)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!1476, !1477}
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !549, line: 58, baseType: !106)
!1477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !189)
!1478 = !{!1472, !1479}
!1479 = !DILocalVariable(name: "flags", scope: !1473, file: !190, line: 88, type: !27)
!1480 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !1481)
!1481 = distinct !DILocation(line: 327, column: 20, scope: !1448)
!1482 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !1481)
!1483 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !1481)
!1484 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !1481)
!1485 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !1481)
!1486 = distinct !DILexicalBlock(scope: !1473, file: !190, line: 89, column: 33)
!1487 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !1481)
!1488 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !1481)
!1489 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !1481)
!1490 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !1481)
!1491 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !1481)
!1492 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !1481)
!1493 = !{!728, !728, i64 0}
!1494 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !1481)
!1495 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !1481)
!1496 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !1481)
!1497 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !1481)
!1498 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !1481)
!1499 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !1481)
!1500 = !{!729, !729, i64 0}
!1501 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !1481)
!1502 = !DILocation(line: 0, scope: !1486, inlinedAt: !1481)
!1503 = !DILocation(line: 315, column: 12, scope: !1448)
!1504 = !DILocation(line: 329, column: 27, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 329, column: 9)
!1506 = !{!785, !758, i64 2936}
!1507 = !DILocation(line: 329, column: 15, scope: !1505)
!1508 = !DILocation(line: 317, column: 9, scope: !1448)
!1509 = !DILocation(line: 330, column: 9, scope: !1505)
!1510 = !DILocation(line: 329, column: 9, scope: !1448)
!1511 = !DILocation(line: 316, column: 17, scope: !1448)
!1512 = !DILocation(line: 333, column: 9, scope: !1513)
!1513 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 333, column: 9)
!1514 = !DILocation(line: 333, column: 23, scope: !1513)
!1515 = !DILocation(line: 333, column: 9, scope: !1448)
!1516 = !DILocation(line: 334, column: 16, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1518, file: !3, line: 334, column: 13)
!1518 = distinct !DILexicalBlock(scope: !1513, file: !3, line: 333, column: 30)
!1519 = !DILocation(line: 334, column: 24, scope: !1517)
!1520 = !DILocation(line: 334, column: 13, scope: !1518)
!1521 = !DILocation(line: 335, column: 18, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1517, file: !3, line: 334, column: 47)
!1523 = !DILocation(line: 336, column: 22, scope: !1522)
!1524 = !DILocation(line: 336, column: 44, scope: !1522)
!1525 = !DILocation(line: 336, column: 51, scope: !1522)
!1526 = !DILocation(line: 336, column: 13, scope: !1522)
!1527 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !1528)
!1528 = distinct !DILocation(line: 339, column: 21, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 339, column: 9)
!1530 = !DILocation(line: 337, column: 9, scope: !1522)
!1531 = !DILocation(line: 0, scope: !1448)
!1532 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !1528)
!1533 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !1528)
!1534 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !1528)
!1535 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !1528)
!1536 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !1528)
!1537 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !1528)
!1538 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !1528)
!1539 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !1528)
!1540 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !1528)
!1541 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !1528)
!1542 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !1528)
!1543 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !1528)
!1544 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !1528)
!1545 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !1528)
!1546 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !1528)
!1547 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !1528)
!1548 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !1528)
!1549 = !DILocation(line: 0, scope: !1486, inlinedAt: !1528)
!1550 = !DILocation(line: 339, column: 9, scope: !1529)
!1551 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !1552)
!1552 = distinct !DILocation(line: 339, column: 45, scope: !1529)
!1553 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !1552)
!1554 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !1552)
!1555 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !1552)
!1556 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !1552)
!1557 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !1552)
!1558 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !1552)
!1559 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !1552)
!1560 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !1552)
!1561 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !1552)
!1562 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !1552)
!1563 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !1552)
!1564 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !1552)
!1565 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !1552)
!1566 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !1552)
!1567 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !1552)
!1568 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !1552)
!1569 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !1552)
!1570 = !DILocation(line: 0, scope: !1486, inlinedAt: !1552)
!1571 = !DILocation(line: 339, column: 33, scope: !1529)
!1572 = !DILocation(line: 339, column: 9, scope: !1448)
!1573 = !DILocation(line: 340, column: 9, scope: !1574)
!1574 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 340, column: 9)
!1575 = !DILocation(line: 340, column: 9, scope: !1448)
!1576 = !DILocation(line: 341, column: 16, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1574, file: !3, line: 340, column: 19)
!1578 = !DILocation(line: 341, column: 25, scope: !1577)
!1579 = !DILocation(line: 341, column: 43, scope: !1577)
!1580 = !DILocation(line: 342, column: 9, scope: !1577)
!1581 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !1582)
!1582 = distinct !DILocation(line: 347, column: 25, scope: !1583)
!1583 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 347, column: 9)
!1584 = !DILocation(line: 343, column: 5, scope: !1577)
!1585 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !1582)
!1586 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !1582)
!1587 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !1582)
!1588 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !1582)
!1589 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !1582)
!1590 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !1582)
!1591 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !1582)
!1592 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !1582)
!1593 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !1582)
!1594 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !1582)
!1595 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !1582)
!1596 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !1582)
!1597 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !1582)
!1598 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !1582)
!1599 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !1582)
!1600 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !1582)
!1601 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !1582)
!1602 = !DILocation(line: 0, scope: !1486, inlinedAt: !1582)
!1603 = !DILocation(line: 347, column: 22, scope: !1583)
!1604 = !DILocation(line: 347, column: 36, scope: !1583)
!1605 = !DILocation(line: 347, column: 39, scope: !1583)
!1606 = !DILocation(line: 347, column: 9, scope: !1448)
!1607 = !DILocation(line: 350, column: 5, scope: !1448)
!1608 = !DILocation(line: 351, column: 5, scope: !1448)
!1609 = !DILocation(line: 352, column: 5, scope: !1448)
!1610 = !DILocation(line: 355, column: 19, scope: !1611)
!1611 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 355, column: 9)
!1612 = !DILocation(line: 356, column: 5, scope: !1448)
!1613 = !DILocation(line: 357, column: 5, scope: !1448)
!1614 = !DILocation(line: 358, column: 1, scope: !1448)
!1615 = distinct !DISubprogram(name: "clusterGenNodesDescription", scope: !3, file: !3, line: 4067, type: !1616, isLocal: false, isDefinition: true, scopeLine: 4067, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1618)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!189, !177}
!1618 = !{!1619, !1620, !1621, !1622, !1623, !1624}
!1619 = !DILocalVariable(name: "filter", arg: 1, scope: !1615, file: !3, line: 4067, type: !177)
!1620 = !DILocalVariable(name: "ci", scope: !1615, file: !3, line: 4068, type: !189)
!1621 = !DILocalVariable(name: "ni", scope: !1615, file: !3, line: 4068, type: !189)
!1622 = !DILocalVariable(name: "di", scope: !1615, file: !3, line: 4069, type: !297)
!1623 = !DILocalVariable(name: "de", scope: !1615, file: !3, line: 4070, type: !340)
!1624 = !DILocalVariable(name: "node", scope: !1625, file: !3, line: 4074, type: !378)
!1625 = distinct !DILexicalBlock(scope: !1615, file: !3, line: 4073, column: 40)
!1626 = !DILocation(line: 4067, column: 36, scope: !1615)
!1627 = !DILocation(line: 4068, column: 14, scope: !1615)
!1628 = !DILocation(line: 4068, column: 9, scope: !1615)
!1629 = !DILocation(line: 4072, column: 37, scope: !1615)
!1630 = !DILocation(line: 4072, column: 46, scope: !1615)
!1631 = !DILocation(line: 4072, column: 10, scope: !1615)
!1632 = !DILocation(line: 4069, column: 19, scope: !1615)
!1633 = !DILocation(line: 4073, column: 17, scope: !1615)
!1634 = !DILocation(line: 4070, column: 16, scope: !1615)
!1635 = !DILocation(line: 4073, column: 31, scope: !1615)
!1636 = !DILocation(line: 4073, column: 5, scope: !1615)
!1637 = !DILocation(line: 4074, column: 29, scope: !1625)
!1638 = !DILocation(line: 4074, column: 22, scope: !1625)
!1639 = !DILocation(line: 4076, column: 19, scope: !1640)
!1640 = distinct !DILexicalBlock(scope: !1625, file: !3, line: 4076, column: 13)
!1641 = !DILocation(line: 4076, column: 25, scope: !1640)
!1642 = !DILocation(line: 4076, column: 13, scope: !1625)
!1643 = distinct !{!1643, !1636, !1644}
!1644 = !DILocation(line: 4081, column: 5, scope: !1615)
!1645 = !DILocation(line: 4077, column: 14, scope: !1625)
!1646 = !DILocation(line: 4068, column: 26, scope: !1615)
!1647 = !DILocation(line: 4078, column: 14, scope: !1625)
!1648 = !DILocation(line: 4079, column: 9, scope: !1625)
!1649 = !DILocation(line: 4080, column: 14, scope: !1625)
!1650 = !DILocation(line: 0, scope: !1625)
!1651 = !DILocation(line: 4082, column: 5, scope: !1615)
!1652 = !DILocation(line: 4083, column: 5, scope: !1615)
!1653 = distinct !DISubprogram(name: "clusterSaveConfigOrDie", scope: !3, file: !3, line: 360, type: !282, isLocal: false, isDefinition: true, scopeLine: 360, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1654)
!1654 = !{!1655}
!1655 = !DILocalVariable(name: "do_fsync", arg: 1, scope: !1653, file: !3, line: 360, type: !177)
!1656 = !DILocation(line: 360, column: 33, scope: !1653)
!1657 = !DILocation(line: 361, column: 9, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1653, file: !3, line: 361, column: 9)
!1659 = !DILocation(line: 361, column: 37, scope: !1658)
!1660 = !DILocation(line: 361, column: 9, scope: !1653)
!1661 = !DILocation(line: 362, column: 9, scope: !1662)
!1662 = distinct !DILexicalBlock(scope: !1658, file: !3, line: 361, column: 44)
!1663 = !DILocation(line: 363, column: 9, scope: !1662)
!1664 = !DILocation(line: 365, column: 1, scope: !1653)
!1665 = distinct !DISubprogram(name: "clusterLockConfig", scope: !3, file: !3, line: 376, type: !437, isLocal: false, isDefinition: true, scopeLine: 376, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1666)
!1666 = !{!1667, !1668}
!1667 = !DILocalVariable(name: "filename", arg: 1, scope: !1665, file: !3, line: 376, type: !178)
!1668 = !DILocalVariable(name: "fd", scope: !1665, file: !3, line: 385, type: !177)
!1669 = !DILocation(line: 376, column: 29, scope: !1665)
!1670 = !DILocation(line: 385, column: 14, scope: !1665)
!1671 = !DILocation(line: 385, column: 9, scope: !1665)
!1672 = !DILocation(line: 386, column: 12, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1665, file: !3, line: 386, column: 9)
!1674 = !DILocation(line: 386, column: 9, scope: !1665)
!1675 = !DILocation(line: 389, column: 32, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1673, file: !3, line: 386, column: 19)
!1677 = !DILocation(line: 389, column: 23, scope: !1676)
!1678 = !DILocation(line: 387, column: 9, scope: !1676)
!1679 = !DILocation(line: 390, column: 9, scope: !1676)
!1680 = !DILocation(line: 393, column: 9, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1665, file: !3, line: 393, column: 9)
!1682 = !DILocation(line: 393, column: 35, scope: !1681)
!1683 = !DILocation(line: 393, column: 9, scope: !1665)
!1684 = !DILocation(line: 394, column: 13, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1686, file: !3, line: 394, column: 13)
!1686 = distinct !DILexicalBlock(scope: !1681, file: !3, line: 393, column: 42)
!1687 = !DILocation(line: 394, column: 19, scope: !1685)
!1688 = !DILocation(line: 394, column: 13, scope: !1686)
!1689 = !DILocation(line: 395, column: 13, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1685, file: !3, line: 394, column: 35)
!1691 = !DILocation(line: 400, column: 9, scope: !1690)
!1692 = !DILocation(line: 402, column: 65, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !1685, file: !3, line: 400, column: 16)
!1694 = !DILocation(line: 402, column: 56, scope: !1693)
!1695 = !DILocation(line: 401, column: 13, scope: !1693)
!1696 = !DILocation(line: 404, column: 9, scope: !1686)
!1697 = !DILocation(line: 405, column: 9, scope: !1686)
!1698 = !DILocation(line: 0, scope: !1665)
!1699 = !DILocation(line: 412, column: 1, scope: !1665)
!1700 = distinct !DISubprogram(name: "clusterUpdateMyselfFlags", scope: !3, file: !3, line: 418, type: !293, isLocal: false, isDefinition: true, scopeLine: 418, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1701)
!1701 = !{!1702, !1703}
!1702 = !DILocalVariable(name: "oldflags", scope: !1700, file: !3, line: 419, type: !177)
!1703 = !DILocalVariable(name: "nofailover", scope: !1700, file: !3, line: 420, type: !177)
!1704 = !DILocation(line: 419, column: 20, scope: !1700)
!1705 = !DILocation(line: 419, column: 28, scope: !1700)
!1706 = !DILocation(line: 419, column: 9, scope: !1700)
!1707 = !DILocation(line: 420, column: 29, scope: !1700)
!1708 = !{!785, !709, i64 2964}
!1709 = !DILocation(line: 420, column: 22, scope: !1700)
!1710 = !DILocation(line: 420, column: 9, scope: !1700)
!1711 = !DILocation(line: 422, column: 19, scope: !1700)
!1712 = !DILocation(line: 423, column: 19, scope: !1700)
!1713 = !DILocation(line: 424, column: 23, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1700, file: !3, line: 424, column: 9)
!1715 = !DILocation(line: 424, column: 9, scope: !1700)
!1716 = !DILocalVariable(name: "flags", arg: 1, scope: !1717, file: !3, line: 3617, type: !177)
!1717 = distinct !DISubprogram(name: "clusterDoBeforeSleep", scope: !3, file: !3, line: 3617, type: !282, isLocal: false, isDefinition: true, scopeLine: 3617, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1718)
!1718 = !{!1716}
!1719 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !1720)
!1720 = distinct !DILocation(line: 425, column: 9, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 424, column: 36)
!1722 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !1720)
!1723 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !1720)
!1724 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !1720)
!1725 = !DILocation(line: 427, column: 5, scope: !1721)
!1726 = !DILocation(line: 428, column: 1, scope: !1700)
!1727 = !DILocation(line: 3617, column: 31, scope: !1717)
!1728 = !DILocation(line: 3618, column: 12, scope: !1717)
!1729 = !DILocation(line: 3618, column: 21, scope: !1717)
!1730 = !DILocation(line: 3618, column: 39, scope: !1717)
!1731 = !DILocation(line: 3619, column: 1, scope: !1717)
!1732 = distinct !DISubprogram(name: "clusterInit", scope: !3, file: !3, line: 430, type: !293, isLocal: false, isDefinition: true, scopeLine: 430, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1733)
!1733 = !{!1734, !1735, !1737}
!1734 = !DILocalVariable(name: "saveconf", scope: !1732, file: !3, line: 431, type: !177)
!1735 = !DILocalVariable(name: "i", scope: !1736, file: !3, line: 448, type: !177)
!1736 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 448, column: 5)
!1737 = !DILocalVariable(name: "j", scope: !1738, file: !3, line: 494, type: !177)
!1738 = distinct !DILexicalBlock(scope: !1739, file: !3, line: 493, column: 12)
!1739 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 489, column: 9)
!1740 = !DILocation(line: 431, column: 9, scope: !1732)
!1741 = !DILocation(line: 433, column: 22, scope: !1732)
!1742 = !DILocation(line: 433, column: 20, scope: !1732)
!1743 = !DILocation(line: 434, column: 21, scope: !1732)
!1744 = !DILocation(line: 434, column: 28, scope: !1732)
!1745 = !DILocation(line: 435, column: 21, scope: !1732)
!1746 = !DILocation(line: 435, column: 34, scope: !1732)
!1747 = !DILocation(line: 436, column: 21, scope: !1732)
!1748 = !DILocation(line: 436, column: 27, scope: !1732)
!1749 = !{!794, !709, i64 16}
!1750 = !DILocation(line: 437, column: 21, scope: !1732)
!1751 = !DILocation(line: 437, column: 26, scope: !1732)
!1752 = !{!794, !709, i64 20}
!1753 = !DILocation(line: 438, column: 21, scope: !1732)
!1754 = !DILocation(line: 438, column: 39, scope: !1732)
!1755 = !DILocation(line: 439, column: 29, scope: !1732)
!1756 = !DILocation(line: 439, column: 12, scope: !1732)
!1757 = !DILocation(line: 439, column: 21, scope: !1732)
!1758 = !DILocation(line: 439, column: 27, scope: !1732)
!1759 = !DILocation(line: 441, column: 9, scope: !1732)
!1760 = !DILocation(line: 440, column: 12, scope: !1732)
!1761 = !DILocation(line: 440, column: 21, scope: !1732)
!1762 = !DILocation(line: 440, column: 38, scope: !1732)
!1763 = !{!794, !758, i64 32}
!1764 = !DILocation(line: 442, column: 21, scope: !1732)
!1765 = !DILocation(line: 442, column: 40, scope: !1732)
!1766 = !{!794, !786, i64 524336}
!1767 = !DILocation(line: 443, column: 21, scope: !1732)
!1768 = !DILocation(line: 443, column: 41, scope: !1732)
!1769 = !{!794, !709, i64 524344}
!1770 = !DILocation(line: 444, column: 21, scope: !1732)
!1771 = !DILocation(line: 444, column: 40, scope: !1732)
!1772 = !{!794, !709, i64 524352}
!1773 = !DILocation(line: 445, column: 21, scope: !1732)
!1774 = !DILocation(line: 445, column: 41, scope: !1732)
!1775 = !{!794, !729, i64 524360}
!1776 = !DILocation(line: 446, column: 21, scope: !1732)
!1777 = !DILocation(line: 446, column: 42, scope: !1732)
!1778 = !{!794, !709, i64 524368}
!1779 = !DILocation(line: 447, column: 21, scope: !1732)
!1780 = !DILocation(line: 447, column: 35, scope: !1732)
!1781 = !DILocation(line: 448, column: 14, scope: !1736)
!1782 = !DILocation(line: 449, column: 9, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !1784, file: !3, line: 448, column: 53)
!1784 = distinct !DILexicalBlock(scope: !1736, file: !3, line: 448, column: 5)
!1785 = !DILocation(line: 450, column: 9, scope: !1783)
!1786 = !DILocation(line: 449, column: 52, scope: !1783)
!1787 = !DILocation(line: 450, column: 56, scope: !1783)
!1788 = !DILocation(line: 452, column: 21, scope: !1732)
!1789 = !DILocation(line: 452, column: 39, scope: !1732)
!1790 = !{!794, !786, i64 524584}
!1791 = !DILocation(line: 453, column: 12, scope: !1732)
!1792 = !DILocation(line: 453, column: 5, scope: !1732)
!1793 = !DILocation(line: 3742, column: 19, scope: !1794, inlinedAt: !1795)
!1794 = distinct !DISubprogram(name: "clusterCloseAllSlots", scope: !3, file: !3, line: 3741, type: !293, isLocal: false, isDefinition: true, scopeLine: 3741, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!1795 = distinct !DILocation(line: 454, column: 5, scope: !1732)
!1796 = !DILocation(line: 3742, column: 12, scope: !1794, inlinedAt: !1795)
!1797 = !DILocation(line: 3742, column: 5, scope: !1794, inlinedAt: !1795)
!1798 = !DILocation(line: 3744, column: 19, scope: !1794, inlinedAt: !1795)
!1799 = !DILocation(line: 3744, column: 12, scope: !1794, inlinedAt: !1795)
!1800 = !DILocation(line: 3744, column: 5, scope: !1794, inlinedAt: !1795)
!1801 = !DILocation(line: 458, column: 34, scope: !1802)
!1802 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 458, column: 9)
!1803 = !DILocation(line: 458, column: 9, scope: !1802)
!1804 = !DILocation(line: 458, column: 54, scope: !1802)
!1805 = !DILocation(line: 458, column: 9, scope: !1732)
!1806 = !DILocation(line: 459, column: 9, scope: !1802)
!1807 = !DILocation(line: 462, column: 34, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 462, column: 9)
!1809 = !DILocation(line: 462, column: 9, scope: !1808)
!1810 = !DILocation(line: 462, column: 54, scope: !1808)
!1811 = !DILocation(line: 462, column: 9, scope: !1732)
!1812 = !DILocation(line: 695, column: 38, scope: !1112, inlinedAt: !1813)
!1813 = distinct !DILocation(line: 466, column: 13, scope: !1814)
!1814 = distinct !DILexicalBlock(scope: !1808, file: !3, line: 462, column: 64)
!1815 = !DILocation(line: 695, column: 52, scope: !1112, inlinedAt: !1813)
!1816 = !DILocation(line: 696, column: 25, scope: !1112, inlinedAt: !1813)
!1817 = !DILocation(line: 696, column: 18, scope: !1112, inlinedAt: !1813)
!1818 = !DILocation(line: 0, scope: !1125, inlinedAt: !1813)
!1819 = !DILocation(line: 701, column: 9, scope: !1125, inlinedAt: !1813)
!1820 = !DILocation(line: 702, column: 19, scope: !1112, inlinedAt: !1813)
!1821 = !DILocation(line: 702, column: 11, scope: !1112, inlinedAt: !1813)
!1822 = !DILocation(line: 702, column: 17, scope: !1112, inlinedAt: !1813)
!1823 = !DILocation(line: 703, column: 11, scope: !1112, inlinedAt: !1813)
!1824 = !DILocation(line: 703, column: 23, scope: !1112, inlinedAt: !1813)
!1825 = !DILocation(line: 704, column: 11, scope: !1112, inlinedAt: !1813)
!1826 = !DILocation(line: 704, column: 17, scope: !1112, inlinedAt: !1813)
!1827 = !DILocation(line: 705, column: 18, scope: !1112, inlinedAt: !1813)
!1828 = !DILocation(line: 705, column: 5, scope: !1112, inlinedAt: !1813)
!1829 = !DILocation(line: 706, column: 11, scope: !1112, inlinedAt: !1813)
!1830 = !DILocation(line: 706, column: 20, scope: !1112, inlinedAt: !1813)
!1831 = !DILocation(line: 707, column: 11, scope: !1112, inlinedAt: !1813)
!1832 = !DILocation(line: 707, column: 21, scope: !1112, inlinedAt: !1813)
!1833 = !DILocation(line: 708, column: 11, scope: !1112, inlinedAt: !1813)
!1834 = !DILocation(line: 708, column: 18, scope: !1112, inlinedAt: !1813)
!1835 = !DILocation(line: 709, column: 11, scope: !1112, inlinedAt: !1813)
!1836 = !DILocation(line: 709, column: 19, scope: !1112, inlinedAt: !1813)
!1837 = !DILocation(line: 710, column: 11, scope: !1112, inlinedAt: !1813)
!1838 = !DILocation(line: 710, column: 21, scope: !1112, inlinedAt: !1813)
!1839 = !DILocation(line: 711, column: 11, scope: !1112, inlinedAt: !1813)
!1840 = !DILocation(line: 711, column: 21, scope: !1112, inlinedAt: !1813)
!1841 = !DILocation(line: 712, column: 11, scope: !1112, inlinedAt: !1813)
!1842 = !DILocation(line: 712, column: 16, scope: !1112, inlinedAt: !1813)
!1843 = !DILocation(line: 713, column: 18, scope: !1112, inlinedAt: !1813)
!1844 = !DILocation(line: 713, column: 5, scope: !1112, inlinedAt: !1813)
!1845 = !DILocation(line: 714, column: 11, scope: !1112, inlinedAt: !1813)
!1846 = !DILocation(line: 714, column: 16, scope: !1112, inlinedAt: !1813)
!1847 = !DILocation(line: 715, column: 11, scope: !1112, inlinedAt: !1813)
!1848 = !DILocation(line: 715, column: 17, scope: !1112, inlinedAt: !1813)
!1849 = !DILocation(line: 716, column: 26, scope: !1112, inlinedAt: !1813)
!1850 = !DILocation(line: 716, column: 11, scope: !1112, inlinedAt: !1813)
!1851 = !DILocation(line: 716, column: 24, scope: !1112, inlinedAt: !1813)
!1852 = !DILocation(line: 717, column: 11, scope: !1112, inlinedAt: !1813)
!1853 = !DILocation(line: 717, column: 22, scope: !1112, inlinedAt: !1813)
!1854 = !DILocation(line: 718, column: 11, scope: !1112, inlinedAt: !1813)
!1855 = !DILocation(line: 718, column: 25, scope: !1112, inlinedAt: !1813)
!1856 = !DILocation(line: 719, column: 11, scope: !1112, inlinedAt: !1813)
!1857 = !DILocation(line: 719, column: 28, scope: !1112, inlinedAt: !1813)
!1858 = !DILocation(line: 720, column: 11, scope: !1112, inlinedAt: !1813)
!1859 = !DILocation(line: 720, column: 23, scope: !1112, inlinedAt: !1813)
!1860 = !DILocation(line: 721, column: 5, scope: !1112, inlinedAt: !1813)
!1861 = !DILocation(line: 465, column: 25, scope: !1814)
!1862 = !DILocation(line: 465, column: 41, scope: !1814)
!1863 = !DILocation(line: 465, column: 16, scope: !1814)
!1864 = !DILocation(line: 467, column: 9, scope: !1814)
!1865 = !DILocation(line: 469, column: 24, scope: !1814)
!1866 = !DILocation(line: 887, column: 33, scope: !848, inlinedAt: !1867)
!1867 = distinct !DILocation(line: 469, column: 9, scope: !1814)
!1868 = !DILocation(line: 890, column: 29, scope: !848, inlinedAt: !1867)
!1869 = !DILocation(line: 890, column: 38, scope: !848, inlinedAt: !1867)
!1870 = !DILocation(line: 891, column: 23, scope: !848, inlinedAt: !1867)
!1871 = !DILocation(line: 891, column: 13, scope: !848, inlinedAt: !1867)
!1872 = !DILocation(line: 891, column: 52, scope: !848, inlinedAt: !1867)
!1873 = !DILocation(line: 890, column: 14, scope: !848, inlinedAt: !1867)
!1874 = !DILocation(line: 888, column: 9, scope: !848, inlinedAt: !1867)
!1875 = !DILocation(line: 360, column: 33, scope: !1653, inlinedAt: !1876)
!1876 = distinct !DILocation(line: 472, column: 19, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 472, column: 9)
!1878 = !DILocation(line: 361, column: 9, scope: !1658, inlinedAt: !1876)
!1879 = !DILocation(line: 361, column: 37, scope: !1658, inlinedAt: !1876)
!1880 = !DILocation(line: 361, column: 9, scope: !1653, inlinedAt: !1876)
!1881 = !DILocation(line: 362, column: 9, scope: !1662, inlinedAt: !1876)
!1882 = !DILocation(line: 363, column: 9, scope: !1662, inlinedAt: !1876)
!1883 = !DILocation(line: 475, column: 22, scope: !1732)
!1884 = !{!785, !709, i64 508}
!1885 = !DILocation(line: 480, column: 16, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 480, column: 9)
!1887 = !{!785, !709, i64 216}
!1888 = !DILocation(line: 480, column: 21, scope: !1886)
!1889 = !DILocation(line: 480, column: 9, scope: !1732)
!1890 = !DILocation(line: 481, column: 9, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1886, file: !3, line: 480, column: 50)
!1892 = !DILocation(line: 486, column: 9, scope: !1891)
!1893 = !DILocation(line: 489, column: 33, scope: !1739)
!1894 = !DILocation(line: 489, column: 9, scope: !1739)
!1895 = !DILocation(line: 490, column: 39, scope: !1739)
!1896 = !DILocation(line: 489, column: 9, scope: !1732)
!1897 = !DILocation(line: 494, column: 13, scope: !1738)
!1898 = !DILocation(line: 496, column: 32, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !1900, file: !3, line: 496, column: 9)
!1900 = distinct !DILexicalBlock(scope: !1738, file: !3, line: 496, column: 9)
!1901 = !DILocation(line: 496, column: 23, scope: !1899)
!1902 = !DILocation(line: 496, column: 9, scope: !1900)
!1903 = !DILocation(line: 492, column: 9, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1739, file: !3, line: 491, column: 5)
!1905 = distinct !{!1905, !1902, !1906}
!1906 = !DILocation(line: 501, column: 9, scope: !1900)
!1907 = !DILocation(line: 497, column: 42, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1909, file: !3, line: 497, column: 17)
!1909 = distinct !DILexicalBlock(scope: !1899, file: !3, line: 496, column: 48)
!1910 = !{!785, !758, i64 72}
!1911 = !DILocation(line: 497, column: 46, scope: !1908)
!1912 = !DILocation(line: 497, column: 17, scope: !1908)
!1913 = !DILocation(line: 498, column: 45, scope: !1908)
!1914 = !DILocation(line: 496, column: 44, scope: !1899)
!1915 = !DILocation(line: 497, column: 17, scope: !1909)
!1916 = !DILocation(line: 499, column: 21, scope: !1908)
!1917 = !DILocation(line: 505, column: 37, scope: !1732)
!1918 = !DILocation(line: 505, column: 12, scope: !1732)
!1919 = !DILocation(line: 505, column: 21, scope: !1732)
!1920 = !DILocation(line: 505, column: 35, scope: !1732)
!1921 = !{!794, !758, i64 524328}
!1922 = !DILocation(line: 506, column: 12, scope: !1732)
!1923 = !DILocation(line: 506, column: 5, scope: !1732)
!1924 = !DILocation(line: 511, column: 27, scope: !1732)
!1925 = !DILocation(line: 511, column: 5, scope: !1732)
!1926 = !DILocation(line: 511, column: 13, scope: !1732)
!1927 = !DILocation(line: 511, column: 18, scope: !1732)
!1928 = !DILocation(line: 512, column: 32, scope: !1732)
!1929 = !DILocation(line: 512, column: 13, scope: !1732)
!1930 = !DILocation(line: 512, column: 19, scope: !1732)
!1931 = !DILocation(line: 513, column: 16, scope: !1932)
!1932 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 513, column: 9)
!1933 = !{!785, !709, i64 2976}
!1934 = !DILocation(line: 513, column: 9, scope: !1932)
!1935 = !DILocation(line: 513, column: 9, scope: !1732)
!1936 = !DILocation(line: 514, column: 22, scope: !1932)
!1937 = !DILocation(line: 514, column: 9, scope: !1932)
!1938 = !DILocation(line: 515, column: 16, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 515, column: 9)
!1940 = !{!785, !709, i64 2980}
!1941 = !DILocation(line: 515, column: 9, scope: !1939)
!1942 = !DILocation(line: 515, column: 9, scope: !1732)
!1943 = !DILocation(line: 516, column: 23, scope: !1939)
!1944 = !DILocation(line: 516, column: 9, scope: !1939)
!1945 = !DILocation(line: 518, column: 12, scope: !1732)
!1946 = !DILocation(line: 3269, column: 21, scope: !1947, inlinedAt: !1948)
!1947 = distinct !DISubprogram(name: "resetManualFailover", scope: !3, file: !3, line: 3264, type: !293, isLocal: false, isDefinition: true, scopeLine: 3264, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!1948 = distinct !DILocation(line: 519, column: 5, scope: !1732)
!1949 = !DILocation(line: 3269, column: 28, scope: !1947, inlinedAt: !1948)
!1950 = !{!794, !786, i64 524376}
!1951 = !DILocation(line: 3270, column: 21, scope: !1947, inlinedAt: !1948)
!1952 = !DILocation(line: 3270, column: 34, scope: !1947, inlinedAt: !1948)
!1953 = !{!794, !709, i64 524400}
!1954 = !DILocation(line: 3271, column: 21, scope: !1947, inlinedAt: !1948)
!1955 = !DILocation(line: 3271, column: 30, scope: !1947, inlinedAt: !1948)
!1956 = !{!794, !758, i64 524384}
!1957 = !DILocation(line: 3272, column: 21, scope: !1947, inlinedAt: !1948)
!1958 = !DILocation(line: 3272, column: 38, scope: !1947, inlinedAt: !1948)
!1959 = !{!794, !786, i64 524392}
!1960 = !DILocation(line: 419, column: 28, scope: !1700, inlinedAt: !1961)
!1961 = distinct !DILocation(line: 520, column: 5, scope: !1732)
!1962 = !DILocation(line: 419, column: 9, scope: !1700, inlinedAt: !1961)
!1963 = !DILocation(line: 420, column: 29, scope: !1700, inlinedAt: !1961)
!1964 = !DILocation(line: 420, column: 22, scope: !1700, inlinedAt: !1961)
!1965 = !DILocation(line: 420, column: 9, scope: !1700, inlinedAt: !1961)
!1966 = !DILocation(line: 422, column: 19, scope: !1700, inlinedAt: !1961)
!1967 = !DILocation(line: 423, column: 19, scope: !1700, inlinedAt: !1961)
!1968 = !DILocation(line: 424, column: 23, scope: !1714, inlinedAt: !1961)
!1969 = !DILocation(line: 424, column: 9, scope: !1700, inlinedAt: !1961)
!1970 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !1971)
!1971 = distinct !DILocation(line: 425, column: 9, scope: !1721, inlinedAt: !1961)
!1972 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !1971)
!1973 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !1971)
!1974 = !DILocation(line: 427, column: 5, scope: !1721, inlinedAt: !1961)
!1975 = !DILocation(line: 521, column: 1, scope: !1732)
!1976 = !DILocation(line: 3742, column: 19, scope: !1794)
!1977 = !DILocation(line: 3742, column: 12, scope: !1794)
!1978 = !DILocation(line: 3742, column: 5, scope: !1794)
!1979 = !DILocation(line: 3744, column: 19, scope: !1794)
!1980 = !DILocation(line: 3744, column: 12, scope: !1794)
!1981 = !DILocation(line: 3744, column: 5, scope: !1794)
!1982 = !DILocation(line: 3746, column: 1, scope: !1794)
!1983 = distinct !DISubprogram(name: "clusterAcceptHandler", scope: !3, file: !3, line: 616, type: !1984, isLocal: false, isDefinition: true, scopeLine: 616, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2046)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !1986, !177, !6, !177}
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventLoop", file: !1988, line: 109, baseType: !1989)
!1988 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/ae.h", directory: "/root/.unikraft/apps/redis/build")
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeEventLoop", file: !1988, line: 97, size: 640, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994, !1995, !2009, !2016, !2038, !2039, !2040, !2045}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "maxfd", scope: !1989, file: !1988, line: 98, baseType: !177, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "setsize", scope: !1989, file: !1988, line: 99, baseType: !177, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventNextId", scope: !1989, file: !1988, line: 100, baseType: !186, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "lastTime", scope: !1989, file: !1988, line: 101, baseType: !288, size: 64, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1989, file: !1988, line: 102, baseType: !1996, size: 64, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileEvent", file: !1988, line: 76, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFileEvent", file: !1988, line: 71, size: 256, elements: !1999)
!1999 = !{!2000, !2001, !2007, !2008}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1998, file: !1988, line: 72, baseType: !177, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "rfileProc", scope: !1998, file: !1988, line: 73, baseType: !2002, size: 64, offset: 64)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileProc", file: !1988, line: 65, baseType: !2004)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{null, !2006, !177, !6, !177}
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "wfileProc", scope: !1998, file: !1988, line: 74, baseType: !2002, size: 64, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !1998, file: !1988, line: 75, baseType: !6, size: 64, offset: 192)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "fired", scope: !1989, file: !1988, line: 103, baseType: !2010, size: 64, offset: 256)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFiredEvent", file: !1988, line: 94, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFiredEvent", file: !1988, line: 91, size: 64, elements: !2013)
!2013 = !{!2014, !2015}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2012, file: !1988, line: 92, baseType: !177, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2012, file: !1988, line: 93, baseType: !177, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventHead", scope: !1989, file: !1988, line: 104, baseType: !2017, size: 64, offset: 320)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeEvent", file: !1988, line: 88, baseType: !2019)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeTimeEvent", file: !1988, line: 79, size: 512, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024, !2029, !2034, !2035, !2037}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2019, file: !1988, line: 80, baseType: !186, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "when_sec", scope: !2019, file: !1988, line: 81, baseType: !13, size: 64, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "when_ms", scope: !2019, file: !1988, line: 82, baseType: !13, size: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "timeProc", scope: !2019, file: !1988, line: 83, baseType: !2025, size: 64, offset: 192)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeProc", file: !1988, line: 66, baseType: !2027)
!2027 = !DISubroutineType(types: !2028)
!2028 = !{!177, !2006, !186, !6}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "finalizerProc", scope: !2019, file: !1988, line: 84, baseType: !2030, size: 64, offset: 256)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventFinalizerProc", file: !1988, line: 67, baseType: !2032)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{null, !2006, !6}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !2019, file: !1988, line: 85, baseType: !6, size: 64, offset: 320)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2019, file: !1988, line: 86, baseType: !2036, size: 64, offset: 384)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2019, file: !1988, line: 87, baseType: !2036, size: 64, offset: 448)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1989, file: !1988, line: 105, baseType: !177, size: 32, offset: 384)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "apidata", scope: !1989, file: !1988, line: 106, baseType: !6, size: 64, offset: 448)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "beforesleep", scope: !1989, file: !1988, line: 107, baseType: !2041, size: 64, offset: 512)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeBeforeSleepProc", file: !1988, line: 68, baseType: !2043)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{null, !2006}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "aftersleep", scope: !1989, file: !1988, line: 108, baseType: !2041, size: 64, offset: 576)
!2046 = !{!2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055}
!2047 = !DILocalVariable(name: "el", arg: 1, scope: !1983, file: !3, line: 616, type: !1986)
!2048 = !DILocalVariable(name: "fd", arg: 2, scope: !1983, file: !3, line: 616, type: !177)
!2049 = !DILocalVariable(name: "privdata", arg: 3, scope: !1983, file: !3, line: 616, type: !6)
!2050 = !DILocalVariable(name: "mask", arg: 4, scope: !1983, file: !3, line: 616, type: !177)
!2051 = !DILocalVariable(name: "cport", scope: !1983, file: !3, line: 617, type: !177)
!2052 = !DILocalVariable(name: "cfd", scope: !1983, file: !3, line: 617, type: !177)
!2053 = !DILocalVariable(name: "max", scope: !1983, file: !3, line: 618, type: !177)
!2054 = !DILocalVariable(name: "cip", scope: !1983, file: !3, line: 619, type: !85)
!2055 = !DILocalVariable(name: "link", scope: !1983, file: !3, line: 620, type: !179)
!2056 = !DILocation(line: 616, column: 40, scope: !1983)
!2057 = !DILocation(line: 616, column: 48, scope: !1983)
!2058 = !DILocation(line: 616, column: 58, scope: !1983)
!2059 = !DILocation(line: 616, column: 72, scope: !1983)
!2060 = !DILocation(line: 617, column: 5, scope: !1983)
!2061 = !DILocation(line: 618, column: 9, scope: !1983)
!2062 = !DILocation(line: 619, column: 5, scope: !1983)
!2063 = !DILocation(line: 619, column: 10, scope: !1983)
!2064 = !DILocation(line: 627, column: 16, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !1983, file: !3, line: 627, column: 9)
!2066 = !{!785, !758, i64 2464}
!2067 = !DILocation(line: 627, column: 27, scope: !2065)
!2068 = !DILocation(line: 627, column: 45, scope: !2065)
!2069 = !DILocation(line: 627, column: 38, scope: !2065)
!2070 = !DILocation(line: 627, column: 35, scope: !2065)
!2071 = !DILocation(line: 617, column: 9, scope: !1983)
!2072 = !DILocation(line: 630, column: 15, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !1983, file: !3, line: 629, column: 18)
!2074 = !DILocation(line: 617, column: 16, scope: !1983)
!2075 = !DILocation(line: 631, column: 17, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !2073, file: !3, line: 631, column: 13)
!2077 = !DILocation(line: 631, column: 13, scope: !2073)
!2078 = !DILocation(line: 632, column: 17, scope: !2079)
!2079 = distinct !DILexicalBlock(scope: !2080, file: !3, line: 632, column: 17)
!2080 = distinct !DILexicalBlock(scope: !2076, file: !3, line: 631, column: 30)
!2081 = !DILocation(line: 632, column: 23, scope: !2079)
!2082 = !DILocation(line: 632, column: 17, scope: !2080)
!2083 = !DILocation(line: 633, column: 17, scope: !2079)
!2084 = !DILocation(line: 637, column: 9, scope: !2073)
!2085 = !DILocation(line: 638, column: 9, scope: !2073)
!2086 = !DILocation(line: 641, column: 66, scope: !2073)
!2087 = !DILocation(line: 641, column: 9, scope: !2073)
!2088 = !DILocalVariable(name: "node", arg: 1, scope: !2089, file: !3, line: 590, type: !378)
!2089 = distinct !DISubprogram(name: "createClusterLink", scope: !3, file: !3, line: 590, type: !2090, isLocal: false, isDefinition: true, scopeLine: 590, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2092)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{!179, !378}
!2092 = !{!2088, !2093}
!2093 = !DILocalVariable(name: "link", scope: !2089, file: !3, line: 591, type: !179)
!2094 = !DILocation(line: 590, column: 45, scope: !2089, inlinedAt: !2095)
!2095 = distinct !DILocation(line: 647, column: 16, scope: !2073)
!2096 = !DILocation(line: 591, column: 25, scope: !2089, inlinedAt: !2095)
!2097 = !DILocation(line: 591, column: 18, scope: !2089, inlinedAt: !2095)
!2098 = !DILocation(line: 592, column: 19, scope: !2089, inlinedAt: !2095)
!2099 = !DILocation(line: 592, column: 11, scope: !2089, inlinedAt: !2095)
!2100 = !DILocation(line: 592, column: 17, scope: !2089, inlinedAt: !2095)
!2101 = !{!2102, !786, i64 0}
!2102 = !{!"clusterLink", !786, i64 0, !709, i64 8, !758, i64 16, !758, i64 24, !758, i64 32}
!2103 = !DILocation(line: 593, column: 20, scope: !2089, inlinedAt: !2095)
!2104 = !DILocation(line: 593, column: 11, scope: !2089, inlinedAt: !2095)
!2105 = !DILocation(line: 593, column: 18, scope: !2089, inlinedAt: !2095)
!2106 = !{!2102, !758, i64 16}
!2107 = !DILocation(line: 594, column: 20, scope: !2089, inlinedAt: !2095)
!2108 = !DILocation(line: 594, column: 11, scope: !2089, inlinedAt: !2095)
!2109 = !DILocation(line: 594, column: 18, scope: !2089, inlinedAt: !2095)
!2110 = !{!2102, !758, i64 24}
!2111 = !DILocation(line: 595, column: 11, scope: !2089, inlinedAt: !2095)
!2112 = !DILocation(line: 595, column: 16, scope: !2089, inlinedAt: !2095)
!2113 = !{!2102, !758, i64 32}
!2114 = !DILocation(line: 596, column: 11, scope: !2089, inlinedAt: !2095)
!2115 = !DILocation(line: 620, column: 18, scope: !1983)
!2116 = !DILocation(line: 648, column: 18, scope: !2073)
!2117 = !{!2102, !709, i64 8}
!2118 = !DILocation(line: 649, column: 34, scope: !2073)
!2119 = !DILocation(line: 649, column: 9, scope: !2073)
!2120 = !DILocation(line: 629, column: 14, scope: !1983)
!2121 = !DILocation(line: 629, column: 5, scope: !1983)
!2122 = distinct !{!2122, !2121, !2123}
!2123 = !DILocation(line: 650, column: 5, scope: !1983)
!2124 = !DILocation(line: 651, column: 1, scope: !1983)
!2125 = !DILocation(line: 3265, column: 16, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !1947, file: !3, line: 3265, column: 9)
!2127 = !DILocation(line: 3265, column: 25, scope: !2126)
!2128 = !DILocation(line: 3265, column: 9, scope: !2126)
!2129 = !DILocation(line: 3265, column: 32, scope: !2126)
!2130 = !DILocation(line: 3265, column: 35, scope: !2126)
!2131 = !DILocation(line: 3265, column: 9, scope: !1947)
!2132 = !DILocation(line: 3266, column: 39, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2126, file: !3, line: 3265, column: 55)
!2134 = !{!785, !786, i64 576}
!2135 = !DILocation(line: 3267, column: 9, scope: !2133)
!2136 = !DILocation(line: 3268, column: 5, scope: !2133)
!2137 = !DILocation(line: 3269, column: 12, scope: !1947)
!2138 = !DILocation(line: 3269, column: 21, scope: !1947)
!2139 = !DILocation(line: 3269, column: 28, scope: !1947)
!2140 = !DILocation(line: 3270, column: 21, scope: !1947)
!2141 = !DILocation(line: 3270, column: 34, scope: !1947)
!2142 = !DILocation(line: 3271, column: 21, scope: !1947)
!2143 = !DILocation(line: 3271, column: 30, scope: !1947)
!2144 = !DILocation(line: 3272, column: 21, scope: !1947)
!2145 = !DILocation(line: 3272, column: 38, scope: !1947)
!2146 = !DILocation(line: 3273, column: 1, scope: !1947)
!2147 = distinct !DISubprogram(name: "clusterReset", scope: !3, file: !3, line: 532, type: !282, isLocal: false, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2148)
!2148 = !{!2149, !2150, !2151, !2152, !2153, !2155}
!2149 = !DILocalVariable(name: "hard", arg: 1, scope: !2147, file: !3, line: 532, type: !177)
!2150 = !DILocalVariable(name: "di", scope: !2147, file: !3, line: 533, type: !297)
!2151 = !DILocalVariable(name: "de", scope: !2147, file: !3, line: 534, type: !340)
!2152 = !DILocalVariable(name: "j", scope: !2147, file: !3, line: 535, type: !177)
!2153 = !DILocalVariable(name: "node", scope: !2154, file: !3, line: 554, type: !378)
!2154 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 553, column: 40)
!2155 = !DILocalVariable(name: "oldname", scope: !2156, file: !3, line: 563, type: !189)
!2156 = distinct !DILexicalBlock(scope: !2157, file: !3, line: 562, column: 15)
!2157 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 562, column: 9)
!2158 = !DILocation(line: 532, column: 23, scope: !2147)
!2159 = !DILocation(line: 538, column: 9, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 538, column: 9)
!2161 = !DILocation(line: 538, column: 9, scope: !2147)
!2162 = !DILocation(line: 539, column: 9, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !2160, file: !3, line: 538, column: 30)
!2164 = !DILocation(line: 540, column: 9, scope: !2163)
!2165 = !DILocation(line: 541, column: 9, scope: !2163)
!2166 = !DILocation(line: 542, column: 5, scope: !2163)
!2167 = !DILocation(line: 3742, column: 19, scope: !1794, inlinedAt: !2168)
!2168 = distinct !DILocation(line: 545, column: 5, scope: !2147)
!2169 = !DILocation(line: 3742, column: 12, scope: !1794, inlinedAt: !2168)
!2170 = !DILocation(line: 3742, column: 5, scope: !1794, inlinedAt: !2168)
!2171 = !DILocation(line: 3744, column: 19, scope: !1794, inlinedAt: !2168)
!2172 = !DILocation(line: 3744, column: 12, scope: !1794, inlinedAt: !2168)
!2173 = !DILocation(line: 3744, column: 5, scope: !1794, inlinedAt: !2168)
!2174 = !DILocation(line: 3265, column: 16, scope: !2126, inlinedAt: !2175)
!2175 = distinct !DILocation(line: 546, column: 5, scope: !2147)
!2176 = !DILocation(line: 3265, column: 25, scope: !2126, inlinedAt: !2175)
!2177 = !DILocation(line: 3265, column: 9, scope: !2126, inlinedAt: !2175)
!2178 = !DILocation(line: 3265, column: 32, scope: !2126, inlinedAt: !2175)
!2179 = !DILocation(line: 3265, column: 35, scope: !2126, inlinedAt: !2175)
!2180 = !DILocation(line: 3265, column: 9, scope: !1947, inlinedAt: !2175)
!2181 = !DILocation(line: 3266, column: 39, scope: !2133, inlinedAt: !2175)
!2182 = !DILocation(line: 3267, column: 9, scope: !2133, inlinedAt: !2175)
!2183 = !DILocation(line: 3268, column: 5, scope: !2133, inlinedAt: !2175)
!2184 = !DILocation(line: 3269, column: 12, scope: !1947, inlinedAt: !2175)
!2185 = !DILocation(line: 3269, column: 21, scope: !1947, inlinedAt: !2175)
!2186 = !DILocation(line: 3269, column: 28, scope: !1947, inlinedAt: !2175)
!2187 = !DILocation(line: 3270, column: 21, scope: !1947, inlinedAt: !2175)
!2188 = !DILocation(line: 3270, column: 34, scope: !1947, inlinedAt: !2175)
!2189 = !DILocation(line: 3271, column: 21, scope: !1947, inlinedAt: !2175)
!2190 = !DILocation(line: 3271, column: 30, scope: !1947, inlinedAt: !2175)
!2191 = !DILocation(line: 3272, column: 21, scope: !1947, inlinedAt: !2175)
!2192 = !DILocation(line: 3272, column: 38, scope: !1947, inlinedAt: !2175)
!2193 = !DILocation(line: 535, column: 9, scope: !2147)
!2194 = !DILocation(line: 549, column: 5, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 549, column: 5)
!2196 = !DILocalVariable(name: "slot", arg: 1, scope: !2197, file: !3, line: 3716, type: !177)
!2197 = distinct !DISubprogram(name: "clusterDelSlot", scope: !3, file: !3, line: 3716, type: !1449, isLocal: false, isDefinition: true, scopeLine: 3716, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2198)
!2198 = !{!2196, !2199}
!2199 = !DILocalVariable(name: "n", scope: !2197, file: !3, line: 3717, type: !378)
!2200 = !DILocation(line: 3716, column: 24, scope: !2197, inlinedAt: !2201)
!2201 = distinct !DILocation(line: 549, column: 41, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2195, file: !3, line: 549, column: 5)
!2203 = !DILocation(line: 3717, column: 22, scope: !2197, inlinedAt: !2201)
!2204 = !DILocation(line: 3717, column: 18, scope: !2197, inlinedAt: !2201)
!2205 = !DILocation(line: 3719, column: 10, scope: !2206, inlinedAt: !2201)
!2206 = distinct !DILexicalBlock(scope: !2197, file: !3, line: 3719, column: 9)
!2207 = !DILocation(line: 3719, column: 9, scope: !2197, inlinedAt: !2201)
!2208 = !DILocalVariable(name: "n", arg: 1, scope: !2209, file: !3, line: 3690, type: !378)
!2209 = distinct !DISubprogram(name: "clusterNodeClearSlotBit", scope: !3, file: !3, line: 3690, type: !1220, isLocal: false, isDefinition: true, scopeLine: 3690, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2210)
!2210 = !{!2208, !2211, !2212}
!2211 = !DILocalVariable(name: "slot", arg: 2, scope: !2209, file: !3, line: 3690, type: !177)
!2212 = !DILocalVariable(name: "old", scope: !2209, file: !3, line: 3691, type: !177)
!2213 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !2214)
!2214 = distinct !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !2201)
!2215 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !2214)
!2216 = !DILocalVariable(name: "bitmap", arg: 1, scope: !2217, file: !3, line: 3627, type: !246)
!2217 = distinct !DISubprogram(name: "bitmapTestBit", scope: !3, file: !3, line: 3627, type: !2218, isLocal: false, isDefinition: true, scopeLine: 3627, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2220)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!177, !246, !177}
!2220 = !{!2216, !2221, !2222, !2223}
!2221 = !DILocalVariable(name: "pos", arg: 2, scope: !2217, file: !3, line: 3627, type: !177)
!2222 = !DILocalVariable(name: "byte", scope: !2217, file: !3, line: 3628, type: !8)
!2223 = !DILocalVariable(name: "bit", scope: !2217, file: !3, line: 3629, type: !177)
!2224 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !2225)
!2225 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !2214)
!2226 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !2225)
!2227 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !2225)
!2228 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !2225)
!2229 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !2225)
!2230 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !2225)
!2231 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !2225)
!2232 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !2225)
!2233 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !2225)
!2234 = !DILocalVariable(name: "bitmap", arg: 1, scope: !2235, file: !3, line: 3641, type: !246)
!2235 = distinct !DISubprogram(name: "bitmapClearBit", scope: !3, file: !3, line: 3641, type: !2236, isLocal: false, isDefinition: true, scopeLine: 3641, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2238)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{null, !246, !177}
!2238 = !{!2234, !2239, !2240, !2241}
!2239 = !DILocalVariable(name: "pos", arg: 2, scope: !2235, file: !3, line: 3641, type: !177)
!2240 = !DILocalVariable(name: "byte", scope: !2235, file: !3, line: 3642, type: !8)
!2241 = !DILocalVariable(name: "bit", scope: !2235, file: !3, line: 3643, type: !177)
!2242 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !2243)
!2243 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !2214)
!2244 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !2243)
!2245 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !2243)
!2246 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !2243)
!2247 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !2243)
!2248 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !2214)
!2249 = !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !2201)
!2250 = !DILocation(line: 3693, column: 17, scope: !2251, inlinedAt: !2214)
!2251 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 3693, column: 9)
!2252 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !2214)
!2253 = !DILocation(line: 3721, column: 12, scope: !2197, inlinedAt: !2201)
!2254 = !DILocation(line: 3721, column: 5, scope: !2197, inlinedAt: !2201)
!2255 = !DILocation(line: 3721, column: 33, scope: !2197, inlinedAt: !2201)
!2256 = !DILocation(line: 0, scope: !2147)
!2257 = !DILocation(line: 3722, column: 5, scope: !2197, inlinedAt: !2201)
!2258 = !DILocation(line: 549, column: 37, scope: !2202)
!2259 = !DILocation(line: 549, column: 19, scope: !2202)
!2260 = distinct !{!2260, !2194, !2261}
!2261 = !DILocation(line: 549, column: 57, scope: !2195)
!2262 = !DILocation(line: 552, column: 46, scope: !2147)
!2263 = !DILocation(line: 552, column: 10, scope: !2147)
!2264 = !DILocation(line: 533, column: 19, scope: !2147)
!2265 = !DILocation(line: 553, column: 17, scope: !2147)
!2266 = !DILocation(line: 534, column: 16, scope: !2147)
!2267 = !DILocation(line: 553, column: 31, scope: !2147)
!2268 = !DILocation(line: 553, column: 5, scope: !2147)
!2269 = !DILocation(line: 554, column: 29, scope: !2154)
!2270 = !DILocation(line: 554, column: 22, scope: !2154)
!2271 = !DILocation(line: 556, column: 21, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2154, file: !3, line: 556, column: 13)
!2273 = !DILocation(line: 556, column: 18, scope: !2272)
!2274 = !DILocation(line: 556, column: 13, scope: !2154)
!2275 = distinct !{!2275, !2268, !2276}
!2276 = !DILocation(line: 558, column: 5, scope: !2147)
!2277 = !DILocation(line: 557, column: 9, scope: !2154)
!2278 = !DILocation(line: 559, column: 5, scope: !2147)
!2279 = !DILocation(line: 562, column: 9, scope: !2157)
!2280 = !DILocation(line: 562, column: 9, scope: !2147)
!2281 = !DILocation(line: 565, column: 16, scope: !2156)
!2282 = !DILocation(line: 565, column: 25, scope: !2156)
!2283 = !DILocation(line: 565, column: 38, scope: !2156)
!2284 = !DILocation(line: 566, column: 25, scope: !2156)
!2285 = !DILocation(line: 566, column: 39, scope: !2156)
!2286 = !DILocation(line: 567, column: 9, scope: !2156)
!2287 = !DILocation(line: 567, column: 17, scope: !2156)
!2288 = !DILocation(line: 567, column: 29, scope: !2156)
!2289 = !DILocation(line: 568, column: 9, scope: !2156)
!2290 = !DILocation(line: 572, column: 29, scope: !2156)
!2291 = !DILocation(line: 572, column: 19, scope: !2156)
!2292 = !DILocation(line: 563, column: 13, scope: !2156)
!2293 = !DILocation(line: 573, column: 27, scope: !2156)
!2294 = !DILocation(line: 573, column: 36, scope: !2156)
!2295 = !DILocation(line: 573, column: 9, scope: !2156)
!2296 = !DILocation(line: 574, column: 9, scope: !2156)
!2297 = !DILocation(line: 575, column: 27, scope: !2156)
!2298 = !DILocation(line: 575, column: 9, scope: !2156)
!2299 = !DILocation(line: 576, column: 24, scope: !2156)
!2300 = !DILocation(line: 887, column: 33, scope: !848, inlinedAt: !2301)
!2301 = distinct !DILocation(line: 576, column: 9, scope: !2156)
!2302 = !DILocation(line: 890, column: 29, scope: !848, inlinedAt: !2301)
!2303 = !DILocation(line: 890, column: 38, scope: !848, inlinedAt: !2301)
!2304 = !DILocation(line: 891, column: 23, scope: !848, inlinedAt: !2301)
!2305 = !DILocation(line: 891, column: 13, scope: !848, inlinedAt: !2301)
!2306 = !DILocation(line: 891, column: 52, scope: !848, inlinedAt: !2301)
!2307 = !DILocation(line: 890, column: 14, scope: !848, inlinedAt: !2301)
!2308 = !DILocation(line: 888, column: 9, scope: !848, inlinedAt: !2301)
!2309 = !DILocation(line: 577, column: 63, scope: !2156)
!2310 = !DILocation(line: 577, column: 9, scope: !2156)
!2311 = !DILocation(line: 578, column: 5, scope: !2156)
!2312 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !2313)
!2313 = distinct !DILocation(line: 581, column: 5, scope: !2147)
!2314 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !2313)
!2315 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !2313)
!2316 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !2313)
!2317 = !DILocation(line: 584, column: 1, scope: !2147)
!2318 = distinct !DISubprogram(name: "clusterSetNodeAsMaster", scope: !3, file: !3, line: 1504, type: !2319, isLocal: false, isDefinition: true, scopeLine: 1504, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2321)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{null, !378}
!2321 = !{!2322}
!2322 = !DILocalVariable(name: "n", arg: 1, scope: !2318, file: !3, line: 1504, type: !378)
!2323 = !DILocation(line: 1504, column: 42, scope: !2318)
!2324 = !DILocation(line: 1505, column: 9, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2318, file: !3, line: 1505, column: 9)
!2326 = !DILocation(line: 1505, column: 9, scope: !2318)
!2327 = !DILocation(line: 1507, column: 12, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2318, file: !3, line: 1507, column: 9)
!2329 = !DILocation(line: 1507, column: 9, scope: !2328)
!2330 = !DILocation(line: 1507, column: 9, scope: !2318)
!2331 = !DILocalVariable(name: "master", arg: 1, scope: !2332, file: !3, line: 820, type: !378)
!2332 = distinct !DISubprogram(name: "clusterNodeRemoveSlave", scope: !3, file: !3, line: 820, type: !1015, isLocal: false, isDefinition: true, scopeLine: 820, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2333)
!2333 = !{!2331, !2334, !2335, !2336}
!2334 = !DILocalVariable(name: "slave", arg: 2, scope: !2332, file: !3, line: 820, type: !378)
!2335 = !DILocalVariable(name: "j", scope: !2332, file: !3, line: 821, type: !177)
!2336 = !DILocalVariable(name: "remaining_slaves", scope: !2337, file: !3, line: 826, type: !177)
!2337 = distinct !DILexicalBlock(scope: !2338, file: !3, line: 825, column: 44)
!2338 = distinct !DILexicalBlock(scope: !2339, file: !3, line: 825, column: 17)
!2339 = distinct !DILexicalBlock(scope: !2340, file: !3, line: 824, column: 41)
!2340 = distinct !DILexicalBlock(scope: !2341, file: !3, line: 824, column: 13)
!2341 = distinct !DILexicalBlock(scope: !2342, file: !3, line: 823, column: 45)
!2342 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 823, column: 5)
!2343 = distinct !DILexicalBlock(scope: !2332, file: !3, line: 823, column: 5)
!2344 = !DILocation(line: 820, column: 41, scope: !2332, inlinedAt: !2345)
!2345 = distinct !DILocation(line: 1508, column: 9, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 1507, column: 21)
!2347 = !DILocation(line: 820, column: 62, scope: !2332, inlinedAt: !2345)
!2348 = !DILocation(line: 821, column: 9, scope: !2332, inlinedAt: !2345)
!2349 = !DILocation(line: 823, column: 10, scope: !2343, inlinedAt: !2345)
!2350 = !DILocation(line: 0, scope: !2342, inlinedAt: !2345)
!2351 = !DILocation(line: 823, column: 19, scope: !2342, inlinedAt: !2345)
!2352 = !DILocation(line: 823, column: 5, scope: !2343, inlinedAt: !2345)
!2353 = !DILocation(line: 824, column: 21, scope: !2340, inlinedAt: !2345)
!2354 = !DILocation(line: 824, column: 13, scope: !2340, inlinedAt: !2345)
!2355 = !DILocation(line: 824, column: 31, scope: !2340, inlinedAt: !2345)
!2356 = !DILocation(line: 824, column: 13, scope: !2341, inlinedAt: !2345)
!2357 = distinct !{!2357, !2358, !2359}
!2358 = !DILocation(line: 823, column: 5, scope: !2343)
!2359 = !DILocation(line: 835, column: 5, scope: !2343)
!2360 = !DILocation(line: 825, column: 23, scope: !2338, inlinedAt: !2345)
!2361 = !DILocation(line: 825, column: 17, scope: !2339, inlinedAt: !2345)
!2362 = !DILocation(line: 826, column: 64, scope: !2337, inlinedAt: !2345)
!2363 = !DILocation(line: 826, column: 21, scope: !2337, inlinedAt: !2345)
!2364 = !DILocation(line: 827, column: 25, scope: !2337, inlinedAt: !2345)
!2365 = !DILocation(line: 827, column: 56, scope: !2337, inlinedAt: !2345)
!2366 = !DILocation(line: 827, column: 42, scope: !2337, inlinedAt: !2345)
!2367 = !DILocation(line: 828, column: 52, scope: !2337, inlinedAt: !2345)
!2368 = !DILocation(line: 828, column: 50, scope: !2337, inlinedAt: !2345)
!2369 = !DILocation(line: 827, column: 17, scope: !2337, inlinedAt: !2345)
!2370 = !DILocation(line: 830, column: 30, scope: !2339, inlinedAt: !2345)
!2371 = !DILocation(line: 829, column: 13, scope: !2337, inlinedAt: !2345)
!2372 = !DILocation(line: 831, column: 35, scope: !2373, inlinedAt: !2345)
!2373 = distinct !DILexicalBlock(scope: !2339, file: !3, line: 831, column: 17)
!2374 = !DILocation(line: 831, column: 17, scope: !2339, inlinedAt: !2345)
!2375 = !DILocation(line: 832, column: 25, scope: !2373, inlinedAt: !2345)
!2376 = !DILocation(line: 832, column: 31, scope: !2373, inlinedAt: !2345)
!2377 = !DILocation(line: 832, column: 17, scope: !2373, inlinedAt: !2345)
!2378 = !DILocation(line: 1509, column: 18, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2346, file: !3, line: 1509, column: 13)
!2380 = !DILocation(line: 1509, column: 15, scope: !2379)
!2381 = !DILocation(line: 0, scope: !2379)
!2382 = !DILocation(line: 1509, column: 13, scope: !2346)
!2383 = !DILocation(line: 1509, column: 35, scope: !2379)
!2384 = !DILocation(line: 1509, column: 26, scope: !2379)
!2385 = !DILocation(line: 1511, column: 14, scope: !2318)
!2386 = !DILocation(line: 1512, column: 14, scope: !2318)
!2387 = !DILocation(line: 1513, column: 16, scope: !2318)
!2388 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !2389)
!2389 = distinct !DILocation(line: 1516, column: 5, scope: !2318)
!2390 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !2389)
!2391 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !2389)
!2392 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !2389)
!2393 = !DILocation(line: 1518, column: 1, scope: !2318)
!2394 = !DILocation(line: 3716, column: 24, scope: !2197)
!2395 = !DILocation(line: 3717, column: 29, scope: !2197)
!2396 = !DILocation(line: 3717, column: 22, scope: !2197)
!2397 = !DILocation(line: 3717, column: 18, scope: !2197)
!2398 = !DILocation(line: 3719, column: 10, scope: !2206)
!2399 = !DILocation(line: 3719, column: 9, scope: !2197)
!2400 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !2401)
!2401 = distinct !DILocation(line: 3720, column: 5, scope: !2197)
!2402 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !2401)
!2403 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !2404)
!2404 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !2401)
!2405 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !2404)
!2406 = !DILocation(line: 3628, column: 21, scope: !2217, inlinedAt: !2404)
!2407 = !DILocation(line: 3628, column: 18, scope: !2217, inlinedAt: !2404)
!2408 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !2404)
!2409 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !2404)
!2410 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !2404)
!2411 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !2404)
!2412 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !2404)
!2413 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !2404)
!2414 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !2404)
!2415 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !2416)
!2416 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !2401)
!2417 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !2416)
!2418 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !2416)
!2419 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !2416)
!2420 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !2416)
!2421 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !2401)
!2422 = !DILocation(line: 3720, column: 5, scope: !2197)
!2423 = !DILocation(line: 3693, column: 17, scope: !2251, inlinedAt: !2401)
!2424 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !2401)
!2425 = !DILocation(line: 3721, column: 12, scope: !2197)
!2426 = !DILocation(line: 3721, column: 5, scope: !2197)
!2427 = !DILocation(line: 3721, column: 33, scope: !2197)
!2428 = !DILocation(line: 3722, column: 5, scope: !2197)
!2429 = !DILocation(line: 0, scope: !2206)
!2430 = !DILocation(line: 3723, column: 1, scope: !2197)
!2431 = distinct !DISubprogram(name: "clusterDelNode", scope: !3, file: !3, line: 906, type: !2319, isLocal: false, isDefinition: true, scopeLine: 906, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437}
!2433 = !DILocalVariable(name: "delnode", arg: 1, scope: !2431, file: !3, line: 906, type: !378)
!2434 = !DILocalVariable(name: "j", scope: !2431, file: !3, line: 907, type: !177)
!2435 = !DILocalVariable(name: "di", scope: !2431, file: !3, line: 908, type: !297)
!2436 = !DILocalVariable(name: "de", scope: !2431, file: !3, line: 909, type: !340)
!2437 = !DILocalVariable(name: "node", scope: !2438, file: !3, line: 924, type: !378)
!2438 = distinct !DILexicalBlock(scope: !2431, file: !3, line: 923, column: 40)
!2439 = !DILocation(line: 906, column: 34, scope: !2431)
!2440 = !DILocation(line: 907, column: 9, scope: !2431)
!2441 = !DILocation(line: 0, scope: !2431)
!2442 = !DILocation(line: 912, column: 5, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2431, file: !3, line: 912, column: 5)
!2444 = !DILocation(line: 913, column: 13, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !2446, file: !3, line: 913, column: 13)
!2446 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 912, column: 41)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !3, line: 912, column: 5)
!2448 = !DILocation(line: 913, column: 53, scope: !2445)
!2449 = !DILocation(line: 913, column: 13, scope: !2446)
!2450 = !DILocation(line: 914, column: 53, scope: !2445)
!2451 = !DILocation(line: 915, column: 20, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2446, file: !3, line: 915, column: 13)
!2453 = !DILocation(line: 914, column: 13, scope: !2445)
!2454 = !DILocation(line: 915, column: 13, scope: !2452)
!2455 = !DILocation(line: 915, column: 51, scope: !2452)
!2456 = !DILocation(line: 915, column: 13, scope: !2446)
!2457 = !DILocation(line: 916, column: 51, scope: !2452)
!2458 = !DILocation(line: 917, column: 20, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2446, file: !3, line: 917, column: 13)
!2460 = !DILocation(line: 916, column: 13, scope: !2452)
!2461 = !DILocation(line: 917, column: 13, scope: !2459)
!2462 = !DILocation(line: 917, column: 38, scope: !2459)
!2463 = !DILocation(line: 917, column: 13, scope: !2446)
!2464 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !2465)
!2465 = distinct !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !2466)
!2466 = distinct !DILocation(line: 918, column: 13, scope: !2459)
!2467 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !2465)
!2468 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !2469)
!2469 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !2465)
!2470 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !2469)
!2471 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !2469)
!2472 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !2469)
!2473 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !2469)
!2474 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !2469)
!2475 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !2469)
!2476 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !2469)
!2477 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !2469)
!2478 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !2479)
!2479 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !2465)
!2480 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !2479)
!2481 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !2479)
!2482 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !2479)
!2483 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !2479)
!2484 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !2465)
!2485 = !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !2466)
!2486 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !2465)
!2487 = !DILocation(line: 3721, column: 12, scope: !2197, inlinedAt: !2466)
!2488 = !DILocation(line: 3721, column: 5, scope: !2197, inlinedAt: !2466)
!2489 = !DILocation(line: 3721, column: 33, scope: !2197, inlinedAt: !2466)
!2490 = !DILocation(line: 3722, column: 5, scope: !2197, inlinedAt: !2466)
!2491 = !DILocation(line: 912, column: 37, scope: !2447)
!2492 = !DILocation(line: 912, column: 19, scope: !2447)
!2493 = distinct !{!2493, !2442, !2494}
!2494 = !DILocation(line: 919, column: 5, scope: !2443)
!2495 = !DILocation(line: 922, column: 46, scope: !2431)
!2496 = !DILocation(line: 922, column: 10, scope: !2431)
!2497 = !DILocation(line: 908, column: 19, scope: !2431)
!2498 = !DILocation(line: 923, column: 17, scope: !2431)
!2499 = !DILocation(line: 909, column: 16, scope: !2431)
!2500 = !DILocation(line: 923, column: 31, scope: !2431)
!2501 = !DILocation(line: 923, column: 5, scope: !2431)
!2502 = !DILocation(line: 924, column: 29, scope: !2438)
!2503 = !DILocation(line: 924, column: 22, scope: !2438)
!2504 = !DILocation(line: 926, column: 18, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2438, file: !3, line: 926, column: 13)
!2506 = !DILocation(line: 926, column: 13, scope: !2438)
!2507 = distinct !{!2507, !2501, !2508}
!2508 = !DILocation(line: 928, column: 5, scope: !2431)
!2509 = !DILocation(line: 927, column: 9, scope: !2438)
!2510 = !DILocation(line: 929, column: 5, scope: !2431)
!2511 = !DILocation(line: 932, column: 5, scope: !2431)
!2512 = !DILocation(line: 933, column: 1, scope: !2431)
!2513 = !DILocation(line: 590, column: 45, scope: !2089)
!2514 = !DILocation(line: 591, column: 25, scope: !2089)
!2515 = !DILocation(line: 591, column: 18, scope: !2089)
!2516 = !DILocation(line: 592, column: 19, scope: !2089)
!2517 = !DILocation(line: 592, column: 11, scope: !2089)
!2518 = !DILocation(line: 592, column: 17, scope: !2089)
!2519 = !DILocation(line: 593, column: 20, scope: !2089)
!2520 = !DILocation(line: 593, column: 11, scope: !2089)
!2521 = !DILocation(line: 593, column: 18, scope: !2089)
!2522 = !DILocation(line: 594, column: 20, scope: !2089)
!2523 = !DILocation(line: 594, column: 11, scope: !2089)
!2524 = !DILocation(line: 594, column: 18, scope: !2089)
!2525 = !DILocation(line: 595, column: 11, scope: !2089)
!2526 = !DILocation(line: 595, column: 16, scope: !2089)
!2527 = !DILocation(line: 596, column: 11, scope: !2089)
!2528 = !DILocation(line: 596, column: 14, scope: !2089)
!2529 = !DILocation(line: 597, column: 5, scope: !2089)
!2530 = distinct !DISubprogram(name: "freeClusterLink", scope: !3, file: !3, line: 603, type: !2531, isLocal: false, isDefinition: true, scopeLine: 603, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2533)
!2531 = !DISubroutineType(types: !2532)
!2532 = !{null, !179}
!2533 = !{!2534}
!2534 = !DILocalVariable(name: "link", arg: 1, scope: !2530, file: !3, line: 603, type: !179)
!2535 = !DILocation(line: 603, column: 35, scope: !2530)
!2536 = !DILocation(line: 604, column: 15, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 604, column: 9)
!2538 = !DILocation(line: 604, column: 18, scope: !2537)
!2539 = !DILocation(line: 604, column: 9, scope: !2530)
!2540 = !DILocation(line: 605, column: 34, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 604, column: 25)
!2542 = !DILocation(line: 605, column: 9, scope: !2541)
!2543 = !DILocation(line: 606, column: 5, scope: !2541)
!2544 = !DILocation(line: 607, column: 19, scope: !2530)
!2545 = !DILocation(line: 607, column: 5, scope: !2530)
!2546 = !DILocation(line: 608, column: 19, scope: !2530)
!2547 = !DILocation(line: 608, column: 5, scope: !2530)
!2548 = !DILocation(line: 609, column: 15, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 609, column: 9)
!2550 = !DILocation(line: 609, column: 9, scope: !2549)
!2551 = !DILocation(line: 609, column: 9, scope: !2530)
!2552 = !DILocation(line: 610, column: 21, scope: !2549)
!2553 = !DILocation(line: 610, column: 26, scope: !2549)
!2554 = !DILocation(line: 610, column: 9, scope: !2549)
!2555 = !DILocation(line: 611, column: 17, scope: !2530)
!2556 = !DILocation(line: 611, column: 5, scope: !2530)
!2557 = !DILocation(line: 612, column: 11, scope: !2530)
!2558 = !DILocation(line: 612, column: 5, scope: !2530)
!2559 = !DILocation(line: 613, column: 1, scope: !2530)
!2560 = distinct !DISubprogram(name: "clusterReadHandler", scope: !3, file: !3, line: 2142, type: !1984, isLocal: false, isDefinition: true, scopeLine: 2142, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2561)
!2561 = !{!2562, !2563, !2564, !2565, !2566, !2570, !2571, !2572, !2573, !2574}
!2562 = !DILocalVariable(name: "el", arg: 1, scope: !2560, file: !3, line: 2142, type: !1986)
!2563 = !DILocalVariable(name: "fd", arg: 2, scope: !2560, file: !3, line: 2142, type: !177)
!2564 = !DILocalVariable(name: "privdata", arg: 3, scope: !2560, file: !3, line: 2142, type: !6)
!2565 = !DILocalVariable(name: "mask", arg: 4, scope: !2560, file: !3, line: 2142, type: !177)
!2566 = !DILocalVariable(name: "buf", scope: !2560, file: !3, line: 2143, type: !2567)
!2567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 34816, elements: !2568)
!2568 = !{!2569}
!2569 = !DISubrange(count: 4352)
!2570 = !DILocalVariable(name: "nread", scope: !2560, file: !3, line: 2144, type: !14)
!2571 = !DILocalVariable(name: "hdr", scope: !2560, file: !3, line: 2145, type: !92)
!2572 = !DILocalVariable(name: "link", scope: !2560, file: !3, line: 2146, type: !179)
!2573 = !DILocalVariable(name: "readlen", scope: !2560, file: !3, line: 2147, type: !45)
!2574 = !DILocalVariable(name: "rcvbuflen", scope: !2560, file: !3, line: 2147, type: !45)
!2575 = !DILocation(line: 2142, column: 38, scope: !2560)
!2576 = !DILocation(line: 2142, column: 46, scope: !2560)
!2577 = !DILocation(line: 2142, column: 56, scope: !2560)
!2578 = !DILocation(line: 2142, column: 70, scope: !2560)
!2579 = !DILocation(line: 2143, column: 5, scope: !2560)
!2580 = !DILocation(line: 2143, column: 10, scope: !2560)
!2581 = !DILocation(line: 2146, column: 25, scope: !2560)
!2582 = !DILocation(line: 2146, column: 18, scope: !2560)
!2583 = !DILocation(line: 2151, column: 5, scope: !2560)
!2584 = !DILocation(line: 2152, column: 34, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2560, file: !3, line: 2151, column: 14)
!2586 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !2587)
!2587 = distinct !DILocation(line: 2152, column: 21, scope: !2585)
!2588 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !2587)
!2589 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !2587)
!2590 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !2587)
!2591 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !2587)
!2592 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !2587)
!2593 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !2587)
!2594 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !2587)
!2595 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !2587)
!2596 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !2587)
!2597 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !2587)
!2598 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !2587)
!2599 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !2587)
!2600 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !2587)
!2601 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !2587)
!2602 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !2587)
!2603 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !2587)
!2604 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !2587)
!2605 = !DILocation(line: 0, scope: !1486, inlinedAt: !2587)
!2606 = !DILocation(line: 2152, column: 21, scope: !2585)
!2607 = !DILocation(line: 2147, column: 27, scope: !2560)
!2608 = !DILocation(line: 2153, column: 23, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2585, file: !3, line: 2153, column: 13)
!2610 = !DILocation(line: 2153, column: 13, scope: !2585)
!2611 = !DILocation(line: 2156, column: 25, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 2153, column: 28)
!2613 = !DILocation(line: 2147, column: 18, scope: !2560)
!2614 = !DILocation(line: 2157, column: 9, scope: !2612)
!2615 = !DILocation(line: 2145, column: 17, scope: !2560)
!2616 = !DILocation(line: 2160, column: 27, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 2160, column: 17)
!2618 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 2157, column: 16)
!2619 = !DILocation(line: 2160, column: 17, scope: !2618)
!2620 = !DILocation(line: 2173, column: 23, scope: !2618)
!2621 = !DILocation(line: 2163, column: 21, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 2163, column: 21)
!2623 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 2160, column: 33)
!2624 = !DILocation(line: 2163, column: 47, scope: !2622)
!2625 = !DILocation(line: 2163, column: 52, scope: !2622)
!2626 = !DILocation(line: 2164, column: 21, scope: !2622)
!2627 = !{!2628, !709, i64 4}
!2628 = !{!"", !710, i64 0, !709, i64 4, !728, i64 8, !728, i64 10, !728, i64 12, !728, i64 14, !729, i64 16, !729, i64 24, !729, i64 32, !710, i64 40, !710, i64 80, !710, i64 2128, !710, i64 2168, !710, i64 2214, !728, i64 2248, !728, i64 2250, !710, i64 2252, !710, i64 2253, !710, i64 2256}
!2629 = !DILocation(line: 2164, column: 40, scope: !2622)
!2630 = !DILocation(line: 2163, column: 21, scope: !2623)
!2631 = !DILocation(line: 2166, column: 21, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 2165, column: 17)
!2633 = !DILocalVariable(name: "link", arg: 1, scope: !2634, file: !3, line: 2114, type: !179)
!2634 = distinct !DISubprogram(name: "handleLinkIOError", scope: !3, file: !3, line: 2114, type: !2531, isLocal: false, isDefinition: true, scopeLine: 2114, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2635)
!2635 = !{!2633}
!2636 = !DILocation(line: 2114, column: 37, scope: !2634, inlinedAt: !2637)
!2637 = distinct !DILocation(line: 2169, column: 21, scope: !2632)
!2638 = !DILocation(line: 603, column: 35, scope: !2530, inlinedAt: !2639)
!2639 = distinct !DILocation(line: 2115, column: 5, scope: !2634, inlinedAt: !2637)
!2640 = !DILocation(line: 604, column: 15, scope: !2537, inlinedAt: !2639)
!2641 = !DILocation(line: 604, column: 18, scope: !2537, inlinedAt: !2639)
!2642 = !DILocation(line: 604, column: 9, scope: !2530, inlinedAt: !2639)
!2643 = !DILocation(line: 605, column: 34, scope: !2541, inlinedAt: !2639)
!2644 = !DILocation(line: 605, column: 9, scope: !2541, inlinedAt: !2639)
!2645 = !DILocation(line: 606, column: 5, scope: !2541, inlinedAt: !2639)
!2646 = !DILocation(line: 607, column: 19, scope: !2530, inlinedAt: !2639)
!2647 = !DILocation(line: 607, column: 5, scope: !2530, inlinedAt: !2639)
!2648 = !DILocation(line: 608, column: 19, scope: !2530, inlinedAt: !2639)
!2649 = !DILocation(line: 608, column: 5, scope: !2530, inlinedAt: !2639)
!2650 = !DILocation(line: 609, column: 15, scope: !2549, inlinedAt: !2639)
!2651 = !DILocation(line: 609, column: 9, scope: !2549, inlinedAt: !2639)
!2652 = !DILocation(line: 609, column: 9, scope: !2530, inlinedAt: !2639)
!2653 = !DILocation(line: 610, column: 21, scope: !2549, inlinedAt: !2639)
!2654 = !DILocation(line: 610, column: 26, scope: !2549, inlinedAt: !2639)
!2655 = !DILocation(line: 610, column: 9, scope: !2549, inlinedAt: !2639)
!2656 = !DILocation(line: 611, column: 17, scope: !2530, inlinedAt: !2639)
!2657 = !DILocation(line: 611, column: 5, scope: !2530, inlinedAt: !2639)
!2658 = !DILocation(line: 612, column: 5, scope: !2530, inlinedAt: !2639)
!2659 = !DILocation(line: 2170, column: 21, scope: !2632)
!2660 = !DILocation(line: 2173, column: 42, scope: !2618)
!2661 = !DILocation(line: 2174, column: 17, scope: !2618)
!2662 = !DILocation(line: 0, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 2174, column: 17)
!2664 = !DILocation(line: 2177, column: 29, scope: !2585)
!2665 = !DILocation(line: 2177, column: 17, scope: !2585)
!2666 = !DILocation(line: 2144, column: 13, scope: !2560)
!2667 = !DILocation(line: 2178, column: 19, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2585, file: !3, line: 2178, column: 13)
!2669 = !DILocation(line: 2178, column: 25, scope: !2668)
!2670 = !DILocation(line: 2178, column: 28, scope: !2668)
!2671 = !DILocation(line: 2178, column: 34, scope: !2668)
!2672 = !DILocation(line: 2178, column: 13, scope: !2585)
!2673 = !DILocation(line: 2180, column: 19, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2585, file: !3, line: 2180, column: 13)
!2675 = !DILocation(line: 2180, column: 13, scope: !2585)
!2676 = !DILocation(line: 2183, column: 24, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 2180, column: 25)
!2678 = !DILocation(line: 2183, column: 17, scope: !2677)
!2679 = !DILocation(line: 2183, column: 63, scope: !2677)
!2680 = !DILocation(line: 2183, column: 54, scope: !2677)
!2681 = !DILocation(line: 2182, column: 13, scope: !2677)
!2682 = !DILocation(line: 2114, column: 37, scope: !2634, inlinedAt: !2683)
!2683 = distinct !DILocation(line: 2184, column: 13, scope: !2677)
!2684 = !DILocation(line: 603, column: 35, scope: !2530, inlinedAt: !2685)
!2685 = distinct !DILocation(line: 2115, column: 5, scope: !2634, inlinedAt: !2683)
!2686 = !DILocation(line: 604, column: 15, scope: !2537, inlinedAt: !2685)
!2687 = !DILocation(line: 604, column: 18, scope: !2537, inlinedAt: !2685)
!2688 = !DILocation(line: 604, column: 9, scope: !2530, inlinedAt: !2685)
!2689 = !DILocation(line: 605, column: 34, scope: !2541, inlinedAt: !2685)
!2690 = !DILocation(line: 605, column: 9, scope: !2541, inlinedAt: !2685)
!2691 = !DILocation(line: 606, column: 5, scope: !2541, inlinedAt: !2685)
!2692 = !DILocation(line: 607, column: 19, scope: !2530, inlinedAt: !2685)
!2693 = !DILocation(line: 607, column: 5, scope: !2530, inlinedAt: !2685)
!2694 = !DILocation(line: 608, column: 19, scope: !2530, inlinedAt: !2685)
!2695 = !DILocation(line: 608, column: 5, scope: !2530, inlinedAt: !2685)
!2696 = !DILocation(line: 609, column: 15, scope: !2549, inlinedAt: !2685)
!2697 = !DILocation(line: 609, column: 9, scope: !2549, inlinedAt: !2685)
!2698 = !DILocation(line: 609, column: 9, scope: !2530, inlinedAt: !2685)
!2699 = !DILocation(line: 610, column: 21, scope: !2549, inlinedAt: !2685)
!2700 = !DILocation(line: 610, column: 26, scope: !2549, inlinedAt: !2685)
!2701 = !DILocation(line: 610, column: 9, scope: !2549, inlinedAt: !2685)
!2702 = !DILocation(line: 611, column: 17, scope: !2530, inlinedAt: !2685)
!2703 = !DILocation(line: 611, column: 5, scope: !2530, inlinedAt: !2685)
!2704 = !DILocation(line: 612, column: 5, scope: !2530, inlinedAt: !2685)
!2705 = !DILocation(line: 2185, column: 13, scope: !2677)
!2706 = !DILocation(line: 2188, column: 44, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 2186, column: 16)
!2708 = !DILocation(line: 2188, column: 28, scope: !2707)
!2709 = !DILocation(line: 2188, column: 26, scope: !2707)
!2710 = !DILocation(line: 2190, column: 23, scope: !2707)
!2711 = !DILocation(line: 2194, column: 23, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2585, file: !3, line: 2194, column: 13)
!2713 = !DILocation(line: 2194, column: 28, scope: !2712)
!2714 = !DILocation(line: 2194, column: 44, scope: !2712)
!2715 = !DILocation(line: 2194, column: 41, scope: !2712)
!2716 = !DILocation(line: 2194, column: 13, scope: !2585)
!2717 = !DILocation(line: 2195, column: 17, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 2195, column: 17)
!2719 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 2194, column: 64)
!2720 = !DILocation(line: 2195, column: 17, scope: !2719)
!2721 = !DILocation(line: 2196, column: 31, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2718, file: !3, line: 2195, column: 45)
!2723 = !DILocation(line: 2196, column: 17, scope: !2722)
!2724 = !DILocation(line: 2197, column: 32, scope: !2722)
!2725 = !DILocation(line: 2197, column: 30, scope: !2722)
!2726 = !DILocation(line: 2201, column: 9, scope: !2719)
!2727 = distinct !{!2727, !2583, !2728}
!2728 = !DILocation(line: 2202, column: 5, scope: !2560)
!2729 = !DILocation(line: 2203, column: 1, scope: !2560)
!2730 = distinct !DISubprogram(name: "keyHashSlot", scope: !3, file: !3, line: 663, type: !2731, isLocal: false, isDefinition: true, scopeLine: 663, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2733)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!45, !178, !177}
!2733 = !{!2734, !2735, !2736, !2737}
!2734 = !DILocalVariable(name: "key", arg: 1, scope: !2730, file: !3, line: 663, type: !178)
!2735 = !DILocalVariable(name: "keylen", arg: 2, scope: !2730, file: !3, line: 663, type: !177)
!2736 = !DILocalVariable(name: "s", scope: !2730, file: !3, line: 664, type: !177)
!2737 = !DILocalVariable(name: "e", scope: !2730, file: !3, line: 664, type: !177)
!2738 = !DILocation(line: 663, column: 32, scope: !2730)
!2739 = !DILocation(line: 663, column: 41, scope: !2730)
!2740 = !DILocation(line: 664, column: 9, scope: !2730)
!2741 = !DILocation(line: 666, column: 19, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2743, file: !3, line: 666, column: 5)
!2743 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 666, column: 5)
!2744 = !DILocation(line: 666, column: 5, scope: !2743)
!2745 = !DILocation(line: 667, column: 13, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2742, file: !3, line: 667, column: 13)
!2747 = !DILocation(line: 667, column: 20, scope: !2746)
!2748 = !DILocation(line: 667, column: 13, scope: !2742)
!2749 = !DILocation(line: 666, column: 30, scope: !2742)
!2750 = distinct !{!2750, !2744, !2751}
!2751 = !DILocation(line: 667, column: 28, scope: !2743)
!2752 = !DILocation(line: 670, column: 11, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 670, column: 9)
!2754 = !DILocation(line: 0, scope: !2742)
!2755 = !DILocation(line: 670, column: 9, scope: !2730)
!2756 = !DILocation(line: 670, column: 29, scope: !2753)
!2757 = !DILocation(line: 670, column: 22, scope: !2753)
!2758 = !DILocation(line: 673, column: 15, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 673, column: 5)
!2760 = !DILocation(line: 664, column: 12, scope: !2730)
!2761 = !DILocation(line: 673, column: 21, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 673, column: 5)
!2763 = !DILocation(line: 673, column: 5, scope: !2759)
!2764 = !DILocation(line: 674, column: 13, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 674, column: 13)
!2766 = !DILocation(line: 674, column: 20, scope: !2765)
!2767 = !DILocation(line: 674, column: 13, scope: !2762)
!2768 = !DILocation(line: 673, column: 32, scope: !2762)
!2769 = distinct !{!2769, !2763, !2770}
!2770 = !DILocation(line: 674, column: 28, scope: !2759)
!2771 = !DILocation(line: 677, column: 11, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 677, column: 9)
!2773 = !DILocation(line: 0, scope: !2762)
!2774 = !DILocation(line: 677, column: 26, scope: !2772)
!2775 = !DILocation(line: 677, column: 21, scope: !2772)
!2776 = !DILocation(line: 677, column: 41, scope: !2772)
!2777 = !DILocation(line: 677, column: 34, scope: !2772)
!2778 = !DILocation(line: 681, column: 21, scope: !2730)
!2779 = !DILocation(line: 681, column: 23, scope: !2730)
!2780 = !DILocation(line: 681, column: 29, scope: !2730)
!2781 = !DILocation(line: 681, column: 12, scope: !2730)
!2782 = !DILocation(line: 681, column: 5, scope: !2730)
!2783 = !DILocation(line: 0, scope: !2730)
!2784 = !DILocation(line: 682, column: 1, scope: !2730)
!2785 = distinct !DISubprogram(name: "clusterNodeAddFailureReport", scope: !3, file: !3, line: 735, type: !1015, isLocal: false, isDefinition: true, scopeLine: 735, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2797}
!2787 = !DILocalVariable(name: "failing", arg: 1, scope: !2785, file: !3, line: 735, type: !378)
!2788 = !DILocalVariable(name: "sender", arg: 2, scope: !2785, file: !3, line: 735, type: !378)
!2789 = !DILocalVariable(name: "l", scope: !2785, file: !3, line: 736, type: !218)
!2790 = !DILocalVariable(name: "ln", scope: !2785, file: !3, line: 737, type: !224)
!2791 = !DILocalVariable(name: "li", scope: !2785, file: !3, line: 738, type: !2792)
!2792 = !DIDerivedType(tag: DW_TAG_typedef, name: "listIter", file: !220, line: 45, baseType: !2793)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listIter", file: !220, line: 42, size: 128, elements: !2794)
!2794 = !{!2795, !2796}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2793, file: !220, line: 43, baseType: !224, size: 64)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !2793, file: !220, line: 44, baseType: !177, size: 32, offset: 64)
!2797 = !DILocalVariable(name: "fr", scope: !2785, file: !3, line: 739, type: !2798)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterNodeFailReport", file: !75, line: 114, baseType: !2800)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterNodeFailReport", file: !75, line: 111, size: 128, elements: !2801)
!2801 = !{!2802, !2803}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2800, file: !75, line: 112, baseType: !193, size: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2800, file: !75, line: 113, baseType: !184, size: 64, offset: 64)
!2804 = !DILocation(line: 735, column: 46, scope: !2785)
!2805 = !DILocation(line: 735, column: 68, scope: !2785)
!2806 = !DILocation(line: 736, column: 24, scope: !2785)
!2807 = !DILocation(line: 736, column: 11, scope: !2785)
!2808 = !DILocation(line: 738, column: 5, scope: !2785)
!2809 = !DILocation(line: 738, column: 14, scope: !2785)
!2810 = !DILocation(line: 743, column: 5, scope: !2785)
!2811 = !DILocation(line: 744, column: 5, scope: !2785)
!2812 = !DILocation(line: 744, column: 18, scope: !2785)
!2813 = !DILocation(line: 737, column: 15, scope: !2785)
!2814 = !DILocation(line: 744, column: 33, scope: !2785)
!2815 = !DILocation(line: 745, column: 18, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 744, column: 42)
!2817 = !{!2818, !758, i64 16}
!2818 = !{!"listNode", !758, i64 0, !758, i64 8, !758, i64 16}
!2819 = !DILocation(line: 739, column: 28, scope: !2785)
!2820 = !DILocation(line: 746, column: 17, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 746, column: 13)
!2822 = !{!2823, !758, i64 0}
!2823 = !{!"clusterNodeFailReport", !758, i64 0, !786, i64 8}
!2824 = !DILocation(line: 746, column: 22, scope: !2821)
!2825 = !DILocation(line: 746, column: 13, scope: !2816)
!2826 = distinct !{!2826, !2811, !2827}
!2827 = !DILocation(line: 750, column: 5, scope: !2785)
!2828 = !DILocation(line: 747, column: 24, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 746, column: 33)
!2830 = !DILocation(line: 747, column: 17, scope: !2829)
!2831 = !DILocation(line: 747, column: 22, scope: !2829)
!2832 = !{!2823, !786, i64 8}
!2833 = !DILocation(line: 748, column: 13, scope: !2829)
!2834 = !DILocation(line: 753, column: 10, scope: !2785)
!2835 = !DILocation(line: 754, column: 9, scope: !2785)
!2836 = !DILocation(line: 754, column: 14, scope: !2785)
!2837 = !DILocation(line: 755, column: 16, scope: !2785)
!2838 = !DILocation(line: 755, column: 9, scope: !2785)
!2839 = !DILocation(line: 755, column: 14, scope: !2785)
!2840 = !DILocation(line: 756, column: 5, scope: !2785)
!2841 = !DILocation(line: 757, column: 5, scope: !2785)
!2842 = !DILocation(line: 0, scope: !2785)
!2843 = !DILocation(line: 758, column: 1, scope: !2785)
!2844 = distinct !DISubprogram(name: "clusterNodeCleanupFailureReports", scope: !3, file: !3, line: 765, type: !2319, isLocal: false, isDefinition: true, scopeLine: 765, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2845)
!2845 = !{!2846, !2847, !2848, !2849, !2850, !2851, !2852}
!2846 = !DILocalVariable(name: "node", arg: 1, scope: !2844, file: !3, line: 765, type: !378)
!2847 = !DILocalVariable(name: "l", scope: !2844, file: !3, line: 766, type: !218)
!2848 = !DILocalVariable(name: "ln", scope: !2844, file: !3, line: 767, type: !224)
!2849 = !DILocalVariable(name: "li", scope: !2844, file: !3, line: 768, type: !2792)
!2850 = !DILocalVariable(name: "fr", scope: !2844, file: !3, line: 769, type: !2798)
!2851 = !DILocalVariable(name: "maxtime", scope: !2844, file: !3, line: 770, type: !184)
!2852 = !DILocalVariable(name: "now", scope: !2844, file: !3, line: 772, type: !184)
!2853 = !DILocation(line: 765, column: 52, scope: !2844)
!2854 = !DILocation(line: 766, column: 21, scope: !2844)
!2855 = !DILocation(line: 766, column: 11, scope: !2844)
!2856 = !DILocation(line: 768, column: 5, scope: !2844)
!2857 = !DILocation(line: 770, column: 31, scope: !2844)
!2858 = !{!785, !786, i64 2928}
!2859 = !DILocation(line: 770, column: 52, scope: !2844)
!2860 = !DILocation(line: 770, column: 14, scope: !2844)
!2861 = !DILocation(line: 772, column: 20, scope: !2844)
!2862 = !DILocation(line: 772, column: 14, scope: !2844)
!2863 = !DILocation(line: 768, column: 14, scope: !2844)
!2864 = !DILocation(line: 774, column: 5, scope: !2844)
!2865 = !DILocation(line: 775, column: 18, scope: !2844)
!2866 = !DILocation(line: 767, column: 15, scope: !2844)
!2867 = !DILocation(line: 775, column: 33, scope: !2844)
!2868 = !DILocation(line: 775, column: 5, scope: !2844)
!2869 = !DILocation(line: 776, column: 18, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 775, column: 42)
!2871 = !DILocation(line: 769, column: 28, scope: !2844)
!2872 = !DILocation(line: 777, column: 23, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 777, column: 13)
!2874 = !DILocation(line: 777, column: 17, scope: !2873)
!2875 = !DILocation(line: 777, column: 28, scope: !2873)
!2876 = !DILocation(line: 777, column: 13, scope: !2870)
!2877 = !DILocation(line: 777, column: 39, scope: !2873)
!2878 = distinct !{!2878, !2868, !2879}
!2879 = !DILocation(line: 778, column: 5, scope: !2844)
!2880 = !DILocation(line: 779, column: 1, scope: !2844)
!2881 = distinct !DISubprogram(name: "clusterNodeDelFailureReport", scope: !3, file: !3, line: 792, type: !1015, isLocal: false, isDefinition: true, scopeLine: 792, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2882)
!2882 = !{!2883, !2884, !2885, !2886, !2887, !2888}
!2883 = !DILocalVariable(name: "node", arg: 1, scope: !2881, file: !3, line: 792, type: !378)
!2884 = !DILocalVariable(name: "sender", arg: 2, scope: !2881, file: !3, line: 792, type: !378)
!2885 = !DILocalVariable(name: "l", scope: !2881, file: !3, line: 793, type: !218)
!2886 = !DILocalVariable(name: "ln", scope: !2881, file: !3, line: 794, type: !224)
!2887 = !DILocalVariable(name: "li", scope: !2881, file: !3, line: 795, type: !2792)
!2888 = !DILocalVariable(name: "fr", scope: !2881, file: !3, line: 796, type: !2798)
!2889 = !DILocation(line: 792, column: 46, scope: !2881)
!2890 = !DILocation(line: 792, column: 65, scope: !2881)
!2891 = !DILocation(line: 793, column: 21, scope: !2881)
!2892 = !DILocation(line: 793, column: 11, scope: !2881)
!2893 = !DILocation(line: 795, column: 5, scope: !2881)
!2894 = !DILocation(line: 795, column: 14, scope: !2881)
!2895 = !DILocation(line: 799, column: 5, scope: !2881)
!2896 = !DILocation(line: 800, column: 5, scope: !2881)
!2897 = !DILocation(line: 800, column: 18, scope: !2881)
!2898 = !DILocation(line: 794, column: 15, scope: !2881)
!2899 = !DILocation(line: 800, column: 33, scope: !2881)
!2900 = !DILocation(line: 801, column: 18, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 800, column: 42)
!2902 = !DILocation(line: 796, column: 28, scope: !2881)
!2903 = !DILocation(line: 802, column: 17, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 802, column: 13)
!2905 = !DILocation(line: 802, column: 22, scope: !2904)
!2906 = !DILocation(line: 802, column: 13, scope: !2901)
!2907 = distinct !{!2907, !2896, !2908}
!2908 = !DILocation(line: 803, column: 5, scope: !2881)
!2909 = !DILocation(line: 807, column: 5, scope: !2881)
!2910 = !DILocation(line: 765, column: 52, scope: !2844, inlinedAt: !2911)
!2911 = distinct !DILocation(line: 808, column: 5, scope: !2881)
!2912 = !DILocation(line: 766, column: 21, scope: !2844, inlinedAt: !2911)
!2913 = !DILocation(line: 766, column: 11, scope: !2844, inlinedAt: !2911)
!2914 = !DILocation(line: 768, column: 5, scope: !2844, inlinedAt: !2911)
!2915 = !DILocation(line: 770, column: 31, scope: !2844, inlinedAt: !2911)
!2916 = !DILocation(line: 770, column: 52, scope: !2844, inlinedAt: !2911)
!2917 = !DILocation(line: 770, column: 14, scope: !2844, inlinedAt: !2911)
!2918 = !DILocation(line: 772, column: 20, scope: !2844, inlinedAt: !2911)
!2919 = !DILocation(line: 772, column: 14, scope: !2844, inlinedAt: !2911)
!2920 = !DILocation(line: 768, column: 14, scope: !2844, inlinedAt: !2911)
!2921 = !DILocation(line: 774, column: 5, scope: !2844, inlinedAt: !2911)
!2922 = !DILocation(line: 775, column: 18, scope: !2844, inlinedAt: !2911)
!2923 = !DILocation(line: 767, column: 15, scope: !2844, inlinedAt: !2911)
!2924 = !DILocation(line: 775, column: 33, scope: !2844, inlinedAt: !2911)
!2925 = !DILocation(line: 775, column: 5, scope: !2844, inlinedAt: !2911)
!2926 = !DILocation(line: 776, column: 18, scope: !2870, inlinedAt: !2911)
!2927 = !DILocation(line: 769, column: 28, scope: !2844, inlinedAt: !2911)
!2928 = !DILocation(line: 777, column: 23, scope: !2873, inlinedAt: !2911)
!2929 = !DILocation(line: 777, column: 17, scope: !2873, inlinedAt: !2911)
!2930 = !DILocation(line: 777, column: 28, scope: !2873, inlinedAt: !2911)
!2931 = !DILocation(line: 777, column: 13, scope: !2870, inlinedAt: !2911)
!2932 = !DILocation(line: 777, column: 39, scope: !2873, inlinedAt: !2911)
!2933 = !DILocation(line: 779, column: 1, scope: !2844, inlinedAt: !2911)
!2934 = !DILocation(line: 809, column: 5, scope: !2881)
!2935 = !DILocation(line: 0, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 804, column: 9)
!2937 = !DILocation(line: 810, column: 1, scope: !2881)
!2938 = distinct !DISubprogram(name: "clusterNodeFailureReportsCount", scope: !3, file: !3, line: 815, type: !849, isLocal: false, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2939)
!2939 = !{!2940}
!2940 = !DILocalVariable(name: "node", arg: 1, scope: !2938, file: !3, line: 815, type: !378)
!2941 = !DILocation(line: 815, column: 49, scope: !2938)
!2942 = !DILocation(line: 765, column: 52, scope: !2844, inlinedAt: !2943)
!2943 = distinct !DILocation(line: 816, column: 5, scope: !2938)
!2944 = !DILocation(line: 766, column: 21, scope: !2844, inlinedAt: !2943)
!2945 = !DILocation(line: 766, column: 11, scope: !2844, inlinedAt: !2943)
!2946 = !DILocation(line: 768, column: 5, scope: !2844, inlinedAt: !2943)
!2947 = !DILocation(line: 770, column: 31, scope: !2844, inlinedAt: !2943)
!2948 = !DILocation(line: 770, column: 52, scope: !2844, inlinedAt: !2943)
!2949 = !DILocation(line: 770, column: 14, scope: !2844, inlinedAt: !2943)
!2950 = !DILocation(line: 772, column: 20, scope: !2844, inlinedAt: !2943)
!2951 = !DILocation(line: 772, column: 14, scope: !2844, inlinedAt: !2943)
!2952 = !DILocation(line: 768, column: 14, scope: !2844, inlinedAt: !2943)
!2953 = !DILocation(line: 774, column: 5, scope: !2844, inlinedAt: !2943)
!2954 = !DILocation(line: 775, column: 18, scope: !2844, inlinedAt: !2943)
!2955 = !DILocation(line: 767, column: 15, scope: !2844, inlinedAt: !2943)
!2956 = !DILocation(line: 775, column: 33, scope: !2844, inlinedAt: !2943)
!2957 = !DILocation(line: 775, column: 5, scope: !2844, inlinedAt: !2943)
!2958 = !DILocation(line: 776, column: 18, scope: !2870, inlinedAt: !2943)
!2959 = !DILocation(line: 769, column: 28, scope: !2844, inlinedAt: !2943)
!2960 = !DILocation(line: 777, column: 23, scope: !2873, inlinedAt: !2943)
!2961 = !DILocation(line: 777, column: 17, scope: !2873, inlinedAt: !2943)
!2962 = !DILocation(line: 777, column: 28, scope: !2873, inlinedAt: !2943)
!2963 = !DILocation(line: 777, column: 13, scope: !2870, inlinedAt: !2943)
!2964 = !DILocation(line: 777, column: 39, scope: !2873, inlinedAt: !2943)
!2965 = !DILocation(line: 779, column: 1, scope: !2844, inlinedAt: !2943)
!2966 = !DILocation(line: 817, column: 12, scope: !2938)
!2967 = !{!1178, !729, i64 40}
!2968 = !DILocation(line: 817, column: 5, scope: !2938)
!2969 = !DILocation(line: 820, column: 41, scope: !2332)
!2970 = !DILocation(line: 820, column: 62, scope: !2332)
!2971 = !DILocation(line: 821, column: 9, scope: !2332)
!2972 = !DILocation(line: 823, column: 10, scope: !2343)
!2973 = !DILocation(line: 0, scope: !2342)
!2974 = !DILocation(line: 823, column: 19, scope: !2342)
!2975 = !DILocation(line: 824, column: 21, scope: !2340)
!2976 = !DILocation(line: 824, column: 13, scope: !2340)
!2977 = !DILocation(line: 824, column: 31, scope: !2340)
!2978 = !DILocation(line: 824, column: 13, scope: !2341)
!2979 = !DILocation(line: 825, column: 23, scope: !2338)
!2980 = !DILocation(line: 825, column: 17, scope: !2339)
!2981 = !DILocation(line: 826, column: 64, scope: !2337)
!2982 = !DILocation(line: 826, column: 21, scope: !2337)
!2983 = !DILocation(line: 827, column: 25, scope: !2337)
!2984 = !DILocation(line: 827, column: 56, scope: !2337)
!2985 = !DILocation(line: 827, column: 42, scope: !2337)
!2986 = !DILocation(line: 828, column: 52, scope: !2337)
!2987 = !DILocation(line: 828, column: 50, scope: !2337)
!2988 = !DILocation(line: 827, column: 17, scope: !2337)
!2989 = !DILocation(line: 830, column: 30, scope: !2339)
!2990 = !DILocation(line: 829, column: 13, scope: !2337)
!2991 = !DILocation(line: 831, column: 35, scope: !2373)
!2992 = !DILocation(line: 831, column: 17, scope: !2339)
!2993 = !DILocation(line: 832, column: 25, scope: !2373)
!2994 = !DILocation(line: 832, column: 31, scope: !2373)
!2995 = !DILocation(line: 832, column: 17, scope: !2373)
!2996 = !DILocation(line: 0, scope: !2332)
!2997 = !DILocation(line: 837, column: 1, scope: !2332)
!2998 = distinct !DISubprogram(name: "clusterCountNonFailingSlaves", scope: !3, file: !3, line: 853, type: !849, isLocal: false, isDefinition: true, scopeLine: 853, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2999)
!2999 = !{!3000, !3001, !3002}
!3000 = !DILocalVariable(name: "n", arg: 1, scope: !2998, file: !3, line: 853, type: !378)
!3001 = !DILocalVariable(name: "j", scope: !2998, file: !3, line: 854, type: !177)
!3002 = !DILocalVariable(name: "okslaves", scope: !2998, file: !3, line: 854, type: !177)
!3003 = !DILocation(line: 853, column: 47, scope: !2998)
!3004 = !DILocation(line: 854, column: 12, scope: !2998)
!3005 = !DILocation(line: 854, column: 9, scope: !2998)
!3006 = !DILocation(line: 856, column: 24, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 856, column: 5)
!3008 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 856, column: 5)
!3009 = !DILocation(line: 856, column: 19, scope: !3007)
!3010 = !DILocation(line: 856, column: 5, scope: !3008)
!3011 = !DILocation(line: 857, column: 14, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 857, column: 13)
!3013 = !DILocation(line: 857, column: 13, scope: !3007)
!3014 = !DILocation(line: 856, column: 36, scope: !3007)
!3015 = distinct !{!3015, !3010, !3016}
!3016 = !DILocation(line: 857, column: 48, scope: !3008)
!3017 = !DILocation(line: 858, column: 5, scope: !2998)
!3018 = distinct !DISubprogram(name: "freeClusterNode", scope: !3, file: !3, line: 862, type: !2319, isLocal: false, isDefinition: true, scopeLine: 862, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3019)
!3019 = !{!3020, !3021, !3022}
!3020 = !DILocalVariable(name: "n", arg: 1, scope: !3018, file: !3, line: 862, type: !378)
!3021 = !DILocalVariable(name: "nodename", scope: !3018, file: !3, line: 863, type: !189)
!3022 = !DILocalVariable(name: "j", scope: !3018, file: !3, line: 864, type: !177)
!3023 = !DILocation(line: 862, column: 35, scope: !3018)
!3024 = !DILocation(line: 864, column: 9, scope: !3018)
!3025 = !DILocation(line: 868, column: 24, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 868, column: 5)
!3027 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 868, column: 5)
!3028 = !DILocation(line: 868, column: 19, scope: !3026)
!3029 = !DILocation(line: 868, column: 5, scope: !3027)
!3030 = !DILocation(line: 869, column: 12, scope: !3026)
!3031 = !DILocation(line: 869, column: 9, scope: !3026)
!3032 = !DILocation(line: 869, column: 23, scope: !3026)
!3033 = !DILocation(line: 869, column: 31, scope: !3026)
!3034 = !DILocation(line: 868, column: 36, scope: !3026)
!3035 = distinct !{!3035, !3029, !3036}
!3036 = !DILocation(line: 869, column: 33, scope: !3027)
!3037 = distinct !{!3037, !3038}
!3038 = !{!"llvm.loop.unroll.disable"}
!3039 = !DILocation(line: 872, column: 9, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 872, column: 9)
!3041 = !DILocation(line: 872, column: 24, scope: !3040)
!3042 = !DILocation(line: 872, column: 30, scope: !3040)
!3043 = !DILocation(line: 872, column: 27, scope: !3040)
!3044 = !DILocation(line: 872, column: 9, scope: !3018)
!3045 = !DILocation(line: 820, column: 41, scope: !2332, inlinedAt: !3046)
!3046 = distinct !DILocation(line: 872, column: 39, scope: !3040)
!3047 = !DILocation(line: 820, column: 62, scope: !2332, inlinedAt: !3046)
!3048 = !DILocation(line: 821, column: 9, scope: !2332, inlinedAt: !3046)
!3049 = !DILocation(line: 823, column: 10, scope: !2343, inlinedAt: !3046)
!3050 = !DILocation(line: 0, scope: !2342, inlinedAt: !3046)
!3051 = !DILocation(line: 823, column: 19, scope: !2342, inlinedAt: !3046)
!3052 = !DILocation(line: 823, column: 5, scope: !2343, inlinedAt: !3046)
!3053 = !DILocation(line: 824, column: 21, scope: !2340, inlinedAt: !3046)
!3054 = !DILocation(line: 824, column: 13, scope: !2340, inlinedAt: !3046)
!3055 = !DILocation(line: 824, column: 31, scope: !2340, inlinedAt: !3046)
!3056 = !DILocation(line: 824, column: 13, scope: !2341, inlinedAt: !3046)
!3057 = !DILocation(line: 825, column: 23, scope: !2338, inlinedAt: !3046)
!3058 = !DILocation(line: 825, column: 17, scope: !2339, inlinedAt: !3046)
!3059 = !DILocation(line: 826, column: 64, scope: !2337, inlinedAt: !3046)
!3060 = !DILocation(line: 826, column: 21, scope: !2337, inlinedAt: !3046)
!3061 = !DILocation(line: 827, column: 25, scope: !2337, inlinedAt: !3046)
!3062 = !DILocation(line: 827, column: 56, scope: !2337, inlinedAt: !3046)
!3063 = !DILocation(line: 827, column: 42, scope: !2337, inlinedAt: !3046)
!3064 = !DILocation(line: 828, column: 52, scope: !2337, inlinedAt: !3046)
!3065 = !DILocation(line: 828, column: 50, scope: !2337, inlinedAt: !3046)
!3066 = !DILocation(line: 827, column: 17, scope: !2337, inlinedAt: !3046)
!3067 = !DILocation(line: 830, column: 30, scope: !2339, inlinedAt: !3046)
!3068 = !DILocation(line: 829, column: 13, scope: !2337, inlinedAt: !3046)
!3069 = !DILocation(line: 831, column: 35, scope: !2373, inlinedAt: !3046)
!3070 = !DILocation(line: 831, column: 17, scope: !2339, inlinedAt: !3046)
!3071 = !DILocation(line: 832, column: 25, scope: !2373, inlinedAt: !3046)
!3072 = !DILocation(line: 832, column: 31, scope: !2373, inlinedAt: !3046)
!3073 = !DILocation(line: 832, column: 17, scope: !2373, inlinedAt: !3046)
!3074 = !DILocation(line: 875, column: 26, scope: !3018)
!3075 = !DILocation(line: 875, column: 16, scope: !3018)
!3076 = !DILocation(line: 863, column: 9, scope: !3018)
!3077 = !DILocation(line: 876, column: 5, scope: !3018)
!3078 = !DILocation(line: 877, column: 5, scope: !3018)
!3079 = !DILocation(line: 880, column: 12, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 880, column: 9)
!3081 = !DILocation(line: 880, column: 9, scope: !3080)
!3082 = !DILocation(line: 880, column: 9, scope: !3018)
!3083 = !DILocation(line: 603, column: 35, scope: !2530, inlinedAt: !3084)
!3084 = distinct !DILocation(line: 880, column: 18, scope: !3080)
!3085 = !DILocation(line: 604, column: 15, scope: !2537, inlinedAt: !3084)
!3086 = !DILocation(line: 604, column: 18, scope: !2537, inlinedAt: !3084)
!3087 = !DILocation(line: 604, column: 9, scope: !2530, inlinedAt: !3084)
!3088 = !DILocation(line: 605, column: 34, scope: !2541, inlinedAt: !3084)
!3089 = !DILocation(line: 605, column: 9, scope: !2541, inlinedAt: !3084)
!3090 = !DILocation(line: 606, column: 5, scope: !2541, inlinedAt: !3084)
!3091 = !DILocation(line: 607, column: 19, scope: !2530, inlinedAt: !3084)
!3092 = !DILocation(line: 607, column: 5, scope: !2530, inlinedAt: !3084)
!3093 = !DILocation(line: 608, column: 19, scope: !2530, inlinedAt: !3084)
!3094 = !DILocation(line: 608, column: 5, scope: !2530, inlinedAt: !3084)
!3095 = !DILocation(line: 609, column: 15, scope: !2549, inlinedAt: !3084)
!3096 = !DILocation(line: 609, column: 9, scope: !2549, inlinedAt: !3084)
!3097 = !DILocation(line: 609, column: 9, scope: !2530, inlinedAt: !3084)
!3098 = !DILocation(line: 610, column: 21, scope: !2549, inlinedAt: !3084)
!3099 = !DILocation(line: 610, column: 26, scope: !2549, inlinedAt: !3084)
!3100 = !DILocation(line: 610, column: 9, scope: !2549, inlinedAt: !3084)
!3101 = !DILocation(line: 611, column: 17, scope: !2530, inlinedAt: !3084)
!3102 = !DILocation(line: 611, column: 5, scope: !2530, inlinedAt: !3084)
!3103 = !DILocation(line: 612, column: 11, scope: !2530, inlinedAt: !3084)
!3104 = !DILocation(line: 612, column: 5, scope: !2530, inlinedAt: !3084)
!3105 = !DILocation(line: 880, column: 18, scope: !3080)
!3106 = !DILocation(line: 881, column: 20, scope: !3018)
!3107 = !DILocation(line: 881, column: 5, scope: !3018)
!3108 = !DILocation(line: 882, column: 14, scope: !3018)
!3109 = !DILocation(line: 882, column: 5, scope: !3018)
!3110 = !DILocation(line: 883, column: 11, scope: !3018)
!3111 = !DILocation(line: 883, column: 5, scope: !3018)
!3112 = !DILocation(line: 884, column: 1, scope: !3018)
!3113 = distinct !DISubprogram(name: "clusterRenameNode", scope: !3, file: !3, line: 950, type: !3114, isLocal: false, isDefinition: true, scopeLine: 950, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3116)
!3114 = !DISubroutineType(types: !3115)
!3115 = !{null, !378, !178}
!3116 = !{!3117, !3118, !3119, !3120}
!3117 = !DILocalVariable(name: "node", arg: 1, scope: !3113, file: !3, line: 950, type: !378)
!3118 = !DILocalVariable(name: "newname", arg: 2, scope: !3113, file: !3, line: 950, type: !178)
!3119 = !DILocalVariable(name: "retval", scope: !3113, file: !3, line: 951, type: !177)
!3120 = !DILocalVariable(name: "s", scope: !3113, file: !3, line: 952, type: !189)
!3121 = !DILocation(line: 950, column: 37, scope: !3113)
!3122 = !DILocation(line: 950, column: 49, scope: !3113)
!3123 = !DILocation(line: 952, column: 23, scope: !3113)
!3124 = !DILocation(line: 952, column: 13, scope: !3113)
!3125 = !DILocation(line: 952, column: 9, scope: !3113)
!3126 = !DILocation(line: 954, column: 5, scope: !3113)
!3127 = !DILocation(line: 956, column: 32, scope: !3113)
!3128 = !DILocation(line: 956, column: 41, scope: !3113)
!3129 = !DILocation(line: 956, column: 14, scope: !3113)
!3130 = !DILocation(line: 951, column: 9, scope: !3113)
!3131 = !DILocation(line: 957, column: 5, scope: !3113)
!3132 = !DILocation(line: 958, column: 5, scope: !3113)
!3133 = !DILocation(line: 959, column: 5, scope: !3113)
!3134 = !DILocation(line: 887, column: 33, scope: !848, inlinedAt: !3135)
!3135 = distinct !DILocation(line: 960, column: 5, scope: !3113)
!3136 = !DILocation(line: 890, column: 29, scope: !848, inlinedAt: !3135)
!3137 = !DILocation(line: 890, column: 38, scope: !848, inlinedAt: !3135)
!3138 = !DILocation(line: 891, column: 13, scope: !848, inlinedAt: !3135)
!3139 = !DILocation(line: 891, column: 52, scope: !848, inlinedAt: !3135)
!3140 = !DILocation(line: 890, column: 14, scope: !848, inlinedAt: !3135)
!3141 = !DILocation(line: 888, column: 9, scope: !848, inlinedAt: !3135)
!3142 = !DILocation(line: 961, column: 1, scope: !3113)
!3143 = distinct !DISubprogram(name: "clusterBumpConfigEpochWithoutConsensus", scope: !3, file: !3, line: 1013, type: !3144, isLocal: false, isDefinition: true, scopeLine: 1013, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3146)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{!177}
!3146 = !{!3147}
!3147 = !DILocalVariable(name: "maxEpoch", scope: !3143, file: !3, line: 1014, type: !104)
!3148 = !DILocation(line: 970, column: 14, scope: !1252, inlinedAt: !3149)
!3149 = distinct !DILocation(line: 1014, column: 25, scope: !3143)
!3150 = !DILocation(line: 974, column: 37, scope: !1252, inlinedAt: !3149)
!3151 = !DILocation(line: 974, column: 46, scope: !1252, inlinedAt: !3149)
!3152 = !DILocation(line: 974, column: 10, scope: !1252, inlinedAt: !3149)
!3153 = !DILocation(line: 971, column: 19, scope: !1252, inlinedAt: !3149)
!3154 = !DILocation(line: 975, column: 17, scope: !1252, inlinedAt: !3149)
!3155 = !DILocation(line: 972, column: 16, scope: !1252, inlinedAt: !3149)
!3156 = !DILocation(line: 975, column: 31, scope: !1252, inlinedAt: !3149)
!3157 = !DILocation(line: 975, column: 5, scope: !1252, inlinedAt: !3149)
!3158 = !DILocation(line: 976, column: 29, scope: !1259, inlinedAt: !3149)
!3159 = !DILocation(line: 976, column: 22, scope: !1259, inlinedAt: !3149)
!3160 = !DILocation(line: 977, column: 19, scope: !1274, inlinedAt: !3149)
!3161 = !DILocation(line: 977, column: 31, scope: !1274, inlinedAt: !3149)
!3162 = !DILocation(line: 977, column: 13, scope: !1259, inlinedAt: !3149)
!3163 = !DILocation(line: 0, scope: !1274, inlinedAt: !3149)
!3164 = !DILocation(line: 979, column: 5, scope: !1252, inlinedAt: !3149)
!3165 = !DILocation(line: 980, column: 22, scope: !1283, inlinedAt: !3149)
!3166 = !DILocation(line: 980, column: 31, scope: !1283, inlinedAt: !3149)
!3167 = !DILocation(line: 980, column: 13, scope: !1283, inlinedAt: !3149)
!3168 = !DILocation(line: 980, column: 9, scope: !1252, inlinedAt: !3149)
!3169 = !DILocation(line: 1014, column: 14, scope: !3143)
!3170 = !DILocation(line: 1016, column: 9, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 1016, column: 9)
!3172 = !DILocation(line: 1016, column: 17, scope: !3171)
!3173 = !DILocation(line: 1016, column: 29, scope: !3171)
!3174 = !DILocation(line: 1017, column: 29, scope: !3171)
!3175 = !DILocation(line: 1016, column: 34, scope: !3171)
!3176 = !DILocation(line: 1019, column: 37, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 1018, column: 5)
!3178 = !DILocation(line: 1020, column: 29, scope: !3177)
!3179 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !3180)
!3180 = distinct !DILocation(line: 1021, column: 9, scope: !3177)
!3181 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !3180)
!3182 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !3180)
!3183 = !DILocation(line: 1023, column: 9, scope: !3177)
!3184 = !DILocation(line: 1026, column: 9, scope: !3177)
!3185 = !DILocation(line: 0, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 1027, column: 12)
!3187 = !DILocation(line: 1030, column: 1, scope: !3143)
!3188 = distinct !DISubprogram(name: "clusterHandleConfigEpochCollision", scope: !3, file: !3, line: 1078, type: !2319, isLocal: false, isDefinition: true, scopeLine: 1078, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3189)
!3189 = !{!3190}
!3190 = !DILocalVariable(name: "sender", arg: 1, scope: !3188, file: !3, line: 1078, type: !378)
!3191 = !DILocation(line: 1078, column: 53, scope: !3188)
!3192 = !DILocation(line: 1080, column: 17, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 1080, column: 9)
!3194 = !DILocation(line: 1080, column: 32, scope: !3193)
!3195 = !DILocation(line: 1080, column: 40, scope: !3193)
!3196 = !DILocation(line: 1080, column: 29, scope: !3193)
!3197 = !DILocation(line: 1080, column: 52, scope: !3193)
!3198 = !DILocation(line: 1081, column: 10, scope: !3193)
!3199 = !DILocation(line: 1081, column: 31, scope: !3193)
!3200 = !DILocation(line: 1081, column: 35, scope: !3193)
!3201 = !DILocation(line: 1080, column: 9, scope: !3188)
!3202 = !DILocation(line: 1083, column: 16, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 1083, column: 9)
!3204 = !DILocation(line: 1083, column: 29, scope: !3203)
!3205 = !DILocation(line: 1083, column: 9, scope: !3203)
!3206 = !DILocation(line: 1083, column: 59, scope: !3203)
!3207 = !DILocation(line: 1083, column: 9, scope: !3188)
!3208 = !DILocation(line: 1085, column: 12, scope: !3188)
!3209 = !DILocation(line: 1085, column: 21, scope: !3188)
!3210 = !DILocation(line: 1085, column: 33, scope: !3188)
!3211 = !DILocation(line: 1086, column: 5, scope: !3188)
!3212 = !DILocation(line: 1086, column: 13, scope: !3188)
!3213 = !DILocation(line: 1086, column: 25, scope: !3188)
!3214 = !DILocation(line: 360, column: 33, scope: !1653, inlinedAt: !3215)
!3215 = distinct !DILocation(line: 1087, column: 5, scope: !3188)
!3216 = !DILocation(line: 361, column: 9, scope: !1658, inlinedAt: !3215)
!3217 = !DILocation(line: 361, column: 37, scope: !1658, inlinedAt: !3215)
!3218 = !DILocation(line: 361, column: 9, scope: !1653, inlinedAt: !3215)
!3219 = !DILocation(line: 362, column: 9, scope: !1662, inlinedAt: !3215)
!3220 = !DILocation(line: 363, column: 9, scope: !1662, inlinedAt: !3215)
!3221 = !DILocation(line: 1092, column: 30, scope: !3188)
!3222 = !DILocation(line: 1092, column: 38, scope: !3188)
!3223 = !DILocation(line: 1088, column: 5, scope: !3188)
!3224 = !DILocation(line: 1093, column: 1, scope: !3188)
!3225 = distinct !DISubprogram(name: "clusterBlacklistCleanup", scope: !3, file: !3, line: 1126, type: !293, isLocal: false, isDefinition: true, scopeLine: 1126, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3226)
!3226 = !{!3227, !3228, !3229}
!3227 = !DILocalVariable(name: "di", scope: !3225, file: !3, line: 1127, type: !297)
!3228 = !DILocalVariable(name: "de", scope: !3225, file: !3, line: 1128, type: !340)
!3229 = !DILocalVariable(name: "expire", scope: !3230, file: !3, line: 1132, type: !351)
!3230 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1131, column: 40)
!3231 = !DILocation(line: 1130, column: 37, scope: !3225)
!3232 = !DILocation(line: 1130, column: 46, scope: !3225)
!3233 = !DILocation(line: 1130, column: 10, scope: !3225)
!3234 = !DILocation(line: 1127, column: 19, scope: !3225)
!3235 = !DILocation(line: 1131, column: 17, scope: !3225)
!3236 = !DILocation(line: 1128, column: 16, scope: !3225)
!3237 = !DILocation(line: 1131, column: 31, scope: !3225)
!3238 = !DILocation(line: 1131, column: 5, scope: !3225)
!3239 = !DILocation(line: 1132, column: 26, scope: !3230)
!3240 = !DILocation(line: 1132, column: 17, scope: !3230)
!3241 = !DILocation(line: 1134, column: 29, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3230, file: !3, line: 1134, column: 13)
!3243 = !{!785, !729, i64 2872}
!3244 = !DILocation(line: 1134, column: 20, scope: !3242)
!3245 = !DILocation(line: 1134, column: 13, scope: !3230)
!3246 = !DILocation(line: 1135, column: 31, scope: !3242)
!3247 = !DILocation(line: 1135, column: 40, scope: !3242)
!3248 = !DILocation(line: 1135, column: 57, scope: !3242)
!3249 = !{!3250, !758, i64 0}
!3250 = !{!"dictEntry", !758, i64 0, !710, i64 8, !758, i64 16}
!3251 = !DILocation(line: 1135, column: 13, scope: !3242)
!3252 = distinct !{!3252, !3238, !3253}
!3253 = !DILocation(line: 1136, column: 5, scope: !3225)
!3254 = !DILocation(line: 1137, column: 5, scope: !3225)
!3255 = !DILocation(line: 1138, column: 1, scope: !3225)
!3256 = distinct !DISubprogram(name: "clusterBlacklistAddNode", scope: !3, file: !3, line: 1141, type: !2319, isLocal: false, isDefinition: true, scopeLine: 1141, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3257)
!3257 = !{!3258, !3259, !3260}
!3258 = !DILocalVariable(name: "node", arg: 1, scope: !3256, file: !3, line: 1141, type: !378)
!3259 = !DILocalVariable(name: "de", scope: !3256, file: !3, line: 1142, type: !340)
!3260 = !DILocalVariable(name: "id", scope: !3256, file: !3, line: 1143, type: !189)
!3261 = !DILocation(line: 1141, column: 43, scope: !3256)
!3262 = !DILocation(line: 1143, column: 24, scope: !3256)
!3263 = !DILocation(line: 1143, column: 14, scope: !3256)
!3264 = !DILocation(line: 1143, column: 9, scope: !3256)
!3265 = !DILocation(line: 1130, column: 37, scope: !3225, inlinedAt: !3266)
!3266 = distinct !DILocation(line: 1145, column: 5, scope: !3256)
!3267 = !DILocation(line: 1130, column: 46, scope: !3225, inlinedAt: !3266)
!3268 = !DILocation(line: 1130, column: 10, scope: !3225, inlinedAt: !3266)
!3269 = !DILocation(line: 1127, column: 19, scope: !3225, inlinedAt: !3266)
!3270 = !DILocation(line: 1131, column: 17, scope: !3225, inlinedAt: !3266)
!3271 = !DILocation(line: 1128, column: 16, scope: !3225, inlinedAt: !3266)
!3272 = !DILocation(line: 1131, column: 31, scope: !3225, inlinedAt: !3266)
!3273 = !DILocation(line: 1131, column: 5, scope: !3225, inlinedAt: !3266)
!3274 = !DILocation(line: 1132, column: 26, scope: !3230, inlinedAt: !3266)
!3275 = !DILocation(line: 1132, column: 17, scope: !3230, inlinedAt: !3266)
!3276 = !DILocation(line: 1134, column: 29, scope: !3242, inlinedAt: !3266)
!3277 = !DILocation(line: 1134, column: 20, scope: !3242, inlinedAt: !3266)
!3278 = !DILocation(line: 1134, column: 13, scope: !3230, inlinedAt: !3266)
!3279 = !DILocation(line: 1135, column: 31, scope: !3242, inlinedAt: !3266)
!3280 = !DILocation(line: 1135, column: 40, scope: !3242, inlinedAt: !3266)
!3281 = !DILocation(line: 1135, column: 57, scope: !3242, inlinedAt: !3266)
!3282 = !DILocation(line: 1135, column: 13, scope: !3242, inlinedAt: !3266)
!3283 = !DILocation(line: 1137, column: 5, scope: !3225, inlinedAt: !3266)
!3284 = !DILocation(line: 1146, column: 24, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 1146, column: 9)
!3286 = !DILocation(line: 1146, column: 33, scope: !3285)
!3287 = !DILocation(line: 1146, column: 9, scope: !3285)
!3288 = !DILocation(line: 1146, column: 59, scope: !3285)
!3289 = !DILocation(line: 1146, column: 9, scope: !3256)
!3290 = !DILocation(line: 1149, column: 14, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 1146, column: 71)
!3292 = !DILocation(line: 1150, column: 5, scope: !3291)
!3293 = !DILocation(line: 0, scope: !3256)
!3294 = !DILocation(line: 1151, column: 26, scope: !3256)
!3295 = !DILocation(line: 1151, column: 35, scope: !3256)
!3296 = !DILocation(line: 1151, column: 10, scope: !3256)
!3297 = !DILocation(line: 1142, column: 16, scope: !3256)
!3298 = !DILocation(line: 1152, column: 5, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 1152, column: 5)
!3300 = !DILocation(line: 1153, column: 5, scope: !3256)
!3301 = !DILocation(line: 1154, column: 1, scope: !3256)
!3302 = distinct !DISubprogram(name: "clusterBlacklistExists", scope: !3, file: !3, line: 1159, type: !437, isLocal: false, isDefinition: true, scopeLine: 1159, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3303)
!3303 = !{!3304, !3305, !3306}
!3304 = !DILocalVariable(name: "nodeid", arg: 1, scope: !3302, file: !3, line: 1159, type: !178)
!3305 = !DILocalVariable(name: "id", scope: !3302, file: !3, line: 1160, type: !189)
!3306 = !DILocalVariable(name: "retval", scope: !3302, file: !3, line: 1161, type: !177)
!3307 = !DILocation(line: 1159, column: 34, scope: !3302)
!3308 = !DILocation(line: 1160, column: 14, scope: !3302)
!3309 = !DILocation(line: 1160, column: 9, scope: !3302)
!3310 = !DILocation(line: 1130, column: 37, scope: !3225, inlinedAt: !3311)
!3311 = distinct !DILocation(line: 1163, column: 5, scope: !3302)
!3312 = !DILocation(line: 1130, column: 46, scope: !3225, inlinedAt: !3311)
!3313 = !DILocation(line: 1130, column: 10, scope: !3225, inlinedAt: !3311)
!3314 = !DILocation(line: 1127, column: 19, scope: !3225, inlinedAt: !3311)
!3315 = !DILocation(line: 1131, column: 17, scope: !3225, inlinedAt: !3311)
!3316 = !DILocation(line: 1128, column: 16, scope: !3225, inlinedAt: !3311)
!3317 = !DILocation(line: 1131, column: 31, scope: !3225, inlinedAt: !3311)
!3318 = !DILocation(line: 1131, column: 5, scope: !3225, inlinedAt: !3311)
!3319 = !DILocation(line: 1132, column: 26, scope: !3230, inlinedAt: !3311)
!3320 = !DILocation(line: 1132, column: 17, scope: !3230, inlinedAt: !3311)
!3321 = !DILocation(line: 1134, column: 29, scope: !3242, inlinedAt: !3311)
!3322 = !DILocation(line: 1134, column: 20, scope: !3242, inlinedAt: !3311)
!3323 = !DILocation(line: 1134, column: 13, scope: !3230, inlinedAt: !3311)
!3324 = !DILocation(line: 1135, column: 31, scope: !3242, inlinedAt: !3311)
!3325 = !DILocation(line: 1135, column: 40, scope: !3242, inlinedAt: !3311)
!3326 = !DILocation(line: 1135, column: 57, scope: !3242, inlinedAt: !3311)
!3327 = !DILocation(line: 1135, column: 13, scope: !3242, inlinedAt: !3311)
!3328 = !DILocation(line: 1137, column: 5, scope: !3225, inlinedAt: !3311)
!3329 = !DILocation(line: 1164, column: 30, scope: !3302)
!3330 = !DILocation(line: 1164, column: 39, scope: !3302)
!3331 = !DILocation(line: 1164, column: 14, scope: !3302)
!3332 = !DILocation(line: 1164, column: 60, scope: !3302)
!3333 = !DILocation(line: 1161, column: 9, scope: !3302)
!3334 = !DILocation(line: 1165, column: 5, scope: !3302)
!3335 = !DILocation(line: 1166, column: 5, scope: !3302)
!3336 = distinct !DISubprogram(name: "markNodeAsFailingIfNeeded", scope: !3, file: !3, line: 1194, type: !2319, isLocal: false, isDefinition: true, scopeLine: 1194, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3337)
!3337 = !{!3338, !3339, !3340}
!3338 = !DILocalVariable(name: "node", arg: 1, scope: !3336, file: !3, line: 1194, type: !378)
!3339 = !DILocalVariable(name: "failures", scope: !3336, file: !3, line: 1195, type: !177)
!3340 = !DILocalVariable(name: "needed_quorum", scope: !3336, file: !3, line: 1196, type: !177)
!3341 = !DILocation(line: 1194, column: 45, scope: !3336)
!3342 = !DILocation(line: 1196, column: 33, scope: !3336)
!3343 = !DILocation(line: 1196, column: 42, scope: !3336)
!3344 = !DILocation(line: 1196, column: 47, scope: !3336)
!3345 = !DILocation(line: 1196, column: 9, scope: !3336)
!3346 = !DILocation(line: 1198, column: 10, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1198, column: 9)
!3348 = !DILocation(line: 1198, column: 9, scope: !3336)
!3349 = !DILocation(line: 815, column: 49, scope: !2938, inlinedAt: !3350)
!3350 = distinct !DILocation(line: 1201, column: 16, scope: !3336)
!3351 = !DILocation(line: 765, column: 52, scope: !2844, inlinedAt: !3352)
!3352 = distinct !DILocation(line: 816, column: 5, scope: !2938, inlinedAt: !3350)
!3353 = !DILocation(line: 766, column: 21, scope: !2844, inlinedAt: !3352)
!3354 = !DILocation(line: 766, column: 11, scope: !2844, inlinedAt: !3352)
!3355 = !DILocation(line: 768, column: 5, scope: !2844, inlinedAt: !3352)
!3356 = !DILocation(line: 770, column: 31, scope: !2844, inlinedAt: !3352)
!3357 = !DILocation(line: 770, column: 52, scope: !2844, inlinedAt: !3352)
!3358 = !DILocation(line: 770, column: 14, scope: !2844, inlinedAt: !3352)
!3359 = !DILocation(line: 772, column: 20, scope: !2844, inlinedAt: !3352)
!3360 = !DILocation(line: 772, column: 14, scope: !2844, inlinedAt: !3352)
!3361 = !DILocation(line: 768, column: 14, scope: !2844, inlinedAt: !3352)
!3362 = !DILocation(line: 774, column: 5, scope: !2844, inlinedAt: !3352)
!3363 = !DILocation(line: 775, column: 18, scope: !2844, inlinedAt: !3352)
!3364 = !DILocation(line: 767, column: 15, scope: !2844, inlinedAt: !3352)
!3365 = !DILocation(line: 775, column: 33, scope: !2844, inlinedAt: !3352)
!3366 = !DILocation(line: 775, column: 5, scope: !2844, inlinedAt: !3352)
!3367 = !DILocation(line: 776, column: 18, scope: !2870, inlinedAt: !3352)
!3368 = !DILocation(line: 769, column: 28, scope: !2844, inlinedAt: !3352)
!3369 = !DILocation(line: 777, column: 23, scope: !2873, inlinedAt: !3352)
!3370 = !DILocation(line: 777, column: 17, scope: !2873, inlinedAt: !3352)
!3371 = !DILocation(line: 777, column: 28, scope: !2873, inlinedAt: !3352)
!3372 = !DILocation(line: 777, column: 13, scope: !2870, inlinedAt: !3352)
!3373 = !DILocation(line: 777, column: 39, scope: !2873, inlinedAt: !3352)
!3374 = !DILocation(line: 779, column: 1, scope: !2844, inlinedAt: !3352)
!3375 = !DILocation(line: 817, column: 12, scope: !2938, inlinedAt: !3350)
!3376 = !DILocation(line: 1195, column: 9, scope: !3336)
!3377 = !DILocation(line: 1203, column: 9, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1203, column: 9)
!3379 = !DILocation(line: 1203, column: 9, scope: !3336)
!3380 = !DILocation(line: 1204, column: 18, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1204, column: 9)
!3382 = !DILocation(line: 1204, column: 9, scope: !3336)
!3383 = !DILocation(line: 1207, column: 60, scope: !3336)
!3384 = !DILocation(line: 1206, column: 5, scope: !3336)
!3385 = !DILocation(line: 1210, column: 17, scope: !3336)
!3386 = !DILocation(line: 1211, column: 17, scope: !3336)
!3387 = !DILocation(line: 1212, column: 23, scope: !3336)
!3388 = !DILocation(line: 1212, column: 11, scope: !3336)
!3389 = !DILocation(line: 1212, column: 21, scope: !3336)
!3390 = !DILocation(line: 1216, column: 9, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1216, column: 9)
!3392 = !DILocation(line: 1216, column: 9, scope: !3336)
!3393 = !DILocation(line: 1216, column: 31, scope: !3391)
!3394 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !3395)
!3395 = distinct !DILocation(line: 1217, column: 5, scope: !3336)
!3396 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !3395)
!3397 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !3395)
!3398 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !3395)
!3399 = !DILocation(line: 1218, column: 1, scope: !3336)
!3400 = distinct !DISubprogram(name: "clusterSendFail", scope: !3, file: !3, line: 2565, type: !3401, isLocal: false, isDefinition: true, scopeLine: 2565, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3403)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{null, !178}
!3403 = !{!3404, !3405, !3407}
!3404 = !DILocalVariable(name: "nodename", arg: 1, scope: !3400, file: !3, line: 2565, type: !178)
!3405 = !DILocalVariable(name: "buf", scope: !3400, file: !3, line: 2566, type: !3406)
!3406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 34816, elements: !2568)
!3407 = !DILocalVariable(name: "hdr", scope: !3400, file: !3, line: 2567, type: !92)
!3408 = !DILocation(line: 2565, column: 28, scope: !3400)
!3409 = !DILocation(line: 2566, column: 5, scope: !3400)
!3410 = !DILocation(line: 2567, column: 17, scope: !3400)
!3411 = !DILocation(line: 2566, column: 19, scope: !3400)
!3412 = !DILocation(line: 2569, column: 5, scope: !3400)
!3413 = !DILocation(line: 2570, column: 17, scope: !3400)
!3414 = !DILocation(line: 2570, column: 12, scope: !3400)
!3415 = !DILocation(line: 2570, column: 5, scope: !3400)
!3416 = !DILocation(line: 2571, column: 33, scope: !3400)
!3417 = !DILocalVariable(name: "buf", arg: 1, scope: !3418, file: !3, line: 2230, type: !6)
!3418 = distinct !DISubprogram(name: "clusterBroadcastMessage", scope: !3, file: !3, line: 2230, type: !3419, isLocal: false, isDefinition: true, scopeLine: 2230, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3421)
!3419 = !DISubroutineType(types: !3420)
!3420 = !{null, !6, !1455}
!3421 = !{!3417, !3422, !3423, !3424, !3425}
!3422 = !DILocalVariable(name: "len", arg: 2, scope: !3418, file: !3, line: 2230, type: !1455)
!3423 = !DILocalVariable(name: "di", scope: !3418, file: !3, line: 2231, type: !297)
!3424 = !DILocalVariable(name: "de", scope: !3418, file: !3, line: 2232, type: !340)
!3425 = !DILocalVariable(name: "node", scope: !3426, file: !3, line: 2236, type: !378)
!3426 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 2235, column: 40)
!3427 = !DILocation(line: 2230, column: 36, scope: !3418, inlinedAt: !3428)
!3428 = distinct !DILocation(line: 2571, column: 5, scope: !3400)
!3429 = !DILocation(line: 2230, column: 48, scope: !3418, inlinedAt: !3428)
!3430 = !DILocation(line: 2234, column: 37, scope: !3418, inlinedAt: !3428)
!3431 = !DILocation(line: 2234, column: 46, scope: !3418, inlinedAt: !3428)
!3432 = !DILocation(line: 2234, column: 10, scope: !3418, inlinedAt: !3428)
!3433 = !DILocation(line: 2231, column: 19, scope: !3418, inlinedAt: !3428)
!3434 = !DILocation(line: 2235, column: 17, scope: !3418, inlinedAt: !3428)
!3435 = !DILocation(line: 2232, column: 16, scope: !3418, inlinedAt: !3428)
!3436 = !DILocation(line: 2235, column: 31, scope: !3418, inlinedAt: !3428)
!3437 = !DILocation(line: 2235, column: 5, scope: !3418, inlinedAt: !3428)
!3438 = !DILocation(line: 2236, column: 29, scope: !3426, inlinedAt: !3428)
!3439 = !DILocation(line: 2236, column: 22, scope: !3426, inlinedAt: !3428)
!3440 = !DILocation(line: 2238, column: 20, scope: !3441, inlinedAt: !3428)
!3441 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 2238, column: 13)
!3442 = !DILocation(line: 2238, column: 14, scope: !3441, inlinedAt: !3428)
!3443 = !DILocation(line: 2238, column: 13, scope: !3426, inlinedAt: !3428)
!3444 = distinct !{!3444, !3445, !3446}
!3445 = !DILocation(line: 2235, column: 5, scope: !3418)
!3446 = !DILocation(line: 2242, column: 5, scope: !3418)
!3447 = !DILocation(line: 2239, column: 19, scope: !3448, inlinedAt: !3428)
!3448 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 2239, column: 13)
!3449 = !DILocation(line: 2239, column: 25, scope: !3448, inlinedAt: !3428)
!3450 = !DILocation(line: 2239, column: 13, scope: !3426, inlinedAt: !3428)
!3451 = !DILocation(line: 2241, column: 9, scope: !3426, inlinedAt: !3428)
!3452 = !DILocation(line: 2242, column: 5, scope: !3418, inlinedAt: !3428)
!3453 = !DILocation(line: 2243, column: 5, scope: !3418, inlinedAt: !3428)
!3454 = !DILocation(line: 2572, column: 1, scope: !3400)
!3455 = distinct !DISubprogram(name: "clearNodeFailureIfNeeded", scope: !3, file: !3, line: 1223, type: !2319, isLocal: false, isDefinition: true, scopeLine: 1223, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3456)
!3456 = !{!3457, !3458}
!3457 = !DILocalVariable(name: "node", arg: 1, scope: !3455, file: !3, line: 1223, type: !378)
!3458 = !DILocalVariable(name: "now", scope: !3455, file: !3, line: 1224, type: !184)
!3459 = !DILocation(line: 1223, column: 44, scope: !3455)
!3460 = !DILocation(line: 1224, column: 20, scope: !3455)
!3461 = !DILocation(line: 1224, column: 14, scope: !3455)
!3462 = !DILocation(line: 1226, column: 5, scope: !3455)
!3463 = !DILocation(line: 1230, column: 9, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1230, column: 9)
!3465 = !DILocation(line: 1230, column: 27, scope: !3464)
!3466 = !DILocation(line: 1230, column: 36, scope: !3464)
!3467 = !DILocation(line: 1230, column: 45, scope: !3464)
!3468 = !DILocation(line: 1230, column: 9, scope: !3455)
!3469 = !DILocation(line: 1233, column: 17, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 1230, column: 51)
!3471 = !DILocation(line: 1234, column: 17, scope: !3470)
!3472 = !DILocation(line: 1231, column: 9, scope: !3470)
!3473 = !DILocation(line: 1235, column: 21, scope: !3470)
!3474 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !3475)
!3475 = distinct !DILocation(line: 1236, column: 9, scope: !3470)
!3476 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !3475)
!3477 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !3475)
!3478 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !3475)
!3479 = !DILocation(line: 1237, column: 5, scope: !3470)
!3480 = !DILocation(line: 1243, column: 9, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1243, column: 9)
!3482 = !DILocation(line: 1243, column: 28, scope: !3481)
!3483 = !DILocation(line: 1243, column: 37, scope: !3481)
!3484 = !DILocation(line: 1243, column: 46, scope: !3481)
!3485 = !DILocation(line: 1243, column: 50, scope: !3481)
!3486 = !DILocation(line: 1244, column: 22, scope: !3481)
!3487 = !DILocation(line: 1244, column: 14, scope: !3481)
!3488 = !DILocation(line: 1245, column: 17, scope: !3481)
!3489 = !DILocation(line: 1245, column: 38, scope: !3481)
!3490 = !DILocation(line: 1244, column: 33, scope: !3481)
!3491 = !DILocation(line: 1243, column: 9, scope: !3455)
!3492 = !DILocation(line: 1249, column: 17, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 1246, column: 5)
!3494 = !DILocation(line: 1247, column: 9, scope: !3493)
!3495 = !DILocation(line: 1250, column: 21, scope: !3493)
!3496 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !3497)
!3497 = distinct !DILocation(line: 1251, column: 9, scope: !3493)
!3498 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !3497)
!3499 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !3497)
!3500 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !3497)
!3501 = !DILocation(line: 1252, column: 5, scope: !3493)
!3502 = !DILocation(line: 1253, column: 1, scope: !3455)
!3503 = distinct !DISubprogram(name: "clusterHandshakeInProgress", scope: !3, file: !3, line: 1258, type: !3504, isLocal: false, isDefinition: true, scopeLine: 1258, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!177, !178, !177, !177}
!3506 = !{!3507, !3508, !3509, !3510, !3511, !3512}
!3507 = !DILocalVariable(name: "ip", arg: 1, scope: !3503, file: !3, line: 1258, type: !178)
!3508 = !DILocalVariable(name: "port", arg: 2, scope: !3503, file: !3, line: 1258, type: !177)
!3509 = !DILocalVariable(name: "cport", arg: 3, scope: !3503, file: !3, line: 1258, type: !177)
!3510 = !DILocalVariable(name: "di", scope: !3503, file: !3, line: 1259, type: !297)
!3511 = !DILocalVariable(name: "de", scope: !3503, file: !3, line: 1260, type: !340)
!3512 = !DILocalVariable(name: "node", scope: !3513, file: !3, line: 1264, type: !378)
!3513 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1263, column: 40)
!3514 = !DILocation(line: 1258, column: 38, scope: !3503)
!3515 = !DILocation(line: 1258, column: 46, scope: !3503)
!3516 = !DILocation(line: 1258, column: 56, scope: !3503)
!3517 = !DILocation(line: 1262, column: 37, scope: !3503)
!3518 = !DILocation(line: 1262, column: 46, scope: !3503)
!3519 = !DILocation(line: 1262, column: 10, scope: !3503)
!3520 = !DILocation(line: 1259, column: 19, scope: !3503)
!3521 = !DILocation(line: 1263, column: 17, scope: !3503)
!3522 = !DILocation(line: 1260, column: 16, scope: !3503)
!3523 = !DILocation(line: 1263, column: 31, scope: !3503)
!3524 = !DILocation(line: 1263, column: 5, scope: !3503)
!3525 = !DILocation(line: 1264, column: 29, scope: !3513)
!3526 = !DILocation(line: 1264, column: 22, scope: !3513)
!3527 = !DILocation(line: 1266, column: 14, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 1266, column: 13)
!3529 = !DILocation(line: 1266, column: 13, scope: !3513)
!3530 = !DILocation(line: 1267, column: 25, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 1267, column: 13)
!3532 = !DILocation(line: 1267, column: 14, scope: !3531)
!3533 = !DILocation(line: 1267, column: 38, scope: !3531)
!3534 = !DILocation(line: 1268, column: 19, scope: !3531)
!3535 = !DILocation(line: 1268, column: 24, scope: !3531)
!3536 = !DILocation(line: 1268, column: 32, scope: !3531)
!3537 = !DILocation(line: 1269, column: 19, scope: !3531)
!3538 = !DILocation(line: 1269, column: 25, scope: !3531)
!3539 = !DILocation(line: 1267, column: 13, scope: !3513)
!3540 = distinct !{!3540, !3524, !3541}
!3541 = !DILocation(line: 1270, column: 5, scope: !3503)
!3542 = !DILocation(line: 1271, column: 5, scope: !3503)
!3543 = !DILocation(line: 1272, column: 5, scope: !3503)
!3544 = distinct !DISubprogram(name: "clusterStartHandshake", scope: !3, file: !3, line: 1282, type: !3504, isLocal: false, isDefinition: true, scopeLine: 1282, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3545)
!3545 = !{!3546, !3547, !3548, !3549, !3550, !3551}
!3546 = !DILocalVariable(name: "ip", arg: 1, scope: !3544, file: !3, line: 1282, type: !178)
!3547 = !DILocalVariable(name: "port", arg: 2, scope: !3544, file: !3, line: 1282, type: !177)
!3548 = !DILocalVariable(name: "cport", arg: 3, scope: !3544, file: !3, line: 1282, type: !177)
!3549 = !DILocalVariable(name: "n", scope: !3544, file: !3, line: 1283, type: !378)
!3550 = !DILocalVariable(name: "norm_ip", scope: !3544, file: !3, line: 1284, type: !85)
!3551 = !DILocalVariable(name: "sa", scope: !3544, file: !3, line: 1285, type: !3552)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !18, line: 100, size: 224, elements: !3553)
!3553 = !{!3554, !3555, !3556, !3558, !3560}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "s2_len", scope: !3552, file: !18, line: 101, baseType: !21, size: 8)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !3552, file: !18, line: 102, baseType: !29, size: 8, offset: 8)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "s2_data1", scope: !3552, file: !18, line: 103, baseType: !3557, size: 16, offset: 16)
!3557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 16, elements: !360)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "s2_data2", scope: !3552, file: !18, line: 104, baseType: !3559, size: 96, offset: 32)
!3559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 96, elements: !125)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "s2_data3", scope: !3552, file: !18, line: 106, baseType: !3559, size: 96, offset: 128)
!3561 = !DILocation(line: 1282, column: 33, scope: !3544)
!3562 = !DILocation(line: 1282, column: 41, scope: !3544)
!3563 = !DILocation(line: 1282, column: 51, scope: !3544)
!3564 = !DILocation(line: 1284, column: 5, scope: !3544)
!3565 = !DILocation(line: 1284, column: 10, scope: !3544)
!3566 = !DILocation(line: 1285, column: 5, scope: !3544)
!3567 = !DILocation(line: 1289, column: 44, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 1288, column: 9)
!3569 = !DILocation(line: 1289, column: 13, scope: !3568)
!3570 = !DILocation(line: 1288, column: 9, scope: !3568)
!3571 = !DILocation(line: 1288, column: 9, scope: !3544)
!3572 = !DILocation(line: 1293, column: 45, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 1292, column: 16)
!3574 = !DILocation(line: 1293, column: 13, scope: !3573)
!3575 = !DILocation(line: 1292, column: 16, scope: !3573)
!3576 = !DILocation(line: 1292, column: 16, scope: !3568)
!3577 = !DILocation(line: 1297, column: 9, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1296, column: 12)
!3579 = !DILocation(line: 1297, column: 15, scope: !3578)
!3580 = !DILocation(line: 1298, column: 9, scope: !3578)
!3581 = !DILocation(line: 0, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 1290, column: 5)
!3583 = !{!3584, !710, i64 1}
!3584 = !{!"sockaddr_storage", !710, i64 0, !710, i64 1, !710, i64 2, !710, i64 4, !710, i64 16}
!3585 = !DILocation(line: 1302, column: 19, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 1302, column: 9)
!3587 = !DILocation(line: 1303, column: 9, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3586, file: !3, line: 1302, column: 67)
!3589 = !DILocation(line: 1303, column: 15, scope: !3588)
!3590 = !DILocation(line: 1304, column: 9, scope: !3588)
!3591 = !DILocation(line: 1309, column: 5, scope: !3544)
!3592 = !DILocation(line: 1310, column: 12, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 1310, column: 9)
!3594 = !DILocation(line: 1310, column: 22, scope: !3593)
!3595 = !DILocation(line: 1310, column: 9, scope: !3544)
!3596 = !DILocation(line: 1311, column: 9, scope: !3593)
!3597 = !DILocation(line: 1316, column: 52, scope: !3593)
!3598 = !DILocation(line: 1316, column: 13, scope: !3593)
!3599 = !DILocation(line: 1315, column: 9, scope: !3593)
!3600 = !DILocation(line: 1319, column: 9, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 1319, column: 9)
!3602 = !DILocation(line: 1319, column: 9, scope: !3544)
!3603 = !DILocation(line: 1320, column: 9, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3601, file: !3, line: 1319, column: 57)
!3605 = !DILocation(line: 1320, column: 15, scope: !3604)
!3606 = !DILocation(line: 1321, column: 9, scope: !3604)
!3607 = !DILocation(line: 695, column: 38, scope: !1112, inlinedAt: !3608)
!3608 = distinct !DILocation(line: 1327, column: 9, scope: !3544)
!3609 = !DILocation(line: 695, column: 52, scope: !1112, inlinedAt: !3608)
!3610 = !DILocation(line: 696, column: 25, scope: !1112, inlinedAt: !3608)
!3611 = !DILocation(line: 696, column: 18, scope: !1112, inlinedAt: !3608)
!3612 = !DILocation(line: 0, scope: !1125, inlinedAt: !3608)
!3613 = !DILocation(line: 701, column: 9, scope: !1125, inlinedAt: !3608)
!3614 = !DILocation(line: 702, column: 19, scope: !1112, inlinedAt: !3608)
!3615 = !DILocation(line: 702, column: 11, scope: !1112, inlinedAt: !3608)
!3616 = !DILocation(line: 702, column: 17, scope: !1112, inlinedAt: !3608)
!3617 = !DILocation(line: 703, column: 11, scope: !1112, inlinedAt: !3608)
!3618 = !DILocation(line: 703, column: 23, scope: !1112, inlinedAt: !3608)
!3619 = !DILocation(line: 704, column: 11, scope: !1112, inlinedAt: !3608)
!3620 = !DILocation(line: 704, column: 17, scope: !1112, inlinedAt: !3608)
!3621 = !DILocation(line: 705, column: 18, scope: !1112, inlinedAt: !3608)
!3622 = !DILocation(line: 705, column: 5, scope: !1112, inlinedAt: !3608)
!3623 = !DILocation(line: 706, column: 11, scope: !1112, inlinedAt: !3608)
!3624 = !DILocation(line: 706, column: 20, scope: !1112, inlinedAt: !3608)
!3625 = !DILocation(line: 707, column: 11, scope: !1112, inlinedAt: !3608)
!3626 = !DILocation(line: 707, column: 21, scope: !1112, inlinedAt: !3608)
!3627 = !DILocation(line: 708, column: 11, scope: !1112, inlinedAt: !3608)
!3628 = !DILocation(line: 708, column: 18, scope: !1112, inlinedAt: !3608)
!3629 = !DILocation(line: 709, column: 11, scope: !1112, inlinedAt: !3608)
!3630 = !DILocation(line: 709, column: 19, scope: !1112, inlinedAt: !3608)
!3631 = !DILocation(line: 710, column: 11, scope: !1112, inlinedAt: !3608)
!3632 = !DILocation(line: 710, column: 21, scope: !1112, inlinedAt: !3608)
!3633 = !DILocation(line: 711, column: 11, scope: !1112, inlinedAt: !3608)
!3634 = !DILocation(line: 711, column: 21, scope: !1112, inlinedAt: !3608)
!3635 = !DILocation(line: 712, column: 11, scope: !1112, inlinedAt: !3608)
!3636 = !DILocation(line: 712, column: 16, scope: !1112, inlinedAt: !3608)
!3637 = !DILocation(line: 713, column: 18, scope: !1112, inlinedAt: !3608)
!3638 = !DILocation(line: 713, column: 5, scope: !1112, inlinedAt: !3608)
!3639 = !DILocation(line: 714, column: 11, scope: !1112, inlinedAt: !3608)
!3640 = !DILocation(line: 714, column: 16, scope: !1112, inlinedAt: !3608)
!3641 = !DILocation(line: 715, column: 11, scope: !1112, inlinedAt: !3608)
!3642 = !DILocation(line: 715, column: 17, scope: !1112, inlinedAt: !3608)
!3643 = !DILocation(line: 716, column: 26, scope: !1112, inlinedAt: !3608)
!3644 = !DILocation(line: 716, column: 11, scope: !1112, inlinedAt: !3608)
!3645 = !DILocation(line: 716, column: 24, scope: !1112, inlinedAt: !3608)
!3646 = !DILocation(line: 717, column: 11, scope: !1112, inlinedAt: !3608)
!3647 = !DILocation(line: 717, column: 22, scope: !1112, inlinedAt: !3608)
!3648 = !DILocation(line: 718, column: 11, scope: !1112, inlinedAt: !3608)
!3649 = !DILocation(line: 718, column: 25, scope: !1112, inlinedAt: !3608)
!3650 = !DILocation(line: 719, column: 11, scope: !1112, inlinedAt: !3608)
!3651 = !DILocation(line: 719, column: 28, scope: !1112, inlinedAt: !3608)
!3652 = !DILocation(line: 720, column: 11, scope: !1112, inlinedAt: !3608)
!3653 = !DILocation(line: 720, column: 23, scope: !1112, inlinedAt: !3608)
!3654 = !DILocation(line: 721, column: 5, scope: !1112, inlinedAt: !3608)
!3655 = !DILocation(line: 1283, column: 18, scope: !3544)
!3656 = !DILocation(line: 1328, column: 5, scope: !3544)
!3657 = !DILocation(line: 1329, column: 13, scope: !3544)
!3658 = !DILocation(line: 1330, column: 14, scope: !3544)
!3659 = !DILocation(line: 887, column: 33, scope: !848, inlinedAt: !3660)
!3660 = distinct !DILocation(line: 1331, column: 5, scope: !3544)
!3661 = !DILocation(line: 890, column: 29, scope: !848, inlinedAt: !3660)
!3662 = !DILocation(line: 890, column: 38, scope: !848, inlinedAt: !3660)
!3663 = !DILocation(line: 891, column: 13, scope: !848, inlinedAt: !3660)
!3664 = !DILocation(line: 890, column: 14, scope: !848, inlinedAt: !3660)
!3665 = !DILocation(line: 888, column: 9, scope: !848, inlinedAt: !3660)
!3666 = !DILocation(line: 1332, column: 5, scope: !3544)
!3667 = !DILocation(line: 0, scope: !3578)
!3668 = !DILocation(line: 1333, column: 1, scope: !3544)
!3669 = distinct !DISubprogram(name: "clusterProcessGossipSection", scope: !3, file: !3, line: 1339, type: !3670, isLocal: false, isDefinition: true, scopeLine: 1339, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3672)
!3670 = !DISubroutineType(types: !3671)
!3671 = !{null, !92, !179}
!3672 = !{!3673, !3674, !3675, !3676, !3677, !3678, !3680, !3681, !3682}
!3673 = !DILocalVariable(name: "hdr", arg: 1, scope: !3669, file: !3, line: 1339, type: !92)
!3674 = !DILocalVariable(name: "link", arg: 2, scope: !3669, file: !3, line: 1339, type: !179)
!3675 = !DILocalVariable(name: "count", scope: !3669, file: !3, line: 1340, type: !33)
!3676 = !DILocalVariable(name: "g", scope: !3669, file: !3, line: 1341, type: !73)
!3677 = !DILocalVariable(name: "sender", scope: !3669, file: !3, line: 1342, type: !378)
!3678 = !DILocalVariable(name: "flags", scope: !3679, file: !3, line: 1345, type: !33)
!3679 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 1344, column: 20)
!3680 = !DILocalVariable(name: "node", scope: !3679, file: !3, line: 1346, type: !378)
!3681 = !DILocalVariable(name: "ci", scope: !3679, file: !3, line: 1347, type: !189)
!3682 = !DILocalVariable(name: "pongtime", scope: !3683, file: !3, line: 1390, type: !184)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !3, line: 1389, column: 13)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 1386, column: 17)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 1362, column: 19)
!3686 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1362, column: 13)
!3687 = !DILocation(line: 1339, column: 46, scope: !3669)
!3688 = !DILocation(line: 1339, column: 64, scope: !3669)
!3689 = !DILocation(line: 1340, column: 22, scope: !3669)
!3690 = !{!2628, !728, i64 14}
!3691 = !DILocation(line: 1340, column: 14, scope: !3669)
!3692 = !DILocation(line: 1341, column: 60, scope: !3669)
!3693 = !DILocation(line: 1341, column: 55, scope: !3669)
!3694 = !DILocation(line: 1341, column: 27, scope: !3669)
!3695 = !DILocation(line: 1342, column: 33, scope: !3669)
!3696 = !DILocation(line: 1342, column: 27, scope: !3669)
!3697 = !DILocation(line: 1342, column: 71, scope: !3669)
!3698 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !3699)
!3699 = distinct !DILocation(line: 1342, column: 53, scope: !3669)
!3700 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !3699)
!3701 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !3699)
!3702 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !3699)
!3703 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !3699)
!3704 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !3699)
!3705 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !3699)
!3706 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !3699)
!3707 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !3699)
!3708 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !3699)
!3709 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !3699)
!3710 = !DILocation(line: 943, column: 5, scope: !820, inlinedAt: !3699)
!3711 = !DILocation(line: 1342, column: 18, scope: !3669)
!3712 = !DILocation(line: 1344, column: 5, scope: !3669)
!3713 = !DILocation(line: 1344, column: 16, scope: !3669)
!3714 = !DILocation(line: 1345, column: 26, scope: !3679)
!3715 = !{!3716, !728, i64 98}
!3716 = !{!"", !710, i64 0, !709, i64 40, !709, i64 44, !710, i64 48, !728, i64 94, !728, i64 96, !728, i64 98, !709, i64 100}
!3717 = !DILocation(line: 1345, column: 18, scope: !3679)
!3718 = !DILocation(line: 1349, column: 20, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1349, column: 13)
!3720 = !{!785, !709, i64 1728}
!3721 = !DILocation(line: 1349, column: 30, scope: !3719)
!3722 = !DILocation(line: 1349, column: 13, scope: !3679)
!3723 = !DILocation(line: 1361, column: 34, scope: !3679)
!3724 = !DILocation(line: 1350, column: 44, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 1349, column: 43)
!3726 = !DILocation(line: 1350, column: 18, scope: !3725)
!3727 = !DILocation(line: 1347, column: 13, scope: !3679)
!3728 = !DILocation(line: 1352, column: 17, scope: !3725)
!3729 = !DILocation(line: 1353, column: 17, scope: !3725)
!3730 = !DILocation(line: 1354, column: 17, scope: !3725)
!3731 = !{!3716, !728, i64 94}
!3732 = !DILocation(line: 1355, column: 17, scope: !3725)
!3733 = !{!3716, !728, i64 96}
!3734 = !DILocation(line: 1351, column: 13, scope: !3725)
!3735 = !DILocation(line: 1357, column: 13, scope: !3725)
!3736 = !DILocation(line: 1358, column: 9, scope: !3725)
!3737 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !3738)
!3738 = distinct !DILocation(line: 1361, column: 16, scope: !3679)
!3739 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !3738)
!3740 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !3738)
!3741 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !3738)
!3742 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !3738)
!3743 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !3738)
!3744 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !3738)
!3745 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !3738)
!3746 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !3738)
!3747 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !3738)
!3748 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !3738)
!3749 = !DILocation(line: 1346, column: 22, scope: !3679)
!3750 = !DILocation(line: 1362, column: 13, scope: !3686)
!3751 = !DILocation(line: 1362, column: 13, scope: !3679)
!3752 = !DILocation(line: 1365, column: 24, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 1365, column: 17)
!3754 = !DILocation(line: 1365, column: 27, scope: !3753)
!3755 = !DILocation(line: 1365, column: 59, scope: !3753)
!3756 = !DILocation(line: 1365, column: 56, scope: !3753)
!3757 = !DILocation(line: 1365, column: 48, scope: !3753)
!3758 = !DILocation(line: 1366, column: 27, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 1366, column: 21)
!3760 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 1365, column: 67)
!3761 = !DILocation(line: 1366, column: 21, scope: !3760)
!3762 = !DILocation(line: 1367, column: 25, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1367, column: 25)
!3764 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1366, column: 69)
!3765 = !DILocation(line: 1367, column: 25, scope: !3764)
!3766 = !DILocation(line: 1370, column: 43, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 1367, column: 67)
!3768 = !DILocation(line: 1368, column: 25, scope: !3767)
!3769 = !DILocation(line: 1371, column: 21, scope: !3767)
!3770 = !DILocation(line: 1372, column: 21, scope: !3764)
!3771 = !DILocation(line: 1373, column: 17, scope: !3764)
!3772 = !DILocation(line: 1374, column: 25, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1374, column: 25)
!3774 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1373, column: 24)
!3775 = !DILocation(line: 1374, column: 25, scope: !3774)
!3776 = !DILocation(line: 1377, column: 43, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 1374, column: 67)
!3778 = !DILocation(line: 1375, column: 25, scope: !3777)
!3779 = !DILocation(line: 1378, column: 21, scope: !3777)
!3780 = !DILocation(line: 1386, column: 19, scope: !3684)
!3781 = !DILocation(line: 1386, column: 25, scope: !3684)
!3782 = !DILocation(line: 1386, column: 67, scope: !3684)
!3783 = !DILocation(line: 1387, column: 23, scope: !3684)
!3784 = !DILocation(line: 1387, column: 33, scope: !3684)
!3785 = !DILocation(line: 1387, column: 38, scope: !3684)
!3786 = !DILocation(line: 815, column: 49, scope: !2938, inlinedAt: !3787)
!3787 = distinct !DILocation(line: 1388, column: 17, scope: !3684)
!3788 = !DILocation(line: 765, column: 52, scope: !2844, inlinedAt: !3789)
!3789 = distinct !DILocation(line: 816, column: 5, scope: !2938, inlinedAt: !3787)
!3790 = !DILocation(line: 766, column: 21, scope: !2844, inlinedAt: !3789)
!3791 = !DILocation(line: 766, column: 11, scope: !2844, inlinedAt: !3789)
!3792 = !DILocation(line: 768, column: 5, scope: !2844, inlinedAt: !3789)
!3793 = !DILocation(line: 770, column: 31, scope: !2844, inlinedAt: !3789)
!3794 = !DILocation(line: 770, column: 52, scope: !2844, inlinedAt: !3789)
!3795 = !DILocation(line: 770, column: 14, scope: !2844, inlinedAt: !3789)
!3796 = !DILocation(line: 772, column: 20, scope: !2844, inlinedAt: !3789)
!3797 = !DILocation(line: 772, column: 14, scope: !2844, inlinedAt: !3789)
!3798 = !DILocation(line: 768, column: 14, scope: !2844, inlinedAt: !3789)
!3799 = !DILocation(line: 774, column: 5, scope: !2844, inlinedAt: !3789)
!3800 = !DILocation(line: 775, column: 18, scope: !2844, inlinedAt: !3789)
!3801 = !DILocation(line: 767, column: 15, scope: !2844, inlinedAt: !3789)
!3802 = !DILocation(line: 775, column: 33, scope: !2844, inlinedAt: !3789)
!3803 = !DILocation(line: 775, column: 5, scope: !2844, inlinedAt: !3789)
!3804 = !DILocation(line: 776, column: 18, scope: !2870, inlinedAt: !3789)
!3805 = !DILocation(line: 769, column: 28, scope: !2844, inlinedAt: !3789)
!3806 = !DILocation(line: 777, column: 23, scope: !2873, inlinedAt: !3789)
!3807 = !DILocation(line: 777, column: 17, scope: !2873, inlinedAt: !3789)
!3808 = !DILocation(line: 777, column: 28, scope: !2873, inlinedAt: !3789)
!3809 = !DILocation(line: 777, column: 13, scope: !2870, inlinedAt: !3789)
!3810 = !DILocation(line: 777, column: 39, scope: !2873, inlinedAt: !3789)
!3811 = !DILocation(line: 779, column: 1, scope: !2844, inlinedAt: !3789)
!3812 = !DILocation(line: 817, column: 12, scope: !2938, inlinedAt: !3787)
!3813 = !DILocation(line: 1388, column: 54, scope: !3684)
!3814 = !DILocation(line: 1386, column: 17, scope: !3685)
!3815 = !DILocation(line: 1390, column: 37, scope: !3683)
!3816 = !{!3716, !709, i64 44}
!3817 = !DILocation(line: 1390, column: 26, scope: !3683)
!3818 = !DILocation(line: 1391, column: 26, scope: !3683)
!3819 = !DILocation(line: 1397, column: 41, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 1397, column: 21)
!3821 = !{!785, !786, i64 2896}
!3822 = !DILocation(line: 1397, column: 47, scope: !3820)
!3823 = !DILocation(line: 1397, column: 30, scope: !3820)
!3824 = !DILocation(line: 1397, column: 53, scope: !3820)
!3825 = !DILocation(line: 1398, column: 38, scope: !3820)
!3826 = !DILocation(line: 1398, column: 30, scope: !3820)
!3827 = !DILocation(line: 1397, column: 21, scope: !3683)
!3828 = !DILocation(line: 1400, column: 41, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 1399, column: 17)
!3830 = !DILocation(line: 1401, column: 17, scope: !3829)
!3831 = !DILocation(line: 1409, column: 23, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 1409, column: 17)
!3833 = !DILocation(line: 1409, column: 29, scope: !3832)
!3834 = !DILocation(line: 1409, column: 70, scope: !3832)
!3835 = !DILocation(line: 1412, column: 29, scope: !3832)
!3836 = !DILocation(line: 1412, column: 38, scope: !3832)
!3837 = !DILocation(line: 1412, column: 18, scope: !3832)
!3838 = !DILocation(line: 1412, column: 45, scope: !3832)
!3839 = !DILocation(line: 1413, column: 24, scope: !3832)
!3840 = !DILocation(line: 1413, column: 32, scope: !3832)
!3841 = !DILocation(line: 1413, column: 29, scope: !3832)
!3842 = !DILocation(line: 1413, column: 47, scope: !3832)
!3843 = !DILocation(line: 1414, column: 24, scope: !3832)
!3844 = !DILocation(line: 1414, column: 33, scope: !3832)
!3845 = !DILocation(line: 1414, column: 30, scope: !3832)
!3846 = !DILocation(line: 1409, column: 17, scope: !3685)
!3847 = !DILocation(line: 1416, column: 27, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 1416, column: 21)
!3849 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 1415, column: 13)
!3850 = !DILocation(line: 1416, column: 21, scope: !3848)
!3851 = !DILocation(line: 1416, column: 21, scope: !3849)
!3852 = !DILocation(line: 603, column: 35, scope: !2530, inlinedAt: !3853)
!3853 = distinct !DILocation(line: 1416, column: 33, scope: !3848)
!3854 = !DILocation(line: 604, column: 15, scope: !2537, inlinedAt: !3853)
!3855 = !DILocation(line: 604, column: 18, scope: !2537, inlinedAt: !3853)
!3856 = !DILocation(line: 604, column: 9, scope: !2530, inlinedAt: !3853)
!3857 = !DILocation(line: 605, column: 34, scope: !2541, inlinedAt: !3853)
!3858 = !DILocation(line: 605, column: 9, scope: !2541, inlinedAt: !3853)
!3859 = !DILocation(line: 606, column: 5, scope: !2541, inlinedAt: !3853)
!3860 = !DILocation(line: 607, column: 19, scope: !2530, inlinedAt: !3853)
!3861 = !DILocation(line: 607, column: 5, scope: !2530, inlinedAt: !3853)
!3862 = !DILocation(line: 608, column: 19, scope: !2530, inlinedAt: !3853)
!3863 = !DILocation(line: 608, column: 5, scope: !2530, inlinedAt: !3853)
!3864 = !DILocation(line: 609, column: 15, scope: !2549, inlinedAt: !3853)
!3865 = !DILocation(line: 609, column: 9, scope: !2549, inlinedAt: !3853)
!3866 = !DILocation(line: 609, column: 9, scope: !2530, inlinedAt: !3853)
!3867 = !DILocation(line: 610, column: 21, scope: !2549, inlinedAt: !3853)
!3868 = !DILocation(line: 610, column: 26, scope: !2549, inlinedAt: !3853)
!3869 = !DILocation(line: 610, column: 9, scope: !2549, inlinedAt: !3853)
!3870 = !DILocation(line: 611, column: 17, scope: !2530, inlinedAt: !3853)
!3871 = !DILocation(line: 611, column: 5, scope: !2530, inlinedAt: !3853)
!3872 = !DILocation(line: 612, column: 11, scope: !2530, inlinedAt: !3853)
!3873 = !DILocation(line: 612, column: 5, scope: !2530, inlinedAt: !3853)
!3874 = !DILocation(line: 1416, column: 33, scope: !3848)
!3875 = !DILocation(line: 1417, column: 17, scope: !3849)
!3876 = !DILocation(line: 1418, column: 30, scope: !3849)
!3877 = !DILocation(line: 1418, column: 23, scope: !3849)
!3878 = !DILocation(line: 1418, column: 28, scope: !3849)
!3879 = !DILocation(line: 1419, column: 31, scope: !3849)
!3880 = !DILocation(line: 1419, column: 23, scope: !3849)
!3881 = !DILocation(line: 1419, column: 29, scope: !3849)
!3882 = !DILocation(line: 1420, column: 29, scope: !3849)
!3883 = !DILocation(line: 1421, column: 13, scope: !3849)
!3884 = !DILocation(line: 1430, column: 25, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 1429, column: 17)
!3886 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 1422, column: 16)
!3887 = !DILocation(line: 1429, column: 24, scope: !3885)
!3888 = !DILocation(line: 1431, column: 18, scope: !3885)
!3889 = !DILocation(line: 1429, column: 17, scope: !3886)
!3890 = !DILocation(line: 1433, column: 39, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 1432, column: 13)
!3892 = !DILocation(line: 1433, column: 45, scope: !3891)
!3893 = !DILocation(line: 1433, column: 60, scope: !3891)
!3894 = !DILocation(line: 1433, column: 17, scope: !3891)
!3895 = !DILocation(line: 1434, column: 13, scope: !3891)
!3896 = !DILocation(line: 1438, column: 10, scope: !3679)
!3897 = distinct !{!3897, !3712, !3898}
!3898 = !DILocation(line: 1439, column: 5, scope: !3669)
!3899 = !DILocation(line: 1440, column: 1, scope: !3669)
!3900 = distinct !DISubprogram(name: "representClusterNodeFlags", scope: !3, file: !3, line: 3973, type: !3901, isLocal: false, isDefinition: true, scopeLine: 3973, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3903)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!189, !189, !33}
!3903 = !{!3904, !3905, !3906, !3907, !3908, !3909}
!3904 = !DILocalVariable(name: "ci", arg: 1, scope: !3900, file: !3, line: 3973, type: !189)
!3905 = !DILocalVariable(name: "flags", arg: 2, scope: !3900, file: !3, line: 3973, type: !33)
!3906 = !DILocalVariable(name: "orig_len", scope: !3900, file: !3, line: 3974, type: !1455)
!3907 = !DILocalVariable(name: "i", scope: !3900, file: !3, line: 3975, type: !177)
!3908 = !DILocalVariable(name: "size", scope: !3900, file: !3, line: 3975, type: !177)
!3909 = !DILocalVariable(name: "nodeflag", scope: !3910, file: !3, line: 3977, type: !3913)
!3910 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 3976, column: 32)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 3976, column: 5)
!3912 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 3976, column: 5)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!3914 = !DILocation(line: 3973, column: 35, scope: !3900)
!3915 = !DILocation(line: 3973, column: 48, scope: !3900)
!3916 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !3917)
!3917 = distinct !DILocation(line: 3974, column: 23, scope: !3900)
!3918 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !3917)
!3919 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !3917)
!3920 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !3917)
!3921 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !3917)
!3922 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !3917)
!3923 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !3917)
!3924 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !3917)
!3925 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !3917)
!3926 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !3917)
!3927 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !3917)
!3928 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !3917)
!3929 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !3917)
!3930 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !3917)
!3931 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !3917)
!3932 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !3917)
!3933 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !3917)
!3934 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !3917)
!3935 = !DILocation(line: 0, scope: !1486, inlinedAt: !3917)
!3936 = !DILocation(line: 3974, column: 12, scope: !3900)
!3937 = !DILocation(line: 3975, column: 12, scope: !3900)
!3938 = !DILocation(line: 3975, column: 9, scope: !3900)
!3939 = !DILocation(line: 3978, column: 19, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 3978, column: 13)
!3941 = !DILocation(line: 3978, column: 13, scope: !3910)
!3942 = !DILocation(line: 3978, column: 42, scope: !3940)
!3943 = !DILocation(line: 3978, column: 37, scope: !3940)
!3944 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !3945)
!3945 = distinct !DILocation(line: 3981, column: 9, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 3981, column: 9)
!3947 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !3945)
!3948 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !3945)
!3949 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !3945)
!3950 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !3945)
!3951 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !3945)
!3952 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !3945)
!3953 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !3945)
!3954 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !3945)
!3955 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !3945)
!3956 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !3945)
!3957 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !3945)
!3958 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !3945)
!3959 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !3945)
!3960 = !DILocation(line: 0, scope: !1486, inlinedAt: !3945)
!3961 = !DILocation(line: 3981, column: 20, scope: !3946)
!3962 = !DILocation(line: 3981, column: 9, scope: !3900)
!3963 = !DILocation(line: 3981, column: 38, scope: !3946)
!3964 = !DILocation(line: 3981, column: 33, scope: !3946)
!3965 = !DILocation(line: 3982, column: 5, scope: !3900)
!3966 = !DILocation(line: 3983, column: 5, scope: !3900)
!3967 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !3945)
!3968 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !3945)
!3969 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !3945)
!3970 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !3945)
!3971 = distinct !DISubprogram(name: "nodeIp2String", scope: !3, file: !3, line: 1445, type: !3972, isLocal: false, isDefinition: true, scopeLine: 1445, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3974)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{null, !178, !179, !178}
!3974 = !{!3975, !3976, !3977}
!3975 = !DILocalVariable(name: "buf", arg: 1, scope: !3971, file: !3, line: 1445, type: !178)
!3976 = !DILocalVariable(name: "link", arg: 2, scope: !3971, file: !3, line: 1445, type: !179)
!3977 = !DILocalVariable(name: "announced_ip", arg: 3, scope: !3971, file: !3, line: 1445, type: !178)
!3978 = !DILocation(line: 1445, column: 26, scope: !3971)
!3979 = !DILocation(line: 1445, column: 44, scope: !3971)
!3980 = !DILocation(line: 1445, column: 56, scope: !3971)
!3981 = !DILocation(line: 1446, column: 9, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1446, column: 9)
!3983 = !DILocation(line: 1446, column: 25, scope: !3982)
!3984 = !DILocation(line: 1446, column: 9, scope: !3971)
!3985 = !DILocation(line: 1447, column: 9, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 1446, column: 34)
!3987 = !DILocation(line: 1448, column: 9, scope: !3986)
!3988 = !DILocation(line: 1448, column: 31, scope: !3986)
!3989 = !DILocation(line: 1449, column: 5, scope: !3986)
!3990 = !DILocation(line: 1450, column: 32, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 1449, column: 12)
!3992 = !DILocation(line: 1450, column: 9, scope: !3991)
!3993 = !DILocation(line: 1452, column: 1, scope: !3971)
!3994 = distinct !DISubprogram(name: "nodeUpdateAddressIfNeeded", scope: !3, file: !3, line: 1466, type: !3995, isLocal: false, isDefinition: true, scopeLine: 1468, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3997)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{!177, !378, !179, !92}
!3997 = !{!3998, !3999, !4000, !4001, !4002, !4003}
!3998 = !DILocalVariable(name: "node", arg: 1, scope: !3994, file: !3, line: 1466, type: !378)
!3999 = !DILocalVariable(name: "link", arg: 2, scope: !3994, file: !3, line: 1466, type: !179)
!4000 = !DILocalVariable(name: "hdr", arg: 3, scope: !3994, file: !3, line: 1467, type: !92)
!4001 = !DILocalVariable(name: "ip", scope: !3994, file: !3, line: 1469, type: !85)
!4002 = !DILocalVariable(name: "port", scope: !3994, file: !3, line: 1470, type: !177)
!4003 = !DILocalVariable(name: "cport", scope: !3994, file: !3, line: 1471, type: !177)
!4004 = !DILocation(line: 1466, column: 44, scope: !3994)
!4005 = !DILocation(line: 1466, column: 63, scope: !3994)
!4006 = !DILocation(line: 1467, column: 43, scope: !3994)
!4007 = !DILocation(line: 1469, column: 5, scope: !3994)
!4008 = !DILocation(line: 1469, column: 10, scope: !3994)
!4009 = !DILocation(line: 1470, column: 16, scope: !3994)
!4010 = !{!2628, !728, i64 10}
!4011 = !DILocation(line: 1470, column: 9, scope: !3994)
!4012 = !DILocation(line: 1471, column: 17, scope: !3994)
!4013 = !{!2628, !728, i64 2248}
!4014 = !DILocation(line: 1471, column: 9, scope: !3994)
!4015 = !DILocation(line: 1479, column: 23, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1479, column: 9)
!4017 = !DILocation(line: 1479, column: 14, scope: !4016)
!4018 = !DILocation(line: 1479, column: 9, scope: !3994)
!4019 = !DILocation(line: 1481, column: 27, scope: !3994)
!4020 = !DILocation(line: 1445, column: 26, scope: !3971, inlinedAt: !4021)
!4021 = distinct !DILocation(line: 1481, column: 5, scope: !3994)
!4022 = !DILocation(line: 1445, column: 44, scope: !3971, inlinedAt: !4021)
!4023 = !DILocation(line: 1445, column: 56, scope: !3971, inlinedAt: !4021)
!4024 = !DILocation(line: 1446, column: 9, scope: !3982, inlinedAt: !4021)
!4025 = !DILocation(line: 1446, column: 25, scope: !3982, inlinedAt: !4021)
!4026 = !DILocation(line: 1446, column: 9, scope: !3971, inlinedAt: !4021)
!4027 = !DILocation(line: 1447, column: 9, scope: !3986, inlinedAt: !4021)
!4028 = !DILocation(line: 1448, column: 9, scope: !3986, inlinedAt: !4021)
!4029 = !DILocation(line: 1448, column: 31, scope: !3986, inlinedAt: !4021)
!4030 = !DILocation(line: 1449, column: 5, scope: !3986, inlinedAt: !4021)
!4031 = !DILocation(line: 1450, column: 32, scope: !3991, inlinedAt: !4021)
!4032 = !DILocation(line: 1450, column: 9, scope: !3991, inlinedAt: !4021)
!4033 = !DILocation(line: 1482, column: 15, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1482, column: 9)
!4035 = !DILocation(line: 1482, column: 20, scope: !4034)
!4036 = !DILocation(line: 0, scope: !3994)
!4037 = !DILocation(line: 1482, column: 28, scope: !4034)
!4038 = !DILocation(line: 1482, column: 37, scope: !4034)
!4039 = !DILocation(line: 1482, column: 43, scope: !4034)
!4040 = !DILocation(line: 1482, column: 52, scope: !4034)
!4041 = !DILocation(line: 1483, column: 19, scope: !4034)
!4042 = !DILocation(line: 1483, column: 9, scope: !4034)
!4043 = !DILocation(line: 1483, column: 29, scope: !4034)
!4044 = !DILocation(line: 1482, column: 9, scope: !3994)
!4045 = !DILocation(line: 1486, column: 12, scope: !3994)
!4046 = !DILocation(line: 1486, column: 5, scope: !3994)
!4047 = !DILocation(line: 1487, column: 16, scope: !3994)
!4048 = !DILocation(line: 1488, column: 17, scope: !3994)
!4049 = !DILocation(line: 1489, column: 15, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1489, column: 9)
!4051 = !DILocation(line: 1489, column: 9, scope: !4050)
!4052 = !DILocation(line: 1489, column: 9, scope: !3994)
!4053 = !DILocation(line: 603, column: 35, scope: !2530, inlinedAt: !4054)
!4054 = distinct !DILocation(line: 1489, column: 21, scope: !4050)
!4055 = !DILocation(line: 604, column: 15, scope: !2537, inlinedAt: !4054)
!4056 = !DILocation(line: 604, column: 18, scope: !2537, inlinedAt: !4054)
!4057 = !DILocation(line: 604, column: 9, scope: !2530, inlinedAt: !4054)
!4058 = !DILocation(line: 605, column: 34, scope: !2541, inlinedAt: !4054)
!4059 = !DILocation(line: 605, column: 9, scope: !2541, inlinedAt: !4054)
!4060 = !DILocation(line: 606, column: 5, scope: !2541, inlinedAt: !4054)
!4061 = !DILocation(line: 607, column: 19, scope: !2530, inlinedAt: !4054)
!4062 = !DILocation(line: 607, column: 5, scope: !2530, inlinedAt: !4054)
!4063 = !DILocation(line: 608, column: 19, scope: !2530, inlinedAt: !4054)
!4064 = !DILocation(line: 608, column: 5, scope: !2530, inlinedAt: !4054)
!4065 = !DILocation(line: 609, column: 15, scope: !2549, inlinedAt: !4054)
!4066 = !DILocation(line: 609, column: 9, scope: !2549, inlinedAt: !4054)
!4067 = !DILocation(line: 609, column: 9, scope: !2530, inlinedAt: !4054)
!4068 = !DILocation(line: 610, column: 21, scope: !2549, inlinedAt: !4054)
!4069 = !DILocation(line: 610, column: 26, scope: !2549, inlinedAt: !4054)
!4070 = !DILocation(line: 610, column: 9, scope: !2549, inlinedAt: !4054)
!4071 = !DILocation(line: 611, column: 17, scope: !2530, inlinedAt: !4054)
!4072 = !DILocation(line: 611, column: 5, scope: !2530, inlinedAt: !4054)
!4073 = !DILocation(line: 612, column: 11, scope: !2530, inlinedAt: !4054)
!4074 = !DILocation(line: 612, column: 5, scope: !2530, inlinedAt: !4054)
!4075 = !DILocation(line: 1492, column: 37, scope: !3994)
!4076 = !DILocation(line: 1489, column: 21, scope: !4050)
!4077 = !DILocation(line: 1490, column: 11, scope: !3994)
!4078 = !DILocation(line: 1490, column: 17, scope: !3994)
!4079 = !DILocation(line: 1492, column: 9, scope: !3994)
!4080 = !DILocation(line: 1491, column: 5, scope: !3994)
!4081 = !DILocation(line: 1496, column: 9, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1496, column: 9)
!4083 = !DILocation(line: 1496, column: 29, scope: !4082)
!4084 = !DILocation(line: 1496, column: 40, scope: !4082)
!4085 = !DILocation(line: 1496, column: 48, scope: !4082)
!4086 = !DILocation(line: 1496, column: 9, scope: !3994)
!4087 = !DILocation(line: 1497, column: 46, scope: !4082)
!4088 = !DILocation(line: 1497, column: 9, scope: !4082)
!4089 = !DILocation(line: 1499, column: 1, scope: !3994)
!4090 = distinct !DISubprogram(name: "clusterUpdateSlotsConfigWith", scope: !3, file: !3, line: 1531, type: !4091, isLocal: false, isDefinition: true, scopeLine: 1531, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4093)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{null, !378, !104, !246}
!4093 = !{!4094, !4095, !4096, !4097, !4098, !4099, !4100, !4104}
!4094 = !DILocalVariable(name: "sender", arg: 1, scope: !4090, file: !3, line: 1531, type: !378)
!4095 = !DILocalVariable(name: "senderConfigEpoch", arg: 2, scope: !4090, file: !3, line: 1531, type: !104)
!4096 = !DILocalVariable(name: "slots", arg: 3, scope: !4090, file: !3, line: 1531, type: !246)
!4097 = !DILocalVariable(name: "j", scope: !4090, file: !3, line: 1532, type: !177)
!4098 = !DILocalVariable(name: "curmaster", scope: !4090, file: !3, line: 1533, type: !378)
!4099 = !DILocalVariable(name: "newmaster", scope: !4090, file: !3, line: 1533, type: !378)
!4100 = !DILocalVariable(name: "dirty_slots", scope: !4090, file: !3, line: 1541, type: !4101)
!4101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 262144, elements: !4102)
!4102 = !{!4103}
!4103 = !DISubrange(count: 16384)
!4104 = !DILocalVariable(name: "dirty_slots_count", scope: !4090, file: !3, line: 1542, type: !177)
!4105 = !DILocation(line: 1531, column: 48, scope: !4090)
!4106 = !DILocation(line: 1531, column: 65, scope: !4090)
!4107 = !DILocation(line: 1531, column: 99, scope: !4090)
!4108 = !DILocation(line: 1533, column: 30, scope: !4090)
!4109 = !DILocation(line: 1541, column: 5, scope: !4090)
!4110 = !DILocation(line: 1541, column: 14, scope: !4090)
!4111 = !DILocation(line: 1542, column: 9, scope: !4090)
!4112 = !DILocation(line: 1547, column: 17, scope: !4090)
!4113 = !DILocation(line: 1547, column: 57, scope: !4090)
!4114 = !DILocation(line: 1533, column: 18, scope: !4090)
!4115 = !DILocation(line: 1549, column: 16, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 1549, column: 9)
!4117 = !DILocation(line: 1549, column: 9, scope: !4090)
!4118 = !DILocation(line: 1550, column: 9, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 1549, column: 27)
!4120 = !DILocation(line: 1551, column: 9, scope: !4119)
!4121 = !DILocation(line: 1532, column: 9, scope: !4090)
!4122 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !4123)
!4123 = distinct !DILocation(line: 1555, column: 13, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 1555, column: 13)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1554, column: 41)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1554, column: 5)
!4127 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 1554, column: 5)
!4128 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !4123)
!4129 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !4123)
!4130 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !4123)
!4131 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !4123)
!4132 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !4123)
!4133 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !4123)
!4134 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !4123)
!4135 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !4123)
!4136 = !DILocation(line: 1555, column: 13, scope: !4125)
!4137 = !DILocation(line: 1557, column: 24, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1557, column: 17)
!4139 = distinct !DILexicalBlock(scope: !4124, file: !3, line: 1555, column: 37)
!4140 = !DILocation(line: 1557, column: 17, scope: !4138)
!4141 = !DILocation(line: 1557, column: 42, scope: !4138)
!4142 = !DILocation(line: 1557, column: 17, scope: !4139)
!4143 = !DILocation(line: 1563, column: 17, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1563, column: 17)
!4145 = !DILocation(line: 1563, column: 17, scope: !4139)
!4146 = !DILocation(line: 1569, column: 42, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1569, column: 17)
!4148 = !DILocation(line: 1569, column: 50, scope: !4147)
!4149 = !DILocation(line: 1570, column: 43, scope: !4147)
!4150 = !DILocation(line: 1570, column: 55, scope: !4147)
!4151 = !DILocation(line: 1569, column: 17, scope: !4139)
!4152 = !DILocation(line: 1574, column: 49, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 1574, column: 21)
!4154 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 1571, column: 13)
!4155 = !DILocation(line: 1574, column: 46, scope: !4153)
!4156 = !DILocation(line: 1574, column: 56, scope: !4153)
!4157 = !DILocation(line: 1575, column: 21, scope: !4153)
!4158 = !DILocation(line: 1576, column: 31, scope: !4153)
!4159 = !DILocation(line: 1576, column: 28, scope: !4153)
!4160 = !DILocation(line: 1575, column: 40, scope: !4153)
!4161 = !DILocation(line: 1578, column: 54, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 1577, column: 17)
!4163 = !DILocation(line: 1578, column: 21, scope: !4162)
!4164 = !DILocation(line: 1578, column: 52, scope: !4162)
!4165 = !DILocation(line: 1579, column: 38, scope: !4162)
!4166 = !DILocation(line: 1580, column: 17, scope: !4162)
!4167 = !DILocation(line: 0, scope: !4090)
!4168 = !DILocation(line: 1582, column: 28, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 1582, column: 21)
!4170 = !DILocation(line: 1582, column: 21, scope: !4169)
!4171 = !DILocation(line: 1582, column: 46, scope: !4169)
!4172 = !DILocation(line: 1582, column: 21, scope: !4154)
!4173 = !DILocation(line: 3716, column: 24, scope: !2197, inlinedAt: !4174)
!4174 = distinct !DILocation(line: 1584, column: 17, scope: !4154)
!4175 = !DILocation(line: 3717, column: 18, scope: !2197, inlinedAt: !4174)
!4176 = !DILocation(line: 3719, column: 10, scope: !2206, inlinedAt: !4174)
!4177 = !DILocation(line: 3719, column: 9, scope: !2197, inlinedAt: !4174)
!4178 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !4179)
!4179 = distinct !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !4174)
!4180 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !4179)
!4181 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !4182)
!4182 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !4179)
!4183 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !4182)
!4184 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !4182)
!4185 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !4182)
!4186 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !4182)
!4187 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !4182)
!4188 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !4182)
!4189 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !4190)
!4190 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !4179)
!4191 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !4190)
!4192 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !4190)
!4193 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !4190)
!4194 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !4190)
!4195 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !4179)
!4196 = !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !4174)
!4197 = !DILocation(line: 3693, column: 17, scope: !2251, inlinedAt: !4179)
!4198 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !4179)
!4199 = !DILocation(line: 3721, column: 12, scope: !2197, inlinedAt: !4174)
!4200 = !DILocation(line: 3721, column: 5, scope: !2197, inlinedAt: !4174)
!4201 = !DILocation(line: 3721, column: 33, scope: !2197, inlinedAt: !4174)
!4202 = !DILocation(line: 3707, column: 16, scope: !1228, inlinedAt: !4203)
!4203 = distinct !DILocation(line: 1585, column: 17, scope: !4154)
!4204 = !DILocation(line: 3707, column: 9, scope: !1228, inlinedAt: !4203)
!4205 = !DILocation(line: 3706, column: 33, scope: !1219, inlinedAt: !4203)
!4206 = !DILocation(line: 3706, column: 40, scope: !1219, inlinedAt: !4203)
!4207 = !DILocation(line: 3707, column: 9, scope: !1219, inlinedAt: !4203)
!4208 = !DILocation(line: 3708, column: 5, scope: !1219, inlinedAt: !4203)
!4209 = !DILocation(line: 3709, column: 12, scope: !1219, inlinedAt: !4203)
!4210 = !DILocation(line: 3709, column: 5, scope: !1219, inlinedAt: !4203)
!4211 = !DILocation(line: 3709, column: 33, scope: !1219, inlinedAt: !4203)
!4212 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4213)
!4213 = distinct !DILocation(line: 1586, column: 17, scope: !4154)
!4214 = !DILocation(line: 3710, column: 5, scope: !1219, inlinedAt: !4203)
!4215 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4213)
!4216 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4213)
!4217 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4213)
!4218 = !DILocation(line: 1589, column: 13, scope: !4154)
!4219 = !DILocation(line: 1554, column: 37, scope: !4126)
!4220 = !DILocation(line: 1554, column: 19, scope: !4126)
!4221 = !DILocation(line: 1554, column: 5, scope: !4127)
!4222 = distinct !{!4222, !4221, !4223}
!4223 = !DILocation(line: 1591, column: 5, scope: !4127)
!4224 = !DILocation(line: 1596, column: 16, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 1596, column: 9)
!4226 = !{!785, !709, i64 2984}
!4227 = !DILocation(line: 1596, column: 37, scope: !4225)
!4228 = !DILocation(line: 1596, column: 9, scope: !4090)
!4229 = !DILocation(line: 1606, column: 9, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 1606, column: 9)
!4231 = !DILocation(line: 1606, column: 19, scope: !4230)
!4232 = !DILocation(line: 1606, column: 33, scope: !4230)
!4233 = !DILocation(line: 1606, column: 42, scope: !4230)
!4234 = !DILocation(line: 1606, column: 9, scope: !4090)
!4235 = !DILocation(line: 1609, column: 38, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 1606, column: 48)
!4237 = !DILocation(line: 1607, column: 9, scope: !4236)
!4238 = !DILocation(line: 1610, column: 9, scope: !4236)
!4239 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4240)
!4240 = distinct !DILocation(line: 1611, column: 9, scope: !4236)
!4241 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4240)
!4242 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4240)
!4243 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4240)
!4244 = !DILocation(line: 1614, column: 5, scope: !4236)
!4245 = !DILocation(line: 1622, column: 23, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 1622, column: 9)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 1622, column: 9)
!4248 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 1614, column: 35)
!4249 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 1614, column: 16)
!4250 = !DILocation(line: 1614, column: 16, scope: !4230)
!4251 = !DILocation(line: 1623, column: 27, scope: !4246)
!4252 = !DILocation(line: 1623, column: 13, scope: !4246)
!4253 = !DILocation(line: 1622, column: 45, scope: !4246)
!4254 = !DILocation(line: 1622, column: 9, scope: !4247)
!4255 = distinct !{!4255, !4254, !4256}
!4256 = !DILocation(line: 1623, column: 41, scope: !4247)
!4257 = !DILocation(line: 1625, column: 1, scope: !4090)
!4258 = !DILocation(line: 3627, column: 34, scope: !2217)
!4259 = !DILocation(line: 3627, column: 46, scope: !2217)
!4260 = !DILocation(line: 3628, column: 21, scope: !2217)
!4261 = !DILocation(line: 3628, column: 18, scope: !2217)
!4262 = !DILocation(line: 3628, column: 11, scope: !2217)
!4263 = !DILocation(line: 3629, column: 18, scope: !2217)
!4264 = !DILocation(line: 3629, column: 9, scope: !2217)
!4265 = !DILocation(line: 3630, column: 13, scope: !2217)
!4266 = !DILocation(line: 3630, column: 30, scope: !2217)
!4267 = !DILocation(line: 3630, column: 26, scope: !2217)
!4268 = !DILocation(line: 3630, column: 38, scope: !2217)
!4269 = !DILocation(line: 3630, column: 5, scope: !2217)
!4270 = distinct !DISubprogram(name: "clusterSetMaster", scope: !3, file: !3, line: 3933, type: !2319, isLocal: false, isDefinition: true, scopeLine: 3933, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4271)
!4271 = !{!4272}
!4272 = !DILocalVariable(name: "n", arg: 1, scope: !4270, file: !3, line: 3933, type: !378)
!4273 = !DILocation(line: 3933, column: 36, scope: !4270)
!4274 = !DILocation(line: 3934, column: 5, scope: !4270)
!4275 = !DILocation(line: 3935, column: 5, scope: !4270)
!4276 = !DILocation(line: 3937, column: 9, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 3937, column: 9)
!4278 = !DILocation(line: 3937, column: 9, scope: !4270)
!4279 = !DILocation(line: 3938, column: 23, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 3937, column: 31)
!4281 = !DILocation(line: 3939, column: 23, scope: !4280)
!4282 = !DILocation(line: 3742, column: 19, scope: !1794, inlinedAt: !4283)
!4283 = distinct !DILocation(line: 3940, column: 9, scope: !4280)
!4284 = !DILocation(line: 3742, column: 12, scope: !1794, inlinedAt: !4283)
!4285 = !DILocation(line: 3742, column: 5, scope: !1794, inlinedAt: !4283)
!4286 = !DILocation(line: 3744, column: 19, scope: !1794, inlinedAt: !4283)
!4287 = !DILocation(line: 3744, column: 12, scope: !1794, inlinedAt: !4283)
!4288 = !DILocation(line: 3744, column: 5, scope: !1794, inlinedAt: !4283)
!4289 = !DILocation(line: 3941, column: 5, scope: !4280)
!4290 = !DILocation(line: 3942, column: 21, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 3942, column: 13)
!4292 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 3941, column: 12)
!4293 = !DILocation(line: 3942, column: 13, scope: !4291)
!4294 = !DILocation(line: 3942, column: 13, scope: !4292)
!4295 = !DILocation(line: 820, column: 41, scope: !2332, inlinedAt: !4296)
!4296 = distinct !DILocation(line: 3943, column: 13, scope: !4291)
!4297 = !DILocation(line: 820, column: 62, scope: !2332, inlinedAt: !4296)
!4298 = !DILocation(line: 821, column: 9, scope: !2332, inlinedAt: !4296)
!4299 = !DILocation(line: 823, column: 10, scope: !2343, inlinedAt: !4296)
!4300 = !DILocation(line: 0, scope: !2342, inlinedAt: !4296)
!4301 = !DILocation(line: 823, column: 19, scope: !2342, inlinedAt: !4296)
!4302 = !DILocation(line: 823, column: 5, scope: !2343, inlinedAt: !4296)
!4303 = !DILocation(line: 824, column: 21, scope: !2340, inlinedAt: !4296)
!4304 = !DILocation(line: 824, column: 13, scope: !2340, inlinedAt: !4296)
!4305 = !DILocation(line: 824, column: 31, scope: !2340, inlinedAt: !4296)
!4306 = !DILocation(line: 824, column: 13, scope: !2341, inlinedAt: !4296)
!4307 = !DILocation(line: 825, column: 23, scope: !2338, inlinedAt: !4296)
!4308 = !DILocation(line: 825, column: 17, scope: !2339, inlinedAt: !4296)
!4309 = !DILocation(line: 826, column: 64, scope: !2337, inlinedAt: !4296)
!4310 = !DILocation(line: 826, column: 21, scope: !2337, inlinedAt: !4296)
!4311 = !DILocation(line: 827, column: 25, scope: !2337, inlinedAt: !4296)
!4312 = !DILocation(line: 827, column: 56, scope: !2337, inlinedAt: !4296)
!4313 = !DILocation(line: 827, column: 42, scope: !2337, inlinedAt: !4296)
!4314 = !DILocation(line: 828, column: 52, scope: !2337, inlinedAt: !4296)
!4315 = !DILocation(line: 828, column: 50, scope: !2337, inlinedAt: !4296)
!4316 = !DILocation(line: 827, column: 17, scope: !2337, inlinedAt: !4296)
!4317 = !DILocation(line: 830, column: 30, scope: !2339, inlinedAt: !4296)
!4318 = !DILocation(line: 829, column: 13, scope: !2337, inlinedAt: !4296)
!4319 = !DILocation(line: 831, column: 35, scope: !2373, inlinedAt: !4296)
!4320 = !DILocation(line: 831, column: 17, scope: !2339, inlinedAt: !4296)
!4321 = !DILocation(line: 832, column: 25, scope: !2373, inlinedAt: !4296)
!4322 = !DILocation(line: 832, column: 31, scope: !2373, inlinedAt: !4296)
!4323 = !DILocation(line: 832, column: 17, scope: !2373, inlinedAt: !4296)
!4324 = !DILocation(line: 3945, column: 5, scope: !4270)
!4325 = !DILocation(line: 3945, column: 13, scope: !4270)
!4326 = !DILocation(line: 3945, column: 21, scope: !4270)
!4327 = !DILocation(line: 839, column: 38, scope: !1014, inlinedAt: !4328)
!4328 = distinct !DILocation(line: 3946, column: 5, scope: !4270)
!4329 = !DILocation(line: 839, column: 59, scope: !1014, inlinedAt: !4328)
!4330 = !DILocation(line: 840, column: 9, scope: !1014, inlinedAt: !4328)
!4331 = !DILocation(line: 843, column: 29, scope: !1025, inlinedAt: !4328)
!4332 = !DILocation(line: 843, column: 19, scope: !1025, inlinedAt: !4328)
!4333 = !DILocation(line: 0, scope: !1014, inlinedAt: !4328)
!4334 = !DILocation(line: 843, column: 5, scope: !1026, inlinedAt: !4328)
!4335 = !DILocation(line: 844, column: 13, scope: !1033, inlinedAt: !4328)
!4336 = !DILocation(line: 844, column: 31, scope: !1033, inlinedAt: !4328)
!4337 = !DILocation(line: 843, column: 41, scope: !1025, inlinedAt: !4328)
!4338 = !DILocation(line: 844, column: 13, scope: !1025, inlinedAt: !4328)
!4339 = !DILocation(line: 845, column: 31, scope: !1014, inlinedAt: !4328)
!4340 = !DILocation(line: 846, column: 48, scope: !1014, inlinedAt: !4328)
!4341 = !DILocation(line: 846, column: 30, scope: !1014, inlinedAt: !4328)
!4342 = !DILocation(line: 846, column: 29, scope: !1014, inlinedAt: !4328)
!4343 = !DILocation(line: 845, column: 22, scope: !1014, inlinedAt: !4328)
!4344 = !DILocation(line: 845, column: 20, scope: !1014, inlinedAt: !4328)
!4345 = !DILocation(line: 847, column: 28, scope: !1014, inlinedAt: !4328)
!4346 = !DILocation(line: 847, column: 5, scope: !1014, inlinedAt: !4328)
!4347 = !DILocation(line: 847, column: 39, scope: !1014, inlinedAt: !4328)
!4348 = !DILocation(line: 848, column: 22, scope: !1014, inlinedAt: !4328)
!4349 = !DILocation(line: 849, column: 13, scope: !1014, inlinedAt: !4328)
!4350 = !DILocation(line: 849, column: 19, scope: !1014, inlinedAt: !4328)
!4351 = !DILocation(line: 850, column: 5, scope: !1014, inlinedAt: !4328)
!4352 = !DILocation(line: 3947, column: 26, scope: !4270)
!4353 = !DILocation(line: 3947, column: 36, scope: !4270)
!4354 = !DILocation(line: 3947, column: 5, scope: !4270)
!4355 = !DILocation(line: 3265, column: 16, scope: !2126, inlinedAt: !4356)
!4356 = distinct !DILocation(line: 3948, column: 5, scope: !4270)
!4357 = !DILocation(line: 3265, column: 25, scope: !2126, inlinedAt: !4356)
!4358 = !DILocation(line: 3265, column: 9, scope: !2126, inlinedAt: !4356)
!4359 = !DILocation(line: 3265, column: 32, scope: !2126, inlinedAt: !4356)
!4360 = !DILocation(line: 3265, column: 35, scope: !2126, inlinedAt: !4356)
!4361 = !DILocation(line: 3265, column: 9, scope: !1947, inlinedAt: !4356)
!4362 = !DILocation(line: 3266, column: 39, scope: !2133, inlinedAt: !4356)
!4363 = !DILocation(line: 3267, column: 9, scope: !2133, inlinedAt: !4356)
!4364 = !DILocation(line: 3268, column: 5, scope: !2133, inlinedAt: !4356)
!4365 = !DILocation(line: 3269, column: 12, scope: !1947, inlinedAt: !4356)
!4366 = !DILocation(line: 3269, column: 21, scope: !1947, inlinedAt: !4356)
!4367 = !DILocation(line: 3269, column: 28, scope: !1947, inlinedAt: !4356)
!4368 = !DILocation(line: 3270, column: 21, scope: !1947, inlinedAt: !4356)
!4369 = !DILocation(line: 3270, column: 34, scope: !1947, inlinedAt: !4356)
!4370 = !DILocation(line: 3271, column: 21, scope: !1947, inlinedAt: !4356)
!4371 = !DILocation(line: 3271, column: 30, scope: !1947, inlinedAt: !4356)
!4372 = !DILocation(line: 3272, column: 21, scope: !1947, inlinedAt: !4356)
!4373 = !DILocation(line: 3272, column: 38, scope: !1947, inlinedAt: !4356)
!4374 = !DILocation(line: 3949, column: 1, scope: !4270)
!4375 = distinct !DISubprogram(name: "clusterProcessPacket", scope: !3, file: !3, line: 1636, type: !4376, isLocal: false, isDefinition: true, scopeLine: 1636, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4378)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!177, !179}
!4378 = !{!4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4390, !4391, !4394, !4397, !4400, !4403, !4406, !4411, !4414, !4419, !4424, !4425, !4426, !4429, !4432, !4444, !4445, !4446, !4447, !4453, !4454, !4457, !4458, !4459}
!4379 = !DILocalVariable(name: "link", arg: 1, scope: !4375, file: !3, line: 1636, type: !179)
!4380 = !DILocalVariable(name: "hdr", scope: !4375, file: !3, line: 1637, type: !92)
!4381 = !DILocalVariable(name: "totlen", scope: !4375, file: !3, line: 1638, type: !43)
!4382 = !DILocalVariable(name: "type", scope: !4375, file: !3, line: 1639, type: !33)
!4383 = !DILocalVariable(name: "flags", scope: !4375, file: !3, line: 1655, type: !33)
!4384 = !DILocalVariable(name: "senderCurrentEpoch", scope: !4375, file: !3, line: 1656, type: !104)
!4385 = !DILocalVariable(name: "senderConfigEpoch", scope: !4375, file: !3, line: 1656, type: !104)
!4386 = !DILocalVariable(name: "sender", scope: !4375, file: !3, line: 1657, type: !378)
!4387 = !DILocalVariable(name: "count", scope: !4388, file: !3, line: 1662, type: !33)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 1661, column: 5)
!4389 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1659, column: 9)
!4390 = !DILocalVariable(name: "explen", scope: !4388, file: !3, line: 1663, type: !43)
!4391 = !DILocalVariable(name: "explen", scope: !4392, file: !3, line: 1669, type: !43)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 1668, column: 46)
!4393 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 1668, column: 16)
!4394 = !DILocalVariable(name: "explen", scope: !4395, file: !3, line: 1674, type: !43)
!4395 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 1673, column: 49)
!4396 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 1673, column: 16)
!4397 = !DILocalVariable(name: "explen", scope: !4398, file: !3, line: 1685, type: !43)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 1684, column: 5)
!4399 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 1681, column: 16)
!4400 = !DILocalVariable(name: "explen", scope: !4401, file: !3, line: 1689, type: !43)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 1688, column: 48)
!4402 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 1688, column: 16)
!4403 = !DILocalVariable(name: "explen", scope: !4404, file: !3, line: 1694, type: !43)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 1693, column: 48)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 1693, column: 16)
!4406 = !DILocalVariable(name: "ip", scope: !4407, file: !3, line: 1752, type: !85)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 1751, column: 9)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 1749, column: 13)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 1735, column: 71)
!4410 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1735, column: 9)
!4411 = !DILocalVariable(name: "node", scope: !4412, file: !3, line: 1769, type: !378)
!4412 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 1768, column: 54)
!4413 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 1768, column: 13)
!4414 = !DILocalVariable(name: "nofailover", scope: !4415, file: !3, line: 1850, type: !177)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1849, column: 21)
!4416 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1849, column: 13)
!4417 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 1792, column: 5)
!4418 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1790, column: 9)
!4419 = !DILocalVariable(name: "master", scope: !4420, file: !3, line: 1893, type: !378)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 1891, column: 20)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 1886, column: 17)
!4422 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 1885, column: 21)
!4423 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1885, column: 13)
!4424 = !DILocalVariable(name: "sender_master", scope: !4417, file: !3, line: 1929, type: !378)
!4425 = !DILocalVariable(name: "dirty_slots", scope: !4417, file: !3, line: 1930, type: !177)
!4426 = !DILocalVariable(name: "j", scope: !4427, file: !3, line: 1965, type: !177)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 1964, column: 36)
!4428 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1964, column: 13)
!4429 = !DILocalVariable(name: "failing", scope: !4430, file: !3, line: 2002, type: !378)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 2001, column: 46)
!4431 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 2001, column: 16)
!4432 = !DILocalVariable(name: "channel", scope: !4433, file: !3, line: 2024, type: !4435)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2023, column: 49)
!4434 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 2023, column: 16)
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = !DIDerivedType(tag: DW_TAG_typedef, name: "robj", file: !185, line: 622, baseType: !4437)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisObject", file: !185, line: 614, size: 128, elements: !4438)
!4438 = !{!4439, !4440, !4441, !4442, !4443}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4437, file: !185, line: 615, baseType: !45, size: 4, flags: DIFlagBitField, extraData: i64 0)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !4437, file: !185, line: 616, baseType: !45, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4437, file: !185, line: 617, baseType: !45, size: 24, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4437, file: !185, line: 620, baseType: !177, size: 32, offset: 32)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4437, file: !185, line: 621, baseType: !6, size: 64, offset: 64)
!4444 = !DILocalVariable(name: "message", scope: !4433, file: !3, line: 2024, type: !4435)
!4445 = !DILocalVariable(name: "channel_len", scope: !4433, file: !3, line: 2025, type: !43)
!4446 = !DILocalVariable(name: "message_len", scope: !4433, file: !3, line: 2025, type: !43)
!4447 = !DILocalVariable(name: "n", scope: !4448, file: !3, line: 2072, type: !378)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 2071, column: 48)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 2071, column: 16)
!4450 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 2059, column: 16)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 2046, column: 16)
!4452 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2043, column: 16)
!4453 = !DILocalVariable(name: "reportedConfigEpoch", scope: !4448, file: !3, line: 2073, type: !104)
!4454 = !DILocalVariable(name: "module_id", scope: !4455, file: !3, line: 2097, type: !104)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 2093, column: 48)
!4456 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 2093, column: 16)
!4457 = !DILocalVariable(name: "len", scope: !4455, file: !3, line: 2098, type: !43)
!4458 = !DILocalVariable(name: "type", scope: !4455, file: !3, line: 2099, type: !23)
!4459 = !DILocalVariable(name: "payload", scope: !4455, file: !3, line: 2100, type: !246)
!4460 = !DILocation(line: 1636, column: 39, scope: !4375)
!4461 = !DILocation(line: 1637, column: 43, scope: !4375)
!4462 = !DILocation(line: 1637, column: 17, scope: !4375)
!4463 = !DILocation(line: 1638, column: 23, scope: !4375)
!4464 = !DILocation(line: 1638, column: 14, scope: !4375)
!4465 = !DILocation(line: 1639, column: 21, scope: !4375)
!4466 = !{!2628, !728, i64 12}
!4467 = !DILocation(line: 1639, column: 14, scope: !4375)
!4468 = !DILocation(line: 1641, column: 9, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1641, column: 9)
!4470 = !DILocation(line: 1641, column: 14, scope: !4469)
!4471 = !DILocation(line: 1641, column: 9, scope: !4375)
!4472 = !DILocation(line: 1642, column: 16, scope: !4469)
!4473 = !DILocation(line: 1642, column: 9, scope: !4469)
!4474 = !DILocation(line: 1642, column: 58, scope: !4469)
!4475 = !DILocation(line: 1644, column: 15, scope: !4375)
!4476 = !DILocation(line: 1643, column: 5, scope: !4375)
!4477 = !DILocation(line: 1647, column: 16, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1647, column: 9)
!4479 = !DILocation(line: 1647, column: 9, scope: !4375)
!4480 = !DILocation(line: 1648, column: 31, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1648, column: 9)
!4482 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !4483)
!4483 = distinct !DILocation(line: 1648, column: 18, scope: !4481)
!4484 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !4483)
!4485 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !4483)
!4486 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !4483)
!4487 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !4483)
!4488 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !4483)
!4489 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !4483)
!4490 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !4483)
!4491 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !4483)
!4492 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !4483)
!4493 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !4483)
!4494 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !4483)
!4495 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !4483)
!4496 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !4483)
!4497 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !4483)
!4498 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !4483)
!4499 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !4483)
!4500 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !4483)
!4501 = !DILocation(line: 0, scope: !1486, inlinedAt: !4483)
!4502 = !DILocation(line: 1648, column: 16, scope: !4481)
!4503 = !DILocation(line: 1648, column: 9, scope: !4375)
!4504 = !DILocation(line: 1650, column: 9, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1650, column: 9)
!4506 = !{!2628, !728, i64 8}
!4507 = !DILocation(line: 1650, column: 25, scope: !4505)
!4508 = !DILocation(line: 1650, column: 9, scope: !4375)
!4509 = !DILocation(line: 1655, column: 22, scope: !4375)
!4510 = !{!2628, !728, i64 2250}
!4511 = !DILocation(line: 1655, column: 14, scope: !4375)
!4512 = !DILocation(line: 1656, column: 14, scope: !4375)
!4513 = !DILocation(line: 1656, column: 38, scope: !4375)
!4514 = !DILocation(line: 1659, column: 14, scope: !4389)
!4515 = !DILocation(line: 1659, column: 38, scope: !4389)
!4516 = !DILocation(line: 1662, column: 26, scope: !4388)
!4517 = !DILocation(line: 1662, column: 18, scope: !4388)
!4518 = !DILocation(line: 1663, column: 18, scope: !4388)
!4519 = !DILocation(line: 1666, column: 49, scope: !4388)
!4520 = !DILocation(line: 1666, column: 48, scope: !4388)
!4521 = !DILocation(line: 1666, column: 16, scope: !4388)
!4522 = !DILocation(line: 1667, column: 20, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 1667, column: 13)
!4524 = !DILocation(line: 1669, column: 18, scope: !4392)
!4525 = !DILocation(line: 1672, column: 20, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 1672, column: 13)
!4527 = !DILocation(line: 1674, column: 18, scope: !4395)
!4528 = !DILocation(line: 1678, column: 17, scope: !4395)
!4529 = !DILocation(line: 1679, column: 17, scope: !4395)
!4530 = !DILocation(line: 1678, column: 58, scope: !4395)
!4531 = !DILocation(line: 1676, column: 16, scope: !4395)
!4532 = !DILocation(line: 1680, column: 20, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 1680, column: 13)
!4534 = !DILocation(line: 1685, column: 18, scope: !4398)
!4535 = !DILocation(line: 1687, column: 20, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 1687, column: 13)
!4537 = !DILocation(line: 1689, column: 18, scope: !4401)
!4538 = !DILocation(line: 1692, column: 20, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 1692, column: 13)
!4540 = !DILocation(line: 1694, column: 18, scope: !4404)
!4541 = !DILocation(line: 1697, column: 21, scope: !4404)
!4542 = !DILocation(line: 1696, column: 16, scope: !4404)
!4543 = !DILocation(line: 1698, column: 20, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 1698, column: 13)
!4545 = !DILocation(line: 1702, column: 32, scope: !4375)
!4546 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !4547)
!4547 = distinct !DILocation(line: 1702, column: 14, scope: !4375)
!4548 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !4547)
!4549 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !4547)
!4550 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !4547)
!4551 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !4547)
!4552 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !4547)
!4553 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !4547)
!4554 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !4547)
!4555 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !4547)
!4556 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !4547)
!4557 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !4547)
!4558 = !DILocation(line: 1657, column: 18, scope: !4375)
!4559 = !DILocation(line: 1703, column: 9, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1703, column: 9)
!4561 = !DILocation(line: 1703, column: 16, scope: !4560)
!4562 = !DILocation(line: 1703, column: 20, scope: !4560)
!4563 = !DILocation(line: 1703, column: 9, scope: !4375)
!4564 = !DILocation(line: 1705, column: 30, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 1703, column: 45)
!4566 = !{!2628, !729, i64 16}
!4567 = !DILocation(line: 1706, column: 29, scope: !4565)
!4568 = !{!2628, !729, i64 24}
!4569 = !DILocation(line: 1707, column: 41, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4565, file: !3, line: 1707, column: 13)
!4571 = !DILocation(line: 1707, column: 50, scope: !4570)
!4572 = !DILocation(line: 1707, column: 32, scope: !4570)
!4573 = !DILocation(line: 1707, column: 13, scope: !4565)
!4574 = !DILocation(line: 1708, column: 42, scope: !4570)
!4575 = !DILocation(line: 1708, column: 13, scope: !4570)
!4576 = !DILocation(line: 1710, column: 41, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4565, file: !3, line: 1710, column: 13)
!4578 = !DILocation(line: 1710, column: 31, scope: !4577)
!4579 = !DILocation(line: 1710, column: 13, scope: !4565)
!4580 = !DILocation(line: 1711, column: 33, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 1710, column: 54)
!4582 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4583)
!4583 = distinct !DILocation(line: 1712, column: 13, scope: !4581)
!4584 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4583)
!4585 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4583)
!4586 = !DILocation(line: 1714, column: 9, scope: !4581)
!4587 = !DILocation(line: 1716, column: 31, scope: !4565)
!4588 = !{!2628, !729, i64 32}
!4589 = !DILocation(line: 1716, column: 17, scope: !4565)
!4590 = !DILocation(line: 1716, column: 29, scope: !4565)
!4591 = !DILocation(line: 1717, column: 36, scope: !4565)
!4592 = !DILocation(line: 1717, column: 17, scope: !4565)
!4593 = !DILocation(line: 1717, column: 34, scope: !4565)
!4594 = !DILocation(line: 1720, column: 20, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4565, file: !3, line: 1720, column: 13)
!4596 = !DILocation(line: 1720, column: 29, scope: !4595)
!4597 = !DILocation(line: 1720, column: 13, scope: !4595)
!4598 = !DILocation(line: 1720, column: 36, scope: !4595)
!4599 = !DILocation(line: 1721, column: 13, scope: !4595)
!4600 = !DILocation(line: 1721, column: 33, scope: !4595)
!4601 = !DILocation(line: 1722, column: 21, scope: !4595)
!4602 = !DILocation(line: 1722, column: 29, scope: !4595)
!4603 = !DILocation(line: 1722, column: 39, scope: !4595)
!4604 = !DILocation(line: 1723, column: 13, scope: !4595)
!4605 = !DILocation(line: 1723, column: 28, scope: !4595)
!4606 = !DILocation(line: 1723, column: 54, scope: !4595)
!4607 = !DILocation(line: 1724, column: 29, scope: !4595)
!4608 = !DILocation(line: 1724, column: 46, scope: !4595)
!4609 = !DILocation(line: 1720, column: 13, scope: !4565)
!4610 = !DILocation(line: 1726, column: 56, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 1725, column: 9)
!4612 = !DILocation(line: 1726, column: 46, scope: !4611)
!4613 = !DILocation(line: 1727, column: 13, scope: !4611)
!4614 = !DILocation(line: 1731, column: 9, scope: !4611)
!4615 = !DILocation(line: 0, scope: !4375)
!4616 = !DILocation(line: 1735, column: 38, scope: !4410)
!4617 = !DILocation(line: 1795, column: 26, scope: !4417)
!4618 = !DILocation(line: 1736, column: 69, scope: !4409)
!4619 = !DILocation(line: 1736, column: 9, scope: !4409)
!4620 = !DILocation(line: 1749, column: 19, scope: !4408)
!4621 = !DILocation(line: 1749, column: 43, scope: !4408)
!4622 = !DILocation(line: 1749, column: 46, scope: !4408)
!4623 = !DILocation(line: 1749, column: 60, scope: !4408)
!4624 = !DILocation(line: 1750, column: 20, scope: !4408)
!4625 = !DILocation(line: 1750, column: 40, scope: !4408)
!4626 = !DILocation(line: 1749, column: 69, scope: !4408)
!4627 = !{!785, !758, i64 2968}
!4628 = !DILocation(line: 1749, column: 13, scope: !4409)
!4629 = !DILocation(line: 1752, column: 13, scope: !4407)
!4630 = !DILocation(line: 1752, column: 18, scope: !4407)
!4631 = !DILocation(line: 1754, column: 36, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 1754, column: 17)
!4633 = !DILocation(line: 1754, column: 17, scope: !4632)
!4634 = !DILocation(line: 1754, column: 59, scope: !4632)
!4635 = !DILocation(line: 1754, column: 65, scope: !4632)
!4636 = !DILocation(line: 1755, column: 27, scope: !4632)
!4637 = !DILocation(line: 1755, column: 17, scope: !4632)
!4638 = !DILocation(line: 1754, column: 17, scope: !4407)
!4639 = !DILocation(line: 1757, column: 24, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 1756, column: 13)
!4641 = !DILocation(line: 1757, column: 17, scope: !4640)
!4642 = !DILocation(line: 1759, column: 21, scope: !4640)
!4643 = !DILocation(line: 1758, column: 17, scope: !4640)
!4644 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4645)
!4645 = distinct !DILocation(line: 1760, column: 17, scope: !4640)
!4646 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4645)
!4647 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4645)
!4648 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4645)
!4649 = !DILocation(line: 1761, column: 13, scope: !4640)
!4650 = !DILocation(line: 1762, column: 9, scope: !4408)
!4651 = !DILocation(line: 1762, column: 9, scope: !4407)
!4652 = !DILocation(line: 1768, column: 21, scope: !4413)
!4653 = !DILocation(line: 695, column: 38, scope: !1112, inlinedAt: !4654)
!4654 = distinct !DILocation(line: 1771, column: 20, scope: !4412)
!4655 = !DILocation(line: 695, column: 52, scope: !1112, inlinedAt: !4654)
!4656 = !DILocation(line: 696, column: 25, scope: !1112, inlinedAt: !4654)
!4657 = !DILocation(line: 696, column: 18, scope: !1112, inlinedAt: !4654)
!4658 = !DILocation(line: 0, scope: !1125, inlinedAt: !4654)
!4659 = !DILocation(line: 701, column: 9, scope: !1125, inlinedAt: !4654)
!4660 = !DILocation(line: 702, column: 19, scope: !1112, inlinedAt: !4654)
!4661 = !DILocation(line: 702, column: 11, scope: !1112, inlinedAt: !4654)
!4662 = !DILocation(line: 702, column: 17, scope: !1112, inlinedAt: !4654)
!4663 = !DILocation(line: 703, column: 11, scope: !1112, inlinedAt: !4654)
!4664 = !DILocation(line: 703, column: 23, scope: !1112, inlinedAt: !4654)
!4665 = !DILocation(line: 704, column: 11, scope: !1112, inlinedAt: !4654)
!4666 = !DILocation(line: 704, column: 17, scope: !1112, inlinedAt: !4654)
!4667 = !DILocation(line: 705, column: 18, scope: !1112, inlinedAt: !4654)
!4668 = !DILocation(line: 705, column: 5, scope: !1112, inlinedAt: !4654)
!4669 = !DILocation(line: 706, column: 11, scope: !1112, inlinedAt: !4654)
!4670 = !DILocation(line: 706, column: 20, scope: !1112, inlinedAt: !4654)
!4671 = !DILocation(line: 707, column: 11, scope: !1112, inlinedAt: !4654)
!4672 = !DILocation(line: 707, column: 21, scope: !1112, inlinedAt: !4654)
!4673 = !DILocation(line: 708, column: 11, scope: !1112, inlinedAt: !4654)
!4674 = !DILocation(line: 708, column: 18, scope: !1112, inlinedAt: !4654)
!4675 = !DILocation(line: 709, column: 11, scope: !1112, inlinedAt: !4654)
!4676 = !DILocation(line: 709, column: 19, scope: !1112, inlinedAt: !4654)
!4677 = !DILocation(line: 710, column: 11, scope: !1112, inlinedAt: !4654)
!4678 = !DILocation(line: 710, column: 21, scope: !1112, inlinedAt: !4654)
!4679 = !DILocation(line: 711, column: 11, scope: !1112, inlinedAt: !4654)
!4680 = !DILocation(line: 711, column: 21, scope: !1112, inlinedAt: !4654)
!4681 = !DILocation(line: 712, column: 11, scope: !1112, inlinedAt: !4654)
!4682 = !DILocation(line: 712, column: 16, scope: !1112, inlinedAt: !4654)
!4683 = !DILocation(line: 713, column: 18, scope: !1112, inlinedAt: !4654)
!4684 = !DILocation(line: 713, column: 5, scope: !1112, inlinedAt: !4654)
!4685 = !DILocation(line: 714, column: 11, scope: !1112, inlinedAt: !4654)
!4686 = !DILocation(line: 714, column: 16, scope: !1112, inlinedAt: !4654)
!4687 = !DILocation(line: 715, column: 11, scope: !1112, inlinedAt: !4654)
!4688 = !DILocation(line: 715, column: 17, scope: !1112, inlinedAt: !4654)
!4689 = !DILocation(line: 716, column: 26, scope: !1112, inlinedAt: !4654)
!4690 = !DILocation(line: 716, column: 11, scope: !1112, inlinedAt: !4654)
!4691 = !DILocation(line: 716, column: 24, scope: !1112, inlinedAt: !4654)
!4692 = !DILocation(line: 717, column: 11, scope: !1112, inlinedAt: !4654)
!4693 = !DILocation(line: 717, column: 22, scope: !1112, inlinedAt: !4654)
!4694 = !DILocation(line: 718, column: 11, scope: !1112, inlinedAt: !4654)
!4695 = !DILocation(line: 718, column: 25, scope: !1112, inlinedAt: !4654)
!4696 = !DILocation(line: 719, column: 11, scope: !1112, inlinedAt: !4654)
!4697 = !DILocation(line: 719, column: 28, scope: !1112, inlinedAt: !4654)
!4698 = !DILocation(line: 720, column: 11, scope: !1112, inlinedAt: !4654)
!4699 = !DILocation(line: 720, column: 23, scope: !1112, inlinedAt: !4654)
!4700 = !DILocation(line: 721, column: 5, scope: !1112, inlinedAt: !4654)
!4701 = !DILocation(line: 1769, column: 26, scope: !4412)
!4702 = !DILocation(line: 1772, column: 41, scope: !4412)
!4703 = !DILocation(line: 1445, column: 26, scope: !3971, inlinedAt: !4704)
!4704 = distinct !DILocation(line: 1772, column: 13, scope: !4412)
!4705 = !DILocation(line: 1445, column: 44, scope: !3971, inlinedAt: !4704)
!4706 = !DILocation(line: 1445, column: 56, scope: !3971, inlinedAt: !4704)
!4707 = !DILocation(line: 1446, column: 9, scope: !3982, inlinedAt: !4704)
!4708 = !DILocation(line: 1446, column: 25, scope: !3982, inlinedAt: !4704)
!4709 = !DILocation(line: 1446, column: 9, scope: !3971, inlinedAt: !4704)
!4710 = !DILocation(line: 1447, column: 9, scope: !3986, inlinedAt: !4704)
!4711 = !DILocation(line: 1448, column: 9, scope: !3986, inlinedAt: !4704)
!4712 = !DILocation(line: 1448, column: 31, scope: !3986, inlinedAt: !4704)
!4713 = !DILocation(line: 1449, column: 5, scope: !3986, inlinedAt: !4704)
!4714 = !DILocation(line: 1450, column: 32, scope: !3991, inlinedAt: !4704)
!4715 = !DILocation(line: 1450, column: 9, scope: !3991, inlinedAt: !4704)
!4716 = !DILocation(line: 1773, column: 26, scope: !4412)
!4717 = !DILocation(line: 1773, column: 24, scope: !4412)
!4718 = !DILocation(line: 1774, column: 27, scope: !4412)
!4719 = !DILocation(line: 1774, column: 25, scope: !4412)
!4720 = !DILocation(line: 887, column: 33, scope: !848, inlinedAt: !4721)
!4721 = distinct !DILocation(line: 1775, column: 13, scope: !4412)
!4722 = !DILocation(line: 890, column: 29, scope: !848, inlinedAt: !4721)
!4723 = !DILocation(line: 890, column: 38, scope: !848, inlinedAt: !4721)
!4724 = !DILocation(line: 891, column: 13, scope: !848, inlinedAt: !4721)
!4725 = !DILocation(line: 890, column: 14, scope: !848, inlinedAt: !4721)
!4726 = !DILocation(line: 888, column: 9, scope: !848, inlinedAt: !4721)
!4727 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4728)
!4728 = distinct !DILocation(line: 1776, column: 13, scope: !4412)
!4729 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4728)
!4730 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4728)
!4731 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4728)
!4732 = !DILocation(line: 1783, column: 13, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 1782, column: 13)
!4734 = !DILocation(line: 1786, column: 9, scope: !4409)
!4735 = !DILocation(line: 1794, column: 13, scope: !4417)
!4736 = !DILocation(line: 1793, column: 9, scope: !4417)
!4737 = !DILocation(line: 1796, column: 19, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1796, column: 13)
!4739 = !DILocation(line: 1796, column: 13, scope: !4738)
!4740 = !DILocation(line: 1796, column: 13, scope: !4417)
!4741 = !DILocation(line: 1797, column: 17, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 1797, column: 17)
!4743 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 1796, column: 25)
!4744 = !DILocation(line: 1797, column: 17, scope: !4743)
!4745 = !DILocation(line: 1800, column: 21, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 1797, column: 46)
!4747 = !DILocation(line: 1803, column: 60, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 1800, column: 29)
!4749 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 1800, column: 21)
!4750 = !DILocation(line: 1801, column: 21, scope: !4748)
!4751 = !DILocation(line: 1804, column: 25, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 1804, column: 25)
!4753 = !DILocation(line: 1804, column: 25, scope: !4748)
!4754 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4755)
!4755 = distinct !DILocation(line: 1806, column: 25, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 1805, column: 21)
!4757 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4755)
!4758 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4755)
!4759 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4755)
!4760 = !DILocation(line: 1808, column: 21, scope: !4756)
!4761 = !DILocation(line: 1811, column: 42, scope: !4748)
!4762 = !DILocation(line: 1811, column: 21, scope: !4748)
!4763 = !DILocation(line: 1812, column: 21, scope: !4748)
!4764 = !DILocation(line: 1817, column: 17, scope: !4746)
!4765 = !DILocation(line: 1819, column: 27, scope: !4746)
!4766 = !DILocation(line: 1819, column: 21, scope: !4746)
!4767 = !DILocation(line: 1818, column: 17, scope: !4746)
!4768 = !DILocation(line: 1820, column: 23, scope: !4746)
!4769 = !DILocation(line: 1820, column: 29, scope: !4746)
!4770 = !DILocation(line: 1820, column: 35, scope: !4746)
!4771 = !DILocation(line: 1821, column: 43, scope: !4746)
!4772 = !DILocation(line: 1821, column: 35, scope: !4746)
!4773 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4774)
!4774 = distinct !DILocation(line: 1822, column: 17, scope: !4746)
!4775 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4774)
!4776 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4774)
!4777 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4774)
!4778 = !DILocation(line: 1849, column: 13, scope: !4417)
!4779 = !DILocation(line: 1823, column: 31, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 1823, column: 24)
!4781 = !DILocation(line: 1823, column: 24, scope: !4780)
!4782 = !DILocation(line: 1824, column: 42, scope: !4780)
!4783 = !DILocation(line: 1823, column: 24, scope: !4742)
!4784 = !DILocation(line: 1830, column: 27, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 1825, column: 13)
!4786 = !DILocation(line: 1830, column: 21, scope: !4785)
!4787 = !DILocation(line: 1831, column: 27, scope: !4785)
!4788 = !DILocation(line: 1831, column: 43, scope: !4785)
!4789 = !DILocation(line: 1831, column: 49, scope: !4785)
!4790 = !DILocation(line: 1831, column: 35, scope: !4785)
!4791 = !DILocation(line: 1831, column: 21, scope: !4785)
!4792 = !DILocation(line: 1832, column: 33, scope: !4785)
!4793 = !DILocation(line: 1829, column: 17, scope: !4785)
!4794 = !DILocation(line: 1833, column: 23, scope: !4785)
!4795 = !DILocation(line: 1833, column: 29, scope: !4785)
!4796 = !DILocation(line: 1833, column: 35, scope: !4785)
!4797 = !DILocation(line: 1834, column: 17, scope: !4785)
!4798 = !DILocation(line: 1834, column: 35, scope: !4785)
!4799 = !DILocation(line: 1835, column: 23, scope: !4785)
!4800 = !DILocation(line: 1835, column: 29, scope: !4785)
!4801 = !DILocation(line: 1835, column: 34, scope: !4785)
!4802 = !DILocation(line: 1836, column: 29, scope: !4785)
!4803 = !DILocation(line: 1836, column: 35, scope: !4785)
!4804 = !DILocation(line: 603, column: 35, scope: !2530, inlinedAt: !4805)
!4805 = distinct !DILocation(line: 1837, column: 17, scope: !4785)
!4806 = !DILocation(line: 604, column: 15, scope: !2537, inlinedAt: !4805)
!4807 = !DILocation(line: 604, column: 18, scope: !2537, inlinedAt: !4805)
!4808 = !DILocation(line: 604, column: 9, scope: !2530, inlinedAt: !4805)
!4809 = !DILocation(line: 605, column: 34, scope: !2541, inlinedAt: !4805)
!4810 = !DILocation(line: 605, column: 9, scope: !2541, inlinedAt: !4805)
!4811 = !DILocation(line: 606, column: 5, scope: !2541, inlinedAt: !4805)
!4812 = !DILocation(line: 607, column: 19, scope: !2530, inlinedAt: !4805)
!4813 = !DILocation(line: 607, column: 5, scope: !2530, inlinedAt: !4805)
!4814 = !DILocation(line: 608, column: 19, scope: !2530, inlinedAt: !4805)
!4815 = !DILocation(line: 608, column: 5, scope: !2530, inlinedAt: !4805)
!4816 = !DILocation(line: 609, column: 15, scope: !2549, inlinedAt: !4805)
!4817 = !DILocation(line: 609, column: 9, scope: !2549, inlinedAt: !4805)
!4818 = !DILocation(line: 609, column: 9, scope: !2530, inlinedAt: !4805)
!4819 = !DILocation(line: 610, column: 21, scope: !2549, inlinedAt: !4805)
!4820 = !DILocation(line: 610, column: 26, scope: !2549, inlinedAt: !4805)
!4821 = !DILocation(line: 610, column: 9, scope: !2549, inlinedAt: !4805)
!4822 = !DILocation(line: 611, column: 17, scope: !2530, inlinedAt: !4805)
!4823 = !DILocation(line: 611, column: 5, scope: !2530, inlinedAt: !4805)
!4824 = !DILocation(line: 612, column: 11, scope: !2530, inlinedAt: !4805)
!4825 = !DILocation(line: 612, column: 5, scope: !2530, inlinedAt: !4805)
!4826 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4827)
!4827 = distinct !DILocation(line: 1838, column: 17, scope: !4785)
!4828 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4827)
!4829 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4827)
!4830 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4827)
!4831 = !DILocation(line: 1839, column: 17, scope: !4785)
!4832 = !DILocation(line: 1850, column: 36, scope: !4415)
!4833 = !DILocation(line: 1850, column: 17, scope: !4415)
!4834 = !DILocation(line: 1851, column: 21, scope: !4415)
!4835 = !DILocation(line: 1851, column: 27, scope: !4415)
!4836 = !DILocation(line: 1852, column: 27, scope: !4415)
!4837 = !DILocation(line: 1857, column: 14, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1856, column: 13)
!4839 = !DILocation(line: 1856, column: 20, scope: !4838)
!4840 = !DILocation(line: 1858, column: 13, scope: !4838)
!4841 = !DILocation(line: 1856, column: 13, scope: !4417)
!4842 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4843)
!4843 = distinct !DILocation(line: 1860, column: 13, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 1859, column: 9)
!4845 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4843)
!4846 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4843)
!4847 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4843)
!4848 = !DILocation(line: 1862, column: 9, scope: !4844)
!4849 = !DILocation(line: 1865, column: 19, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1865, column: 13)
!4851 = !DILocation(line: 1865, column: 13, scope: !4850)
!4852 = !DILocation(line: 1865, column: 32, scope: !4850)
!4853 = !DILocation(line: 1865, column: 24, scope: !4850)
!4854 = !DILocation(line: 1866, column: 41, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1865, column: 57)
!4856 = !DILocation(line: 1866, column: 19, scope: !4855)
!4857 = !DILocation(line: 1866, column: 25, scope: !4855)
!4858 = !DILocation(line: 1866, column: 39, scope: !4855)
!4859 = !DILocation(line: 1867, column: 25, scope: !4855)
!4860 = !DILocation(line: 1867, column: 35, scope: !4855)
!4861 = !DILocation(line: 1875, column: 17, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 1875, column: 17)
!4863 = !DILocation(line: 1875, column: 17, scope: !4855)
!4864 = !DILocation(line: 1876, column: 35, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1875, column: 43)
!4866 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4867)
!4867 = distinct !DILocation(line: 1877, column: 17, scope: !4865)
!4868 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4867)
!4869 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4867)
!4870 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4867)
!4871 = !DILocation(line: 1885, column: 13, scope: !4417)
!4872 = !DILocation(line: 1879, column: 24, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1879, column: 24)
!4874 = !DILocation(line: 1879, column: 24, scope: !4862)
!4875 = !DILocation(line: 1880, column: 17, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 1879, column: 48)
!4877 = !DILocation(line: 1886, column: 25, scope: !4421)
!4878 = !DILocation(line: 1886, column: 18, scope: !4421)
!4879 = !DILocation(line: 1886, column: 17, scope: !4422)
!4880 = !DILocation(line: 1890, column: 17, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 1888, column: 13)
!4882 = !DILocation(line: 1933, column: 29, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 1932, column: 21)
!4884 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1932, column: 13)
!4885 = !DILocation(line: 1891, column: 13, scope: !4881)
!4886 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !4887)
!4887 = distinct !DILocation(line: 1893, column: 39, scope: !4420)
!4888 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !4887)
!4889 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !4887)
!4890 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !4887)
!4891 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !4887)
!4892 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !4887)
!4893 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !4887)
!4894 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !4887)
!4895 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !4887)
!4896 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !4887)
!4897 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !4887)
!4898 = !DILocation(line: 943, column: 5, scope: !820, inlinedAt: !4887)
!4899 = !DILocation(line: 0, scope: !820, inlinedAt: !4887)
!4900 = !DILocation(line: 1893, column: 30, scope: !4420)
!4901 = !DILocation(line: 1895, column: 21, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 1895, column: 21)
!4903 = !DILocation(line: 1895, column: 21, scope: !4420)
!4904 = !DILocalVariable(name: "j", scope: !4905, file: !3, line: 3728, type: !177)
!4905 = distinct !DISubprogram(name: "clusterDelNodeSlots", scope: !3, file: !3, line: 3727, type: !849, isLocal: false, isDefinition: true, scopeLine: 3727, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4906)
!4906 = !{!4907, !4908, !4904}
!4907 = !DILocalVariable(name: "node", arg: 1, scope: !4905, file: !3, line: 3727, type: !378)
!4908 = !DILocalVariable(name: "deleted", scope: !4905, file: !3, line: 3728, type: !177)
!4909 = !DILocation(line: 3728, column: 22, scope: !4905, inlinedAt: !4910)
!4910 = distinct !DILocation(line: 1897, column: 21, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 1895, column: 43)
!4912 = !DILocalVariable(name: "n", arg: 1, scope: !4913, file: !3, line: 3698, type: !378)
!4913 = distinct !DISubprogram(name: "clusterNodeGetSlotBit", scope: !3, file: !3, line: 3698, type: !1220, isLocal: false, isDefinition: true, scopeLine: 3698, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4914)
!4914 = !{!4912, !4915}
!4915 = !DILocalVariable(name: "slot", arg: 2, scope: !4913, file: !3, line: 3698, type: !177)
!4916 = !DILocation(line: 3698, column: 40, scope: !4913, inlinedAt: !4917)
!4917 = distinct !DILocation(line: 3731, column: 13, scope: !4918, inlinedAt: !4910)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 3731, column: 13)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 3730, column: 41)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 3730, column: 5)
!4921 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 3730, column: 5)
!4922 = !DILocation(line: 3698, column: 47, scope: !4913, inlinedAt: !4917)
!4923 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !4924)
!4924 = distinct !DILocation(line: 3699, column: 12, scope: !4913, inlinedAt: !4917)
!4925 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !4924)
!4926 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !4924)
!4927 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !4924)
!4928 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !4924)
!4929 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !4924)
!4930 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !4924)
!4931 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !4924)
!4932 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !4924)
!4933 = !DILocation(line: 3731, column: 13, scope: !4919, inlinedAt: !4910)
!4934 = !DILocation(line: 3716, column: 24, scope: !2197, inlinedAt: !4935)
!4935 = distinct !DILocation(line: 3732, column: 13, scope: !4936, inlinedAt: !4910)
!4936 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 3731, column: 44)
!4937 = !DILocation(line: 3717, column: 29, scope: !2197, inlinedAt: !4935)
!4938 = !DILocation(line: 3717, column: 22, scope: !2197, inlinedAt: !4935)
!4939 = !DILocation(line: 3717, column: 18, scope: !2197, inlinedAt: !4935)
!4940 = !DILocation(line: 3719, column: 10, scope: !2206, inlinedAt: !4935)
!4941 = !DILocation(line: 3719, column: 9, scope: !2197, inlinedAt: !4935)
!4942 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !4943)
!4943 = distinct !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !4935)
!4944 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !4943)
!4945 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !4946)
!4946 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !4943)
!4947 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !4946)
!4948 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !4946)
!4949 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !4946)
!4950 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !4946)
!4951 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !4946)
!4952 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !4946)
!4953 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !4954)
!4954 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !4943)
!4955 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !4954)
!4956 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !4954)
!4957 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !4954)
!4958 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !4954)
!4959 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !4943)
!4960 = !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !4935)
!4961 = !DILocation(line: 3693, column: 17, scope: !2251, inlinedAt: !4943)
!4962 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !4943)
!4963 = !DILocation(line: 3721, column: 12, scope: !2197, inlinedAt: !4935)
!4964 = !DILocation(line: 3721, column: 5, scope: !2197, inlinedAt: !4935)
!4965 = !DILocation(line: 3721, column: 33, scope: !2197, inlinedAt: !4935)
!4966 = !DILocation(line: 3722, column: 5, scope: !2197, inlinedAt: !4935)
!4967 = !DILocation(line: 3730, column: 37, scope: !4920, inlinedAt: !4910)
!4968 = !DILocation(line: 3730, column: 19, scope: !4920, inlinedAt: !4910)
!4969 = !DILocation(line: 3730, column: 5, scope: !4921, inlinedAt: !4910)
!4970 = distinct !{!4970, !4971, !4972}
!4971 = !DILocation(line: 3730, column: 5, scope: !4921)
!4972 = !DILocation(line: 3735, column: 5, scope: !4921)
!4973 = !DILocation(line: 1898, column: 35, scope: !4911)
!4974 = !DILocation(line: 1900, column: 35, scope: !4911)
!4975 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !4976)
!4976 = distinct !DILocation(line: 1903, column: 21, scope: !4911)
!4977 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !4976)
!4978 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !4976)
!4979 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !4976)
!4980 = !DILocation(line: 1905, column: 17, scope: !4911)
!4981 = !DILocation(line: 1908, column: 21, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 1908, column: 21)
!4983 = !DILocation(line: 1908, column: 28, scope: !4982)
!4984 = !DILocation(line: 1908, column: 39, scope: !4982)
!4985 = !DILocation(line: 1908, column: 47, scope: !4982)
!4986 = !DILocation(line: 1908, column: 21, scope: !4420)
!4987 = !DILocation(line: 1909, column: 25, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1909, column: 25)
!4989 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 1908, column: 58)
!4990 = !DILocation(line: 1909, column: 25, scope: !4989)
!4991 = !DILocation(line: 820, column: 41, scope: !2332, inlinedAt: !4992)
!4992 = distinct !DILocation(line: 1910, column: 25, scope: !4988)
!4993 = !DILocation(line: 820, column: 62, scope: !2332, inlinedAt: !4992)
!4994 = !DILocation(line: 821, column: 9, scope: !2332, inlinedAt: !4992)
!4995 = !DILocation(line: 823, column: 10, scope: !2343, inlinedAt: !4992)
!4996 = !DILocation(line: 0, scope: !2342, inlinedAt: !4992)
!4997 = !DILocation(line: 823, column: 19, scope: !2342, inlinedAt: !4992)
!4998 = !DILocation(line: 823, column: 5, scope: !2343, inlinedAt: !4992)
!4999 = !DILocation(line: 824, column: 21, scope: !2340, inlinedAt: !4992)
!5000 = !DILocation(line: 824, column: 13, scope: !2340, inlinedAt: !4992)
!5001 = !DILocation(line: 824, column: 31, scope: !2340, inlinedAt: !4992)
!5002 = !DILocation(line: 824, column: 13, scope: !2341, inlinedAt: !4992)
!5003 = !DILocation(line: 825, column: 23, scope: !2338, inlinedAt: !4992)
!5004 = !DILocation(line: 825, column: 17, scope: !2339, inlinedAt: !4992)
!5005 = !DILocation(line: 826, column: 64, scope: !2337, inlinedAt: !4992)
!5006 = !DILocation(line: 826, column: 21, scope: !2337, inlinedAt: !4992)
!5007 = !DILocation(line: 827, column: 25, scope: !2337, inlinedAt: !4992)
!5008 = !DILocation(line: 827, column: 56, scope: !2337, inlinedAt: !4992)
!5009 = !DILocation(line: 827, column: 42, scope: !2337, inlinedAt: !4992)
!5010 = !DILocation(line: 828, column: 52, scope: !2337, inlinedAt: !4992)
!5011 = !DILocation(line: 828, column: 50, scope: !2337, inlinedAt: !4992)
!5012 = !DILocation(line: 827, column: 17, scope: !2337, inlinedAt: !4992)
!5013 = !DILocation(line: 830, column: 30, scope: !2339, inlinedAt: !4992)
!5014 = !DILocation(line: 829, column: 13, scope: !2337, inlinedAt: !4992)
!5015 = !DILocation(line: 831, column: 35, scope: !2373, inlinedAt: !4992)
!5016 = !DILocation(line: 831, column: 17, scope: !2339, inlinedAt: !4992)
!5017 = !DILocation(line: 832, column: 25, scope: !2373, inlinedAt: !4992)
!5018 = !DILocation(line: 832, column: 31, scope: !2373, inlinedAt: !4992)
!5019 = !DILocation(line: 832, column: 17, scope: !2373, inlinedAt: !4992)
!5020 = !DILocation(line: 839, column: 38, scope: !1014, inlinedAt: !5021)
!5021 = distinct !DILocation(line: 1911, column: 21, scope: !4989)
!5022 = !DILocation(line: 839, column: 59, scope: !1014, inlinedAt: !5021)
!5023 = !DILocation(line: 840, column: 9, scope: !1014, inlinedAt: !5021)
!5024 = !DILocation(line: 843, column: 29, scope: !1025, inlinedAt: !5021)
!5025 = !DILocation(line: 843, column: 19, scope: !1025, inlinedAt: !5021)
!5026 = !DILocation(line: 0, scope: !1014, inlinedAt: !5021)
!5027 = !DILocation(line: 843, column: 5, scope: !1026, inlinedAt: !5021)
!5028 = !DILocation(line: 844, column: 13, scope: !1033, inlinedAt: !5021)
!5029 = !DILocation(line: 844, column: 31, scope: !1033, inlinedAt: !5021)
!5030 = !DILocation(line: 843, column: 41, scope: !1025, inlinedAt: !5021)
!5031 = !DILocation(line: 844, column: 13, scope: !1025, inlinedAt: !5021)
!5032 = !DILocation(line: 845, column: 31, scope: !1014, inlinedAt: !5021)
!5033 = !DILocation(line: 846, column: 48, scope: !1014, inlinedAt: !5021)
!5034 = !DILocation(line: 846, column: 30, scope: !1014, inlinedAt: !5021)
!5035 = !DILocation(line: 846, column: 29, scope: !1014, inlinedAt: !5021)
!5036 = !DILocation(line: 845, column: 22, scope: !1014, inlinedAt: !5021)
!5037 = !DILocation(line: 845, column: 20, scope: !1014, inlinedAt: !5021)
!5038 = !DILocation(line: 847, column: 28, scope: !1014, inlinedAt: !5021)
!5039 = !DILocation(line: 847, column: 5, scope: !1014, inlinedAt: !5021)
!5040 = !DILocation(line: 847, column: 39, scope: !1014, inlinedAt: !5021)
!5041 = !DILocation(line: 848, column: 22, scope: !1014, inlinedAt: !5021)
!5042 = !DILocation(line: 849, column: 13, scope: !1014, inlinedAt: !5021)
!5043 = !DILocation(line: 849, column: 19, scope: !1014, inlinedAt: !5021)
!5044 = !DILocation(line: 850, column: 5, scope: !1014, inlinedAt: !5021)
!5045 = !DILocation(line: 1912, column: 37, scope: !4989)
!5046 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !5047)
!5047 = distinct !DILocation(line: 1915, column: 21, scope: !4989)
!5048 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !5047)
!5049 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !5047)
!5050 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !5047)
!5051 = !DILocation(line: 1916, column: 17, scope: !4989)
!5052 = !DILocation(line: 1929, column: 22, scope: !4417)
!5053 = !DILocation(line: 1930, column: 13, scope: !4417)
!5054 = !DILocation(line: 1933, column: 69, scope: !4883)
!5055 = !DILocation(line: 1934, column: 17, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 1934, column: 17)
!5057 = !DILocation(line: 1934, column: 17, scope: !4883)
!5058 = !DILocation(line: 1935, column: 38, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 1934, column: 32)
!5060 = !DILocation(line: 1936, column: 25, scope: !5059)
!5061 = !DILocation(line: 1935, column: 31, scope: !5059)
!5062 = !DILocation(line: 1936, column: 60, scope: !5059)
!5063 = !DILocation(line: 1943, column: 23, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1943, column: 13)
!5065 = !DILocation(line: 1943, column: 44, scope: !5064)
!5066 = !DILocation(line: 1944, column: 67, scope: !5064)
!5067 = !DILocation(line: 1944, column: 13, scope: !5064)
!5068 = !DILocation(line: 1964, column: 20, scope: !4428)
!5069 = !DILocation(line: 1965, column: 17, scope: !4427)
!5070 = !DILocation(line: 1967, column: 13, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 1967, column: 13)
!5072 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !5073)
!5073 = distinct !DILocation(line: 1968, column: 21, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 1968, column: 21)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 1967, column: 49)
!5076 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 1967, column: 13)
!5077 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !5073)
!5078 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !5073)
!5079 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !5073)
!5080 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !5073)
!5081 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !5073)
!5082 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !5073)
!5083 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !5073)
!5084 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !5073)
!5085 = !DILocation(line: 1968, column: 21, scope: !5075)
!5086 = !DILocation(line: 1969, column: 25, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1969, column: 25)
!5088 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 1968, column: 52)
!5089 = !DILocation(line: 1969, column: 50, scope: !5087)
!5090 = !DILocation(line: 1970, column: 50, scope: !5087)
!5091 = !DILocation(line: 1969, column: 60, scope: !5087)
!5092 = !DILocation(line: 1971, column: 51, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1971, column: 25)
!5094 = !DILocation(line: 1971, column: 63, scope: !5093)
!5095 = !DILocation(line: 1971, column: 25, scope: !5088)
!5096 = !DILocation(line: 1977, column: 33, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 1973, column: 21)
!5098 = !DILocation(line: 1977, column: 47, scope: !5097)
!5099 = !DILocation(line: 1974, column: 25, scope: !5097)
!5100 = !DILocation(line: 1978, column: 51, scope: !5097)
!5101 = !DILocation(line: 1979, column: 36, scope: !5097)
!5102 = !DILocation(line: 1979, column: 29, scope: !5097)
!5103 = !DILocation(line: 1978, column: 25, scope: !5097)
!5104 = !DILocation(line: 1984, column: 25, scope: !5097)
!5105 = !DILocation(line: 1967, column: 45, scope: !5076)
!5106 = !DILocation(line: 1967, column: 27, scope: !5076)
!5107 = distinct !{!5107, !5070, !5108}
!5108 = !DILocation(line: 1987, column: 13, scope: !5071)
!5109 = !DILocation(line: 1993, column: 13, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1992, column: 13)
!5111 = !DILocation(line: 1993, column: 34, scope: !5110)
!5112 = !DILocation(line: 1993, column: 37, scope: !5110)
!5113 = !DILocation(line: 1993, column: 58, scope: !5110)
!5114 = !DILocation(line: 1994, column: 42, scope: !5110)
!5115 = !DILocation(line: 1994, column: 31, scope: !5110)
!5116 = !DILocation(line: 1992, column: 13, scope: !4417)
!5117 = !DILocation(line: 1996, column: 13, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1995, column: 9)
!5119 = !DILocation(line: 1997, column: 9, scope: !5118)
!5120 = !DILocation(line: 2000, column: 21, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 2000, column: 13)
!5122 = !DILocation(line: 0, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 2018, column: 16)
!5124 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 2004, column: 13)
!5125 = !DILocation(line: 2004, column: 13, scope: !4430)
!5126 = !DILocation(line: 2005, column: 41, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 2004, column: 21)
!5128 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !5129)
!5129 = distinct !DILocation(line: 2005, column: 23, scope: !5127)
!5130 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !5129)
!5131 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !5129)
!5132 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !5129)
!5133 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !5129)
!5134 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !5129)
!5135 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !5129)
!5136 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !5129)
!5137 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !5129)
!5138 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !5129)
!5139 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !5129)
!5140 = !DILocation(line: 2002, column: 22, scope: !4430)
!5141 = !DILocation(line: 2006, column: 17, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 2006, column: 17)
!5143 = !DILocation(line: 2006, column: 25, scope: !5142)
!5144 = !DILocation(line: 2007, column: 28, scope: !5142)
!5145 = !DILocation(line: 2007, column: 34, scope: !5142)
!5146 = !DILocation(line: 2006, column: 17, scope: !5127)
!5147 = !DILocation(line: 2009, column: 17, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 2008, column: 13)
!5149 = !DILocation(line: 2012, column: 32, scope: !5148)
!5150 = !DILocation(line: 2013, column: 38, scope: !5148)
!5151 = !DILocation(line: 2013, column: 26, scope: !5148)
!5152 = !DILocation(line: 2013, column: 36, scope: !5148)
!5153 = !DILocation(line: 2014, column: 32, scope: !5148)
!5154 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !5155)
!5155 = distinct !DILocation(line: 2015, column: 17, scope: !5148)
!5156 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !5155)
!5157 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !5155)
!5158 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !5155)
!5159 = !DILocation(line: 2017, column: 13, scope: !5148)
!5160 = !DILocation(line: 2019, column: 13, scope: !5123)
!5161 = !DILocation(line: 2029, column: 13, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 2029, column: 13)
!5163 = !{!785, !758, i64 2904}
!5164 = !{!5165, !729, i64 24}
!5165 = !{!"dictht", !758, i64 0, !729, i64 8, !729, i64 16, !729, i64 24}
!5166 = !DILocation(line: 2029, column: 46, scope: !5162)
!5167 = !DILocation(line: 2030, column: 12, scope: !5162)
!5168 = !{!785, !758, i64 2912}
!5169 = !DILocation(line: 2029, column: 13, scope: !4433)
!5170 = !DILocation(line: 2032, column: 27, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 2031, column: 9)
!5172 = !DILocation(line: 2025, column: 18, scope: !4433)
!5173 = !DILocation(line: 2033, column: 27, scope: !5171)
!5174 = !DILocation(line: 2025, column: 31, scope: !4433)
!5175 = !DILocation(line: 2035, column: 32, scope: !5171)
!5176 = !DILocation(line: 2035, column: 64, scope: !5171)
!5177 = !DILocation(line: 2034, column: 23, scope: !5171)
!5178 = !DILocation(line: 2024, column: 15, scope: !4433)
!5179 = !DILocation(line: 2037, column: 63, scope: !5171)
!5180 = !DILocation(line: 2038, column: 25, scope: !5171)
!5181 = !DILocation(line: 2036, column: 23, scope: !5171)
!5182 = !DILocation(line: 2024, column: 25, scope: !4433)
!5183 = !DILocation(line: 2039, column: 13, scope: !5171)
!5184 = !DILocation(line: 2040, column: 13, scope: !5171)
!5185 = !DILocation(line: 2041, column: 13, scope: !5171)
!5186 = !DILocation(line: 2042, column: 9, scope: !5171)
!5187 = !DILocation(line: 2044, column: 13, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 2043, column: 63)
!5189 = !DILocation(line: 2045, column: 9, scope: !5188)
!5190 = !DILocation(line: 2046, column: 5, scope: !5188)
!5191 = !DILocation(line: 2047, column: 13, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 2046, column: 59)
!5193 = !DILocation(line: 2051, column: 13, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 2051, column: 13)
!5195 = !DILocation(line: 2051, column: 34, scope: !5194)
!5196 = !DILocation(line: 2051, column: 45, scope: !5194)
!5197 = !DILocation(line: 2051, column: 54, scope: !5194)
!5198 = !DILocation(line: 2051, column: 58, scope: !5194)
!5199 = !DILocation(line: 2052, column: 42, scope: !5194)
!5200 = !DILocation(line: 2052, column: 51, scope: !5194)
!5201 = !DILocation(line: 2052, column: 32, scope: !5194)
!5202 = !DILocation(line: 2051, column: 13, scope: !5192)
!5203 = !DILocation(line: 2054, column: 29, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 2053, column: 9)
!5205 = !DILocation(line: 2054, column: 48, scope: !5204)
!5206 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !5207)
!5207 = distinct !DILocation(line: 2057, column: 13, scope: !5204)
!5208 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !5207)
!5209 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !5207)
!5210 = !DILocation(line: 2058, column: 9, scope: !5204)
!5211 = !DILocation(line: 2062, column: 21, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 2062, column: 13)
!5213 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 2059, column: 49)
!5214 = !DILocation(line: 2062, column: 32, scope: !5212)
!5215 = !DILocation(line: 2062, column: 43, scope: !5212)
!5216 = !DILocation(line: 2062, column: 40, scope: !5212)
!5217 = !DILocation(line: 2062, column: 13, scope: !5213)
!5218 = !DILocation(line: 3265, column: 16, scope: !2126, inlinedAt: !5219)
!5219 = distinct !DILocation(line: 2065, column: 9, scope: !5213)
!5220 = !DILocation(line: 3265, column: 25, scope: !2126, inlinedAt: !5219)
!5221 = !DILocation(line: 3265, column: 9, scope: !2126, inlinedAt: !5219)
!5222 = !DILocation(line: 3265, column: 32, scope: !2126, inlinedAt: !5219)
!5223 = !DILocation(line: 3265, column: 35, scope: !2126, inlinedAt: !5219)
!5224 = !DILocation(line: 3265, column: 9, scope: !1947, inlinedAt: !5219)
!5225 = !DILocation(line: 3266, column: 39, scope: !2133, inlinedAt: !5219)
!5226 = !DILocation(line: 3267, column: 9, scope: !2133, inlinedAt: !5219)
!5227 = !DILocation(line: 3268, column: 5, scope: !2133, inlinedAt: !5219)
!5228 = !DILocation(line: 3269, column: 12, scope: !1947, inlinedAt: !5219)
!5229 = !DILocation(line: 3269, column: 21, scope: !1947, inlinedAt: !5219)
!5230 = !DILocation(line: 3269, column: 28, scope: !1947, inlinedAt: !5219)
!5231 = !DILocation(line: 3270, column: 21, scope: !1947, inlinedAt: !5219)
!5232 = !DILocation(line: 3270, column: 34, scope: !1947, inlinedAt: !5219)
!5233 = !DILocation(line: 3271, column: 21, scope: !1947, inlinedAt: !5219)
!5234 = !DILocation(line: 3271, column: 30, scope: !1947, inlinedAt: !5219)
!5235 = !DILocation(line: 3272, column: 21, scope: !1947, inlinedAt: !5219)
!5236 = !DILocation(line: 3272, column: 38, scope: !1947, inlinedAt: !5219)
!5237 = !DILocation(line: 2066, column: 34, scope: !5213)
!5238 = !DILocation(line: 2066, column: 43, scope: !5213)
!5239 = !DILocation(line: 2066, column: 16, scope: !5213)
!5240 = !DILocation(line: 2066, column: 25, scope: !5213)
!5241 = !DILocation(line: 2066, column: 32, scope: !5213)
!5242 = !DILocation(line: 2067, column: 25, scope: !5213)
!5243 = !DILocation(line: 2067, column: 34, scope: !5213)
!5244 = !DILocation(line: 2068, column: 22, scope: !5213)
!5245 = !DILocation(line: 2068, column: 30, scope: !5213)
!5246 = !DILocation(line: 2068, column: 9, scope: !5213)
!5247 = !DILocation(line: 2070, column: 13, scope: !5213)
!5248 = !DILocation(line: 2069, column: 9, scope: !5213)
!5249 = !DILocation(line: 2071, column: 5, scope: !5213)
!5250 = !DILocation(line: 2074, column: 21, scope: !4448)
!5251 = !DILocation(line: 2073, column: 18, scope: !4448)
!5252 = !DILocation(line: 2076, column: 13, scope: !4448)
!5253 = !DILocation(line: 2077, column: 31, scope: !4448)
!5254 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !5255)
!5255 = distinct !DILocation(line: 2077, column: 13, scope: !4448)
!5256 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !5255)
!5257 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !5255)
!5258 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !5255)
!5259 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !5255)
!5260 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !5255)
!5261 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !5255)
!5262 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !5255)
!5263 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !5255)
!5264 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !5255)
!5265 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !5255)
!5266 = !DILocation(line: 2072, column: 22, scope: !4448)
!5267 = !DILocation(line: 2078, column: 14, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 2078, column: 13)
!5269 = !DILocation(line: 2078, column: 13, scope: !4448)
!5270 = !DILocation(line: 2079, column: 16, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 2079, column: 13)
!5272 = !DILocation(line: 2079, column: 28, scope: !5271)
!5273 = !DILocation(line: 2079, column: 13, scope: !4448)
!5274 = !DILocation(line: 2082, column: 13, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 2082, column: 13)
!5276 = !DILocation(line: 2082, column: 13, scope: !4448)
!5277 = !DILocation(line: 2082, column: 29, scope: !5275)
!5278 = !DILocation(line: 2085, column: 24, scope: !4448)
!5279 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !5280)
!5280 = distinct !DILocation(line: 2086, column: 9, scope: !4448)
!5281 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !5280)
!5282 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !5280)
!5283 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !5280)
!5284 = !DILocation(line: 2092, column: 13, scope: !4448)
!5285 = !DILocation(line: 2091, column: 9, scope: !4448)
!5286 = !DILocation(line: 2094, column: 13, scope: !4455)
!5287 = !DILocation(line: 2097, column: 51, scope: !4455)
!5288 = !DILocation(line: 2097, column: 18, scope: !4455)
!5289 = !DILocation(line: 2098, column: 24, scope: !4455)
!5290 = !DILocation(line: 2098, column: 18, scope: !4455)
!5291 = !DILocation(line: 2099, column: 45, scope: !4455)
!5292 = !DILocation(line: 2099, column: 17, scope: !4455)
!5293 = !DILocation(line: 2100, column: 55, scope: !4455)
!5294 = !DILocation(line: 2100, column: 24, scope: !4455)
!5295 = !DILocation(line: 2101, column: 36, scope: !4455)
!5296 = !DILocation(line: 2101, column: 9, scope: !4455)
!5297 = !DILocation(line: 2102, column: 5, scope: !4455)
!5298 = !DILocation(line: 2103, column: 9, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 2102, column: 12)
!5300 = !DILocation(line: 0, scope: !4748)
!5301 = !DILocation(line: 2106, column: 1, scope: !4375)
!5302 = distinct !DISubprogram(name: "clusterSendPing", scope: !3, file: !3, line: 2351, type: !5303, isLocal: false, isDefinition: true, scopeLine: 2351, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5305)
!5303 = !DISubroutineType(types: !5304)
!5304 = !{null, !179, !177}
!5305 = !{!5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5316, !5318, !5319, !5322, !5323}
!5306 = !DILocalVariable(name: "link", arg: 1, scope: !5302, file: !3, line: 2351, type: !179)
!5307 = !DILocalVariable(name: "type", arg: 2, scope: !5302, file: !3, line: 2351, type: !177)
!5308 = !DILocalVariable(name: "buf", scope: !5302, file: !3, line: 2352, type: !246)
!5309 = !DILocalVariable(name: "hdr", scope: !5302, file: !3, line: 2353, type: !92)
!5310 = !DILocalVariable(name: "gossipcount", scope: !5302, file: !3, line: 2354, type: !177)
!5311 = !DILocalVariable(name: "wanted", scope: !5302, file: !3, line: 2355, type: !177)
!5312 = !DILocalVariable(name: "totlen", scope: !5302, file: !3, line: 2356, type: !177)
!5313 = !DILocalVariable(name: "freshnodes", scope: !5302, file: !3, line: 2361, type: !177)
!5314 = !DILocalVariable(name: "pfail_wanted", scope: !5302, file: !3, line: 2395, type: !177)
!5315 = !DILocalVariable(name: "maxiterations", scope: !5302, file: !3, line: 2414, type: !177)
!5316 = !DILocalVariable(name: "de", scope: !5317, file: !3, line: 2416, type: !340)
!5317 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 2415, column: 70)
!5318 = !DILocalVariable(name: "this", scope: !5317, file: !3, line: 2417, type: !378)
!5319 = !DILocalVariable(name: "di", scope: !5320, file: !3, line: 2449, type: !297)
!5320 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 2448, column: 23)
!5321 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 2448, column: 9)
!5322 = !DILocalVariable(name: "de", scope: !5320, file: !3, line: 2450, type: !340)
!5323 = !DILocalVariable(name: "node", scope: !5324, file: !3, line: 2454, type: !378)
!5324 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 2453, column: 64)
!5325 = !DILocation(line: 2351, column: 35, scope: !5302)
!5326 = !DILocation(line: 2351, column: 45, scope: !5302)
!5327 = !DILocation(line: 2354, column: 9, scope: !5302)
!5328 = !DILocation(line: 2361, column: 22, scope: !5302)
!5329 = !DILocation(line: 2361, column: 9, scope: !5302)
!5330 = !DILocation(line: 2389, column: 51, scope: !5302)
!5331 = !DILocation(line: 2389, column: 20, scope: !5302)
!5332 = !DILocation(line: 2389, column: 14, scope: !5302)
!5333 = !DILocation(line: 2355, column: 9, scope: !5302)
!5334 = !DILocation(line: 2390, column: 9, scope: !5302)
!5335 = !DILocation(line: 2391, column: 16, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 2391, column: 9)
!5337 = !DILocation(line: 2391, column: 9, scope: !5302)
!5338 = !DILocation(line: 2395, column: 31, scope: !5302)
!5339 = !DILocation(line: 2395, column: 40, scope: !5302)
!5340 = !DILocation(line: 2395, column: 24, scope: !5302)
!5341 = !DILocation(line: 2395, column: 9, scope: !5302)
!5342 = !DILocation(line: 2356, column: 9, scope: !5302)
!5343 = !DILocation(line: 2401, column: 52, scope: !5302)
!5344 = !DILocation(line: 2401, column: 44, scope: !5302)
!5345 = !DILocation(line: 2401, column: 12, scope: !5302)
!5346 = !DILocation(line: 2404, column: 9, scope: !5302)
!5347 = !DILocation(line: 2405, column: 19, scope: !5302)
!5348 = !DILocation(line: 2405, column: 11, scope: !5302)
!5349 = !DILocation(line: 2352, column: 20, scope: !5302)
!5350 = !DILocation(line: 2406, column: 11, scope: !5302)
!5351 = !DILocation(line: 2353, column: 17, scope: !5302)
!5352 = !DILocation(line: 2409, column: 15, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 2409, column: 9)
!5354 = !DILocation(line: 2409, column: 9, scope: !5353)
!5355 = !DILocation(line: 2409, column: 28, scope: !5353)
!5356 = !DILocation(line: 2409, column: 20, scope: !5353)
!5357 = !DILocation(line: 2410, column: 33, scope: !5353)
!5358 = !DILocation(line: 2410, column: 15, scope: !5353)
!5359 = !DILocation(line: 2410, column: 21, scope: !5353)
!5360 = !DILocation(line: 2410, column: 31, scope: !5353)
!5361 = !DILocation(line: 2410, column: 9, scope: !5353)
!5362 = !DILocation(line: 2411, column: 5, scope: !5302)
!5363 = !DILocation(line: 2415, column: 22, scope: !5302)
!5364 = !DILocation(line: 2415, column: 41, scope: !5302)
!5365 = !DILocation(line: 2415, column: 26, scope: !5302)
!5366 = !DILocation(line: 2414, column: 31, scope: !5302)
!5367 = !DILocation(line: 2414, column: 9, scope: !5302)
!5368 = !DILocation(line: 2415, column: 66, scope: !5302)
!5369 = !DILocation(line: 2415, column: 50, scope: !5302)
!5370 = !DILocation(line: 2415, column: 5, scope: !5302)
!5371 = !DILocation(line: 2416, column: 49, scope: !5317)
!5372 = !DILocation(line: 2416, column: 58, scope: !5317)
!5373 = !DILocation(line: 2416, column: 25, scope: !5317)
!5374 = !DILocation(line: 2416, column: 20, scope: !5317)
!5375 = !DILocation(line: 2417, column: 29, scope: !5317)
!5376 = !DILocation(line: 2417, column: 22, scope: !5317)
!5377 = !DILocation(line: 2421, column: 21, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 2421, column: 13)
!5379 = !DILocation(line: 2421, column: 18, scope: !5378)
!5380 = !DILocation(line: 2421, column: 13, scope: !5317)
!5381 = distinct !{!5381, !5370, !5382}
!5382 = !DILocation(line: 2445, column: 5, scope: !5302)
!5383 = !DILocation(line: 2424, column: 19, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 2424, column: 13)
!5385 = !DILocation(line: 2424, column: 25, scope: !5384)
!5386 = !DILocation(line: 2424, column: 13, scope: !5317)
!5387 = !DILocation(line: 2431, column: 25, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 2431, column: 13)
!5389 = !DILocation(line: 2431, column: 72, scope: !5388)
!5390 = !DILocation(line: 2432, column: 20, scope: !5388)
!5391 = !DILocation(line: 2432, column: 25, scope: !5388)
!5392 = !DILocation(line: 2432, column: 33, scope: !5388)
!5393 = !DILocation(line: 2432, column: 42, scope: !5388)
!5394 = !DILocation(line: 2432, column: 51, scope: !5388)
!5395 = !DILocation(line: 2431, column: 13, scope: !5317)
!5396 = !DILocation(line: 2434, column: 23, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 2433, column: 9)
!5398 = !DILocation(line: 2435, column: 13, scope: !5397)
!5399 = !DILocalVariable(name: "hdr", arg: 1, scope: !5400, file: !3, line: 2325, type: !92)
!5400 = distinct !DISubprogram(name: "clusterNodeIsInGossipSection", scope: !3, file: !3, line: 2325, type: !5401, isLocal: false, isDefinition: true, scopeLine: 2325, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5403)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{!177, !92, !177, !378}
!5403 = !{!5399, !5404, !5405, !5406}
!5404 = !DILocalVariable(name: "count", arg: 2, scope: !5400, file: !3, line: 2325, type: !177)
!5405 = !DILocalVariable(name: "n", arg: 3, scope: !5400, file: !3, line: 2325, type: !378)
!5406 = !DILocalVariable(name: "j", scope: !5400, file: !3, line: 2326, type: !177)
!5407 = !DILocation(line: 2325, column: 46, scope: !5400, inlinedAt: !5408)
!5408 = distinct !DILocation(line: 2439, column: 13, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 2439, column: 13)
!5410 = !DILocation(line: 2325, column: 55, scope: !5400, inlinedAt: !5408)
!5411 = !DILocation(line: 2325, column: 75, scope: !5400, inlinedAt: !5408)
!5412 = !DILocation(line: 2326, column: 9, scope: !5400, inlinedAt: !5408)
!5413 = !DILocation(line: 2327, column: 19, scope: !5414, inlinedAt: !5408)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 2327, column: 5)
!5415 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 2327, column: 5)
!5416 = !DILocation(line: 2327, column: 5, scope: !5415, inlinedAt: !5408)
!5417 = !DILocation(line: 2328, column: 20, scope: !5418, inlinedAt: !5408)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 2328, column: 13)
!5419 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 2327, column: 33)
!5420 = !DILocation(line: 2328, column: 13, scope: !5418, inlinedAt: !5408)
!5421 = !DILocation(line: 2329, column: 34, scope: !5418, inlinedAt: !5408)
!5422 = !DILocation(line: 2328, column: 13, scope: !5419, inlinedAt: !5408)
!5423 = !DILocation(line: 2327, column: 29, scope: !5414, inlinedAt: !5408)
!5424 = distinct !{!5424, !5425, !5426}
!5425 = !DILocation(line: 2327, column: 5, scope: !5415)
!5426 = !DILocation(line: 2330, column: 5, scope: !5415)
!5427 = !DILocation(line: 2331, column: 14, scope: !5400, inlinedAt: !5408)
!5428 = !DILocation(line: 0, scope: !5414, inlinedAt: !5408)
!5429 = !DILocation(line: 2439, column: 13, scope: !5317)
!5430 = !DILocalVariable(name: "hdr", arg: 1, scope: !5431, file: !3, line: 2336, type: !92)
!5431 = distinct !DISubprogram(name: "clusterSetGossipEntry", scope: !3, file: !3, line: 2336, type: !5432, isLocal: false, isDefinition: true, scopeLine: 2336, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5434)
!5432 = !DISubroutineType(types: !5433)
!5433 = !{null, !92, !177, !378}
!5434 = !{!5430, !5435, !5436, !5437}
!5435 = !DILocalVariable(name: "i", arg: 2, scope: !5431, file: !3, line: 2336, type: !177)
!5436 = !DILocalVariable(name: "n", arg: 3, scope: !5431, file: !3, line: 2336, type: !378)
!5437 = !DILocalVariable(name: "gossip", scope: !5431, file: !3, line: 2337, type: !73)
!5438 = !DILocation(line: 2336, column: 40, scope: !5431, inlinedAt: !5439)
!5439 = distinct !DILocation(line: 2442, column: 9, scope: !5317)
!5440 = !DILocation(line: 2336, column: 49, scope: !5431, inlinedAt: !5439)
!5441 = !DILocation(line: 2336, column: 65, scope: !5431, inlinedAt: !5439)
!5442 = !DILocation(line: 2338, column: 16, scope: !5431, inlinedAt: !5439)
!5443 = !DILocation(line: 2339, column: 12, scope: !5431, inlinedAt: !5439)
!5444 = !DILocation(line: 2339, column: 29, scope: !5431, inlinedAt: !5439)
!5445 = !DILocation(line: 2339, column: 5, scope: !5431, inlinedAt: !5439)
!5446 = !DILocation(line: 2340, column: 25, scope: !5431, inlinedAt: !5439)
!5447 = !DILocation(line: 2340, column: 13, scope: !5431, inlinedAt: !5439)
!5448 = !DILocation(line: 2340, column: 23, scope: !5431, inlinedAt: !5439)
!5449 = !{!3716, !709, i64 40}
!5450 = !DILocation(line: 2341, column: 29, scope: !5431, inlinedAt: !5439)
!5451 = !DILocation(line: 2341, column: 13, scope: !5431, inlinedAt: !5439)
!5452 = !DILocation(line: 2341, column: 27, scope: !5431, inlinedAt: !5439)
!5453 = !DILocation(line: 2342, column: 12, scope: !5431, inlinedAt: !5439)
!5454 = !DILocation(line: 2342, column: 23, scope: !5431, inlinedAt: !5439)
!5455 = !DILocation(line: 2342, column: 5, scope: !5431, inlinedAt: !5439)
!5456 = !DILocation(line: 2343, column: 20, scope: !5431, inlinedAt: !5439)
!5457 = !DILocation(line: 2343, column: 13, scope: !5431, inlinedAt: !5439)
!5458 = !DILocation(line: 2343, column: 18, scope: !5431, inlinedAt: !5439)
!5459 = !DILocation(line: 2344, column: 21, scope: !5431, inlinedAt: !5439)
!5460 = !DILocation(line: 2344, column: 13, scope: !5431, inlinedAt: !5439)
!5461 = !DILocation(line: 2344, column: 19, scope: !5431, inlinedAt: !5439)
!5462 = !DILocation(line: 2345, column: 21, scope: !5431, inlinedAt: !5439)
!5463 = !DILocation(line: 2345, column: 13, scope: !5431, inlinedAt: !5439)
!5464 = !DILocation(line: 2345, column: 19, scope: !5431, inlinedAt: !5439)
!5465 = !DILocation(line: 2346, column: 13, scope: !5431, inlinedAt: !5439)
!5466 = !DILocation(line: 2346, column: 22, scope: !5431, inlinedAt: !5439)
!5467 = !{!3716, !709, i64 100}
!5468 = !DILocation(line: 2443, column: 19, scope: !5317)
!5469 = !DILocation(line: 2444, column: 20, scope: !5317)
!5470 = !DILocation(line: 0, scope: !5317)
!5471 = !DILocation(line: 2448, column: 9, scope: !5321)
!5472 = !DILocation(line: 2448, column: 9, scope: !5302)
!5473 = !DILocation(line: 2452, column: 41, scope: !5320)
!5474 = !DILocation(line: 2452, column: 50, scope: !5320)
!5475 = !DILocation(line: 2452, column: 14, scope: !5320)
!5476 = !DILocation(line: 2449, column: 23, scope: !5320)
!5477 = !DILocation(line: 2453, column: 21, scope: !5320)
!5478 = !DILocation(line: 2450, column: 20, scope: !5320)
!5479 = !DILocation(line: 2453, column: 35, scope: !5320)
!5480 = !DILocation(line: 2453, column: 59, scope: !5320)
!5481 = !DILocation(line: 2453, column: 43, scope: !5320)
!5482 = !DILocation(line: 2453, column: 9, scope: !5320)
!5483 = !DILocation(line: 2454, column: 33, scope: !5324)
!5484 = !DILocation(line: 2454, column: 26, scope: !5324)
!5485 = !DILocation(line: 2455, column: 23, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 2455, column: 17)
!5487 = !DILocation(line: 2455, column: 17, scope: !5324)
!5488 = distinct !{!5488, !5482, !5489}
!5489 = !DILocation(line: 2465, column: 9, scope: !5320)
!5490 = !DILocation(line: 2336, column: 40, scope: !5431, inlinedAt: !5491)
!5491 = distinct !DILocation(line: 2458, column: 13, scope: !5324)
!5492 = !DILocation(line: 2336, column: 49, scope: !5431, inlinedAt: !5491)
!5493 = !DILocation(line: 2336, column: 65, scope: !5431, inlinedAt: !5491)
!5494 = !DILocation(line: 2338, column: 16, scope: !5431, inlinedAt: !5491)
!5495 = !DILocation(line: 2339, column: 12, scope: !5431, inlinedAt: !5491)
!5496 = !DILocation(line: 2339, column: 29, scope: !5431, inlinedAt: !5491)
!5497 = !DILocation(line: 2339, column: 5, scope: !5431, inlinedAt: !5491)
!5498 = !DILocation(line: 2340, column: 25, scope: !5431, inlinedAt: !5491)
!5499 = !DILocation(line: 2340, column: 13, scope: !5431, inlinedAt: !5491)
!5500 = !DILocation(line: 2340, column: 23, scope: !5431, inlinedAt: !5491)
!5501 = !DILocation(line: 2341, column: 29, scope: !5431, inlinedAt: !5491)
!5502 = !DILocation(line: 2341, column: 13, scope: !5431, inlinedAt: !5491)
!5503 = !DILocation(line: 2341, column: 27, scope: !5431, inlinedAt: !5491)
!5504 = !DILocation(line: 2342, column: 12, scope: !5431, inlinedAt: !5491)
!5505 = !DILocation(line: 2342, column: 23, scope: !5431, inlinedAt: !5491)
!5506 = !DILocation(line: 2342, column: 5, scope: !5431, inlinedAt: !5491)
!5507 = !DILocation(line: 2343, column: 20, scope: !5431, inlinedAt: !5491)
!5508 = !DILocation(line: 2343, column: 13, scope: !5431, inlinedAt: !5491)
!5509 = !DILocation(line: 2343, column: 18, scope: !5431, inlinedAt: !5491)
!5510 = !DILocation(line: 2344, column: 21, scope: !5431, inlinedAt: !5491)
!5511 = !DILocation(line: 2344, column: 13, scope: !5431, inlinedAt: !5491)
!5512 = !DILocation(line: 2344, column: 19, scope: !5431, inlinedAt: !5491)
!5513 = !DILocation(line: 2345, column: 21, scope: !5431, inlinedAt: !5491)
!5514 = !DILocation(line: 2345, column: 13, scope: !5431, inlinedAt: !5491)
!5515 = !DILocation(line: 2345, column: 19, scope: !5431, inlinedAt: !5491)
!5516 = !DILocation(line: 2346, column: 13, scope: !5431, inlinedAt: !5491)
!5517 = !DILocation(line: 2346, column: 22, scope: !5431, inlinedAt: !5491)
!5518 = !DILocation(line: 2460, column: 24, scope: !5324)
!5519 = !DILocation(line: 2464, column: 25, scope: !5324)
!5520 = !DILocation(line: 0, scope: !5302)
!5521 = !DILocation(line: 2466, column: 9, scope: !5320)
!5522 = !DILocation(line: 2467, column: 5, scope: !5320)
!5523 = !DILocation(line: 2472, column: 44, scope: !5302)
!5524 = !DILocation(line: 2472, column: 12, scope: !5302)
!5525 = !DILocation(line: 2473, column: 18, scope: !5302)
!5526 = !DILocation(line: 2473, column: 10, scope: !5302)
!5527 = !DILocation(line: 2473, column: 16, scope: !5302)
!5528 = !DILocation(line: 2474, column: 19, scope: !5302)
!5529 = !DILocation(line: 2474, column: 10, scope: !5302)
!5530 = !DILocation(line: 2474, column: 17, scope: !5302)
!5531 = !DILocation(line: 2475, column: 33, scope: !5302)
!5532 = !DILocation(line: 2475, column: 5, scope: !5302)
!5533 = !DILocation(line: 2476, column: 5, scope: !5302)
!5534 = !DILocation(line: 2477, column: 1, scope: !5302)
!5535 = !DILocation(line: 3727, column: 38, scope: !4905)
!5536 = !DILocation(line: 3728, column: 9, scope: !4905)
!5537 = !DILocation(line: 3728, column: 22, scope: !4905)
!5538 = !DILocation(line: 3698, column: 40, scope: !4913, inlinedAt: !5539)
!5539 = distinct !DILocation(line: 3731, column: 13, scope: !4918)
!5540 = !DILocation(line: 3698, column: 47, scope: !4913, inlinedAt: !5539)
!5541 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !5542)
!5542 = distinct !DILocation(line: 3699, column: 12, scope: !4913, inlinedAt: !5539)
!5543 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !5542)
!5544 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !5542)
!5545 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !5542)
!5546 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !5542)
!5547 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !5542)
!5548 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !5542)
!5549 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !5542)
!5550 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !5542)
!5551 = !DILocation(line: 3731, column: 13, scope: !4919)
!5552 = !DILocation(line: 3716, column: 24, scope: !2197, inlinedAt: !5553)
!5553 = distinct !DILocation(line: 3732, column: 13, scope: !4936)
!5554 = !DILocation(line: 3717, column: 29, scope: !2197, inlinedAt: !5553)
!5555 = !DILocation(line: 3717, column: 22, scope: !2197, inlinedAt: !5553)
!5556 = !DILocation(line: 3717, column: 18, scope: !2197, inlinedAt: !5553)
!5557 = !DILocation(line: 3719, column: 10, scope: !2206, inlinedAt: !5553)
!5558 = !DILocation(line: 3719, column: 9, scope: !2197, inlinedAt: !5553)
!5559 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !5560)
!5560 = distinct !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !5553)
!5561 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !5560)
!5562 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !5563)
!5563 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !5560)
!5564 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !5563)
!5565 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !5563)
!5566 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !5563)
!5567 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !5563)
!5568 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !5563)
!5569 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !5563)
!5570 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !5571)
!5571 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !5560)
!5572 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !5571)
!5573 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !5571)
!5574 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !5571)
!5575 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !5571)
!5576 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !5560)
!5577 = !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !5553)
!5578 = !DILocation(line: 3693, column: 17, scope: !2251, inlinedAt: !5560)
!5579 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !5560)
!5580 = !DILocation(line: 3721, column: 12, scope: !2197, inlinedAt: !5553)
!5581 = !DILocation(line: 3721, column: 5, scope: !2197, inlinedAt: !5553)
!5582 = !DILocation(line: 3721, column: 33, scope: !2197, inlinedAt: !5553)
!5583 = !DILocation(line: 3722, column: 5, scope: !2197, inlinedAt: !5553)
!5584 = !DILocation(line: 3733, column: 20, scope: !4936)
!5585 = !DILocation(line: 3734, column: 9, scope: !4936)
!5586 = !DILocation(line: 0, scope: !4905)
!5587 = !DILocation(line: 3730, column: 37, scope: !4920)
!5588 = !DILocation(line: 3730, column: 19, scope: !4920)
!5589 = !DILocation(line: 3736, column: 5, scope: !4905)
!5590 = distinct !DISubprogram(name: "clusterSendUpdate", scope: !3, file: !3, line: 2577, type: !5591, isLocal: false, isDefinition: true, scopeLine: 2577, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5593)
!5591 = !DISubroutineType(types: !5592)
!5592 = !{null, !179, !378}
!5593 = !{!5594, !5595, !5596, !5597}
!5594 = !DILocalVariable(name: "link", arg: 1, scope: !5590, file: !3, line: 2577, type: !179)
!5595 = !DILocalVariable(name: "node", arg: 2, scope: !5590, file: !3, line: 2577, type: !378)
!5596 = !DILocalVariable(name: "buf", scope: !5590, file: !3, line: 2578, type: !3406)
!5597 = !DILocalVariable(name: "hdr", scope: !5590, file: !3, line: 2579, type: !92)
!5598 = !DILocation(line: 2577, column: 37, scope: !5590)
!5599 = !DILocation(line: 2577, column: 56, scope: !5590)
!5600 = !DILocation(line: 2578, column: 5, scope: !5590)
!5601 = !DILocation(line: 2579, column: 17, scope: !5590)
!5602 = !DILocation(line: 2581, column: 14, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 2581, column: 9)
!5604 = !DILocation(line: 2581, column: 9, scope: !5590)
!5605 = !DILocation(line: 2578, column: 19, scope: !5590)
!5606 = !DILocation(line: 2582, column: 5, scope: !5590)
!5607 = !DILocation(line: 2583, column: 12, scope: !5590)
!5608 = !DILocation(line: 2583, column: 46, scope: !5590)
!5609 = !DILocation(line: 2583, column: 5, scope: !5590)
!5610 = !DILocation(line: 2584, column: 44, scope: !5590)
!5611 = !DILocation(line: 2584, column: 30, scope: !5590)
!5612 = !DILocation(line: 2584, column: 42, scope: !5590)
!5613 = !DILocation(line: 2585, column: 12, scope: !5590)
!5614 = !DILocation(line: 2585, column: 43, scope: !5590)
!5615 = !DILocation(line: 2585, column: 5, scope: !5590)
!5616 = !DILocation(line: 2586, column: 33, scope: !5590)
!5617 = !DILocation(line: 2586, column: 5, scope: !5590)
!5618 = !DILocation(line: 2587, column: 1, scope: !5590)
!5619 = distinct !DISubprogram(name: "clusterSendFailoverAuthIfNeeded", scope: !3, file: !3, line: 2707, type: !5620, isLocal: false, isDefinition: true, scopeLine: 2707, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5622)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{null, !378, !92}
!5622 = !{!5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630}
!5623 = !DILocalVariable(name: "node", arg: 1, scope: !5619, file: !3, line: 2707, type: !378)
!5624 = !DILocalVariable(name: "request", arg: 2, scope: !5619, file: !3, line: 2707, type: !92)
!5625 = !DILocalVariable(name: "master", scope: !5619, file: !3, line: 2708, type: !378)
!5626 = !DILocalVariable(name: "requestCurrentEpoch", scope: !5619, file: !3, line: 2709, type: !104)
!5627 = !DILocalVariable(name: "requestConfigEpoch", scope: !5619, file: !3, line: 2710, type: !104)
!5628 = !DILocalVariable(name: "claimed_slots", scope: !5619, file: !3, line: 2711, type: !246)
!5629 = !DILocalVariable(name: "force_ack", scope: !5619, file: !3, line: 2712, type: !177)
!5630 = !DILocalVariable(name: "j", scope: !5619, file: !3, line: 2713, type: !177)
!5631 = !DILocation(line: 2707, column: 51, scope: !5619)
!5632 = !DILocation(line: 2707, column: 69, scope: !5619)
!5633 = !DILocation(line: 2708, column: 33, scope: !5619)
!5634 = !DILocation(line: 2708, column: 18, scope: !5619)
!5635 = !DILocation(line: 2709, column: 36, scope: !5619)
!5636 = !DILocation(line: 2709, column: 14, scope: !5619)
!5637 = !DILocation(line: 2710, column: 35, scope: !5619)
!5638 = !DILocation(line: 2710, column: 14, scope: !5619)
!5639 = !DILocation(line: 2711, column: 20, scope: !5619)
!5640 = !DILocation(line: 2712, column: 21, scope: !5619)
!5641 = !DILocation(line: 2712, column: 40, scope: !5619)
!5642 = !DILocation(line: 2719, column: 9, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 2719, column: 9)
!5644 = !DILocation(line: 2719, column: 29, scope: !5643)
!5645 = !DILocation(line: 2719, column: 40, scope: !5643)
!5646 = !DILocation(line: 2719, column: 49, scope: !5643)
!5647 = !DILocation(line: 2719, column: 9, scope: !5619)
!5648 = !DILocation(line: 2725, column: 38, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 2725, column: 9)
!5650 = !DILocation(line: 2725, column: 47, scope: !5649)
!5651 = !DILocation(line: 2725, column: 29, scope: !5649)
!5652 = !DILocation(line: 2725, column: 9, scope: !5619)
!5653 = !DILocation(line: 2728, column: 13, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 2725, column: 61)
!5655 = !DILocation(line: 2726, column: 9, scope: !5654)
!5656 = !DILocation(line: 2731, column: 9, scope: !5654)
!5657 = !DILocation(line: 2735, column: 25, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 2735, column: 9)
!5659 = !DILocation(line: 2735, column: 39, scope: !5658)
!5660 = !DILocation(line: 2735, column: 9, scope: !5619)
!5661 = !DILocation(line: 2738, column: 17, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 2735, column: 72)
!5663 = !DILocation(line: 2736, column: 9, scope: !5662)
!5664 = !DILocation(line: 2740, column: 9, scope: !5662)
!5665 = !DILocation(line: 2746, column: 9, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 2746, column: 9)
!5667 = !DILocation(line: 2746, column: 38, scope: !5666)
!5668 = !DILocation(line: 2746, column: 28, scope: !5666)
!5669 = !DILocation(line: 2747, column: 11, scope: !5666)
!5670 = !DILocation(line: 2747, column: 34, scope: !5666)
!5671 = !DILocation(line: 2747, column: 30, scope: !5666)
!5672 = !DILocation(line: 2749, column: 13, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 2749, column: 13)
!5674 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 2748, column: 5)
!5675 = !DILocation(line: 2749, column: 13, scope: !5674)
!5676 = !DILocation(line: 2752, column: 21, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 2749, column: 33)
!5678 = !DILocation(line: 2750, column: 13, scope: !5677)
!5679 = !DILocation(line: 2753, column: 9, scope: !5677)
!5680 = !DILocation(line: 2753, column: 20, scope: !5673)
!5681 = !DILocation(line: 2756, column: 21, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 2753, column: 36)
!5683 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 2753, column: 20)
!5684 = !DILocation(line: 2754, column: 13, scope: !5682)
!5685 = !DILocation(line: 2757, column: 9, scope: !5682)
!5686 = !DILocation(line: 2757, column: 21, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 2757, column: 20)
!5688 = !DILocation(line: 2757, column: 20, scope: !5683)
!5689 = !DILocation(line: 2760, column: 21, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 2757, column: 41)
!5691 = !DILocation(line: 2758, column: 13, scope: !5690)
!5692 = !DILocation(line: 2761, column: 9, scope: !5690)
!5693 = !DILocation(line: 2768, column: 9, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 2768, column: 9)
!5695 = !DILocation(line: 2768, column: 26, scope: !5694)
!5696 = !DILocation(line: 2768, column: 35, scope: !5694)
!5697 = !DILocation(line: 2768, column: 18, scope: !5694)
!5698 = !DILocation(line: 2768, column: 55, scope: !5694)
!5699 = !DILocation(line: 2768, column: 76, scope: !5694)
!5700 = !DILocation(line: 2768, column: 46, scope: !5694)
!5701 = !DILocation(line: 2768, column: 9, scope: !5619)
!5702 = !DILocation(line: 2713, column: 9, scope: !5619)
!5703 = !DILocation(line: 2782, column: 5, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 2782, column: 5)
!5705 = !DILocation(line: 2773, column: 17, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 2769, column: 5)
!5707 = !DILocation(line: 2775, column: 31, scope: !5706)
!5708 = !DILocation(line: 2775, column: 48, scope: !5706)
!5709 = !DILocation(line: 2775, column: 57, scope: !5706)
!5710 = !DILocation(line: 2774, column: 61, scope: !5706)
!5711 = !DILocation(line: 2770, column: 9, scope: !5706)
!5712 = !DILocation(line: 2776, column: 9, scope: !5706)
!5713 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !5714)
!5714 = distinct !DILocation(line: 2783, column: 13, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 2783, column: 13)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 2782, column: 41)
!5717 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 2782, column: 5)
!5718 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !5714)
!5719 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !5714)
!5720 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !5714)
!5721 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !5714)
!5722 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !5714)
!5723 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !5714)
!5724 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !5714)
!5725 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !5714)
!5726 = !DILocation(line: 2783, column: 13, scope: !5716)
!5727 = !DILocation(line: 2784, column: 13, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 2784, column: 13)
!5729 = !DILocation(line: 2784, column: 38, scope: !5728)
!5730 = !DILocation(line: 2784, column: 46, scope: !5728)
!5731 = !DILocation(line: 2785, column: 39, scope: !5728)
!5732 = !DILocation(line: 2785, column: 51, scope: !5728)
!5733 = !DILocation(line: 2784, column: 13, scope: !5716)
!5734 = !DILocation(line: 2795, column: 17, scope: !5716)
!5735 = !DILocation(line: 2792, column: 9, scope: !5716)
!5736 = !DILocation(line: 2798, column: 9, scope: !5716)
!5737 = !DILocation(line: 2782, column: 37, scope: !5717)
!5738 = !DILocation(line: 2782, column: 19, scope: !5717)
!5739 = distinct !{!5739, !5703, !5740}
!5740 = !DILocation(line: 2799, column: 5, scope: !5704)
!5741 = !DILocation(line: 2802, column: 53, scope: !5619)
!5742 = !DILocation(line: 2802, column: 21, scope: !5619)
!5743 = !DILocation(line: 2802, column: 35, scope: !5619)
!5744 = !DILocation(line: 2803, column: 33, scope: !5619)
!5745 = !DILocation(line: 2803, column: 11, scope: !5619)
!5746 = !DILocation(line: 2803, column: 20, scope: !5619)
!5747 = !DILocation(line: 2803, column: 31, scope: !5619)
!5748 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !5749)
!5749 = distinct !DILocation(line: 2804, column: 5, scope: !5619)
!5750 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !5749)
!5751 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !5749)
!5752 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !5749)
!5753 = !DILocalVariable(name: "node", arg: 1, scope: !5754, file: !3, line: 2681, type: !378)
!5754 = distinct !DISubprogram(name: "clusterSendFailoverAuth", scope: !3, file: !3, line: 2681, type: !2319, isLocal: false, isDefinition: true, scopeLine: 2681, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5755)
!5755 = !{!5753, !5756, !5757, !5758}
!5756 = !DILocalVariable(name: "buf", scope: !5754, file: !3, line: 2682, type: !3406)
!5757 = !DILocalVariable(name: "hdr", scope: !5754, file: !3, line: 2683, type: !92)
!5758 = !DILocalVariable(name: "totlen", scope: !5754, file: !3, line: 2684, type: !43)
!5759 = !DILocation(line: 2681, column: 43, scope: !5754, inlinedAt: !5760)
!5760 = distinct !DILocation(line: 2805, column: 5, scope: !5619)
!5761 = !DILocation(line: 2682, column: 5, scope: !5754, inlinedAt: !5760)
!5762 = !DILocation(line: 2683, column: 17, scope: !5754, inlinedAt: !5760)
!5763 = !DILocation(line: 2686, column: 16, scope: !5764, inlinedAt: !5760)
!5764 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 2686, column: 9)
!5765 = !DILocation(line: 2686, column: 10, scope: !5764, inlinedAt: !5760)
!5766 = !DILocation(line: 2686, column: 9, scope: !5754, inlinedAt: !5760)
!5767 = !DILocation(line: 2682, column: 19, scope: !5754, inlinedAt: !5760)
!5768 = !DILocation(line: 2687, column: 5, scope: !5754, inlinedAt: !5760)
!5769 = !DILocation(line: 2684, column: 14, scope: !5754, inlinedAt: !5760)
!5770 = !DILocation(line: 2689, column: 19, scope: !5754, inlinedAt: !5760)
!5771 = !DILocation(line: 2689, column: 10, scope: !5754, inlinedAt: !5760)
!5772 = !DILocation(line: 2689, column: 17, scope: !5754, inlinedAt: !5760)
!5773 = !DILocation(line: 2690, column: 30, scope: !5754, inlinedAt: !5760)
!5774 = !DILocation(line: 2690, column: 5, scope: !5754, inlinedAt: !5760)
!5775 = !DILocation(line: 2807, column: 49, scope: !5619)
!5776 = !DILocation(line: 2691, column: 1, scope: !5754, inlinedAt: !5760)
!5777 = !DILocation(line: 2807, column: 9, scope: !5619)
!5778 = !DILocation(line: 2807, column: 58, scope: !5619)
!5779 = !DILocation(line: 2806, column: 5, scope: !5619)
!5780 = !DILocation(line: 2808, column: 1, scope: !5619)
!5781 = !DILocation(line: 2114, column: 37, scope: !2634)
!5782 = !DILocation(line: 603, column: 35, scope: !2530, inlinedAt: !5783)
!5783 = distinct !DILocation(line: 2115, column: 5, scope: !2634)
!5784 = !DILocation(line: 604, column: 15, scope: !2537, inlinedAt: !5783)
!5785 = !DILocation(line: 604, column: 18, scope: !2537, inlinedAt: !5783)
!5786 = !DILocation(line: 604, column: 9, scope: !2530, inlinedAt: !5783)
!5787 = !DILocation(line: 605, column: 34, scope: !2541, inlinedAt: !5783)
!5788 = !DILocation(line: 605, column: 9, scope: !2541, inlinedAt: !5783)
!5789 = !DILocation(line: 606, column: 5, scope: !2541, inlinedAt: !5783)
!5790 = !DILocation(line: 607, column: 19, scope: !2530, inlinedAt: !5783)
!5791 = !DILocation(line: 607, column: 5, scope: !2530, inlinedAt: !5783)
!5792 = !DILocation(line: 608, column: 19, scope: !2530, inlinedAt: !5783)
!5793 = !DILocation(line: 608, column: 5, scope: !2530, inlinedAt: !5783)
!5794 = !DILocation(line: 609, column: 15, scope: !2549, inlinedAt: !5783)
!5795 = !DILocation(line: 609, column: 9, scope: !2549, inlinedAt: !5783)
!5796 = !DILocation(line: 609, column: 9, scope: !2530, inlinedAt: !5783)
!5797 = !DILocation(line: 610, column: 21, scope: !2549, inlinedAt: !5783)
!5798 = !DILocation(line: 610, column: 26, scope: !2549, inlinedAt: !5783)
!5799 = !DILocation(line: 610, column: 9, scope: !2549, inlinedAt: !5783)
!5800 = !DILocation(line: 611, column: 17, scope: !2530, inlinedAt: !5783)
!5801 = !DILocation(line: 611, column: 5, scope: !2530, inlinedAt: !5783)
!5802 = !DILocation(line: 612, column: 11, scope: !2530, inlinedAt: !5783)
!5803 = !DILocation(line: 612, column: 5, scope: !2530, inlinedAt: !5783)
!5804 = !DILocation(line: 2116, column: 1, scope: !2634)
!5805 = distinct !DISubprogram(name: "clusterWriteHandler", scope: !3, file: !3, line: 2121, type: !1984, isLocal: false, isDefinition: true, scopeLine: 2121, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5806)
!5806 = !{!5807, !5808, !5809, !5810, !5811, !5812}
!5807 = !DILocalVariable(name: "el", arg: 1, scope: !5805, file: !3, line: 2121, type: !1986)
!5808 = !DILocalVariable(name: "fd", arg: 2, scope: !5805, file: !3, line: 2121, type: !177)
!5809 = !DILocalVariable(name: "privdata", arg: 3, scope: !5805, file: !3, line: 2121, type: !6)
!5810 = !DILocalVariable(name: "mask", arg: 4, scope: !5805, file: !3, line: 2121, type: !177)
!5811 = !DILocalVariable(name: "link", scope: !5805, file: !3, line: 2122, type: !179)
!5812 = !DILocalVariable(name: "nwritten", scope: !5805, file: !3, line: 2123, type: !14)
!5813 = !DILocation(line: 2121, column: 39, scope: !5805)
!5814 = !DILocation(line: 2121, column: 47, scope: !5805)
!5815 = !DILocation(line: 2121, column: 57, scope: !5805)
!5816 = !DILocation(line: 2121, column: 71, scope: !5805)
!5817 = !DILocation(line: 2122, column: 18, scope: !5805)
!5818 = !DILocation(line: 2127, column: 32, scope: !5805)
!5819 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !5820)
!5820 = distinct !DILocation(line: 2127, column: 40, scope: !5805)
!5821 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !5820)
!5822 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !5820)
!5823 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !5820)
!5824 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !5820)
!5825 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !5820)
!5826 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !5820)
!5827 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !5820)
!5828 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !5820)
!5829 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !5820)
!5830 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !5820)
!5831 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !5820)
!5832 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !5820)
!5833 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !5820)
!5834 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !5820)
!5835 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !5820)
!5836 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !5820)
!5837 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !5820)
!5838 = !DILocation(line: 0, scope: !1486, inlinedAt: !5820)
!5839 = !DILocation(line: 2127, column: 16, scope: !5805)
!5840 = !DILocation(line: 2123, column: 13, scope: !5805)
!5841 = !DILocation(line: 2128, column: 18, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 2128, column: 9)
!5843 = !DILocation(line: 2128, column: 9, scope: !5805)
!5844 = !DILocation(line: 2130, column: 23, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 2128, column: 24)
!5846 = !DILocation(line: 2130, column: 13, scope: !5845)
!5847 = !DILocation(line: 2130, column: 41, scope: !5845)
!5848 = !DILocation(line: 2130, column: 32, scope: !5845)
!5849 = !DILocation(line: 2129, column: 9, scope: !5845)
!5850 = !DILocation(line: 2114, column: 37, scope: !2634, inlinedAt: !5851)
!5851 = distinct !DILocation(line: 2131, column: 9, scope: !5845)
!5852 = !DILocation(line: 603, column: 35, scope: !2530, inlinedAt: !5853)
!5853 = distinct !DILocation(line: 2115, column: 5, scope: !2634, inlinedAt: !5851)
!5854 = !DILocation(line: 604, column: 15, scope: !2537, inlinedAt: !5853)
!5855 = !DILocation(line: 604, column: 18, scope: !2537, inlinedAt: !5853)
!5856 = !DILocation(line: 604, column: 9, scope: !2530, inlinedAt: !5853)
!5857 = !DILocation(line: 605, column: 34, scope: !2541, inlinedAt: !5853)
!5858 = !DILocation(line: 605, column: 9, scope: !2541, inlinedAt: !5853)
!5859 = !DILocation(line: 606, column: 5, scope: !2541, inlinedAt: !5853)
!5860 = !DILocation(line: 607, column: 19, scope: !2530, inlinedAt: !5853)
!5861 = !DILocation(line: 607, column: 5, scope: !2530, inlinedAt: !5853)
!5862 = !DILocation(line: 608, column: 19, scope: !2530, inlinedAt: !5853)
!5863 = !DILocation(line: 608, column: 5, scope: !2530, inlinedAt: !5853)
!5864 = !DILocation(line: 609, column: 15, scope: !2549, inlinedAt: !5853)
!5865 = !DILocation(line: 609, column: 9, scope: !2549, inlinedAt: !5853)
!5866 = !DILocation(line: 609, column: 9, scope: !2530, inlinedAt: !5853)
!5867 = !DILocation(line: 610, column: 21, scope: !2549, inlinedAt: !5853)
!5868 = !DILocation(line: 610, column: 26, scope: !2549, inlinedAt: !5853)
!5869 = !DILocation(line: 610, column: 9, scope: !2549, inlinedAt: !5853)
!5870 = !DILocation(line: 611, column: 17, scope: !2530, inlinedAt: !5853)
!5871 = !DILocation(line: 611, column: 5, scope: !2530, inlinedAt: !5853)
!5872 = !DILocation(line: 612, column: 5, scope: !2530, inlinedAt: !5853)
!5873 = !DILocation(line: 2132, column: 9, scope: !5845)
!5874 = !DILocation(line: 2134, column: 20, scope: !5805)
!5875 = !DILocation(line: 2134, column: 5, scope: !5805)
!5876 = !DILocation(line: 2135, column: 22, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 2135, column: 9)
!5878 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !5879)
!5879 = distinct !DILocation(line: 2135, column: 9, scope: !5877)
!5880 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !5879)
!5881 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !5879)
!5882 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !5879)
!5883 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !5879)
!5884 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !5879)
!5885 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !5879)
!5886 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !5879)
!5887 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !5879)
!5888 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !5879)
!5889 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !5879)
!5890 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !5879)
!5891 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !5879)
!5892 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !5879)
!5893 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !5879)
!5894 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !5879)
!5895 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !5879)
!5896 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !5879)
!5897 = !DILocation(line: 0, scope: !1486, inlinedAt: !5879)
!5898 = !DILocation(line: 2135, column: 30, scope: !5877)
!5899 = !DILocation(line: 2135, column: 9, scope: !5805)
!5900 = !DILocation(line: 2136, column: 34, scope: !5877)
!5901 = !DILocation(line: 2136, column: 44, scope: !5877)
!5902 = !DILocation(line: 2136, column: 9, scope: !5877)
!5903 = !DILocation(line: 2137, column: 1, scope: !5805)
!5904 = distinct !DISubprogram(name: "clusterSendMessage", scope: !3, file: !3, line: 2210, type: !5905, isLocal: false, isDefinition: true, scopeLine: 2210, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5907)
!5905 = !DISubroutineType(types: !5906)
!5906 = !{null, !179, !246, !1455}
!5907 = !{!5908, !5909, !5910, !5911, !5912}
!5908 = !DILocalVariable(name: "link", arg: 1, scope: !5904, file: !3, line: 2210, type: !179)
!5909 = !DILocalVariable(name: "msg", arg: 2, scope: !5904, file: !3, line: 2210, type: !246)
!5910 = !DILocalVariable(name: "msglen", arg: 3, scope: !5904, file: !3, line: 2210, type: !1455)
!5911 = !DILocalVariable(name: "hdr", scope: !5904, file: !3, line: 2218, type: !92)
!5912 = !DILocalVariable(name: "type", scope: !5904, file: !3, line: 2219, type: !33)
!5913 = !DILocation(line: 2210, column: 38, scope: !5904)
!5914 = !DILocation(line: 2210, column: 59, scope: !5904)
!5915 = !DILocation(line: 2210, column: 71, scope: !5904)
!5916 = !DILocation(line: 2211, column: 22, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 2211, column: 9)
!5918 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !5919)
!5919 = distinct !DILocation(line: 2211, column: 9, scope: !5917)
!5920 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !5919)
!5921 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !5919)
!5922 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !5919)
!5923 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !5919)
!5924 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !5919)
!5925 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !5919)
!5926 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !5919)
!5927 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !5919)
!5928 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !5919)
!5929 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !5919)
!5930 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !5919)
!5931 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !5919)
!5932 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !5919)
!5933 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !5919)
!5934 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !5919)
!5935 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !5919)
!5936 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !5919)
!5937 = !DILocation(line: 0, scope: !1486, inlinedAt: !5919)
!5938 = !DILocation(line: 2211, column: 30, scope: !5917)
!5939 = !DILocation(line: 2211, column: 45, scope: !5917)
!5940 = !DILocation(line: 2211, column: 35, scope: !5917)
!5941 = !DILocation(line: 2212, column: 34, scope: !5917)
!5942 = !DILocation(line: 2212, column: 43, scope: !5917)
!5943 = !DILocation(line: 2213, column: 41, scope: !5917)
!5944 = !DILocation(line: 2212, column: 9, scope: !5917)
!5945 = !DILocation(line: 2215, column: 36, scope: !5904)
!5946 = !DILocation(line: 2215, column: 20, scope: !5904)
!5947 = !DILocation(line: 2215, column: 18, scope: !5904)
!5948 = !DILocation(line: 2218, column: 17, scope: !5904)
!5949 = !DILocation(line: 2219, column: 21, scope: !5904)
!5950 = !DILocation(line: 2219, column: 14, scope: !5904)
!5951 = !DILocation(line: 2220, column: 14, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 2220, column: 9)
!5953 = !DILocation(line: 2220, column: 9, scope: !5904)
!5954 = !DILocation(line: 2221, column: 16, scope: !5952)
!5955 = !DILocation(line: 2221, column: 9, scope: !5952)
!5956 = !DILocation(line: 2221, column: 54, scope: !5952)
!5957 = !DILocation(line: 2222, column: 1, scope: !5904)
!5958 = !DILocation(line: 2230, column: 36, scope: !3418)
!5959 = !DILocation(line: 2230, column: 48, scope: !3418)
!5960 = !DILocation(line: 2234, column: 37, scope: !3418)
!5961 = !DILocation(line: 2234, column: 46, scope: !3418)
!5962 = !DILocation(line: 2234, column: 10, scope: !3418)
!5963 = !DILocation(line: 2231, column: 19, scope: !3418)
!5964 = !DILocation(line: 2235, column: 17, scope: !3418)
!5965 = !DILocation(line: 2232, column: 16, scope: !3418)
!5966 = !DILocation(line: 2235, column: 31, scope: !3418)
!5967 = !DILocation(line: 2236, column: 29, scope: !3426)
!5968 = !DILocation(line: 2236, column: 22, scope: !3426)
!5969 = !DILocation(line: 2238, column: 20, scope: !3441)
!5970 = !DILocation(line: 2238, column: 14, scope: !3441)
!5971 = !DILocation(line: 2238, column: 13, scope: !3426)
!5972 = !DILocation(line: 2239, column: 19, scope: !3448)
!5973 = !DILocation(line: 2239, column: 25, scope: !3448)
!5974 = !DILocation(line: 2239, column: 13, scope: !3426)
!5975 = !DILocation(line: 2241, column: 9, scope: !3426)
!5976 = !DILocation(line: 2243, column: 5, scope: !3418)
!5977 = !DILocation(line: 2244, column: 1, scope: !3418)
!5978 = distinct !DISubprogram(name: "clusterBuildMessageHdr", scope: !3, file: !3, line: 2248, type: !5979, isLocal: false, isDefinition: true, scopeLine: 2248, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5981)
!5979 = !DISubroutineType(types: !5980)
!5980 = !{null, !92, !177}
!5981 = !{!5982, !5983, !5984, !5985, !5986, !5987, !5988}
!5982 = !DILocalVariable(name: "hdr", arg: 1, scope: !5978, file: !3, line: 2248, type: !92)
!5983 = !DILocalVariable(name: "type", arg: 2, scope: !5978, file: !3, line: 2248, type: !177)
!5984 = !DILocalVariable(name: "totlen", scope: !5978, file: !3, line: 2249, type: !177)
!5985 = !DILocalVariable(name: "offset", scope: !5978, file: !3, line: 2250, type: !104)
!5986 = !DILocalVariable(name: "master", scope: !5978, file: !3, line: 2251, type: !378)
!5987 = !DILocalVariable(name: "announced_port", scope: !5978, file: !3, line: 2279, type: !177)
!5988 = !DILocalVariable(name: "announced_cport", scope: !5978, file: !3, line: 2281, type: !177)
!5989 = !DILocation(line: 2248, column: 41, scope: !5978)
!5990 = !DILocation(line: 2248, column: 50, scope: !5978)
!5991 = !DILocation(line: 2249, column: 9, scope: !5978)
!5992 = !DILocation(line: 2257, column: 15, scope: !5978)
!5993 = !DILocation(line: 2257, column: 35, scope: !5978)
!5994 = !DILocation(line: 2257, column: 46, scope: !5978)
!5995 = !DILocation(line: 2257, column: 38, scope: !5978)
!5996 = !DILocation(line: 2257, column: 14, scope: !5978)
!5997 = !DILocation(line: 2251, column: 18, scope: !5978)
!5998 = !DILocation(line: 2260, column: 12, scope: !5978)
!5999 = !DILocation(line: 2260, column: 5, scope: !5978)
!6000 = !DILocation(line: 2261, column: 16, scope: !5978)
!6001 = !DILocation(line: 2261, column: 10, scope: !5978)
!6002 = !DILocation(line: 2261, column: 14, scope: !5978)
!6003 = !DILocation(line: 2262, column: 17, scope: !5978)
!6004 = !DILocation(line: 2263, column: 5, scope: !5978)
!6005 = !DILocation(line: 2263, column: 17, scope: !5978)
!6006 = !DILocation(line: 2264, column: 5, scope: !5978)
!6007 = !DILocation(line: 2264, column: 17, scope: !5978)
!6008 = !DILocation(line: 2265, column: 5, scope: !5978)
!6009 = !DILocation(line: 2265, column: 17, scope: !5978)
!6010 = !DILocation(line: 2266, column: 17, scope: !5978)
!6011 = !DILocation(line: 2266, column: 10, scope: !5978)
!6012 = !DILocation(line: 2266, column: 15, scope: !5978)
!6013 = !DILocation(line: 2267, column: 12, scope: !5978)
!6014 = !DILocation(line: 2267, column: 24, scope: !5978)
!6015 = !DILocation(line: 2267, column: 5, scope: !5978)
!6016 = !DILocation(line: 2272, column: 12, scope: !5978)
!6017 = !DILocation(line: 2272, column: 5, scope: !5978)
!6018 = !DILocation(line: 2273, column: 16, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 2273, column: 9)
!6020 = !DILocation(line: 2273, column: 9, scope: !6019)
!6021 = !DILocation(line: 2273, column: 9, scope: !5978)
!6022 = !DILocation(line: 2274, column: 9, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 2273, column: 37)
!6024 = !DILocation(line: 2275, column: 9, scope: !6023)
!6025 = !DILocation(line: 2275, column: 37, scope: !6023)
!6026 = !DILocation(line: 2276, column: 5, scope: !6023)
!6027 = !DILocation(line: 2279, column: 33, scope: !5978)
!6028 = !DILocation(line: 2279, column: 26, scope: !5978)
!6029 = !DILocation(line: 2280, column: 64, scope: !5978)
!6030 = !DILocation(line: 2279, column: 9, scope: !5978)
!6031 = !DILocation(line: 2281, column: 34, scope: !5978)
!6032 = !DILocation(line: 2281, column: 27, scope: !5978)
!6033 = !DILocation(line: 2283, column: 40, scope: !5978)
!6034 = !DILocation(line: 2281, column: 9, scope: !5978)
!6035 = !DILocation(line: 2285, column: 12, scope: !5978)
!6036 = !DILocation(line: 2285, column: 25, scope: !5978)
!6037 = !DILocation(line: 2285, column: 5, scope: !5978)
!6038 = !DILocation(line: 2286, column: 12, scope: !5978)
!6039 = !DILocation(line: 2286, column: 5, scope: !5978)
!6040 = !DILocation(line: 2287, column: 9, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 2287, column: 9)
!6042 = !DILocation(line: 2287, column: 17, scope: !6041)
!6043 = !DILocation(line: 2287, column: 25, scope: !6041)
!6044 = !DILocation(line: 2287, column: 9, scope: !5978)
!6045 = !DILocation(line: 2288, column: 29, scope: !6041)
!6046 = !DILocation(line: 2288, column: 9, scope: !6041)
!6047 = !DILocation(line: 2289, column: 17, scope: !5978)
!6048 = !DILocation(line: 2289, column: 10, scope: !5978)
!6049 = !DILocation(line: 2289, column: 15, scope: !5978)
!6050 = !DILocation(line: 2290, column: 18, scope: !5978)
!6051 = !DILocation(line: 2290, column: 10, scope: !5978)
!6052 = !DILocation(line: 2290, column: 16, scope: !5978)
!6053 = !DILocation(line: 2291, column: 18, scope: !5978)
!6054 = !DILocation(line: 2291, column: 10, scope: !5978)
!6055 = !DILocation(line: 2291, column: 16, scope: !5978)
!6056 = !DILocation(line: 2292, column: 25, scope: !5978)
!6057 = !DILocation(line: 2292, column: 34, scope: !5978)
!6058 = !DILocation(line: 2292, column: 18, scope: !5978)
!6059 = !DILocation(line: 2292, column: 10, scope: !5978)
!6060 = !DILocation(line: 2292, column: 16, scope: !5978)
!6061 = !{!2628, !710, i64 2252}
!6062 = !DILocation(line: 2295, column: 25, scope: !5978)
!6063 = !DILocation(line: 2295, column: 10, scope: !5978)
!6064 = !DILocation(line: 2295, column: 23, scope: !5978)
!6065 = !DILocation(line: 2296, column: 24, scope: !5978)
!6066 = !DILocation(line: 2296, column: 10, scope: !5978)
!6067 = !DILocation(line: 2296, column: 22, scope: !5978)
!6068 = !DILocation(line: 2299, column: 9, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 2299, column: 9)
!6070 = !DILocation(line: 2299, column: 9, scope: !5978)
!6071 = !DILocation(line: 2300, column: 18, scope: !6069)
!6072 = !DILocation(line: 2250, column: 14, scope: !5978)
!6073 = !DILocation(line: 2300, column: 9, scope: !6069)
!6074 = !DILocation(line: 2302, column: 25, scope: !6069)
!6075 = !{!785, !786, i64 2352}
!6076 = !DILocation(line: 0, scope: !6069)
!6077 = !DILocation(line: 2303, column: 19, scope: !5978)
!6078 = !DILocation(line: 2303, column: 10, scope: !5978)
!6079 = !DILocation(line: 2303, column: 17, scope: !5978)
!6080 = !DILocation(line: 2306, column: 9, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 2306, column: 9)
!6082 = !DILocation(line: 2306, column: 30, scope: !6081)
!6083 = !DILocation(line: 2306, column: 40, scope: !6081)
!6084 = !DILocation(line: 2306, column: 49, scope: !6081)
!6085 = !DILocation(line: 2306, column: 33, scope: !6081)
!6086 = !DILocation(line: 2306, column: 9, scope: !5978)
!6087 = !DILocation(line: 2307, column: 9, scope: !6081)
!6088 = !DILocation(line: 2307, column: 24, scope: !6081)
!6089 = !DILocation(line: 2311, column: 9, scope: !5978)
!6090 = !DILocation(line: 2318, column: 19, scope: !5978)
!6091 = !DILocation(line: 2318, column: 10, scope: !5978)
!6092 = !DILocation(line: 2318, column: 17, scope: !5978)
!6093 = !DILocation(line: 2320, column: 1, scope: !5978)
!6094 = !DILocation(line: 2325, column: 46, scope: !5400)
!6095 = !DILocation(line: 2325, column: 55, scope: !5400)
!6096 = !DILocation(line: 2325, column: 75, scope: !5400)
!6097 = !DILocation(line: 2326, column: 9, scope: !5400)
!6098 = !DILocation(line: 2328, column: 25, scope: !5418)
!6099 = !DILocation(line: 2328, column: 35, scope: !5418)
!6100 = !DILocation(line: 2327, column: 19, scope: !5414)
!6101 = !DILocation(line: 2328, column: 20, scope: !5418)
!6102 = !DILocation(line: 2328, column: 13, scope: !5418)
!6103 = !DILocation(line: 2329, column: 34, scope: !5418)
!6104 = !DILocation(line: 2328, column: 13, scope: !5419)
!6105 = !DILocation(line: 2327, column: 29, scope: !5414)
!6106 = !DILocation(line: 2331, column: 14, scope: !5400)
!6107 = !DILocation(line: 0, scope: !5414)
!6108 = !DILocation(line: 2331, column: 5, scope: !5400)
!6109 = !DILocation(line: 2336, column: 40, scope: !5431)
!6110 = !DILocation(line: 2336, column: 49, scope: !5431)
!6111 = !DILocation(line: 2336, column: 65, scope: !5431)
!6112 = !DILocation(line: 2338, column: 21, scope: !5431)
!6113 = !DILocation(line: 2338, column: 31, scope: !5431)
!6114 = !DILocation(line: 2338, column: 16, scope: !5431)
!6115 = !DILocation(line: 2339, column: 12, scope: !5431)
!6116 = !DILocation(line: 2339, column: 29, scope: !5431)
!6117 = !DILocation(line: 2339, column: 5, scope: !5431)
!6118 = !DILocation(line: 2340, column: 25, scope: !5431)
!6119 = !DILocation(line: 2340, column: 13, scope: !5431)
!6120 = !DILocation(line: 2340, column: 23, scope: !5431)
!6121 = !DILocation(line: 2341, column: 29, scope: !5431)
!6122 = !DILocation(line: 2341, column: 13, scope: !5431)
!6123 = !DILocation(line: 2341, column: 27, scope: !5431)
!6124 = !DILocation(line: 2342, column: 12, scope: !5431)
!6125 = !DILocation(line: 2342, column: 23, scope: !5431)
!6126 = !DILocation(line: 2342, column: 5, scope: !5431)
!6127 = !DILocation(line: 2343, column: 20, scope: !5431)
!6128 = !DILocation(line: 2343, column: 13, scope: !5431)
!6129 = !DILocation(line: 2343, column: 18, scope: !5431)
!6130 = !DILocation(line: 2344, column: 21, scope: !5431)
!6131 = !DILocation(line: 2344, column: 13, scope: !5431)
!6132 = !DILocation(line: 2344, column: 19, scope: !5431)
!6133 = !DILocation(line: 2345, column: 21, scope: !5431)
!6134 = !DILocation(line: 2345, column: 13, scope: !5431)
!6135 = !DILocation(line: 2345, column: 19, scope: !5431)
!6136 = !DILocation(line: 2346, column: 13, scope: !5431)
!6137 = !DILocation(line: 2346, column: 22, scope: !5431)
!6138 = !DILocation(line: 2347, column: 1, scope: !5431)
!6139 = distinct !DISubprogram(name: "clusterBroadcastPong", scope: !3, file: !3, line: 2495, type: !282, isLocal: false, isDefinition: true, scopeLine: 2495, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6140)
!6140 = !{!6141, !6142, !6143, !6144, !6146}
!6141 = !DILocalVariable(name: "target", arg: 1, scope: !6139, file: !3, line: 2495, type: !177)
!6142 = !DILocalVariable(name: "di", scope: !6139, file: !3, line: 2496, type: !297)
!6143 = !DILocalVariable(name: "de", scope: !6139, file: !3, line: 2497, type: !340)
!6144 = !DILocalVariable(name: "node", scope: !6145, file: !3, line: 2501, type: !378)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2500, column: 40)
!6146 = !DILocalVariable(name: "local_slave", scope: !6147, file: !3, line: 2506, type: !177)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 2505, column: 55)
!6148 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 2505, column: 13)
!6149 = !DILocation(line: 2495, column: 31, scope: !6139)
!6150 = !DILocation(line: 2499, column: 37, scope: !6139)
!6151 = !DILocation(line: 2499, column: 46, scope: !6139)
!6152 = !DILocation(line: 2499, column: 10, scope: !6139)
!6153 = !DILocation(line: 2496, column: 19, scope: !6139)
!6154 = !DILocation(line: 2500, column: 17, scope: !6139)
!6155 = !DILocation(line: 2497, column: 16, scope: !6139)
!6156 = !DILocation(line: 2500, column: 31, scope: !6139)
!6157 = !DILocation(line: 2500, column: 5, scope: !6139)
!6158 = !DILocation(line: 2501, column: 29, scope: !6145)
!6159 = !DILocation(line: 2501, column: 22, scope: !6145)
!6160 = !DILocation(line: 2503, column: 20, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 2503, column: 13)
!6162 = !DILocation(line: 2503, column: 14, scope: !6161)
!6163 = !DILocation(line: 2503, column: 13, scope: !6145)
!6164 = distinct !{!6164, !6157, !6165}
!6165 = !DILocation(line: 2512, column: 5, scope: !6139)
!6166 = !DILocation(line: 2504, column: 21, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 2504, column: 13)
!6168 = !DILocation(line: 2504, column: 18, scope: !6167)
!6169 = !DILocation(line: 2504, column: 28, scope: !6167)
!6170 = !DILocation(line: 2504, column: 31, scope: !6167)
!6171 = !DILocation(line: 2504, column: 13, scope: !6145)
!6172 = !DILocation(line: 2505, column: 13, scope: !6145)
!6173 = !DILocation(line: 2507, column: 17, scope: !6147)
!6174 = !DILocation(line: 2507, column: 35, scope: !6147)
!6175 = !DILocation(line: 2507, column: 44, scope: !6147)
!6176 = !DILocation(line: 2507, column: 38, scope: !6147)
!6177 = !DILocation(line: 2507, column: 52, scope: !6147)
!6178 = !DILocation(line: 2508, column: 32, scope: !6147)
!6179 = !DILocation(line: 2508, column: 42, scope: !6147)
!6180 = !DILocation(line: 2508, column: 70, scope: !6147)
!6181 = !DILocation(line: 2508, column: 59, scope: !6147)
!6182 = !DILocation(line: 2510, column: 9, scope: !6148)
!6183 = !DILocation(line: 2511, column: 9, scope: !6145)
!6184 = !DILocation(line: 2513, column: 5, scope: !6139)
!6185 = !DILocation(line: 2514, column: 1, scope: !6139)
!6186 = distinct !DISubprogram(name: "clusterSendPublish", scope: !3, file: !3, line: 2519, type: !6187, isLocal: false, isDefinition: true, scopeLine: 2519, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6189)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{null, !179, !4435, !4435}
!6189 = !{!6190, !6191, !6192, !6193, !6194, !6195, !6196, !6197, !6198}
!6190 = !DILocalVariable(name: "link", arg: 1, scope: !6186, file: !3, line: 2519, type: !179)
!6191 = !DILocalVariable(name: "channel", arg: 2, scope: !6186, file: !3, line: 2519, type: !4435)
!6192 = !DILocalVariable(name: "message", arg: 3, scope: !6186, file: !3, line: 2519, type: !4435)
!6193 = !DILocalVariable(name: "buf", scope: !6186, file: !3, line: 2520, type: !3406)
!6194 = !DILocalVariable(name: "payload", scope: !6186, file: !3, line: 2520, type: !246)
!6195 = !DILocalVariable(name: "hdr", scope: !6186, file: !3, line: 2521, type: !92)
!6196 = !DILocalVariable(name: "totlen", scope: !6186, file: !3, line: 2522, type: !43)
!6197 = !DILocalVariable(name: "channel_len", scope: !6186, file: !3, line: 2523, type: !43)
!6198 = !DILocalVariable(name: "message_len", scope: !6186, file: !3, line: 2523, type: !43)
!6199 = !DILocation(line: 2519, column: 38, scope: !6186)
!6200 = !DILocation(line: 2519, column: 50, scope: !6186)
!6201 = !DILocation(line: 2519, column: 65, scope: !6186)
!6202 = !DILocation(line: 2520, column: 5, scope: !6186)
!6203 = !DILocation(line: 2521, column: 17, scope: !6186)
!6204 = !DILocation(line: 2525, column: 15, scope: !6186)
!6205 = !DILocation(line: 2526, column: 15, scope: !6186)
!6206 = !DILocation(line: 2527, column: 35, scope: !6186)
!6207 = !{!6208, !758, i64 8}
!6208 = !{!"redisObject", !709, i64 0, !709, i64 0, !709, i64 1, !709, i64 4, !758, i64 8}
!6209 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !6210)
!6210 = distinct !DILocation(line: 2527, column: 19, scope: !6186)
!6211 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !6210)
!6212 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !6210)
!6213 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !6210)
!6214 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !6210)
!6215 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !6210)
!6216 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !6210)
!6217 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !6210)
!6218 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !6210)
!6219 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !6210)
!6220 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !6210)
!6221 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !6210)
!6222 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !6210)
!6223 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !6210)
!6224 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !6210)
!6225 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !6210)
!6226 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !6210)
!6227 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !6210)
!6228 = !DILocation(line: 0, scope: !1486, inlinedAt: !6210)
!6229 = !DILocation(line: 2527, column: 19, scope: !6186)
!6230 = !DILocation(line: 2523, column: 14, scope: !6186)
!6231 = !DILocation(line: 2528, column: 35, scope: !6186)
!6232 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !6233)
!6233 = distinct !DILocation(line: 2528, column: 19, scope: !6186)
!6234 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !6233)
!6235 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !6233)
!6236 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !6233)
!6237 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !6233)
!6238 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !6233)
!6239 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !6233)
!6240 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !6233)
!6241 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !6233)
!6242 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !6233)
!6243 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !6233)
!6244 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !6233)
!6245 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !6233)
!6246 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !6233)
!6247 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !6233)
!6248 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !6233)
!6249 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !6233)
!6250 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !6233)
!6251 = !DILocation(line: 0, scope: !1486, inlinedAt: !6233)
!6252 = !DILocation(line: 2528, column: 19, scope: !6186)
!6253 = !DILocation(line: 2523, column: 27, scope: !6186)
!6254 = !DILocation(line: 2520, column: 19, scope: !6186)
!6255 = !DILocation(line: 2530, column: 5, scope: !6186)
!6256 = !DILocation(line: 2522, column: 14, scope: !6186)
!6257 = !DILocation(line: 2532, column: 49, scope: !6186)
!6258 = !DILocation(line: 2532, column: 63, scope: !6186)
!6259 = !DILocation(line: 2532, column: 12, scope: !6186)
!6260 = !DILocation(line: 2534, column: 41, scope: !6186)
!6261 = !DILocation(line: 2534, column: 10, scope: !6186)
!6262 = !DILocation(line: 2534, column: 23, scope: !6186)
!6263 = !DILocation(line: 2534, column: 27, scope: !6186)
!6264 = !DILocation(line: 2534, column: 39, scope: !6186)
!6265 = !DILocation(line: 2535, column: 41, scope: !6186)
!6266 = !DILocation(line: 2535, column: 27, scope: !6186)
!6267 = !DILocation(line: 2535, column: 39, scope: !6186)
!6268 = !DILocation(line: 2536, column: 19, scope: !6186)
!6269 = !DILocation(line: 2536, column: 10, scope: !6186)
!6270 = !DILocation(line: 2536, column: 17, scope: !6186)
!6271 = !DILocation(line: 2539, column: 9, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 2539, column: 9)
!6273 = !DILocation(line: 2539, column: 16, scope: !6272)
!6274 = !DILocation(line: 2539, column: 9, scope: !6186)
!6275 = !DILocation(line: 2542, column: 19, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 2541, column: 12)
!6277 = !DILocation(line: 2520, column: 45, scope: !6186)
!6278 = !DILocation(line: 2543, column: 9, scope: !6276)
!6279 = !DILocation(line: 2544, column: 15, scope: !6276)
!6280 = !DILocation(line: 0, scope: !6276)
!6281 = !DILocation(line: 2546, column: 12, scope: !6186)
!6282 = !DILocation(line: 2546, column: 53, scope: !6186)
!6283 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !6284)
!6284 = distinct !DILocation(line: 2546, column: 57, scope: !6186)
!6285 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !6284)
!6286 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !6284)
!6287 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !6284)
!6288 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !6284)
!6289 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !6284)
!6290 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !6284)
!6291 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !6284)
!6292 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !6284)
!6293 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !6284)
!6294 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !6284)
!6295 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !6284)
!6296 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !6284)
!6297 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !6284)
!6298 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !6284)
!6299 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !6284)
!6300 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !6284)
!6301 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !6284)
!6302 = !DILocation(line: 0, scope: !1486, inlinedAt: !6284)
!6303 = !DILocation(line: 2546, column: 5, scope: !6186)
!6304 = !DILocation(line: 2547, column: 60, scope: !6186)
!6305 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !6306)
!6306 = distinct !DILocation(line: 2547, column: 44, scope: !6186)
!6307 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !6306)
!6308 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !6306)
!6309 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !6306)
!6310 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !6306)
!6311 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !6306)
!6312 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !6306)
!6313 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !6306)
!6314 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !6306)
!6315 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !6306)
!6316 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !6306)
!6317 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !6306)
!6318 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !6306)
!6319 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !6306)
!6320 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !6306)
!6321 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !6306)
!6322 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !6306)
!6323 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !6306)
!6324 = !DILocation(line: 0, scope: !1486, inlinedAt: !6306)
!6325 = !DILocation(line: 2547, column: 43, scope: !6186)
!6326 = !DILocation(line: 2548, column: 18, scope: !6186)
!6327 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !6328)
!6328 = distinct !DILocation(line: 2548, column: 22, scope: !6186)
!6329 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !6328)
!6330 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !6328)
!6331 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !6328)
!6332 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !6328)
!6333 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !6328)
!6334 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !6328)
!6335 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !6328)
!6336 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !6328)
!6337 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !6328)
!6338 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !6328)
!6339 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !6328)
!6340 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !6328)
!6341 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !6328)
!6342 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !6328)
!6343 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !6328)
!6344 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !6328)
!6345 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !6328)
!6346 = !DILocation(line: 0, scope: !1486, inlinedAt: !6328)
!6347 = !DILocation(line: 2547, column: 5, scope: !6186)
!6348 = !DILocation(line: 2550, column: 9, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 2550, column: 9)
!6350 = !DILocation(line: 2550, column: 9, scope: !6186)
!6351 = !DILocation(line: 2551, column: 9, scope: !6349)
!6352 = !DILocation(line: 2230, column: 36, scope: !3418, inlinedAt: !6353)
!6353 = distinct !DILocation(line: 2553, column: 9, scope: !6349)
!6354 = !DILocation(line: 2230, column: 48, scope: !3418, inlinedAt: !6353)
!6355 = !DILocation(line: 2234, column: 37, scope: !3418, inlinedAt: !6353)
!6356 = !DILocation(line: 2234, column: 46, scope: !3418, inlinedAt: !6353)
!6357 = !DILocation(line: 2234, column: 10, scope: !3418, inlinedAt: !6353)
!6358 = !DILocation(line: 2231, column: 19, scope: !3418, inlinedAt: !6353)
!6359 = !DILocation(line: 2235, column: 17, scope: !3418, inlinedAt: !6353)
!6360 = !DILocation(line: 2232, column: 16, scope: !3418, inlinedAt: !6353)
!6361 = !DILocation(line: 2235, column: 31, scope: !3418, inlinedAt: !6353)
!6362 = !DILocation(line: 2235, column: 5, scope: !3418, inlinedAt: !6353)
!6363 = !DILocation(line: 2236, column: 29, scope: !3426, inlinedAt: !6353)
!6364 = !DILocation(line: 2236, column: 22, scope: !3426, inlinedAt: !6353)
!6365 = !DILocation(line: 2238, column: 20, scope: !3441, inlinedAt: !6353)
!6366 = !DILocation(line: 2238, column: 14, scope: !3441, inlinedAt: !6353)
!6367 = !DILocation(line: 2238, column: 13, scope: !3426, inlinedAt: !6353)
!6368 = !DILocation(line: 2239, column: 19, scope: !3448, inlinedAt: !6353)
!6369 = !DILocation(line: 2239, column: 25, scope: !3448, inlinedAt: !6353)
!6370 = !DILocation(line: 2239, column: 13, scope: !3426, inlinedAt: !6353)
!6371 = !DILocation(line: 2241, column: 9, scope: !3426, inlinedAt: !6353)
!6372 = !DILocation(line: 2242, column: 5, scope: !3418, inlinedAt: !6353)
!6373 = !DILocation(line: 2243, column: 5, scope: !3418, inlinedAt: !6353)
!6374 = !DILocation(line: 2555, column: 5, scope: !6186)
!6375 = !DILocation(line: 2556, column: 5, scope: !6186)
!6376 = !DILocation(line: 2557, column: 17, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 2557, column: 9)
!6378 = !DILocation(line: 2557, column: 9, scope: !6186)
!6379 = !DILocation(line: 2557, column: 25, scope: !6377)
!6380 = !DILocation(line: 2558, column: 1, scope: !6186)
!6381 = distinct !DISubprogram(name: "clusterSendModule", scope: !3, file: !3, line: 2592, type: !6382, isLocal: false, isDefinition: true, scopeLine: 2593, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6384)
!6382 = !DISubroutineType(types: !6383)
!6383 = !{null, !179, !104, !23, !246, !43}
!6384 = !{!6385, !6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393}
!6385 = !DILocalVariable(name: "link", arg: 1, scope: !6381, file: !3, line: 2592, type: !179)
!6386 = !DILocalVariable(name: "module_id", arg: 2, scope: !6381, file: !3, line: 2592, type: !104)
!6387 = !DILocalVariable(name: "type", arg: 3, scope: !6381, file: !3, line: 2592, type: !23)
!6388 = !DILocalVariable(name: "payload", arg: 4, scope: !6381, file: !3, line: 2593, type: !246)
!6389 = !DILocalVariable(name: "len", arg: 5, scope: !6381, file: !3, line: 2593, type: !43)
!6390 = !DILocalVariable(name: "buf", scope: !6381, file: !3, line: 2594, type: !3406)
!6391 = !DILocalVariable(name: "heapbuf", scope: !6381, file: !3, line: 2594, type: !246)
!6392 = !DILocalVariable(name: "hdr", scope: !6381, file: !3, line: 2595, type: !92)
!6393 = !DILocalVariable(name: "totlen", scope: !6381, file: !3, line: 2596, type: !43)
!6394 = !DILocation(line: 2592, column: 37, scope: !6381)
!6395 = !DILocation(line: 2592, column: 52, scope: !6381)
!6396 = !DILocation(line: 2592, column: 71, scope: !6381)
!6397 = !DILocation(line: 2593, column: 39, scope: !6381)
!6398 = !DILocation(line: 2593, column: 57, scope: !6381)
!6399 = !DILocation(line: 2594, column: 5, scope: !6381)
!6400 = !DILocation(line: 2595, column: 17, scope: !6381)
!6401 = !DILocation(line: 2594, column: 19, scope: !6381)
!6402 = !DILocation(line: 2598, column: 5, scope: !6381)
!6403 = !DILocation(line: 2596, column: 14, scope: !6381)
!6404 = !DILocation(line: 2600, column: 46, scope: !6381)
!6405 = !DILocation(line: 2600, column: 12, scope: !6381)
!6406 = !DILocation(line: 2602, column: 26, scope: !6381)
!6407 = !DILocation(line: 2602, column: 36, scope: !6381)
!6408 = !DILocation(line: 2603, column: 26, scope: !6381)
!6409 = !DILocation(line: 2603, column: 31, scope: !6381)
!6410 = !DILocation(line: 2604, column: 32, scope: !6381)
!6411 = !DILocation(line: 2604, column: 26, scope: !6381)
!6412 = !DILocation(line: 2604, column: 30, scope: !6381)
!6413 = !DILocation(line: 2605, column: 19, scope: !6381)
!6414 = !DILocation(line: 2605, column: 10, scope: !6381)
!6415 = !DILocation(line: 2605, column: 17, scope: !6381)
!6416 = !DILocation(line: 2608, column: 9, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 2608, column: 9)
!6418 = !DILocation(line: 2608, column: 16, scope: !6417)
!6419 = !DILocation(line: 2608, column: 9, scope: !6381)
!6420 = !DILocation(line: 2611, column: 19, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 2610, column: 12)
!6422 = !DILocation(line: 2594, column: 45, scope: !6381)
!6423 = !DILocation(line: 2612, column: 9, scope: !6421)
!6424 = !DILocation(line: 2613, column: 15, scope: !6421)
!6425 = !DILocation(line: 0, scope: !6421)
!6426 = !DILocation(line: 2615, column: 33, scope: !6381)
!6427 = !DILocation(line: 2615, column: 5, scope: !6381)
!6428 = !DILocation(line: 2617, column: 9, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 2617, column: 9)
!6430 = !DILocation(line: 2617, column: 9, scope: !6381)
!6431 = !DILocation(line: 2618, column: 9, scope: !6429)
!6432 = !DILocation(line: 2230, column: 36, scope: !3418, inlinedAt: !6433)
!6433 = distinct !DILocation(line: 2620, column: 9, scope: !6429)
!6434 = !DILocation(line: 2230, column: 48, scope: !3418, inlinedAt: !6433)
!6435 = !DILocation(line: 2234, column: 37, scope: !3418, inlinedAt: !6433)
!6436 = !DILocation(line: 2234, column: 46, scope: !3418, inlinedAt: !6433)
!6437 = !DILocation(line: 2234, column: 10, scope: !3418, inlinedAt: !6433)
!6438 = !DILocation(line: 2231, column: 19, scope: !3418, inlinedAt: !6433)
!6439 = !DILocation(line: 2235, column: 17, scope: !3418, inlinedAt: !6433)
!6440 = !DILocation(line: 2232, column: 16, scope: !3418, inlinedAt: !6433)
!6441 = !DILocation(line: 2235, column: 31, scope: !3418, inlinedAt: !6433)
!6442 = !DILocation(line: 2235, column: 5, scope: !3418, inlinedAt: !6433)
!6443 = !DILocation(line: 2236, column: 29, scope: !3426, inlinedAt: !6433)
!6444 = !DILocation(line: 2236, column: 22, scope: !3426, inlinedAt: !6433)
!6445 = !DILocation(line: 2238, column: 20, scope: !3441, inlinedAt: !6433)
!6446 = !DILocation(line: 2238, column: 14, scope: !3441, inlinedAt: !6433)
!6447 = !DILocation(line: 2238, column: 13, scope: !3426, inlinedAt: !6433)
!6448 = !DILocation(line: 2239, column: 19, scope: !3448, inlinedAt: !6433)
!6449 = !DILocation(line: 2239, column: 25, scope: !3448, inlinedAt: !6433)
!6450 = !DILocation(line: 2239, column: 13, scope: !3426, inlinedAt: !6433)
!6451 = !DILocation(line: 2241, column: 9, scope: !3426, inlinedAt: !6433)
!6452 = !DILocation(line: 2242, column: 5, scope: !3418, inlinedAt: !6433)
!6453 = !DILocation(line: 2243, column: 5, scope: !3418, inlinedAt: !6433)
!6454 = !DILocation(line: 2622, column: 17, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 2622, column: 9)
!6456 = !DILocation(line: 2622, column: 9, scope: !6381)
!6457 = !DILocation(line: 2622, column: 25, scope: !6455)
!6458 = !DILocation(line: 2623, column: 1, scope: !6381)
!6459 = distinct !DISubprogram(name: "clusterSendModuleMessageToTarget", scope: !3, file: !3, line: 2631, type: !6460, isLocal: false, isDefinition: true, scopeLine: 2631, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6462)
!6460 = !DISubroutineType(types: !6461)
!6461 = !{!177, !611, !104, !23, !246, !43}
!6462 = !{!6463, !6464, !6465, !6466, !6467, !6468}
!6463 = !DILocalVariable(name: "target", arg: 1, scope: !6459, file: !3, line: 2631, type: !611)
!6464 = !DILocalVariable(name: "module_id", arg: 2, scope: !6459, file: !3, line: 2631, type: !104)
!6465 = !DILocalVariable(name: "type", arg: 3, scope: !6459, file: !3, line: 2631, type: !23)
!6466 = !DILocalVariable(name: "payload", arg: 4, scope: !6459, file: !3, line: 2631, type: !246)
!6467 = !DILocalVariable(name: "len", arg: 5, scope: !6459, file: !3, line: 2631, type: !43)
!6468 = !DILocalVariable(name: "node", scope: !6459, file: !3, line: 2632, type: !378)
!6469 = !DILocation(line: 2631, column: 50, scope: !6459)
!6470 = !DILocation(line: 2631, column: 67, scope: !6459)
!6471 = !DILocation(line: 2631, column: 86, scope: !6459)
!6472 = !DILocation(line: 2631, column: 107, scope: !6459)
!6473 = !DILocation(line: 2631, column: 125, scope: !6459)
!6474 = !DILocation(line: 2632, column: 18, scope: !6459)
!6475 = !DILocation(line: 2634, column: 16, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 2634, column: 9)
!6477 = !DILocation(line: 2634, column: 9, scope: !6459)
!6478 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !6479)
!6479 = distinct !DILocation(line: 2635, column: 16, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2634, column: 25)
!6481 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !6479)
!6482 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !6479)
!6483 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !6479)
!6484 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !6479)
!6485 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !6479)
!6486 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !6479)
!6487 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !6479)
!6488 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !6479)
!6489 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !6479)
!6490 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !6479)
!6491 = !DILocation(line: 2636, column: 18, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 2636, column: 13)
!6493 = !DILocation(line: 2636, column: 26, scope: !6492)
!6494 = !DILocation(line: 2636, column: 35, scope: !6492)
!6495 = !DILocation(line: 2636, column: 40, scope: !6492)
!6496 = !DILocation(line: 2636, column: 13, scope: !6480)
!6497 = !DILocation(line: 2639, column: 23, scope: !6459)
!6498 = !DILocation(line: 2639, column: 5, scope: !6459)
!6499 = !DILocation(line: 2641, column: 5, scope: !6459)
!6500 = !DILocation(line: 0, scope: !6459)
!6501 = !DILocation(line: 2642, column: 1, scope: !6459)
!6502 = distinct !DISubprogram(name: "clusterPropagatePublish", scope: !3, file: !3, line: 2651, type: !6503, isLocal: false, isDefinition: true, scopeLine: 2651, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6505)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{null, !4435, !4435}
!6505 = !{!6506, !6507}
!6506 = !DILocalVariable(name: "channel", arg: 1, scope: !6502, file: !3, line: 2651, type: !4435)
!6507 = !DILocalVariable(name: "message", arg: 2, scope: !6502, file: !3, line: 2651, type: !4435)
!6508 = !DILocation(line: 2651, column: 36, scope: !6502)
!6509 = !DILocation(line: 2651, column: 51, scope: !6502)
!6510 = !DILocation(line: 2652, column: 5, scope: !6502)
!6511 = !DILocation(line: 2653, column: 1, scope: !6502)
!6512 = distinct !DISubprogram(name: "clusterRequestFailoverAuth", scope: !3, file: !3, line: 2665, type: !293, isLocal: false, isDefinition: true, scopeLine: 2665, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6513)
!6513 = !{!6514, !6515, !6516}
!6514 = !DILocalVariable(name: "buf", scope: !6512, file: !3, line: 2666, type: !3406)
!6515 = !DILocalVariable(name: "hdr", scope: !6512, file: !3, line: 2667, type: !92)
!6516 = !DILocalVariable(name: "totlen", scope: !6512, file: !3, line: 2668, type: !43)
!6517 = !DILocation(line: 2666, column: 5, scope: !6512)
!6518 = !DILocation(line: 2667, column: 17, scope: !6512)
!6519 = !DILocation(line: 2666, column: 19, scope: !6512)
!6520 = !DILocation(line: 2670, column: 5, scope: !6512)
!6521 = !DILocation(line: 2674, column: 16, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 2674, column: 9)
!6523 = !DILocation(line: 2674, column: 25, scope: !6522)
!6524 = !DILocation(line: 2674, column: 9, scope: !6522)
!6525 = !DILocation(line: 2674, column: 9, scope: !6512)
!6526 = !DILocation(line: 2674, column: 33, scope: !6522)
!6527 = !DILocation(line: 2674, column: 48, scope: !6522)
!6528 = !DILocation(line: 2668, column: 14, scope: !6512)
!6529 = !DILocation(line: 2676, column: 19, scope: !6512)
!6530 = !DILocation(line: 2676, column: 10, scope: !6512)
!6531 = !DILocation(line: 2676, column: 17, scope: !6512)
!6532 = !DILocation(line: 2230, column: 36, scope: !3418, inlinedAt: !6533)
!6533 = distinct !DILocation(line: 2677, column: 5, scope: !6512)
!6534 = !DILocation(line: 2230, column: 48, scope: !3418, inlinedAt: !6533)
!6535 = !DILocation(line: 2234, column: 37, scope: !3418, inlinedAt: !6533)
!6536 = !DILocation(line: 2234, column: 46, scope: !3418, inlinedAt: !6533)
!6537 = !DILocation(line: 2234, column: 10, scope: !3418, inlinedAt: !6533)
!6538 = !DILocation(line: 2231, column: 19, scope: !3418, inlinedAt: !6533)
!6539 = !DILocation(line: 2235, column: 17, scope: !3418, inlinedAt: !6533)
!6540 = !DILocation(line: 2232, column: 16, scope: !3418, inlinedAt: !6533)
!6541 = !DILocation(line: 2235, column: 31, scope: !3418, inlinedAt: !6533)
!6542 = !DILocation(line: 2235, column: 5, scope: !3418, inlinedAt: !6533)
!6543 = !DILocation(line: 2236, column: 29, scope: !3426, inlinedAt: !6533)
!6544 = !DILocation(line: 2236, column: 22, scope: !3426, inlinedAt: !6533)
!6545 = !DILocation(line: 2238, column: 20, scope: !3441, inlinedAt: !6533)
!6546 = !DILocation(line: 2238, column: 14, scope: !3441, inlinedAt: !6533)
!6547 = !DILocation(line: 2238, column: 13, scope: !3426, inlinedAt: !6533)
!6548 = !DILocation(line: 2239, column: 19, scope: !3448, inlinedAt: !6533)
!6549 = !DILocation(line: 2239, column: 25, scope: !3448, inlinedAt: !6533)
!6550 = !DILocation(line: 2239, column: 13, scope: !3426, inlinedAt: !6533)
!6551 = !DILocation(line: 2241, column: 9, scope: !3426, inlinedAt: !6533)
!6552 = !DILocation(line: 2242, column: 5, scope: !3418, inlinedAt: !6533)
!6553 = !DILocation(line: 2243, column: 5, scope: !3418, inlinedAt: !6533)
!6554 = !DILocation(line: 2678, column: 1, scope: !6512)
!6555 = !DILocation(line: 2681, column: 43, scope: !5754)
!6556 = !DILocation(line: 2682, column: 5, scope: !5754)
!6557 = !DILocation(line: 2683, column: 17, scope: !5754)
!6558 = !DILocation(line: 2686, column: 16, scope: !5764)
!6559 = !DILocation(line: 2686, column: 10, scope: !5764)
!6560 = !DILocation(line: 2686, column: 9, scope: !5754)
!6561 = !DILocation(line: 2682, column: 19, scope: !5754)
!6562 = !DILocation(line: 2687, column: 5, scope: !5754)
!6563 = !DILocation(line: 2684, column: 14, scope: !5754)
!6564 = !DILocation(line: 2689, column: 19, scope: !5754)
!6565 = !DILocation(line: 2689, column: 10, scope: !5754)
!6566 = !DILocation(line: 2689, column: 17, scope: !5754)
!6567 = !DILocation(line: 2690, column: 30, scope: !5754)
!6568 = !DILocation(line: 2690, column: 5, scope: !5754)
!6569 = !DILocation(line: 2691, column: 1, scope: !5754)
!6570 = distinct !DISubprogram(name: "clusterSendMFStart", scope: !3, file: !3, line: 2694, type: !2319, isLocal: false, isDefinition: true, scopeLine: 2694, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6571)
!6571 = !{!6572, !6573, !6574, !6575}
!6572 = !DILocalVariable(name: "node", arg: 1, scope: !6570, file: !3, line: 2694, type: !378)
!6573 = !DILocalVariable(name: "buf", scope: !6570, file: !3, line: 2695, type: !3406)
!6574 = !DILocalVariable(name: "hdr", scope: !6570, file: !3, line: 2696, type: !92)
!6575 = !DILocalVariable(name: "totlen", scope: !6570, file: !3, line: 2697, type: !43)
!6576 = !DILocation(line: 2694, column: 38, scope: !6570)
!6577 = !DILocation(line: 2695, column: 5, scope: !6570)
!6578 = !DILocation(line: 2696, column: 17, scope: !6570)
!6579 = !DILocation(line: 2699, column: 16, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 2699, column: 9)
!6581 = !DILocation(line: 2699, column: 10, scope: !6580)
!6582 = !DILocation(line: 2699, column: 9, scope: !6570)
!6583 = !DILocation(line: 2695, column: 19, scope: !6570)
!6584 = !DILocation(line: 2700, column: 5, scope: !6570)
!6585 = !DILocation(line: 2697, column: 14, scope: !6570)
!6586 = !DILocation(line: 2702, column: 19, scope: !6570)
!6587 = !DILocation(line: 2702, column: 10, scope: !6570)
!6588 = !DILocation(line: 2702, column: 17, scope: !6570)
!6589 = !DILocation(line: 2703, column: 30, scope: !6570)
!6590 = !DILocation(line: 2703, column: 5, scope: !6570)
!6591 = !DILocation(line: 2704, column: 1, scope: !6570)
!6592 = distinct !DISubprogram(name: "clusterGetSlaveRank", scope: !3, file: !3, line: 2822, type: !3144, isLocal: false, isDefinition: true, scopeLine: 2822, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6593)
!6593 = !{!6594, !6595, !6596, !6597}
!6594 = !DILocalVariable(name: "myoffset", scope: !6592, file: !3, line: 2823, type: !186)
!6595 = !DILocalVariable(name: "j", scope: !6592, file: !3, line: 2824, type: !177)
!6596 = !DILocalVariable(name: "rank", scope: !6592, file: !3, line: 2824, type: !177)
!6597 = !DILocalVariable(name: "master", scope: !6592, file: !3, line: 2825, type: !378)
!6598 = !DILocation(line: 2824, column: 12, scope: !6592)
!6599 = !DILocation(line: 2827, column: 5, scope: !6592)
!6600 = !DILocation(line: 2828, column: 22, scope: !6592)
!6601 = !DILocation(line: 2825, column: 18, scope: !6592)
!6602 = !DILocation(line: 2829, column: 16, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 2829, column: 9)
!6604 = !DILocation(line: 2829, column: 9, scope: !6592)
!6605 = !DILocation(line: 2831, column: 16, scope: !6592)
!6606 = !DILocation(line: 2823, column: 15, scope: !6592)
!6607 = !DILocation(line: 2824, column: 9, scope: !6592)
!6608 = !DILocation(line: 2832, column: 29, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 2832, column: 5)
!6610 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 2832, column: 5)
!6611 = !DILocation(line: 2832, column: 19, scope: !6609)
!6612 = !DILocation(line: 2832, column: 5, scope: !6610)
!6613 = !DILocation(line: 2833, column: 13, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 2833, column: 13)
!6615 = !DILocation(line: 2833, column: 31, scope: !6614)
!6616 = !DILocation(line: 2833, column: 41, scope: !6614)
!6617 = !DILocation(line: 2834, column: 14, scope: !6614)
!6618 = !DILocation(line: 2834, column: 50, scope: !6614)
!6619 = !DILocation(line: 2835, column: 32, scope: !6614)
!6620 = !DILocation(line: 2835, column: 44, scope: !6614)
!6621 = !DILocation(line: 2833, column: 13, scope: !6609)
!6622 = !DILocation(line: 0, scope: !6592)
!6623 = !DILocation(line: 2832, column: 41, scope: !6609)
!6624 = !DILocation(line: 2837, column: 1, scope: !6592)
!6625 = distinct !{!6625, !6612, !6626}
!6626 = !DILocation(line: 2835, column: 60, scope: !6610)
!6627 = !DILocation(line: 2861, column: 33, scope: !281)
!6628 = !DILocation(line: 2864, column: 39, scope: !281)
!6629 = !DILocation(line: 2864, column: 60, scope: !281)
!6630 = !DILocation(line: 2864, column: 14, scope: !281)
!6631 = !DILocation(line: 2867, column: 26, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !281, file: !3, line: 2867, column: 9)
!6633 = !DILocation(line: 2867, column: 35, scope: !6632)
!6634 = !DILocation(line: 2867, column: 16, scope: !6632)
!6635 = !DILocation(line: 2867, column: 56, scope: !6632)
!6636 = !DILocation(line: 2868, column: 9, scope: !6632)
!6637 = !DILocation(line: 2868, column: 20, scope: !6632)
!6638 = !DILocation(line: 2868, column: 19, scope: !6632)
!6639 = !DILocation(line: 2868, column: 33, scope: !6632)
!6640 = !DILocation(line: 2867, column: 9, scope: !281)
!6641 = !DILocation(line: 2871, column: 12, scope: !281)
!6642 = !DILocation(line: 2871, column: 21, scope: !281)
!6643 = !DILocation(line: 2871, column: 42, scope: !281)
!6644 = !DILocation(line: 2876, column: 9, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !281, file: !3, line: 2876, column: 9)
!6646 = !DILocation(line: 2876, column: 17, scope: !6645)
!6647 = !DILocation(line: 2876, column: 25, scope: !6645)
!6648 = !DILocation(line: 2877, column: 9, scope: !6645)
!6649 = !DILocation(line: 2877, column: 37, scope: !6645)
!6650 = !DILocation(line: 2878, column: 10, scope: !6645)
!6651 = !DILocation(line: 2878, column: 21, scope: !6645)
!6652 = !DILocation(line: 2878, column: 29, scope: !6645)
!6653 = !DILocation(line: 2878, column: 38, scope: !6645)
!6654 = !DILocation(line: 2878, column: 19, scope: !6645)
!6655 = !DILocation(line: 2878, column: 49, scope: !6645)
!6656 = !DILocation(line: 2876, column: 9, scope: !281)
!6657 = !DILocation(line: 2880, column: 5, scope: !281)
!6658 = !DILocation(line: 0, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !281, file: !3, line: 2880, column: 20)
!6660 = !DILocation(line: 2862, column: 11, scope: !281)
!6661 = !DILocation(line: 2899, column: 20, scope: !281)
!6662 = !DILocation(line: 2899, column: 18, scope: !281)
!6663 = !DILocation(line: 2900, column: 5, scope: !281)
!6664 = !DILocation(line: 2901, column: 1, scope: !281)
!6665 = distinct !DISubprogram(name: "clusterFailoverReplaceYourMaster", scope: !3, file: !3, line: 2909, type: !293, isLocal: false, isDefinition: true, scopeLine: 2909, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6666)
!6666 = !{!6667, !6668}
!6667 = !DILocalVariable(name: "j", scope: !6665, file: !3, line: 2910, type: !177)
!6668 = !DILocalVariable(name: "oldmaster", scope: !6665, file: !3, line: 2911, type: !378)
!6669 = !DILocation(line: 2911, column: 30, scope: !6665)
!6670 = !DILocation(line: 2911, column: 38, scope: !6665)
!6671 = !DILocation(line: 2911, column: 18, scope: !6665)
!6672 = !DILocation(line: 2913, column: 9, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 2913, column: 9)
!6674 = !DILocation(line: 2913, column: 43, scope: !6673)
!6675 = !DILocation(line: 2913, column: 30, scope: !6673)
!6676 = !DILocation(line: 2916, column: 5, scope: !6665)
!6677 = !DILocation(line: 2917, column: 5, scope: !6665)
!6678 = !DILocation(line: 2910, column: 9, scope: !6665)
!6679 = !DILocation(line: 2920, column: 5, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 2920, column: 5)
!6681 = !DILocation(line: 3698, column: 40, scope: !4913, inlinedAt: !6682)
!6682 = distinct !DILocation(line: 2921, column: 13, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 2921, column: 13)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 2920, column: 41)
!6685 = distinct !DILexicalBlock(scope: !6680, file: !3, line: 2920, column: 5)
!6686 = !DILocation(line: 3698, column: 47, scope: !4913, inlinedAt: !6682)
!6687 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !6688)
!6688 = distinct !DILocation(line: 3699, column: 12, scope: !4913, inlinedAt: !6682)
!6689 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !6688)
!6690 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !6688)
!6691 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !6688)
!6692 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !6688)
!6693 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !6688)
!6694 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !6688)
!6695 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !6688)
!6696 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !6688)
!6697 = !DILocation(line: 2921, column: 13, scope: !6684)
!6698 = !DILocation(line: 3716, column: 24, scope: !2197, inlinedAt: !6699)
!6699 = distinct !DILocation(line: 2922, column: 13, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 2921, column: 49)
!6701 = !DILocation(line: 3717, column: 29, scope: !2197, inlinedAt: !6699)
!6702 = !DILocation(line: 3717, column: 22, scope: !2197, inlinedAt: !6699)
!6703 = !DILocation(line: 3717, column: 18, scope: !2197, inlinedAt: !6699)
!6704 = !DILocation(line: 3719, column: 10, scope: !2206, inlinedAt: !6699)
!6705 = !DILocation(line: 3719, column: 9, scope: !2197, inlinedAt: !6699)
!6706 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !6707)
!6707 = distinct !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !6699)
!6708 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !6707)
!6709 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !6710)
!6710 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !6707)
!6711 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !6710)
!6712 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !6710)
!6713 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !6710)
!6714 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !6710)
!6715 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !6710)
!6716 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !6710)
!6717 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !6718)
!6718 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !6707)
!6719 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !6718)
!6720 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !6718)
!6721 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !6718)
!6722 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !6718)
!6723 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !6707)
!6724 = !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !6699)
!6725 = !DILocation(line: 3693, column: 17, scope: !2251, inlinedAt: !6707)
!6726 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !6707)
!6727 = !DILocation(line: 3721, column: 12, scope: !2197, inlinedAt: !6699)
!6728 = !DILocation(line: 3721, column: 5, scope: !2197, inlinedAt: !6699)
!6729 = !DILocation(line: 3721, column: 33, scope: !2197, inlinedAt: !6699)
!6730 = !DILocation(line: 3707, column: 16, scope: !1228, inlinedAt: !6731)
!6731 = distinct !DILocation(line: 2923, column: 13, scope: !6700)
!6732 = !DILocation(line: 3707, column: 9, scope: !1228, inlinedAt: !6731)
!6733 = !DILocation(line: 3706, column: 33, scope: !1219, inlinedAt: !6731)
!6734 = !DILocation(line: 3706, column: 40, scope: !1219, inlinedAt: !6731)
!6735 = !DILocation(line: 3707, column: 9, scope: !1219, inlinedAt: !6731)
!6736 = !DILocation(line: 2923, column: 28, scope: !6700)
!6737 = !DILocation(line: 3708, column: 5, scope: !1219, inlinedAt: !6731)
!6738 = !DILocation(line: 3709, column: 12, scope: !1219, inlinedAt: !6731)
!6739 = !DILocation(line: 3709, column: 5, scope: !1219, inlinedAt: !6731)
!6740 = !DILocation(line: 3709, column: 33, scope: !1219, inlinedAt: !6731)
!6741 = !DILocation(line: 3710, column: 5, scope: !1219, inlinedAt: !6731)
!6742 = !DILocation(line: 2920, column: 37, scope: !6685)
!6743 = !DILocation(line: 2920, column: 19, scope: !6685)
!6744 = distinct !{!6744, !6679, !6745}
!6745 = !DILocation(line: 2925, column: 5, scope: !6680)
!6746 = !DILocation(line: 2928, column: 5, scope: !6665)
!6747 = !DILocation(line: 360, column: 33, scope: !1653, inlinedAt: !6748)
!6748 = distinct !DILocation(line: 2929, column: 5, scope: !6665)
!6749 = !DILocation(line: 361, column: 9, scope: !1658, inlinedAt: !6748)
!6750 = !DILocation(line: 361, column: 37, scope: !1658, inlinedAt: !6748)
!6751 = !DILocation(line: 361, column: 9, scope: !1653, inlinedAt: !6748)
!6752 = !DILocation(line: 362, column: 9, scope: !1662, inlinedAt: !6748)
!6753 = !DILocation(line: 363, column: 9, scope: !1662, inlinedAt: !6748)
!6754 = !DILocation(line: 2933, column: 5, scope: !6665)
!6755 = !DILocation(line: 3265, column: 16, scope: !2126, inlinedAt: !6756)
!6756 = distinct !DILocation(line: 2936, column: 5, scope: !6665)
!6757 = !DILocation(line: 3265, column: 25, scope: !2126, inlinedAt: !6756)
!6758 = !DILocation(line: 3265, column: 9, scope: !2126, inlinedAt: !6756)
!6759 = !DILocation(line: 3265, column: 32, scope: !2126, inlinedAt: !6756)
!6760 = !DILocation(line: 3265, column: 35, scope: !2126, inlinedAt: !6756)
!6761 = !DILocation(line: 3265, column: 9, scope: !1947, inlinedAt: !6756)
!6762 = !DILocation(line: 3266, column: 39, scope: !2133, inlinedAt: !6756)
!6763 = !DILocation(line: 3267, column: 9, scope: !2133, inlinedAt: !6756)
!6764 = !DILocation(line: 3268, column: 5, scope: !2133, inlinedAt: !6756)
!6765 = !DILocation(line: 3269, column: 12, scope: !1947, inlinedAt: !6756)
!6766 = !DILocation(line: 3269, column: 21, scope: !1947, inlinedAt: !6756)
!6767 = !DILocation(line: 3269, column: 28, scope: !1947, inlinedAt: !6756)
!6768 = !DILocation(line: 3270, column: 21, scope: !1947, inlinedAt: !6756)
!6769 = !DILocation(line: 3270, column: 34, scope: !1947, inlinedAt: !6756)
!6770 = !DILocation(line: 3271, column: 21, scope: !1947, inlinedAt: !6756)
!6771 = !DILocation(line: 3271, column: 30, scope: !1947, inlinedAt: !6756)
!6772 = !DILocation(line: 3272, column: 21, scope: !1947, inlinedAt: !6756)
!6773 = !DILocation(line: 3272, column: 38, scope: !1947, inlinedAt: !6756)
!6774 = !DILocation(line: 2937, column: 1, scope: !6665)
!6775 = !DILocation(line: 3698, column: 40, scope: !4913)
!6776 = !DILocation(line: 3698, column: 47, scope: !4913)
!6777 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !6778)
!6778 = distinct !DILocation(line: 3699, column: 12, scope: !4913)
!6779 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !6778)
!6780 = !DILocation(line: 3628, column: 21, scope: !2217, inlinedAt: !6778)
!6781 = !DILocation(line: 3628, column: 18, scope: !2217, inlinedAt: !6778)
!6782 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !6778)
!6783 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !6778)
!6784 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !6778)
!6785 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !6778)
!6786 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !6778)
!6787 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !6778)
!6788 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !6778)
!6789 = !DILocation(line: 3699, column: 5, scope: !4913)
!6790 = !DILocation(line: 3762, column: 9, scope: !408)
!6791 = !DILocation(line: 3766, column: 12, scope: !408)
!6792 = !DILocation(line: 3766, column: 21, scope: !408)
!6793 = !DILocation(line: 3766, column: 39, scope: !408)
!6794 = !DILocation(line: 3774, column: 9, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3774, column: 9)
!6796 = !DILocation(line: 3774, column: 25, scope: !6795)
!6797 = !DILocation(line: 3774, column: 9, scope: !408)
!6798 = !DILocation(line: 3774, column: 49, scope: !6795)
!6799 = !DILocation(line: 3774, column: 47, scope: !6795)
!6800 = !DILocation(line: 3774, column: 31, scope: !6795)
!6801 = !DILocation(line: 3775, column: 9, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3775, column: 9)
!6803 = !DILocation(line: 3775, column: 30, scope: !6802)
!6804 = !DILocation(line: 3776, column: 16, scope: !6802)
!6805 = !DILocation(line: 3776, column: 25, scope: !6802)
!6806 = !DILocation(line: 3776, column: 31, scope: !6802)
!6807 = !DILocation(line: 3776, column: 47, scope: !6802)
!6808 = !DILocation(line: 3777, column: 9, scope: !6802)
!6809 = !DILocation(line: 3777, column: 20, scope: !6802)
!6810 = !DILocation(line: 3777, column: 18, scope: !6802)
!6811 = !DILocation(line: 3777, column: 36, scope: !6802)
!6812 = !DILocation(line: 3775, column: 9, scope: !408)
!6813 = !DILocation(line: 3761, column: 12, scope: !408)
!6814 = !DILocation(line: 3784, column: 16, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3784, column: 9)
!6816 = !{!785, !709, i64 2960}
!6817 = !DILocation(line: 3784, column: 9, scope: !6815)
!6818 = !DILocation(line: 3784, column: 9, scope: !408)
!6819 = !DILocation(line: 3785, column: 41, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 3785, column: 9)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 3785, column: 9)
!6822 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 3784, column: 47)
!6823 = !DILocation(line: 3761, column: 9, scope: !408)
!6824 = !DILocation(line: 3786, column: 17, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 3786, column: 17)
!6826 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 3785, column: 45)
!6827 = !DILocation(line: 3786, column: 42, scope: !6825)
!6828 = !DILocation(line: 3786, column: 50, scope: !6825)
!6829 = !DILocation(line: 3787, column: 43, scope: !6825)
!6830 = !DILocation(line: 3787, column: 49, scope: !6825)
!6831 = !DILocation(line: 3786, column: 17, scope: !6826)
!6832 = !DILocation(line: 0, scope: !408)
!6833 = !DILocation(line: 3804, column: 25, scope: !414)
!6834 = !DILocation(line: 3804, column: 30, scope: !414)
!6835 = !DILocation(line: 3805, column: 50, scope: !414)
!6836 = !DILocation(line: 3805, column: 14, scope: !414)
!6837 = !DILocation(line: 3801, column: 23, scope: !414)
!6838 = !DILocation(line: 3806, column: 21, scope: !414)
!6839 = !DILocation(line: 3802, column: 20, scope: !414)
!6840 = !DILocation(line: 3806, column: 35, scope: !414)
!6841 = !DILocation(line: 3806, column: 9, scope: !414)
!6842 = !DILocation(line: 3807, column: 33, scope: !417)
!6843 = !DILocation(line: 3807, column: 26, scope: !417)
!6844 = !DILocation(line: 3809, column: 17, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !417, file: !3, line: 3809, column: 17)
!6846 = !DILocation(line: 3809, column: 36, scope: !6845)
!6847 = !DILocation(line: 3809, column: 45, scope: !6845)
!6848 = !DILocation(line: 3809, column: 39, scope: !6845)
!6849 = !DILocation(line: 3809, column: 17, scope: !417)
!6850 = !DILocation(line: 3810, column: 24, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 3809, column: 55)
!6852 = !DILocation(line: 3810, column: 33, scope: !6851)
!6853 = !DILocation(line: 3810, column: 37, scope: !6851)
!6854 = !DILocation(line: 3811, column: 34, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 3811, column: 21)
!6856 = !DILocation(line: 3811, column: 76, scope: !6855)
!6857 = !DILocation(line: 3811, column: 21, scope: !6851)
!6858 = distinct !{!6858, !6841, !6859}
!6859 = !DILocation(line: 3814, column: 9, scope: !414)
!6860 = !DILocation(line: 0, scope: !6855)
!6861 = !DILocation(line: 3815, column: 9, scope: !414)
!6862 = !DILocation(line: 3821, column: 37, scope: !419)
!6863 = !DILocation(line: 3821, column: 46, scope: !419)
!6864 = !DILocation(line: 3821, column: 51, scope: !419)
!6865 = !DILocation(line: 3821, column: 13, scope: !419)
!6866 = !DILocation(line: 3823, column: 31, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !419, file: !3, line: 3823, column: 13)
!6868 = !DILocation(line: 3823, column: 13, scope: !419)
!6869 = !DILocation(line: 3825, column: 35, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 3823, column: 48)
!6871 = !DILocation(line: 3825, column: 33, scope: !6870)
!6872 = !DILocation(line: 3830, column: 29, scope: !422)
!6873 = !DILocation(line: 3826, column: 9, scope: !6870)
!6874 = !DILocation(line: 0, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 3788, column: 13)
!6876 = !DILocation(line: 3830, column: 38, scope: !422)
!6877 = !DILocation(line: 3830, column: 19, scope: !422)
!6878 = !DILocation(line: 3830, column: 9, scope: !408)
!6879 = !DILocation(line: 3831, column: 40, scope: !421)
!6880 = !DILocation(line: 3831, column: 18, scope: !421)
!6881 = !DILocation(line: 3837, column: 13, scope: !421)
!6882 = !DILocation(line: 3839, column: 13, scope: !421)
!6883 = !DILocation(line: 3842, column: 23, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !421, file: !3, line: 3842, column: 13)
!6885 = !DILocation(line: 3842, column: 37, scope: !6884)
!6886 = !DILocation(line: 3843, column: 13, scope: !6884)
!6887 = !DILocation(line: 3843, column: 34, scope: !6884)
!6888 = !DILocation(line: 3844, column: 13, scope: !6884)
!6889 = !DILocation(line: 3844, column: 24, scope: !6884)
!6890 = !DILocation(line: 3844, column: 22, scope: !6884)
!6891 = !DILocation(line: 3844, column: 44, scope: !6884)
!6892 = !DILocation(line: 3842, column: 13, scope: !421)
!6893 = !DILocation(line: 3851, column: 13, scope: !421)
!6894 = !DILocation(line: 3850, column: 9, scope: !421)
!6895 = !DILocation(line: 3852, column: 16, scope: !421)
!6896 = !DILocation(line: 3852, column: 25, scope: !421)
!6897 = !DILocation(line: 3852, column: 31, scope: !421)
!6898 = !DILocation(line: 3854, column: 1, scope: !408)
!6899 = !DILocation(line: 3785, column: 23, scope: !6820)
!6900 = !DILocation(line: 3785, column: 9, scope: !6821)
!6901 = distinct !{!6901, !6900, !6902}
!6902 = !DILocation(line: 3792, column: 9, scope: !6821)
!6903 = distinct !DISubprogram(name: "clusterHandleSlaveFailover", scope: !3, file: !3, line: 2947, type: !293, isLocal: false, isDefinition: true, scopeLine: 2947, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6904)
!6904 = !{!6905, !6906, !6907, !6908, !6909, !6910, !6911, !6914}
!6905 = !DILocalVariable(name: "data_age", scope: !6903, file: !3, line: 2948, type: !184)
!6906 = !DILocalVariable(name: "auth_age", scope: !6903, file: !3, line: 2949, type: !184)
!6907 = !DILocalVariable(name: "needed_quorum", scope: !6903, file: !3, line: 2950, type: !177)
!6908 = !DILocalVariable(name: "manual_failover", scope: !6903, file: !3, line: 2951, type: !177)
!6909 = !DILocalVariable(name: "auth_timeout", scope: !6903, file: !3, line: 2953, type: !184)
!6910 = !DILocalVariable(name: "auth_retry_time", scope: !6903, file: !3, line: 2953, type: !184)
!6911 = !DILocalVariable(name: "newrank", scope: !6912, file: !3, line: 3058, type: !177)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 3057, column: 5)
!6913 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 3055, column: 9)
!6914 = !DILocalVariable(name: "added_delay", scope: !6915, file: !3, line: 3060, type: !186)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 3059, column: 59)
!6916 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 3059, column: 13)
!6917 = !DILocation(line: 2949, column: 25, scope: !6903)
!6918 = !DILocation(line: 2949, column: 43, scope: !6903)
!6919 = !DILocation(line: 2949, column: 52, scope: !6903)
!6920 = !DILocation(line: 2949, column: 34, scope: !6903)
!6921 = !DILocation(line: 2949, column: 14, scope: !6903)
!6922 = !DILocation(line: 2950, column: 42, scope: !6903)
!6923 = !DILocation(line: 2950, column: 47, scope: !6903)
!6924 = !DILocation(line: 2950, column: 9, scope: !6903)
!6925 = !DILocation(line: 2951, column: 43, scope: !6903)
!6926 = !DILocation(line: 2951, column: 50, scope: !6903)
!6927 = !DILocation(line: 2951, column: 55, scope: !6903)
!6928 = !DILocation(line: 2952, column: 43, scope: !6903)
!6929 = !DILocation(line: 0, scope: !6903)
!6930 = !DILocation(line: 2955, column: 21, scope: !6903)
!6931 = !DILocation(line: 2955, column: 39, scope: !6903)
!6932 = !DILocation(line: 2964, column: 27, scope: !6903)
!6933 = !DILocation(line: 2964, column: 47, scope: !6903)
!6934 = !DILocation(line: 2953, column: 14, scope: !6903)
!6935 = !DILocation(line: 2965, column: 9, scope: !6903)
!6936 = !DILocation(line: 2966, column: 35, scope: !6903)
!6937 = !DILocation(line: 2953, column: 28, scope: !6903)
!6938 = !DILocation(line: 2975, column: 9, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 2975, column: 9)
!6940 = !DILocation(line: 2975, column: 30, scope: !6939)
!6941 = !DILocation(line: 2976, column: 17, scope: !6939)
!6942 = !DILocation(line: 2976, column: 25, scope: !6939)
!6943 = !DILocation(line: 2976, column: 33, scope: !6939)
!6944 = !DILocation(line: 2977, column: 11, scope: !6939)
!6945 = !DILocation(line: 2977, column: 39, scope: !6939)
!6946 = !DILocation(line: 2978, column: 17, scope: !6939)
!6947 = !DILocation(line: 2978, column: 10, scope: !6939)
!6948 = !DILocation(line: 2978, column: 43, scope: !6939)
!6949 = !DILocation(line: 2979, column: 26, scope: !6939)
!6950 = !DILocation(line: 2979, column: 35, scope: !6939)
!6951 = !DILocation(line: 2975, column: 9, scope: !6903)
!6952 = !DILocation(line: 2983, column: 25, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 2980, column: 5)
!6954 = !DILocation(line: 2983, column: 46, scope: !6953)
!6955 = !DILocation(line: 2984, column: 9, scope: !6953)
!6956 = !DILocation(line: 2989, column: 16, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 2989, column: 9)
!6958 = !{!785, !709, i64 2500}
!6959 = !DILocation(line: 2989, column: 27, scope: !6957)
!6960 = !DILocation(line: 0, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 2992, column: 12)
!6962 = !DILocation(line: 2990, column: 56, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 2989, column: 52)
!6964 = !DILocation(line: 2990, column: 64, scope: !6963)
!6965 = !DILocation(line: 2989, column: 9, scope: !6903)
!6966 = !DILocation(line: 2948, column: 14, scope: !6903)
!6967 = !DILocation(line: 3006, column: 16, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 3006, column: 9)
!6969 = !{!785, !709, i64 2956}
!6970 = !DILocation(line: 3006, column: 9, scope: !6968)
!6971 = !DILocation(line: 3006, column: 46, scope: !6968)
!6972 = !DILocation(line: 2999, column: 18, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 2999, column: 9)
!6974 = !DILocation(line: 2999, column: 9, scope: !6903)
!6975 = !DILocation(line: 3008, column: 28, scope: !6968)
!6976 = !{!785, !709, i64 2372}
!6977 = !DILocation(line: 3008, column: 11, scope: !6968)
!6978 = !DILocation(line: 3008, column: 51, scope: !6968)
!6979 = !DILocation(line: 3009, column: 41, scope: !6968)
!6980 = !DILocation(line: 3009, column: 39, scope: !6968)
!6981 = !DILocation(line: 3008, column: 59, scope: !6968)
!6982 = !DILocation(line: 3007, column: 18, scope: !6968)
!6983 = !DILocation(line: 3006, column: 9, scope: !6903)
!6984 = !DILocation(line: 3012, column: 13, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 3011, column: 31)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 3011, column: 13)
!6987 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 3010, column: 5)
!6988 = !DILocation(line: 3013, column: 13, scope: !6985)
!6989 = !DILocation(line: 3019, column: 18, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 3019, column: 9)
!6991 = !DILocation(line: 3019, column: 9, scope: !6903)
!6992 = !DILocation(line: 3020, column: 46, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 3019, column: 37)
!6994 = !DILocation(line: 3020, column: 55, scope: !6993)
!6995 = !DILocation(line: 3022, column: 13, scope: !6993)
!6996 = !DILocation(line: 3022, column: 22, scope: !6993)
!6997 = !DILocation(line: 3021, column: 17, scope: !6993)
!6998 = !DILocation(line: 3020, column: 16, scope: !6993)
!6999 = !DILocation(line: 3020, column: 25, scope: !6993)
!7000 = !DILocation(line: 3020, column: 44, scope: !6993)
!7001 = !DILocation(line: 3023, column: 25, scope: !6993)
!7002 = !DILocation(line: 3023, column: 45, scope: !6993)
!7003 = !DILocation(line: 3024, column: 25, scope: !6993)
!7004 = !DILocation(line: 3024, column: 44, scope: !6993)
!7005 = !{!794, !709, i64 524348}
!7006 = !DILocation(line: 2824, column: 12, scope: !6592, inlinedAt: !7007)
!7007 = distinct !DILocation(line: 3025, column: 46, scope: !6993)
!7008 = !DILocation(line: 2827, column: 5, scope: !6592, inlinedAt: !7007)
!7009 = !DILocation(line: 2828, column: 22, scope: !6592, inlinedAt: !7007)
!7010 = !DILocation(line: 2825, column: 18, scope: !6592, inlinedAt: !7007)
!7011 = !DILocation(line: 2829, column: 16, scope: !6603, inlinedAt: !7007)
!7012 = !DILocation(line: 2829, column: 9, scope: !6592, inlinedAt: !7007)
!7013 = !DILocation(line: 2831, column: 16, scope: !6592, inlinedAt: !7007)
!7014 = !DILocation(line: 2823, column: 15, scope: !6592, inlinedAt: !7007)
!7015 = !DILocation(line: 2824, column: 9, scope: !6592, inlinedAt: !7007)
!7016 = !DILocation(line: 2832, column: 29, scope: !6609, inlinedAt: !7007)
!7017 = !DILocation(line: 2832, column: 19, scope: !6609, inlinedAt: !7007)
!7018 = !DILocation(line: 2832, column: 5, scope: !6610, inlinedAt: !7007)
!7019 = !DILocation(line: 2833, column: 13, scope: !6614, inlinedAt: !7007)
!7020 = !DILocation(line: 2833, column: 31, scope: !6614, inlinedAt: !7007)
!7021 = !DILocation(line: 2833, column: 41, scope: !6614, inlinedAt: !7007)
!7022 = !DILocation(line: 2834, column: 14, scope: !6614, inlinedAt: !7007)
!7023 = !DILocation(line: 2834, column: 50, scope: !6614, inlinedAt: !7007)
!7024 = !DILocation(line: 2835, column: 32, scope: !6614, inlinedAt: !7007)
!7025 = !DILocation(line: 2835, column: 44, scope: !6614, inlinedAt: !7007)
!7026 = !DILocation(line: 2833, column: 13, scope: !6609, inlinedAt: !7007)
!7027 = !DILocation(line: 0, scope: !6592, inlinedAt: !7007)
!7028 = !DILocation(line: 2832, column: 41, scope: !6609, inlinedAt: !7007)
!7029 = !DILocation(line: 3025, column: 16, scope: !6993)
!7030 = !DILocation(line: 3025, column: 25, scope: !6993)
!7031 = !DILocation(line: 3025, column: 44, scope: !6993)
!7032 = !DILocation(line: 3030, column: 48, scope: !6993)
!7033 = !DILocation(line: 3030, column: 13, scope: !6993)
!7034 = !DILocation(line: 3029, column: 25, scope: !6993)
!7035 = !DILocation(line: 3029, column: 44, scope: !6993)
!7036 = !DILocation(line: 3032, column: 29, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3032, column: 13)
!7038 = !DILocation(line: 3032, column: 13, scope: !7037)
!7039 = !DILocation(line: 3032, column: 13, scope: !6993)
!7040 = !DILocation(line: 3033, column: 50, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 3032, column: 37)
!7042 = !DILocation(line: 3033, column: 20, scope: !7041)
!7043 = !DILocation(line: 3033, column: 29, scope: !7041)
!7044 = !DILocation(line: 3033, column: 48, scope: !7041)
!7045 = !DILocation(line: 3034, column: 29, scope: !7041)
!7046 = !DILocation(line: 3034, column: 48, scope: !7041)
!7047 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !7048)
!7048 = distinct !DILocation(line: 3035, column: 6, scope: !7041)
!7049 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !7048)
!7050 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !7048)
!7051 = !DILocation(line: 3036, column: 9, scope: !7041)
!7052 = !DILocation(line: 3040, column: 29, scope: !6993)
!7053 = !DILocation(line: 3040, column: 50, scope: !6993)
!7054 = !DILocation(line: 3040, column: 48, scope: !6993)
!7055 = !DILocation(line: 3041, column: 20, scope: !6993)
!7056 = !DILocation(line: 3041, column: 29, scope: !6993)
!7057 = !DILocation(line: 3042, column: 13, scope: !6993)
!7058 = !DILocation(line: 3037, column: 9, scope: !6993)
!7059 = !DILocation(line: 3046, column: 9, scope: !6993)
!7060 = !DILocation(line: 3047, column: 9, scope: !6993)
!7061 = !DILocation(line: 3055, column: 25, scope: !6913)
!7062 = !DILocation(line: 3055, column: 44, scope: !6913)
!7063 = !DILocation(line: 3055, column: 49, scope: !6913)
!7064 = !DILocation(line: 2824, column: 12, scope: !6592, inlinedAt: !7065)
!7065 = distinct !DILocation(line: 3058, column: 23, scope: !6912)
!7066 = !DILocation(line: 2827, column: 5, scope: !6592, inlinedAt: !7065)
!7067 = !DILocation(line: 2825, column: 18, scope: !6592, inlinedAt: !7065)
!7068 = !DILocation(line: 2831, column: 16, scope: !6592, inlinedAt: !7065)
!7069 = !DILocation(line: 2823, column: 15, scope: !6592, inlinedAt: !7065)
!7070 = !DILocation(line: 2824, column: 9, scope: !6592, inlinedAt: !7065)
!7071 = !DILocation(line: 2832, column: 29, scope: !6609, inlinedAt: !7065)
!7072 = !DILocation(line: 2832, column: 19, scope: !6609, inlinedAt: !7065)
!7073 = !DILocation(line: 2832, column: 5, scope: !6610, inlinedAt: !7065)
!7074 = !DILocation(line: 2833, column: 13, scope: !6614, inlinedAt: !7065)
!7075 = !DILocation(line: 2833, column: 31, scope: !6614, inlinedAt: !7065)
!7076 = !DILocation(line: 2833, column: 41, scope: !6614, inlinedAt: !7065)
!7077 = !DILocation(line: 2834, column: 14, scope: !6614, inlinedAt: !7065)
!7078 = !DILocation(line: 2834, column: 50, scope: !6614, inlinedAt: !7065)
!7079 = !DILocation(line: 2835, column: 32, scope: !6614, inlinedAt: !7065)
!7080 = !DILocation(line: 2835, column: 44, scope: !6614, inlinedAt: !7065)
!7081 = !DILocation(line: 2833, column: 13, scope: !6609, inlinedAt: !7065)
!7082 = !DILocation(line: 0, scope: !6592, inlinedAt: !7065)
!7083 = !DILocation(line: 2832, column: 41, scope: !6609, inlinedAt: !7065)
!7084 = !DILocation(line: 3058, column: 13, scope: !6912)
!7085 = !DILocation(line: 3059, column: 30, scope: !6916)
!7086 = !DILocation(line: 3059, column: 39, scope: !6916)
!7087 = !DILocation(line: 3059, column: 21, scope: !6916)
!7088 = !DILocation(line: 3059, column: 13, scope: !6912)
!7089 = !DILocation(line: 3061, column: 26, scope: !6915)
!7090 = !DILocation(line: 3061, column: 64, scope: !6915)
!7091 = !DILocation(line: 3061, column: 17, scope: !6915)
!7092 = !DILocation(line: 3060, column: 23, scope: !6915)
!7093 = !DILocation(line: 3062, column: 29, scope: !6915)
!7094 = !DILocation(line: 3062, column: 48, scope: !6915)
!7095 = !DILocation(line: 3063, column: 48, scope: !6915)
!7096 = !DILocation(line: 3064, column: 13, scope: !6915)
!7097 = !DILocation(line: 3067, column: 9, scope: !6915)
!7098 = !DILocation(line: 3071, column: 9, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 3071, column: 9)
!7100 = !DILocation(line: 3071, column: 27, scope: !7099)
!7101 = !DILocation(line: 3071, column: 36, scope: !7099)
!7102 = !DILocation(line: 3071, column: 18, scope: !7099)
!7103 = !DILocation(line: 3071, column: 9, scope: !6903)
!7104 = !DILocation(line: 3072, column: 9, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 3071, column: 56)
!7106 = !DILocation(line: 3073, column: 9, scope: !7105)
!7107 = !DILocation(line: 3077, column: 18, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 3077, column: 9)
!7109 = !DILocation(line: 3077, column: 9, scope: !6903)
!7110 = !DILocation(line: 3078, column: 9, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 3077, column: 34)
!7112 = !DILocation(line: 3079, column: 9, scope: !7111)
!7113 = !DILocation(line: 3083, column: 25, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 3083, column: 9)
!7115 = !DILocation(line: 3083, column: 44, scope: !7114)
!7116 = !DILocation(line: 3083, column: 9, scope: !6903)
!7117 = !DILocation(line: 3084, column: 25, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 3083, column: 50)
!7119 = !DILocation(line: 3084, column: 37, scope: !7118)
!7120 = !DILocation(line: 3085, column: 25, scope: !7118)
!7121 = !DILocation(line: 3085, column: 45, scope: !7118)
!7122 = !DILocation(line: 3086, column: 9, scope: !7118)
!7123 = !DILocation(line: 3088, column: 9, scope: !7118)
!7124 = !DILocation(line: 3089, column: 16, scope: !7118)
!7125 = !DILocation(line: 3089, column: 25, scope: !7118)
!7126 = !DILocation(line: 3089, column: 44, scope: !7118)
!7127 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !7128)
!7128 = distinct !DILocation(line: 3090, column: 9, scope: !7118)
!7129 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !7128)
!7130 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !7128)
!7131 = !DILocation(line: 3093, column: 9, scope: !7118)
!7132 = !DILocation(line: 3097, column: 25, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 3097, column: 9)
!7134 = !DILocation(line: 3097, column: 45, scope: !7133)
!7135 = !DILocation(line: 3097, column: 9, scope: !6903)
!7136 = !DILocation(line: 3100, column: 9, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 3097, column: 63)
!7138 = !DILocation(line: 3104, column: 13, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 3104, column: 13)
!7140 = !DILocation(line: 3104, column: 21, scope: !7139)
!7141 = !DILocation(line: 3104, column: 42, scope: !7139)
!7142 = !DILocation(line: 3104, column: 51, scope: !7139)
!7143 = !DILocation(line: 3104, column: 33, scope: !7139)
!7144 = !DILocation(line: 3104, column: 13, scope: !7137)
!7145 = !DILocation(line: 3105, column: 33, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 3104, column: 72)
!7147 = !DILocation(line: 3106, column: 13, scope: !7146)
!7148 = !DILocation(line: 3109, column: 9, scope: !7146)
!7149 = !DILocation(line: 3112, column: 9, scope: !7137)
!7150 = !DILocation(line: 3113, column: 5, scope: !7137)
!7151 = !DILocation(line: 3114, column: 9, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 3113, column: 12)
!7153 = !DILocation(line: 3116, column: 1, scope: !6903)
!7154 = distinct !DISubprogram(name: "clusterHandleSlaveMigration", scope: !3, file: !3, line: 3145, type: !282, isLocal: false, isDefinition: true, scopeLine: 3145, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7155)
!7155 = !{!7156, !7157, !7158, !7159, !7160, !7161, !7162, !7163, !7164, !7166, !7167}
!7156 = !DILocalVariable(name: "max_slaves", arg: 1, scope: !7154, file: !3, line: 3145, type: !177)
!7157 = !DILocalVariable(name: "j", scope: !7154, file: !3, line: 3146, type: !177)
!7158 = !DILocalVariable(name: "okslaves", scope: !7154, file: !3, line: 3146, type: !177)
!7159 = !DILocalVariable(name: "mymaster", scope: !7154, file: !3, line: 3147, type: !378)
!7160 = !DILocalVariable(name: "target", scope: !7154, file: !3, line: 3147, type: !378)
!7161 = !DILocalVariable(name: "candidate", scope: !7154, file: !3, line: 3147, type: !378)
!7162 = !DILocalVariable(name: "di", scope: !7154, file: !3, line: 3148, type: !297)
!7163 = !DILocalVariable(name: "de", scope: !7154, file: !3, line: 3149, type: !340)
!7164 = !DILocalVariable(name: "node", scope: !7165, file: !3, line: 3175, type: !378)
!7165 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 3174, column: 40)
!7166 = !DILocalVariable(name: "okslaves", scope: !7165, file: !3, line: 3176, type: !177)
!7167 = !DILocalVariable(name: "is_orphaned", scope: !7165, file: !3, line: 3176, type: !177)
!7168 = !DILocation(line: 3145, column: 38, scope: !7154)
!7169 = !DILocation(line: 3146, column: 12, scope: !7154)
!7170 = !DILocation(line: 3147, column: 29, scope: !7154)
!7171 = !DILocation(line: 3147, column: 37, scope: !7154)
!7172 = !DILocation(line: 3147, column: 18, scope: !7154)
!7173 = !DILocation(line: 3147, column: 47, scope: !7154)
!7174 = !DILocation(line: 3147, column: 63, scope: !7154)
!7175 = !DILocation(line: 3152, column: 16, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 3152, column: 9)
!7177 = !DILocation(line: 3152, column: 25, scope: !7176)
!7178 = !DILocation(line: 3152, column: 31, scope: !7176)
!7179 = !DILocation(line: 3156, column: 18, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 3156, column: 9)
!7181 = !DILocation(line: 3152, column: 9, scope: !7154)
!7182 = !DILocation(line: 3146, column: 9, scope: !7154)
!7183 = !DILocation(line: 3157, column: 31, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 3157, column: 5)
!7185 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 3157, column: 5)
!7186 = !DILocation(line: 3157, column: 19, scope: !7184)
!7187 = !DILocation(line: 3157, column: 5, scope: !7185)
!7188 = !DILocation(line: 3158, column: 14, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 3158, column: 13)
!7190 = !DILocation(line: 3158, column: 46, scope: !7189)
!7191 = !DILocation(line: 3157, column: 43, scope: !7184)
!7192 = distinct !{!7192, !7187, !7193}
!7193 = !DILocation(line: 3159, column: 57, scope: !7185)
!7194 = distinct !{!7194, !3038}
!7195 = !DILocation(line: 3160, column: 28, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 3160, column: 9)
!7197 = !{!785, !709, i64 2952}
!7198 = !DILocation(line: 3160, column: 18, scope: !7196)
!7199 = !DILocation(line: 3160, column: 9, scope: !7154)
!7200 = !DILocation(line: 3173, column: 46, scope: !7154)
!7201 = !DILocation(line: 3173, column: 10, scope: !7154)
!7202 = !DILocation(line: 3148, column: 19, scope: !7154)
!7203 = !DILocation(line: 3174, column: 17, scope: !7154)
!7204 = !DILocation(line: 3149, column: 16, scope: !7154)
!7205 = !DILocation(line: 3174, column: 31, scope: !7154)
!7206 = !DILocation(line: 3174, column: 5, scope: !7154)
!7207 = !DILocation(line: 3175, column: 29, scope: !7165)
!7208 = !DILocation(line: 3175, column: 22, scope: !7165)
!7209 = !DILocation(line: 3176, column: 13, scope: !7165)
!7210 = !DILocation(line: 3176, column: 27, scope: !7165)
!7211 = !DILocation(line: 3182, column: 13, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 3182, column: 13)
!7213 = !DILocation(line: 3183, column: 13, scope: !7165)
!7214 = !DILocation(line: 3186, column: 13, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 3186, column: 13)
!7216 = !DILocation(line: 3186, column: 13, scope: !7165)
!7217 = !DILocation(line: 853, column: 47, scope: !2998, inlinedAt: !7218)
!7218 = distinct !DILocation(line: 3186, column: 44, scope: !7215)
!7219 = !DILocation(line: 854, column: 12, scope: !2998, inlinedAt: !7218)
!7220 = !DILocation(line: 854, column: 9, scope: !2998, inlinedAt: !7218)
!7221 = !DILocation(line: 856, column: 24, scope: !3007, inlinedAt: !7218)
!7222 = !DILocation(line: 856, column: 19, scope: !3007, inlinedAt: !7218)
!7223 = !DILocation(line: 856, column: 5, scope: !3008, inlinedAt: !7218)
!7224 = !DILocation(line: 857, column: 14, scope: !3012, inlinedAt: !7218)
!7225 = !DILocation(line: 857, column: 13, scope: !3007, inlinedAt: !7218)
!7226 = !DILocation(line: 856, column: 36, scope: !3007, inlinedAt: !7218)
!7227 = !DILocation(line: 3187, column: 22, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 3187, column: 13)
!7229 = !DILocation(line: 3187, column: 13, scope: !7165)
!7230 = !DILocation(line: 3189, column: 13, scope: !7165)
!7231 = !DILocation(line: 3190, column: 18, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 3190, column: 17)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 3189, column: 26)
!7234 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 3189, column: 13)
!7235 = !DILocation(line: 3190, column: 25, scope: !7232)
!7236 = !DILocation(line: 3190, column: 34, scope: !7232)
!7237 = !DILocation(line: 3190, column: 43, scope: !7232)
!7238 = !DILocation(line: 3190, column: 17, scope: !7233)
!7239 = !DILocation(line: 0, scope: !7154)
!7240 = !DILocation(line: 3194, column: 24, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 3194, column: 17)
!7242 = !DILocation(line: 3194, column: 18, scope: !7241)
!7243 = !DILocation(line: 3194, column: 17, scope: !7233)
!7244 = !DILocation(line: 3194, column: 61, scope: !7241)
!7245 = !DILocation(line: 3194, column: 59, scope: !7241)
!7246 = !DILocation(line: 3194, column: 39, scope: !7241)
!7247 = !DILocation(line: 3196, column: 19, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 3195, column: 16)
!7249 = !DILocation(line: 3196, column: 33, scope: !7248)
!7250 = !DILocation(line: 3202, column: 22, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 3202, column: 13)
!7252 = !DILocation(line: 3202, column: 13, scope: !7165)
!7253 = !DILocation(line: 3203, column: 35, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 3203, column: 13)
!7255 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 3203, column: 13)
!7256 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 3202, column: 37)
!7257 = !DILocation(line: 3203, column: 27, scope: !7254)
!7258 = !DILocation(line: 3203, column: 13, scope: !7255)
!7259 = !DILocation(line: 3204, column: 34, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 3204, column: 21)
!7261 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 3203, column: 51)
!7262 = !DILocation(line: 3204, column: 28, scope: !7260)
!7263 = !DILocation(line: 3205, column: 28, scope: !7260)
!7264 = !DILocation(line: 3204, column: 21, scope: !7260)
!7265 = !DILocation(line: 3206, column: 45, scope: !7260)
!7266 = !DILocation(line: 3204, column: 21, scope: !7261)
!7267 = !DILocation(line: 3208, column: 39, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 3207, column: 17)
!7269 = !DILocation(line: 3208, column: 33, scope: !7268)
!7270 = !DILocation(line: 3209, column: 17, scope: !7268)
!7271 = !DILocation(line: 3203, column: 47, scope: !7254)
!7272 = distinct !{!7272, !7258, !7273}
!7273 = !DILocation(line: 3210, column: 13, scope: !7255)
!7274 = !DILocation(line: 3172, column: 15, scope: !7154)
!7275 = distinct !{!7275, !7206, !7276}
!7276 = !DILocation(line: 3212, column: 5, scope: !7154)
!7277 = !DILocation(line: 3213, column: 5, scope: !7154)
!7278 = !DILocation(line: 3220, column: 9, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 3220, column: 9)
!7280 = !DILocation(line: 3220, column: 32, scope: !7279)
!7281 = !DILocation(line: 3220, column: 29, scope: !7279)
!7282 = !DILocation(line: 3220, column: 16, scope: !7279)
!7283 = !DILocation(line: 3221, column: 10, scope: !7279)
!7284 = !DILocation(line: 3221, column: 27, scope: !7279)
!7285 = !DILocation(line: 3221, column: 18, scope: !7279)
!7286 = !DILocation(line: 3221, column: 42, scope: !7279)
!7287 = !DILocation(line: 3221, column: 74, scope: !7279)
!7288 = !DILocation(line: 3222, column: 17, scope: !7279)
!7289 = !DILocation(line: 3222, column: 38, scope: !7279)
!7290 = !DILocation(line: 3220, column: 9, scope: !7154)
!7291 = !DILocation(line: 3225, column: 13, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 3223, column: 5)
!7293 = !DILocation(line: 3224, column: 9, scope: !7292)
!7294 = !DILocation(line: 3226, column: 9, scope: !7292)
!7295 = !DILocation(line: 3227, column: 5, scope: !7292)
!7296 = !DILocation(line: 3228, column: 1, scope: !7154)
!7297 = distinct !DISubprogram(name: "manualFailoverCheckTimeout", scope: !3, file: !3, line: 3276, type: !293, isLocal: false, isDefinition: true, scopeLine: 3276, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7298 = !DILocation(line: 3277, column: 16, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 3277, column: 9)
!7300 = !DILocation(line: 3277, column: 25, scope: !7299)
!7301 = !DILocation(line: 3277, column: 9, scope: !7299)
!7302 = !DILocation(line: 3277, column: 32, scope: !7299)
!7303 = !DILocation(line: 3277, column: 60, scope: !7299)
!7304 = !DILocation(line: 3277, column: 58, scope: !7299)
!7305 = !DILocation(line: 3277, column: 9, scope: !7297)
!7306 = !DILocation(line: 3278, column: 9, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 3277, column: 70)
!7308 = !DILocation(line: 3265, column: 16, scope: !2126, inlinedAt: !7309)
!7309 = distinct !DILocation(line: 3279, column: 9, scope: !7307)
!7310 = !DILocation(line: 3265, column: 25, scope: !2126, inlinedAt: !7309)
!7311 = !DILocation(line: 3265, column: 9, scope: !2126, inlinedAt: !7309)
!7312 = !DILocation(line: 3265, column: 32, scope: !2126, inlinedAt: !7309)
!7313 = !DILocation(line: 3265, column: 35, scope: !2126, inlinedAt: !7309)
!7314 = !DILocation(line: 3265, column: 9, scope: !1947, inlinedAt: !7309)
!7315 = !DILocation(line: 3266, column: 39, scope: !2133, inlinedAt: !7309)
!7316 = !DILocation(line: 3267, column: 9, scope: !2133, inlinedAt: !7309)
!7317 = !DILocation(line: 3268, column: 5, scope: !2133, inlinedAt: !7309)
!7318 = !DILocation(line: 3269, column: 12, scope: !1947, inlinedAt: !7309)
!7319 = !DILocation(line: 3269, column: 21, scope: !1947, inlinedAt: !7309)
!7320 = !DILocation(line: 3269, column: 28, scope: !1947, inlinedAt: !7309)
!7321 = !DILocation(line: 3270, column: 21, scope: !1947, inlinedAt: !7309)
!7322 = !DILocation(line: 3270, column: 34, scope: !1947, inlinedAt: !7309)
!7323 = !DILocation(line: 3271, column: 21, scope: !1947, inlinedAt: !7309)
!7324 = !DILocation(line: 3271, column: 30, scope: !1947, inlinedAt: !7309)
!7325 = !DILocation(line: 3272, column: 21, scope: !1947, inlinedAt: !7309)
!7326 = !DILocation(line: 3272, column: 38, scope: !1947, inlinedAt: !7309)
!7327 = !DILocation(line: 3280, column: 5, scope: !7307)
!7328 = !DILocation(line: 3281, column: 1, scope: !7297)
!7329 = distinct !DISubprogram(name: "clusterHandleManualFailover", scope: !3, file: !3, line: 3285, type: !293, isLocal: false, isDefinition: true, scopeLine: 3285, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7330 = !DILocation(line: 3287, column: 16, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 3287, column: 9)
!7332 = !DILocation(line: 3287, column: 25, scope: !7331)
!7333 = !DILocation(line: 3287, column: 32, scope: !7331)
!7334 = !DILocation(line: 3287, column: 9, scope: !7329)
!7335 = !DILocation(line: 3291, column: 25, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 3291, column: 9)
!7337 = !DILocation(line: 3291, column: 9, scope: !7336)
!7338 = !DILocation(line: 3291, column: 9, scope: !7329)
!7339 = !DILocation(line: 3293, column: 25, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 3293, column: 9)
!7341 = !DILocation(line: 3293, column: 42, scope: !7340)
!7342 = !DILocation(line: 3293, column: 9, scope: !7329)
!7343 = !DILocation(line: 3295, column: 45, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 3295, column: 9)
!7345 = !DILocation(line: 3295, column: 42, scope: !7344)
!7346 = !DILocation(line: 3295, column: 9, scope: !7329)
!7347 = !DILocation(line: 3298, column: 16, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 3295, column: 74)
!7349 = !DILocation(line: 3298, column: 25, scope: !7348)
!7350 = !DILocation(line: 3298, column: 38, scope: !7348)
!7351 = !DILocation(line: 3299, column: 9, scope: !7348)
!7352 = !DILocation(line: 3302, column: 5, scope: !7348)
!7353 = !DILocation(line: 3303, column: 1, scope: !7329)
!7354 = !DILocation(line: 3313, column: 9, scope: !292)
!7355 = !DILocation(line: 3317, column: 14, scope: !292)
!7356 = !DILocation(line: 3317, column: 34, scope: !292)
!7357 = !DILocation(line: 3317, column: 28, scope: !292)
!7358 = !DILocation(line: 3318, column: 18, scope: !292)
!7359 = !DILocation(line: 3322, column: 14, scope: !292)
!7360 = !DILocation(line: 3329, column: 32, scope: !382)
!7361 = !DILocation(line: 3329, column: 15, scope: !382)
!7362 = !DILocation(line: 3330, column: 13, scope: !382)
!7363 = !DILocation(line: 3332, column: 13, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !382, file: !3, line: 3332, column: 13)
!7365 = !DILocation(line: 3332, column: 21, scope: !7364)
!7366 = !DILocation(line: 3332, column: 40, scope: !7364)
!7367 = !DILocation(line: 3332, column: 29, scope: !7364)
!7368 = !DILocation(line: 3333, column: 26, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 3333, column: 18)
!7370 = !DILocation(line: 3333, column: 45, scope: !7369)
!7371 = !DILocation(line: 3333, column: 34, scope: !7369)
!7372 = !DILocation(line: 3334, column: 26, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 3334, column: 18)
!7374 = !DILocation(line: 3334, column: 40, scope: !7373)
!7375 = !DILocation(line: 3336, column: 13, scope: !382)
!7376 = !DILocation(line: 3337, column: 17, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 3337, column: 17)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 3336, column: 22)
!7379 = distinct !DILexicalBlock(scope: !382, file: !3, line: 3336, column: 13)
!7380 = !DILocation(line: 3337, column: 17, scope: !7378)
!7381 = !DILocation(line: 3337, column: 26, scope: !7377)
!7382 = !DILocation(line: 3338, column: 21, scope: !7378)
!7383 = !DILocation(line: 3340, column: 17, scope: !7378)
!7384 = !DILocation(line: 3344, column: 27, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 3340, column: 26)
!7386 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 3340, column: 17)
!7387 = !DILocation(line: 3344, column: 25, scope: !7385)
!7388 = !DILocation(line: 3345, column: 25, scope: !7385)
!7389 = !DILocation(line: 3345, column: 43, scope: !7385)
!7390 = !DILocation(line: 3345, column: 17, scope: !7385)
!7391 = !DILocation(line: 3346, column: 17, scope: !7385)
!7392 = !DILocation(line: 3346, column: 46, scope: !7385)
!7393 = !DILocation(line: 3347, column: 13, scope: !7385)
!7394 = !DILocation(line: 3348, column: 17, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 3347, column: 20)
!7396 = !DILocation(line: 3348, column: 31, scope: !7395)
!7397 = !DILocation(line: 3357, column: 32, scope: !292)
!7398 = !DILocation(line: 3320, column: 14, scope: !292)
!7399 = !DILocation(line: 3358, column: 9, scope: !292)
!7400 = !DILocation(line: 419, column: 20, scope: !1700, inlinedAt: !7401)
!7401 = distinct !DILocation(line: 3361, column: 5, scope: !292)
!7402 = !DILocation(line: 419, column: 28, scope: !1700, inlinedAt: !7401)
!7403 = !DILocation(line: 419, column: 9, scope: !1700, inlinedAt: !7401)
!7404 = !DILocation(line: 420, column: 29, scope: !1700, inlinedAt: !7401)
!7405 = !DILocation(line: 420, column: 22, scope: !1700, inlinedAt: !7401)
!7406 = !DILocation(line: 420, column: 9, scope: !1700, inlinedAt: !7401)
!7407 = !DILocation(line: 422, column: 19, scope: !1700, inlinedAt: !7401)
!7408 = !DILocation(line: 423, column: 19, scope: !1700, inlinedAt: !7401)
!7409 = !DILocation(line: 424, column: 23, scope: !1714, inlinedAt: !7401)
!7410 = !DILocation(line: 0, scope: !292)
!7411 = !DILocation(line: 424, column: 9, scope: !1700, inlinedAt: !7401)
!7412 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !7413)
!7413 = distinct !DILocation(line: 425, column: 9, scope: !1721, inlinedAt: !7401)
!7414 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !7413)
!7415 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !7413)
!7416 = !DILocation(line: 427, column: 5, scope: !1721, inlinedAt: !7401)
!7417 = !DILocation(line: 3366, column: 46, scope: !292)
!7418 = !DILocation(line: 3366, column: 10, scope: !292)
!7419 = !DILocation(line: 3311, column: 19, scope: !292)
!7420 = !DILocation(line: 3367, column: 12, scope: !292)
!7421 = !DILocation(line: 3367, column: 21, scope: !292)
!7422 = !DILocation(line: 3367, column: 39, scope: !292)
!7423 = !DILocation(line: 3368, column: 17, scope: !292)
!7424 = !DILocation(line: 3312, column: 16, scope: !292)
!7425 = !DILocation(line: 3368, column: 31, scope: !292)
!7426 = !DILocation(line: 3368, column: 5, scope: !292)
!7427 = !DILocation(line: 3369, column: 29, scope: !385)
!7428 = !DILocation(line: 3369, column: 22, scope: !385)
!7429 = !DILocation(line: 3373, column: 19, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !385, file: !3, line: 3373, column: 13)
!7431 = !DILocation(line: 3373, column: 25, scope: !7430)
!7432 = !DILocation(line: 3373, column: 13, scope: !385)
!7433 = distinct !{!7433, !7426, !7434}
!7434 = !DILocation(line: 3434, column: 5, scope: !292)
!7435 = !DILocation(line: 3375, column: 25, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !385, file: !3, line: 3375, column: 13)
!7437 = !DILocation(line: 3375, column: 13, scope: !385)
!7438 = !DILocation(line: 3376, column: 20, scope: !7436)
!7439 = !DILocation(line: 3376, column: 29, scope: !7436)
!7440 = !DILocation(line: 3376, column: 46, scope: !7436)
!7441 = !DILocation(line: 3376, column: 13, scope: !7436)
!7442 = !DILocation(line: 3380, column: 13, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !385, file: !3, line: 3380, column: 13)
!7444 = !DILocation(line: 3380, column: 35, scope: !7443)
!7445 = !DILocation(line: 3380, column: 50, scope: !7443)
!7446 = !DILocation(line: 3380, column: 42, scope: !7443)
!7447 = !DILocation(line: 3380, column: 56, scope: !7443)
!7448 = !DILocation(line: 3380, column: 13, scope: !385)
!7449 = !DILocation(line: 3381, column: 13, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 3380, column: 77)
!7451 = !DILocation(line: 3382, column: 13, scope: !7450)
!7452 = !DILocation(line: 3385, column: 19, scope: !388)
!7453 = !DILocation(line: 3385, column: 24, scope: !388)
!7454 = !DILocation(line: 3385, column: 13, scope: !385)
!7455 = !DILocation(line: 3390, column: 60, scope: !387)
!7456 = !DILocation(line: 3391, column: 23, scope: !387)
!7457 = !DILocation(line: 3391, column: 30, scope: !387)
!7458 = !{!785, !709, i64 352}
!7459 = !DILocation(line: 3390, column: 18, scope: !387)
!7460 = !DILocation(line: 3386, column: 17, scope: !387)
!7461 = !DILocation(line: 3392, column: 20, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !387, file: !3, line: 3392, column: 17)
!7463 = !DILocation(line: 3392, column: 17, scope: !387)
!7464 = !DILocation(line: 3398, column: 27, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 3398, column: 21)
!7466 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 3392, column: 27)
!7467 = !DILocation(line: 3398, column: 37, scope: !7465)
!7468 = !DILocation(line: 3398, column: 21, scope: !7466)
!7469 = !DILocation(line: 3398, column: 61, scope: !7465)
!7470 = !DILocation(line: 3398, column: 59, scope: !7465)
!7471 = !DILocation(line: 3398, column: 43, scope: !7465)
!7472 = !DILocation(line: 3401, column: 27, scope: !7466)
!7473 = !DILocation(line: 3399, column: 17, scope: !7466)
!7474 = !DILocation(line: 590, column: 45, scope: !2089, inlinedAt: !7475)
!7475 = distinct !DILocation(line: 3404, column: 20, scope: !387)
!7476 = !DILocation(line: 591, column: 25, scope: !2089, inlinedAt: !7475)
!7477 = !DILocation(line: 591, column: 18, scope: !2089, inlinedAt: !7475)
!7478 = !DILocation(line: 592, column: 19, scope: !2089, inlinedAt: !7475)
!7479 = !DILocation(line: 592, column: 11, scope: !2089, inlinedAt: !7475)
!7480 = !DILocation(line: 592, column: 17, scope: !2089, inlinedAt: !7475)
!7481 = !DILocation(line: 593, column: 20, scope: !2089, inlinedAt: !7475)
!7482 = !DILocation(line: 593, column: 11, scope: !2089, inlinedAt: !7475)
!7483 = !DILocation(line: 593, column: 18, scope: !2089, inlinedAt: !7475)
!7484 = !DILocation(line: 594, column: 20, scope: !2089, inlinedAt: !7475)
!7485 = !DILocation(line: 594, column: 11, scope: !2089, inlinedAt: !7475)
!7486 = !DILocation(line: 594, column: 18, scope: !2089, inlinedAt: !7475)
!7487 = !DILocation(line: 595, column: 11, scope: !2089, inlinedAt: !7475)
!7488 = !DILocation(line: 595, column: 16, scope: !2089, inlinedAt: !7475)
!7489 = !DILocation(line: 596, column: 11, scope: !2089, inlinedAt: !7475)
!7490 = !DILocation(line: 3388, column: 26, scope: !387)
!7491 = !DILocation(line: 3405, column: 22, scope: !387)
!7492 = !DILocation(line: 3406, column: 24, scope: !387)
!7493 = !DILocation(line: 3407, column: 38, scope: !387)
!7494 = !DILocation(line: 3407, column: 13, scope: !387)
!7495 = !DILocation(line: 3415, column: 35, scope: !387)
!7496 = !DILocation(line: 3387, column: 22, scope: !387)
!7497 = !DILocation(line: 3416, column: 41, scope: !387)
!7498 = !DILocation(line: 3416, column: 35, scope: !387)
!7499 = !DILocation(line: 3416, column: 13, scope: !387)
!7500 = !DILocation(line: 3418, column: 17, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !387, file: !3, line: 3418, column: 17)
!7502 = !DILocation(line: 3418, column: 17, scope: !387)
!7503 = !DILocation(line: 3422, column: 33, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 3418, column: 32)
!7505 = !DILocation(line: 3423, column: 13, scope: !7504)
!7506 = !DILocation(line: 3429, column: 25, scope: !387)
!7507 = !DILocation(line: 3432, column: 21, scope: !387)
!7508 = !DILocation(line: 3432, column: 49, scope: !387)
!7509 = !DILocation(line: 3431, column: 13, scope: !387)
!7510 = !DILocation(line: 3435, column: 5, scope: !292)
!7511 = !DILocation(line: 3439, column: 11, scope: !393)
!7512 = !DILocation(line: 3439, column: 21, scope: !393)
!7513 = !DILocation(line: 3439, column: 9, scope: !292)
!7514 = !DILocation(line: 3440, column: 13, scope: !392)
!7515 = !DILocation(line: 3445, column: 42, scope: !395)
!7516 = !DILocation(line: 3445, column: 51, scope: !395)
!7517 = !DILocation(line: 3445, column: 18, scope: !395)
!7518 = !DILocation(line: 3446, column: 33, scope: !395)
!7519 = !DILocation(line: 3446, column: 26, scope: !395)
!7520 = !DILocation(line: 3449, column: 23, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !395, file: !3, line: 3449, column: 17)
!7522 = !DILocation(line: 3449, column: 28, scope: !7521)
!7523 = !DILocation(line: 3449, column: 36, scope: !7521)
!7524 = !DILocation(line: 3449, column: 45, scope: !7521)
!7525 = !DILocation(line: 3449, column: 55, scope: !7521)
!7526 = !DILocation(line: 3449, column: 17, scope: !395)
!7527 = !DILocation(line: 3450, column: 23, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !395, file: !3, line: 3450, column: 17)
!7529 = !DILocation(line: 3450, column: 29, scope: !7528)
!7530 = !DILocation(line: 3450, column: 17, scope: !395)
!7531 = !DILocation(line: 3454, column: 34, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 3452, column: 74)
!7533 = distinct !DILexicalBlock(scope: !395, file: !3, line: 3452, column: 17)
!7534 = !DILocation(line: 3455, column: 13, scope: !7532)
!7535 = !DILocation(line: 0, scope: !7532)
!7536 = !DILocation(line: 3458, column: 54, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 3457, column: 28)
!7538 = distinct !DILexicalBlock(scope: !392, file: !3, line: 3457, column: 13)
!7539 = !DILocation(line: 3458, column: 13, scope: !7537)
!7540 = !DILocation(line: 3459, column: 44, scope: !7537)
!7541 = !DILocation(line: 3459, column: 13, scope: !7537)
!7542 = !DILocation(line: 3460, column: 9, scope: !7537)
!7543 = !DILocation(line: 3314, column: 9, scope: !292)
!7544 = !DILocation(line: 3315, column: 9, scope: !292)
!7545 = !DILocation(line: 3316, column: 9, scope: !292)
!7546 = !DILocation(line: 3472, column: 37, scope: !292)
!7547 = !DILocation(line: 3472, column: 46, scope: !292)
!7548 = !DILocation(line: 3472, column: 10, scope: !292)
!7549 = !DILocation(line: 3473, column: 17, scope: !292)
!7550 = !DILocation(line: 3473, column: 31, scope: !292)
!7551 = !DILocation(line: 3473, column: 5, scope: !292)
!7552 = !DILocation(line: 3474, column: 29, scope: !399)
!7553 = !DILocation(line: 3474, column: 22, scope: !399)
!7554 = !DILocation(line: 3475, column: 15, scope: !399)
!7555 = !DILocation(line: 3478, column: 19, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3478, column: 13)
!7557 = !DILocation(line: 3478, column: 25, scope: !7556)
!7558 = !DILocation(line: 3478, column: 13, scope: !399)
!7559 = distinct !{!7559, !7551, !7560}
!7560 = !DILocation(line: 3556, column: 5, scope: !292)
!7561 = !DILocation(line: 3484, column: 13, scope: !403)
!7562 = !DILocation(line: 3484, column: 36, scope: !403)
!7563 = !DILocation(line: 3484, column: 33, scope: !403)
!7564 = !DILocation(line: 3484, column: 59, scope: !403)
!7565 = !DILocation(line: 853, column: 47, scope: !2998, inlinedAt: !7566)
!7566 = distinct !DILocation(line: 3485, column: 28, scope: !402)
!7567 = !DILocation(line: 854, column: 12, scope: !2998, inlinedAt: !7566)
!7568 = !DILocation(line: 854, column: 9, scope: !2998, inlinedAt: !7566)
!7569 = !DILocation(line: 856, column: 24, scope: !3007, inlinedAt: !7566)
!7570 = !DILocation(line: 856, column: 19, scope: !3007, inlinedAt: !7566)
!7571 = !DILocation(line: 856, column: 5, scope: !3008, inlinedAt: !7566)
!7572 = !DILocation(line: 857, column: 14, scope: !3012, inlinedAt: !7566)
!7573 = !DILocation(line: 857, column: 13, scope: !3007, inlinedAt: !7566)
!7574 = !DILocation(line: 856, column: 36, scope: !3007, inlinedAt: !7566)
!7575 = !DILocation(line: 3490, column: 26, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !402, file: !3, line: 3490, column: 17)
!7577 = !DILocation(line: 3485, column: 17, scope: !402)
!7578 = !DILocation(line: 3490, column: 31, scope: !7576)
!7579 = !DILocation(line: 3490, column: 40, scope: !7576)
!7580 = !DILocation(line: 3490, column: 49, scope: !7576)
!7581 = !DILocation(line: 3490, column: 53, scope: !7576)
!7582 = !DILocation(line: 3490, column: 17, scope: !402)
!7583 = !DILocation(line: 3495, column: 26, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !402, file: !3, line: 3495, column: 17)
!7585 = !DILocation(line: 3495, column: 17, scope: !402)
!7586 = !DILocation(line: 3496, column: 37, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !402, file: !3, line: 3496, column: 17)
!7588 = !DILocation(line: 3496, column: 48, scope: !7587)
!7589 = !DILocation(line: 3496, column: 56, scope: !7587)
!7590 = !DILocation(line: 3496, column: 17, scope: !402)
!7591 = !DILocation(line: 3503, column: 19, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3503, column: 13)
!7593 = !DILocation(line: 3503, column: 13, scope: !7592)
!7594 = !DILocation(line: 3503, column: 24, scope: !7592)
!7595 = !DILocation(line: 3504, column: 31, scope: !7592)
!7596 = !DILocation(line: 3504, column: 17, scope: !7592)
!7597 = !DILocation(line: 3505, column: 20, scope: !7592)
!7598 = !DILocation(line: 3504, column: 37, scope: !7592)
!7599 = !DILocation(line: 3505, column: 41, scope: !7592)
!7600 = !DILocation(line: 3506, column: 19, scope: !7592)
!7601 = !DILocation(line: 3506, column: 13, scope: !7592)
!7602 = !DILocation(line: 3506, column: 29, scope: !7592)
!7603 = !DILocation(line: 3507, column: 19, scope: !7592)
!7604 = !DILocation(line: 3507, column: 33, scope: !7592)
!7605 = !DILocation(line: 3507, column: 51, scope: !7592)
!7606 = !DILocation(line: 3509, column: 17, scope: !7592)
!7607 = !DILocation(line: 3509, column: 64, scope: !7592)
!7608 = !DILocation(line: 3509, column: 35, scope: !7592)
!7609 = !DILocation(line: 3503, column: 13, scope: !399)
!7610 = !DILocation(line: 603, column: 35, scope: !2530, inlinedAt: !7611)
!7611 = distinct !DILocation(line: 3512, column: 13, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 3510, column: 9)
!7613 = !DILocation(line: 604, column: 15, scope: !2537, inlinedAt: !7611)
!7614 = !DILocation(line: 604, column: 18, scope: !2537, inlinedAt: !7611)
!7615 = !DILocation(line: 604, column: 9, scope: !2530, inlinedAt: !7611)
!7616 = !DILocation(line: 605, column: 34, scope: !2541, inlinedAt: !7611)
!7617 = !DILocation(line: 605, column: 9, scope: !2541, inlinedAt: !7611)
!7618 = !DILocation(line: 606, column: 5, scope: !2541, inlinedAt: !7611)
!7619 = !DILocation(line: 607, column: 19, scope: !2530, inlinedAt: !7611)
!7620 = !DILocation(line: 607, column: 5, scope: !2530, inlinedAt: !7611)
!7621 = !DILocation(line: 608, column: 19, scope: !2530, inlinedAt: !7611)
!7622 = !DILocation(line: 608, column: 5, scope: !2530, inlinedAt: !7611)
!7623 = !DILocation(line: 609, column: 15, scope: !2549, inlinedAt: !7611)
!7624 = !DILocation(line: 609, column: 9, scope: !2549, inlinedAt: !7611)
!7625 = !DILocation(line: 609, column: 9, scope: !2530, inlinedAt: !7611)
!7626 = !DILocation(line: 610, column: 21, scope: !2549, inlinedAt: !7611)
!7627 = !DILocation(line: 610, column: 26, scope: !2549, inlinedAt: !7611)
!7628 = !DILocation(line: 610, column: 9, scope: !2549, inlinedAt: !7611)
!7629 = !DILocation(line: 611, column: 17, scope: !2530, inlinedAt: !7611)
!7630 = !DILocation(line: 611, column: 5, scope: !2530, inlinedAt: !7611)
!7631 = !DILocation(line: 612, column: 11, scope: !2530, inlinedAt: !7611)
!7632 = !DILocation(line: 612, column: 5, scope: !2530, inlinedAt: !7611)
!7633 = !DILocation(line: 3519, column: 19, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3519, column: 13)
!7635 = !DILocation(line: 3519, column: 13, scope: !7634)
!7636 = !DILocation(line: 3519, column: 24, scope: !7634)
!7637 = !DILocation(line: 3520, column: 19, scope: !7634)
!7638 = !DILocation(line: 3520, column: 29, scope: !7634)
!7639 = !DILocation(line: 3520, column: 34, scope: !7634)
!7640 = !DILocation(line: 3521, column: 26, scope: !7634)
!7641 = !DILocation(line: 3521, column: 18, scope: !7634)
!7642 = !DILocation(line: 3521, column: 50, scope: !7634)
!7643 = !DILocation(line: 3521, column: 70, scope: !7634)
!7644 = !DILocation(line: 3521, column: 41, scope: !7634)
!7645 = !DILocation(line: 3519, column: 13, scope: !399)
!7646 = !DILocation(line: 3523, column: 13, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 3522, column: 9)
!7648 = !DILocation(line: 3524, column: 13, scope: !7647)
!7649 = !DILocation(line: 3529, column: 20, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3529, column: 13)
!7651 = !DILocation(line: 3529, column: 29, scope: !7650)
!7652 = !DILocation(line: 3529, column: 13, scope: !7650)
!7653 = !DILocation(line: 3529, column: 36, scope: !7650)
!7654 = !DILocation(line: 3530, column: 13, scope: !7650)
!7655 = !DILocation(line: 3530, column: 34, scope: !7650)
!7656 = !DILocation(line: 3531, column: 29, scope: !7650)
!7657 = !DILocation(line: 3531, column: 38, scope: !7650)
!7658 = !DILocation(line: 3531, column: 46, scope: !7650)
!7659 = !DILocation(line: 3534, column: 13, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 3533, column: 9)
!7661 = !DILocation(line: 3535, column: 13, scope: !7660)
!7662 = !DILocation(line: 3539, column: 19, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3539, column: 13)
!7664 = !DILocation(line: 3539, column: 29, scope: !7663)
!7665 = !DILocation(line: 3539, column: 13, scope: !399)
!7666 = !DILocation(line: 3544, column: 21, scope: !399)
!7667 = !DILocation(line: 3476, column: 18, scope: !399)
!7668 = !DILocation(line: 3546, column: 28, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3546, column: 13)
!7670 = !DILocation(line: 3546, column: 19, scope: !7669)
!7671 = !DILocation(line: 3546, column: 13, scope: !399)
!7672 = !DILocation(line: 3549, column: 25, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 3549, column: 17)
!7674 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 3546, column: 50)
!7675 = !DILocation(line: 3549, column: 31, scope: !7673)
!7676 = !DILocation(line: 3549, column: 17, scope: !7674)
!7677 = !DILocation(line: 3551, column: 21, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 3549, column: 74)
!7679 = !DILocation(line: 3550, column: 17, scope: !7678)
!7680 = !DILocation(line: 3552, column: 29, scope: !7678)
!7681 = !DILocation(line: 3554, column: 13, scope: !7678)
!7682 = !DILocation(line: 3471, column: 17, scope: !292)
!7683 = !DILocation(line: 3470, column: 16, scope: !292)
!7684 = !DILocation(line: 3469, column: 22, scope: !292)
!7685 = !DILocation(line: 3557, column: 5, scope: !292)
!7686 = !DILocation(line: 3562, column: 9, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3562, column: 9)
!7688 = !DILocation(line: 3563, column: 16, scope: !7687)
!7689 = !DILocation(line: 3563, column: 27, scope: !7687)
!7690 = !DILocation(line: 3562, column: 29, scope: !7687)
!7691 = !DILocation(line: 3564, column: 17, scope: !7687)
!7692 = !DILocation(line: 3564, column: 9, scope: !7687)
!7693 = !DILocation(line: 3564, column: 25, scope: !7687)
!7694 = !DILocation(line: 3565, column: 9, scope: !7687)
!7695 = !DILocation(line: 3562, column: 9, scope: !292)
!7696 = !DILocation(line: 3567, column: 30, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 3566, column: 5)
!7698 = !DILocation(line: 3567, column: 68, scope: !7697)
!7699 = !DILocation(line: 3567, column: 9, scope: !7697)
!7700 = !DILocation(line: 3568, column: 5, scope: !7697)
!7701 = !DILocation(line: 3277, column: 16, scope: !7299, inlinedAt: !7702)
!7702 = distinct !DILocation(line: 3571, column: 5, scope: !292)
!7703 = !DILocation(line: 3277, column: 25, scope: !7299, inlinedAt: !7702)
!7704 = !DILocation(line: 3277, column: 9, scope: !7299, inlinedAt: !7702)
!7705 = !DILocation(line: 3277, column: 32, scope: !7299, inlinedAt: !7702)
!7706 = !DILocation(line: 3277, column: 60, scope: !7299, inlinedAt: !7702)
!7707 = !DILocation(line: 3277, column: 58, scope: !7299, inlinedAt: !7702)
!7708 = !DILocation(line: 3277, column: 9, scope: !7297, inlinedAt: !7702)
!7709 = !DILocation(line: 3278, column: 9, scope: !7307, inlinedAt: !7702)
!7710 = !DILocation(line: 3265, column: 16, scope: !2126, inlinedAt: !7711)
!7711 = distinct !DILocation(line: 3279, column: 9, scope: !7307, inlinedAt: !7702)
!7712 = !DILocation(line: 3265, column: 25, scope: !2126, inlinedAt: !7711)
!7713 = !DILocation(line: 3265, column: 9, scope: !2126, inlinedAt: !7711)
!7714 = !DILocation(line: 3265, column: 32, scope: !2126, inlinedAt: !7711)
!7715 = !DILocation(line: 3265, column: 35, scope: !2126, inlinedAt: !7711)
!7716 = !DILocation(line: 3265, column: 9, scope: !1947, inlinedAt: !7711)
!7717 = !DILocation(line: 3266, column: 39, scope: !2133, inlinedAt: !7711)
!7718 = !DILocation(line: 3267, column: 9, scope: !2133, inlinedAt: !7711)
!7719 = !DILocation(line: 3268, column: 5, scope: !2133, inlinedAt: !7711)
!7720 = !DILocation(line: 3269, column: 12, scope: !1947, inlinedAt: !7711)
!7721 = !DILocation(line: 3269, column: 21, scope: !1947, inlinedAt: !7711)
!7722 = !DILocation(line: 3269, column: 28, scope: !1947, inlinedAt: !7711)
!7723 = !DILocation(line: 3270, column: 21, scope: !1947, inlinedAt: !7711)
!7724 = !DILocation(line: 3270, column: 34, scope: !1947, inlinedAt: !7711)
!7725 = !DILocation(line: 3271, column: 21, scope: !1947, inlinedAt: !7711)
!7726 = !DILocation(line: 3271, column: 30, scope: !1947, inlinedAt: !7711)
!7727 = !DILocation(line: 3272, column: 21, scope: !1947, inlinedAt: !7711)
!7728 = !DILocation(line: 3272, column: 38, scope: !1947, inlinedAt: !7711)
!7729 = !DILocation(line: 3280, column: 5, scope: !7307, inlinedAt: !7702)
!7730 = !DILocation(line: 3573, column: 9, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3573, column: 9)
!7732 = !DILocation(line: 3573, column: 9, scope: !292)
!7733 = !DILocation(line: 3287, column: 16, scope: !7331, inlinedAt: !7734)
!7734 = distinct !DILocation(line: 3574, column: 9, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 3573, column: 30)
!7736 = !DILocation(line: 3287, column: 25, scope: !7331, inlinedAt: !7734)
!7737 = !DILocation(line: 3287, column: 32, scope: !7331, inlinedAt: !7734)
!7738 = !DILocation(line: 3287, column: 9, scope: !7329, inlinedAt: !7734)
!7739 = !DILocation(line: 3291, column: 25, scope: !7336, inlinedAt: !7734)
!7740 = !DILocation(line: 3291, column: 9, scope: !7336, inlinedAt: !7734)
!7741 = !DILocation(line: 3291, column: 9, scope: !7329, inlinedAt: !7734)
!7742 = !DILocation(line: 3293, column: 25, scope: !7340, inlinedAt: !7734)
!7743 = !DILocation(line: 3293, column: 42, scope: !7340, inlinedAt: !7734)
!7744 = !DILocation(line: 3293, column: 9, scope: !7329, inlinedAt: !7734)
!7745 = !DILocation(line: 3295, column: 45, scope: !7344, inlinedAt: !7734)
!7746 = !DILocation(line: 3295, column: 42, scope: !7344, inlinedAt: !7734)
!7747 = !DILocation(line: 3295, column: 9, scope: !7329, inlinedAt: !7734)
!7748 = !DILocation(line: 3298, column: 16, scope: !7348, inlinedAt: !7734)
!7749 = !DILocation(line: 3298, column: 25, scope: !7348, inlinedAt: !7734)
!7750 = !DILocation(line: 3298, column: 38, scope: !7348, inlinedAt: !7734)
!7751 = !DILocation(line: 3299, column: 9, scope: !7348, inlinedAt: !7734)
!7752 = !DILocation(line: 3302, column: 5, scope: !7348, inlinedAt: !7734)
!7753 = !DILocation(line: 3575, column: 22, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 3575, column: 13)
!7755 = !DILocation(line: 3575, column: 43, scope: !7754)
!7756 = !DILocation(line: 3575, column: 13, scope: !7735)
!7757 = !DILocation(line: 3576, column: 13, scope: !7754)
!7758 = !DILocation(line: 3582, column: 13, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 3582, column: 13)
!7760 = !DILocation(line: 3582, column: 44, scope: !7759)
!7761 = !DILocation(line: 3582, column: 30, scope: !7759)
!7762 = !DILocation(line: 3582, column: 64, scope: !7759)
!7763 = !DILocation(line: 3583, column: 13, scope: !7759)
!7764 = !DILocation(line: 3586, column: 9, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3586, column: 9)
!7766 = !DILocation(line: 3586, column: 22, scope: !7765)
!7767 = !DILocation(line: 3586, column: 32, scope: !7765)
!7768 = !DILocation(line: 3586, column: 41, scope: !7765)
!7769 = !DILocation(line: 3586, column: 47, scope: !7765)
!7770 = !DILocation(line: 3586, column: 9, scope: !292)
!7771 = !DILocation(line: 3587, column: 9, scope: !7765)
!7772 = !DILocation(line: 3588, column: 1, scope: !292)
!7773 = !DILocation(line: 3452, column: 31, scope: !7533)
!7774 = !DILocation(line: 0, scope: !7533)
!7775 = !DILocation(line: 3452, column: 51, scope: !7533)
!7776 = !DILocation(line: 3452, column: 39, scope: !7533)
!7777 = !DILocation(line: 3452, column: 59, scope: !7533)
!7778 = !DILocation(line: 3452, column: 17, scope: !395)
!7779 = !DILocation(line: 3457, column: 13, scope: !7538)
!7780 = !DILocation(line: 3457, column: 13, scope: !392)
!7781 = distinct !DISubprogram(name: "clusterBeforeSleep", scope: !3, file: !3, line: 3595, type: !293, isLocal: false, isDefinition: true, scopeLine: 3595, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7782)
!7782 = !{!7783}
!7783 = !DILocalVariable(name: "fsync", scope: !7784, file: !3, line: 3607, type: !177)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 3606, column: 71)
!7785 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 3606, column: 9)
!7786 = !DILocation(line: 3598, column: 16, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 3598, column: 9)
!7788 = !DILocation(line: 3598, column: 25, scope: !7787)
!7789 = !DILocation(line: 3598, column: 43, scope: !7787)
!7790 = !DILocation(line: 3598, column: 9, scope: !7781)
!7791 = !DILocation(line: 3599, column: 9, scope: !7787)
!7792 = !DILocation(line: 3602, column: 16, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 3602, column: 9)
!7794 = !DILocation(line: 3602, column: 25, scope: !7793)
!7795 = !DILocation(line: 3602, column: 43, scope: !7793)
!7796 = !DILocation(line: 3602, column: 9, scope: !7781)
!7797 = !DILocation(line: 3603, column: 9, scope: !7793)
!7798 = !DILocation(line: 3606, column: 16, scope: !7785)
!7799 = !DILocation(line: 3606, column: 25, scope: !7785)
!7800 = !DILocation(line: 3606, column: 43, scope: !7785)
!7801 = !DILocation(line: 3606, column: 9, scope: !7781)
!7802 = !DILocation(line: 3607, column: 55, scope: !7784)
!7803 = !DILocation(line: 3607, column: 13, scope: !7784)
!7804 = !DILocation(line: 360, column: 33, scope: !1653, inlinedAt: !7805)
!7805 = distinct !DILocation(line: 3609, column: 9, scope: !7784)
!7806 = !DILocation(line: 361, column: 9, scope: !1658, inlinedAt: !7805)
!7807 = !DILocation(line: 361, column: 37, scope: !1658, inlinedAt: !7805)
!7808 = !DILocation(line: 361, column: 9, scope: !1653, inlinedAt: !7805)
!7809 = !DILocation(line: 3614, column: 12, scope: !7781)
!7810 = !DILocation(line: 3614, column: 21, scope: !7781)
!7811 = !DILocation(line: 362, column: 9, scope: !1662, inlinedAt: !7805)
!7812 = !DILocation(line: 363, column: 9, scope: !1662, inlinedAt: !7805)
!7813 = !DILocation(line: 3614, column: 39, scope: !7781)
!7814 = !DILocation(line: 3615, column: 1, scope: !7781)
!7815 = distinct !DISubprogram(name: "bitmapSetBit", scope: !3, file: !3, line: 3634, type: !2236, isLocal: false, isDefinition: true, scopeLine: 3634, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7816)
!7816 = !{!7817, !7818, !7819, !7820}
!7817 = !DILocalVariable(name: "bitmap", arg: 1, scope: !7815, file: !3, line: 3634, type: !246)
!7818 = !DILocalVariable(name: "pos", arg: 2, scope: !7815, file: !3, line: 3634, type: !177)
!7819 = !DILocalVariable(name: "byte", scope: !7815, file: !3, line: 3635, type: !8)
!7820 = !DILocalVariable(name: "bit", scope: !7815, file: !3, line: 3636, type: !177)
!7821 = !DILocation(line: 3634, column: 34, scope: !7815)
!7822 = !DILocation(line: 3634, column: 46, scope: !7815)
!7823 = !DILocation(line: 3635, column: 21, scope: !7815)
!7824 = !DILocation(line: 3635, column: 18, scope: !7815)
!7825 = !DILocation(line: 3635, column: 11, scope: !7815)
!7826 = !DILocation(line: 3636, column: 18, scope: !7815)
!7827 = !DILocation(line: 3636, column: 9, scope: !7815)
!7828 = !DILocation(line: 3637, column: 22, scope: !7815)
!7829 = !DILocation(line: 3637, column: 5, scope: !7815)
!7830 = !DILocation(line: 3637, column: 18, scope: !7815)
!7831 = !DILocation(line: 3638, column: 1, scope: !7815)
!7832 = !DILocation(line: 3641, column: 36, scope: !2235)
!7833 = !DILocation(line: 3641, column: 48, scope: !2235)
!7834 = !DILocation(line: 3642, column: 21, scope: !2235)
!7835 = !DILocation(line: 3642, column: 18, scope: !2235)
!7836 = !DILocation(line: 3642, column: 11, scope: !2235)
!7837 = !DILocation(line: 3643, column: 18, scope: !2235)
!7838 = !DILocation(line: 3643, column: 9, scope: !2235)
!7839 = !DILocation(line: 3644, column: 24, scope: !2235)
!7840 = !DILocation(line: 3644, column: 5, scope: !2235)
!7841 = !DILocation(line: 3644, column: 18, scope: !2235)
!7842 = !DILocation(line: 3645, column: 1, scope: !2235)
!7843 = distinct !DISubprogram(name: "clusterMastersHaveSlaves", scope: !3, file: !3, line: 3650, type: !3144, isLocal: false, isDefinition: true, scopeLine: 3650, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7844)
!7844 = !{!7845, !7846, !7847, !7848}
!7845 = !DILocalVariable(name: "di", scope: !7843, file: !3, line: 3651, type: !297)
!7846 = !DILocalVariable(name: "de", scope: !7843, file: !3, line: 3652, type: !340)
!7847 = !DILocalVariable(name: "slaves", scope: !7843, file: !3, line: 3653, type: !177)
!7848 = !DILocalVariable(name: "node", scope: !7849, file: !3, line: 3655, type: !378)
!7849 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 3654, column: 40)
!7850 = !DILocation(line: 3651, column: 51, scope: !7843)
!7851 = !DILocation(line: 3651, column: 60, scope: !7843)
!7852 = !DILocation(line: 3651, column: 24, scope: !7843)
!7853 = !DILocation(line: 3651, column: 19, scope: !7843)
!7854 = !DILocation(line: 3653, column: 9, scope: !7843)
!7855 = !DILocation(line: 3654, column: 17, scope: !7843)
!7856 = !DILocation(line: 3652, column: 16, scope: !7843)
!7857 = !DILocation(line: 3654, column: 31, scope: !7843)
!7858 = !DILocation(line: 3654, column: 5, scope: !7843)
!7859 = !DILocation(line: 3655, column: 29, scope: !7849)
!7860 = !DILocation(line: 3655, column: 22, scope: !7849)
!7861 = !DILocation(line: 3657, column: 13, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 3657, column: 13)
!7863 = !DILocation(line: 3657, column: 13, scope: !7849)
!7864 = distinct !{!7864, !7858, !7865}
!7865 = !DILocation(line: 3659, column: 5, scope: !7843)
!7866 = !DILocation(line: 3658, column: 25, scope: !7849)
!7867 = !DILocation(line: 3658, column: 16, scope: !7849)
!7868 = !DILocation(line: 0, scope: !7849)
!7869 = !DILocation(line: 3660, column: 5, scope: !7843)
!7870 = !DILocation(line: 3661, column: 19, scope: !7843)
!7871 = !DILocation(line: 3661, column: 5, scope: !7843)
!7872 = distinct !DISubprogram(name: "clusterNodeSetSlotBit", scope: !3, file: !3, line: 3665, type: !1220, isLocal: false, isDefinition: true, scopeLine: 3665, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7873)
!7873 = !{!7874, !7875, !7876}
!7874 = !DILocalVariable(name: "n", arg: 1, scope: !7872, file: !3, line: 3665, type: !378)
!7875 = !DILocalVariable(name: "slot", arg: 2, scope: !7872, file: !3, line: 3665, type: !177)
!7876 = !DILocalVariable(name: "old", scope: !7872, file: !3, line: 3666, type: !177)
!7877 = !DILocation(line: 3665, column: 40, scope: !7872)
!7878 = !DILocation(line: 3665, column: 47, scope: !7872)
!7879 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !7880)
!7880 = distinct !DILocation(line: 3666, column: 15, scope: !7872)
!7881 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !7880)
!7882 = !DILocation(line: 3628, column: 21, scope: !2217, inlinedAt: !7880)
!7883 = !DILocation(line: 3628, column: 18, scope: !2217, inlinedAt: !7880)
!7884 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !7880)
!7885 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !7880)
!7886 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !7880)
!7887 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !7880)
!7888 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !7880)
!7889 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !7880)
!7890 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !7880)
!7891 = !DILocation(line: 3666, column: 9, scope: !7872)
!7892 = !DILocation(line: 3634, column: 34, scope: !7815, inlinedAt: !7893)
!7893 = distinct !DILocation(line: 3667, column: 5, scope: !7872)
!7894 = !DILocation(line: 3634, column: 46, scope: !7815, inlinedAt: !7893)
!7895 = !DILocation(line: 3635, column: 11, scope: !7815, inlinedAt: !7893)
!7896 = !DILocation(line: 3636, column: 9, scope: !7815, inlinedAt: !7893)
!7897 = !DILocation(line: 3637, column: 18, scope: !7815, inlinedAt: !7893)
!7898 = !DILocation(line: 3668, column: 9, scope: !7872)
!7899 = !DILocation(line: 3669, column: 12, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 3668, column: 15)
!7901 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 3668, column: 9)
!7902 = !DILocation(line: 3669, column: 20, scope: !7900)
!7903 = !DILocation(line: 3683, column: 25, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 3683, column: 13)
!7905 = !DILocation(line: 3683, column: 30, scope: !7904)
!7906 = !DILocation(line: 3651, column: 51, scope: !7843, inlinedAt: !7907)
!7907 = distinct !DILocation(line: 3683, column: 33, scope: !7904)
!7908 = !DILocation(line: 3651, column: 60, scope: !7843, inlinedAt: !7907)
!7909 = !DILocation(line: 3651, column: 24, scope: !7843, inlinedAt: !7907)
!7910 = !DILocation(line: 3651, column: 19, scope: !7843, inlinedAt: !7907)
!7911 = !DILocation(line: 3653, column: 9, scope: !7843, inlinedAt: !7907)
!7912 = !DILocation(line: 3654, column: 17, scope: !7843, inlinedAt: !7907)
!7913 = !DILocation(line: 3652, column: 16, scope: !7843, inlinedAt: !7907)
!7914 = !DILocation(line: 3654, column: 31, scope: !7843, inlinedAt: !7907)
!7915 = !DILocation(line: 3654, column: 5, scope: !7843, inlinedAt: !7907)
!7916 = !DILocation(line: 3660, column: 5, scope: !7843, inlinedAt: !7907)
!7917 = !DILocation(line: 3683, column: 13, scope: !7900)
!7918 = !DILocation(line: 3655, column: 29, scope: !7849, inlinedAt: !7907)
!7919 = !DILocation(line: 3655, column: 22, scope: !7849, inlinedAt: !7907)
!7920 = !DILocation(line: 3657, column: 13, scope: !7862, inlinedAt: !7907)
!7921 = !DILocation(line: 3657, column: 13, scope: !7849, inlinedAt: !7907)
!7922 = !DILocation(line: 3658, column: 25, scope: !7849, inlinedAt: !7907)
!7923 = !DILocation(line: 3658, column: 16, scope: !7849, inlinedAt: !7907)
!7924 = !DILocation(line: 3659, column: 5, scope: !7843, inlinedAt: !7907)
!7925 = !DILocation(line: 0, scope: !7849, inlinedAt: !7907)
!7926 = !DILocation(line: 3661, column: 19, scope: !7843, inlinedAt: !7907)
!7927 = !DILocation(line: 3684, column: 16, scope: !7904)
!7928 = !DILocation(line: 3684, column: 22, scope: !7904)
!7929 = !DILocation(line: 3684, column: 13, scope: !7904)
!7930 = !DILocation(line: 3686, column: 5, scope: !7872)
!7931 = !DILocation(line: 3690, column: 42, scope: !2209)
!7932 = !DILocation(line: 3690, column: 49, scope: !2209)
!7933 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !7934)
!7934 = distinct !DILocation(line: 3691, column: 15, scope: !2209)
!7935 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !7934)
!7936 = !DILocation(line: 3628, column: 21, scope: !2217, inlinedAt: !7934)
!7937 = !DILocation(line: 3628, column: 18, scope: !2217, inlinedAt: !7934)
!7938 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !7934)
!7939 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !7934)
!7940 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !7934)
!7941 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !7934)
!7942 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !7934)
!7943 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !7934)
!7944 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !7934)
!7945 = !DILocation(line: 3691, column: 9, scope: !2209)
!7946 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !7947)
!7947 = distinct !DILocation(line: 3692, column: 5, scope: !2209)
!7948 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !7947)
!7949 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !7947)
!7950 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !7947)
!7951 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !7947)
!7952 = !DILocation(line: 3693, column: 9, scope: !2209)
!7953 = !DILocation(line: 3693, column: 17, scope: !2251)
!7954 = !DILocation(line: 3693, column: 25, scope: !2251)
!7955 = !DILocation(line: 3693, column: 14, scope: !2251)
!7956 = !DILocation(line: 3694, column: 5, scope: !2209)
!7957 = distinct !DISubprogram(name: "verifyClusterConfigWithData", scope: !3, file: !3, line: 3878, type: !3144, isLocal: false, isDefinition: true, scopeLine: 3878, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7958)
!7958 = !{!7959, !7960}
!7959 = !DILocalVariable(name: "j", scope: !7957, file: !3, line: 3879, type: !177)
!7960 = !DILocalVariable(name: "update_config", scope: !7957, file: !3, line: 3880, type: !177)
!7961 = !DILocation(line: 3880, column: 9, scope: !7957)
!7962 = !DILocation(line: 3884, column: 16, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3884, column: 9)
!7964 = !DILocation(line: 3884, column: 37, scope: !7963)
!7965 = !DILocation(line: 3884, column: 9, scope: !7957)
!7966 = !DILocation(line: 3889, column: 9, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3889, column: 9)
!7968 = !DILocation(line: 3889, column: 9, scope: !7957)
!7969 = !DILocation(line: 3879, column: 9, scope: !7957)
!7970 = !DILocation(line: 3892, column: 28, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !3, line: 3892, column: 5)
!7972 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3892, column: 5)
!7973 = !{!785, !709, i64 1792}
!7974 = !DILocation(line: 3892, column: 19, scope: !7971)
!7975 = !DILocation(line: 3892, column: 5, scope: !7972)
!7976 = !DILocation(line: 3899, column: 14, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 3899, column: 13)
!7978 = distinct !DILexicalBlock(scope: !7979, file: !3, line: 3898, column: 41)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 3898, column: 5)
!7980 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3898, column: 5)
!7981 = !{!785, !758, i64 48}
!7982 = distinct !{!7982, !7975, !7983}
!7983 = !DILocation(line: 3894, column: 5, scope: !7972)
!7984 = !DILocation(line: 3893, column: 13, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 3893, column: 13)
!7986 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 3892, column: 40)
!7987 = !{!7988, !758, i64 0}
!7988 = !{!"redisDb", !758, i64 0, !758, i64 8, !758, i64 16, !758, i64 24, !758, i64 32, !709, i64 40, !786, i64 48, !758, i64 56}
!7989 = !DILocation(line: 3892, column: 36, scope: !7971)
!7990 = !DILocation(line: 3893, column: 13, scope: !7986)
!7991 = !DILocation(line: 3899, column: 13, scope: !7978)
!7992 = !DILocation(line: 3903, column: 20, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 3903, column: 13)
!7994 = !DILocation(line: 3903, column: 13, scope: !7993)
!7995 = !DILocation(line: 3903, column: 41, scope: !7993)
!7996 = !DILocation(line: 3903, column: 38, scope: !7993)
!7997 = !DILocation(line: 3903, column: 48, scope: !7993)
!7998 = !DILocation(line: 3904, column: 13, scope: !7993)
!7999 = !DILocation(line: 3904, column: 53, scope: !7993)
!8000 = !DILocation(line: 3903, column: 13, scope: !7978)
!8001 = !DILocation(line: 3910, column: 22, scope: !7978)
!8002 = !DILocation(line: 3912, column: 38, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 3912, column: 13)
!8004 = !DILocation(line: 3912, column: 13, scope: !7978)
!8005 = !DILocation(line: 3913, column: 13, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 3912, column: 47)
!8007 = !DILocation(line: 3915, column: 28, scope: !8006)
!8008 = !DILocation(line: 3706, column: 33, scope: !1219, inlinedAt: !8009)
!8009 = distinct !DILocation(line: 3915, column: 13, scope: !8006)
!8010 = !DILocation(line: 3706, column: 40, scope: !1219, inlinedAt: !8009)
!8011 = !DILocation(line: 3707, column: 16, scope: !1228, inlinedAt: !8009)
!8012 = !DILocation(line: 3707, column: 9, scope: !1228, inlinedAt: !8009)
!8013 = !DILocation(line: 3707, column: 9, scope: !1219, inlinedAt: !8009)
!8014 = !DILocation(line: 3708, column: 5, scope: !1219, inlinedAt: !8009)
!8015 = !DILocation(line: 3709, column: 12, scope: !1219, inlinedAt: !8009)
!8016 = !DILocation(line: 3709, column: 5, scope: !1219, inlinedAt: !8009)
!8017 = !DILocation(line: 3709, column: 33, scope: !1219, inlinedAt: !8009)
!8018 = !DILocation(line: 3710, column: 5, scope: !1219, inlinedAt: !8009)
!8019 = !DILocation(line: 3917, column: 13, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 3916, column: 16)
!8021 = !DILocation(line: 3920, column: 62, scope: !8020)
!8022 = !DILocation(line: 3920, column: 55, scope: !8020)
!8023 = !DILocation(line: 3920, column: 13, scope: !8020)
!8024 = !DILocation(line: 3920, column: 53, scope: !8020)
!8025 = !DILocation(line: 0, scope: !7957)
!8026 = !DILocation(line: 3898, column: 37, scope: !7979)
!8027 = !DILocation(line: 3898, column: 19, scope: !7979)
!8028 = !DILocation(line: 3898, column: 5, scope: !7980)
!8029 = distinct !{!8029, !8028, !8030}
!8030 = !DILocation(line: 3922, column: 5, scope: !7980)
!8031 = !DILocation(line: 3923, column: 9, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3923, column: 9)
!8033 = !DILocation(line: 3923, column: 9, scope: !7957)
!8034 = !DILocation(line: 360, column: 33, scope: !1653, inlinedAt: !8035)
!8035 = distinct !DILocation(line: 3923, column: 24, scope: !8032)
!8036 = !DILocation(line: 361, column: 9, scope: !1658, inlinedAt: !8035)
!8037 = !DILocation(line: 361, column: 37, scope: !1658, inlinedAt: !8035)
!8038 = !DILocation(line: 361, column: 9, scope: !1653, inlinedAt: !8035)
!8039 = !DILocation(line: 362, column: 9, scope: !1662, inlinedAt: !8035)
!8040 = !DILocation(line: 363, column: 9, scope: !1662, inlinedAt: !8035)
!8041 = !DILocation(line: 3925, column: 1, scope: !7957)
!8042 = distinct !DISubprogram(name: "clusterGenNodeDescription", scope: !3, file: !3, line: 3990, type: !8043, isLocal: false, isDefinition: true, scopeLine: 3990, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8045)
!8043 = !DISubroutineType(types: !8044)
!8044 = !{!189, !378}
!8045 = !{!8046, !8047, !8048, !8049, !8050}
!8046 = !DILocalVariable(name: "node", arg: 1, scope: !8042, file: !3, line: 3990, type: !378)
!8047 = !DILocalVariable(name: "j", scope: !8042, file: !3, line: 3991, type: !177)
!8048 = !DILocalVariable(name: "start", scope: !8042, file: !3, line: 3991, type: !177)
!8049 = !DILocalVariable(name: "ci", scope: !8042, file: !3, line: 3992, type: !189)
!8050 = !DILocalVariable(name: "bit", scope: !8051, file: !3, line: 4021, type: !177)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 4020, column: 41)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 4020, column: 5)
!8053 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 4020, column: 5)
!8054 = !DILocation(line: 3990, column: 44, scope: !8042)
!8055 = !DILocation(line: 3995, column: 23, scope: !8042)
!8056 = !DILocation(line: 3996, column: 9, scope: !8042)
!8057 = !DILocation(line: 3997, column: 9, scope: !8042)
!8058 = !DILocation(line: 3998, column: 15, scope: !8042)
!8059 = !DILocation(line: 3999, column: 15, scope: !8042)
!8060 = !DILocation(line: 3995, column: 10, scope: !8042)
!8061 = !DILocation(line: 3992, column: 9, scope: !8042)
!8062 = !DILocation(line: 4002, column: 46, scope: !8042)
!8063 = !DILocation(line: 4002, column: 40, scope: !8042)
!8064 = !DILocation(line: 4002, column: 10, scope: !8042)
!8065 = !DILocation(line: 4005, column: 15, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 4005, column: 9)
!8067 = !DILocation(line: 4005, column: 9, scope: !8066)
!8068 = !DILocation(line: 4005, column: 9, scope: !8042)
!8069 = !DILocation(line: 4006, column: 40, scope: !8066)
!8070 = !DILocation(line: 4006, column: 14, scope: !8066)
!8071 = !DILocation(line: 4006, column: 9, scope: !8066)
!8072 = !DILocation(line: 4008, column: 14, scope: !8066)
!8073 = !DILocation(line: 0, scope: !8066)
!8074 = !DILocation(line: 4012, column: 27, scope: !8042)
!8075 = !DILocation(line: 4013, column: 27, scope: !8042)
!8076 = !DILocation(line: 4014, column: 36, scope: !8042)
!8077 = !DILocation(line: 4015, column: 16, scope: !8042)
!8078 = !DILocation(line: 4015, column: 10, scope: !8042)
!8079 = !DILocation(line: 4015, column: 21, scope: !8042)
!8080 = !DILocation(line: 4015, column: 30, scope: !8042)
!8081 = !DILocation(line: 4015, column: 36, scope: !8042)
!8082 = !DILocation(line: 4011, column: 10, scope: !8042)
!8083 = !DILocation(line: 3991, column: 12, scope: !8042)
!8084 = !DILocation(line: 3991, column: 9, scope: !8042)
!8085 = !DILocation(line: 4020, column: 5, scope: !8053)
!8086 = !DILocation(line: 3698, column: 40, scope: !4913, inlinedAt: !8087)
!8087 = distinct !DILocation(line: 4023, column: 20, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 4023, column: 13)
!8089 = !DILocation(line: 3698, column: 47, scope: !4913, inlinedAt: !8087)
!8090 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !8091)
!8091 = distinct !DILocation(line: 3699, column: 12, scope: !4913, inlinedAt: !8087)
!8092 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !8091)
!8093 = !DILocation(line: 3628, column: 21, scope: !2217, inlinedAt: !8091)
!8094 = !DILocation(line: 3628, column: 18, scope: !2217, inlinedAt: !8091)
!8095 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !8091)
!8096 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !8091)
!8097 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !8091)
!8098 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !8091)
!8099 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !8091)
!8100 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !8091)
!8101 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !8091)
!8102 = !DILocation(line: 4024, column: 23, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 4024, column: 17)
!8104 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 4023, column: 57)
!8105 = !DILocation(line: 4023, column: 13, scope: !8051)
!8106 = !DILocation(line: 4026, column: 19, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 4026, column: 13)
!8108 = !DILocation(line: 4026, column: 25, scope: !8107)
!8109 = !DILocation(line: 4026, column: 30, scope: !8107)
!8110 = !DILocation(line: 4026, column: 39, scope: !8107)
!8111 = !DILocation(line: 4026, column: 34, scope: !8107)
!8112 = !DILocation(line: 4027, column: 21, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 4027, column: 17)
!8114 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 4026, column: 60)
!8115 = !DILocation(line: 4029, column: 27, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 4029, column: 17)
!8117 = !DILocation(line: 4029, column: 23, scope: !8116)
!8118 = !DILocation(line: 4029, column: 17, scope: !8114)
!8119 = !DILocation(line: 4030, column: 22, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 4029, column: 31)
!8121 = !DILocation(line: 4031, column: 13, scope: !8120)
!8122 = !DILocation(line: 4032, column: 22, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 4031, column: 20)
!8124 = !DILocation(line: 0, scope: !8103)
!8125 = !DILocation(line: 0, scope: !8042)
!8126 = !DILocation(line: 0, scope: !8053)
!8127 = !DILocation(line: 4020, column: 37, scope: !8052)
!8128 = !DILocation(line: 4020, column: 19, scope: !8052)
!8129 = distinct !{!8129, !8085, !8130}
!8130 = !DILocation(line: 4036, column: 5, scope: !8053)
!8131 = !DILocation(line: 4041, column: 15, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 4041, column: 9)
!8133 = !DILocation(line: 4041, column: 21, scope: !8132)
!8134 = !DILocation(line: 4041, column: 9, scope: !8042)
!8135 = !DILocation(line: 4043, column: 24, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 4043, column: 17)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 4042, column: 45)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 4042, column: 9)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 4042, column: 9)
!8140 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 4041, column: 44)
!8141 = !DILocation(line: 4043, column: 17, scope: !8136)
!8142 = !DILocation(line: 4043, column: 17, scope: !8137)
!8143 = !DILocation(line: 4046, column: 24, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 4046, column: 24)
!8145 = !DILocation(line: 4046, column: 24, scope: !8136)
!8146 = !DILocation(line: 0, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 4046, column: 65)
!8148 = !DILocation(line: 4042, column: 41, scope: !8138)
!8149 = !DILocation(line: 4042, column: 23, scope: !8138)
!8150 = !DILocation(line: 4042, column: 9, scope: !8139)
!8151 = distinct !{!8151, !8150, !8152}
!8152 = !DILocation(line: 4050, column: 9, scope: !8139)
!8153 = !DILocation(line: 4011, column: 8, scope: !8042)
!8154 = !DILocation(line: 4052, column: 5, scope: !8042)
!8155 = distinct !DISubprogram(name: "clusterGetMessageTypeString", scope: !3, file: !3, line: 4090, type: !8156, isLocal: false, isDefinition: true, scopeLine: 4090, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8158)
!8156 = !DISubroutineType(types: !8157)
!8157 = !{!611, !177}
!8158 = !{!8159}
!8159 = !DILocalVariable(name: "type", arg: 1, scope: !8155, file: !3, line: 4090, type: !177)
!8160 = !DILocation(line: 4090, column: 45, scope: !8155)
!8161 = !DILocation(line: 4091, column: 5, scope: !8155)
!8162 = !DILocation(line: 4104, column: 1, scope: !8155)
!8163 = distinct !DISubprogram(name: "getSlotOrReply", scope: !3, file: !3, line: 4106, type: !8164, isLocal: false, isDefinition: true, scopeLine: 4106, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8289)
!8164 = !DISubroutineType(types: !8165)
!8165 = !{!177, !8166, !4435}
!8166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8167, size: 64)
!8167 = !DIDerivedType(tag: DW_TAG_typedef, name: "client", file: !185, line: 780, baseType: !8168)
!8168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "client", file: !185, line: 723, size: 135360, elements: !8169)
!8169 = !{!8170, !8171, !8172, !8185, !8186, !8187, !8188, !8189, !8190, !8191, !8193, !8217, !8218, !8219, !8220, !8221, !8222, !8223, !8224, !8225, !8226, !8227, !8228, !8229, !8230, !8231, !8232, !8233, !8234, !8235, !8236, !8237, !8238, !8239, !8240, !8244, !8245, !8246, !8247, !8263, !8264, !8280, !8281, !8282, !8283, !8284, !8285, !8286, !8287}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8168, file: !185, line: 724, baseType: !104, size: 64)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !8168, file: !185, line: 725, baseType: !177, size: 32, offset: 64)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !8168, file: !185, line: 726, baseType: !8173, size: 64, offset: 128)
!8173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8174, size: 64)
!8174 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisDb", file: !185, line: 656, baseType: !8175)
!8175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisDb", file: !185, line: 647, size: 512, elements: !8176)
!8176 = !{!8177, !8178, !8179, !8180, !8181, !8182, !8183, !8184}
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !8175, file: !185, line: 648, baseType: !303, size: 64)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !8175, file: !185, line: 649, baseType: !303, size: 64, offset: 64)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "blocking_keys", scope: !8175, file: !185, line: 650, baseType: !303, size: 64, offset: 128)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "ready_keys", scope: !8175, file: !185, line: 651, baseType: !303, size: 64, offset: 192)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !8175, file: !185, line: 652, baseType: !303, size: 64, offset: 256)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8175, file: !185, line: 653, baseType: !177, size: 32, offset: 320)
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "avg_ttl", scope: !8175, file: !185, line: 654, baseType: !186, size: 64, offset: 384)
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "defrag_later", scope: !8175, file: !185, line: 655, baseType: !218, size: 64, offset: 448)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8168, file: !185, line: 727, baseType: !4435, size: 64, offset: 192)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf", scope: !8168, file: !185, line: 728, baseType: !189, size: 64, offset: 256)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "qb_pos", scope: !8168, file: !185, line: 729, baseType: !1455, size: 64, offset: 320)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "pending_querybuf", scope: !8168, file: !185, line: 730, baseType: !189, size: 64, offset: 384)
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf_peak", scope: !8168, file: !185, line: 734, baseType: !1455, size: 64, offset: 448)
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !8168, file: !185, line: 735, baseType: !177, size: 32, offset: 512)
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !8168, file: !185, line: 736, baseType: !8192, size: 64, offset: 576)
!8192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 64)
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8168, file: !185, line: 737, baseType: !8194, size: 64, offset: 640)
!8194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8195, size: 64)
!8195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisCommand", file: !185, line: 1307, size: 640, elements: !8196)
!8196 = !{!8197, !8198, !8203, !8204, !8205, !8206, !8212, !8213, !8214, !8215, !8216}
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8195, file: !185, line: 1308, baseType: !178, size: 64)
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !8195, file: !185, line: 1309, baseType: !8199, size: 64, offset: 64)
!8199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8200, size: 64)
!8200 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisCommandProc", file: !185, line: 1305, baseType: !8201)
!8201 = !DISubroutineType(types: !8202)
!8202 = !{null, !8166}
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !8195, file: !185, line: 1310, baseType: !177, size: 32, offset: 128)
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "sflags", scope: !8195, file: !185, line: 1311, baseType: !178, size: 64, offset: 192)
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8195, file: !185, line: 1312, baseType: !177, size: 32, offset: 256)
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "getkeys_proc", scope: !8195, file: !185, line: 1315, baseType: !8207, size: 64, offset: 320)
!8207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8208, size: 64)
!8208 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisGetKeysProc", file: !185, line: 1306, baseType: !8209)
!8209 = !DISubroutineType(types: !8210)
!8210 = !{!8211, !8194, !8192, !177, !8211}
!8211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "firstkey", scope: !8195, file: !185, line: 1317, baseType: !177, size: 32, offset: 384)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "lastkey", scope: !8195, file: !185, line: 1318, baseType: !177, size: 32, offset: 416)
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "keystep", scope: !8195, file: !185, line: 1319, baseType: !177, size: 32, offset: 448)
!8215 = !DIDerivedType(tag: DW_TAG_member, name: "microseconds", scope: !8195, file: !185, line: 1320, baseType: !186, size: 64, offset: 512)
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "calls", scope: !8195, file: !185, line: 1320, baseType: !186, size: 64, offset: 576)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "lastcmd", scope: !8168, file: !185, line: 737, baseType: !8194, size: 64, offset: 704)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !8168, file: !185, line: 738, baseType: !177, size: 32, offset: 768)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "multibulklen", scope: !8168, file: !185, line: 739, baseType: !177, size: 32, offset: 800)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "bulklen", scope: !8168, file: !185, line: 740, baseType: !13, size: 64, offset: 832)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !8168, file: !185, line: 741, baseType: !218, size: 64, offset: 896)
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "reply_bytes", scope: !8168, file: !185, line: 742, baseType: !7, size: 64, offset: 960)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "sentlen", scope: !8168, file: !185, line: 743, baseType: !1455, size: 64, offset: 1024)
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !8168, file: !185, line: 745, baseType: !288, size: 64, offset: 1088)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "lastinteraction", scope: !8168, file: !185, line: 746, baseType: !288, size: 64, offset: 1152)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "obuf_soft_limit_reached_time", scope: !8168, file: !185, line: 747, baseType: !288, size: 64, offset: 1216)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8168, file: !185, line: 748, baseType: !177, size: 32, offset: 1280)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !8168, file: !185, line: 749, baseType: !177, size: 32, offset: 1312)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "replstate", scope: !8168, file: !185, line: 750, baseType: !177, size: 32, offset: 1344)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "repl_put_online_on_ack", scope: !8168, file: !185, line: 751, baseType: !177, size: 32, offset: 1376)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "repldbfd", scope: !8168, file: !185, line: 752, baseType: !177, size: 32, offset: 1408)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "repldboff", scope: !8168, file: !185, line: 753, baseType: !8, size: 64, offset: 1472)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "repldbsize", scope: !8168, file: !185, line: 754, baseType: !8, size: 64, offset: 1536)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "replpreamble", scope: !8168, file: !185, line: 755, baseType: !189, size: 64, offset: 1600)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "read_reploff", scope: !8168, file: !185, line: 756, baseType: !186, size: 64, offset: 1664)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "reploff", scope: !8168, file: !185, line: 757, baseType: !186, size: 64, offset: 1728)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_off", scope: !8168, file: !185, line: 758, baseType: !186, size: 64, offset: 1792)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_time", scope: !8168, file: !185, line: 759, baseType: !186, size: 64, offset: 1856)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "psync_initial_offset", scope: !8168, file: !185, line: 760, baseType: !186, size: 64, offset: 1920)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "replid", scope: !8168, file: !185, line: 763, baseType: !8241, size: 328, offset: 1984)
!8241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 328, elements: !8242)
!8242 = !{!8243}
!8243 = !DISubrange(count: 41)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "slave_listening_port", scope: !8168, file: !185, line: 764, baseType: !177, size: 32, offset: 2336)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "slave_ip", scope: !8168, file: !185, line: 765, baseType: !85, size: 368, offset: 2368)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "slave_capa", scope: !8168, file: !185, line: 766, baseType: !177, size: 32, offset: 2752)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !8168, file: !185, line: 767, baseType: !8248, size: 256, offset: 2816)
!8248 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiState", file: !185, line: 673, baseType: !8249)
!8249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiState", file: !185, line: 665, size: 256, elements: !8250)
!8250 = !{!8251, !8259, !8260, !8261, !8262}
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !8249, file: !185, line: 666, baseType: !8252, size: 64)
!8252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8253, size: 64)
!8253 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiCmd", file: !185, line: 663, baseType: !8254)
!8254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiCmd", file: !185, line: 659, size: 192, elements: !8255)
!8255 = !{!8256, !8257, !8258}
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !8254, file: !185, line: 660, baseType: !8192, size: 64)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !8254, file: !185, line: 661, baseType: !177, size: 32, offset: 64)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8254, file: !185, line: 662, baseType: !8194, size: 64, offset: 128)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8249, file: !185, line: 667, baseType: !177, size: 32, offset: 64)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !8249, file: !185, line: 668, baseType: !177, size: 32, offset: 96)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas", scope: !8249, file: !185, line: 671, baseType: !177, size: 32, offset: 128)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas_timeout", scope: !8249, file: !185, line: 672, baseType: !288, size: 64, offset: 192)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "btype", scope: !8168, file: !185, line: 768, baseType: !177, size: 32, offset: 3072)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "bpop", scope: !8168, file: !185, line: 769, baseType: !8265, size: 704, offset: 3136)
!8265 = !DIDerivedType(tag: DW_TAG_typedef, name: "blockingState", file: !185, line: 703, baseType: !8266)
!8266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blockingState", file: !185, line: 677, size: 704, elements: !8267)
!8267 = !{!8268, !8269, !8270, !8271, !8272, !8273, !8274, !8275, !8276, !8277, !8278, !8279}
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8266, file: !185, line: 679, baseType: !184, size: 64)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !8266, file: !185, line: 683, baseType: !303, size: 64, offset: 64)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !8266, file: !185, line: 685, baseType: !4435, size: 64, offset: 128)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "xread_count", scope: !8266, file: !185, line: 689, baseType: !1455, size: 64, offset: 192)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group", scope: !8266, file: !185, line: 690, baseType: !4435, size: 64, offset: 256)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "xread_consumer", scope: !8266, file: !185, line: 691, baseType: !4435, size: 64, offset: 320)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_time", scope: !8266, file: !185, line: 692, baseType: !184, size: 64, offset: 384)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_ttl", scope: !8266, file: !185, line: 692, baseType: !184, size: 64, offset: 448)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group_noack", scope: !8266, file: !185, line: 693, baseType: !177, size: 32, offset: 512)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "numreplicas", scope: !8266, file: !185, line: 696, baseType: !177, size: 32, offset: 544)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "reploffset", scope: !8266, file: !185, line: 697, baseType: !186, size: 64, offset: 576)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "module_blocked_handle", scope: !8266, file: !185, line: 700, baseType: !6, size: 64, offset: 640)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "woff", scope: !8168, file: !185, line: 770, baseType: !186, size: 64, offset: 3840)
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !8168, file: !185, line: 771, baseType: !218, size: 64, offset: 3904)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !8168, file: !185, line: 772, baseType: !303, size: 64, offset: 3968)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !8168, file: !185, line: 773, baseType: !218, size: 64, offset: 4032)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "peerid", scope: !8168, file: !185, line: 774, baseType: !189, size: 64, offset: 4096)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "client_list_node", scope: !8168, file: !185, line: 775, baseType: !224, size: 64, offset: 4160)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "bufpos", scope: !8168, file: !185, line: 778, baseType: !177, size: 32, offset: 4224)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !8168, file: !185, line: 779, baseType: !8288, size: 131072, offset: 4256)
!8288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 131072, elements: !4102)
!8289 = !{!8290, !8291, !8292}
!8290 = !DILocalVariable(name: "c", arg: 1, scope: !8163, file: !3, line: 4106, type: !8166)
!8291 = !DILocalVariable(name: "o", arg: 2, scope: !8163, file: !3, line: 4106, type: !4435)
!8292 = !DILocalVariable(name: "slot", scope: !8163, file: !3, line: 4107, type: !186)
!8293 = !DILocation(line: 4106, column: 28, scope: !8163)
!8294 = !DILocation(line: 4106, column: 37, scope: !8163)
!8295 = !DILocation(line: 4107, column: 5, scope: !8163)
!8296 = !DILocation(line: 4107, column: 15, scope: !8163)
!8297 = !DILocation(line: 4109, column: 9, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 4109, column: 9)
!8299 = !DILocation(line: 4109, column: 40, scope: !8298)
!8300 = !DILocation(line: 4110, column: 9, scope: !8298)
!8301 = !DILocation(line: 4109, column: 48, scope: !8298)
!8302 = !DILocation(line: 4112, column: 9, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 4111, column: 5)
!8304 = !DILocation(line: 4113, column: 9, scope: !8303)
!8305 = !DILocation(line: 4115, column: 12, scope: !8163)
!8306 = !DILocation(line: 4115, column: 5, scope: !8163)
!8307 = !DILocation(line: 0, scope: !8163)
!8308 = !DILocation(line: 4116, column: 1, scope: !8163)
!8309 = distinct !DISubprogram(name: "clusterReplyMultiBulkSlots", scope: !3, file: !3, line: 4118, type: !8201, isLocal: false, isDefinition: true, scopeLine: 4118, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8310)
!8310 = !{!8311, !8312, !8313, !8314, !8315, !8316, !8318, !8319, !8320, !8324, !8325, !8328}
!8311 = !DILocalVariable(name: "c", arg: 1, scope: !8309, file: !3, line: 4118, type: !8166)
!8312 = !DILocalVariable(name: "num_masters", scope: !8309, file: !3, line: 4130, type: !177)
!8313 = !DILocalVariable(name: "slot_replylen", scope: !8309, file: !3, line: 4131, type: !6)
!8314 = !DILocalVariable(name: "de", scope: !8309, file: !3, line: 4133, type: !340)
!8315 = !DILocalVariable(name: "di", scope: !8309, file: !3, line: 4134, type: !297)
!8316 = !DILocalVariable(name: "node", scope: !8317, file: !3, line: 4136, type: !378)
!8317 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 4135, column: 40)
!8318 = !DILocalVariable(name: "j", scope: !8317, file: !3, line: 4137, type: !177)
!8319 = !DILocalVariable(name: "start", scope: !8317, file: !3, line: 4137, type: !177)
!8320 = !DILocalVariable(name: "bit", scope: !8321, file: !3, line: 4144, type: !177)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 4143, column: 45)
!8322 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 4143, column: 9)
!8323 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 4143, column: 9)
!8324 = !DILocalVariable(name: "i", scope: !8321, file: !3, line: 4144, type: !177)
!8325 = !DILocalVariable(name: "nested_elements", scope: !8326, file: !3, line: 4150, type: !177)
!8326 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 4149, column: 64)
!8327 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 4149, column: 17)
!8328 = !DILocalVariable(name: "nested_replylen", scope: !8326, file: !3, line: 4151, type: !6)
!8329 = !DILocation(line: 4118, column: 41, scope: !8309)
!8330 = !DILocation(line: 4130, column: 9, scope: !8309)
!8331 = !DILocation(line: 4131, column: 27, scope: !8309)
!8332 = !DILocation(line: 4131, column: 11, scope: !8309)
!8333 = !DILocation(line: 4134, column: 51, scope: !8309)
!8334 = !DILocation(line: 4134, column: 60, scope: !8309)
!8335 = !DILocation(line: 4134, column: 24, scope: !8309)
!8336 = !DILocation(line: 4134, column: 19, scope: !8309)
!8337 = !DILocation(line: 4135, column: 17, scope: !8309)
!8338 = !DILocation(line: 4133, column: 16, scope: !8309)
!8339 = !DILocation(line: 4135, column: 31, scope: !8309)
!8340 = !DILocation(line: 4135, column: 5, scope: !8309)
!8341 = !DILocation(line: 4136, column: 29, scope: !8317)
!8342 = !DILocation(line: 4136, column: 22, scope: !8317)
!8343 = !DILocation(line: 4137, column: 13, scope: !8317)
!8344 = !DILocation(line: 4137, column: 20, scope: !8317)
!8345 = !DILocation(line: 4141, column: 14, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 4141, column: 13)
!8347 = !DILocation(line: 4141, column: 33, scope: !8346)
!8348 = distinct !{!8348, !8340, !8349}
!8349 = !DILocation(line: 4187, column: 5, scope: !8309)
!8350 = !DILocation(line: 4141, column: 42, scope: !8346)
!8351 = !DILocation(line: 4141, column: 51, scope: !8346)
!8352 = !DILocation(line: 4141, column: 13, scope: !8317)
!8353 = !DILocation(line: 4143, column: 9, scope: !8323)
!8354 = !DILocation(line: 3698, column: 40, scope: !4913, inlinedAt: !8355)
!8355 = distinct !DILocation(line: 4146, column: 24, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 4146, column: 17)
!8357 = !DILocation(line: 3698, column: 47, scope: !4913, inlinedAt: !8355)
!8358 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !8359)
!8359 = distinct !DILocation(line: 3699, column: 12, scope: !4913, inlinedAt: !8355)
!8360 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !8359)
!8361 = !DILocation(line: 3628, column: 21, scope: !2217, inlinedAt: !8359)
!8362 = !DILocation(line: 3628, column: 18, scope: !2217, inlinedAt: !8359)
!8363 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !8359)
!8364 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !8359)
!8365 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !8359)
!8366 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !8359)
!8367 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !8359)
!8368 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !8359)
!8369 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !8359)
!8370 = !DILocation(line: 4147, column: 27, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 4147, column: 21)
!8372 = distinct !DILexicalBlock(scope: !8356, file: !3, line: 4146, column: 61)
!8373 = !DILocation(line: 4146, column: 17, scope: !8321)
!8374 = !DILocation(line: 4149, column: 23, scope: !8327)
!8375 = !DILocation(line: 4149, column: 29, scope: !8327)
!8376 = !DILocation(line: 4149, column: 34, scope: !8327)
!8377 = !DILocation(line: 4149, column: 43, scope: !8327)
!8378 = !DILocation(line: 4149, column: 38, scope: !8327)
!8379 = !DILocation(line: 4150, column: 21, scope: !8326)
!8380 = !DILocation(line: 4151, column: 41, scope: !8326)
!8381 = !DILocation(line: 4151, column: 23, scope: !8326)
!8382 = !DILocation(line: 4153, column: 25, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 4153, column: 21)
!8384 = !DILocation(line: 4157, column: 31, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 4157, column: 21)
!8386 = !DILocation(line: 4157, column: 27, scope: !8385)
!8387 = !DILocation(line: 0, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 4160, column: 24)
!8389 = !DILocation(line: 4157, column: 21, scope: !8326)
!8390 = !DILocation(line: 4159, column: 21, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 4157, column: 35)
!8392 = !DILocation(line: 4160, column: 17, scope: !8391)
!8393 = !DILocation(line: 4162, column: 41, scope: !8388)
!8394 = !DILocation(line: 4162, column: 21, scope: !8388)
!8395 = !DILocation(line: 4167, column: 17, scope: !8326)
!8396 = !DILocation(line: 4168, column: 17, scope: !8326)
!8397 = !DILocation(line: 4169, column: 43, scope: !8326)
!8398 = !DILocation(line: 4169, column: 37, scope: !8326)
!8399 = !DILocation(line: 4169, column: 17, scope: !8326)
!8400 = !DILocation(line: 4170, column: 17, scope: !8326)
!8401 = !DILocation(line: 4144, column: 22, scope: !8321)
!8402 = !DILocation(line: 4173, column: 39, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 4173, column: 17)
!8404 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 4173, column: 17)
!8405 = !DILocation(line: 4173, column: 31, scope: !8403)
!8406 = !DILocation(line: 4173, column: 17, scope: !8404)
!8407 = !DILocation(line: 4176, column: 25, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 4176, column: 25)
!8409 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 4173, column: 55)
!8410 = !DILocation(line: 4176, column: 25, scope: !8409)
!8411 = !DILocation(line: 4177, column: 21, scope: !8409)
!8412 = !DILocation(line: 4178, column: 50, scope: !8409)
!8413 = !DILocation(line: 4178, column: 44, scope: !8409)
!8414 = !DILocation(line: 4178, column: 21, scope: !8409)
!8415 = !DILocation(line: 4179, column: 47, scope: !8409)
!8416 = !DILocation(line: 4179, column: 41, scope: !8409)
!8417 = !DILocation(line: 4179, column: 58, scope: !8409)
!8418 = !DILocation(line: 4179, column: 21, scope: !8409)
!8419 = !DILocation(line: 4180, column: 50, scope: !8409)
!8420 = !DILocation(line: 4180, column: 44, scope: !8409)
!8421 = !DILocation(line: 4180, column: 21, scope: !8409)
!8422 = !DILocation(line: 4181, column: 36, scope: !8409)
!8423 = !DILocation(line: 4182, column: 17, scope: !8409)
!8424 = !DILocation(line: 0, scope: !8409)
!8425 = !DILocation(line: 4173, column: 51, scope: !8403)
!8426 = distinct !{!8426, !8406, !8427}
!8427 = !DILocation(line: 4182, column: 17, scope: !8404)
!8428 = !DILocation(line: 4183, column: 64, scope: !8326)
!8429 = !DILocation(line: 4183, column: 17, scope: !8326)
!8430 = !DILocation(line: 4184, column: 28, scope: !8326)
!8431 = !DILocation(line: 4185, column: 13, scope: !8326)
!8432 = !DILocation(line: 0, scope: !8371)
!8433 = !DILocation(line: 0, scope: !8323)
!8434 = !DILocation(line: 0, scope: !8309)
!8435 = !DILocation(line: 4143, column: 41, scope: !8322)
!8436 = !DILocation(line: 4143, column: 23, scope: !8322)
!8437 = distinct !{!8437, !8353, !8438}
!8438 = !DILocation(line: 4186, column: 9, scope: !8323)
!8439 = !DILocation(line: 4188, column: 5, scope: !8309)
!8440 = !DILocation(line: 4189, column: 50, scope: !8309)
!8441 = !DILocation(line: 4189, column: 5, scope: !8309)
!8442 = !DILocation(line: 4190, column: 1, scope: !8309)
!8443 = distinct !DISubprogram(name: "clusterCommand", scope: !3, file: !3, line: 4192, type: !8201, isLocal: false, isDefinition: true, scopeLine: 4192, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8444)
!8444 = !{!8445, !8446, !8452, !8455, !8456, !8459, !8460, !8466, !8467, !8468, !8469, !8475, !8478, !8479, !8485, !8488, !8489, !8493, !8494, !8495, !8496, !8497, !8498, !8499, !8503, !8504, !8505, !8506, !8508, !8510, !8513, !8516, !8519, !8522, !8523, !8524, !8525, !8526, !8527, !8530, !8533, !8536, !8537, !8541, !8544, !8547, !8548, !8551}
!8445 = !DILocalVariable(name: "c", arg: 1, scope: !8443, file: !3, line: 4192, type: !8166)
!8446 = !DILocalVariable(name: "help", scope: !8447, file: !3, line: 4199, type: !8449)
!8447 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 4198, column: 62)
!8448 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 4198, column: 9)
!8449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 1472, elements: !8450)
!8450 = !{!8451}
!8451 = !DISubrange(count: 23)
!8452 = !DILocalVariable(name: "port", scope: !8453, file: !3, line: 4227, type: !186)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 4225, column: 87)
!8454 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 4225, column: 16)
!8455 = !DILocalVariable(name: "cport", scope: !8453, file: !3, line: 4227, type: !186)
!8456 = !DILocalVariable(name: "o", scope: !8457, file: !3, line: 4255, type: !4435)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 4253, column: 70)
!8458 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 4253, column: 16)
!8459 = !DILocalVariable(name: "ci", scope: !8457, file: !3, line: 4256, type: !189)
!8460 = !DILocalVariable(name: "j", scope: !8461, file: !3, line: 4281, type: !177)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 4278, column: 5)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 4276, column: 16)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 4267, column: 16)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 4264, column: 16)
!8465 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 4261, column: 16)
!8466 = !DILocalVariable(name: "slot", scope: !8461, file: !3, line: 4281, type: !177)
!8467 = !DILocalVariable(name: "slots", scope: !8461, file: !3, line: 4282, type: !246)
!8468 = !DILocalVariable(name: "del", scope: !8461, file: !3, line: 4283, type: !177)
!8469 = !DILocalVariable(name: "retval", scope: !8470, file: !3, line: 4311, type: !177)
!8470 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 4310, column: 27)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 4310, column: 17)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 4309, column: 45)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 4309, column: 9)
!8474 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 4309, column: 9)
!8475 = !DILocalVariable(name: "slot", scope: !8476, file: !3, line: 4331, type: !177)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 4326, column: 72)
!8477 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 4326, column: 16)
!8478 = !DILocalVariable(name: "n", scope: !8476, file: !3, line: 4332, type: !378)
!8479 = !DILocalVariable(name: "n", scope: !8480, file: !3, line: 4370, type: !378)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 4368, column: 73)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4368, column: 20)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 4364, column: 20)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 4352, column: 20)
!8484 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 4341, column: 13)
!8485 = !DILocalVariable(name: "retval", scope: !8486, file: !3, line: 4425, type: !177)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 4423, column: 74)
!8487 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 4423, column: 16)
!8488 = !DILocalVariable(name: "reply", scope: !8486, file: !3, line: 4426, type: !189)
!8489 = !DILocalVariable(name: "statestr", scope: !8490, file: !3, line: 4432, type: !8492)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 4430, column: 69)
!8491 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 4430, column: 16)
!8492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 192, elements: !125)
!8493 = !DILocalVariable(name: "slots_assigned", scope: !8490, file: !3, line: 4433, type: !177)
!8494 = !DILocalVariable(name: "slots_ok", scope: !8490, file: !3, line: 4433, type: !177)
!8495 = !DILocalVariable(name: "slots_pfail", scope: !8490, file: !3, line: 4433, type: !177)
!8496 = !DILocalVariable(name: "slots_fail", scope: !8490, file: !3, line: 4433, type: !177)
!8497 = !DILocalVariable(name: "myepoch", scope: !8490, file: !3, line: 4434, type: !104)
!8498 = !DILocalVariable(name: "j", scope: !8490, file: !3, line: 4435, type: !177)
!8499 = !DILocalVariable(name: "n", scope: !8500, file: !3, line: 4438, type: !378)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 4437, column: 45)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 4437, column: 9)
!8502 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 4437, column: 9)
!8503 = !DILocalVariable(name: "info", scope: !8490, file: !3, line: 4454, type: !189)
!8504 = !DILocalVariable(name: "tot_msg_sent", scope: !8490, file: !3, line: 4476, type: !186)
!8505 = !DILocalVariable(name: "tot_msg_received", scope: !8490, file: !3, line: 4477, type: !186)
!8506 = !DILocalVariable(name: "i", scope: !8507, file: !3, line: 4479, type: !177)
!8507 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 4479, column: 9)
!8508 = !DILocalVariable(name: "i", scope: !8509, file: !3, line: 4490, type: !177)
!8509 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 4490, column: 9)
!8510 = !DILocalVariable(name: "retval", scope: !8511, file: !3, line: 4507, type: !177)
!8511 = distinct !DILexicalBlock(scope: !8512, file: !3, line: 4506, column: 75)
!8512 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 4506, column: 16)
!8513 = !DILocalVariable(name: "key", scope: !8514, file: !3, line: 4516, type: !189)
!8514 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 4514, column: 72)
!8515 = distinct !DILexicalBlock(scope: !8512, file: !3, line: 4514, column: 16)
!8516 = !DILocalVariable(name: "slot", scope: !8517, file: !3, line: 4521, type: !186)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 4519, column: 80)
!8518 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 4519, column: 16)
!8519 = !DILocalVariable(name: "maxkeys", scope: !8520, file: !3, line: 4532, type: !186)
!8520 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 4530, column: 78)
!8521 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 4530, column: 16)
!8522 = !DILocalVariable(name: "slot", scope: !8520, file: !3, line: 4532, type: !186)
!8523 = !DILocalVariable(name: "numkeys", scope: !8520, file: !3, line: 4533, type: !45)
!8524 = !DILocalVariable(name: "j", scope: !8520, file: !3, line: 4533, type: !45)
!8525 = !DILocalVariable(name: "keys", scope: !8520, file: !3, line: 4534, type: !8192)
!8526 = !DILocalVariable(name: "keys_in_slot", scope: !8520, file: !3, line: 4548, type: !45)
!8527 = !DILocalVariable(name: "n", scope: !8528, file: !3, line: 4561, type: !378)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 4559, column: 71)
!8529 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 4559, column: 16)
!8530 = !DILocalVariable(name: "n", scope: !8531, file: !3, line: 4580, type: !378)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 4578, column: 74)
!8532 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 4578, column: 16)
!8533 = !DILocalVariable(name: "n", scope: !8534, file: !3, line: 4618, type: !378)
!8534 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 4616, column: 75)
!8535 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 4615, column: 16)
!8536 = !DILocalVariable(name: "j", scope: !8534, file: !3, line: 4619, type: !177)
!8537 = !DILocalVariable(name: "ni", scope: !8538, file: !3, line: 4634, type: !189)
!8538 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 4633, column: 44)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 4633, column: 9)
!8540 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 4633, column: 9)
!8541 = !DILocalVariable(name: "n", scope: !8542, file: !3, line: 4642, type: !378)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 4640, column: 5)
!8543 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 4638, column: 16)
!8544 = !DILocalVariable(name: "force", scope: !8545, file: !3, line: 4654, type: !177)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 4652, column: 5)
!8546 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 4650, column: 16)
!8547 = !DILocalVariable(name: "takeover", scope: !8545, file: !3, line: 4654, type: !177)
!8548 = !DILocalVariable(name: "epoch", scope: !8549, file: !3, line: 4714, type: !186)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 4706, column: 5)
!8550 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 4705, column: 16)
!8551 = !DILocalVariable(name: "hard", scope: !8552, file: !3, line: 4745, type: !177)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 4743, column: 5)
!8553 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 4741, column: 16)
!8554 = !DILocation(line: 4192, column: 29, scope: !8443)
!8555 = !DILocation(line: 4193, column: 16, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 4193, column: 9)
!8557 = !{!785, !709, i64 2924}
!8558 = !DILocation(line: 4193, column: 32, scope: !8556)
!8559 = !DILocation(line: 4193, column: 9, scope: !8443)
!8560 = !DILocation(line: 4194, column: 9, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 4193, column: 38)
!8562 = !DILocation(line: 4195, column: 9, scope: !8561)
!8563 = !DILocation(line: 4198, column: 12, scope: !8448)
!8564 = !{!8565, !709, i64 64}
!8565 = !{!"client", !729, i64 0, !709, i64 8, !758, i64 16, !758, i64 24, !758, i64 32, !729, i64 40, !758, i64 48, !729, i64 56, !709, i64 64, !758, i64 72, !758, i64 80, !758, i64 88, !709, i64 96, !709, i64 100, !729, i64 104, !758, i64 112, !786, i64 120, !729, i64 128, !729, i64 136, !729, i64 144, !729, i64 152, !709, i64 160, !709, i64 164, !709, i64 168, !709, i64 172, !709, i64 176, !729, i64 184, !729, i64 192, !758, i64 200, !786, i64 208, !786, i64 216, !786, i64 224, !786, i64 232, !786, i64 240, !710, i64 248, !709, i64 292, !710, i64 296, !709, i64 344, !8566, i64 352, !709, i64 384, !8567, i64 392, !786, i64 480, !758, i64 488, !758, i64 496, !758, i64 504, !758, i64 512, !758, i64 520, !709, i64 528, !710, i64 532}
!8566 = !{!"multiState", !758, i64 0, !709, i64 8, !709, i64 12, !709, i64 16, !729, i64 24}
!8567 = !{!"blockingState", !786, i64 0, !758, i64 8, !758, i64 16, !729, i64 24, !758, i64 32, !758, i64 40, !786, i64 48, !786, i64 56, !709, i64 64, !709, i64 68, !786, i64 72, !758, i64 80}
!8568 = !DILocation(line: 4198, column: 17, scope: !8448)
!8569 = !DILocation(line: 0, scope: !8454)
!8570 = !{!8565, !758, i64 72}
!8571 = !DILocation(line: 4198, column: 22, scope: !8448)
!8572 = !DILocation(line: 4198, column: 26, scope: !8448)
!8573 = !DILocation(line: 4198, column: 9, scope: !8443)
!8574 = !DILocation(line: 4199, column: 9, scope: !8447)
!8575 = !DILocation(line: 4199, column: 21, scope: !8447)
!8576 = !DILocation(line: 4224, column: 25, scope: !8447)
!8577 = !DILocation(line: 4224, column: 9, scope: !8447)
!8578 = !DILocation(line: 4225, column: 5, scope: !8448)
!8579 = !DILocation(line: 4225, column: 5, scope: !8447)
!8580 = !DILocation(line: 4225, column: 17, scope: !8454)
!8581 = !DILocation(line: 4225, column: 69, scope: !8454)
!8582 = !DILocation(line: 4225, column: 52, scope: !8454)
!8583 = !DILocation(line: 4227, column: 9, scope: !8453)
!8584 = !DILocation(line: 4229, column: 35, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 4229, column: 13)
!8586 = !DILocation(line: 4227, column: 19, scope: !8453)
!8587 = !DILocation(line: 4229, column: 13, scope: !8585)
!8588 = !DILocation(line: 4229, column: 54, scope: !8585)
!8589 = !DILocation(line: 4229, column: 13, scope: !8453)
!8590 = !DILocation(line: 4231, column: 43, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 4229, column: 63)
!8592 = !DILocation(line: 4231, column: 40, scope: !8591)
!8593 = !DILocation(line: 4231, column: 52, scope: !8591)
!8594 = !DILocation(line: 4230, column: 13, scope: !8591)
!8595 = !DILocation(line: 4232, column: 13, scope: !8591)
!8596 = !DILocation(line: 4235, column: 16, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 4235, column: 13)
!8598 = !DILocation(line: 4235, column: 21, scope: !8597)
!8599 = !DILocation(line: 4235, column: 13, scope: !8453)
!8600 = !DILocation(line: 4236, column: 42, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 4236, column: 17)
!8602 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 4235, column: 27)
!8603 = !DILocation(line: 4236, column: 39, scope: !8601)
!8604 = !DILocation(line: 4227, column: 25, scope: !8453)
!8605 = !DILocation(line: 4236, column: 17, scope: !8601)
!8606 = !DILocation(line: 4236, column: 59, scope: !8601)
!8607 = !DILocation(line: 4236, column: 17, scope: !8602)
!8608 = !DILocation(line: 4245, column: 51, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 4245, column: 13)
!8610 = !DILocation(line: 4245, column: 56, scope: !8609)
!8611 = !DILocation(line: 4238, column: 47, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 4236, column: 68)
!8613 = !DILocation(line: 4238, column: 44, scope: !8612)
!8614 = !DILocation(line: 4238, column: 56, scope: !8612)
!8615 = !DILocation(line: 4237, column: 17, scope: !8612)
!8616 = !DILocation(line: 4239, column: 17, scope: !8612)
!8617 = !DILocation(line: 4242, column: 21, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 4241, column: 16)
!8619 = !DILocation(line: 4242, column: 26, scope: !8618)
!8620 = !DILocation(line: 4242, column: 19, scope: !8618)
!8621 = !DILocation(line: 4245, column: 38, scope: !8609)
!8622 = !DILocation(line: 4245, column: 35, scope: !8609)
!8623 = !DILocation(line: 4245, column: 47, scope: !8609)
!8624 = !DILocation(line: 4245, column: 13, scope: !8609)
!8625 = !DILocation(line: 4245, column: 63, scope: !8609)
!8626 = !DILocation(line: 4245, column: 68, scope: !8609)
!8627 = !DILocation(line: 4246, column: 13, scope: !8609)
!8628 = !DILocation(line: 4246, column: 19, scope: !8609)
!8629 = !DILocation(line: 4245, column: 13, scope: !8453)
!8630 = !DILocation(line: 4249, column: 39, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 4247, column: 9)
!8632 = !DILocation(line: 4249, column: 36, scope: !8631)
!8633 = !DILocation(line: 4249, column: 48, scope: !8631)
!8634 = !DILocation(line: 4249, column: 60, scope: !8631)
!8635 = !DILocation(line: 4249, column: 72, scope: !8631)
!8636 = !DILocation(line: 4248, column: 13, scope: !8631)
!8637 = !DILocation(line: 4250, column: 9, scope: !8631)
!8638 = !DILocation(line: 4251, column: 31, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 4250, column: 16)
!8640 = !{!8641, !758, i64 8}
!8641 = !{!"sharedObjectsStruct", !758, i64 0, !758, i64 8, !758, i64 16, !758, i64 24, !758, i64 32, !758, i64 40, !758, i64 48, !758, i64 56, !758, i64 64, !758, i64 72, !758, i64 80, !758, i64 88, !758, i64 96, !758, i64 104, !758, i64 112, !758, i64 120, !758, i64 128, !758, i64 136, !758, i64 144, !758, i64 152, !758, i64 160, !758, i64 168, !758, i64 176, !758, i64 184, !758, i64 192, !758, i64 200, !758, i64 208, !758, i64 216, !758, i64 224, !758, i64 232, !758, i64 240, !758, i64 248, !758, i64 256, !758, i64 264, !758, i64 272, !758, i64 280, !758, i64 288, !758, i64 296, !758, i64 304, !758, i64 312, !758, i64 320, !758, i64 328, !758, i64 336, !758, i64 344, !758, i64 352, !758, i64 360, !710, i64 368, !710, i64 448, !710, i64 80448, !710, i64 80704, !758, i64 80960, !758, i64 80968}
!8642 = !DILocation(line: 4251, column: 13, scope: !8639)
!8643 = !DILocation(line: 4253, column: 5, scope: !8454)
!8644 = !DILocation(line: 4253, column: 17, scope: !8458)
!8645 = !DILocation(line: 4253, column: 53, scope: !8458)
!8646 = !DILocation(line: 4256, column: 18, scope: !8457)
!8647 = !DILocation(line: 4256, column: 13, scope: !8457)
!8648 = !DILocation(line: 4258, column: 13, scope: !8457)
!8649 = !DILocation(line: 4255, column: 15, scope: !8457)
!8650 = !DILocation(line: 4259, column: 9, scope: !8457)
!8651 = !DILocation(line: 4260, column: 9, scope: !8457)
!8652 = !DILocation(line: 4261, column: 5, scope: !8457)
!8653 = !DILocation(line: 4261, column: 17, scope: !8465)
!8654 = !DILocation(line: 4261, column: 52, scope: !8465)
!8655 = !DILocation(line: 4263, column: 31, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 4261, column: 69)
!8657 = !DILocation(line: 4263, column: 9, scope: !8656)
!8658 = !DILocation(line: 4264, column: 5, scope: !8656)
!8659 = !DILocation(line: 4264, column: 17, scope: !8464)
!8660 = !DILocation(line: 4264, column: 53, scope: !8464)
!8661 = !DILocation(line: 4266, column: 9, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 4264, column: 70)
!8663 = !DILocation(line: 4267, column: 5, scope: !8662)
!8664 = !DILocation(line: 4267, column: 17, scope: !8463)
!8665 = !DILocation(line: 4267, column: 58, scope: !8463)
!8666 = !DILocation(line: 4269, column: 13, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8668, file: !3, line: 4269, column: 13)
!8668 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 4267, column: 75)
!8669 = !DILocation(line: 4269, column: 41, scope: !8667)
!8670 = !DILocation(line: 4269, column: 13, scope: !8668)
!8671 = !DILocation(line: 4270, column: 13, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 4269, column: 47)
!8673 = !DILocation(line: 4271, column: 13, scope: !8672)
!8674 = !DILocation(line: 4273, column: 29, scope: !8668)
!8675 = !DILocation(line: 3727, column: 38, scope: !4905, inlinedAt: !8676)
!8676 = distinct !DILocation(line: 4273, column: 9, scope: !8668)
!8677 = !DILocation(line: 3728, column: 9, scope: !4905, inlinedAt: !8676)
!8678 = !DILocation(line: 3728, column: 22, scope: !4905, inlinedAt: !8676)
!8679 = !DILocation(line: 3730, column: 5, scope: !4921, inlinedAt: !8676)
!8680 = !DILocation(line: 3698, column: 40, scope: !4913, inlinedAt: !8681)
!8681 = distinct !DILocation(line: 3731, column: 13, scope: !4918, inlinedAt: !8676)
!8682 = !DILocation(line: 3698, column: 47, scope: !4913, inlinedAt: !8681)
!8683 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !8684)
!8684 = distinct !DILocation(line: 3699, column: 12, scope: !4913, inlinedAt: !8681)
!8685 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !8684)
!8686 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !8684)
!8687 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !8684)
!8688 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !8684)
!8689 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !8684)
!8690 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !8684)
!8691 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !8684)
!8692 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !8684)
!8693 = !DILocation(line: 3731, column: 13, scope: !4919, inlinedAt: !8676)
!8694 = !DILocation(line: 3716, column: 24, scope: !2197, inlinedAt: !8695)
!8695 = distinct !DILocation(line: 3732, column: 13, scope: !4936, inlinedAt: !8676)
!8696 = !DILocation(line: 3717, column: 29, scope: !2197, inlinedAt: !8695)
!8697 = !DILocation(line: 3717, column: 22, scope: !2197, inlinedAt: !8695)
!8698 = !DILocation(line: 3717, column: 18, scope: !2197, inlinedAt: !8695)
!8699 = !DILocation(line: 3719, column: 10, scope: !2206, inlinedAt: !8695)
!8700 = !DILocation(line: 3719, column: 9, scope: !2197, inlinedAt: !8695)
!8701 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !8702)
!8702 = distinct !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !8695)
!8703 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !8702)
!8704 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !8705)
!8705 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !8702)
!8706 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !8705)
!8707 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !8705)
!8708 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !8705)
!8709 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !8705)
!8710 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !8705)
!8711 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !8705)
!8712 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !8713)
!8713 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !8702)
!8714 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !8713)
!8715 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !8713)
!8716 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !8713)
!8717 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !8713)
!8718 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !8702)
!8719 = !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !8695)
!8720 = !DILocation(line: 3693, column: 17, scope: !2251, inlinedAt: !8702)
!8721 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !8702)
!8722 = !DILocation(line: 3721, column: 12, scope: !2197, inlinedAt: !8695)
!8723 = !DILocation(line: 3721, column: 5, scope: !2197, inlinedAt: !8695)
!8724 = !DILocation(line: 3721, column: 33, scope: !2197, inlinedAt: !8695)
!8725 = !DILocation(line: 3722, column: 5, scope: !2197, inlinedAt: !8695)
!8726 = !DILocation(line: 3730, column: 37, scope: !4920, inlinedAt: !8676)
!8727 = !DILocation(line: 3730, column: 19, scope: !4920, inlinedAt: !8676)
!8728 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !8729)
!8729 = distinct !DILocation(line: 4274, column: 9, scope: !8668)
!8730 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !8729)
!8731 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !8729)
!8732 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !8729)
!8733 = !DILocation(line: 4275, column: 27, scope: !8668)
!8734 = !DILocation(line: 4275, column: 9, scope: !8668)
!8735 = !DILocation(line: 4276, column: 5, scope: !8668)
!8736 = !DILocation(line: 4276, column: 18, scope: !8462)
!8737 = !DILocation(line: 4276, column: 57, scope: !8462)
!8738 = !DILocation(line: 4277, column: 17, scope: !8462)
!8739 = !DILocation(line: 4277, column: 68, scope: !8462)
!8740 = !DILocation(line: 4277, column: 57, scope: !8462)
!8741 = !DILocation(line: 4276, column: 16, scope: !8463)
!8742 = !DILocation(line: 4282, column: 32, scope: !8461)
!8743 = !DILocation(line: 4282, column: 24, scope: !8461)
!8744 = !DILocation(line: 4283, column: 34, scope: !8461)
!8745 = !DILocation(line: 4283, column: 31, scope: !8461)
!8746 = !DILocation(line: 4283, column: 43, scope: !8461)
!8747 = !DILocation(line: 4283, column: 20, scope: !8461)
!8748 = !DILocation(line: 4283, column: 19, scope: !8461)
!8749 = !DILocation(line: 4285, column: 9, scope: !8461)
!8750 = !DILocation(line: 4281, column: 13, scope: !8461)
!8751 = !DILocation(line: 4288, column: 28, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8753, file: !3, line: 4288, column: 9)
!8753 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 4288, column: 9)
!8754 = !DILocation(line: 4288, column: 23, scope: !8752)
!8755 = !DILocation(line: 4288, column: 9, scope: !8753)
!8756 = !DILocation(line: 4310, column: 17, scope: !8471)
!8757 = distinct !{!8757, !8755, !8758}
!8758 = !DILocation(line: 4308, column: 9, scope: !8753)
!8759 = !DILocation(line: 4289, column: 45, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 4289, column: 17)
!8761 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 4288, column: 39)
!8762 = !DILocation(line: 4289, column: 42, scope: !8760)
!8763 = !DILocation(line: 4106, column: 28, scope: !8163, inlinedAt: !8764)
!8764 = distinct !DILocation(line: 4289, column: 25, scope: !8760)
!8765 = !DILocation(line: 4106, column: 37, scope: !8163, inlinedAt: !8764)
!8766 = !DILocation(line: 4107, column: 5, scope: !8163, inlinedAt: !8764)
!8767 = !DILocation(line: 4107, column: 15, scope: !8163, inlinedAt: !8764)
!8768 = !DILocation(line: 4109, column: 9, scope: !8298, inlinedAt: !8764)
!8769 = !DILocation(line: 4109, column: 40, scope: !8298, inlinedAt: !8764)
!8770 = !DILocation(line: 4110, column: 9, scope: !8298, inlinedAt: !8764)
!8771 = !DILocation(line: 4109, column: 48, scope: !8298, inlinedAt: !8764)
!8772 = !DILocation(line: 4112, column: 9, scope: !8303, inlinedAt: !8764)
!8773 = !DILocation(line: 4116, column: 1, scope: !8163, inlinedAt: !8764)
!8774 = !DILocation(line: 4281, column: 16, scope: !8461)
!8775 = !DILocation(line: 4289, column: 17, scope: !8761)
!8776 = !DILocation(line: 4115, column: 12, scope: !8163, inlinedAt: !8764)
!8777 = !DILocation(line: 4289, column: 55, scope: !8760)
!8778 = !DILocation(line: 4290, column: 17, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 4289, column: 62)
!8780 = !DILocation(line: 4291, column: 17, scope: !8779)
!8781 = !DILocation(line: 0, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 4297, column: 24)
!8783 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 4293, column: 17)
!8784 = !DILocation(line: 4293, column: 21, scope: !8783)
!8785 = !DILocation(line: 4293, column: 17, scope: !8761)
!8786 = !DILocation(line: 4294, column: 17, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 4293, column: 61)
!8788 = !DILocation(line: 4295, column: 17, scope: !8787)
!8789 = !DILocation(line: 4296, column: 17, scope: !8787)
!8790 = !DILocation(line: 4297, column: 24, scope: !8783)
!8791 = !DILocation(line: 4298, column: 17, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 4297, column: 61)
!8793 = !DILocation(line: 4299, column: 17, scope: !8792)
!8794 = !DILocation(line: 4300, column: 17, scope: !8792)
!8795 = !DILocation(line: 4302, column: 17, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 4302, column: 17)
!8797 = !DILocation(line: 4302, column: 28, scope: !8796)
!8798 = !DILocation(line: 4302, column: 31, scope: !8796)
!8799 = !DILocation(line: 4288, column: 35, scope: !8752)
!8800 = !DILocation(line: 4302, column: 17, scope: !8761)
!8801 = !DILocation(line: 4303, column: 17, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 4302, column: 37)
!8803 = !DILocation(line: 4305, column: 17, scope: !8802)
!8804 = !DILocation(line: 4306, column: 17, scope: !8802)
!8805 = !DILocation(line: 4310, column: 17, scope: !8472)
!8806 = !DILocation(line: 4315, column: 28, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 4315, column: 21)
!8808 = !DILocation(line: 4315, column: 21, scope: !8807)
!8809 = !DILocation(line: 4315, column: 21, scope: !8470)
!8810 = !DILocation(line: 4316, column: 61, scope: !8807)
!8811 = !DILocation(line: 4316, column: 21, scope: !8807)
!8812 = !DILocation(line: 4318, column: 26, scope: !8470)
!8813 = !DILocation(line: 3716, column: 24, scope: !2197, inlinedAt: !8814)
!8814 = distinct !DILocation(line: 4318, column: 32, scope: !8470)
!8815 = !DILocation(line: 3717, column: 29, scope: !2197, inlinedAt: !8814)
!8816 = !DILocation(line: 3717, column: 22, scope: !2197, inlinedAt: !8814)
!8817 = !DILocation(line: 3717, column: 18, scope: !2197, inlinedAt: !8814)
!8818 = !DILocation(line: 3719, column: 10, scope: !2206, inlinedAt: !8814)
!8819 = !DILocation(line: 3719, column: 9, scope: !2197, inlinedAt: !8814)
!8820 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !8821)
!8821 = distinct !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !8814)
!8822 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !8821)
!8823 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !8824)
!8824 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !8821)
!8825 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !8824)
!8826 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !8824)
!8827 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !8824)
!8828 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !8824)
!8829 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !8824)
!8830 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !8824)
!8831 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !8824)
!8832 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !8824)
!8833 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !8834)
!8834 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !8821)
!8835 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !8834)
!8836 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !8834)
!8837 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !8834)
!8838 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !8834)
!8839 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !8821)
!8840 = !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !8814)
!8841 = !DILocation(line: 3693, column: 17, scope: !2251, inlinedAt: !8821)
!8842 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !8821)
!8843 = !DILocation(line: 3722, column: 5, scope: !2197, inlinedAt: !8814)
!8844 = !DILocation(line: 4319, column: 47, scope: !8470)
!8845 = !DILocation(line: 3706, column: 33, scope: !1219, inlinedAt: !8846)
!8846 = distinct !DILocation(line: 4319, column: 32, scope: !8470)
!8847 = !DILocation(line: 3706, column: 40, scope: !1219, inlinedAt: !8846)
!8848 = !DILocation(line: 3707, column: 16, scope: !1228, inlinedAt: !8846)
!8849 = !DILocation(line: 3707, column: 9, scope: !1228, inlinedAt: !8846)
!8850 = !DILocation(line: 3707, column: 9, scope: !1219, inlinedAt: !8846)
!8851 = !DILocation(line: 3708, column: 5, scope: !1219, inlinedAt: !8846)
!8852 = !DILocation(line: 3710, column: 5, scope: !1219, inlinedAt: !8846)
!8853 = !DILocation(line: 4311, column: 21, scope: !8470)
!8854 = !DILocation(line: 4320, column: 17, scope: !8470)
!8855 = !DILocation(line: 0, scope: !8470)
!8856 = !DILocation(line: 4309, column: 41, scope: !8473)
!8857 = !DILocation(line: 4309, column: 23, scope: !8473)
!8858 = !DILocation(line: 4309, column: 9, scope: !8474)
!8859 = distinct !{!8859, !8858, !8860}
!8860 = !DILocation(line: 4322, column: 9, scope: !8474)
!8861 = !DILocation(line: 4323, column: 9, scope: !8461)
!8862 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !8863)
!8863 = distinct !DILocation(line: 4324, column: 9, scope: !8461)
!8864 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !8863)
!8865 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !8863)
!8866 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !8863)
!8867 = !DILocation(line: 4325, column: 27, scope: !8461)
!8868 = !DILocation(line: 4325, column: 9, scope: !8461)
!8869 = !DILocation(line: 4326, column: 5, scope: !8462)
!8870 = !DILocation(line: 4326, column: 17, scope: !8477)
!8871 = !DILocation(line: 4326, column: 66, scope: !8477)
!8872 = !DILocation(line: 4326, column: 55, scope: !8477)
!8873 = !DILocation(line: 4334, column: 13, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 4334, column: 13)
!8875 = !DILocation(line: 4334, column: 13, scope: !8476)
!8876 = !DILocation(line: 4335, column: 13, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 4334, column: 34)
!8878 = !DILocation(line: 4336, column: 13, scope: !8877)
!8879 = !DILocation(line: 4339, column: 38, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 4339, column: 13)
!8881 = !DILocation(line: 4106, column: 28, scope: !8163, inlinedAt: !8882)
!8882 = distinct !DILocation(line: 4339, column: 21, scope: !8880)
!8883 = !DILocation(line: 4106, column: 37, scope: !8163, inlinedAt: !8882)
!8884 = !DILocation(line: 4107, column: 5, scope: !8163, inlinedAt: !8882)
!8885 = !DILocation(line: 4107, column: 15, scope: !8163, inlinedAt: !8882)
!8886 = !DILocation(line: 4109, column: 9, scope: !8298, inlinedAt: !8882)
!8887 = !DILocation(line: 4109, column: 40, scope: !8298, inlinedAt: !8882)
!8888 = !DILocation(line: 4110, column: 9, scope: !8298, inlinedAt: !8882)
!8889 = !DILocation(line: 4109, column: 48, scope: !8298, inlinedAt: !8882)
!8890 = !DILocation(line: 4112, column: 9, scope: !8303, inlinedAt: !8882)
!8891 = !DILocation(line: 4116, column: 1, scope: !8163, inlinedAt: !8882)
!8892 = !DILocation(line: 4331, column: 13, scope: !8476)
!8893 = !DILocation(line: 4339, column: 13, scope: !8476)
!8894 = !DILocation(line: 4115, column: 12, scope: !8163, inlinedAt: !8882)
!8895 = !DILocation(line: 4339, column: 51, scope: !8880)
!8896 = !DILocation(line: 4341, column: 28, scope: !8484)
!8897 = !DILocation(line: 4341, column: 25, scope: !8484)
!8898 = !DILocation(line: 4341, column: 37, scope: !8484)
!8899 = !DILocation(line: 4341, column: 14, scope: !8484)
!8900 = !DILocation(line: 4341, column: 54, scope: !8484)
!8901 = !DILocation(line: 4341, column: 60, scope: !8484)
!8902 = !DILocation(line: 4341, column: 65, scope: !8484)
!8903 = !DILocation(line: 4341, column: 13, scope: !8476)
!8904 = !DILocation(line: 4342, column: 24, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 4342, column: 17)
!8906 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 4341, column: 71)
!8907 = !DILocation(line: 4342, column: 17, scope: !8905)
!8908 = !DILocation(line: 4342, column: 48, scope: !8905)
!8909 = !DILocation(line: 4342, column: 45, scope: !8905)
!8910 = !DILocation(line: 4342, column: 17, scope: !8906)
!8911 = !DILocation(line: 4343, column: 17, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 4342, column: 56)
!8913 = !DILocation(line: 4344, column: 17, scope: !8912)
!8914 = !DILocation(line: 4346, column: 40, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 4346, column: 17)
!8916 = !DILocation(line: 4346, column: 52, scope: !8915)
!8917 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !8918)
!8918 = distinct !DILocation(line: 4346, column: 22, scope: !8915)
!8919 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !8918)
!8920 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !8918)
!8921 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !8918)
!8922 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !8918)
!8923 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !8918)
!8924 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !8918)
!8925 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !8918)
!8926 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !8918)
!8927 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !8918)
!8928 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !8918)
!8929 = !DILocation(line: 4332, column: 22, scope: !8476)
!8930 = !DILocation(line: 4346, column: 58, scope: !8915)
!8931 = !DILocation(line: 4346, column: 17, scope: !8906)
!8932 = !DILocation(line: 4348, column: 31, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 4346, column: 67)
!8934 = !DILocation(line: 4348, column: 28, scope: !8933)
!8935 = !DILocation(line: 4348, column: 40, scope: !8933)
!8936 = !DILocation(line: 4347, column: 17, scope: !8933)
!8937 = !DILocation(line: 4349, column: 17, scope: !8933)
!8938 = !DILocation(line: 4351, column: 20, scope: !8906)
!8939 = !DILocation(line: 4351, column: 13, scope: !8906)
!8940 = !DILocation(line: 4351, column: 54, scope: !8906)
!8941 = !DILocation(line: 4352, column: 9, scope: !8906)
!8942 = !DILocation(line: 4352, column: 21, scope: !8483)
!8943 = !DILocation(line: 4352, column: 61, scope: !8483)
!8944 = !DILocation(line: 4352, column: 67, scope: !8483)
!8945 = !DILocation(line: 4352, column: 72, scope: !8483)
!8946 = !DILocation(line: 4352, column: 20, scope: !8484)
!8947 = !DILocation(line: 4353, column: 24, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 4353, column: 17)
!8949 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 4352, column: 78)
!8950 = !DILocation(line: 4353, column: 17, scope: !8948)
!8951 = !DILocation(line: 4353, column: 48, scope: !8948)
!8952 = !DILocation(line: 4353, column: 45, scope: !8948)
!8953 = !DILocation(line: 4353, column: 17, scope: !8949)
!8954 = !DILocation(line: 4354, column: 17, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 4353, column: 56)
!8956 = !DILocation(line: 4356, column: 17, scope: !8955)
!8957 = !DILocation(line: 4358, column: 40, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 4358, column: 17)
!8959 = !DILocation(line: 4358, column: 52, scope: !8958)
!8960 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !8961)
!8961 = distinct !DILocation(line: 4358, column: 22, scope: !8958)
!8962 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !8961)
!8963 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !8961)
!8964 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !8961)
!8965 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !8961)
!8966 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !8961)
!8967 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !8961)
!8968 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !8961)
!8969 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !8961)
!8970 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !8961)
!8971 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !8961)
!8972 = !DILocation(line: 4358, column: 58, scope: !8958)
!8973 = !DILocation(line: 4358, column: 17, scope: !8949)
!8974 = !DILocation(line: 4360, column: 31, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 4358, column: 67)
!8976 = !DILocation(line: 4360, column: 28, scope: !8975)
!8977 = !DILocation(line: 4360, column: 40, scope: !8975)
!8978 = !DILocation(line: 4359, column: 17, scope: !8975)
!8979 = !DILocation(line: 4361, column: 17, scope: !8975)
!8980 = !DILocation(line: 4363, column: 20, scope: !8949)
!8981 = !DILocation(line: 4363, column: 13, scope: !8949)
!8982 = !DILocation(line: 4363, column: 56, scope: !8949)
!8983 = !DILocation(line: 4364, column: 9, scope: !8949)
!8984 = !DILocation(line: 4364, column: 21, scope: !8482)
!8985 = !DILocation(line: 4364, column: 58, scope: !8482)
!8986 = !DILocation(line: 4364, column: 64, scope: !8482)
!8987 = !DILocation(line: 4364, column: 69, scope: !8482)
!8988 = !DILocation(line: 4364, column: 20, scope: !8483)
!8989 = !DILocation(line: 4366, column: 20, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4364, column: 75)
!8991 = !DILocation(line: 4366, column: 13, scope: !8990)
!8992 = !DILocation(line: 4366, column: 56, scope: !8990)
!8993 = !DILocation(line: 4367, column: 20, scope: !8990)
!8994 = !DILocation(line: 4367, column: 13, scope: !8990)
!8995 = !DILocation(line: 4367, column: 54, scope: !8990)
!8996 = !DILocation(line: 4368, column: 9, scope: !8990)
!8997 = !DILocation(line: 4368, column: 21, scope: !8481)
!8998 = !DILocation(line: 4368, column: 56, scope: !8481)
!8999 = !DILocation(line: 4368, column: 62, scope: !8481)
!9000 = !DILocation(line: 4368, column: 67, scope: !8481)
!9001 = !DILocation(line: 4368, column: 20, scope: !8482)
!9002 = !DILocation(line: 4370, column: 48, scope: !8480)
!9003 = !DILocation(line: 4370, column: 60, scope: !8480)
!9004 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !9005)
!9005 = distinct !DILocation(line: 4370, column: 30, scope: !8480)
!9006 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !9005)
!9007 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !9005)
!9008 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !9005)
!9009 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !9005)
!9010 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !9005)
!9011 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !9005)
!9012 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !9005)
!9013 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !9005)
!9014 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !9005)
!9015 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !9005)
!9016 = !DILocation(line: 4370, column: 26, scope: !8480)
!9017 = !DILocation(line: 4372, column: 18, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 4372, column: 17)
!9019 = !DILocation(line: 4372, column: 17, scope: !8480)
!9020 = !DILocation(line: 4374, column: 31, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 4372, column: 21)
!9022 = !DILocation(line: 4374, column: 28, scope: !9021)
!9023 = !DILocation(line: 4374, column: 40, scope: !9021)
!9024 = !DILocation(line: 4373, column: 17, scope: !9021)
!9025 = !DILocation(line: 4379, column: 24, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 4379, column: 17)
!9027 = !DILocation(line: 4379, column: 17, scope: !9026)
!9028 = !DILocation(line: 4379, column: 48, scope: !9026)
!9029 = !DILocation(line: 4379, column: 45, scope: !9026)
!9030 = !DILocation(line: 4379, column: 60, scope: !9026)
!9031 = !DILocation(line: 4379, column: 55, scope: !9026)
!9032 = !DILocation(line: 4380, column: 21, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 4380, column: 21)
!9034 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 4379, column: 71)
!9035 = !DILocation(line: 4380, column: 43, scope: !9033)
!9036 = !DILocation(line: 4380, column: 21, scope: !9034)
!9037 = !DILocation(line: 4381, column: 21, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 4380, column: 49)
!9039 = !DILocation(line: 4390, column: 17, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 4390, column: 17)
!9041 = !DILocation(line: 4390, column: 39, scope: !9040)
!9042 = !DILocation(line: 4390, column: 44, scope: !9040)
!9043 = !DILocation(line: 4391, column: 24, scope: !9040)
!9044 = !DILocation(line: 4391, column: 17, scope: !9040)
!9045 = !DILocation(line: 4390, column: 17, scope: !8480)
!9046 = !DILocation(line: 4392, column: 58, scope: !9040)
!9047 = !DILocation(line: 4392, column: 17, scope: !9040)
!9048 = !DILocation(line: 4396, column: 22, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 4396, column: 17)
!9050 = !DILocation(line: 4396, column: 19, scope: !9049)
!9051 = !DILocation(line: 4396, column: 29, scope: !9049)
!9052 = !DILocation(line: 4397, column: 24, scope: !9049)
!9053 = !DILocation(line: 4397, column: 17, scope: !9049)
!9054 = !DILocation(line: 4396, column: 17, scope: !8480)
!9055 = !DILocation(line: 4408, column: 21, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 4408, column: 21)
!9057 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 4398, column: 13)
!9058 = !DILocation(line: 4408, column: 62, scope: !9056)
!9059 = !DILocation(line: 4408, column: 21, scope: !9057)
!9060 = !DILocation(line: 4409, column: 21, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 4408, column: 71)
!9062 = !DILocation(line: 4411, column: 17, scope: !9061)
!9063 = !DILocation(line: 4412, column: 24, scope: !9057)
!9064 = !DILocation(line: 4412, column: 17, scope: !9057)
!9065 = !DILocation(line: 4412, column: 60, scope: !9057)
!9066 = !DILocation(line: 4413, column: 13, scope: !9057)
!9067 = !DILocation(line: 3716, column: 24, scope: !2197, inlinedAt: !9068)
!9068 = distinct !DILocation(line: 4414, column: 13, scope: !8480)
!9069 = !DILocation(line: 3717, column: 29, scope: !2197, inlinedAt: !9068)
!9070 = !DILocation(line: 3717, column: 22, scope: !2197, inlinedAt: !9068)
!9071 = !DILocation(line: 3717, column: 18, scope: !2197, inlinedAt: !9068)
!9072 = !DILocation(line: 3719, column: 10, scope: !2206, inlinedAt: !9068)
!9073 = !DILocation(line: 3719, column: 9, scope: !2197, inlinedAt: !9068)
!9074 = !DILocation(line: 3690, column: 42, scope: !2209, inlinedAt: !9075)
!9075 = distinct !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !9068)
!9076 = !DILocation(line: 3690, column: 49, scope: !2209, inlinedAt: !9075)
!9077 = !DILocation(line: 3627, column: 34, scope: !2217, inlinedAt: !9078)
!9078 = distinct !DILocation(line: 3691, column: 15, scope: !2209, inlinedAt: !9075)
!9079 = !DILocation(line: 3627, column: 46, scope: !2217, inlinedAt: !9078)
!9080 = !DILocation(line: 3628, column: 11, scope: !2217, inlinedAt: !9078)
!9081 = !DILocation(line: 3629, column: 18, scope: !2217, inlinedAt: !9078)
!9082 = !DILocation(line: 3629, column: 9, scope: !2217, inlinedAt: !9078)
!9083 = !DILocation(line: 3630, column: 13, scope: !2217, inlinedAt: !9078)
!9084 = !DILocation(line: 3630, column: 30, scope: !2217, inlinedAt: !9078)
!9085 = !DILocation(line: 3630, column: 26, scope: !2217, inlinedAt: !9078)
!9086 = !DILocation(line: 3630, column: 38, scope: !2217, inlinedAt: !9078)
!9087 = !DILocation(line: 3641, column: 36, scope: !2235, inlinedAt: !9088)
!9088 = distinct !DILocation(line: 3692, column: 5, scope: !2209, inlinedAt: !9075)
!9089 = !DILocation(line: 3641, column: 48, scope: !2235, inlinedAt: !9088)
!9090 = !DILocation(line: 3642, column: 11, scope: !2235, inlinedAt: !9088)
!9091 = !DILocation(line: 3643, column: 9, scope: !2235, inlinedAt: !9088)
!9092 = !DILocation(line: 3644, column: 18, scope: !2235, inlinedAt: !9088)
!9093 = !DILocation(line: 3693, column: 9, scope: !2209, inlinedAt: !9075)
!9094 = !DILocation(line: 3720, column: 5, scope: !2197, inlinedAt: !9068)
!9095 = !DILocation(line: 3693, column: 17, scope: !2251, inlinedAt: !9075)
!9096 = !DILocation(line: 3693, column: 25, scope: !2251, inlinedAt: !9075)
!9097 = !DILocation(line: 3721, column: 12, scope: !2197, inlinedAt: !9068)
!9098 = !DILocation(line: 3721, column: 5, scope: !2197, inlinedAt: !9068)
!9099 = !DILocation(line: 3721, column: 33, scope: !2197, inlinedAt: !9068)
!9100 = !DILocation(line: 3707, column: 16, scope: !1228, inlinedAt: !9101)
!9101 = distinct !DILocation(line: 4415, column: 13, scope: !8480)
!9102 = !DILocation(line: 3707, column: 9, scope: !1228, inlinedAt: !9101)
!9103 = !DILocation(line: 3722, column: 5, scope: !2197, inlinedAt: !9068)
!9104 = !DILocation(line: 3706, column: 33, scope: !1219, inlinedAt: !9101)
!9105 = !DILocation(line: 3706, column: 40, scope: !1219, inlinedAt: !9101)
!9106 = !DILocation(line: 3707, column: 9, scope: !1219, inlinedAt: !9101)
!9107 = !DILocation(line: 3708, column: 5, scope: !1219, inlinedAt: !9101)
!9108 = !DILocation(line: 3709, column: 12, scope: !1219, inlinedAt: !9101)
!9109 = !DILocation(line: 3709, column: 5, scope: !1219, inlinedAt: !9101)
!9110 = !DILocation(line: 3709, column: 33, scope: !1219, inlinedAt: !9101)
!9111 = !DILocation(line: 3710, column: 5, scope: !1219, inlinedAt: !9101)
!9112 = !DILocation(line: 4417, column: 13, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 4416, column: 16)
!9114 = !DILocation(line: 4419, column: 13, scope: !9113)
!9115 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !9116)
!9116 = distinct !DILocation(line: 4421, column: 9, scope: !8476)
!9117 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !9116)
!9118 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !9116)
!9119 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !9116)
!9120 = !DILocation(line: 4422, column: 27, scope: !8476)
!9121 = !DILocation(line: 4422, column: 9, scope: !8476)
!9122 = !DILocation(line: 4423, column: 5, scope: !8477)
!9123 = !DILocation(line: 4423, column: 17, scope: !8487)
!9124 = !DILocation(line: 4423, column: 57, scope: !8487)
!9125 = !DILocation(line: 4425, column: 22, scope: !8486)
!9126 = !DILocation(line: 4425, column: 13, scope: !8486)
!9127 = !DILocation(line: 4426, column: 34, scope: !8486)
!9128 = !DILocation(line: 4427, column: 25, scope: !8486)
!9129 = !DILocation(line: 4427, column: 17, scope: !8486)
!9130 = !DILocation(line: 4428, column: 38, scope: !8486)
!9131 = !DILocation(line: 4428, column: 46, scope: !8486)
!9132 = !DILocation(line: 4426, column: 21, scope: !8486)
!9133 = !DILocation(line: 4426, column: 13, scope: !8486)
!9134 = !DILocation(line: 4429, column: 9, scope: !8486)
!9135 = !DILocation(line: 4430, column: 5, scope: !8486)
!9136 = !DILocation(line: 4430, column: 17, scope: !8491)
!9137 = !DILocation(line: 4430, column: 52, scope: !8491)
!9138 = !DILocation(line: 4433, column: 13, scope: !8490)
!9139 = !DILocation(line: 4433, column: 33, scope: !8490)
!9140 = !DILocation(line: 4433, column: 47, scope: !8490)
!9141 = !DILocation(line: 4433, column: 64, scope: !8490)
!9142 = !DILocation(line: 4435, column: 13, scope: !8490)
!9143 = !DILocation(line: 4437, column: 9, scope: !8502)
!9144 = !DILocation(line: 4438, column: 30, scope: !8500)
!9145 = !DILocation(line: 4438, column: 26, scope: !8500)
!9146 = !DILocation(line: 4440, column: 19, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 4440, column: 17)
!9148 = !DILocation(line: 4440, column: 17, scope: !8500)
!9149 = !DILocation(line: 4441, column: 27, scope: !8500)
!9150 = !DILocation(line: 4442, column: 17, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 4442, column: 17)
!9152 = !DILocation(line: 4442, column: 17, scope: !8500)
!9153 = !DILocation(line: 4443, column: 27, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 4442, column: 32)
!9155 = !DILocation(line: 4444, column: 13, scope: !9154)
!9156 = !DILocation(line: 4444, column: 24, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 4444, column: 24)
!9158 = !DILocation(line: 4444, column: 24, scope: !9151)
!9159 = !DILocation(line: 4445, column: 28, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 4444, column: 41)
!9161 = !DILocation(line: 4446, column: 13, scope: !9160)
!9162 = !DILocation(line: 4447, column: 25, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 4446, column: 20)
!9164 = !DILocation(line: 0, scope: !9154)
!9165 = !DILocation(line: 0, scope: !8500)
!9166 = !DILocation(line: 4437, column: 41, scope: !8501)
!9167 = !DILocation(line: 4437, column: 23, scope: !8501)
!9168 = distinct !{!9168, !9143, !9169}
!9169 = !DILocation(line: 4449, column: 9, scope: !8502)
!9170 = !DILocation(line: 4451, column: 20, scope: !8490)
!9171 = !DILocation(line: 4451, column: 40, scope: !8490)
!9172 = !DILocation(line: 4451, column: 51, scope: !8490)
!9173 = !DILocation(line: 4451, column: 43, scope: !8490)
!9174 = !DILocation(line: 4451, column: 19, scope: !8490)
!9175 = !DILocation(line: 0, scope: !8490)
!9176 = !DILocation(line: 4434, column: 18, scope: !8490)
!9177 = !DILocation(line: 4454, column: 33, scope: !8490)
!9178 = !DILocation(line: 4464, column: 31, scope: !8490)
!9179 = !DILocation(line: 4464, column: 40, scope: !8490)
!9180 = !DILocation(line: 4464, column: 15, scope: !8490)
!9181 = !DILocation(line: 4469, column: 13, scope: !8490)
!9182 = !DILocation(line: 4470, column: 29, scope: !8490)
!9183 = !DILocation(line: 4471, column: 50, scope: !8490)
!9184 = !DILocation(line: 4454, column: 20, scope: !8490)
!9185 = !DILocation(line: 4454, column: 13, scope: !8490)
!9186 = !DILocation(line: 4476, column: 19, scope: !8490)
!9187 = !DILocation(line: 4477, column: 19, scope: !8490)
!9188 = !DILocation(line: 4479, column: 18, scope: !8507)
!9189 = !DILocation(line: 4479, column: 9, scope: !8507)
!9190 = !DILocation(line: 4487, column: 16, scope: !8490)
!9191 = !DILocation(line: 4490, column: 18, scope: !8509)
!9192 = !DILocation(line: 4490, column: 9, scope: !8509)
!9193 = !DILocation(line: 4480, column: 24, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 4480, column: 17)
!9195 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 4479, column: 57)
!9196 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 4479, column: 9)
!9197 = !DILocation(line: 4480, column: 17, scope: !9194)
!9198 = !DILocation(line: 4480, column: 60, scope: !9194)
!9199 = !DILocation(line: 4480, column: 17, scope: !9195)
!9200 = !DILocation(line: 4481, column: 26, scope: !9195)
!9201 = !DILocation(line: 4090, column: 45, scope: !8155, inlinedAt: !9202)
!9202 = distinct !DILocation(line: 4484, column: 17, scope: !9195)
!9203 = !DILocation(line: 4091, column: 5, scope: !8155, inlinedAt: !9202)
!9204 = !DILocation(line: 0, scope: !9205, inlinedAt: !9202)
!9205 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 4091, column: 18)
!9206 = !DILocation(line: 4482, column: 20, scope: !9195)
!9207 = !DILocation(line: 4486, column: 9, scope: !9195)
!9208 = !DILocation(line: 0, scope: !9195)
!9209 = !DILocation(line: 4479, column: 53, scope: !9196)
!9210 = !DILocation(line: 4479, column: 27, scope: !9196)
!9211 = distinct !{!9211, !9189, !9212}
!9212 = !DILocation(line: 4486, column: 9, scope: !8507)
!9213 = !DILocation(line: 4498, column: 16, scope: !8490)
!9214 = !DILocation(line: 4502, column: 36, scope: !8490)
!9215 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !9216)
!9216 = distinct !DILocation(line: 4503, column: 28, scope: !8490)
!9217 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !9216)
!9218 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !9216)
!9219 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !9216)
!9220 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !9216)
!9221 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !9216)
!9222 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !9216)
!9223 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !9216)
!9224 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !9216)
!9225 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !9216)
!9226 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !9216)
!9227 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !9216)
!9228 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !9216)
!9229 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !9216)
!9230 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !9216)
!9231 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !9216)
!9232 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !9216)
!9233 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !9216)
!9234 = !DILocation(line: 0, scope: !1486, inlinedAt: !9216)
!9235 = !DILocation(line: 4502, column: 23, scope: !8490)
!9236 = !DILocation(line: 4502, column: 9, scope: !8490)
!9237 = !DILocation(line: 4504, column: 9, scope: !8490)
!9238 = !DILocation(line: 4505, column: 27, scope: !8490)
!9239 = !{!8641, !758, i64 0}
!9240 = !DILocation(line: 4505, column: 9, scope: !8490)
!9241 = !DILocation(line: 4506, column: 5, scope: !8490)
!9242 = !DILocation(line: 4491, column: 24, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !3, line: 4491, column: 17)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 4490, column: 57)
!9245 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 4490, column: 9)
!9246 = !DILocation(line: 4491, column: 17, scope: !9243)
!9247 = !DILocation(line: 4491, column: 64, scope: !9243)
!9248 = !DILocation(line: 4491, column: 17, scope: !9244)
!9249 = !DILocation(line: 4492, column: 30, scope: !9244)
!9250 = !DILocation(line: 4090, column: 45, scope: !8155, inlinedAt: !9251)
!9251 = distinct !DILocation(line: 4495, column: 17, scope: !9244)
!9252 = !DILocation(line: 4091, column: 5, scope: !8155, inlinedAt: !9251)
!9253 = !DILocation(line: 0, scope: !9205, inlinedAt: !9251)
!9254 = !DILocation(line: 4493, column: 20, scope: !9244)
!9255 = !DILocation(line: 4497, column: 9, scope: !9244)
!9256 = !DILocation(line: 0, scope: !9244)
!9257 = !DILocation(line: 4490, column: 53, scope: !9245)
!9258 = !DILocation(line: 4490, column: 27, scope: !9245)
!9259 = distinct !{!9259, !9192, !9260}
!9260 = !DILocation(line: 4497, column: 9, scope: !8509)
!9261 = !DILocation(line: 4506, column: 17, scope: !8512)
!9262 = !DILocation(line: 4506, column: 58, scope: !8512)
!9263 = !DILocation(line: 4507, column: 22, scope: !8511)
!9264 = !DILocation(line: 4507, column: 13, scope: !8511)
!9265 = !DILocation(line: 4509, column: 20, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 4509, column: 13)
!9267 = !DILocation(line: 4509, column: 13, scope: !8511)
!9268 = !DILocation(line: 4510, column: 31, scope: !9266)
!9269 = !DILocation(line: 4510, column: 13, scope: !9266)
!9270 = !DILocation(line: 4513, column: 26, scope: !9266)
!9271 = !DILocation(line: 4513, column: 17, scope: !9266)
!9272 = !DILocation(line: 4512, column: 13, scope: !9266)
!9273 = !DILocation(line: 4514, column: 17, scope: !8515)
!9274 = !DILocation(line: 4514, column: 66, scope: !8515)
!9275 = !DILocation(line: 4514, column: 55, scope: !8515)
!9276 = !DILocation(line: 4516, column: 19, scope: !8514)
!9277 = !DILocation(line: 4516, column: 31, scope: !8514)
!9278 = !DILocation(line: 4516, column: 13, scope: !8514)
!9279 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !9280)
!9280 = distinct !DILocation(line: 4518, column: 44, scope: !8514)
!9281 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !9280)
!9282 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !9280)
!9283 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !9280)
!9284 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !9280)
!9285 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !9280)
!9286 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !9280)
!9287 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !9280)
!9288 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !9280)
!9289 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !9280)
!9290 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !9280)
!9291 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !9280)
!9292 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !9280)
!9293 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !9280)
!9294 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !9280)
!9295 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !9280)
!9296 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !9280)
!9297 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !9280)
!9298 = !DILocation(line: 0, scope: !1486, inlinedAt: !9280)
!9299 = !DILocation(line: 4518, column: 44, scope: !8514)
!9300 = !DILocation(line: 4518, column: 28, scope: !8514)
!9301 = !DILocation(line: 4518, column: 9, scope: !8514)
!9302 = !DILocation(line: 4519, column: 5, scope: !8514)
!9303 = !DILocation(line: 4519, column: 17, scope: !8518)
!9304 = !DILocation(line: 4519, column: 63, scope: !8518)
!9305 = !DILocation(line: 4521, column: 9, scope: !8517)
!9306 = !DILocation(line: 4523, column: 44, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 4523, column: 13)
!9308 = !DILocation(line: 4521, column: 19, scope: !8517)
!9309 = !DILocation(line: 4523, column: 13, scope: !9307)
!9310 = !DILocation(line: 4523, column: 67, scope: !9307)
!9311 = !DILocation(line: 4523, column: 13, scope: !8517)
!9312 = !DILocation(line: 4525, column: 13, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 4525, column: 13)
!9314 = !DILocation(line: 4525, column: 22, scope: !9313)
!9315 = !DILocation(line: 4526, column: 13, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9313, file: !3, line: 4525, column: 48)
!9317 = !DILocation(line: 4527, column: 13, scope: !9316)
!9318 = !DILocation(line: 4529, column: 44, scope: !8517)
!9319 = !DILocation(line: 4529, column: 28, scope: !8517)
!9320 = !DILocation(line: 4529, column: 9, scope: !8517)
!9321 = !DILocation(line: 4530, column: 5, scope: !8518)
!9322 = !DILocation(line: 4530, column: 17, scope: !8521)
!9323 = !DILocation(line: 4530, column: 72, scope: !8521)
!9324 = !DILocation(line: 4530, column: 61, scope: !8521)
!9325 = !DILocation(line: 4532, column: 9, scope: !8520)
!9326 = !DILocation(line: 4536, column: 44, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 4536, column: 13)
!9328 = !DILocation(line: 4532, column: 28, scope: !8520)
!9329 = !DILocation(line: 4536, column: 13, scope: !9327)
!9330 = !DILocation(line: 4536, column: 67, scope: !9327)
!9331 = !DILocation(line: 4536, column: 13, scope: !8520)
!9332 = !DILocation(line: 4538, column: 47, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 4538, column: 13)
!9334 = !DILocation(line: 4538, column: 44, scope: !9333)
!9335 = !DILocation(line: 4532, column: 19, scope: !8520)
!9336 = !DILocation(line: 4538, column: 13, scope: !9333)
!9337 = !DILocation(line: 4539, column: 13, scope: !9333)
!9338 = !DILocation(line: 4538, column: 13, scope: !8520)
!9339 = !DILocation(line: 4541, column: 13, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 4541, column: 13)
!9341 = !DILocation(line: 4541, column: 22, scope: !9340)
!9342 = !DILocation(line: 4541, column: 50, scope: !9340)
!9343 = !DILocation(line: 4541, column: 58, scope: !9340)
!9344 = !DILocation(line: 4542, column: 13, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 4541, column: 63)
!9346 = !DILocation(line: 4543, column: 13, scope: !9345)
!9347 = !DILocation(line: 4548, column: 53, scope: !8520)
!9348 = !DILocation(line: 4548, column: 37, scope: !8520)
!9349 = !DILocation(line: 4548, column: 22, scope: !8520)
!9350 = !DILocation(line: 4549, column: 13, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 4549, column: 13)
!9352 = !DILocation(line: 4549, column: 23, scope: !9351)
!9353 = !DILocation(line: 4549, column: 21, scope: !9351)
!9354 = !DILocation(line: 4549, column: 13, scope: !8520)
!9355 = !DILocation(line: 4549, column: 45, scope: !9351)
!9356 = !DILocation(line: 4549, column: 37, scope: !9351)
!9357 = !DILocation(line: 4551, column: 38, scope: !8520)
!9358 = !DILocation(line: 4551, column: 37, scope: !8520)
!9359 = !DILocation(line: 4551, column: 16, scope: !8520)
!9360 = !DILocation(line: 4534, column: 16, scope: !8520)
!9361 = !DILocation(line: 4552, column: 33, scope: !8520)
!9362 = !DILocation(line: 4552, column: 45, scope: !8520)
!9363 = !DILocation(line: 4552, column: 19, scope: !8520)
!9364 = !DILocation(line: 4533, column: 22, scope: !8520)
!9365 = !DILocation(line: 4553, column: 32, scope: !8520)
!9366 = !DILocation(line: 4553, column: 9, scope: !8520)
!9367 = !DILocation(line: 4533, column: 31, scope: !8520)
!9368 = !DILocation(line: 4554, column: 23, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 4554, column: 9)
!9370 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 4554, column: 9)
!9371 = !DILocation(line: 4554, column: 9, scope: !9370)
!9372 = !DILocation(line: 4555, column: 28, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 4554, column: 39)
!9374 = !DILocation(line: 4555, column: 13, scope: !9373)
!9375 = !DILocation(line: 4556, column: 26, scope: !9373)
!9376 = !DILocation(line: 4556, column: 13, scope: !9373)
!9377 = !DILocation(line: 4554, column: 35, scope: !9369)
!9378 = distinct !{!9378, !9371, !9379}
!9379 = !DILocation(line: 4557, column: 9, scope: !9370)
!9380 = !DILocation(line: 4558, column: 9, scope: !8520)
!9381 = !DILocation(line: 4559, column: 5, scope: !8521)
!9382 = !DILocation(line: 4559, column: 17, scope: !8529)
!9383 = !DILocation(line: 4559, column: 54, scope: !8529)
!9384 = !DILocation(line: 4561, column: 44, scope: !8528)
!9385 = !DILocation(line: 4561, column: 56, scope: !8528)
!9386 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !9387)
!9387 = distinct !DILocation(line: 4561, column: 26, scope: !8528)
!9388 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !9387)
!9389 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !9387)
!9390 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !9387)
!9391 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !9387)
!9392 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !9387)
!9393 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !9387)
!9394 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !9387)
!9395 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !9387)
!9396 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !9387)
!9397 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !9387)
!9398 = !DILocation(line: 4561, column: 22, scope: !8528)
!9399 = !DILocation(line: 4563, column: 14, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 4563, column: 13)
!9401 = !DILocation(line: 4563, column: 13, scope: !8528)
!9402 = !DILocation(line: 4564, column: 64, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 4563, column: 17)
!9404 = !DILocation(line: 4564, column: 61, scope: !9403)
!9405 = !DILocation(line: 4564, column: 73, scope: !9403)
!9406 = !DILocation(line: 4564, column: 13, scope: !9403)
!9407 = !DILocation(line: 4565, column: 13, scope: !9403)
!9408 = !DILocation(line: 4566, column: 25, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 4566, column: 20)
!9410 = !DILocation(line: 4566, column: 22, scope: !9409)
!9411 = !DILocation(line: 4566, column: 20, scope: !9400)
!9412 = !DILocation(line: 4567, column: 13, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 4566, column: 33)
!9414 = !DILocation(line: 4568, column: 13, scope: !9413)
!9415 = !DILocation(line: 4569, column: 20, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 4569, column: 20)
!9417 = !DILocation(line: 4569, column: 40, scope: !9416)
!9418 = !DILocation(line: 4569, column: 51, scope: !9416)
!9419 = !DILocation(line: 4569, column: 59, scope: !9416)
!9420 = !DILocation(line: 4569, column: 20, scope: !9409)
!9421 = !DILocation(line: 4570, column: 13, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 4569, column: 65)
!9423 = !DILocation(line: 4571, column: 13, scope: !9422)
!9424 = !DILocation(line: 4573, column: 9, scope: !8528)
!9425 = !DILocation(line: 4574, column: 9, scope: !8528)
!9426 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !9427)
!9427 = distinct !DILocation(line: 4575, column: 9, scope: !8528)
!9428 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !9427)
!9429 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !9427)
!9430 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !9427)
!9431 = !DILocation(line: 4577, column: 27, scope: !8528)
!9432 = !DILocation(line: 4577, column: 9, scope: !8528)
!9433 = !DILocation(line: 4578, column: 5, scope: !8529)
!9434 = !DILocation(line: 4578, column: 17, scope: !8532)
!9435 = !DILocation(line: 4578, column: 57, scope: !8532)
!9436 = !DILocation(line: 4580, column: 44, scope: !8531)
!9437 = !DILocation(line: 4580, column: 56, scope: !8531)
!9438 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !9439)
!9439 = distinct !DILocation(line: 4580, column: 26, scope: !8531)
!9440 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !9439)
!9441 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !9439)
!9442 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !9439)
!9443 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !9439)
!9444 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !9439)
!9445 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !9439)
!9446 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !9439)
!9447 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !9439)
!9448 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !9439)
!9449 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !9439)
!9450 = !DILocation(line: 4580, column: 22, scope: !8531)
!9451 = !DILocation(line: 4583, column: 14, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 4583, column: 13)
!9453 = !DILocation(line: 4583, column: 13, scope: !8531)
!9454 = !DILocation(line: 4584, column: 64, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 4583, column: 17)
!9456 = !DILocation(line: 4584, column: 61, scope: !9455)
!9457 = !DILocation(line: 4584, column: 73, scope: !9455)
!9458 = !DILocation(line: 4584, column: 13, scope: !9455)
!9459 = !DILocation(line: 4585, column: 13, scope: !9455)
!9460 = !DILocation(line: 4589, column: 18, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 4589, column: 13)
!9462 = !DILocation(line: 4589, column: 15, scope: !9461)
!9463 = !DILocation(line: 4589, column: 13, scope: !8531)
!9464 = !DILocation(line: 4590, column: 13, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 4589, column: 26)
!9466 = !DILocation(line: 4591, column: 13, scope: !9465)
!9467 = !DILocation(line: 4595, column: 13, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 4595, column: 13)
!9469 = !DILocation(line: 4595, column: 13, scope: !8531)
!9470 = !DILocation(line: 4596, column: 13, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 4595, column: 29)
!9472 = !DILocation(line: 4597, column: 13, scope: !9471)
!9473 = !DILocation(line: 4603, column: 13, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 4603, column: 13)
!9475 = !DILocation(line: 4603, column: 34, scope: !9474)
!9476 = !DILocation(line: 4604, column: 22, scope: !9474)
!9477 = !DILocation(line: 4604, column: 31, scope: !9474)
!9478 = !DILocation(line: 4604, column: 36, scope: !9474)
!9479 = !DILocation(line: 4604, column: 39, scope: !9474)
!9480 = !DILocation(line: 4604, column: 67, scope: !9474)
!9481 = !DILocation(line: 4603, column: 13, scope: !8531)
!9482 = !DILocation(line: 4605, column: 13, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 4604, column: 74)
!9484 = !DILocation(line: 4608, column: 13, scope: !9483)
!9485 = !DILocation(line: 4612, column: 9, scope: !8531)
!9486 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !9487)
!9487 = distinct !DILocation(line: 4613, column: 9, scope: !8531)
!9488 = !DILocation(line: 3618, column: 12, scope: !1717, inlinedAt: !9487)
!9489 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !9487)
!9490 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !9487)
!9491 = !DILocation(line: 4614, column: 27, scope: !8531)
!9492 = !DILocation(line: 4614, column: 9, scope: !8531)
!9493 = !DILocation(line: 4615, column: 5, scope: !8532)
!9494 = !DILocation(line: 4615, column: 18, scope: !8535)
!9495 = !DILocation(line: 4615, column: 55, scope: !8535)
!9496 = !DILocation(line: 4616, column: 18, scope: !8535)
!9497 = !DILocation(line: 4616, column: 58, scope: !8535)
!9498 = !DILocation(line: 4615, column: 16, scope: !8532)
!9499 = !DILocation(line: 4618, column: 44, scope: !8534)
!9500 = !DILocation(line: 4618, column: 56, scope: !8534)
!9501 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !9502)
!9502 = distinct !DILocation(line: 4618, column: 26, scope: !8534)
!9503 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !9502)
!9504 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !9502)
!9505 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !9502)
!9506 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !9502)
!9507 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !9502)
!9508 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !9502)
!9509 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !9502)
!9510 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !9502)
!9511 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !9502)
!9512 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !9502)
!9513 = !DILocation(line: 4618, column: 22, scope: !8534)
!9514 = !DILocation(line: 4622, column: 14, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 4622, column: 13)
!9516 = !DILocation(line: 4622, column: 13, scope: !8534)
!9517 = !DILocation(line: 4623, column: 64, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 4622, column: 17)
!9519 = !DILocation(line: 4623, column: 61, scope: !9518)
!9520 = !DILocation(line: 4623, column: 73, scope: !9518)
!9521 = !DILocation(line: 4623, column: 13, scope: !9518)
!9522 = !DILocation(line: 4624, column: 13, scope: !9518)
!9523 = !DILocation(line: 4627, column: 13, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 4627, column: 13)
!9525 = !DILocation(line: 4627, column: 13, scope: !8534)
!9526 = !DILocation(line: 4628, column: 13, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 4627, column: 29)
!9528 = !DILocation(line: 4629, column: 13, scope: !9527)
!9529 = !DILocation(line: 4632, column: 35, scope: !8534)
!9530 = !DILocation(line: 4632, column: 32, scope: !8534)
!9531 = !DILocation(line: 4632, column: 9, scope: !8534)
!9532 = !DILocation(line: 4619, column: 13, scope: !8534)
!9533 = !DILocation(line: 4633, column: 28, scope: !8539)
!9534 = !DILocation(line: 4633, column: 23, scope: !8539)
!9535 = !DILocation(line: 4633, column: 9, scope: !8540)
!9536 = !DILocation(line: 4634, column: 51, scope: !8538)
!9537 = !DILocation(line: 4634, column: 48, scope: !8538)
!9538 = !DILocation(line: 4634, column: 22, scope: !8538)
!9539 = !DILocation(line: 4634, column: 17, scope: !8538)
!9540 = !DILocation(line: 4635, column: 13, scope: !8538)
!9541 = !DILocation(line: 4636, column: 13, scope: !8538)
!9542 = !DILocation(line: 4633, column: 40, scope: !8539)
!9543 = distinct !{!9543, !9535, !9544}
!9544 = !DILocation(line: 4637, column: 9, scope: !8540)
!9545 = !DILocation(line: 4638, column: 17, scope: !8543)
!9546 = !DILocation(line: 4638, column: 69, scope: !8543)
!9547 = !DILocation(line: 4642, column: 44, scope: !8542)
!9548 = !DILocation(line: 4642, column: 56, scope: !8542)
!9549 = !DILocation(line: 936, column: 44, scope: !820, inlinedAt: !9550)
!9550 = distinct !DILocation(line: 4642, column: 26, scope: !8542)
!9551 = !DILocation(line: 937, column: 13, scope: !820, inlinedAt: !9550)
!9552 = !DILocation(line: 937, column: 9, scope: !820, inlinedAt: !9550)
!9553 = !DILocation(line: 940, column: 26, scope: !820, inlinedAt: !9550)
!9554 = !DILocation(line: 940, column: 35, scope: !820, inlinedAt: !9550)
!9555 = !DILocation(line: 940, column: 10, scope: !820, inlinedAt: !9550)
!9556 = !DILocation(line: 938, column: 16, scope: !820, inlinedAt: !9550)
!9557 = !DILocation(line: 941, column: 5, scope: !820, inlinedAt: !9550)
!9558 = !DILocation(line: 942, column: 12, scope: !837, inlinedAt: !9550)
!9559 = !DILocation(line: 942, column: 9, scope: !820, inlinedAt: !9550)
!9560 = !DILocation(line: 943, column: 12, scope: !820, inlinedAt: !9550)
!9561 = !DILocation(line: 4642, column: 22, scope: !8542)
!9562 = !DILocation(line: 4644, column: 14, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 4644, column: 13)
!9564 = !DILocation(line: 4644, column: 13, scope: !8542)
!9565 = !DILocation(line: 4645, column: 64, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 4644, column: 17)
!9567 = !DILocation(line: 4645, column: 61, scope: !9566)
!9568 = !DILocation(line: 4645, column: 73, scope: !9566)
!9569 = !DILocation(line: 4645, column: 13, scope: !9566)
!9570 = !DILocation(line: 4646, column: 13, scope: !9566)
!9571 = !DILocation(line: 815, column: 49, scope: !2938, inlinedAt: !9572)
!9572 = distinct !DILocation(line: 4648, column: 32, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 4647, column: 16)
!9574 = !DILocation(line: 765, column: 52, scope: !2844, inlinedAt: !9575)
!9575 = distinct !DILocation(line: 816, column: 5, scope: !2938, inlinedAt: !9572)
!9576 = !DILocation(line: 766, column: 21, scope: !2844, inlinedAt: !9575)
!9577 = !DILocation(line: 766, column: 11, scope: !2844, inlinedAt: !9575)
!9578 = !DILocation(line: 768, column: 5, scope: !2844, inlinedAt: !9575)
!9579 = !DILocation(line: 770, column: 31, scope: !2844, inlinedAt: !9575)
!9580 = !DILocation(line: 770, column: 52, scope: !2844, inlinedAt: !9575)
!9581 = !DILocation(line: 770, column: 14, scope: !2844, inlinedAt: !9575)
!9582 = !DILocation(line: 772, column: 20, scope: !2844, inlinedAt: !9575)
!9583 = !DILocation(line: 772, column: 14, scope: !2844, inlinedAt: !9575)
!9584 = !DILocation(line: 768, column: 14, scope: !2844, inlinedAt: !9575)
!9585 = !DILocation(line: 774, column: 5, scope: !2844, inlinedAt: !9575)
!9586 = !DILocation(line: 775, column: 18, scope: !2844, inlinedAt: !9575)
!9587 = !DILocation(line: 767, column: 15, scope: !2844, inlinedAt: !9575)
!9588 = !DILocation(line: 775, column: 33, scope: !2844, inlinedAt: !9575)
!9589 = !DILocation(line: 775, column: 5, scope: !2844, inlinedAt: !9575)
!9590 = !DILocation(line: 776, column: 18, scope: !2870, inlinedAt: !9575)
!9591 = !DILocation(line: 769, column: 28, scope: !2844, inlinedAt: !9575)
!9592 = !DILocation(line: 777, column: 23, scope: !2873, inlinedAt: !9575)
!9593 = !DILocation(line: 777, column: 17, scope: !2873, inlinedAt: !9575)
!9594 = !DILocation(line: 777, column: 28, scope: !2873, inlinedAt: !9575)
!9595 = !DILocation(line: 777, column: 13, scope: !2870, inlinedAt: !9575)
!9596 = !DILocation(line: 777, column: 39, scope: !2873, inlinedAt: !9575)
!9597 = !DILocation(line: 779, column: 1, scope: !2844, inlinedAt: !9575)
!9598 = !DILocation(line: 817, column: 12, scope: !2938, inlinedAt: !9572)
!9599 = !DILocation(line: 4648, column: 32, scope: !9573)
!9600 = !DILocation(line: 4648, column: 13, scope: !9573)
!9601 = !DILocation(line: 4650, column: 5, scope: !8543)
!9602 = !DILocation(line: 4650, column: 17, scope: !8546)
!9603 = !DILocation(line: 4651, column: 30, scope: !8546)
!9604 = !DILocation(line: 4650, column: 56, scope: !8546)
!9605 = !DILocation(line: 4654, column: 13, scope: !8545)
!9606 = !DILocation(line: 4654, column: 24, scope: !8545)
!9607 = !DILocation(line: 4656, column: 13, scope: !8545)
!9608 = !DILocation(line: 4657, column: 29, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 4657, column: 17)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 4656, column: 27)
!9611 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 4656, column: 13)
!9612 = !DILocation(line: 4657, column: 41, scope: !9609)
!9613 = !DILocation(line: 4657, column: 18, scope: !9609)
!9614 = !DILocation(line: 4657, column: 17, scope: !9610)
!9615 = !DILocation(line: 4659, column: 25, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 4659, column: 24)
!9617 = !DILocation(line: 4659, column: 24, scope: !9609)
!9618 = !DILocation(line: 4663, column: 35, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 4662, column: 20)
!9620 = !{!8641, !758, i64 128}
!9621 = !DILocation(line: 4663, column: 17, scope: !9619)
!9622 = !DILocation(line: 4664, column: 17, scope: !9619)
!9623 = !DILocation(line: 0, scope: !8545)
!9624 = !DILocation(line: 4669, column: 13, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 4669, column: 13)
!9626 = !DILocation(line: 4669, column: 13, scope: !8545)
!9627 = !DILocation(line: 4670, column: 13, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 4669, column: 35)
!9629 = !DILocation(line: 4671, column: 13, scope: !9628)
!9630 = !DILocation(line: 4672, column: 28, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 4672, column: 20)
!9632 = !DILocation(line: 4672, column: 36, scope: !9631)
!9633 = !DILocation(line: 4672, column: 20, scope: !9625)
!9634 = !DILocation(line: 4673, column: 13, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 4672, column: 45)
!9636 = !DILocation(line: 4674, column: 13, scope: !9635)
!9637 = !DILocation(line: 4675, column: 21, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 4675, column: 20)
!9639 = !DILocation(line: 4675, column: 27, scope: !9638)
!9640 = !DILocation(line: 4676, column: 21, scope: !9638)
!9641 = !DILocation(line: 4676, column: 49, scope: !9638)
!9642 = !DILocation(line: 4677, column: 38, scope: !9638)
!9643 = !DILocation(line: 4677, column: 43, scope: !9638)
!9644 = !DILocation(line: 4675, column: 20, scope: !9631)
!9645 = !DILocation(line: 4679, column: 13, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 4678, column: 9)
!9647 = !DILocation(line: 4681, column: 13, scope: !9646)
!9648 = !DILocation(line: 3265, column: 16, scope: !2126, inlinedAt: !9649)
!9649 = distinct !DILocation(line: 4683, column: 9, scope: !8545)
!9650 = !DILocation(line: 3265, column: 25, scope: !2126, inlinedAt: !9649)
!9651 = !DILocation(line: 3265, column: 9, scope: !2126, inlinedAt: !9649)
!9652 = !DILocation(line: 3265, column: 32, scope: !2126, inlinedAt: !9649)
!9653 = !DILocation(line: 3265, column: 35, scope: !2126, inlinedAt: !9649)
!9654 = !DILocation(line: 3265, column: 9, scope: !1947, inlinedAt: !9649)
!9655 = !DILocation(line: 3266, column: 39, scope: !2133, inlinedAt: !9649)
!9656 = !DILocation(line: 3267, column: 9, scope: !2133, inlinedAt: !9649)
!9657 = !DILocation(line: 3268, column: 5, scope: !2133, inlinedAt: !9649)
!9658 = !DILocation(line: 3269, column: 12, scope: !1947, inlinedAt: !9649)
!9659 = !DILocation(line: 3269, column: 21, scope: !1947, inlinedAt: !9649)
!9660 = !DILocation(line: 3269, column: 28, scope: !1947, inlinedAt: !9649)
!9661 = !DILocation(line: 3270, column: 21, scope: !1947, inlinedAt: !9649)
!9662 = !DILocation(line: 3270, column: 34, scope: !1947, inlinedAt: !9649)
!9663 = !DILocation(line: 3271, column: 21, scope: !1947, inlinedAt: !9649)
!9664 = !DILocation(line: 3271, column: 30, scope: !1947, inlinedAt: !9649)
!9665 = !DILocation(line: 3272, column: 21, scope: !1947, inlinedAt: !9649)
!9666 = !DILocation(line: 3272, column: 38, scope: !1947, inlinedAt: !9649)
!9667 = !DILocation(line: 4684, column: 34, scope: !8545)
!9668 = !DILocation(line: 4684, column: 43, scope: !8545)
!9669 = !DILocation(line: 4684, column: 16, scope: !8545)
!9670 = !DILocation(line: 4684, column: 25, scope: !8545)
!9671 = !DILocation(line: 4684, column: 32, scope: !8545)
!9672 = !DILocation(line: 4686, column: 13, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 4686, column: 13)
!9674 = !DILocation(line: 4686, column: 13, scope: !8545)
!9675 = !DILocation(line: 4691, column: 13, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 4686, column: 23)
!9677 = !DILocation(line: 4692, column: 13, scope: !9676)
!9678 = !DILocation(line: 4693, column: 13, scope: !9676)
!9679 = !DILocation(line: 4694, column: 9, scope: !9676)
!9680 = !DILocation(line: 4694, column: 20, scope: !9673)
!9681 = !DILocation(line: 4698, column: 13, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9683, file: !3, line: 4694, column: 27)
!9683 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 4694, column: 20)
!9684 = !DILocation(line: 4699, column: 20, scope: !9682)
!9685 = !DILocation(line: 4699, column: 29, scope: !9682)
!9686 = !DILocation(line: 4699, column: 42, scope: !9682)
!9687 = !DILocation(line: 4700, column: 9, scope: !9682)
!9688 = !DILocation(line: 4701, column: 13, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9683, file: !3, line: 4700, column: 16)
!9690 = !DILocation(line: 4702, column: 32, scope: !9689)
!9691 = !DILocation(line: 4702, column: 40, scope: !9689)
!9692 = !DILocation(line: 2694, column: 38, scope: !6570, inlinedAt: !9693)
!9693 = distinct !DILocation(line: 4702, column: 13, scope: !9689)
!9694 = !DILocation(line: 2695, column: 5, scope: !6570, inlinedAt: !9693)
!9695 = !DILocation(line: 2696, column: 17, scope: !6570, inlinedAt: !9693)
!9696 = !DILocation(line: 2699, column: 16, scope: !6580, inlinedAt: !9693)
!9697 = !DILocation(line: 2699, column: 10, scope: !6580, inlinedAt: !9693)
!9698 = !DILocation(line: 2699, column: 9, scope: !6570, inlinedAt: !9693)
!9699 = !DILocation(line: 2695, column: 19, scope: !6570, inlinedAt: !9693)
!9700 = !DILocation(line: 2700, column: 5, scope: !6570, inlinedAt: !9693)
!9701 = !DILocation(line: 2697, column: 14, scope: !6570, inlinedAt: !9693)
!9702 = !DILocation(line: 2702, column: 19, scope: !6570, inlinedAt: !9693)
!9703 = !DILocation(line: 2702, column: 10, scope: !6570, inlinedAt: !9693)
!9704 = !DILocation(line: 2702, column: 17, scope: !6570, inlinedAt: !9693)
!9705 = !DILocation(line: 2703, column: 30, scope: !6570, inlinedAt: !9693)
!9706 = !DILocation(line: 2703, column: 5, scope: !6570, inlinedAt: !9693)
!9707 = !DILocation(line: 2704, column: 1, scope: !6570, inlinedAt: !9693)
!9708 = !DILocation(line: 4704, column: 27, scope: !8545)
!9709 = !DILocation(line: 4704, column: 9, scope: !8545)
!9710 = !DILocation(line: 4705, column: 5, scope: !8546)
!9711 = !DILocation(line: 4705, column: 17, scope: !8550)
!9712 = !DILocation(line: 4705, column: 64, scope: !8550)
!9713 = !DILocation(line: 4714, column: 9, scope: !8549)
!9714 = !DILocation(line: 4716, column: 44, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 4716, column: 13)
!9716 = !DILocation(line: 4714, column: 19, scope: !8549)
!9717 = !DILocation(line: 4716, column: 13, scope: !9715)
!9718 = !DILocation(line: 4716, column: 68, scope: !9715)
!9719 = !DILocation(line: 4716, column: 13, scope: !8549)
!9720 = !DILocation(line: 4719, column: 13, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 4719, column: 13)
!9722 = !DILocation(line: 4719, column: 19, scope: !9721)
!9723 = !DILocation(line: 4719, column: 13, scope: !8549)
!9724 = !DILocation(line: 4720, column: 13, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9721, file: !3, line: 4719, column: 24)
!9726 = !DILocation(line: 4721, column: 9, scope: !9725)
!9727 = !DILocation(line: 4721, column: 20, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9721, file: !3, line: 4721, column: 20)
!9729 = !DILocation(line: 4721, column: 52, scope: !9728)
!9730 = !DILocation(line: 4721, column: 20, scope: !9721)
!9731 = !DILocation(line: 4722, column: 13, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 4721, column: 57)
!9733 = !DILocation(line: 4724, column: 9, scope: !9732)
!9734 = !DILocation(line: 4724, column: 20, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 4724, column: 20)
!9736 = !DILocation(line: 4724, column: 28, scope: !9735)
!9737 = !DILocation(line: 4724, column: 40, scope: !9735)
!9738 = !DILocation(line: 4724, column: 20, scope: !9728)
!9739 = !DILocation(line: 4725, column: 13, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 4724, column: 46)
!9741 = !DILocation(line: 4726, column: 9, scope: !9740)
!9742 = !DILocation(line: 4727, column: 33, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 4726, column: 16)
!9744 = !DILocation(line: 4728, column: 13, scope: !9743)
!9745 = !DILocation(line: 4732, column: 24, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 4732, column: 17)
!9747 = !DILocation(line: 4732, column: 33, scope: !9746)
!9748 = !DILocation(line: 4732, column: 58, scope: !9746)
!9749 = !DILocation(line: 4732, column: 46, scope: !9746)
!9750 = !DILocation(line: 4732, column: 17, scope: !9743)
!9751 = !DILocation(line: 4733, column: 46, scope: !9746)
!9752 = !DILocation(line: 4733, column: 17, scope: !9746)
!9753 = !DILocation(line: 3617, column: 31, scope: !1717, inlinedAt: !9754)
!9754 = distinct !DILocation(line: 4737, column: 13, scope: !9743)
!9755 = !DILocation(line: 3618, column: 21, scope: !1717, inlinedAt: !9754)
!9756 = !DILocation(line: 3618, column: 39, scope: !1717, inlinedAt: !9754)
!9757 = !DILocation(line: 4739, column: 31, scope: !9743)
!9758 = !DILocation(line: 4739, column: 13, scope: !9743)
!9759 = !DILocation(line: 4741, column: 5, scope: !8550)
!9760 = !DILocation(line: 4741, column: 17, scope: !8553)
!9761 = !DILocation(line: 4741, column: 53, scope: !8553)
!9762 = !DILocation(line: 4745, column: 13, scope: !8552)
!9763 = !DILocation(line: 4748, column: 13, scope: !8552)
!9764 = !DILocation(line: 4749, column: 29, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 4749, column: 17)
!9766 = distinct !DILexicalBlock(scope: !9767, file: !3, line: 4748, column: 27)
!9767 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 4748, column: 13)
!9768 = !DILocation(line: 4749, column: 41, scope: !9765)
!9769 = !DILocation(line: 4749, column: 18, scope: !9765)
!9770 = !DILocation(line: 4749, column: 17, scope: !9766)
!9771 = !DILocation(line: 4751, column: 25, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 4751, column: 24)
!9773 = !DILocation(line: 4751, column: 24, scope: !9765)
!9774 = !DILocation(line: 4754, column: 35, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 4753, column: 20)
!9776 = !DILocation(line: 4754, column: 17, scope: !9775)
!9777 = !DILocation(line: 4755, column: 17, scope: !9775)
!9778 = !DILocation(line: 0, scope: !8552)
!9779 = !DILocation(line: 4761, column: 13, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 4761, column: 13)
!9781 = !DILocation(line: 4761, column: 34, scope: !9780)
!9782 = !DILocation(line: 4761, column: 37, scope: !9780)
!9783 = !{!8565, !758, i64 16}
!9784 = !DILocation(line: 4761, column: 59, scope: !9780)
!9785 = !DILocation(line: 4761, column: 13, scope: !8552)
!9786 = !DILocation(line: 4762, column: 13, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 4761, column: 65)
!9788 = !DILocation(line: 4764, column: 13, scope: !9787)
!9789 = !DILocation(line: 4766, column: 9, scope: !8552)
!9790 = !DILocation(line: 4767, column: 27, scope: !8552)
!9791 = !DILocation(line: 4767, column: 9, scope: !8552)
!9792 = !DILocation(line: 4768, column: 5, scope: !8553)
!9793 = !DILocation(line: 4769, column: 9, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 4768, column: 12)
!9795 = !DILocation(line: 4770, column: 9, scope: !9794)
!9796 = !DILocation(line: 4772, column: 1, scope: !8443)
!9797 = distinct !DISubprogram(name: "createDumpPayload", scope: !3, file: !3, line: 4780, type: !9798, isLocal: false, isDefinition: true, scopeLine: 4780, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9851)
!9798 = !DISubroutineType(types: !9799)
!9799 = !{null, !9800, !4435, !4435}
!9800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9801, size: 64)
!9801 = !DIDerivedType(tag: DW_TAG_typedef, name: "rio", file: !9802, line: 87, baseType: !9803)
!9802 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rio.h", directory: "/root/.unikraft/apps/redis/build")
!9803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rio", file: !9802, line: 39, size: 832, elements: !9804)
!9804 = !{!9805, !9810, !9814, !9818, !9822, !9826, !9827, !9828, !9829}
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9803, file: !9802, line: 43, baseType: !9806, size: 64)
!9806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9807, size: 64)
!9807 = !DISubroutineType(types: !9808)
!9808 = !{!1476, !9809, !6, !1476}
!9809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9803, size: 64)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9803, file: !9802, line: 44, baseType: !9811, size: 64, offset: 64)
!9811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9812, size: 64)
!9812 = !DISubroutineType(types: !9813)
!9813 = !{!1476, !9809, !316, !1476}
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "tell", scope: !9803, file: !9802, line: 45, baseType: !9815, size: 64, offset: 128)
!9815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9816, size: 64)
!9816 = !DISubroutineType(types: !9817)
!9817 = !{!8, !9809}
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !9803, file: !9802, line: 46, baseType: !9819, size: 64, offset: 192)
!9819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9820, size: 64)
!9820 = !DISubroutineType(types: !9821)
!9821 = !{!177, !9809}
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "update_cksum", scope: !9803, file: !9802, line: 52, baseType: !9823, size: 64, offset: 256)
!9823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9824, size: 64)
!9824 = !DISubroutineType(types: !9825)
!9825 = !{null, !9809, !316, !1476}
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "cksum", scope: !9803, file: !9802, line: 55, baseType: !104, size: 64, offset: 320)
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "processed_bytes", scope: !9803, file: !9802, line: 58, baseType: !1476, size: 64, offset: 384)
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "max_processing_chunk", scope: !9803, file: !9802, line: 61, baseType: !1476, size: 64, offset: 448)
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !9803, file: !9802, line: 84, baseType: !9830, size: 320, offset: 512)
!9830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9803, file: !9802, line: 64, size: 320, elements: !9831)
!9831 = !{!9832, !9837, !9843}
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9830, file: !9802, line: 69, baseType: !9833, size: 128)
!9833 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9830, file: !9802, line: 66, size: 128, elements: !9834)
!9834 = !{!9835, !9836}
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !9833, file: !9802, line: 67, baseType: !189, size: 64)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !9833, file: !9802, line: 68, baseType: !8, size: 64, offset: 64)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !9830, file: !9802, line: 75, baseType: !9838, size: 192)
!9838 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9830, file: !9802, line: 71, size: 192, elements: !9839)
!9839 = !{!9840, !9841, !9842}
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !9838, file: !9802, line: 72, baseType: !442, size: 64)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !9838, file: !9802, line: 73, baseType: !8, size: 64, offset: 64)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "autosync", scope: !9838, file: !9802, line: 74, baseType: !8, size: 64, offset: 128)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "fdset", scope: !9830, file: !9802, line: 83, baseType: !9844, size: 320)
!9844 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9830, file: !9802, line: 77, size: 320, elements: !9845)
!9845 = !{!9846, !9847, !9848, !9849, !9850}
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "fds", scope: !9844, file: !9802, line: 78, baseType: !8211, size: 64)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9844, file: !9802, line: 79, baseType: !8211, size: 64, offset: 64)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "numfds", scope: !9844, file: !9802, line: 80, baseType: !177, size: 32, offset: 128)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !9844, file: !9802, line: 81, baseType: !8, size: 64, offset: 192)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !9844, file: !9802, line: 82, baseType: !189, size: 64, offset: 256)
!9851 = !{!9852, !9853, !9854, !9855, !9857}
!9852 = !DILocalVariable(name: "payload", arg: 1, scope: !9797, file: !3, line: 4780, type: !9800)
!9853 = !DILocalVariable(name: "o", arg: 2, scope: !9797, file: !3, line: 4780, type: !4435)
!9854 = !DILocalVariable(name: "key", arg: 3, scope: !9797, file: !3, line: 4780, type: !4435)
!9855 = !DILocalVariable(name: "buf", scope: !9797, file: !3, line: 4781, type: !9856)
!9856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 16, elements: !360)
!9857 = !DILocalVariable(name: "crc", scope: !9797, file: !3, line: 4782, type: !104)
!9858 = !DILocation(line: 4780, column: 29, scope: !9797)
!9859 = !DILocation(line: 4780, column: 44, scope: !9797)
!9860 = !DILocation(line: 4780, column: 53, scope: !9797)
!9861 = !DILocation(line: 4781, column: 5, scope: !9797)
!9862 = !DILocation(line: 4781, column: 19, scope: !9797)
!9863 = !DILocation(line: 4782, column: 5, scope: !9797)
!9864 = !DILocation(line: 4786, column: 31, scope: !9797)
!9865 = !DILocation(line: 4786, column: 5, scope: !9797)
!9866 = !DILocation(line: 4787, column: 5, scope: !9797)
!9867 = !DILocation(line: 4788, column: 5, scope: !9797)
!9868 = !DILocation(line: 4798, column: 12, scope: !9797)
!9869 = !DILocation(line: 4799, column: 5, scope: !9797)
!9870 = !DILocation(line: 4799, column: 12, scope: !9797)
!9871 = !DILocation(line: 4800, column: 49, scope: !9797)
!9872 = !DILocation(line: 4800, column: 59, scope: !9797)
!9873 = !DILocation(line: 4800, column: 30, scope: !9797)
!9874 = !DILocation(line: 4800, column: 28, scope: !9797)
!9875 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !9876)
!9876 = distinct !DILocation(line: 4804, column: 17, scope: !9797)
!9877 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !9876)
!9878 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !9876)
!9879 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !9876)
!9880 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !9876)
!9881 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !9876)
!9882 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !9876)
!9883 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !9876)
!9884 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !9876)
!9885 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !9876)
!9886 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !9876)
!9887 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !9876)
!9888 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !9876)
!9889 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !9876)
!9890 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !9876)
!9891 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !9876)
!9892 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !9876)
!9893 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !9876)
!9894 = !DILocation(line: 0, scope: !1486, inlinedAt: !9876)
!9895 = !DILocation(line: 4803, column: 11, scope: !9797)
!9896 = !DILocation(line: 4782, column: 14, scope: !9797)
!9897 = !DILocation(line: 4803, column: 9, scope: !9797)
!9898 = !DILocation(line: 4806, column: 59, scope: !9797)
!9899 = !DILocation(line: 4806, column: 30, scope: !9797)
!9900 = !DILocation(line: 4806, column: 28, scope: !9797)
!9901 = !DILocation(line: 4807, column: 1, scope: !9797)
!9902 = distinct !DISubprogram(name: "verifyDumpPayload", scope: !3, file: !3, line: 4813, type: !9903, isLocal: false, isDefinition: true, scopeLine: 4813, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9905)
!9903 = !DISubroutineType(types: !9904)
!9904 = !{!177, !246, !1455}
!9905 = !{!9906, !9907, !9908, !9909, !9910}
!9906 = !DILocalVariable(name: "p", arg: 1, scope: !9902, file: !3, line: 4813, type: !246)
!9907 = !DILocalVariable(name: "len", arg: 2, scope: !9902, file: !3, line: 4813, type: !1455)
!9908 = !DILocalVariable(name: "footer", scope: !9902, file: !3, line: 4814, type: !246)
!9909 = !DILocalVariable(name: "rdbver", scope: !9902, file: !3, line: 4815, type: !33)
!9910 = !DILocalVariable(name: "crc", scope: !9902, file: !3, line: 4816, type: !104)
!9911 = !DILocation(line: 4813, column: 38, scope: !9902)
!9912 = !DILocation(line: 4813, column: 48, scope: !9902)
!9913 = !DILocation(line: 4816, column: 5, scope: !9902)
!9914 = !DILocation(line: 4819, column: 13, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 4819, column: 9)
!9916 = !DILocation(line: 4819, column: 9, scope: !9902)
!9917 = !DILocation(line: 4820, column: 20, scope: !9902)
!9918 = !DILocation(line: 4820, column: 15, scope: !9902)
!9919 = !DILocation(line: 4814, column: 20, scope: !9902)
!9920 = !DILocation(line: 4823, column: 15, scope: !9902)
!9921 = !DILocation(line: 4823, column: 25, scope: !9902)
!9922 = !DILocation(line: 4823, column: 33, scope: !9902)
!9923 = !DILocation(line: 4823, column: 31, scope: !9902)
!9924 = !DILocation(line: 4815, column: 14, scope: !9902)
!9925 = !DILocation(line: 4824, column: 16, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 4824, column: 9)
!9927 = !DILocation(line: 4824, column: 9, scope: !9902)
!9928 = !DILocation(line: 4827, column: 24, scope: !9902)
!9929 = !DILocation(line: 4827, column: 11, scope: !9902)
!9930 = !DILocation(line: 4816, column: 14, scope: !9902)
!9931 = !DILocation(line: 4827, column: 9, scope: !9902)
!9932 = !DILocation(line: 4829, column: 31, scope: !9902)
!9933 = !DILocation(line: 4829, column: 13, scope: !9902)
!9934 = !DILocation(line: 4829, column: 37, scope: !9902)
!9935 = !DILocation(line: 4829, column: 12, scope: !9902)
!9936 = !DILocation(line: 4829, column: 5, scope: !9902)
!9937 = !DILocation(line: 0, scope: !9902)
!9938 = !DILocation(line: 4830, column: 1, scope: !9902)
!9939 = distinct !DISubprogram(name: "dumpCommand", scope: !3, file: !3, line: 4835, type: !8201, isLocal: false, isDefinition: true, scopeLine: 4835, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9940)
!9940 = !{!9941, !9942, !9943, !9944}
!9941 = !DILocalVariable(name: "c", arg: 1, scope: !9939, file: !3, line: 4835, type: !8166)
!9942 = !DILocalVariable(name: "o", scope: !9939, file: !3, line: 4836, type: !4435)
!9943 = !DILocalVariable(name: "dumpobj", scope: !9939, file: !3, line: 4836, type: !4435)
!9944 = !DILocalVariable(name: "payload", scope: !9939, file: !3, line: 4837, type: !9801)
!9945 = !DILocation(line: 4835, column: 26, scope: !9939)
!9946 = !DILocation(line: 4837, column: 5, scope: !9939)
!9947 = !DILocation(line: 4840, column: 31, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9939, file: !3, line: 4840, column: 9)
!9949 = !DILocation(line: 4840, column: 37, scope: !9948)
!9950 = !DILocation(line: 4840, column: 34, scope: !9948)
!9951 = !DILocation(line: 4840, column: 14, scope: !9948)
!9952 = !DILocation(line: 4836, column: 11, scope: !9939)
!9953 = !DILocation(line: 4840, column: 47, scope: !9948)
!9954 = !DILocation(line: 4840, column: 9, scope: !9939)
!9955 = !DILocation(line: 4841, column: 27, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 4840, column: 56)
!9957 = !{!8641, !758, i64 80}
!9958 = !DILocation(line: 4841, column: 9, scope: !9956)
!9959 = !DILocation(line: 4842, column: 9, scope: !9956)
!9960 = !DILocation(line: 4846, column: 37, scope: !9939)
!9961 = !DILocation(line: 4846, column: 34, scope: !9939)
!9962 = !DILocation(line: 4837, column: 9, scope: !9939)
!9963 = !DILocation(line: 4846, column: 5, scope: !9939)
!9964 = !DILocation(line: 4849, column: 47, scope: !9939)
!9965 = !DILocation(line: 4849, column: 57, scope: !9939)
!9966 = !DILocation(line: 4849, column: 15, scope: !9939)
!9967 = !DILocation(line: 4836, column: 15, scope: !9939)
!9968 = !DILocation(line: 4850, column: 5, scope: !9939)
!9969 = !DILocation(line: 4851, column: 5, scope: !9939)
!9970 = !DILocation(line: 4852, column: 5, scope: !9939)
!9971 = !DILocation(line: 4853, column: 1, scope: !9939)
!9972 = distinct !DISubprogram(name: "restoreCommand", scope: !3, file: !3, line: 4856, type: !8201, isLocal: false, isDefinition: true, scopeLine: 4856, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9973)
!9973 = !{!9974, !9975, !9976, !9977, !9978, !9979, !9980, !9981, !9982, !9983, !9984, !9985}
!9974 = !DILocalVariable(name: "c", arg: 1, scope: !9972, file: !3, line: 4856, type: !8166)
!9975 = !DILocalVariable(name: "ttl", scope: !9972, file: !3, line: 4857, type: !186)
!9976 = !DILocalVariable(name: "lfu_freq", scope: !9972, file: !3, line: 4857, type: !186)
!9977 = !DILocalVariable(name: "lru_idle", scope: !9972, file: !3, line: 4857, type: !186)
!9978 = !DILocalVariable(name: "lru_clock", scope: !9972, file: !3, line: 4857, type: !186)
!9979 = !DILocalVariable(name: "payload", scope: !9972, file: !3, line: 4858, type: !9801)
!9980 = !DILocalVariable(name: "j", scope: !9972, file: !3, line: 4859, type: !177)
!9981 = !DILocalVariable(name: "type", scope: !9972, file: !3, line: 4859, type: !177)
!9982 = !DILocalVariable(name: "replace", scope: !9972, file: !3, line: 4859, type: !177)
!9983 = !DILocalVariable(name: "absttl", scope: !9972, file: !3, line: 4859, type: !177)
!9984 = !DILocalVariable(name: "obj", scope: !9972, file: !3, line: 4860, type: !4435)
!9985 = !DILocalVariable(name: "additional", scope: !9986, file: !3, line: 4864, type: !177)
!9986 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 4863, column: 35)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !3, line: 4863, column: 5)
!9988 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 4863, column: 5)
!9989 = !DILocation(line: 4856, column: 29, scope: !9972)
!9990 = !DILocation(line: 4857, column: 5, scope: !9972)
!9991 = !DILocation(line: 4857, column: 20, scope: !9972)
!9992 = !DILocation(line: 4857, column: 35, scope: !9972)
!9993 = !DILocation(line: 4857, column: 50, scope: !9972)
!9994 = !DILocation(line: 4858, column: 5, scope: !9972)
!9995 = !DILocation(line: 4859, column: 18, scope: !9972)
!9996 = !DILocation(line: 4859, column: 31, scope: !9972)
!9997 = !DILocation(line: 4859, column: 9, scope: !9972)
!9998 = !DILocation(line: 4863, column: 24, scope: !9987)
!9999 = !DILocation(line: 4863, column: 19, scope: !9987)
!10000 = !DILocation(line: 4863, column: 5, scope: !9988)
!10001 = !DILocation(line: 4864, column: 35, scope: !9986)
!10002 = !DILocation(line: 4864, column: 13, scope: !9986)
!10003 = !DILocation(line: 4865, column: 28, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9986, file: !3, line: 4865, column: 13)
!10005 = !DILocation(line: 4865, column: 25, scope: !10004)
!10006 = !DILocation(line: 4865, column: 37, scope: !10004)
!10007 = !DILocation(line: 4865, column: 14, scope: !10004)
!10008 = !DILocation(line: 4865, column: 13, scope: !9986)
!10009 = !DILocation(line: 4867, column: 21, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 4867, column: 20)
!10011 = !DILocation(line: 4867, column: 20, scope: !10004)
!10012 = !DILocation(line: 4869, column: 21, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 4869, column: 20)
!10014 = !DILocation(line: 4869, column: 74, scope: !10013)
!10015 = !DILocation(line: 4869, column: 60, scope: !10013)
!10016 = !DILocation(line: 4870, column: 20, scope: !10013)
!10017 = !DILocation(line: 4870, column: 29, scope: !10013)
!10018 = !DILocation(line: 4872, column: 57, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 4872, column: 17)
!10020 = distinct !DILexicalBlock(scope: !10013, file: !3, line: 4871, column: 9)
!10021 = !DILocation(line: 4872, column: 48, scope: !10019)
!10022 = !DILocation(line: 4872, column: 17, scope: !10019)
!10023 = !DILocation(line: 4873, column: 21, scope: !10019)
!10024 = !DILocation(line: 4872, column: 17, scope: !10020)
!10025 = !DILocation(line: 4874, column: 17, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 4874, column: 17)
!10027 = !DILocation(line: 4874, column: 26, scope: !10026)
!10028 = !DILocation(line: 4874, column: 17, scope: !10020)
!10029 = !DILocation(line: 4875, column: 17, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 4874, column: 31)
!10031 = !DILocation(line: 4876, column: 17, scope: !10030)
!10032 = !DILocation(line: 4878, column: 25, scope: !10020)
!10033 = !DILocation(line: 4880, column: 9, scope: !10020)
!10034 = !DILocation(line: 4880, column: 21, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10013, file: !3, line: 4880, column: 20)
!10036 = !DILocation(line: 4880, column: 56, scope: !10035)
!10037 = !DILocation(line: 4881, column: 20, scope: !10035)
!10038 = !DILocation(line: 4881, column: 29, scope: !10035)
!10039 = !DILocation(line: 4883, column: 57, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !3, line: 4883, column: 17)
!10041 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 4882, column: 9)
!10042 = !DILocation(line: 4883, column: 48, scope: !10040)
!10043 = !DILocation(line: 4883, column: 17, scope: !10040)
!10044 = !DILocation(line: 4884, column: 21, scope: !10040)
!10045 = !DILocation(line: 4883, column: 17, scope: !10041)
!10046 = !DILocation(line: 4885, column: 17, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10041, file: !3, line: 4885, column: 17)
!10048 = !DILocation(line: 4885, column: 30, scope: !10047)
!10049 = !DILocation(line: 4886, column: 17, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 4885, column: 49)
!10051 = !DILocation(line: 4887, column: 17, scope: !10050)
!10052 = !DILocation(line: 4891, column: 31, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 4890, column: 16)
!10054 = !DILocation(line: 4891, column: 13, scope: !10053)
!10055 = !DILocation(line: 4892, column: 13, scope: !10053)
!10056 = !DILocation(line: 0, scope: !9988)
!10057 = !DILocation(line: 0, scope: !9972)
!10058 = !DILocation(line: 4863, column: 31, scope: !9987)
!10059 = distinct !{!10059, !10000, !10060}
!10060 = !DILocation(line: 4894, column: 5, scope: !9988)
!10061 = !DILocation(line: 4897, column: 10, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 4897, column: 9)
!10063 = !DILocation(line: 4897, column: 18, scope: !10062)
!10064 = !DILocation(line: 4903, column: 43, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 4903, column: 9)
!10066 = !DILocation(line: 4897, column: 39, scope: !10062)
!10067 = !DILocation(line: 4897, column: 45, scope: !10062)
!10068 = !DILocation(line: 4897, column: 42, scope: !10062)
!10069 = !DILocation(line: 4897, column: 21, scope: !10062)
!10070 = !DILocation(line: 4897, column: 54, scope: !10062)
!10071 = !DILocation(line: 4897, column: 9, scope: !9972)
!10072 = !DILocation(line: 4898, column: 27, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 4897, column: 63)
!10074 = !{!8641, !758, i64 224}
!10075 = !DILocation(line: 4898, column: 9, scope: !10073)
!10076 = !DILocation(line: 4899, column: 9, scope: !10073)
!10077 = !DILocation(line: 4903, column: 40, scope: !10065)
!10078 = !DILocation(line: 4857, column: 15, scope: !9972)
!10079 = !DILocation(line: 4903, column: 9, scope: !10065)
!10080 = !DILocation(line: 4903, column: 62, scope: !10065)
!10081 = !DILocation(line: 4903, column: 9, scope: !9972)
!10082 = !DILocation(line: 4905, column: 16, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 4905, column: 16)
!10084 = !DILocation(line: 4905, column: 20, scope: !10083)
!10085 = !DILocation(line: 4905, column: 16, scope: !10065)
!10086 = !DILocation(line: 4906, column: 9, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 4905, column: 25)
!10088 = !DILocation(line: 4907, column: 9, scope: !10087)
!10089 = !DILocation(line: 4911, column: 30, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 4911, column: 9)
!10091 = !DILocation(line: 4911, column: 27, scope: !10090)
!10092 = !DILocation(line: 4911, column: 39, scope: !10090)
!10093 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10094)
!10094 = distinct !DILocation(line: 4911, column: 43, scope: !10090)
!10095 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10094)
!10096 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10094)
!10097 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10094)
!10098 = !DILocation(line: 4813, column: 38, scope: !9902, inlinedAt: !10099)
!10099 = distinct !DILocation(line: 4911, column: 9, scope: !10090)
!10100 = !DILocation(line: 4813, column: 48, scope: !9902, inlinedAt: !10099)
!10101 = !DILocation(line: 4816, column: 5, scope: !9902, inlinedAt: !10099)
!10102 = !DILocation(line: 4819, column: 9, scope: !9902, inlinedAt: !10099)
!10103 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10094)
!10104 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10094)
!10105 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10094)
!10106 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10094)
!10107 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10094)
!10108 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10094)
!10109 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10094)
!10110 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10094)
!10111 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10094)
!10112 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10094)
!10113 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10094)
!10114 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !10094)
!10115 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10094)
!10116 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10094)
!10117 = !DILocation(line: 0, scope: !1486, inlinedAt: !10094)
!10118 = !DILocation(line: 4819, column: 13, scope: !9915, inlinedAt: !10099)
!10119 = !DILocation(line: 4820, column: 20, scope: !9902, inlinedAt: !10099)
!10120 = !DILocation(line: 4820, column: 15, scope: !9902, inlinedAt: !10099)
!10121 = !DILocation(line: 4814, column: 20, scope: !9902, inlinedAt: !10099)
!10122 = !DILocation(line: 4823, column: 15, scope: !9902, inlinedAt: !10099)
!10123 = !DILocation(line: 4823, column: 25, scope: !9902, inlinedAt: !10099)
!10124 = !DILocation(line: 4823, column: 33, scope: !9902, inlinedAt: !10099)
!10125 = !DILocation(line: 4823, column: 31, scope: !9902, inlinedAt: !10099)
!10126 = !DILocation(line: 4815, column: 14, scope: !9902, inlinedAt: !10099)
!10127 = !DILocation(line: 4824, column: 16, scope: !9926, inlinedAt: !10099)
!10128 = !DILocation(line: 4824, column: 9, scope: !9902, inlinedAt: !10099)
!10129 = !DILocation(line: 4830, column: 1, scope: !9902, inlinedAt: !10099)
!10130 = !DILocation(line: 4911, column: 9, scope: !9972)
!10131 = !DILocation(line: 4827, column: 24, scope: !9902, inlinedAt: !10099)
!10132 = !DILocation(line: 4827, column: 11, scope: !9902, inlinedAt: !10099)
!10133 = !DILocation(line: 4816, column: 14, scope: !9902, inlinedAt: !10099)
!10134 = !DILocation(line: 4827, column: 9, scope: !9902, inlinedAt: !10099)
!10135 = !DILocation(line: 4829, column: 31, scope: !9902, inlinedAt: !10099)
!10136 = !DILocation(line: 4829, column: 13, scope: !9902, inlinedAt: !10099)
!10137 = !DILocation(line: 4829, column: 37, scope: !9902, inlinedAt: !10099)
!10138 = !DILocation(line: 4913, column: 9, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 4912, column: 5)
!10140 = !DILocation(line: 4914, column: 9, scope: !10139)
!10141 = !DILocation(line: 4917, column: 35, scope: !9972)
!10142 = !DILocation(line: 4917, column: 32, scope: !9972)
!10143 = !DILocation(line: 4917, column: 44, scope: !9972)
!10144 = !DILocation(line: 4858, column: 9, scope: !9972)
!10145 = !DILocation(line: 4917, column: 5, scope: !9972)
!10146 = !DILocation(line: 4918, column: 18, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 4918, column: 9)
!10148 = !DILocation(line: 4859, column: 12, scope: !9972)
!10149 = !DILocation(line: 4918, column: 47, scope: !10147)
!10150 = !DILocation(line: 4918, column: 54, scope: !10147)
!10151 = !DILocation(line: 4919, column: 48, scope: !10147)
!10152 = !DILocation(line: 4919, column: 45, scope: !10147)
!10153 = !DILocation(line: 4919, column: 17, scope: !10147)
!10154 = !DILocation(line: 4860, column: 11, scope: !9972)
!10155 = !DILocation(line: 4919, column: 58, scope: !10147)
!10156 = !DILocation(line: 4918, column: 9, scope: !9972)
!10157 = !DILocation(line: 4921, column: 9, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10147, file: !3, line: 4920, column: 5)
!10159 = !DILocation(line: 4922, column: 9, scope: !10158)
!10160 = !DILocation(line: 4926, column: 9, scope: !9972)
!10161 = !DILocation(line: 4926, column: 30, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 4926, column: 9)
!10163 = !DILocation(line: 4926, column: 36, scope: !10162)
!10164 = !DILocation(line: 4926, column: 33, scope: !10162)
!10165 = !DILocation(line: 4926, column: 18, scope: !10162)
!10166 = !DILocation(line: 4929, column: 14, scope: !9972)
!10167 = !DILocation(line: 4929, column: 20, scope: !9972)
!10168 = !DILocation(line: 4929, column: 17, scope: !9972)
!10169 = !DILocation(line: 4929, column: 5, scope: !9972)
!10170 = !DILocation(line: 4930, column: 9, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 4930, column: 9)
!10172 = !DILocation(line: 4930, column: 9, scope: !9972)
!10173 = !DILocation(line: 4931, column: 14, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10175, file: !3, line: 4931, column: 13)
!10175 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 4930, column: 14)
!10176 = !DILocation(line: 4931, column: 13, scope: !10175)
!10177 = !DILocation(line: 4931, column: 27, scope: !10174)
!10178 = !DILocation(line: 4931, column: 25, scope: !10174)
!10179 = !DILocation(line: 4931, column: 22, scope: !10174)
!10180 = !DILocation(line: 4932, column: 38, scope: !10175)
!10181 = !DILocation(line: 4932, column: 24, scope: !10175)
!10182 = !DILocation(line: 4932, column: 30, scope: !10175)
!10183 = !DILocation(line: 4932, column: 27, scope: !10175)
!10184 = !DILocation(line: 4932, column: 9, scope: !10175)
!10185 = !DILocation(line: 4933, column: 5, scope: !10175)
!10186 = !DILocation(line: 4934, column: 27, scope: !9972)
!10187 = !DILocation(line: 4934, column: 36, scope: !9972)
!10188 = !DILocation(line: 4934, column: 5, scope: !9972)
!10189 = !DILocation(line: 4935, column: 26, scope: !9972)
!10190 = !DILocation(line: 4935, column: 32, scope: !9972)
!10191 = !DILocation(line: 4935, column: 29, scope: !9972)
!10192 = !DILocation(line: 4935, column: 5, scope: !9972)
!10193 = !DILocation(line: 4936, column: 23, scope: !9972)
!10194 = !DILocation(line: 4936, column: 5, scope: !9972)
!10195 = !DILocation(line: 4937, column: 17, scope: !9972)
!10196 = !{!785, !786, i64 2080}
!10197 = !DILocation(line: 4938, column: 1, scope: !9972)
!10198 = distinct !DISubprogram(name: "migrateGetSocket", scope: !3, file: !3, line: 4966, type: !10199, isLocal: false, isDefinition: true, scopeLine: 4966, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10208)
!10199 = !DISubroutineType(types: !10200)
!10200 = !{!10201, !8166, !4435, !4435, !13}
!10201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10202, size: 64)
!10202 = !DIDerivedType(tag: DW_TAG_typedef, name: "migrateCachedSocket", file: !3, line: 4953, baseType: !10203)
!10203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "migrateCachedSocket", file: !3, line: 4949, size: 192, elements: !10204)
!10204 = !{!10205, !10206, !10207}
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !10203, file: !3, line: 4950, baseType: !177, size: 32)
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "last_dbid", scope: !10203, file: !3, line: 4951, baseType: !13, size: 64, offset: 64)
!10207 = !DIDerivedType(tag: DW_TAG_member, name: "last_use_time", scope: !10203, file: !3, line: 4952, baseType: !288, size: 64, offset: 128)
!10208 = !{!10209, !10210, !10211, !10212, !10213, !10214, !10215, !10216}
!10209 = !DILocalVariable(name: "c", arg: 1, scope: !10198, file: !3, line: 4966, type: !8166)
!10210 = !DILocalVariable(name: "host", arg: 2, scope: !10198, file: !3, line: 4966, type: !4435)
!10211 = !DILocalVariable(name: "port", arg: 3, scope: !10198, file: !3, line: 4966, type: !4435)
!10212 = !DILocalVariable(name: "timeout", arg: 4, scope: !10198, file: !3, line: 4966, type: !13)
!10213 = !DILocalVariable(name: "fd", scope: !10198, file: !3, line: 4967, type: !177)
!10214 = !DILocalVariable(name: "name", scope: !10198, file: !3, line: 4968, type: !189)
!10215 = !DILocalVariable(name: "cs", scope: !10198, file: !3, line: 4969, type: !10201)
!10216 = !DILocalVariable(name: "de", scope: !10217, file: !3, line: 4985, type: !340)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 4983, column: 80)
!10218 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 4983, column: 9)
!10219 = !DILocation(line: 4966, column: 47, scope: !10198)
!10220 = !DILocation(line: 4966, column: 56, scope: !10198)
!10221 = !DILocation(line: 4966, column: 68, scope: !10198)
!10222 = !DILocation(line: 4966, column: 79, scope: !10198)
!10223 = !DILocation(line: 4968, column: 16, scope: !10198)
!10224 = !DILocation(line: 4968, column: 9, scope: !10198)
!10225 = !DILocation(line: 4972, column: 33, scope: !10198)
!10226 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10227)
!10227 = distinct !DILocation(line: 4972, column: 37, scope: !10198)
!10228 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10227)
!10229 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10227)
!10230 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10227)
!10231 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10227)
!10232 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10227)
!10233 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10227)
!10234 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10227)
!10235 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10227)
!10236 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10227)
!10237 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10227)
!10238 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10227)
!10239 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10227)
!10240 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10227)
!10241 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10227)
!10242 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !10227)
!10243 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10227)
!10244 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10227)
!10245 = !DILocation(line: 0, scope: !1486, inlinedAt: !10227)
!10246 = !DILocation(line: 4972, column: 12, scope: !10198)
!10247 = !DILocation(line: 4973, column: 12, scope: !10198)
!10248 = !DILocation(line: 4974, column: 33, scope: !10198)
!10249 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10250)
!10250 = distinct !DILocation(line: 4974, column: 37, scope: !10198)
!10251 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10250)
!10252 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10250)
!10253 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10250)
!10254 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10250)
!10255 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10250)
!10256 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10250)
!10257 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10250)
!10258 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10250)
!10259 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10250)
!10260 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10250)
!10261 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10250)
!10262 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10250)
!10263 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10250)
!10264 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10250)
!10265 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !10250)
!10266 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10250)
!10267 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10250)
!10268 = !DILocation(line: 0, scope: !1486, inlinedAt: !10250)
!10269 = !DILocation(line: 4974, column: 12, scope: !10198)
!10270 = !DILocation(line: 4975, column: 32, scope: !10198)
!10271 = !{!785, !758, i64 840}
!10272 = !DILocation(line: 4975, column: 10, scope: !10198)
!10273 = !DILocation(line: 4976, column: 9, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 4976, column: 9)
!10275 = !DILocation(line: 4976, column: 9, scope: !10198)
!10276 = !DILocation(line: 4969, column: 26, scope: !10198)
!10277 = !DILocation(line: 4977, column: 9, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 4976, column: 13)
!10279 = !DILocation(line: 4978, column: 36, scope: !10278)
!10280 = !DILocation(line: 4978, column: 13, scope: !10278)
!10281 = !DILocation(line: 4978, column: 27, scope: !10278)
!10282 = !{!10283, !729, i64 16}
!10283 = !{!"migrateCachedSocket", !709, i64 0, !729, i64 8, !729, i64 16}
!10284 = !DILocation(line: 4979, column: 9, scope: !10278)
!10285 = !DILocation(line: 4983, column: 9, scope: !10218)
!10286 = !DILocation(line: 4983, column: 49, scope: !10218)
!10287 = !DILocation(line: 4983, column: 9, scope: !10198)
!10288 = !DILocation(line: 4985, column: 25, scope: !10217)
!10289 = !DILocation(line: 4985, column: 20, scope: !10217)
!10290 = !DILocation(line: 4986, column: 14, scope: !10217)
!10291 = !DILocation(line: 4987, column: 19, scope: !10217)
!10292 = !{!10283, !709, i64 0}
!10293 = !DILocation(line: 4987, column: 9, scope: !10217)
!10294 = !DILocation(line: 4988, column: 9, scope: !10217)
!10295 = !DILocation(line: 4989, column: 27, scope: !10217)
!10296 = !DILocation(line: 4989, column: 50, scope: !10217)
!10297 = !DILocation(line: 4989, column: 9, scope: !10217)
!10298 = !DILocation(line: 4990, column: 5, scope: !10217)
!10299 = !DILocation(line: 4993, column: 50, scope: !10198)
!10300 = !DILocation(line: 4993, column: 47, scope: !10198)
!10301 = !DILocation(line: 4993, column: 59, scope: !10198)
!10302 = !DILocation(line: 4994, column: 38, scope: !10198)
!10303 = !DILocation(line: 4994, column: 50, scope: !10198)
!10304 = !DILocation(line: 4994, column: 33, scope: !10198)
!10305 = !DILocation(line: 4993, column: 10, scope: !10198)
!10306 = !DILocation(line: 4967, column: 9, scope: !10198)
!10307 = !DILocation(line: 4995, column: 12, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 4995, column: 9)
!10309 = !DILocation(line: 4995, column: 9, scope: !10198)
!10310 = !DILocation(line: 4996, column: 9, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10308, file: !3, line: 4995, column: 19)
!10312 = !DILocation(line: 4997, column: 9, scope: !10311)
!10313 = !DILocation(line: 4999, column: 9, scope: !10311)
!10314 = !DILocation(line: 5001, column: 5, scope: !10198)
!10315 = !DILocation(line: 5004, column: 10, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 5004, column: 9)
!10317 = !DILocation(line: 5004, column: 41, scope: !10316)
!10318 = !DILocation(line: 5004, column: 56, scope: !10316)
!10319 = !DILocation(line: 5004, column: 9, scope: !10198)
!10320 = !DILocation(line: 5005, column: 9, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 5004, column: 62)
!10322 = !DILocation(line: 5007, column: 13, scope: !10321)
!10323 = !DILocation(line: 5006, column: 9, scope: !10321)
!10324 = !DILocation(line: 5008, column: 9, scope: !10321)
!10325 = !DILocation(line: 5009, column: 9, scope: !10321)
!10326 = !DILocation(line: 5013, column: 10, scope: !10198)
!10327 = !DILocation(line: 5014, column: 9, scope: !10198)
!10328 = !DILocation(line: 5014, column: 12, scope: !10198)
!10329 = !DILocation(line: 5015, column: 9, scope: !10198)
!10330 = !DILocation(line: 5015, column: 19, scope: !10198)
!10331 = !{!10283, !729, i64 8}
!10332 = !DILocation(line: 5016, column: 32, scope: !10198)
!10333 = !DILocation(line: 5016, column: 9, scope: !10198)
!10334 = !DILocation(line: 5016, column: 23, scope: !10198)
!10335 = !DILocation(line: 5017, column: 20, scope: !10198)
!10336 = !DILocation(line: 5017, column: 5, scope: !10198)
!10337 = !DILocation(line: 5018, column: 5, scope: !10198)
!10338 = !DILocation(line: 0, scope: !10198)
!10339 = !DILocation(line: 5019, column: 1, scope: !10198)
!10340 = distinct !DISubprogram(name: "migrateCloseSocket", scope: !3, file: !3, line: 5022, type: !6503, isLocal: false, isDefinition: true, scopeLine: 5022, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10341)
!10341 = !{!10342, !10343, !10344, !10345}
!10342 = !DILocalVariable(name: "host", arg: 1, scope: !10340, file: !3, line: 5022, type: !4435)
!10343 = !DILocalVariable(name: "port", arg: 2, scope: !10340, file: !3, line: 5022, type: !4435)
!10344 = !DILocalVariable(name: "name", scope: !10340, file: !3, line: 5023, type: !189)
!10345 = !DILocalVariable(name: "cs", scope: !10340, file: !3, line: 5024, type: !10201)
!10346 = !DILocation(line: 5022, column: 31, scope: !10340)
!10347 = !DILocation(line: 5022, column: 43, scope: !10340)
!10348 = !DILocation(line: 5023, column: 16, scope: !10340)
!10349 = !DILocation(line: 5023, column: 9, scope: !10340)
!10350 = !DILocation(line: 5026, column: 33, scope: !10340)
!10351 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10352)
!10352 = distinct !DILocation(line: 5026, column: 37, scope: !10340)
!10353 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10352)
!10354 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10352)
!10355 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10352)
!10356 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10352)
!10357 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10352)
!10358 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10352)
!10359 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10352)
!10360 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10352)
!10361 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10352)
!10362 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10352)
!10363 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10352)
!10364 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10352)
!10365 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10352)
!10366 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10352)
!10367 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !10352)
!10368 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10352)
!10369 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10352)
!10370 = !DILocation(line: 0, scope: !1486, inlinedAt: !10352)
!10371 = !DILocation(line: 5026, column: 12, scope: !10340)
!10372 = !DILocation(line: 5027, column: 12, scope: !10340)
!10373 = !DILocation(line: 5028, column: 33, scope: !10340)
!10374 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10375)
!10375 = distinct !DILocation(line: 5028, column: 37, scope: !10340)
!10376 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10375)
!10377 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10375)
!10378 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10375)
!10379 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10375)
!10380 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10375)
!10381 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10375)
!10382 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10375)
!10383 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10375)
!10384 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10375)
!10385 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10375)
!10386 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10375)
!10387 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10375)
!10388 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10375)
!10389 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10375)
!10390 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !10375)
!10391 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10375)
!10392 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10375)
!10393 = !DILocation(line: 0, scope: !1486, inlinedAt: !10375)
!10394 = !DILocation(line: 5028, column: 12, scope: !10340)
!10395 = !DILocation(line: 5029, column: 32, scope: !10340)
!10396 = !DILocation(line: 5029, column: 10, scope: !10340)
!10397 = !DILocation(line: 5030, column: 10, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 5030, column: 9)
!10399 = !DILocation(line: 5030, column: 9, scope: !10340)
!10400 = !DILocation(line: 5031, column: 9, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 5030, column: 14)
!10402 = !DILocation(line: 5032, column: 9, scope: !10401)
!10403 = !DILocation(line: 5024, column: 26, scope: !10340)
!10404 = !DILocation(line: 5035, column: 15, scope: !10340)
!10405 = !DILocation(line: 5035, column: 5, scope: !10340)
!10406 = !DILocation(line: 5036, column: 5, scope: !10340)
!10407 = !DILocation(line: 5037, column: 23, scope: !10340)
!10408 = !DILocation(line: 5037, column: 5, scope: !10340)
!10409 = !DILocation(line: 5038, column: 5, scope: !10340)
!10410 = !DILocation(line: 5039, column: 1, scope: !10340)
!10411 = distinct !DISubprogram(name: "migrateCloseTimedoutSockets", scope: !3, file: !3, line: 5041, type: !293, isLocal: false, isDefinition: true, scopeLine: 5041, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10412)
!10412 = !{!10413, !10414, !10415}
!10413 = !DILocalVariable(name: "di", scope: !10411, file: !3, line: 5042, type: !297)
!10414 = !DILocalVariable(name: "de", scope: !10411, file: !3, line: 5043, type: !340)
!10415 = !DILocalVariable(name: "cs", scope: !10416, file: !3, line: 5046, type: !10201)
!10416 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 5045, column: 40)
!10417 = !DILocation(line: 5042, column: 51, scope: !10411)
!10418 = !DILocation(line: 5042, column: 24, scope: !10411)
!10419 = !DILocation(line: 5042, column: 19, scope: !10411)
!10420 = !DILocation(line: 5045, column: 17, scope: !10411)
!10421 = !DILocation(line: 5043, column: 16, scope: !10411)
!10422 = !DILocation(line: 5045, column: 31, scope: !10411)
!10423 = !DILocation(line: 5045, column: 5, scope: !10411)
!10424 = !DILocation(line: 5046, column: 35, scope: !10416)
!10425 = !DILocation(line: 5048, column: 21, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 5048, column: 13)
!10427 = !DILocation(line: 5048, column: 36, scope: !10426)
!10428 = !DILocation(line: 5048, column: 30, scope: !10426)
!10429 = !DILocation(line: 5048, column: 51, scope: !10426)
!10430 = !DILocation(line: 5048, column: 13, scope: !10416)
!10431 = !DILocation(line: 5046, column: 30, scope: !10416)
!10432 = !DILocation(line: 5049, column: 23, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 5048, column: 79)
!10434 = !DILocation(line: 5049, column: 13, scope: !10433)
!10435 = !DILocation(line: 5050, column: 13, scope: !10433)
!10436 = !DILocation(line: 5051, column: 31, scope: !10433)
!10437 = !DILocation(line: 5051, column: 54, scope: !10433)
!10438 = !DILocation(line: 5051, column: 13, scope: !10433)
!10439 = !DILocation(line: 5052, column: 9, scope: !10433)
!10440 = distinct !{!10440, !10423, !10441}
!10441 = !DILocation(line: 5053, column: 5, scope: !10411)
!10442 = !DILocation(line: 5054, column: 5, scope: !10411)
!10443 = !DILocation(line: 5055, column: 1, scope: !10411)
!10444 = distinct !DISubprogram(name: "migrateCommand", scope: !3, file: !3, line: 5063, type: !8201, isLocal: false, isDefinition: true, scopeLine: 5063, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10445)
!10445 = !{!10446, !10447, !10448, !10449, !10450, !10451, !10452, !10453, !10454, !10455, !10456, !10457, !10458, !10459, !10460, !10461, !10462, !10463, !10464, !10468, !10469, !10470, !10471, !10475, !10476, !10478, !10479, !10480, !10481, !10485, !10486, !10487, !10488, !10489, !10490}
!10446 = !DILocalVariable(name: "c", arg: 1, scope: !10444, file: !3, line: 5063, type: !8166)
!10447 = !DILocalVariable(name: "cs", scope: !10444, file: !3, line: 5064, type: !10201)
!10448 = !DILocalVariable(name: "copy", scope: !10444, file: !3, line: 5065, type: !177)
!10449 = !DILocalVariable(name: "replace", scope: !10444, file: !3, line: 5065, type: !177)
!10450 = !DILocalVariable(name: "j", scope: !10444, file: !3, line: 5065, type: !177)
!10451 = !DILocalVariable(name: "password", scope: !10444, file: !3, line: 5066, type: !178)
!10452 = !DILocalVariable(name: "timeout", scope: !10444, file: !3, line: 5067, type: !13)
!10453 = !DILocalVariable(name: "dbid", scope: !10444, file: !3, line: 5068, type: !13)
!10454 = !DILocalVariable(name: "ov", scope: !10444, file: !3, line: 5069, type: !8192)
!10455 = !DILocalVariable(name: "kv", scope: !10444, file: !3, line: 5070, type: !8192)
!10456 = !DILocalVariable(name: "newargv", scope: !10444, file: !3, line: 5071, type: !8192)
!10457 = !DILocalVariable(name: "cmd", scope: !10444, file: !3, line: 5072, type: !9801)
!10458 = !DILocalVariable(name: "payload", scope: !10444, file: !3, line: 5072, type: !9801)
!10459 = !DILocalVariable(name: "may_retry", scope: !10444, file: !3, line: 5073, type: !177)
!10460 = !DILocalVariable(name: "write_error", scope: !10444, file: !3, line: 5074, type: !177)
!10461 = !DILocalVariable(name: "argv_rewritten", scope: !10444, file: !3, line: 5075, type: !177)
!10462 = !DILocalVariable(name: "first_key", scope: !10444, file: !3, line: 5078, type: !177)
!10463 = !DILocalVariable(name: "num_keys", scope: !10444, file: !3, line: 5079, type: !177)
!10464 = !DILocalVariable(name: "moreargs", scope: !10465, file: !3, line: 5083, type: !177)
!10465 = distinct !DILexicalBlock(scope: !10466, file: !3, line: 5082, column: 35)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 5082, column: 5)
!10467 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5082, column: 5)
!10468 = !DILocalVariable(name: "oi", scope: !10444, file: !3, line: 5126, type: !177)
!10469 = !DILocalVariable(name: "select", scope: !10444, file: !3, line: 5162, type: !177)
!10470 = !DILocalVariable(name: "non_expired", scope: !10444, file: !3, line: 5169, type: !177)
!10471 = !DILocalVariable(name: "ttl", scope: !10472, file: !3, line: 5176, type: !186)
!10472 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 5175, column: 36)
!10473 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 5175, column: 5)
!10474 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5175, column: 5)
!10475 = !DILocalVariable(name: "expireat", scope: !10472, file: !3, line: 5177, type: !186)
!10476 = !DILocalVariable(name: "buf", scope: !10477, file: !3, line: 5225, type: !189)
!10477 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5224, column: 5)
!10478 = !DILocalVariable(name: "pos", scope: !10477, file: !3, line: 5226, type: !1455)
!10479 = !DILocalVariable(name: "towrite", scope: !10477, file: !3, line: 5226, type: !1455)
!10480 = !DILocalVariable(name: "nwritten", scope: !10477, file: !3, line: 5227, type: !177)
!10481 = !DILocalVariable(name: "buf0", scope: !10444, file: !3, line: 5240, type: !10482)
!10482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 8192, elements: !10483)
!10483 = !{!10484}
!10484 = !DISubrange(count: 1024)
!10485 = !DILocalVariable(name: "buf1", scope: !10444, file: !3, line: 5241, type: !10482)
!10486 = !DILocalVariable(name: "buf2", scope: !10444, file: !3, line: 5242, type: !10482)
!10487 = !DILocalVariable(name: "error_from_target", scope: !10444, file: !3, line: 5253, type: !177)
!10488 = !DILocalVariable(name: "socket_error", scope: !10444, file: !3, line: 5254, type: !177)
!10489 = !DILocalVariable(name: "del_idx", scope: !10444, file: !3, line: 5255, type: !177)
!10490 = !DILocalVariable(name: "errbuf", scope: !10491, file: !3, line: 5275, type: !178)
!10491 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 5273, column: 37)
!10492 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 5273, column: 17)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 5271, column: 9)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 5268, column: 13)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 5263, column: 36)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 5263, column: 5)
!10497 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5263, column: 5)
!10498 = !DILocation(line: 5063, column: 29, scope: !10444)
!10499 = !DILocation(line: 5065, column: 9, scope: !10444)
!10500 = !DILocation(line: 5065, column: 19, scope: !10444)
!10501 = !DILocation(line: 5066, column: 11, scope: !10444)
!10502 = !DILocation(line: 5067, column: 5, scope: !10444)
!10503 = !DILocation(line: 5068, column: 5, scope: !10444)
!10504 = !DILocation(line: 5069, column: 12, scope: !10444)
!10505 = !DILocation(line: 5070, column: 12, scope: !10444)
!10506 = !DILocation(line: 5071, column: 12, scope: !10444)
!10507 = !DILocation(line: 5072, column: 5, scope: !10444)
!10508 = !DILocation(line: 5073, column: 9, scope: !10444)
!10509 = !DILocation(line: 5074, column: 9, scope: !10444)
!10510 = !DILocation(line: 5075, column: 9, scope: !10444)
!10511 = !DILocation(line: 5078, column: 9, scope: !10444)
!10512 = !DILocation(line: 5079, column: 9, scope: !10444)
!10513 = !DILocation(line: 5065, column: 32, scope: !10444)
!10514 = !DILocation(line: 5082, column: 24, scope: !10466)
!10515 = !DILocation(line: 5082, column: 19, scope: !10466)
!10516 = !DILocation(line: 5082, column: 5, scope: !10467)
!10517 = !DILocation(line: 5083, column: 26, scope: !10465)
!10518 = !DILocation(line: 5084, column: 25, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10465, file: !3, line: 5084, column: 13)
!10520 = !DILocation(line: 5084, column: 37, scope: !10519)
!10521 = !DILocation(line: 5084, column: 14, scope: !10519)
!10522 = !DILocation(line: 5084, column: 13, scope: !10465)
!10523 = !DILocation(line: 5086, column: 21, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 5086, column: 20)
!10525 = !DILocation(line: 5086, column: 20, scope: !10519)
!10526 = !DILocation(line: 5088, column: 21, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 5088, column: 20)
!10528 = !DILocation(line: 5088, column: 20, scope: !10524)
!10529 = !DILocation(line: 5089, column: 17, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10527, file: !3, line: 5088, column: 57)
!10531 = !DILocation(line: 5090, column: 35, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 5089, column: 28)
!10533 = distinct !DILexicalBlock(scope: !10530, file: !3, line: 5089, column: 17)
!10534 = !DILocation(line: 5090, column: 17, scope: !10532)
!10535 = !DILocation(line: 5091, column: 17, scope: !10532)
!10536 = !DILocation(line: 5093, column: 14, scope: !10530)
!10537 = !DILocation(line: 5094, column: 24, scope: !10530)
!10538 = !DILocation(line: 5094, column: 36, scope: !10530)
!10539 = !DILocation(line: 5095, column: 21, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10527, file: !3, line: 5095, column: 20)
!10541 = !DILocation(line: 5095, column: 20, scope: !10527)
!10542 = !DILocation(line: 5096, column: 24, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 5096, column: 17)
!10544 = distinct !DILexicalBlock(scope: !10540, file: !3, line: 5095, column: 57)
!10545 = !DILocation(line: 5096, column: 36, scope: !10543)
!10546 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10547)
!10547 = distinct !DILocation(line: 5096, column: 17, scope: !10543)
!10548 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10547)
!10549 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10547)
!10550 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10547)
!10551 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10547)
!10552 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10547)
!10553 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10547)
!10554 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10547)
!10555 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10547)
!10556 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10547)
!10557 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10547)
!10558 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10547)
!10559 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10547)
!10560 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10547)
!10561 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10547)
!10562 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !10547)
!10563 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10547)
!10564 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10547)
!10565 = !DILocation(line: 0, scope: !1486, inlinedAt: !10547)
!10566 = !DILocation(line: 5096, column: 41, scope: !10543)
!10567 = !DILocation(line: 5096, column: 17, scope: !10544)
!10568 = !DILocation(line: 5097, column: 17, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10543, file: !3, line: 5096, column: 47)
!10570 = !DILocation(line: 5100, column: 17, scope: !10569)
!10571 = !DILocation(line: 5106, column: 31, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10540, file: !3, line: 5105, column: 16)
!10573 = !DILocation(line: 5106, column: 13, scope: !10572)
!10574 = !DILocation(line: 5107, column: 13, scope: !10572)
!10575 = !DILocation(line: 5102, column: 26, scope: !10544)
!10576 = !DILocation(line: 5103, column: 36, scope: !10544)
!10577 = !DILocation(line: 5082, column: 31, scope: !10466)
!10578 = distinct !{!10578, !10516, !10579}
!10579 = !DILocation(line: 5109, column: 5, scope: !10467)
!10580 = !DILocation(line: 5112, column: 36, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5112, column: 9)
!10582 = !DILocation(line: 5067, column: 10, scope: !10444)
!10583 = !DILocation(line: 5112, column: 9, scope: !10581)
!10584 = !DILocation(line: 5112, column: 62, scope: !10581)
!10585 = !DILocation(line: 5112, column: 70, scope: !10581)
!10586 = !DILocation(line: 5113, column: 39, scope: !10581)
!10587 = !DILocation(line: 5113, column: 36, scope: !10581)
!10588 = !DILocation(line: 5068, column: 10, scope: !10444)
!10589 = !DILocation(line: 5113, column: 9, scope: !10581)
!10590 = !DILocation(line: 5113, column: 59, scope: !10581)
!10591 = !DILocation(line: 5112, column: 9, scope: !10444)
!10592 = !DILocation(line: 5117, column: 9, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5117, column: 9)
!10594 = !DILocation(line: 5117, column: 17, scope: !10593)
!10595 = !DILocation(line: 5117, column: 9, scope: !10444)
!10596 = !DILocation(line: 5117, column: 31, scope: !10593)
!10597 = !DILocation(line: 5117, column: 23, scope: !10593)
!10598 = !DILocation(line: 5124, column: 36, scope: !10444)
!10599 = !DILocation(line: 5124, column: 35, scope: !10444)
!10600 = !DILocation(line: 5124, column: 10, scope: !10444)
!10601 = !DILocation(line: 5125, column: 10, scope: !10444)
!10602 = !DILocation(line: 5126, column: 9, scope: !10444)
!10603 = !DILocation(line: 5128, column: 19, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10605, file: !3, line: 5128, column: 5)
!10605 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5128, column: 5)
!10606 = !DILocation(line: 5128, column: 5, scope: !10605)
!10607 = !DILocation(line: 5129, column: 40, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 5129, column: 13)
!10609 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 5128, column: 36)
!10610 = !DILocation(line: 5129, column: 46, scope: !10608)
!10611 = !DILocation(line: 5129, column: 60, scope: !10608)
!10612 = !DILocation(line: 5129, column: 43, scope: !10608)
!10613 = !DILocation(line: 5129, column: 23, scope: !10608)
!10614 = !DILocation(line: 5129, column: 14, scope: !10608)
!10615 = !DILocation(line: 5129, column: 21, scope: !10608)
!10616 = !DILocation(line: 5129, column: 66, scope: !10608)
!10617 = !DILocation(line: 5129, column: 13, scope: !10609)
!10618 = !DILocation(line: 5130, column: 25, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 5129, column: 75)
!10620 = !DILocation(line: 5130, column: 22, scope: !10619)
!10621 = !DILocation(line: 5130, column: 13, scope: !10619)
!10622 = !DILocation(line: 5130, column: 20, scope: !10619)
!10623 = !DILocation(line: 5131, column: 15, scope: !10619)
!10624 = !DILocation(line: 5132, column: 9, scope: !10619)
!10625 = !DILocation(line: 0, scope: !10444)
!10626 = !DILocation(line: 5128, column: 32, scope: !10604)
!10627 = distinct !{!10627, !10606, !10628}
!10628 = !DILocation(line: 5133, column: 5, scope: !10605)
!10629 = !DILocation(line: 5135, column: 18, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5135, column: 9)
!10631 = !DILocation(line: 5135, column: 9, scope: !10444)
!10632 = !DILocation(line: 5145, column: 32, scope: !10444)
!10633 = !DILocation(line: 5136, column: 9, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 5135, column: 24)
!10635 = !DILocation(line: 5136, column: 20, scope: !10634)
!10636 = !DILocation(line: 5137, column: 23, scope: !10634)
!10637 = !DILocation(line: 5137, column: 9, scope: !10634)
!10638 = !DILocation(line: 5138, column: 9, scope: !10634)
!10639 = !DILocation(line: 0, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 5372, column: 42)
!10641 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5372, column: 9)
!10642 = !DILocation(line: 5145, column: 29, scope: !10444)
!10643 = !DILocation(line: 5145, column: 40, scope: !10444)
!10644 = !DILocation(line: 5145, column: 51, scope: !10444)
!10645 = !DILocation(line: 5145, column: 10, scope: !10444)
!10646 = !DILocation(line: 5064, column: 26, scope: !10444)
!10647 = !DILocation(line: 5146, column: 12, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5146, column: 9)
!10649 = !DILocation(line: 5146, column: 9, scope: !10444)
!10650 = !DILocation(line: 5147, column: 9, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 5146, column: 21)
!10652 = !DILocation(line: 5147, column: 20, scope: !10651)
!10653 = !DILocation(line: 5148, column: 9, scope: !10651)
!10654 = !DILocation(line: 5151, column: 28, scope: !10444)
!10655 = !DILocation(line: 5072, column: 9, scope: !10444)
!10656 = !DILocation(line: 5151, column: 5, scope: !10444)
!10657 = !DILocation(line: 5154, column: 9, scope: !10444)
!10658 = !DILocation(line: 5155, column: 9, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 5154, column: 19)
!10660 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5154, column: 9)
!10661 = !DILocation(line: 5156, column: 9, scope: !10659)
!10662 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10663)
!10663 = distinct !DILocation(line: 5157, column: 9, scope: !10659)
!10664 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10663)
!10665 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10663)
!10666 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10663)
!10667 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10663)
!10668 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10663)
!10669 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10663)
!10670 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10663)
!10671 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10663)
!10672 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10663)
!10673 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10663)
!10674 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10663)
!10675 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10663)
!10676 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10663)
!10677 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10663)
!10678 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10663)
!10679 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10663)
!10680 = !DILocation(line: 0, scope: !1486, inlinedAt: !10663)
!10681 = !DILocation(line: 5157, column: 9, scope: !10659)
!10682 = !DILocation(line: 5162, column: 22, scope: !10444)
!10683 = !DILocation(line: 5162, column: 35, scope: !10444)
!10684 = !DILocation(line: 5162, column: 32, scope: !10444)
!10685 = !DILocation(line: 5163, column: 9, scope: !10444)
!10686 = !DILocation(line: 5164, column: 9, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 5163, column: 17)
!10688 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5163, column: 9)
!10689 = !DILocation(line: 5165, column: 9, scope: !10687)
!10690 = !DILocation(line: 5166, column: 9, scope: !10687)
!10691 = !DILocation(line: 5169, column: 9, scope: !10444)
!10692 = !DILocation(line: 5175, column: 19, scope: !10473)
!10693 = !DILocation(line: 5175, column: 5, scope: !10474)
!10694 = !DILocation(line: 5177, column: 43, scope: !10472)
!10695 = !DILocation(line: 5176, column: 19, scope: !10472)
!10696 = !DILocation(line: 5177, column: 46, scope: !10472)
!10697 = !DILocation(line: 5177, column: 30, scope: !10472)
!10698 = !DILocation(line: 5177, column: 19, scope: !10472)
!10699 = !DILocation(line: 5179, column: 22, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 5179, column: 13)
!10701 = !DILocation(line: 5179, column: 13, scope: !10472)
!10702 = !DILocation(line: 5180, column: 28, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10700, file: !3, line: 5179, column: 29)
!10704 = !DILocation(line: 5180, column: 27, scope: !10703)
!10705 = !DILocation(line: 5181, column: 21, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 5181, column: 17)
!10707 = !DILocation(line: 5181, column: 17, scope: !10703)
!10708 = !DILocation(line: 5184, column: 21, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 5184, column: 17)
!10710 = !DILocation(line: 5184, column: 17, scope: !10703)
!10711 = !DILocation(line: 0, scope: !10472)
!10712 = !DILocation(line: 5190, column: 29, scope: !10472)
!10713 = !DILocation(line: 5190, column: 23, scope: !10472)
!10714 = !DILocation(line: 5190, column: 9, scope: !10472)
!10715 = !DILocation(line: 5190, column: 27, scope: !10472)
!10716 = !DILocation(line: 5192, column: 9, scope: !10472)
!10717 = !DILocation(line: 5195, column: 20, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 5195, column: 13)
!10719 = !DILocation(line: 5195, column: 13, scope: !10718)
!10720 = !DILocation(line: 5195, column: 13, scope: !10472)
!10721 = !DILocation(line: 5196, column: 13, scope: !10718)
!10722 = !DILocation(line: 5199, column: 13, scope: !10718)
!10723 = !DILocation(line: 5200, column: 9, scope: !10472)
!10724 = !DILocation(line: 5201, column: 9, scope: !10472)
!10725 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10726)
!10726 = distinct !DILocation(line: 5201, column: 9, scope: !10472)
!10727 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10726)
!10728 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10726)
!10729 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10726)
!10730 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10726)
!10731 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10726)
!10732 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10726)
!10733 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10726)
!10734 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10726)
!10735 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10726)
!10736 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10726)
!10737 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10726)
!10738 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10726)
!10739 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10726)
!10740 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10726)
!10741 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !10726)
!10742 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10726)
!10743 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10726)
!10744 = !DILocation(line: 0, scope: !1486, inlinedAt: !10726)
!10745 = !DILocation(line: 5203, column: 9, scope: !10472)
!10746 = !DILocation(line: 5207, column: 36, scope: !10472)
!10747 = !DILocation(line: 5207, column: 42, scope: !10472)
!10748 = !DILocation(line: 5072, column: 14, scope: !10444)
!10749 = !DILocation(line: 5207, column: 9, scope: !10472)
!10750 = !DILocation(line: 5208, column: 9, scope: !10472)
!10751 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10752)
!10752 = distinct !DILocation(line: 5208, column: 9, scope: !10472)
!10753 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10752)
!10754 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10752)
!10755 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10752)
!10756 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10752)
!10757 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10752)
!10758 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10752)
!10759 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10752)
!10760 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10752)
!10761 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10752)
!10762 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10752)
!10763 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10752)
!10764 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10752)
!10765 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10752)
!10766 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10752)
!10767 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !10752)
!10768 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10752)
!10769 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10752)
!10770 = !DILocation(line: 0, scope: !1486, inlinedAt: !10752)
!10771 = !DILocation(line: 5211, column: 35, scope: !10472)
!10772 = !DILocation(line: 5211, column: 9, scope: !10472)
!10773 = !DILocation(line: 5215, column: 13, scope: !10472)
!10774 = !DILocation(line: 5216, column: 13, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 5215, column: 13)
!10776 = !DILocation(line: 5175, column: 32, scope: !10473)
!10777 = distinct !{!10777, !10693, !10778}
!10778 = !DILocation(line: 5217, column: 5, scope: !10474)
!10779 = !DILocation(line: 5223, column: 5, scope: !10444)
!10780 = !DILocation(line: 5223, column: 11, scope: !10444)
!10781 = !DILocation(line: 5225, column: 33, scope: !10477)
!10782 = !DILocation(line: 5225, column: 13, scope: !10477)
!10783 = !DILocation(line: 5226, column: 16, scope: !10477)
!10784 = !DILocation(line: 5227, column: 13, scope: !10477)
!10785 = !DILocation(line: 5229, column: 9, scope: !10477)
!10786 = !DILocation(line: 0, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 5229, column: 49)
!10788 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !10789)
!10789 = distinct !DILocation(line: 5229, column: 27, scope: !10477)
!10790 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !10789)
!10791 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !10789)
!10792 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !10789)
!10793 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !10789)
!10794 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !10789)
!10795 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !10789)
!10796 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !10789)
!10797 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !10789)
!10798 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !10789)
!10799 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !10789)
!10800 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !10789)
!10801 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !10789)
!10802 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !10789)
!10803 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !10789)
!10804 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !10789)
!10805 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !10789)
!10806 = !DILocation(line: 0, scope: !1486, inlinedAt: !10789)
!10807 = !DILocation(line: 5229, column: 38, scope: !10477)
!10808 = !DILocation(line: 5226, column: 25, scope: !10477)
!10809 = !DILocation(line: 5229, column: 44, scope: !10477)
!10810 = !DILocation(line: 5230, column: 24, scope: !10787)
!10811 = !DILocation(line: 5231, column: 38, scope: !10787)
!10812 = !DILocation(line: 5231, column: 44, scope: !10787)
!10813 = !DILocation(line: 5231, column: 57, scope: !10787)
!10814 = !DILocation(line: 5231, column: 24, scope: !10787)
!10815 = !DILocation(line: 5232, column: 29, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10787, file: !3, line: 5232, column: 17)
!10817 = !DILocation(line: 5232, column: 26, scope: !10816)
!10818 = !DILocation(line: 5232, column: 17, scope: !10787)
!10819 = !DILocation(line: 5236, column: 20, scope: !10787)
!10820 = !DILocation(line: 5236, column: 17, scope: !10787)
!10821 = distinct !{!10821, !10785, !10822}
!10822 = !DILocation(line: 5237, column: 9, scope: !10477)
!10823 = !DILocation(line: 5240, column: 10, scope: !10444)
!10824 = !DILocation(line: 5241, column: 10, scope: !10444)
!10825 = !DILocation(line: 5242, column: 10, scope: !10444)
!10826 = !DILocation(line: 5245, column: 18, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5245, column: 9)
!10828 = !DILocation(line: 5245, column: 38, scope: !10827)
!10829 = !DILocation(line: 5245, column: 62, scope: !10827)
!10830 = !DILocation(line: 5245, column: 21, scope: !10827)
!10831 = !DILocation(line: 5245, column: 71, scope: !10827)
!10832 = !DILocation(line: 5245, column: 9, scope: !10444)
!10833 = !DILocation(line: 5249, column: 16, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5249, column: 9)
!10835 = !DILocation(line: 5249, column: 36, scope: !10834)
!10836 = !DILocation(line: 5249, column: 60, scope: !10834)
!10837 = !DILocation(line: 5249, column: 19, scope: !10834)
!10838 = !DILocation(line: 5249, column: 69, scope: !10834)
!10839 = !DILocation(line: 5249, column: 9, scope: !10444)
!10840 = !DILocation(line: 5253, column: 9, scope: !10444)
!10841 = !DILocation(line: 5254, column: 9, scope: !10444)
!10842 = !DILocation(line: 5255, column: 9, scope: !10444)
!10843 = !DILocation(line: 5261, column: 9, scope: !10444)
!10844 = !DILocation(line: 5261, column: 57, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5261, column: 9)
!10846 = !DILocation(line: 5261, column: 48, scope: !10845)
!10847 = !DILocation(line: 5261, column: 47, scope: !10845)
!10848 = !DILocation(line: 5261, column: 26, scope: !10845)
!10849 = !DILocation(line: 5261, column: 16, scope: !10845)
!10850 = !DILocation(line: 0, scope: !10845)
!10851 = !DILocation(line: 5263, column: 19, scope: !10496)
!10852 = !DILocation(line: 5263, column: 5, scope: !10497)
!10853 = !DILocation(line: 5264, column: 30, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 5264, column: 13)
!10855 = !DILocation(line: 5264, column: 54, scope: !10854)
!10856 = !DILocation(line: 5264, column: 13, scope: !10854)
!10857 = !DILocation(line: 5264, column: 63, scope: !10854)
!10858 = !DILocation(line: 5264, column: 13, scope: !10495)
!10859 = !DILocation(line: 5268, column: 26, scope: !10494)
!10860 = !DILocation(line: 5268, column: 34, scope: !10494)
!10861 = !DILocation(line: 5268, column: 23, scope: !10494)
!10862 = !DILocation(line: 5269, column: 21, scope: !10494)
!10863 = !DILocation(line: 5269, column: 24, scope: !10494)
!10864 = !DILocation(line: 5269, column: 32, scope: !10494)
!10865 = !DILocation(line: 5270, column: 13, scope: !10494)
!10866 = !DILocation(line: 5270, column: 21, scope: !10494)
!10867 = !DILocation(line: 5269, column: 40, scope: !10494)
!10868 = !DILocation(line: 5268, column: 13, scope: !10495)
!10869 = !DILocation(line: 5273, column: 18, scope: !10492)
!10870 = !DILocation(line: 5273, column: 17, scope: !10493)
!10871 = !DILocation(line: 5274, column: 31, scope: !10491)
!10872 = !DILocation(line: 5276, column: 30, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 5276, column: 21)
!10874 = !DILocation(line: 5276, column: 21, scope: !10491)
!10875 = !DILocation(line: 5277, column: 33, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 5277, column: 26)
!10877 = !DILocation(line: 5277, column: 36, scope: !10876)
!10878 = !DILocation(line: 5277, column: 44, scope: !10876)
!10879 = !DILocation(line: 5277, column: 26, scope: !10873)
!10880 = !DILocation(line: 0, scope: !10876)
!10881 = !DILocation(line: 5275, column: 23, scope: !10491)
!10882 = !DILocation(line: 5282, column: 27, scope: !10491)
!10883 = !DILocation(line: 5281, column: 17, scope: !10491)
!10884 = !DILocation(line: 5283, column: 13, scope: !10491)
!10885 = !DILocation(line: 5285, column: 17, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 5284, column: 16)
!10887 = !DILocation(line: 5287, column: 29, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 5285, column: 24)
!10889 = distinct !DILexicalBlock(scope: !10886, file: !3, line: 5285, column: 17)
!10890 = !DILocation(line: 5287, column: 32, scope: !10888)
!10891 = !DILocation(line: 5287, column: 17, scope: !10888)
!10892 = !DILocation(line: 5288, column: 38, scope: !10888)
!10893 = !DILocation(line: 5288, column: 41, scope: !10888)
!10894 = !DILocation(line: 5288, column: 17, scope: !10888)
!10895 = !DILocation(line: 5289, column: 29, scope: !10888)
!10896 = !DILocation(line: 5292, column: 38, scope: !10888)
!10897 = !DILocation(line: 5292, column: 32, scope: !10888)
!10898 = !DILocation(line: 5292, column: 17, scope: !10888)
!10899 = !DILocation(line: 5292, column: 36, scope: !10888)
!10900 = !DILocation(line: 5293, column: 30, scope: !10888)
!10901 = !DILocation(line: 5293, column: 17, scope: !10888)
!10902 = !DILocation(line: 5294, column: 13, scope: !10888)
!10903 = !DILocation(line: 0, scope: !10888)
!10904 = !DILocation(line: 5263, column: 32, scope: !10496)
!10905 = distinct !{!10905, !10852, !10906}
!10906 = !DILocation(line: 5296, column: 5, scope: !10497)
!10907 = !DILocation(line: 5301, column: 10, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5301, column: 9)
!10909 = !DILocation(line: 5301, column: 28, scope: !10908)
!10910 = !DILocation(line: 5301, column: 57, scope: !10908)
!10911 = !DILocation(line: 5302, column: 9, scope: !10908)
!10912 = !DILocation(line: 5302, column: 15, scope: !10908)
!10913 = !DILocation(line: 5301, column: 9, scope: !10444)
!10914 = !DILocation(line: 5310, column: 9, scope: !10444)
!10915 = !DILocation(line: 5310, column: 45, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5310, column: 9)
!10917 = !DILocation(line: 5310, column: 42, scope: !10916)
!10918 = !DILocation(line: 5310, column: 53, scope: !10916)
!10919 = !DILocation(line: 5310, column: 23, scope: !10916)
!10920 = !DILocation(line: 5312, column: 9, scope: !10444)
!10921 = !DILocation(line: 5316, column: 21, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 5316, column: 13)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !3, line: 5312, column: 16)
!10924 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5312, column: 9)
!10925 = !DILocation(line: 5316, column: 13, scope: !10923)
!10926 = !DILocation(line: 5317, column: 26, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10922, file: !3, line: 5316, column: 26)
!10928 = !DILocation(line: 5317, column: 24, scope: !10927)
!10929 = !DILocation(line: 5319, column: 13, scope: !10927)
!10930 = !DILocation(line: 5321, column: 9, scope: !10927)
!10931 = !DILocation(line: 5323, column: 13, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10922, file: !3, line: 5321, column: 16)
!10933 = !DILocation(line: 0, scope: !10923)
!10934 = !DILocation(line: 0, scope: !10927)
!10935 = !DILocation(line: 5331, column: 28, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5331, column: 9)
!10937 = !DILocation(line: 5336, column: 9, scope: !10444)
!10938 = !DILocation(line: 5343, column: 25, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 5336, column: 29)
!10940 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5336, column: 9)
!10941 = !DILocation(line: 5343, column: 23, scope: !10939)
!10942 = !DILocation(line: 5344, column: 27, scope: !10939)
!10943 = !DILocation(line: 5344, column: 9, scope: !10939)
!10944 = !DILocation(line: 5345, column: 5, scope: !10939)
!10945 = !DILocation(line: 5350, column: 27, scope: !10444)
!10946 = !DILocation(line: 5350, column: 5, scope: !10444)
!10947 = !DILocation(line: 5351, column: 5, scope: !10444)
!10948 = !DILocation(line: 5351, column: 16, scope: !10444)
!10949 = !DILocation(line: 5351, column: 27, scope: !10444)
!10950 = !DILocation(line: 5352, column: 5, scope: !10444)
!10951 = !DILocation(line: 0, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 5331, column: 45)
!10953 = !DILocation(line: 5360, column: 27, scope: !10444)
!10954 = !DILocation(line: 5360, column: 5, scope: !10444)
!10955 = !DILocation(line: 5366, column: 10, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5366, column: 9)
!10957 = !DILocation(line: 5366, column: 9, scope: !10444)
!10958 = !DILocation(line: 5366, column: 48, scope: !10956)
!10959 = !DILocation(line: 5366, column: 45, scope: !10956)
!10960 = !DILocation(line: 5366, column: 56, scope: !10956)
!10961 = !DILocation(line: 5366, column: 26, scope: !10956)
!10962 = !DILocation(line: 5367, column: 5, scope: !10444)
!10963 = !DILocation(line: 5372, column: 9, scope: !10641)
!10964 = !DILocation(line: 5372, column: 15, scope: !10641)
!10965 = !DILocation(line: 5372, column: 31, scope: !10641)
!10966 = !DILocation(line: 5372, column: 28, scope: !10641)
!10967 = !DILocation(line: 5378, column: 5, scope: !10444)
!10968 = !DILocation(line: 5378, column: 16, scope: !10444)
!10969 = !DILocation(line: 5380, column: 22, scope: !10444)
!10970 = !DILocation(line: 5382, column: 13, scope: !10444)
!10971 = !DILocation(line: 5380, column: 9, scope: !10444)
!10972 = !DILocation(line: 5379, column: 5, scope: !10444)
!10973 = !DILocation(line: 5383, column: 5, scope: !10444)
!10974 = !DILocation(line: 5384, column: 1, scope: !10444)
!10975 = distinct !DISubprogram(name: "askingCommand", scope: !3, file: !3, line: 5394, type: !8201, isLocal: false, isDefinition: true, scopeLine: 5394, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10976)
!10976 = !{!10977}
!10977 = !DILocalVariable(name: "c", arg: 1, scope: !10975, file: !3, line: 5394, type: !8166)
!10978 = !DILocation(line: 5394, column: 28, scope: !10975)
!10979 = !DILocation(line: 5395, column: 16, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 5395, column: 9)
!10981 = !DILocation(line: 5395, column: 32, scope: !10980)
!10982 = !DILocation(line: 5395, column: 9, scope: !10975)
!10983 = !DILocation(line: 5396, column: 9, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 5395, column: 38)
!10985 = !DILocation(line: 5397, column: 9, scope: !10984)
!10986 = !DILocation(line: 5399, column: 8, scope: !10975)
!10987 = !DILocation(line: 5399, column: 14, scope: !10975)
!10988 = !{!8565, !709, i64 160}
!10989 = !DILocation(line: 5400, column: 23, scope: !10975)
!10990 = !DILocation(line: 5400, column: 5, scope: !10975)
!10991 = !DILocation(line: 5401, column: 1, scope: !10975)
!10992 = distinct !DISubprogram(name: "readonlyCommand", scope: !3, file: !3, line: 5406, type: !8201, isLocal: false, isDefinition: true, scopeLine: 5406, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10993)
!10993 = !{!10994}
!10994 = !DILocalVariable(name: "c", arg: 1, scope: !10992, file: !3, line: 5406, type: !8166)
!10995 = !DILocation(line: 5406, column: 30, scope: !10992)
!10996 = !DILocation(line: 5407, column: 16, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10992, file: !3, line: 5407, column: 9)
!10998 = !DILocation(line: 5407, column: 32, scope: !10997)
!10999 = !DILocation(line: 5407, column: 9, scope: !10992)
!11000 = !DILocation(line: 5408, column: 9, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 5407, column: 38)
!11002 = !DILocation(line: 5409, column: 9, scope: !11001)
!11003 = !DILocation(line: 5411, column: 8, scope: !10992)
!11004 = !DILocation(line: 5411, column: 14, scope: !10992)
!11005 = !DILocation(line: 5412, column: 23, scope: !10992)
!11006 = !DILocation(line: 5412, column: 5, scope: !10992)
!11007 = !DILocation(line: 5413, column: 1, scope: !10992)
!11008 = distinct !DISubprogram(name: "readwriteCommand", scope: !3, file: !3, line: 5416, type: !8201, isLocal: false, isDefinition: true, scopeLine: 5416, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11009)
!11009 = !{!11010}
!11010 = !DILocalVariable(name: "c", arg: 1, scope: !11008, file: !3, line: 5416, type: !8166)
!11011 = !DILocation(line: 5416, column: 31, scope: !11008)
!11012 = !DILocation(line: 5417, column: 8, scope: !11008)
!11013 = !DILocation(line: 5417, column: 14, scope: !11008)
!11014 = !DILocation(line: 5418, column: 23, scope: !11008)
!11015 = !DILocation(line: 5418, column: 5, scope: !11008)
!11016 = !DILocation(line: 5419, column: 1, scope: !11008)
!11017 = distinct !DISubprogram(name: "getNodeByQuery", scope: !3, file: !3, line: 5453, type: !11018, isLocal: false, isDefinition: true, scopeLine: 5453, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11020)
!11018 = !DISubroutineType(types: !11019)
!11019 = !{!378, !8166, !8194, !8192, !177, !8211, !8211}
!11020 = !{!11021, !11022, !11023, !11024, !11025, !11026, !11027, !11028, !11029, !11030, !11032, !11033, !11034, !11035, !11036, !11037, !11038, !11039, !11043, !11044, !11045, !11046, !11047, !11048, !11052}
!11021 = !DILocalVariable(name: "c", arg: 1, scope: !11017, file: !3, line: 5453, type: !8166)
!11022 = !DILocalVariable(name: "cmd", arg: 2, scope: !11017, file: !3, line: 5453, type: !8194)
!11023 = !DILocalVariable(name: "argv", arg: 3, scope: !11017, file: !3, line: 5453, type: !8192)
!11024 = !DILocalVariable(name: "argc", arg: 4, scope: !11017, file: !3, line: 5453, type: !177)
!11025 = !DILocalVariable(name: "hashslot", arg: 5, scope: !11017, file: !3, line: 5453, type: !8211)
!11026 = !DILocalVariable(name: "error_code", arg: 6, scope: !11017, file: !3, line: 5453, type: !8211)
!11027 = !DILocalVariable(name: "n", scope: !11017, file: !3, line: 5454, type: !378)
!11028 = !DILocalVariable(name: "firstkey", scope: !11017, file: !3, line: 5455, type: !4435)
!11029 = !DILocalVariable(name: "multiple_keys", scope: !11017, file: !3, line: 5456, type: !177)
!11030 = !DILocalVariable(name: "ms", scope: !11017, file: !3, line: 5457, type: !11031)
!11031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8248, size: 64)
!11032 = !DILocalVariable(name: "_ms", scope: !11017, file: !3, line: 5457, type: !8248)
!11033 = !DILocalVariable(name: "mc", scope: !11017, file: !3, line: 5458, type: !8253)
!11034 = !DILocalVariable(name: "i", scope: !11017, file: !3, line: 5459, type: !177)
!11035 = !DILocalVariable(name: "slot", scope: !11017, file: !3, line: 5459, type: !177)
!11036 = !DILocalVariable(name: "migrating_slot", scope: !11017, file: !3, line: 5459, type: !177)
!11037 = !DILocalVariable(name: "importing_slot", scope: !11017, file: !3, line: 5459, type: !177)
!11038 = !DILocalVariable(name: "missing_keys", scope: !11017, file: !3, line: 5459, type: !177)
!11039 = !DILocalVariable(name: "mcmd", scope: !11040, file: !3, line: 5494, type: !8194)
!11040 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 5493, column: 37)
!11041 = distinct !DILexicalBlock(scope: !11042, file: !3, line: 5493, column: 5)
!11042 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5493, column: 5)
!11043 = !DILocalVariable(name: "margv", scope: !11040, file: !3, line: 5495, type: !8192)
!11044 = !DILocalVariable(name: "margc", scope: !11040, file: !3, line: 5496, type: !177)
!11045 = !DILocalVariable(name: "keyindex", scope: !11040, file: !3, line: 5496, type: !8211)
!11046 = !DILocalVariable(name: "numkeys", scope: !11040, file: !3, line: 5496, type: !177)
!11047 = !DILocalVariable(name: "j", scope: !11040, file: !3, line: 5496, type: !177)
!11048 = !DILocalVariable(name: "thiskey", scope: !11049, file: !3, line: 5504, type: !4435)
!11049 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 5503, column: 39)
!11050 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 5503, column: 9)
!11051 = distinct !DILexicalBlock(scope: !11040, file: !3, line: 5503, column: 9)
!11052 = !DILocalVariable(name: "thisslot", scope: !11049, file: !3, line: 5505, type: !177)
!11053 = !DILocation(line: 5453, column: 37, scope: !11017)
!11054 = !DILocation(line: 5453, column: 61, scope: !11017)
!11055 = !DILocation(line: 5453, column: 73, scope: !11017)
!11056 = !DILocation(line: 5453, column: 83, scope: !11017)
!11057 = !DILocation(line: 5453, column: 94, scope: !11017)
!11058 = !DILocation(line: 5453, column: 109, scope: !11017)
!11059 = !DILocation(line: 5454, column: 18, scope: !11017)
!11060 = !DILocation(line: 5455, column: 11, scope: !11017)
!11061 = !DILocation(line: 5456, column: 9, scope: !11017)
!11062 = !DILocation(line: 5457, column: 5, scope: !11017)
!11063 = !DILocation(line: 5458, column: 5, scope: !11017)
!11064 = !DILocation(line: 5459, column: 12, scope: !11017)
!11065 = !DILocation(line: 5459, column: 22, scope: !11017)
!11066 = !DILocation(line: 5459, column: 42, scope: !11017)
!11067 = !DILocation(line: 5459, column: 62, scope: !11017)
!11068 = !DILocation(line: 5462, column: 16, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5462, column: 9)
!11070 = !DILocation(line: 5462, column: 37, scope: !11069)
!11071 = !DILocation(line: 5462, column: 9, scope: !11017)
!11072 = !DILocation(line: 5463, column: 16, scope: !11069)
!11073 = !DILocation(line: 5463, column: 9, scope: !11069)
!11074 = !DILocation(line: 5466, column: 9, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5466, column: 9)
!11076 = !DILocation(line: 5466, column: 9, scope: !11017)
!11077 = !DILocation(line: 5466, column: 33, scope: !11075)
!11078 = !DILocation(line: 5466, column: 21, scope: !11075)
!11079 = !DILocation(line: 5474, column: 14, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5474, column: 9)
!11081 = !{!11082, !758, i64 8}
!11082 = !{!"redisCommand", !758, i64 0, !758, i64 8, !709, i64 16, !758, i64 24, !709, i64 32, !758, i64 40, !709, i64 48, !709, i64 52, !709, i64 56, !786, i64 64, !786, i64 72}
!11083 = !DILocation(line: 5474, column: 19, scope: !11080)
!11084 = !DILocation(line: 5474, column: 9, scope: !11017)
!11085 = !DILocation(line: 5477, column: 18, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 5477, column: 13)
!11087 = distinct !DILexicalBlock(scope: !11080, file: !3, line: 5474, column: 35)
!11088 = !DILocation(line: 5477, column: 24, scope: !11086)
!11089 = !DILocation(line: 5477, column: 13, scope: !11087)
!11090 = !DILocation(line: 5477, column: 48, scope: !11086)
!11091 = !DILocation(line: 5477, column: 41, scope: !11086)
!11092 = !DILocation(line: 5457, column: 17, scope: !11017)
!11093 = !DILocation(line: 5484, column: 13, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11080, file: !3, line: 5479, column: 12)
!11095 = !DILocation(line: 5484, column: 22, scope: !11094)
!11096 = !{!8566, !758, i64 0}
!11097 = !DILocation(line: 5485, column: 13, scope: !11094)
!11098 = !DILocation(line: 5485, column: 19, scope: !11094)
!11099 = !{!8566, !709, i64 8}
!11100 = !DILocation(line: 5486, column: 12, scope: !11094)
!11101 = !DILocation(line: 5486, column: 17, scope: !11094)
!11102 = !{!11103, !758, i64 0}
!11103 = !{!"multiCmd", !758, i64 0, !709, i64 8, !758, i64 16}
!11104 = !DILocation(line: 5487, column: 12, scope: !11094)
!11105 = !DILocation(line: 5487, column: 17, scope: !11094)
!11106 = !{!11103, !709, i64 8}
!11107 = !DILocation(line: 5488, column: 12, scope: !11094)
!11108 = !DILocation(line: 5488, column: 16, scope: !11094)
!11109 = !{!11103, !758, i64 16}
!11110 = !DILocation(line: 5459, column: 9, scope: !11017)
!11111 = !DILocation(line: 5493, column: 5, scope: !11042)
!11112 = !DILocation(line: 5478, column: 18, scope: !11087)
!11113 = !DILocation(line: 5493, column: 25, scope: !11041)
!11114 = !DILocation(line: 5493, column: 19, scope: !11041)
!11115 = !DILocation(line: 5496, column: 9, scope: !11040)
!11116 = !DILocation(line: 5498, column: 20, scope: !11040)
!11117 = !DILocation(line: 5498, column: 32, scope: !11040)
!11118 = !DILocation(line: 5494, column: 30, scope: !11040)
!11119 = !DILocation(line: 5499, column: 33, scope: !11040)
!11120 = !DILocation(line: 5496, column: 13, scope: !11040)
!11121 = !DILocation(line: 5500, column: 33, scope: !11040)
!11122 = !DILocation(line: 5495, column: 16, scope: !11040)
!11123 = !DILocation(line: 5496, column: 31, scope: !11040)
!11124 = !DILocation(line: 5502, column: 20, scope: !11040)
!11125 = !DILocation(line: 5496, column: 21, scope: !11040)
!11126 = !DILocation(line: 5496, column: 40, scope: !11040)
!11127 = !DILocation(line: 5503, column: 25, scope: !11050)
!11128 = !DILocation(line: 5503, column: 23, scope: !11050)
!11129 = !DILocation(line: 5503, column: 9, scope: !11051)
!11130 = !DILocation(line: 5504, column: 35, scope: !11049)
!11131 = !DILocation(line: 5504, column: 29, scope: !11049)
!11132 = !DILocation(line: 5504, column: 19, scope: !11049)
!11133 = !DILocation(line: 5505, column: 56, scope: !11049)
!11134 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !11135)
!11135 = distinct !DILocation(line: 5506, column: 40, scope: !11049)
!11136 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !11135)
!11137 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !11135)
!11138 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !11135)
!11139 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !11135)
!11140 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !11135)
!11141 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !11135)
!11142 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !11135)
!11143 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !11135)
!11144 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !11135)
!11145 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !11135)
!11146 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !11135)
!11147 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !11135)
!11148 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !11135)
!11149 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !11135)
!11150 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !11135)
!11151 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !11135)
!11152 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !11135)
!11153 = !DILocation(line: 0, scope: !1486, inlinedAt: !11135)
!11154 = !DILocation(line: 5506, column: 40, scope: !11049)
!11155 = !DILocation(line: 5505, column: 28, scope: !11049)
!11156 = !DILocation(line: 5505, column: 17, scope: !11049)
!11157 = !DILocation(line: 5508, column: 26, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11049, file: !3, line: 5508, column: 17)
!11159 = !DILocation(line: 5508, column: 17, scope: !11049)
!11160 = !DILocation(line: 5513, column: 28, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11158, file: !3, line: 5508, column: 35)
!11162 = !DILocation(line: 5513, column: 21, scope: !11161)
!11163 = !DILocation(line: 5519, column: 23, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 5519, column: 21)
!11165 = !DILocation(line: 5519, column: 21, scope: !11161)
!11166 = !DILocation(line: 5520, column: 21, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 5519, column: 32)
!11168 = !DILocation(line: 5521, column: 25, scope: !11167)
!11169 = !DILocation(line: 5522, column: 37, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 5521, column: 25)
!11171 = !DILocation(line: 5522, column: 25, scope: !11170)
!11172 = !DILocation(line: 5531, column: 26, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 5531, column: 21)
!11174 = !DILocation(line: 5531, column: 23, scope: !11173)
!11175 = !DILocation(line: 5531, column: 33, scope: !11173)
!11176 = !DILocation(line: 5532, column: 21, scope: !11173)
!11177 = !DILocation(line: 5532, column: 62, scope: !11173)
!11178 = !DILocation(line: 5531, column: 21, scope: !11161)
!11179 = !DILocation(line: 5535, column: 28, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11173, file: !3, line: 5535, column: 28)
!11181 = !DILocation(line: 5535, column: 71, scope: !11180)
!11182 = !DILocation(line: 5535, column: 28, scope: !11173)
!11183 = !DILocation(line: 5541, column: 22, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11185, file: !3, line: 5541, column: 21)
!11185 = distinct !DILexicalBlock(scope: !11158, file: !3, line: 5538, column: 20)
!11186 = !DILocation(line: 5541, column: 21, scope: !11185)
!11187 = !DILocation(line: 5542, column: 30, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11189, file: !3, line: 5542, column: 25)
!11189 = distinct !DILexicalBlock(scope: !11184, file: !3, line: 5541, column: 60)
!11190 = !DILocation(line: 5542, column: 25, scope: !11189)
!11191 = !DILocation(line: 5544, column: 25, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 5542, column: 43)
!11193 = !DILocation(line: 5545, column: 29, scope: !11192)
!11194 = !DILocation(line: 5546, column: 41, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 5545, column: 29)
!11196 = !DILocation(line: 5546, column: 29, scope: !11195)
!11197 = !DILocation(line: 0, scope: !11017)
!11198 = !DILocation(line: 0, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 5548, column: 28)
!11200 = !DILocation(line: 5557, column: 33, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11049, file: !3, line: 5557, column: 17)
!11202 = !DILocation(line: 5558, column: 39, scope: !11201)
!11203 = !DILocation(line: 5558, column: 17, scope: !11201)
!11204 = !DILocation(line: 5558, column: 54, scope: !11201)
!11205 = !DILocation(line: 5557, column: 17, scope: !11049)
!11206 = !DILocation(line: 5503, column: 35, scope: !11050)
!11207 = distinct !{!11207, !11129, !11208}
!11208 = !DILocation(line: 5562, column: 9, scope: !11051)
!11209 = !DILocation(line: 5564, column: 5, scope: !11041)
!11210 = !DILocation(line: 0, scope: !11161)
!11211 = !DILocation(line: 5563, column: 9, scope: !11040)
!11212 = !DILocation(line: 5493, column: 33, scope: !11041)
!11213 = distinct !{!11213, !11111, !11214}
!11214 = !DILocation(line: 5564, column: 5, scope: !11042)
!11215 = !DILocation(line: 5568, column: 11, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5568, column: 9)
!11217 = !DILocation(line: 5568, column: 9, scope: !11017)
!11218 = !DILocation(line: 5568, column: 27, scope: !11216)
!11219 = !DILocation(line: 5568, column: 20, scope: !11216)
!11220 = !DILocation(line: 5571, column: 16, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5571, column: 9)
!11222 = !DILocation(line: 5571, column: 25, scope: !11221)
!11223 = !DILocation(line: 5571, column: 31, scope: !11221)
!11224 = !DILocation(line: 5571, column: 9, scope: !11017)
!11225 = !DILocation(line: 5572, column: 13, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11221, file: !3, line: 5571, column: 46)
!11227 = !DILocation(line: 5572, column: 37, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11226, file: !3, line: 5572, column: 13)
!11229 = !DILocation(line: 5572, column: 25, scope: !11228)
!11230 = !DILocation(line: 5577, column: 9, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5577, column: 9)
!11232 = !DILocation(line: 5577, column: 9, scope: !11017)
!11233 = !DILocation(line: 5577, column: 29, scope: !11231)
!11234 = !DILocation(line: 5577, column: 19, scope: !11231)
!11235 = !DILocation(line: 5582, column: 10, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5582, column: 9)
!11237 = !DILocation(line: 5582, column: 28, scope: !11236)
!11238 = !DILocation(line: 5582, column: 25, scope: !11236)
!11239 = !DILocation(line: 5582, column: 52, scope: !11236)
!11240 = !DILocation(line: 5582, column: 57, scope: !11236)
!11241 = !DILocation(line: 5582, column: 9, scope: !11017)
!11242 = !DILocation(line: 5583, column: 16, scope: !11236)
!11243 = !DILocation(line: 5583, column: 9, scope: !11236)
!11244 = !DILocation(line: 5587, column: 27, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5587, column: 9)
!11246 = !DILocation(line: 5587, column: 24, scope: !11245)
!11247 = !DILocation(line: 5588, column: 13, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 5587, column: 41)
!11249 = !DILocation(line: 5588, column: 37, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11248, file: !3, line: 5588, column: 13)
!11251 = !DILocation(line: 5588, column: 25, scope: !11250)
!11252 = !DILocation(line: 5589, column: 16, scope: !11248)
!11253 = !DILocation(line: 5589, column: 9, scope: !11248)
!11254 = !DILocation(line: 0, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5596, column: 9)
!11256 = !DILocation(line: 5596, column: 24, scope: !11255)
!11257 = !DILocation(line: 5597, column: 19, scope: !11255)
!11258 = !DILocation(line: 5597, column: 35, scope: !11255)
!11259 = !DILocation(line: 5597, column: 43, scope: !11255)
!11260 = !{!11082, !709, i64 32}
!11261 = !DILocation(line: 5597, column: 49, scope: !11255)
!11262 = !DILocation(line: 5596, column: 9, scope: !11017)
!11263 = !DILocation(line: 5599, column: 13, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !3, line: 5599, column: 13)
!11265 = distinct !DILexicalBlock(scope: !11255, file: !3, line: 5598, column: 5)
!11266 = !DILocation(line: 5599, column: 27, scope: !11264)
!11267 = !DILocation(line: 5600, column: 17, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11264, file: !3, line: 5599, column: 44)
!11269 = !DILocation(line: 5600, column: 41, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11268, file: !3, line: 5600, column: 17)
!11271 = !DILocation(line: 5600, column: 29, scope: !11270)
!11272 = !DILocation(line: 5603, column: 20, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11264, file: !3, line: 5602, column: 16)
!11274 = !DILocation(line: 5603, column: 13, scope: !11273)
!11275 = !DILocation(line: 5610, column: 18, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5610, column: 9)
!11277 = !DILocation(line: 5610, column: 36, scope: !11276)
!11278 = !DILocation(line: 5611, column: 15, scope: !11276)
!11279 = !DILocation(line: 5611, column: 21, scope: !11276)
!11280 = !DILocation(line: 5611, column: 36, scope: !11276)
!11281 = !DILocation(line: 5611, column: 44, scope: !11276)
!11282 = !DILocation(line: 5611, column: 49, scope: !11276)
!11283 = !DILocation(line: 5612, column: 20, scope: !11276)
!11284 = !DILocation(line: 5611, column: 64, scope: !11276)
!11285 = !DILocation(line: 5613, column: 9, scope: !11276)
!11286 = !DILocation(line: 5613, column: 29, scope: !11276)
!11287 = !DILocation(line: 5614, column: 17, scope: !11276)
!11288 = !DILocation(line: 5614, column: 25, scope: !11276)
!11289 = !DILocation(line: 5610, column: 9, scope: !11017)
!11290 = !DILocation(line: 5621, column: 14, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 5621, column: 9)
!11292 = !DILocation(line: 5621, column: 11, scope: !11291)
!11293 = !DILocation(line: 5621, column: 21, scope: !11291)
!11294 = !DILocation(line: 5621, column: 48, scope: !11291)
!11295 = !DILocation(line: 5621, column: 36, scope: !11291)
!11296 = !DILocation(line: 0, scope: !11086)
!11297 = !DILocation(line: 5623, column: 1, scope: !11017)
!11298 = distinct !DISubprogram(name: "clusterRedirectClient", scope: !3, file: !3, line: 5632, type: !11299, isLocal: false, isDefinition: true, scopeLine: 5632, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11301)
!11299 = !DISubroutineType(types: !11300)
!11300 = !{null, !8166, !378, !177, !177}
!11301 = !{!11302, !11303, !11304, !11305}
!11302 = !DILocalVariable(name: "c", arg: 1, scope: !11298, file: !3, line: 5632, type: !8166)
!11303 = !DILocalVariable(name: "n", arg: 2, scope: !11298, file: !3, line: 5632, type: !378)
!11304 = !DILocalVariable(name: "hashslot", arg: 3, scope: !11298, file: !3, line: 5632, type: !177)
!11305 = !DILocalVariable(name: "error_code", arg: 4, scope: !11298, file: !3, line: 5632, type: !177)
!11306 = !DILocation(line: 5632, column: 36, scope: !11298)
!11307 = !DILocation(line: 5632, column: 52, scope: !11298)
!11308 = !DILocation(line: 5632, column: 59, scope: !11298)
!11309 = !DILocation(line: 5632, column: 73, scope: !11298)
!11310 = !DILocation(line: 5633, column: 9, scope: !11298)
!11311 = !DILocation(line: 5634, column: 23, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !3, line: 5633, column: 49)
!11313 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 5633, column: 9)
!11314 = !DILocation(line: 5634, column: 9, scope: !11312)
!11315 = !DILocation(line: 5635, column: 5, scope: !11312)
!11316 = !DILocation(line: 5639, column: 23, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 5635, column: 54)
!11318 = distinct !DILexicalBlock(scope: !11313, file: !3, line: 5635, column: 16)
!11319 = !DILocation(line: 5639, column: 9, scope: !11317)
!11320 = !DILocation(line: 5640, column: 5, scope: !11317)
!11321 = !DILocation(line: 5641, column: 23, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 5640, column: 56)
!11323 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 5640, column: 16)
!11324 = !DILocation(line: 5641, column: 9, scope: !11322)
!11325 = !DILocation(line: 5642, column: 5, scope: !11322)
!11326 = !DILocation(line: 5643, column: 23, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 5642, column: 58)
!11328 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 5642, column: 16)
!11329 = !DILocation(line: 5643, column: 9, scope: !11327)
!11330 = !DILocation(line: 5644, column: 5, scope: !11327)
!11331 = !DILocation(line: 5644, column: 50, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 5644, column: 16)
!11333 = !DILocation(line: 5645, column: 27, scope: !11332)
!11334 = !DILocation(line: 5647, column: 36, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 5646, column: 5)
!11336 = !DILocation(line: 5649, column: 13, scope: !11335)
!11337 = !DILocation(line: 5650, column: 22, scope: !11335)
!11338 = !DILocation(line: 5650, column: 31, scope: !11335)
!11339 = !DILocation(line: 5647, column: 23, scope: !11335)
!11340 = !DILocation(line: 5647, column: 9, scope: !11335)
!11341 = !DILocation(line: 5652, column: 9, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 5651, column: 12)
!11343 = !DILocation(line: 5654, column: 1, scope: !11298)
!11344 = distinct !DISubprogram(name: "clusterRedirectBlockedClientIfNeeded", scope: !3, file: !3, line: 5667, type: !11345, isLocal: false, isDefinition: true, scopeLine: 5667, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11347)
!11345 = !DISubroutineType(types: !11346)
!11346 = !{!177, !8166}
!11347 = !{!11348, !11349, !11352, !11353, !11356, !11357}
!11348 = !DILocalVariable(name: "c", arg: 1, scope: !11344, file: !3, line: 5667, type: !8166)
!11349 = !DILocalVariable(name: "de", scope: !11350, file: !3, line: 5673, type: !340)
!11350 = distinct !DILexicalBlock(scope: !11351, file: !3, line: 5672, column: 5)
!11351 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 5668, column: 9)
!11352 = !DILocalVariable(name: "di", scope: !11350, file: !3, line: 5674, type: !297)
!11353 = !DILocalVariable(name: "key", scope: !11354, file: !3, line: 5685, type: !4435)
!11354 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 5684, column: 42)
!11355 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 5684, column: 13)
!11356 = !DILocalVariable(name: "slot", scope: !11354, file: !3, line: 5686, type: !177)
!11357 = !DILocalVariable(name: "node", scope: !11354, file: !3, line: 5687, type: !378)
!11358 = !DILocation(line: 5667, column: 50, scope: !11344)
!11359 = !DILocation(line: 5668, column: 12, scope: !11351)
!11360 = !DILocation(line: 5668, column: 18, scope: !11351)
!11361 = !DILocation(line: 5668, column: 35, scope: !11351)
!11362 = !DILocation(line: 5669, column: 13, scope: !11351)
!11363 = !{!8565, !709, i64 384}
!11364 = !DILocation(line: 5669, column: 35, scope: !11351)
!11365 = !DILocation(line: 5677, column: 20, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 5677, column: 13)
!11367 = !DILocation(line: 5677, column: 29, scope: !11366)
!11368 = !DILocation(line: 5677, column: 35, scope: !11366)
!11369 = !DILocation(line: 5677, column: 13, scope: !11350)
!11370 = !DILocation(line: 5632, column: 36, scope: !11298, inlinedAt: !11371)
!11371 = distinct !DILocation(line: 5678, column: 13, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 5677, column: 52)
!11373 = !DILocation(line: 5632, column: 52, scope: !11298, inlinedAt: !11371)
!11374 = !DILocation(line: 5632, column: 59, scope: !11298, inlinedAt: !11371)
!11375 = !DILocation(line: 5632, column: 73, scope: !11298, inlinedAt: !11371)
!11376 = !DILocation(line: 5641, column: 23, scope: !11322, inlinedAt: !11371)
!11377 = !DILocation(line: 5641, column: 9, scope: !11322, inlinedAt: !11371)
!11378 = !DILocation(line: 5679, column: 13, scope: !11372)
!11379 = !DILocation(line: 5683, column: 38, scope: !11350)
!11380 = !{!8565, !758, i64 400}
!11381 = !DILocation(line: 5683, column: 14, scope: !11350)
!11382 = !DILocation(line: 5674, column: 23, scope: !11350)
!11383 = !DILocation(line: 5684, column: 19, scope: !11355)
!11384 = !DILocation(line: 5673, column: 20, scope: !11350)
!11385 = !DILocation(line: 5684, column: 33, scope: !11355)
!11386 = !DILocation(line: 5684, column: 13, scope: !11350)
!11387 = !DILocation(line: 5685, column: 25, scope: !11354)
!11388 = !DILocation(line: 5685, column: 19, scope: !11354)
!11389 = !DILocation(line: 5686, column: 48, scope: !11354)
!11390 = !DILocation(line: 87, column: 39, scope: !1473, inlinedAt: !11391)
!11391 = distinct !DILocation(line: 5686, column: 53, scope: !11354)
!11392 = !DILocation(line: 88, column: 27, scope: !1473, inlinedAt: !11391)
!11393 = !DILocation(line: 88, column: 19, scope: !1473, inlinedAt: !11391)
!11394 = !DILocation(line: 89, column: 5, scope: !1473, inlinedAt: !11391)
!11395 = !DILocation(line: 91, column: 20, scope: !1486, inlinedAt: !11391)
!11396 = !DILocation(line: 91, column: 13, scope: !1486, inlinedAt: !11391)
!11397 = !DILocation(line: 93, column: 20, scope: !1486, inlinedAt: !11391)
!11398 = !DILocation(line: 93, column: 34, scope: !1486, inlinedAt: !11391)
!11399 = !DILocation(line: 93, column: 13, scope: !1486, inlinedAt: !11391)
!11400 = !DILocation(line: 95, column: 20, scope: !1486, inlinedAt: !11391)
!11401 = !DILocation(line: 95, column: 35, scope: !1486, inlinedAt: !11391)
!11402 = !DILocation(line: 95, column: 13, scope: !1486, inlinedAt: !11391)
!11403 = !DILocation(line: 97, column: 20, scope: !1486, inlinedAt: !11391)
!11404 = !DILocation(line: 97, column: 35, scope: !1486, inlinedAt: !11391)
!11405 = !DILocation(line: 97, column: 13, scope: !1486, inlinedAt: !11391)
!11406 = !DILocation(line: 99, column: 20, scope: !1486, inlinedAt: !11391)
!11407 = !DILocation(line: 99, column: 35, scope: !1486, inlinedAt: !11391)
!11408 = !DILocation(line: 99, column: 13, scope: !1486, inlinedAt: !11391)
!11409 = !DILocation(line: 0, scope: !1486, inlinedAt: !11391)
!11410 = !DILocation(line: 5686, column: 53, scope: !11354)
!11411 = !DILocation(line: 5686, column: 24, scope: !11354)
!11412 = !DILocation(line: 5686, column: 17, scope: !11354)
!11413 = !DILocation(line: 5687, column: 40, scope: !11354)
!11414 = !DILocation(line: 5687, column: 33, scope: !11354)
!11415 = !DILocation(line: 5687, column: 26, scope: !11354)
!11416 = !DILocation(line: 5692, column: 25, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 5692, column: 17)
!11418 = !DILocation(line: 5692, column: 22, scope: !11417)
!11419 = !DILocation(line: 5692, column: 32, scope: !11417)
!11420 = !DILocation(line: 5693, column: 17, scope: !11417)
!11421 = !DILocation(line: 5693, column: 60, scope: !11417)
!11422 = !DILocation(line: 5692, column: 17, scope: !11354)
!11423 = !DILocation(line: 5695, column: 26, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 5695, column: 21)
!11425 = distinct !DILexicalBlock(scope: !11417, file: !3, line: 5694, column: 13)
!11426 = !DILocation(line: 5632, column: 36, scope: !11298, inlinedAt: !11427)
!11427 = distinct !DILocation(line: 5696, column: 21, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 5695, column: 35)
!11429 = !DILocation(line: 5632, column: 36, scope: !11298, inlinedAt: !11430)
!11430 = distinct !DILocation(line: 5699, column: 21, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 5698, column: 24)
!11432 = !DILocation(line: 5695, column: 21, scope: !11425)
!11433 = !DILocation(line: 5632, column: 52, scope: !11298, inlinedAt: !11427)
!11434 = !DILocation(line: 5632, column: 59, scope: !11298, inlinedAt: !11427)
!11435 = !DILocation(line: 5632, column: 73, scope: !11298, inlinedAt: !11427)
!11436 = !DILocation(line: 5643, column: 23, scope: !11327, inlinedAt: !11427)
!11437 = !DILocation(line: 5643, column: 9, scope: !11327, inlinedAt: !11427)
!11438 = !DILocation(line: 5698, column: 17, scope: !11428)
!11439 = !DILocation(line: 5632, column: 52, scope: !11298, inlinedAt: !11430)
!11440 = !DILocation(line: 5632, column: 59, scope: !11298, inlinedAt: !11430)
!11441 = !DILocation(line: 5632, column: 73, scope: !11298, inlinedAt: !11430)
!11442 = !DILocation(line: 5647, column: 36, scope: !11335, inlinedAt: !11430)
!11443 = !DILocation(line: 5650, column: 22, scope: !11335, inlinedAt: !11430)
!11444 = !DILocation(line: 5650, column: 31, scope: !11335, inlinedAt: !11430)
!11445 = !DILocation(line: 5647, column: 23, scope: !11335, inlinedAt: !11430)
!11446 = !DILocation(line: 5647, column: 9, scope: !11335, inlinedAt: !11430)
!11447 = !DILocation(line: 5702, column: 17, scope: !11425)
!11448 = !DILocation(line: 5706, column: 9, scope: !11350)
!11449 = !DILocation(line: 0, scope: !11372)
!11450 = !DILocation(line: 5709, column: 1, scope: !11344)
