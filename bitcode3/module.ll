; ModuleID = '/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/module.c'
source_filename = "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/module.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.redisServer = type { i32, i8*, i8*, i8**, i32, i32, i32, %struct.redisDb*, %struct.dict*, %struct.dict*, %struct.aeEventLoop*, i32, i32, i32, i32, i8*, i8*, i32, i32, [41 x i8], i32, i64, i32, %struct.dict*, %struct.dict*, %struct.list*, [2 x i32], i32, i32, [16 x i8*], i32, i8*, i32, [16 x i32], i32, i32, [16 x i32], i32, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.client*, %struct.rax*, i32, i64, [256 x i8], %struct.dict*, i64, i32, i32, i64, i64, i64, i64, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, i64, i64, i64, i64, double, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, i64, i64, i64, i64, %struct.list*, i64, i64, i64, %struct.malloc_stats, i64, i64, i64, i64, [3 x %struct.anon], i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, [3 x %struct.clientBufferLimitsConfig], i32, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, %struct.list*, i8*, i32, i32, i64, i64, i64, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, i32, %struct.saveparam*, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, [2 x i32], %struct.anon.0, %struct.redisOpArray, i8*, i32, i8*, i32, [41 x i8], [41 x i8], i64, i64, i32, i32, i8*, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.client*, %struct.client*, i32, i32, i64, i64, i64, i32, i32, i8*, i64, i32, i32, i32, i64, i32, i32, i32, i8*, [41 x i8], i64, i32, %struct.dict*, %struct.list*, i32, %struct.list*, i32, i32, i64, i32, i32, i32, i32, i64, i32, [6 x i32], %struct.list*, %struct.list*, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i32, i64, %struct.dict*, %struct.list*, i32, i32, i64, i8*, %struct.clusterState*, i32, i32, i32, i32, i8*, i32, i32, i32, %struct.lua_State*, %struct.client*, %struct.client*, %struct.dict*, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, %struct.dict*, i8*, i8*, i32, i32, i32, i64, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_* }
%struct.redisDb = type { %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, i32, i64, %struct.list* }
%struct.aeEventLoop = type { i32, i32, i64, i64, %struct.aeFileEvent*, %struct.aeFiredEvent*, %struct.aeTimeEvent*, i32, i8*, void (%struct.aeEventLoop*)*, void (%struct.aeEventLoop*)* }
%struct.aeFileEvent = type { i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8* }
%struct.aeFiredEvent = type { i32, i32 }
%struct.aeTimeEvent = type { i64, i64, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, void (%struct.aeEventLoop*, i8*)*, i8*, %struct.aeTimeEvent*, %struct.aeTimeEvent* }
%struct.rax = type { %struct.raxNode*, i64, i64 }
%struct.raxNode = type { i32, [0 x i8] }
%struct.redisCommand = type { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }
%struct.redisObject = type { i32, i32, i8* }
%struct.malloc_stats = type { i64, i64, i64, i64, i64 }
%struct.anon = type { i64, i64, [16 x i64], i32 }
%struct.clientBufferLimitsConfig = type { i64, i64, i64 }
%struct.saveparam = type { i64, i32 }
%struct.anon.0 = type { i32, i64, i64 }
%struct.redisOpArray = type { %struct.redisOp*, i32 }
%struct.redisOp = type { %struct.redisObject**, i32, i32, i32, %struct.redisCommand* }
%struct.list = type { %struct.listNode*, %struct.listNode*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i64 }
%struct.listNode = type { %struct.listNode*, %struct.listNode*, i8* }
%struct.clusterState = type { %struct.clusterNode*, i64, i32, i32, %struct.dict*, %struct.dict*, [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x i64], %struct.rax*, i64, i32, i32, i32, i64, i32, i64, %struct.clusterNode*, i64, i32, i64, i32, [10 x i64], [10 x i64], i64 }
%struct.clusterNode = type { i64, [40 x i8], i32, i64, [2048 x i8], i32, i32, %struct.clusterNode**, %struct.clusterNode*, i64, i64, i64, i64, i64, i64, i64, [46 x i8], i32, i32, %struct.clusterLink*, %struct.list* }
%struct.clusterLink = type { i64, i32, i8*, i8*, %struct.clusterNode* }
%struct.lua_State = type opaque
%struct.client = type { i64, i32, %struct.redisDb*, %struct.redisObject*, i8*, i64, i8*, i64, i32, %struct.redisObject**, %struct.redisCommand*, %struct.redisCommand*, i32, i32, i64, %struct.list*, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i8*, i64, i64, i64, i64, i64, [41 x i8], i32, [46 x i8], i32, %struct.multiState, i32, %struct.blockingState, i64, %struct.list*, %struct.dict*, %struct.list*, i8*, %struct.listNode*, i32, [16384 x i8] }
%struct.multiState = type { %struct.multiCmd*, i32, i32, i32, i64 }
%struct.multiCmd = type { %struct.redisObject**, i32, %struct.redisCommand* }
%struct.blockingState = type { i64, %struct.dict*, %struct.redisObject*, i64, %struct.redisObject*, %struct.redisObject*, i64, i64, i32, i32, i64, i8* }
%struct.dict = type { %struct.dictType*, i8*, [2 x %struct.dictht], i64, i64 }
%struct.dictType = type { i64 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.dictht = type { %struct.dictEntry**, i64, i64, i64 }
%struct.dictEntry = type { i8*, %union.anon, %struct.dictEntry* }
%union.anon = type { i8* }
%struct.pthread_mutex_t_ = type opaque
%struct.sharedObjectsStruct = type { %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, [10 x %struct.redisObject*], [10000 x %struct.redisObject*], [32 x %struct.redisObject*], [32 x %struct.redisObject*], i8*, i8* }
%struct.anon.10 = type { i64, %struct.RedisModuleType* }
%struct.RedisModuleType = type { i64, %struct.RedisModule*, i8* (%struct.RedisModuleIO*, i32)*, void (%struct.RedisModuleIO*, i8*)*, void (%struct.RedisModuleIO*, %struct.redisObject*, i8*)*, i64 (i8*)*, void (%struct.RedisModuleDigest*, i8*)*, void (i8*)*, i32 (%struct.RedisModuleIO*, i32, i32)*, void (%struct.RedisModuleIO*, i32)*, i32, [10 x i8] }
%struct.RedisModule = type { i8*, i8*, i32, i32, %struct.list*, %struct.list*, %struct.list*, %struct.list*, i32 }
%struct.RedisModuleIO = type { i64, %struct._rio*, %struct.RedisModuleType*, i32, i32, %struct.RedisModuleCtx*, %struct.redisObject* }
%struct._rio = type { i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*)*, i32 (%struct._rio*)*, void (%struct._rio*, i8*, i64)*, i64, i64, i64, %union.anon.2 }
%union.anon.2 = type { %struct.anon.6 }
%struct.anon.6 = type { i32*, i32*, i32, i64, i8* }
%struct.RedisModuleCtx = type { i8*, %struct.RedisModule*, %struct.client*, %struct.RedisModuleBlockedClient*, %struct.AutoMemEntry*, i32, i32, i32, i8**, i32, i8*, i32*, i32, %struct.RedisModulePoolAllocBlock* }
%struct.RedisModuleBlockedClient = type { %struct.client*, %struct.RedisModule*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*, void (%struct.RedisModuleCtx*, i8*)*, i8*, %struct.client*, i32 }
%struct.AutoMemEntry = type { i8*, i32 }
%struct.RedisModulePoolAllocBlock = type { i32, i32, %struct.RedisModulePoolAllocBlock*, [0 x i8] }
%struct.RedisModuleDigest = type { [20 x i8], [20 x i8] }
%struct.moduleClusterReceiver = type { i64, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)*, %struct.RedisModule*, %struct.moduleClusterReceiver* }
%struct.RedisModuleKey = type { %struct.RedisModuleCtx*, %struct.redisDb*, %struct.redisObject*, %struct.redisObject*, i8*, i32, i32, %struct.zrangespec, %struct.zlexrangespec, i32, i32, i8*, i32 }
%struct.zrangespec = type { double, double, i32, i32 }
%struct.zlexrangespec = type { i8*, i8*, i32, i32 }
%struct.quicklist = type { %struct.quicklistNode*, %struct.quicklistNode*, i64, i64, i32 }
%struct.quicklistNode = type { %struct.quicklistNode*, %struct.quicklistNode*, i8*, i32, i32 }
%struct.RedisModuleCallReply = type { %struct.RedisModuleCtx*, i32, i32, i64, i8*, i64, %union.anon.1 }
%union.anon.1 = type { i8* }
%struct.RedisModuleCommandProxy = type { %struct.RedisModule*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, %struct.redisCommand* }
%struct.RedisModuleDict = type { %struct.rax* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.zset = type { %struct.dict*, %struct.zskiplist* }
%struct.zskiplist = type { %struct.zskiplistNode*, %struct.zskiplistNode*, i64, i32 }
%struct.zskiplistNode = type { i8*, double, %struct.zskiplistNode*, [0 x %struct.zskiplistLevel] }
%struct.zskiplistLevel = type { %struct.zskiplistNode*, i64 }
%struct.clientReplyBlock = type { i64, i64, [0 x i8] }
%struct.listIter = type { %struct.listNode*, i32 }
%struct.RedisModuleCommandFilterCtx = type { %struct.redisObject**, i32 }
%struct.RedisModuleCommandFilter = type { %struct.RedisModule*, void (%struct.RedisModuleCommandFilterCtx*)*, i32 }
%struct.dictIterator = type { %struct.dict*, i64, i32, i32, %struct.dictEntry*, %struct.dictEntry*, i64 }
%struct.moduleValue = type { %struct.RedisModuleType*, i8* }
%struct.RedisModuleKeyspaceSubscriber = type { %struct.RedisModule*, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)*, i32, i32 }
%struct.raxIterator = type { i32, %struct.rax*, i8*, i8*, i64, i64, [128 x i8], %struct.raxNode*, %struct.raxStack, i32 (%struct.raxNode**)* }
%struct.raxStack = type { i8**, i64, i64, [32 x i8*], i32 }
%struct.RedisModuleTimer = type { %struct.RedisModule*, void (%struct.RedisModuleCtx*, i8*)*, i8*, i32 }
%struct.RedisModuleDictIter = type { %struct.RedisModuleDict*, %struct.raxIterator }
%struct.RedisModuleSharedAPI = type { i8*, %struct.RedisModule* }
%struct.moduleLoadQueueEntry = type { i8*, i32, %struct.redisObject** }

@server = external dso_local global %struct.redisServer, align 8
@.str = private unnamed_addr constant [166 x i8] c"API misuse detected in module %s: RedisModule_ReplyWithArray(REDISMODULE_POSTPONED_ARRAY_LEN) not matched by the same number of RedisModule_SetReplyArrayLen() calls.\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"EXEC\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"admin\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"deny-oom\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"deny-script\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"allow-loading\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"pubsub\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"allow-stale\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"no-monitor\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"getkeys-api\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"no-cluster\00", align 1
@modules = internal unnamed_addr global %struct.dict* null, align 8, !dbg !0
@.str.16 = private unnamed_addr constant [41 x i8] c"(NULL string reply referenced in module)\00", align 1
@.str.17 = private unnamed_addr constant [150 x i8] c"Module attempted to use an in-place string modify operation with a string referenced multiple times. Please check the code for API usage correctness.\00", align 1
@.str.18 = private unnamed_addr constant [43 x i8] c"wrong number of arguments for '%s' command\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.22 = private unnamed_addr constant [162 x i8] c"API misuse detected in module %s: RedisModule_ReplySetArrayLength() called without previous RedisModule_ReplyWithArray(ctx,REDISMODULE_POSTPONED_ARRAY_LEN) call.\00", align 1
@shared = external dso_local local_unnamed_addr global %struct.sharedObjectsStruct, align 8
@.str.23 = private unnamed_addr constant [19 x i8] c"<dma-empty-string>\00", align 1
@.str.24 = private unnamed_addr constant [74 x i8] c"/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/module.c\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"Unsupported zset encoding\00", align 1
@.str.26 = private unnamed_addr constant [65 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\00", align 1
@ModuleTypeNameCharSet = dso_local local_unnamed_addr global i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.26, i64 0, i64 0), align 8, !dbg !732
@moduleTypeLookupModuleByID.cache = internal unnamed_addr global [3 x %struct.anon.10] zeroinitializer, align 16, !dbg !734
@.str.27 = private unnamed_addr constant [134 x i8] c"Error loading data from RDB (short read or EOF). Read performed by module '%s' about type '%s' after reading '%llu' bytes of a value.\00", align 1
@.str.28 = private unnamed_addr constant [79 x i8] c"Fatal: AOF method for module data type '%s' tried to emit unknown command '%s'\00", align 1
@.str.29 = private unnamed_addr constant [114 x i8] c"Fatal: AOF method for module data type '%s' tried to call RedisModule_EmitAOF() with wrong format specifiers '%s'\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"notice\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"<%s> \00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.36 = private unnamed_addr constant [47 x i8] c"Blocking module command called from Lua script\00", align 1
@.str.37 = private unnamed_addr constant [48 x i8] c"Blocking module command called from transaction\00", align 1
@moduleUnblockedClientsMutex = internal global %struct.pthread_mutex_t_* inttoptr (i64 -1 to %struct.pthread_mutex_t_*), align 8, !dbg !824
@moduleUnblockedClients = internal unnamed_addr global %struct.list* null, align 8, !dbg !776
@.str.38 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@moduleGIL = internal global %struct.pthread_mutex_t_* inttoptr (i64 -1 to %struct.pthread_mutex_t_*), align 8, !dbg !830
@moduleKeyspaceSubscribers = internal unnamed_addr global %struct.list* null, align 8, !dbg !778
@moduleFreeContextReusedClient = internal unnamed_addr global %struct.client* null, align 8, !dbg !780
@clusterReceivers = internal unnamed_addr global [255 x %struct.moduleClusterReceiver*] zeroinitializer, align 16, !dbg !784
@aeTimer = dso_local local_unnamed_addr global i64 -1, align 8, !dbg !772
@Timers = internal unnamed_addr global %struct.rax* null, align 8, !dbg !804
@.str.39 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@raxNotFound = external dso_local local_unnamed_addr global i8*, align 8
@moduleCommandFilters = internal unnamed_addr global %struct.list* null, align 8, !dbg !782
@moduleAPIDictType = dso_local global %struct.dictType { i64 (i8*)* @dictCStringKeyHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictCStringKeyCompare, void (i8*, i8*)* null, void (i8*, i8*)* null }, align 8, !dbg !774
@modulesDictType = external dso_local global %struct.dictType, align 8
@.str.40 = private unnamed_addr constant [55 x i8] c"Can't create the pipe for module blocking commands: %s\00", align 1
@.str.41 = private unnamed_addr constant [43 x i8] c"Can't load module from %s: server aborting\00", align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"Module %s failed to load: %s\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"RedisModule_OnLoad\00", align 1
@.str.44 = private unnamed_addr constant [74 x i8] c"Module %s does not export RedisModule_OnLoad() symbol. Module not loaded.\00", align 1
@.str.45 = private unnamed_addr constant [51 x i8] c"Module %s initialization failed. Module not loaded\00", align 1
@.str.46 = private unnamed_addr constant [27 x i8] c"Module '%s' loaded from %s\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.48 = private unnamed_addr constant [45 x i8] c"Error when trying to close the %s module: %s\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"Module %s unloaded\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.51 = private unnamed_addr constant [41 x i8] c"LIST -- Return a list of loaded modules.\00", align 1
@.str.52 = private unnamed_addr constant [60 x i8] c"LOAD <path> [arg ...] -- Load a module library from <path>.\00", align 1
@.str.53 = private unnamed_addr constant [34 x i8] c"UNLOAD <name> -- Unload a module.\00", align 1
@moduleCommand.help = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i32 0, i32 0), i8* null], align 16
@.str.54 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.55 = private unnamed_addr constant [59 x i8] c"Error loading the extension. Please check the server logs.\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"unload\00", align 1
@.str.57 = private unnamed_addr constant [30 x i8] c"no such module with that name\00", align 1
@.str.58 = private unnamed_addr constant [68 x i8] c"the module exports one or more module-side data types, can't unload\00", align 1
@.str.59 = private unnamed_addr constant [86 x i8] c"the module exports APIs used by other modules. Please unload them first and try again\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"operation not possible.\00", align 1
@.str.61 = private unnamed_addr constant [27 x i8] c"Error unloading module: %s\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"ver\00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"RedisModule_Alloc\00", align 1
@.str.66 = private unnamed_addr constant [19 x i8] c"RedisModule_Calloc\00", align 1
@.str.67 = private unnamed_addr constant [20 x i8] c"RedisModule_Realloc\00", align 1
@.str.68 = private unnamed_addr constant [17 x i8] c"RedisModule_Free\00", align 1
@.str.69 = private unnamed_addr constant [19 x i8] c"RedisModule_Strdup\00", align 1
@.str.70 = private unnamed_addr constant [26 x i8] c"RedisModule_CreateCommand\00", align 1
@.str.71 = private unnamed_addr constant [29 x i8] c"RedisModule_SetModuleAttribs\00", align 1
@.str.72 = private unnamed_addr constant [29 x i8] c"RedisModule_IsModuleNameBusy\00", align 1
@.str.73 = private unnamed_addr constant [23 x i8] c"RedisModule_WrongArity\00", align 1
@.str.74 = private unnamed_addr constant [30 x i8] c"RedisModule_ReplyWithLongLong\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"RedisModule_ReplyWithError\00", align 1
@.str.76 = private unnamed_addr constant [34 x i8] c"RedisModule_ReplyWithSimpleString\00", align 1
@.str.77 = private unnamed_addr constant [27 x i8] c"RedisModule_ReplyWithArray\00", align 1
@.str.78 = private unnamed_addr constant [32 x i8] c"RedisModule_ReplySetArrayLength\00", align 1
@.str.79 = private unnamed_addr constant [28 x i8] c"RedisModule_ReplyWithString\00", align 1
@.str.80 = private unnamed_addr constant [34 x i8] c"RedisModule_ReplyWithStringBuffer\00", align 1
@.str.81 = private unnamed_addr constant [29 x i8] c"RedisModule_ReplyWithCString\00", align 1
@.str.82 = private unnamed_addr constant [26 x i8] c"RedisModule_ReplyWithNull\00", align 1
@.str.83 = private unnamed_addr constant [31 x i8] c"RedisModule_ReplyWithCallReply\00", align 1
@.str.84 = private unnamed_addr constant [28 x i8] c"RedisModule_ReplyWithDouble\00", align 1
@.str.85 = private unnamed_addr constant [26 x i8] c"RedisModule_GetSelectedDb\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"RedisModule_SelectDb\00", align 1
@.str.87 = private unnamed_addr constant [20 x i8] c"RedisModule_OpenKey\00", align 1
@.str.88 = private unnamed_addr constant [21 x i8] c"RedisModule_CloseKey\00", align 1
@.str.89 = private unnamed_addr constant [20 x i8] c"RedisModule_KeyType\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"RedisModule_ValueLength\00", align 1
@.str.91 = private unnamed_addr constant [21 x i8] c"RedisModule_ListPush\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"RedisModule_ListPop\00", align 1
@.str.93 = private unnamed_addr constant [29 x i8] c"RedisModule_StringToLongLong\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"RedisModule_StringToDouble\00", align 1
@.str.95 = private unnamed_addr constant [17 x i8] c"RedisModule_Call\00", align 1
@.str.96 = private unnamed_addr constant [27 x i8] c"RedisModule_CallReplyProto\00", align 1
@.str.97 = private unnamed_addr constant [26 x i8] c"RedisModule_FreeCallReply\00", align 1
@.str.98 = private unnamed_addr constant [29 x i8] c"RedisModule_CallReplyInteger\00", align 1
@.str.99 = private unnamed_addr constant [26 x i8] c"RedisModule_CallReplyType\00", align 1
@.str.100 = private unnamed_addr constant [28 x i8] c"RedisModule_CallReplyLength\00", align 1
@.str.101 = private unnamed_addr constant [34 x i8] c"RedisModule_CallReplyArrayElement\00", align 1
@.str.102 = private unnamed_addr constant [31 x i8] c"RedisModule_CallReplyStringPtr\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"RedisModule_CreateStringFromCallReply\00", align 1
@.str.104 = private unnamed_addr constant [25 x i8] c"RedisModule_CreateString\00", align 1
@.str.105 = private unnamed_addr constant [37 x i8] c"RedisModule_CreateStringFromLongLong\00", align 1
@.str.106 = private unnamed_addr constant [35 x i8] c"RedisModule_CreateStringFromString\00", align 1
@.str.107 = private unnamed_addr constant [31 x i8] c"RedisModule_CreateStringPrintf\00", align 1
@.str.108 = private unnamed_addr constant [23 x i8] c"RedisModule_FreeString\00", align 1
@.str.109 = private unnamed_addr constant [25 x i8] c"RedisModule_StringPtrLen\00", align 1
@.str.110 = private unnamed_addr constant [23 x i8] c"RedisModule_AutoMemory\00", align 1
@.str.111 = private unnamed_addr constant [22 x i8] c"RedisModule_Replicate\00", align 1
@.str.112 = private unnamed_addr constant [30 x i8] c"RedisModule_ReplicateVerbatim\00", align 1
@.str.113 = private unnamed_addr constant [22 x i8] c"RedisModule_DeleteKey\00", align 1
@.str.114 = private unnamed_addr constant [22 x i8] c"RedisModule_UnlinkKey\00", align 1
@.str.115 = private unnamed_addr constant [22 x i8] c"RedisModule_StringSet\00", align 1
@.str.116 = private unnamed_addr constant [22 x i8] c"RedisModule_StringDMA\00", align 1
@.str.117 = private unnamed_addr constant [27 x i8] c"RedisModule_StringTruncate\00", align 1
@.str.118 = private unnamed_addr constant [22 x i8] c"RedisModule_SetExpire\00", align 1
@.str.119 = private unnamed_addr constant [22 x i8] c"RedisModule_GetExpire\00", align 1
@.str.120 = private unnamed_addr constant [20 x i8] c"RedisModule_ZsetAdd\00", align 1
@.str.121 = private unnamed_addr constant [23 x i8] c"RedisModule_ZsetIncrby\00", align 1
@.str.122 = private unnamed_addr constant [22 x i8] c"RedisModule_ZsetScore\00", align 1
@.str.123 = private unnamed_addr constant [20 x i8] c"RedisModule_ZsetRem\00", align 1
@.str.124 = private unnamed_addr constant [26 x i8] c"RedisModule_ZsetRangeStop\00", align 1
@.str.125 = private unnamed_addr constant [34 x i8] c"RedisModule_ZsetFirstInScoreRange\00", align 1
@.str.126 = private unnamed_addr constant [33 x i8] c"RedisModule_ZsetLastInScoreRange\00", align 1
@.str.127 = private unnamed_addr constant [32 x i8] c"RedisModule_ZsetFirstInLexRange\00", align 1
@.str.128 = private unnamed_addr constant [31 x i8] c"RedisModule_ZsetLastInLexRange\00", align 1
@.str.129 = private unnamed_addr constant [36 x i8] c"RedisModule_ZsetRangeCurrentElement\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"RedisModule_ZsetRangeNext\00", align 1
@.str.131 = private unnamed_addr constant [26 x i8] c"RedisModule_ZsetRangePrev\00", align 1
@.str.132 = private unnamed_addr constant [32 x i8] c"RedisModule_ZsetRangeEndReached\00", align 1
@.str.133 = private unnamed_addr constant [20 x i8] c"RedisModule_HashSet\00", align 1
@.str.134 = private unnamed_addr constant [20 x i8] c"RedisModule_HashGet\00", align 1
@.str.135 = private unnamed_addr constant [34 x i8] c"RedisModule_IsKeysPositionRequest\00", align 1
@.str.136 = private unnamed_addr constant [21 x i8] c"RedisModule_KeyAtPos\00", align 1
@.str.137 = private unnamed_addr constant [24 x i8] c"RedisModule_GetClientId\00", align 1
@.str.138 = private unnamed_addr constant [28 x i8] c"RedisModule_GetContextFlags\00", align 1
@.str.139 = private unnamed_addr constant [22 x i8] c"RedisModule_PoolAlloc\00", align 1
@.str.140 = private unnamed_addr constant [27 x i8] c"RedisModule_CreateDataType\00", align 1
@.str.141 = private unnamed_addr constant [31 x i8] c"RedisModule_ModuleTypeSetValue\00", align 1
@.str.142 = private unnamed_addr constant [30 x i8] c"RedisModule_ModuleTypeGetType\00", align 1
@.str.143 = private unnamed_addr constant [31 x i8] c"RedisModule_ModuleTypeGetValue\00", align 1
@.str.144 = private unnamed_addr constant [25 x i8] c"RedisModule_SaveUnsigned\00", align 1
@.str.145 = private unnamed_addr constant [25 x i8] c"RedisModule_LoadUnsigned\00", align 1
@.str.146 = private unnamed_addr constant [23 x i8] c"RedisModule_SaveSigned\00", align 1
@.str.147 = private unnamed_addr constant [23 x i8] c"RedisModule_LoadSigned\00", align 1
@.str.148 = private unnamed_addr constant [23 x i8] c"RedisModule_SaveString\00", align 1
@.str.149 = private unnamed_addr constant [29 x i8] c"RedisModule_SaveStringBuffer\00", align 1
@.str.150 = private unnamed_addr constant [23 x i8] c"RedisModule_LoadString\00", align 1
@.str.151 = private unnamed_addr constant [29 x i8] c"RedisModule_LoadStringBuffer\00", align 1
@.str.152 = private unnamed_addr constant [23 x i8] c"RedisModule_SaveDouble\00", align 1
@.str.153 = private unnamed_addr constant [23 x i8] c"RedisModule_LoadDouble\00", align 1
@.str.154 = private unnamed_addr constant [22 x i8] c"RedisModule_SaveFloat\00", align 1
@.str.155 = private unnamed_addr constant [22 x i8] c"RedisModule_LoadFloat\00", align 1
@.str.156 = private unnamed_addr constant [20 x i8] c"RedisModule_EmitAOF\00", align 1
@.str.157 = private unnamed_addr constant [16 x i8] c"RedisModule_Log\00", align 1
@.str.158 = private unnamed_addr constant [23 x i8] c"RedisModule_LogIOError\00", align 1
@.str.159 = private unnamed_addr constant [31 x i8] c"RedisModule_StringAppendBuffer\00", align 1
@.str.160 = private unnamed_addr constant [25 x i8] c"RedisModule_RetainString\00", align 1
@.str.161 = private unnamed_addr constant [26 x i8] c"RedisModule_StringCompare\00", align 1
@.str.162 = private unnamed_addr constant [29 x i8] c"RedisModule_GetContextFromIO\00", align 1
@.str.163 = private unnamed_addr constant [29 x i8] c"RedisModule_GetKeyNameFromIO\00", align 1
@.str.164 = private unnamed_addr constant [24 x i8] c"RedisModule_BlockClient\00", align 1
@.str.165 = private unnamed_addr constant [26 x i8] c"RedisModule_UnblockClient\00", align 1
@.str.166 = private unnamed_addr constant [34 x i8] c"RedisModule_IsBlockedReplyRequest\00", align 1
@.str.167 = private unnamed_addr constant [36 x i8] c"RedisModule_IsBlockedTimeoutRequest\00", align 1
@.str.168 = private unnamed_addr constant [40 x i8] c"RedisModule_GetBlockedClientPrivateData\00", align 1
@.str.169 = private unnamed_addr constant [23 x i8] c"RedisModule_AbortBlock\00", align 1
@.str.170 = private unnamed_addr constant [25 x i8] c"RedisModule_Milliseconds\00", align 1
@.str.171 = private unnamed_addr constant [33 x i8] c"RedisModule_GetThreadSafeContext\00", align 1
@.str.172 = private unnamed_addr constant [34 x i8] c"RedisModule_FreeThreadSafeContext\00", align 1
@.str.173 = private unnamed_addr constant [34 x i8] c"RedisModule_ThreadSafeContextLock\00", align 1
@.str.174 = private unnamed_addr constant [36 x i8] c"RedisModule_ThreadSafeContextUnlock\00", align 1
@.str.175 = private unnamed_addr constant [34 x i8] c"RedisModule_DigestAddStringBuffer\00", align 1
@.str.176 = private unnamed_addr constant [30 x i8] c"RedisModule_DigestAddLongLong\00", align 1
@.str.177 = private unnamed_addr constant [30 x i8] c"RedisModule_DigestEndSequence\00", align 1
@.str.178 = private unnamed_addr constant [38 x i8] c"RedisModule_SubscribeToKeyspaceEvents\00", align 1
@.str.179 = private unnamed_addr constant [43 x i8] c"RedisModule_RegisterClusterMessageReceiver\00", align 1
@.str.180 = private unnamed_addr constant [31 x i8] c"RedisModule_SendClusterMessage\00", align 1
@.str.181 = private unnamed_addr constant [31 x i8] c"RedisModule_GetClusterNodeInfo\00", align 1
@.str.182 = private unnamed_addr constant [32 x i8] c"RedisModule_GetClusterNodesList\00", align 1
@.str.183 = private unnamed_addr constant [33 x i8] c"RedisModule_FreeClusterNodesList\00", align 1
@.str.184 = private unnamed_addr constant [24 x i8] c"RedisModule_CreateTimer\00", align 1
@.str.185 = private unnamed_addr constant [22 x i8] c"RedisModule_StopTimer\00", align 1
@.str.186 = private unnamed_addr constant [25 x i8] c"RedisModule_GetTimerInfo\00", align 1
@.str.187 = private unnamed_addr constant [27 x i8] c"RedisModule_GetMyClusterID\00", align 1
@.str.188 = private unnamed_addr constant [27 x i8] c"RedisModule_GetClusterSize\00", align 1
@.str.189 = private unnamed_addr constant [27 x i8] c"RedisModule_GetRandomBytes\00", align 1
@.str.190 = private unnamed_addr constant [30 x i8] c"RedisModule_GetRandomHexChars\00", align 1
@.str.191 = private unnamed_addr constant [38 x i8] c"RedisModule_BlockedClientDisconnected\00", align 1
@.str.192 = private unnamed_addr constant [34 x i8] c"RedisModule_SetDisconnectCallback\00", align 1
@.str.193 = private unnamed_addr constant [35 x i8] c"RedisModule_GetBlockedClientHandle\00", align 1
@.str.194 = private unnamed_addr constant [28 x i8] c"RedisModule_SetClusterFlags\00", align 1
@.str.195 = private unnamed_addr constant [23 x i8] c"RedisModule_CreateDict\00", align 1
@.str.196 = private unnamed_addr constant [21 x i8] c"RedisModule_FreeDict\00", align 1
@.str.197 = private unnamed_addr constant [21 x i8] c"RedisModule_DictSize\00", align 1
@.str.198 = private unnamed_addr constant [21 x i8] c"RedisModule_DictSetC\00", align 1
@.str.199 = private unnamed_addr constant [25 x i8] c"RedisModule_DictReplaceC\00", align 1
@.str.200 = private unnamed_addr constant [20 x i8] c"RedisModule_DictSet\00", align 1
@.str.201 = private unnamed_addr constant [24 x i8] c"RedisModule_DictReplace\00", align 1
@.str.202 = private unnamed_addr constant [21 x i8] c"RedisModule_DictGetC\00", align 1
@.str.203 = private unnamed_addr constant [20 x i8] c"RedisModule_DictGet\00", align 1
@.str.204 = private unnamed_addr constant [21 x i8] c"RedisModule_DictDelC\00", align 1
@.str.205 = private unnamed_addr constant [20 x i8] c"RedisModule_DictDel\00", align 1
@.str.206 = private unnamed_addr constant [31 x i8] c"RedisModule_DictIteratorStartC\00", align 1
@.str.207 = private unnamed_addr constant [30 x i8] c"RedisModule_DictIteratorStart\00", align 1
@.str.208 = private unnamed_addr constant [29 x i8] c"RedisModule_DictIteratorStop\00", align 1
@.str.209 = private unnamed_addr constant [32 x i8] c"RedisModule_DictIteratorReseekC\00", align 1
@.str.210 = private unnamed_addr constant [31 x i8] c"RedisModule_DictIteratorReseek\00", align 1
@.str.211 = private unnamed_addr constant [22 x i8] c"RedisModule_DictNextC\00", align 1
@.str.212 = private unnamed_addr constant [22 x i8] c"RedisModule_DictPrevC\00", align 1
@.str.213 = private unnamed_addr constant [21 x i8] c"RedisModule_DictNext\00", align 1
@.str.214 = private unnamed_addr constant [21 x i8] c"RedisModule_DictPrev\00", align 1
@.str.215 = private unnamed_addr constant [25 x i8] c"RedisModule_DictCompareC\00", align 1
@.str.216 = private unnamed_addr constant [24 x i8] c"RedisModule_DictCompare\00", align 1
@.str.217 = private unnamed_addr constant [28 x i8] c"RedisModule_ExportSharedAPI\00", align 1
@.str.218 = private unnamed_addr constant [25 x i8] c"RedisModule_GetSharedAPI\00", align 1
@.str.219 = private unnamed_addr constant [34 x i8] c"RedisModule_RegisterCommandFilter\00", align 1
@.str.220 = private unnamed_addr constant [36 x i8] c"RedisModule_UnregisterCommandFilter\00", align 1
@.str.221 = private unnamed_addr constant [35 x i8] c"RedisModule_CommandFilterArgsCount\00", align 1
@.str.222 = private unnamed_addr constant [32 x i8] c"RedisModule_CommandFilterArgGet\00", align 1
@.str.223 = private unnamed_addr constant [35 x i8] c"RedisModule_CommandFilterArgInsert\00", align 1
@.str.224 = private unnamed_addr constant [36 x i8] c"RedisModule_CommandFilterArgReplace\00", align 1
@.str.225 = private unnamed_addr constant [35 x i8] c"RedisModule_CommandFilterArgDelete\00", align 1
@switch.table.RM_KeyType = private unnamed_addr constant [6 x i32] [i32 1, i32 2, i32 4, i32 5, i32 3, i32 6]

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_Alloc(i64) #0 !dbg !836 {
  %2 = tail call i8* @zmalloc(i64 %0) #11, !dbg !842
  ret i8* %2, !dbg !843
}

; Function Attrs: nounwind readnone speculatable

; Function Attrs: noredzone
declare dso_local i8* @zmalloc(i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_Calloc(i64, i64) #0 !dbg !844 {
  %3 = mul i64 %1, %0, !dbg !852
  %4 = tail call i8* @zcalloc(i64 %3) #11, !dbg !853
  ret i8* %4, !dbg !854
}

; Function Attrs: noredzone
declare dso_local i8* @zcalloc(i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_Realloc(i8*, i64) #0 !dbg !855 {
  %3 = tail call i8* @zrealloc(i8* %0, i64 %1) #11, !dbg !863
  ret i8* %3, !dbg !864
}

; Function Attrs: noredzone
declare dso_local i8* @zrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_Free(i8*) #0 !dbg !865 {
  tail call void @zfree(i8* %0) #11, !dbg !869
  ret void, !dbg !870
}

; Function Attrs: noredzone
declare dso_local void @zfree(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_Strdup(i8*) #0 !dbg !871 {
  %2 = tail call i8* @zstrdup(i8* %0) #11, !dbg !877
  ret i8* %2, !dbg !878
}

; Function Attrs: noredzone
declare dso_local i8* @zstrdup(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @poolAllocRelease(%struct.RedisModuleCtx* nocapture) local_unnamed_addr #0 !dbg !879 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 13, !dbg !889
  %3 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %2, align 8, !dbg !889, !tbaa !890
  %4 = icmp eq %struct.RedisModulePoolAllocBlock* %3, null, !dbg !897
  br i1 %4, label %11, label %5, !dbg !898

; <label>:5:                                      ; preds = %1, %5
  %6 = phi %struct.RedisModulePoolAllocBlock* [ %9, %5 ], [ %3, %1 ]
  %7 = bitcast %struct.RedisModulePoolAllocBlock* %6 to i8*, !dbg !899
  %8 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 2, !dbg !900
  %9 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %8, align 8, !dbg !900, !tbaa !902
  tail call void @zfree(i8* %7) #11, !dbg !904
  %10 = icmp eq %struct.RedisModulePoolAllocBlock* %9, null, !dbg !897
  br i1 %10, label %11, label %5, !dbg !898, !llvm.loop !905

; <label>:11:                                     ; preds = %5, %1
  store %struct.RedisModulePoolAllocBlock* null, %struct.RedisModulePoolAllocBlock** %2, align 8, !dbg !907, !tbaa !890
  ret void, !dbg !908
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #3

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_PoolAlloc(%struct.RedisModuleCtx* nocapture, i64) #0 !dbg !909 {
  %3 = icmp eq i64 %1, 0, !dbg !926
  br i1 %3, label %68, label %4, !dbg !928

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 13, !dbg !929
  %6 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %5, align 8, !dbg !929, !tbaa !890
  %7 = icmp eq %struct.RedisModulePoolAllocBlock* %6, null, !dbg !931
  br i1 %7, label %15, label %8, !dbg !931

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 0, !dbg !932
  %10 = load i32, i32* %9, align 8, !dbg !932, !tbaa !933
  %11 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 1, !dbg !934
  %12 = load i32, i32* %11, align 4, !dbg !934, !tbaa !933
  %13 = sub i32 %10, %12, !dbg !935
  %14 = zext i32 %13 to i64, !dbg !931
  br label %15, !dbg !931

; <label>:15:                                     ; preds = %4, %8
  %16 = phi i64 [ %14, %8 ], [ 0, %4 ]
  %17 = icmp ult i64 %16, %1, !dbg !937
  br i1 %17, label %42, label %18, !dbg !938

; <label>:18:                                     ; preds = %15, %21
  %19 = phi i64 [ %22, %21 ], [ 8, %15 ], !dbg !939
  %20 = icmp ugt i64 %19, %1, !dbg !941
  br i1 %20, label %21, label %24, !dbg !942

; <label>:21:                                     ; preds = %18
  %22 = lshr i64 %19, 1, !dbg !943
  %23 = icmp ult i64 %22, %1, !dbg !944
  br i1 %23, label %24, label %18, !dbg !945, !llvm.loop !946

; <label>:24:                                     ; preds = %21, %18
  %25 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 1, !dbg !948
  %26 = load i32, i32* %25, align 4, !dbg !948, !tbaa !933
  %27 = zext i32 %26 to i64, !dbg !950
  %28 = urem i64 %27, %19, !dbg !951
  %29 = icmp eq i64 %28, 0, !dbg !951
  br i1 %29, label %34, label %30, !dbg !952

; <label>:30:                                     ; preds = %24
  %31 = sub nsw i64 %19, %28, !dbg !953
  %32 = trunc i64 %31 to i32, !dbg !954
  %33 = add i32 %26, %32, !dbg !954
  store i32 %33, i32* %25, align 4, !dbg !954, !tbaa !933
  br label %34, !dbg !955

; <label>:34:                                     ; preds = %24, %30
  %35 = phi i32 [ %26, %24 ], [ %33, %30 ], !dbg !956
  %36 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 0, !dbg !957
  %37 = load i32, i32* %36, align 8, !dbg !957, !tbaa !933
  %38 = icmp ult i32 %37, %35, !dbg !958
  %39 = select i1 %38, i32 %35, i32 %37, !dbg !958
  %40 = sub i32 %39, %35, !dbg !958
  %41 = zext i32 %40 to i64, !dbg !958
  br label %42, !dbg !958

; <label>:42:                                     ; preds = %34, %15
  %43 = phi i64 [ %16, %15 ], [ %41, %34 ], !dbg !959
  %44 = icmp ult i64 %43, %1, !dbg !960
  br i1 %44, label %45, label %60, !dbg !961

; <label>:45:                                     ; preds = %42
  %46 = icmp ugt i64 %1, 8192, !dbg !963
  %47 = select i1 %46, i64 %1, i64 8192, !dbg !965
  %48 = add i64 %47, 16, !dbg !966
  %49 = tail call i8* @zmalloc(i64 %48) #11, !dbg !967
  %50 = bitcast i8* %49 to %struct.RedisModulePoolAllocBlock*, !dbg !967
  %51 = trunc i64 %47 to i32, !dbg !968
  %52 = bitcast i8* %49 to i32*, !dbg !969
  store i32 %51, i32* %52, align 8, !dbg !970, !tbaa !933
  %53 = getelementptr inbounds i8, i8* %49, i64 4, !dbg !971
  %54 = bitcast i8* %53 to i32*, !dbg !971
  store i32 0, i32* %54, align 4, !dbg !972, !tbaa !933
  %55 = bitcast %struct.RedisModulePoolAllocBlock** %5 to i64*, !dbg !973
  %56 = load i64, i64* %55, align 8, !dbg !973, !tbaa !890
  %57 = getelementptr inbounds i8, i8* %49, i64 8, !dbg !974
  %58 = bitcast i8* %57 to i64*, !dbg !975
  store i64 %56, i64* %58, align 8, !dbg !975, !tbaa !902
  %59 = bitcast %struct.RedisModulePoolAllocBlock** %5 to i8**, !dbg !976
  store i8* %49, i8** %59, align 8, !dbg !976, !tbaa !890
  br label %60, !dbg !977

; <label>:60:                                     ; preds = %45, %42
  %61 = phi %struct.RedisModulePoolAllocBlock* [ %50, %45 ], [ %6, %42 ], !dbg !959
  %62 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %61, i64 0, i32 1, !dbg !978
  %63 = load i32, i32* %62, align 4, !dbg !978, !tbaa !933
  %64 = zext i32 %63 to i64, !dbg !979
  %65 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %61, i64 0, i32 3, i64 %64, !dbg !979
  %66 = trunc i64 %1 to i32, !dbg !981
  %67 = add i32 %63, %66, !dbg !981
  store i32 %67, i32* %62, align 4, !dbg !981, !tbaa !933
  br label %68

; <label>:68:                                     ; preds = %2, %60
  %69 = phi i8* [ %65, %60 ], [ null, %2 ], !dbg !959
  ret i8* %69, !dbg !982
}

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleCreateEmptyKey(%struct.RedisModuleKey* nocapture, i32) local_unnamed_addr #0 !dbg !983 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !1023
  %4 = load i32, i32* %3, align 8, !dbg !1023, !tbaa !1025
  %5 = and i32 %4, 2, !dbg !1030
  %6 = icmp eq i32 %5, 0, !dbg !1030
  br i1 %6, label %29, label %7, !dbg !1031

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !1032
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !1032, !tbaa !1033
  %10 = icmp eq %struct.redisObject* %9, null, !dbg !1034
  br i1 %10, label %11, label %29, !dbg !1035

; <label>:11:                                     ; preds = %7
  switch i32 %1, label %29 [
    i32 2, label %12
    i32 5, label %19
    i32 3, label %21
  ], !dbg !1036

; <label>:12:                                     ; preds = %11
  %13 = tail call %struct.redisObject* @createQuicklistObject() #11, !dbg !1037
  %14 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %13, i64 0, i32 2, !dbg !1040
  %15 = bitcast i8** %14 to %struct.quicklist**, !dbg !1040
  %16 = load %struct.quicklist*, %struct.quicklist** %15, align 8, !dbg !1040, !tbaa !1041
  %17 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 249), align 8, !dbg !1043, !tbaa !1044
  %18 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 250), align 4, !dbg !1051, !tbaa !1052
  tail call void @quicklistSetOptions(%struct.quicklist* %16, i32 %17, i32 %18) #11, !dbg !1053
  br label %23, !dbg !1054

; <label>:19:                                     ; preds = %11
  %20 = tail call %struct.redisObject* @createZsetZiplistObject() #11, !dbg !1055
  br label %23, !dbg !1056

; <label>:21:                                     ; preds = %11
  %22 = tail call %struct.redisObject* @createHashObject() #11, !dbg !1057
  br label %23, !dbg !1058

; <label>:23:                                     ; preds = %21, %19, %12
  %24 = phi %struct.redisObject* [ %22, %21 ], [ %20, %19 ], [ %13, %12 ], !dbg !1059
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !1060
  %26 = load %struct.redisDb*, %struct.redisDb** %25, align 8, !dbg !1060, !tbaa !1061
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !1062
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !1062, !tbaa !1063
  tail call void @dbAdd(%struct.redisDb* %26, %struct.redisObject* %28, %struct.redisObject* %24) #11, !dbg !1064
  store %struct.redisObject* %24, %struct.redisObject** %8, align 8, !dbg !1065, !tbaa !1033
  br label %29, !dbg !1066

; <label>:29:                                     ; preds = %11, %2, %7, %23
  %30 = phi i32 [ 0, %23 ], [ 1, %7 ], [ 1, %2 ], [ 1, %11 ], !dbg !1067
  ret i32 %30, !dbg !1068
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createQuicklistObject() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @quicklistSetOptions(%struct.quicklist*, i32, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createZsetZiplistObject() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createHashObject() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @dbAdd(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleDelKeyIfEmpty(%struct.RedisModuleKey* nocapture) local_unnamed_addr #0 !dbg !1069 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !1077
  %3 = load i32, i32* %2, align 8, !dbg !1077, !tbaa !1025
  %4 = and i32 %3, 2, !dbg !1079
  %5 = icmp eq i32 %4, 0, !dbg !1079
  br i1 %5, label %32, label %6, !dbg !1080

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !1081
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !1081, !tbaa !1033
  %9 = icmp eq %struct.redisObject* %8, null, !dbg !1082
  br i1 %9, label %32, label %10, !dbg !1083

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %8, i64 0, i32 0, !dbg !1085
  %12 = load i32, i32* %11, align 8, !dbg !1085
  %13 = trunc i32 %12 to i4, !dbg !1086
  switch i4 %13, label %32 [
    i4 1, label %23
    i4 2, label %14
    i4 3, label %17
    i4 4, label %20
  ], !dbg !1086

; <label>:14:                                     ; preds = %10
  %15 = tail call i64 @setTypeSize(%struct.redisObject* nonnull %8) #11, !dbg !1087
  %16 = icmp eq i64 %15, 0, !dbg !1089
  br i1 %16, label %26, label %32, !dbg !1090

; <label>:17:                                     ; preds = %10
  %18 = tail call i64 @zsetLength(%struct.redisObject* nonnull %8) #11, !dbg !1091
  %19 = icmp eq i64 %18, 0, !dbg !1092
  br i1 %19, label %26, label %32, !dbg !1090

; <label>:20:                                     ; preds = %10
  %21 = tail call i64 @hashTypeLength(%struct.redisObject* nonnull %8) #11, !dbg !1093
  %22 = icmp eq i64 %21, 0, !dbg !1094
  br i1 %22, label %26, label %32, !dbg !1090

; <label>:23:                                     ; preds = %10
  %24 = tail call i64 @listTypeLength(%struct.redisObject* nonnull %8) #11, !dbg !1095
  %25 = icmp eq i64 %24, 0, !dbg !1096
  br i1 %25, label %26, label %32, !dbg !1090

; <label>:26:                                     ; preds = %14, %17, %20, %23
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !1097
  %28 = load %struct.redisDb*, %struct.redisDb** %27, align 8, !dbg !1097, !tbaa !1061
  %29 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !1100
  %30 = load %struct.redisObject*, %struct.redisObject** %29, align 8, !dbg !1100, !tbaa !1063
  %31 = tail call i32 @dbDelete(%struct.redisDb* %28, %struct.redisObject* %30) #11, !dbg !1101
  store %struct.redisObject* null, %struct.redisObject** %7, align 8, !dbg !1102, !tbaa !1033
  br label %32, !dbg !1103

; <label>:32:                                     ; preds = %14, %17, %20, %26, %10, %23, %6, %1
  %33 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 1, %26 ], [ 0, %10 ], [ 0, %23 ], [ 0, %20 ], [ 0, %17 ], [ 0, %14 ], !dbg !1104
  ret i32 %33, !dbg !1105
}

; Function Attrs: noredzone
declare dso_local i64 @listTypeLength(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @setTypeSize(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @zsetLength(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @hashTypeLength(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @dbDelete(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_GetApi(i8*, i8** nocapture) #0 !dbg !1106 {
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !1115, !tbaa !1116
  %4 = tail call %struct.dictEntry* @dictFind(%struct.dict* %3, i8* %0) #11, !dbg !1117
  %5 = icmp eq %struct.dictEntry* %4, null, !dbg !1119
  br i1 %5, label %11, label %6, !dbg !1121

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %4, i64 0, i32 1, i32 0, !dbg !1122
  %8 = bitcast i8** %7 to i64*, !dbg !1122
  %9 = load i64, i64* %8, align 8, !dbg !1122, !tbaa !1123
  %10 = bitcast i8** %1 to i64*, !dbg !1124
  store i64 %9, i64* %10, align 8, !dbg !1124, !tbaa !902
  br label %11, !dbg !1125

; <label>:11:                                     ; preds = %2, %6
  %12 = phi i32 [ 0, %6 ], [ 1, %2 ], !dbg !1126
  ret i32 %12, !dbg !1127
}

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictFind(%struct.dict*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleFreeContext(%struct.RedisModuleCtx* nocapture) local_unnamed_addr #0 !dbg !1128 {
  tail call void @autoMemoryCollect(%struct.RedisModuleCtx* %0) #12, !dbg !1132
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 13, !dbg !1135
  %3 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %2, align 8, !dbg !1135, !tbaa !890
  %4 = icmp eq %struct.RedisModulePoolAllocBlock* %3, null, !dbg !1137
  br i1 %4, label %11, label %5, !dbg !1138

; <label>:5:                                      ; preds = %1, %5
  %6 = phi %struct.RedisModulePoolAllocBlock* [ %9, %5 ], [ %3, %1 ]
  %7 = bitcast %struct.RedisModulePoolAllocBlock* %6 to i8*, !dbg !1139
  %8 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 2, !dbg !1140
  %9 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %8, align 8, !dbg !1140, !tbaa !902
  tail call void @zfree(i8* %7) #11, !dbg !1142
  %10 = icmp eq %struct.RedisModulePoolAllocBlock* %9, null, !dbg !1137
  br i1 %10, label %11, label %5, !dbg !1138, !llvm.loop !905

; <label>:11:                                     ; preds = %5, %1
  store %struct.RedisModulePoolAllocBlock* null, %struct.RedisModulePoolAllocBlock** %2, align 8, !dbg !1143, !tbaa !890
  %12 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 8, !dbg !1144
  %13 = load i8**, i8*** %12, align 8, !dbg !1144, !tbaa !1146
  %14 = icmp eq i8** %13, null, !dbg !1147
  br i1 %14, label %22, label %15, !dbg !1148

; <label>:15:                                     ; preds = %11
  %16 = bitcast i8** %13 to i8*, !dbg !1149
  tail call void @zfree(i8* %16) #11, !dbg !1151
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 9, !dbg !1152
  store i32 0, i32* %17, align 8, !dbg !1153, !tbaa !1154
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !1155
  %19 = load %struct.RedisModule*, %struct.RedisModule** %18, align 8, !dbg !1155, !tbaa !1156
  %20 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %19, i64 0, i32 1, !dbg !1157
  %21 = load i8*, i8** %20, align 8, !dbg !1157, !tbaa !1158
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([166 x i8], [166 x i8]* @.str, i64 0, i64 0), i8* %21) #11, !dbg !1160
  br label %22, !dbg !1161

; <label>:22:                                     ; preds = %11, %15
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1162
  %24 = load i32, i32* %23, align 8, !dbg !1162, !tbaa !1164
  %25 = and i32 %24, 32, !dbg !1165
  %26 = icmp eq i32 %25, 0, !dbg !1165
  br i1 %26, label %30, label %27, !dbg !1166

; <label>:27:                                     ; preds = %22
  %28 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !1167
  %29 = load %struct.client*, %struct.client** %28, align 8, !dbg !1167, !tbaa !1168
  tail call void @freeClient(%struct.client* %29) #11, !dbg !1169
  br label %30, !dbg !1169

; <label>:30:                                     ; preds = %22, %27
  ret void, !dbg !1170
}

; Function Attrs: noredzone nounwind
define dso_local void @autoMemoryCollect(%struct.RedisModuleCtx* nocapture) local_unnamed_addr #0 !dbg !1171 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1180
  %3 = load i32, i32* %2, align 8, !dbg !1180, !tbaa !1164
  %4 = and i32 %3, 2, !dbg !1182
  %5 = icmp eq i32 %4, 0, !dbg !1182
  br i1 %5, label %41, label %6, !dbg !1183

; <label>:6:                                      ; preds = %1
  %7 = and i32 %3, -3, !dbg !1184
  store i32 %7, i32* %2, align 8, !dbg !1184, !tbaa !1164
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !1186
  %9 = load i32, i32* %8, align 4, !dbg !1186, !tbaa !1187
  %10 = icmp sgt i32 %9, 0, !dbg !1188
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  br i1 %10, label %12, label %35, !dbg !1189

; <label>:12:                                     ; preds = %6, %28
  %13 = phi i64 [ %29, %28 ], [ 0, %6 ]
  %14 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %11, align 8, !dbg !1190, !tbaa !1191
  %15 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %14, i64 %13, i32 0, !dbg !1192
  %16 = load i8*, i8** %15, align 8, !dbg !1192, !tbaa !1193
  %17 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %14, i64 %13, i32 1, !dbg !1196
  %18 = load i32, i32* %17, align 8, !dbg !1196, !tbaa !1197
  switch i32 %18, label %28 [
    i32 1, label %19
    i32 2, label %21
    i32 0, label %23
    i32 4, label %25
  ], !dbg !1198

; <label>:19:                                     ; preds = %12
  %20 = bitcast i8* %16 to %struct.redisObject*, !dbg !1199
  tail call void @decrRefCount(%struct.redisObject* %20) #11, !dbg !1201
  br label %28, !dbg !1202

; <label>:21:                                     ; preds = %12
  %22 = bitcast i8* %16 to %struct.RedisModuleCallReply*, !dbg !1203
  tail call void @RM_FreeCallReply(%struct.RedisModuleCallReply* %22) #12, !dbg !1204
  br label %28, !dbg !1205

; <label>:23:                                     ; preds = %12
  %24 = bitcast i8* %16 to %struct.RedisModuleKey*, !dbg !1206
  tail call void @RM_CloseKey(%struct.RedisModuleKey* %24) #12, !dbg !1207
  br label %28, !dbg !1208

; <label>:25:                                     ; preds = %12
  %26 = bitcast i8* %16 to %struct.rax**, !dbg !1223
  %27 = load %struct.rax*, %struct.rax** %26, align 8, !dbg !1223, !tbaa !1224
  tail call void @raxFree(%struct.rax* %27) #11, !dbg !1226
  tail call void @zfree(i8* %16) #11, !dbg !1227
  br label %28, !dbg !1228

; <label>:28:                                     ; preds = %12, %25, %23, %21, %19
  %29 = add nuw nsw i64 %13, 1, !dbg !1229
  %30 = load i32, i32* %8, align 4, !dbg !1186, !tbaa !1187
  %31 = sext i32 %30 to i64, !dbg !1188
  %32 = icmp slt i64 %29, %31, !dbg !1188
  br i1 %32, label %12, label %33, !dbg !1189, !llvm.loop !1230

; <label>:33:                                     ; preds = %28
  %34 = load i32, i32* %2, align 8, !dbg !1232, !tbaa !1164
  br label %35, !dbg !1232

; <label>:35:                                     ; preds = %6, %33
  %36 = phi i32 [ %34, %33 ], [ %7, %6 ], !dbg !1232
  %37 = or i32 %36, 2, !dbg !1232
  store i32 %37, i32* %2, align 8, !dbg !1232, !tbaa !1164
  %38 = bitcast %struct.AutoMemEntry** %11 to i8**, !dbg !1233
  %39 = load i8*, i8** %38, align 8, !dbg !1233, !tbaa !1191
  tail call void @zfree(i8* %39) #11, !dbg !1234
  store %struct.AutoMemEntry* null, %struct.AutoMemEntry** %11, align 8, !dbg !1235, !tbaa !1191
  %40 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !1236
  store i32 0, i32* %40, align 8, !dbg !1237, !tbaa !1238
  store i32 0, i32* %8, align 4, !dbg !1239, !tbaa !1187
  br label %41, !dbg !1240

; <label>:41:                                     ; preds = %1, %35
  ret void, !dbg !1240
}

; Function Attrs: noredzone
declare dso_local void @serverLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @freeClient(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleHandlePropagationAfterCommandCallback(%struct.RedisModuleCtx* nocapture readonly) local_unnamed_addr #0 !dbg !1241 {
  %2 = alloca [1 x %struct.redisObject*], align 8
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !1250
  %4 = load %struct.client*, %struct.client** %3, align 8, !dbg !1250, !tbaa !1168
  %5 = getelementptr inbounds %struct.client, %struct.client* %4, i64 0, i32 21, !dbg !1252
  %6 = load i32, i32* %5, align 8, !dbg !1252, !tbaa !1254
  %7 = and i32 %6, 256, !dbg !1258
  %8 = icmp eq i32 %7, 0, !dbg !1258
  br i1 %8, label %9, label %24, !dbg !1259

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1260
  %11 = load i32, i32* %10, align 8, !dbg !1260, !tbaa !1164
  %12 = and i32 %11, 1, !dbg !1261
  %13 = icmp eq i32 %12, 0, !dbg !1261
  br i1 %13, label %24, label %14, !dbg !1262

; <label>:14:                                     ; preds = %9
  %15 = bitcast [1 x %struct.redisObject*]* %2 to i8*, !dbg !1263
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !dbg !1263
  %16 = tail call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #11, !dbg !1265
  %17 = getelementptr inbounds [1 x %struct.redisObject*], [1 x %struct.redisObject*]* %2, i64 0, i64 0, !dbg !1266
  store %struct.redisObject* %16, %struct.redisObject** %17, align 8, !dbg !1267, !tbaa !902
  %18 = load %struct.redisCommand*, %struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64), align 8, !dbg !1268, !tbaa !1269
  %19 = getelementptr inbounds %struct.client, %struct.client* %4, i64 0, i32 2, !dbg !1270
  %20 = load %struct.redisDb*, %struct.redisDb** %19, align 8, !dbg !1270, !tbaa !1271
  %21 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %20, i64 0, i32 5, !dbg !1272
  %22 = load i32, i32* %21, align 8, !dbg !1272, !tbaa !1273
  call void @alsoPropagate(%struct.redisCommand* %18, i32 %22, %struct.redisObject** nonnull %17, i32 1, i32 3) #11, !dbg !1275
  %23 = load %struct.redisObject*, %struct.redisObject** %17, align 8, !dbg !1276, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %23) #11, !dbg !1277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !dbg !1278
  br label %24, !dbg !1279

; <label>:24:                                     ; preds = %14, %9, %1
  ret void, !dbg !1280
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStringObject(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @alsoPropagate(%struct.redisCommand*, i32, %struct.redisObject**, i32, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @decrRefCount(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RedisModuleCommandDispatcher(%struct.client*) #0 !dbg !1281 {
  %2 = alloca [1 x %struct.redisObject*], align 8
  %3 = alloca %struct.RedisModuleCtx, align 8
  %4 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 10, !dbg !1298
  %5 = load %struct.redisCommand*, %struct.redisCommand** %4, align 8, !dbg !1298, !tbaa !1299
  %6 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %5, i64 0, i32 5, !dbg !1300
  %7 = bitcast i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)** %6 to %struct.RedisModuleCommandProxy**, !dbg !1300
  %8 = load %struct.RedisModuleCommandProxy*, %struct.RedisModuleCommandProxy** %7, align 8, !dbg !1300, !tbaa !1301
  %9 = bitcast %struct.RedisModuleCtx* %3 to i8*, !dbg !1304
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #6, !dbg !1304
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 3
  %11 = bitcast %struct.RedisModuleBlockedClient** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 80, i1 false), !dbg !1305
  %12 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 0, !dbg !1305
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %12, align 8, !dbg !1305
  %13 = bitcast %struct.RedisModuleCommandProxy* %8 to i64*, !dbg !1306
  %14 = load i64, i64* %13, align 8, !dbg !1306, !tbaa !1307
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 1, !dbg !1309
  %16 = bitcast %struct.RedisModule** %15 to i64*, !dbg !1310
  store i64 %14, i64* %16, align 8, !dbg !1310, !tbaa !1156
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 2, !dbg !1311
  store %struct.client* %0, %struct.client** %17, align 8, !dbg !1312, !tbaa !1168
  %18 = getelementptr inbounds %struct.RedisModuleCommandProxy, %struct.RedisModuleCommandProxy* %8, i64 0, i32 1, !dbg !1313
  %19 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %18, align 8, !dbg !1313, !tbaa !1314
  %20 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !1315
  %21 = bitcast %struct.redisObject*** %20 to i8***, !dbg !1315
  %22 = load i8**, i8*** %21, align 8, !dbg !1315, !tbaa !1316
  %23 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !1317
  %24 = load i32, i32* %23, align 8, !dbg !1317, !tbaa !1318
  %25 = call i32 %19(%struct.RedisModuleCtx* nonnull %3, i8** %22, i32 %24) #11, !dbg !1319
  %26 = load %struct.client*, %struct.client** %17, align 8, !dbg !1321, !tbaa !1168
  %27 = getelementptr inbounds %struct.client, %struct.client* %26, i64 0, i32 21, !dbg !1323
  %28 = load i32, i32* %27, align 8, !dbg !1323, !tbaa !1254
  %29 = and i32 %28, 256, !dbg !1324
  %30 = icmp eq i32 %29, 0, !dbg !1324
  br i1 %30, label %31, label %46, !dbg !1325

; <label>:31:                                     ; preds = %1
  %32 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 7, !dbg !1326
  %33 = load i32, i32* %32, align 8, !dbg !1326, !tbaa !1164
  %34 = and i32 %33, 1, !dbg !1327
  %35 = icmp eq i32 %34, 0, !dbg !1327
  br i1 %35, label %46, label %36, !dbg !1328

; <label>:36:                                     ; preds = %31
  %37 = bitcast [1 x %struct.redisObject*]* %2 to i8*, !dbg !1329
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6, !dbg !1329
  %38 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #11, !dbg !1330
  %39 = getelementptr inbounds [1 x %struct.redisObject*], [1 x %struct.redisObject*]* %2, i64 0, i64 0, !dbg !1331
  store %struct.redisObject* %38, %struct.redisObject** %39, align 8, !dbg !1332, !tbaa !902
  %40 = load %struct.redisCommand*, %struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64), align 8, !dbg !1333, !tbaa !1269
  %41 = getelementptr inbounds %struct.client, %struct.client* %26, i64 0, i32 2, !dbg !1334
  %42 = load %struct.redisDb*, %struct.redisDb** %41, align 8, !dbg !1334, !tbaa !1271
  %43 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %42, i64 0, i32 5, !dbg !1335
  %44 = load i32, i32* %43, align 8, !dbg !1335, !tbaa !1273
  call void @alsoPropagate(%struct.redisCommand* %40, i32 %44, %struct.redisObject** nonnull %39, i32 1, i32 3) #11, !dbg !1336
  %45 = load %struct.redisObject*, %struct.redisObject** %39, align 8, !dbg !1337, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %45) #11, !dbg !1338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6, !dbg !1339
  br label %46, !dbg !1340

; <label>:46:                                     ; preds = %1, %31, %36
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %3) #12, !dbg !1341
  %47 = load i32, i32* %23, align 8, !dbg !1343, !tbaa !1318
  %48 = icmp sgt i32 %47, 0, !dbg !1345
  br i1 %48, label %50, label %49, !dbg !1346

; <label>:49:                                     ; preds = %61, %46
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #6, !dbg !1347
  ret void, !dbg !1347

; <label>:50:                                     ; preds = %46, %61
  %51 = phi i32 [ %62, %61 ], [ %47, %46 ]
  %52 = phi i64 [ %63, %61 ], [ 0, %46 ]
  %53 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !1348, !tbaa !1316
  %54 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %53, i64 %52, !dbg !1351
  %55 = load %struct.redisObject*, %struct.redisObject** %54, align 8, !dbg !1351, !tbaa !902
  %56 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %55, i64 0, i32 1, !dbg !1352
  %57 = load i32, i32* %56, align 4, !dbg !1352, !tbaa !1353
  %58 = icmp sgt i32 %57, 1, !dbg !1354
  br i1 %58, label %59, label %61, !dbg !1355

; <label>:59:                                     ; preds = %50
  call void @trimStringObjectIfNeeded(%struct.redisObject* %55) #11, !dbg !1356
  %60 = load i32, i32* %23, align 8, !dbg !1343, !tbaa !1318
  br label %61, !dbg !1356

; <label>:61:                                     ; preds = %50, %59
  %62 = phi i32 [ %51, %50 ], [ %60, %59 ], !dbg !1343
  %63 = add nuw nsw i64 %52, 1, !dbg !1357
  %64 = sext i32 %62 to i64, !dbg !1345
  %65 = icmp slt i64 %63, %64, !dbg !1345
  br i1 %65, label %50, label %49, !dbg !1346, !llvm.loop !1358
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #3

; Function Attrs: noredzone
declare dso_local void @trimStringObjectIfNeeded(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32* @moduleGetCommandKeysViaAPI(%struct.redisCommand* nocapture readonly, %struct.redisObject**, i32, i32*) local_unnamed_addr #0 !dbg !1360 {
  %5 = alloca %struct.RedisModuleCtx, align 8
  %6 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %0, i64 0, i32 5, !dbg !1373
  %7 = bitcast i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)** %6 to %struct.RedisModuleCommandProxy**, !dbg !1373
  %8 = load %struct.RedisModuleCommandProxy*, %struct.RedisModuleCommandProxy** %7, align 8, !dbg !1373, !tbaa !1301
  %9 = bitcast %struct.RedisModuleCtx* %5 to i8*, !dbg !1375
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #6, !dbg !1375
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 3
  %11 = bitcast %struct.RedisModuleBlockedClient** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 80, i1 false), !dbg !1376
  %12 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 0, !dbg !1376
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %12, align 8, !dbg !1376
  %13 = bitcast %struct.RedisModuleCommandProxy* %8 to i64*, !dbg !1377
  %14 = load i64, i64* %13, align 8, !dbg !1377, !tbaa !1307
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 1, !dbg !1378
  %16 = bitcast %struct.RedisModule** %15 to i64*, !dbg !1379
  store i64 %14, i64* %16, align 8, !dbg !1379, !tbaa !1156
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 2, !dbg !1380
  store %struct.client* null, %struct.client** %17, align 8, !dbg !1381, !tbaa !1168
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 7, !dbg !1382
  store i32 4, i32* %18, align 8, !dbg !1383, !tbaa !1164
  %19 = getelementptr inbounds %struct.RedisModuleCommandProxy, %struct.RedisModuleCommandProxy* %8, i64 0, i32 1, !dbg !1384
  %20 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %19, align 8, !dbg !1384, !tbaa !1314
  %21 = bitcast %struct.redisObject** %1 to i8**, !dbg !1385
  %22 = call i32 %20(%struct.RedisModuleCtx* nonnull %5, i8** %21, i32 %2) #11, !dbg !1386
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 11, !dbg !1387
  %24 = load i32*, i32** %23, align 8, !dbg !1387, !tbaa !1388
  %25 = icmp eq i32* %3, null, !dbg !1390
  br i1 %25, label %29, label %26, !dbg !1392

; <label>:26:                                     ; preds = %4
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 12, !dbg !1393
  %28 = load i32, i32* %27, align 8, !dbg !1393, !tbaa !1394
  store i32 %28, i32* %3, align 4, !dbg !1395, !tbaa !933
  br label %29, !dbg !1396

; <label>:29:                                     ; preds = %4, %26
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %5) #12, !dbg !1397
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #6, !dbg !1398
  ret i32* %24, !dbg !1399
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @RM_IsKeysPositionRequest(%struct.RedisModuleCtx* nocapture readonly) #4 !dbg !1400 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1406
  %3 = load i32, i32* %2, align 8, !dbg !1406, !tbaa !1164
  %4 = lshr i32 %3, 2, !dbg !1407
  %5 = and i32 %4, 1, !dbg !1407
  ret i32 %5, !dbg !1408
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_KeyAtPos(%struct.RedisModuleCtx* nocapture, i32) #0 !dbg !1409 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1417
  %4 = load i32, i32* %3, align 8, !dbg !1417, !tbaa !1164
  %5 = and i32 %4, 4, !dbg !1419
  %6 = icmp eq i32 %5, 0, !dbg !1419
  %7 = icmp slt i32 %1, 1, !dbg !1420
  %8 = or i1 %7, %6, !dbg !1422
  br i1 %8, label %24, label %9, !dbg !1422

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 11, !dbg !1423
  %11 = bitcast i32** %10 to i8**, !dbg !1423
  %12 = load i8*, i8** %11, align 8, !dbg !1423, !tbaa !1388
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 12, !dbg !1424
  %14 = load i32, i32* %13, align 8, !dbg !1424, !tbaa !1394
  %15 = add nsw i32 %14, 1, !dbg !1425
  %16 = sext i32 %15 to i64, !dbg !1426
  %17 = shl nsw i64 %16, 2, !dbg !1427
  %18 = tail call i8* @zrealloc(i8* %12, i64 %17) #11, !dbg !1428
  %19 = bitcast i8* %18 to i32*, !dbg !1428
  store i8* %18, i8** %11, align 8, !dbg !1429, !tbaa !1388
  %20 = load i32, i32* %13, align 8, !dbg !1430, !tbaa !1394
  %21 = add nsw i32 %20, 1, !dbg !1430
  store i32 %21, i32* %13, align 8, !dbg !1430, !tbaa !1394
  %22 = sext i32 %20 to i64, !dbg !1431
  %23 = getelementptr inbounds i32, i32* %19, i64 %22, !dbg !1431
  store i32 %1, i32* %23, align 4, !dbg !1432, !tbaa !933
  br label %24, !dbg !1433

; <label>:24:                                     ; preds = %2, %9
  ret void, !dbg !1433
}

; Function Attrs: noredzone nounwind
define dso_local i32 @commandFlagsFromString(i8*) local_unnamed_addr #0 !dbg !1434 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*, !dbg !1449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #6, !dbg !1449
  %4 = tail call i64 @strlen(i8* %0) #11, !dbg !1451
  %5 = call i8** @sdssplitlen(i8* %0, i64 %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1, i32* nonnull %2) #11, !dbg !1453
  %6 = load i32, i32* %2, align 4, !dbg !1456, !tbaa !933
  %7 = icmp sgt i32 %6, 0, !dbg !1457
  br i1 %7, label %8, label %86, !dbg !1458

; <label>:8:                                      ; preds = %1
  %9 = sext i32 %6 to i64, !dbg !1458
  br label %10, !dbg !1458

; <label>:10:                                     ; preds = %8, %79
  %11 = phi i64 [ 0, %8 ], [ %81, %79 ]
  %12 = phi i32 [ 0, %8 ], [ %82, %79 ]
  %13 = phi i32 [ 0, %8 ], [ %80, %79 ]
  %14 = getelementptr inbounds i8*, i8** %5, i64 %11, !dbg !1459
  %15 = load i8*, i8** %14, align 8, !dbg !1459, !tbaa !902
  %16 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !1461
  %17 = icmp eq i32 %16, 0, !dbg !1461
  br i1 %17, label %18, label %20, !dbg !1463

; <label>:18:                                     ; preds = %10
  %19 = or i32 %13, 1, !dbg !1464
  br label %79, !dbg !1465

; <label>:20:                                     ; preds = %10
  %21 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #13, !dbg !1466
  %22 = icmp eq i32 %21, 0, !dbg !1466
  br i1 %22, label %23, label %25, !dbg !1468

; <label>:23:                                     ; preds = %20
  %24 = or i32 %13, 2, !dbg !1469
  br label %79, !dbg !1470

; <label>:25:                                     ; preds = %20
  %26 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !1471
  %27 = icmp eq i32 %26, 0, !dbg !1471
  br i1 %27, label %28, label %30, !dbg !1473

; <label>:28:                                     ; preds = %25
  %29 = or i32 %13, 16, !dbg !1474
  br label %79, !dbg !1475

; <label>:30:                                     ; preds = %25
  %31 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !1476
  %32 = icmp eq i32 %31, 0, !dbg !1476
  br i1 %32, label %33, label %35, !dbg !1478

; <label>:33:                                     ; preds = %30
  %34 = or i32 %13, 4, !dbg !1479
  br label %79, !dbg !1480

; <label>:35:                                     ; preds = %30
  %36 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0)) #13, !dbg !1481
  %37 = icmp eq i32 %36, 0, !dbg !1481
  br i1 %37, label %38, label %40, !dbg !1483

; <label>:38:                                     ; preds = %35
  %39 = or i32 %13, 64, !dbg !1484
  br label %79, !dbg !1485

; <label>:40:                                     ; preds = %35
  %41 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #13, !dbg !1486
  %42 = icmp eq i32 %41, 0, !dbg !1486
  br i1 %42, label %43, label %45, !dbg !1488

; <label>:43:                                     ; preds = %40
  %44 = or i32 %13, 512, !dbg !1489
  br label %79, !dbg !1490

; <label>:45:                                     ; preds = %40
  %46 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #13, !dbg !1491
  %47 = icmp eq i32 %46, 0, !dbg !1491
  br i1 %47, label %48, label %50, !dbg !1493

; <label>:48:                                     ; preds = %45
  %49 = or i32 %13, 32, !dbg !1494
  br label %79, !dbg !1495

; <label>:50:                                     ; preds = %45
  %51 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #13, !dbg !1496
  %52 = icmp eq i32 %51, 0, !dbg !1496
  br i1 %52, label %53, label %55, !dbg !1498

; <label>:53:                                     ; preds = %50
  %54 = or i32 %13, 128, !dbg !1499
  br label %79, !dbg !1500

; <label>:55:                                     ; preds = %50
  %56 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)) #13, !dbg !1501
  %57 = icmp eq i32 %56, 0, !dbg !1501
  br i1 %57, label %58, label %60, !dbg !1503

; <label>:58:                                     ; preds = %55
  %59 = or i32 %13, 1024, !dbg !1504
  br label %79, !dbg !1505

; <label>:60:                                     ; preds = %55
  %61 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #13, !dbg !1506
  %62 = icmp eq i32 %61, 0, !dbg !1506
  br i1 %62, label %63, label %65, !dbg !1508

; <label>:63:                                     ; preds = %60
  %64 = or i32 %13, 2048, !dbg !1509
  br label %79, !dbg !1510

; <label>:65:                                     ; preds = %60
  %66 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #13, !dbg !1511
  %67 = icmp eq i32 %66, 0, !dbg !1511
  br i1 %67, label %68, label %70, !dbg !1513

; <label>:68:                                     ; preds = %65
  %69 = or i32 %13, 8192, !dbg !1514
  br label %79, !dbg !1515

; <label>:70:                                     ; preds = %65
  %71 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0)) #13, !dbg !1516
  %72 = icmp eq i32 %71, 0, !dbg !1516
  br i1 %72, label %73, label %75, !dbg !1518

; <label>:73:                                     ; preds = %70
  %74 = or i32 %13, 16384, !dbg !1519
  br label %79, !dbg !1520

; <label>:75:                                     ; preds = %70
  %76 = call i32 @strcasecmp(i8* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !1521
  %77 = icmp eq i32 %76, 0, !dbg !1521
  %78 = or i32 %13, 32768, !dbg !1523
  br i1 %77, label %79, label %84

; <label>:79:                                     ; preds = %18, %28, %38, %48, %58, %68, %73, %63, %53, %43, %33, %23, %75
  %80 = phi i32 [ %78, %75 ], [ %19, %18 ], [ %24, %23 ], [ %29, %28 ], [ %34, %33 ], [ %39, %38 ], [ %44, %43 ], [ %49, %48 ], [ %54, %53 ], [ %59, %58 ], [ %64, %63 ], [ %69, %68 ], [ %74, %73 ]
  %81 = add nuw nsw i64 %11, 1, !dbg !1524
  %82 = add nuw nsw i32 %12, 1, !dbg !1524
  %83 = icmp slt i64 %81, %9, !dbg !1457
  br i1 %83, label %10, label %86, !dbg !1458, !llvm.loop !1525

; <label>:84:                                     ; preds = %75
  %85 = trunc i64 %11 to i32
  br label %86, !dbg !1527

; <label>:86:                                     ; preds = %79, %84, %1
  %87 = phi i32 [ 0, %1 ], [ %85, %84 ], [ %82, %79 ], !dbg !1528
  %88 = phi i32 [ 0, %1 ], [ %13, %84 ], [ %80, %79 ], !dbg !1450
  call void @sdsfreesplitres(i8** %5, i32 %6) #11, !dbg !1527
  %89 = load i32, i32* %2, align 4, !dbg !1529, !tbaa !933
  %90 = icmp eq i32 %87, %89, !dbg !1531
  %91 = select i1 %90, i32 %88, i32 -1, !dbg !1532
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #6, !dbg !1533
  ret i32 %91, !dbg !1533
}

; Function Attrs: noredzone
declare dso_local i8** @sdssplitlen(i8*, i64, i8*, i32, i32*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @sdsfreesplitres(i8**, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CreateCommand(%struct.RedisModuleCtx* nocapture readonly, i8*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i8*, i32, i32, i32) #0 !dbg !1534 {
  %8 = icmp eq i8* %3, null, !dbg !1556
  br i1 %8, label %18, label %9, !dbg !1556

; <label>:9:                                      ; preds = %7
  %10 = tail call i32 @commandFlagsFromString(i8* nonnull %3) #12, !dbg !1557
  %11 = icmp eq i32 %10, -1, !dbg !1559
  br i1 %11, label %61, label %12, !dbg !1561

; <label>:12:                                     ; preds = %9
  %13 = trunc i32 %10 to i16, !dbg !1562
  %14 = icmp slt i16 %13, 0, !dbg !1562
  %15 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !1564
  %16 = icmp ne i32 %15, 0, !dbg !1565
  %17 = and i1 %14, %16, !dbg !1566
  br i1 %17, label %61, label %18, !dbg !1566

; <label>:18:                                     ; preds = %7, %12
  %19 = phi i32 [ %10, %12 ], [ 0, %7 ]
  %20 = tail call i8* @sdsnew(i8* %1) #11, !dbg !1567
  %21 = tail call %struct.redisCommand* @lookupCommand(i8* %20) #11, !dbg !1569
  %22 = icmp eq %struct.redisCommand* %21, null, !dbg !1571
  br i1 %22, label %24, label %23, !dbg !1572

; <label>:23:                                     ; preds = %18
  tail call void @sdsfree(i8* %20) #11, !dbg !1573
  br label %61, !dbg !1575

; <label>:24:                                     ; preds = %18
  %25 = tail call i8* @zmalloc(i64 24) #11, !dbg !1576
  %26 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !1578
  %27 = bitcast %struct.RedisModule** %26 to i64*, !dbg !1578
  %28 = load i64, i64* %27, align 8, !dbg !1578, !tbaa !1156
  %29 = bitcast i8* %25 to i64*, !dbg !1579
  store i64 %28, i64* %29, align 8, !dbg !1579, !tbaa !1307
  %30 = getelementptr inbounds i8, i8* %25, i64 8, !dbg !1580
  %31 = bitcast i8* %30 to i32 (%struct.RedisModuleCtx*, i8**, i32)**, !dbg !1580
  store i32 (%struct.RedisModuleCtx*, i8**, i32)* %2, i32 (%struct.RedisModuleCtx*, i8**, i32)** %31, align 8, !dbg !1581, !tbaa !1314
  %32 = tail call i8* @zmalloc(i64 80) #11, !dbg !1582
  %33 = getelementptr inbounds i8, i8* %25, i64 16, !dbg !1583
  %34 = bitcast i8* %33 to i8**, !dbg !1584
  store i8* %32, i8** %34, align 8, !dbg !1584, !tbaa !1585
  %35 = bitcast i8* %32 to i8**, !dbg !1586
  store i8* %20, i8** %35, align 8, !dbg !1587, !tbaa !1588
  %36 = getelementptr inbounds i8, i8* %32, i64 8, !dbg !1589
  %37 = bitcast i8* %36 to void (%struct.client*)**, !dbg !1589
  store void (%struct.client*)* @RedisModuleCommandDispatcher, void (%struct.client*)** %37, align 8, !dbg !1590, !tbaa !1591
  %38 = getelementptr inbounds i8, i8* %32, i64 16, !dbg !1592
  %39 = bitcast i8* %38 to i32*, !dbg !1592
  store i32 -1, i32* %39, align 8, !dbg !1593, !tbaa !1594
  %40 = or i32 %19, 8, !dbg !1595
  %41 = getelementptr inbounds i8, i8* %32, i64 32, !dbg !1596
  %42 = bitcast i8* %41 to i32*, !dbg !1596
  store i32 %40, i32* %42, align 8, !dbg !1597, !tbaa !1598
  %43 = getelementptr inbounds i8, i8* %32, i64 40, !dbg !1599
  %44 = bitcast i8* %43 to i8**, !dbg !1600
  store i8* %25, i8** %44, align 8, !dbg !1600, !tbaa !1301
  %45 = getelementptr inbounds i8, i8* %32, i64 48, !dbg !1601
  %46 = bitcast i8* %45 to i32*, !dbg !1601
  store i32 %4, i32* %46, align 8, !dbg !1602, !tbaa !1603
  %47 = getelementptr inbounds i8, i8* %32, i64 52, !dbg !1604
  %48 = bitcast i8* %47 to i32*, !dbg !1604
  store i32 %5, i32* %48, align 4, !dbg !1605, !tbaa !1606
  %49 = getelementptr inbounds i8, i8* %32, i64 56, !dbg !1607
  %50 = bitcast i8* %49 to i32*, !dbg !1607
  store i32 %6, i32* %50, align 8, !dbg !1608, !tbaa !1609
  %51 = getelementptr inbounds i8, i8* %32, i64 64, !dbg !1610
  %52 = bitcast i8* %51 to <2 x i64>*, !dbg !1611
  store <2 x i64> zeroinitializer, <2 x i64>* %52, align 8, !dbg !1611, !tbaa !1612
  %53 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !1613, !tbaa !1614
  %54 = tail call i8* @sdsdup(i8* %20) #11, !dbg !1615
  %55 = load i8*, i8** %34, align 8, !dbg !1616, !tbaa !1585
  %56 = tail call i32 @dictAdd(%struct.dict* %53, i8* %54, i8* %55) #11, !dbg !1617
  %57 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9), align 8, !dbg !1618, !tbaa !1619
  %58 = tail call i8* @sdsdup(i8* %20) #11, !dbg !1620
  %59 = load i8*, i8** %34, align 8, !dbg !1621, !tbaa !1585
  %60 = tail call i32 @dictAdd(%struct.dict* %57, i8* %58, i8* %59) #11, !dbg !1622
  br label %61, !dbg !1623

; <label>:61:                                     ; preds = %23, %24, %12, %9
  %62 = phi i32 [ 1, %9 ], [ 1, %12 ], [ 1, %23 ], [ 0, %24 ], !dbg !1624
  ret i32 %62, !dbg !1625
}

; Function Attrs: noredzone
declare dso_local i8* @sdsnew(i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisCommand* @lookupCommand(i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @sdsfree(i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @dictAdd(%struct.dict*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @sdsdup(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SetModuleAttribs(%struct.RedisModuleCtx* nocapture, i8*, i32, i32) #0 !dbg !1626 {
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !1639
  %6 = load %struct.RedisModule*, %struct.RedisModule** %5, align 8, !dbg !1639, !tbaa !1156
  %7 = icmp eq %struct.RedisModule* %6, null, !dbg !1641
  br i1 %7, label %8, label %32, !dbg !1642

; <label>:8:                                      ; preds = %4
  %9 = tail call i8* @zmalloc(i64 64) #11, !dbg !1643
  %10 = tail call i8* @sdsnew(i8* %1) #11, !dbg !1645
  %11 = getelementptr inbounds i8, i8* %9, i64 8, !dbg !1646
  %12 = bitcast i8* %11 to i8**, !dbg !1646
  store i8* %10, i8** %12, align 8, !dbg !1647, !tbaa !1158
  %13 = getelementptr inbounds i8, i8* %9, i64 16, !dbg !1648
  %14 = bitcast i8* %13 to i32*, !dbg !1648
  store i32 %2, i32* %14, align 8, !dbg !1649, !tbaa !1650
  %15 = getelementptr inbounds i8, i8* %9, i64 20, !dbg !1651
  %16 = bitcast i8* %15 to i32*, !dbg !1651
  store i32 %3, i32* %16, align 4, !dbg !1652, !tbaa !1653
  %17 = tail call %struct.list* @listCreate() #11, !dbg !1654
  %18 = getelementptr inbounds i8, i8* %9, i64 24, !dbg !1655
  %19 = bitcast i8* %18 to %struct.list**, !dbg !1655
  store %struct.list* %17, %struct.list** %19, align 8, !dbg !1656, !tbaa !1657
  %20 = tail call %struct.list* @listCreate() #11, !dbg !1658
  %21 = getelementptr inbounds i8, i8* %9, i64 32, !dbg !1659
  %22 = bitcast i8* %21 to %struct.list**, !dbg !1659
  store %struct.list* %20, %struct.list** %22, align 8, !dbg !1660, !tbaa !1661
  %23 = tail call %struct.list* @listCreate() #11, !dbg !1662
  %24 = getelementptr inbounds i8, i8* %9, i64 40, !dbg !1663
  %25 = bitcast i8* %24 to %struct.list**, !dbg !1663
  store %struct.list* %23, %struct.list** %25, align 8, !dbg !1664, !tbaa !1665
  %26 = tail call %struct.list* @listCreate() #11, !dbg !1666
  %27 = getelementptr inbounds i8, i8* %9, i64 48, !dbg !1667
  %28 = bitcast i8* %27 to %struct.list**, !dbg !1667
  store %struct.list* %26, %struct.list** %28, align 8, !dbg !1668, !tbaa !1669
  %29 = getelementptr inbounds i8, i8* %9, i64 56, !dbg !1670
  %30 = bitcast i8* %29 to i32*, !dbg !1670
  store i32 0, i32* %30, align 8, !dbg !1671, !tbaa !1672
  %31 = bitcast %struct.RedisModule** %5 to i8**, !dbg !1673
  store i8* %9, i8** %31, align 8, !dbg !1673, !tbaa !1156
  br label %32, !dbg !1674

; <label>:32:                                     ; preds = %4, %8
  ret void, !dbg !1674
}

; Function Attrs: noredzone
declare dso_local %struct.list* @listCreate() local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_IsModuleNameBusy(i8*) #0 !dbg !1675 {
  %2 = tail call i8* @sdsnew(i8* %0) #11, !dbg !1683
  %3 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !1685, !tbaa !902
  %4 = tail call %struct.dictEntry* @dictFind(%struct.dict* %3, i8* %2) #11, !dbg !1686
  tail call void @sdsfree(i8* %2) #11, !dbg !1688
  %5 = icmp ne %struct.dictEntry* %4, null, !dbg !1689
  %6 = zext i1 %5 to i32, !dbg !1689
  ret i32 %6, !dbg !1690
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_Milliseconds() #0 !dbg !1691 {
  %1 = tail call i64 @mstime() #11, !dbg !1694
  ret i64 %1, !dbg !1695
}

; Function Attrs: noredzone
declare dso_local i64 @mstime() local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_AutoMemory(%struct.RedisModuleCtx* nocapture) #0 !dbg !1696 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1700
  %3 = load i32, i32* %2, align 8, !dbg !1701, !tbaa !1164
  %4 = or i32 %3, 2, !dbg !1701
  store i32 %4, i32* %2, align 8, !dbg !1701, !tbaa !1164
  ret void, !dbg !1702
}

; Function Attrs: noredzone nounwind
define dso_local void @autoMemoryAdd(%struct.RedisModuleCtx* nocapture, i32, i8*) local_unnamed_addr #0 !dbg !1703 {
  %4 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1713
  %5 = load i32, i32* %4, align 8, !dbg !1713, !tbaa !1164
  %6 = and i32 %5, 2, !dbg !1715
  %7 = icmp eq i32 %6, 0, !dbg !1715
  br i1 %7, label %36, label %8, !dbg !1716

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !1717
  %10 = load i32, i32* %9, align 4, !dbg !1717, !tbaa !1187
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !1719
  %12 = load i32, i32* %11, align 8, !dbg !1719, !tbaa !1238
  %13 = icmp eq i32 %10, %12, !dbg !1720
  br i1 %13, label %17, label %14, !dbg !1721

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %16 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %15, align 8, !dbg !1722, !tbaa !1191
  br label %29, !dbg !1721

; <label>:17:                                     ; preds = %8
  %18 = shl nsw i32 %10, 1, !dbg !1723
  %19 = icmp slt i32 %10, 8, !dbg !1725
  %20 = select i1 %19, i32 16, i32 %18, !dbg !1727
  store i32 %20, i32* %11, align 8, !dbg !1728, !tbaa !1238
  %21 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !1729
  %22 = bitcast %struct.AutoMemEntry** %21 to i8**, !dbg !1729
  %23 = load i8*, i8** %22, align 8, !dbg !1729, !tbaa !1191
  %24 = sext i32 %20 to i64, !dbg !1730
  %25 = shl nsw i64 %24, 4, !dbg !1731
  %26 = tail call i8* @zrealloc(i8* %23, i64 %25) #11, !dbg !1732
  store i8* %26, i8** %22, align 8, !dbg !1733, !tbaa !1191
  %27 = bitcast i8* %26 to %struct.AutoMemEntry*, !dbg !1734
  %28 = load i32, i32* %9, align 4, !dbg !1735, !tbaa !1187
  br label %29, !dbg !1734

; <label>:29:                                     ; preds = %14, %17
  %30 = phi i32 [ %10, %14 ], [ %28, %17 ], !dbg !1735
  %31 = phi %struct.AutoMemEntry* [ %16, %14 ], [ %27, %17 ], !dbg !1722
  %32 = sext i32 %30 to i64, !dbg !1736
  %33 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %31, i64 %32, i32 1, !dbg !1737
  store i32 %1, i32* %33, align 8, !dbg !1738, !tbaa !1197
  %34 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %31, i64 %32, i32 0, !dbg !1739
  store i8* %2, i8** %34, align 8, !dbg !1740, !tbaa !1193
  %35 = add nsw i32 %30, 1, !dbg !1741
  store i32 %35, i32* %9, align 4, !dbg !1741, !tbaa !1187
  br label %36, !dbg !1742

; <label>:36:                                     ; preds = %3, %29
  ret void, !dbg !1742
}

; Function Attrs: noredzone nounwind
define dso_local i32 @autoMemoryFreed(%struct.RedisModuleCtx* nocapture, i32, i8* readnone) local_unnamed_addr #0 !dbg !1743 {
  %4 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1763
  %5 = load i32, i32* %4, align 8, !dbg !1763, !tbaa !1164
  %6 = and i32 %5, 2, !dbg !1765
  %7 = icmp eq i32 %6, 0, !dbg !1765
  br i1 %7, label %50, label %8, !dbg !1766

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !1767
  %10 = load i32, i32* %9, align 4, !dbg !1767, !tbaa !1187
  %11 = add nsw i32 %10, 1, !dbg !1768
  %12 = sdiv i32 %11, 2, !dbg !1769
  %13 = icmp sgt i32 %10, 0, !dbg !1772
  br i1 %13, label %14, label %50, !dbg !1773

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %16 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %15, align 8, !tbaa !1191
  br label %17, !dbg !1773

; <label>:17:                                     ; preds = %14, %61
  %18 = phi i32 [ 0, %14 ], [ %62, %61 ]
  %19 = xor i32 %18, -1
  %20 = add i32 %10, %19, !dbg !1775
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %16, i64 %21, i32 1
  %23 = load i32, i32* %22, align 8, !dbg !1776, !tbaa !1197
  %24 = sext i32 %20 to i64, !dbg !1779
  %25 = icmp eq i32 %23, %1, !dbg !1780
  br i1 %25, label %26, label %52, !dbg !1781

; <label>:26:                                     ; preds = %17
  %27 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %16, i64 %24, i32 0, !dbg !1782
  %28 = load i8*, i8** %27, align 8, !dbg !1782, !tbaa !1193
  %29 = icmp eq i8* %28, %2, !dbg !1783
  br i1 %29, label %32, label %52, !dbg !1784

; <label>:30:                                     ; preds = %57
  %31 = zext i32 %18 to i64, !dbg !1779
  br label %34, !dbg !1785

; <label>:32:                                     ; preds = %26
  %33 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %16, i64 %24, i32 1, !dbg !1776
  br label %34, !dbg !1785

; <label>:34:                                     ; preds = %32, %30
  %35 = phi i32 [ %18, %30 ], [ %20, %32 ], !dbg !1787
  %36 = phi i64 [ %31, %30 ], [ %24, %32 ], !dbg !1779
  %37 = phi i32* [ %54, %30 ], [ %33, %32 ], !dbg !1776
  store i32 3, i32* %37, align 8, !dbg !1785, !tbaa !1197
  %38 = add nsw i32 %10, -1, !dbg !1788
  %39 = icmp eq i32 %35, %38, !dbg !1790
  br i1 %39, label %48, label %40, !dbg !1791

; <label>:40:                                     ; preds = %34
  %41 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %16, i64 %36, !dbg !1792
  %42 = sext i32 %38 to i64, !dbg !1794
  %43 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %16, i64 %42, !dbg !1794
  %44 = bitcast %struct.AutoMemEntry* %41 to i8*, !dbg !1794
  %45 = bitcast %struct.AutoMemEntry* %43 to i8*, !dbg !1794
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false), !dbg !1794, !tbaa.struct !1795
  %46 = load i32, i32* %9, align 4, !dbg !1796, !tbaa !1187
  %47 = add nsw i32 %46, -1, !dbg !1796
  br label %48, !dbg !1797

; <label>:48:                                     ; preds = %40, %34
  %49 = phi i32 [ %47, %40 ], [ %38, %34 ], !dbg !1796
  store i32 %49, i32* %9, align 4, !dbg !1796, !tbaa !1187
  br label %50

; <label>:50:                                     ; preds = %61, %8, %48, %3
  %51 = phi i32 [ 0, %3 ], [ 1, %48 ], [ 0, %8 ], [ 0, %61 ], !dbg !1798
  ret i32 %51, !dbg !1799

; <label>:52:                                     ; preds = %17, %26
  %53 = zext i32 %18 to i64, !dbg !1779
  %54 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %16, i64 %53, i32 1, !dbg !1776
  %55 = load i32, i32* %54, align 8, !dbg !1776, !tbaa !1197
  %56 = icmp eq i32 %55, %1, !dbg !1780
  br i1 %56, label %57, label %61, !dbg !1781

; <label>:57:                                     ; preds = %52
  %58 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %16, i64 %53, i32 0, !dbg !1782
  %59 = load i8*, i8** %58, align 8, !dbg !1782, !tbaa !1193
  %60 = icmp eq i8* %59, %2, !dbg !1783
  br i1 %60, label %30, label %61, !dbg !1784

; <label>:61:                                     ; preds = %57, %52
  %62 = add nuw nsw i32 %18, 1, !dbg !1800
  %63 = icmp slt i32 %62, %12, !dbg !1772
  br i1 %63, label %17, label %50, !dbg !1773, !llvm.loop !1801
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #3

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeCallReply(%struct.RedisModuleCallReply*) #0 !dbg !1803 {
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 0, !dbg !1827
  %3 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %2, align 8, !dbg !1827, !tbaa !1828
  tail call void @RM_FreeCallReply_Rec(%struct.RedisModuleCallReply* %0, i32 0) #12, !dbg !1831
  %4 = bitcast %struct.RedisModuleCallReply* %0 to i8*, !dbg !1832
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 7, !dbg !1837
  %6 = load i32, i32* %5, align 8, !dbg !1837, !tbaa !1164
  %7 = and i32 %6, 2, !dbg !1838
  %8 = icmp eq i32 %7, 0, !dbg !1838
  br i1 %8, label %62, label %9, !dbg !1839

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 6, !dbg !1840
  %11 = load i32, i32* %10, align 4, !dbg !1840, !tbaa !1187
  %12 = icmp sgt i32 %11, 0, !dbg !1842
  br i1 %12, label %13, label %62, !dbg !1843

; <label>:13:                                     ; preds = %9
  %14 = add nsw i32 %11, 1, !dbg !1844
  %15 = sdiv i32 %14, 2, !dbg !1845
  %16 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 4
  %17 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %16, align 8, !tbaa !1191
  %18 = sext i32 %15 to i64, !dbg !1843
  br label %19, !dbg !1843

; <label>:19:                                     ; preds = %59, %13
  %20 = phi i64 [ %60, %59 ], [ 0, %13 ]
  %21 = trunc i64 %20 to i32, !dbg !1848
  %22 = xor i32 %21, -1, !dbg !1848
  %23 = add i32 %11, %22, !dbg !1848
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %17, i64 %24, i32 1
  %26 = load i32, i32* %25, align 8, !dbg !1849, !tbaa !1197
  %27 = icmp eq i32 %26, 2, !dbg !1851
  br i1 %27, label %28, label %51, !dbg !1852

; <label>:28:                                     ; preds = %19
  %29 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %17, i64 %24, i32 0, !dbg !1853
  %30 = load i8*, i8** %29, align 8, !dbg !1853, !tbaa !1193
  %31 = icmp eq i8* %30, %4, !dbg !1854
  br i1 %31, label %35, label %51, !dbg !1855

; <label>:32:                                     ; preds = %55
  %33 = trunc i64 %20 to i32, !dbg !1841
  %34 = and i64 %20, 4294967295, !dbg !1856
  br label %35, !dbg !1857

; <label>:35:                                     ; preds = %28, %32
  %36 = phi i32 [ %33, %32 ], [ %23, %28 ], !dbg !1858
  %37 = phi i64 [ %34, %32 ], [ %24, %28 ], !dbg !1856
  %38 = phi i32* [ %52, %32 ], [ %25, %28 ], !dbg !1849
  store i32 3, i32* %38, align 8, !dbg !1857, !tbaa !1197
  %39 = add nsw i32 %11, -1, !dbg !1859
  %40 = icmp eq i32 %36, %39, !dbg !1860
  br i1 %40, label %49, label %41, !dbg !1861

; <label>:41:                                     ; preds = %35
  %42 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %17, i64 %37, !dbg !1862
  %43 = sext i32 %39 to i64, !dbg !1863
  %44 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %17, i64 %43, !dbg !1863
  %45 = bitcast %struct.AutoMemEntry* %42 to i8*, !dbg !1863
  %46 = bitcast %struct.AutoMemEntry* %44 to i8*, !dbg !1863
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #6, !dbg !1863, !tbaa.struct !1795
  %47 = load i32, i32* %10, align 4, !dbg !1864, !tbaa !1187
  %48 = add nsw i32 %47, -1, !dbg !1864
  br label %49, !dbg !1865

; <label>:49:                                     ; preds = %41, %35
  %50 = phi i32 [ %48, %41 ], [ %36, %35 ], !dbg !1864
  store i32 %50, i32* %10, align 4, !dbg !1864, !tbaa !1187
  br label %62

; <label>:51:                                     ; preds = %28, %19
  %52 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %17, i64 %20, i32 1, !dbg !1849
  %53 = load i32, i32* %52, align 8, !dbg !1849, !tbaa !1197
  %54 = icmp eq i32 %53, 2, !dbg !1851
  br i1 %54, label %55, label %59, !dbg !1852

; <label>:55:                                     ; preds = %51
  %56 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %17, i64 %20, i32 0, !dbg !1853
  %57 = load i8*, i8** %56, align 8, !dbg !1853, !tbaa !1193
  %58 = icmp eq i8* %57, %4, !dbg !1854
  br i1 %58, label %32, label %59, !dbg !1855

; <label>:59:                                     ; preds = %55, %51
  %60 = add nuw nsw i64 %20, 1, !dbg !1866
  %61 = icmp slt i64 %60, %18, !dbg !1842
  br i1 %61, label %19, label %62, !dbg !1843, !llvm.loop !1801

; <label>:62:                                     ; preds = %59, %1, %9, %49
  ret void, !dbg !1867
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_CloseKey(%struct.RedisModuleKey*) #0 !dbg !1868 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !1874
  br i1 %2, label %85, label %3, !dbg !1876

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !1877
  %5 = load i32, i32* %4, align 8, !dbg !1877, !tbaa !1025
  %6 = and i32 %5, 2, !dbg !1879
  %7 = icmp eq i32 %6, 0, !dbg !1879
  br i1 %7, label %13, label %8, !dbg !1880

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !1881
  %10 = load %struct.redisDb*, %struct.redisDb** %9, align 8, !dbg !1881, !tbaa !1061
  %11 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !1882
  %12 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !1882, !tbaa !1063
  tail call void @signalModifiedKey(%struct.redisDb* %10, %struct.redisObject* %12) #11, !dbg !1883
  br label %13, !dbg !1883

; <label>:13:                                     ; preds = %3, %8
  %14 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !1889
  %15 = load i32, i32* %14, align 4, !dbg !1889, !tbaa !1891
  %16 = icmp eq i32 %15, 1, !dbg !1892
  br i1 %16, label %17, label %19, !dbg !1893

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !1894
  tail call void @zslFreeLexRange(%struct.zlexrangespec* nonnull %18) #11, !dbg !1895
  br label %19, !dbg !1895

; <label>:19:                                     ; preds = %13, %17
  store i32 0, i32* %14, align 4, !dbg !1901, !tbaa !1891
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !1902
  store i8* null, i8** %20, align 8, !dbg !1903, !tbaa !1904
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !1905
  store i32 1, i32* %21, align 8, !dbg !1906, !tbaa !1907
  %22 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !1908
  %23 = load %struct.redisObject*, %struct.redisObject** %22, align 8, !dbg !1908, !tbaa !1063
  tail call void @decrRefCount(%struct.redisObject* %23) #11, !dbg !1909
  %24 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0, !dbg !1910
  %25 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %24, align 8, !dbg !1910, !tbaa !1911
  %26 = bitcast %struct.RedisModuleKey* %0 to i8*, !dbg !1912
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %25, i64 0, i32 7, !dbg !1917
  %28 = load i32, i32* %27, align 8, !dbg !1917, !tbaa !1164
  %29 = and i32 %28, 2, !dbg !1918
  %30 = icmp eq i32 %29, 0, !dbg !1918
  br i1 %30, label %84, label %31, !dbg !1919

; <label>:31:                                     ; preds = %19
  %32 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %25, i64 0, i32 6, !dbg !1920
  %33 = load i32, i32* %32, align 4, !dbg !1920, !tbaa !1187
  %34 = icmp sgt i32 %33, 0, !dbg !1922
  br i1 %34, label %35, label %84, !dbg !1923

; <label>:35:                                     ; preds = %31
  %36 = add nsw i32 %33, 1, !dbg !1924
  %37 = sdiv i32 %36, 2, !dbg !1925
  %38 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %25, i64 0, i32 4
  %39 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %38, align 8, !tbaa !1191
  %40 = sext i32 %37 to i64, !dbg !1923
  br label %41, !dbg !1923

; <label>:41:                                     ; preds = %81, %35
  %42 = phi i64 [ %82, %81 ], [ 0, %35 ]
  %43 = trunc i64 %42 to i32, !dbg !1928
  %44 = xor i32 %43, -1, !dbg !1928
  %45 = add i32 %33, %44, !dbg !1928
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %39, i64 %46, i32 1
  %48 = load i32, i32* %47, align 8, !dbg !1929, !tbaa !1197
  %49 = icmp eq i32 %48, 0, !dbg !1931
  br i1 %49, label %50, label %73, !dbg !1932

; <label>:50:                                     ; preds = %41
  %51 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %39, i64 %46, i32 0, !dbg !1933
  %52 = load i8*, i8** %51, align 8, !dbg !1933, !tbaa !1193
  %53 = icmp eq i8* %52, %26, !dbg !1934
  br i1 %53, label %57, label %73, !dbg !1935

; <label>:54:                                     ; preds = %77
  %55 = trunc i64 %42 to i32, !dbg !1921
  %56 = and i64 %42, 4294967295, !dbg !1936
  br label %57, !dbg !1937

; <label>:57:                                     ; preds = %50, %54
  %58 = phi i32 [ %55, %54 ], [ %45, %50 ], !dbg !1938
  %59 = phi i64 [ %56, %54 ], [ %46, %50 ], !dbg !1936
  %60 = phi i32* [ %74, %54 ], [ %47, %50 ], !dbg !1929
  store i32 3, i32* %60, align 8, !dbg !1937, !tbaa !1197
  %61 = add nsw i32 %33, -1, !dbg !1939
  %62 = icmp eq i32 %58, %61, !dbg !1940
  br i1 %62, label %71, label %63, !dbg !1941

; <label>:63:                                     ; preds = %57
  %64 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %39, i64 %59, !dbg !1942
  %65 = sext i32 %61 to i64, !dbg !1943
  %66 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %39, i64 %65, !dbg !1943
  %67 = bitcast %struct.AutoMemEntry* %64 to i8*, !dbg !1943
  %68 = bitcast %struct.AutoMemEntry* %66 to i8*, !dbg !1943
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 16, i1 false) #6, !dbg !1943, !tbaa.struct !1795
  %69 = load i32, i32* %32, align 4, !dbg !1944, !tbaa !1187
  %70 = add nsw i32 %69, -1, !dbg !1944
  br label %71, !dbg !1945

; <label>:71:                                     ; preds = %63, %57
  %72 = phi i32 [ %70, %63 ], [ %58, %57 ], !dbg !1944
  store i32 %72, i32* %32, align 4, !dbg !1944, !tbaa !1187
  br label %84

; <label>:73:                                     ; preds = %50, %41
  %74 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %39, i64 %42, i32 1, !dbg !1929
  %75 = load i32, i32* %74, align 8, !dbg !1929, !tbaa !1197
  %76 = icmp eq i32 %75, 0, !dbg !1931
  br i1 %76, label %77, label %81, !dbg !1932

; <label>:77:                                     ; preds = %73
  %78 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %39, i64 %42, i32 0, !dbg !1933
  %79 = load i8*, i8** %78, align 8, !dbg !1933, !tbaa !1193
  %80 = icmp eq i8* %79, %26, !dbg !1934
  br i1 %80, label %54, label %81, !dbg !1935

; <label>:81:                                     ; preds = %77, %73
  %82 = add nuw nsw i64 %42, 1, !dbg !1946
  %83 = icmp slt i64 %82, %40, !dbg !1922
  br i1 %83, label %41, label %84, !dbg !1923, !llvm.loop !1801

; <label>:84:                                     ; preds = %81, %19, %31, %71
  tail call void @zfree(i8* %26) #11, !dbg !1947
  br label %85, !dbg !1948

; <label>:85:                                     ; preds = %1, %84
  ret void, !dbg !1948
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeDict(%struct.RedisModuleCtx*, %struct.RedisModuleDict*) #0 !dbg !1210 {
  %3 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !1951
  %4 = bitcast %struct.RedisModuleDict* %1 to i8*, !dbg !1953
  br i1 %3, label %63, label %5, !dbg !1954

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1959
  %7 = load i32, i32* %6, align 8, !dbg !1959, !tbaa !1164
  %8 = and i32 %7, 2, !dbg !1960
  %9 = icmp eq i32 %8, 0, !dbg !1960
  br i1 %9, label %63, label %10, !dbg !1961

; <label>:10:                                     ; preds = %5
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !1962
  %12 = load i32, i32* %11, align 4, !dbg !1962, !tbaa !1187
  %13 = icmp sgt i32 %12, 0, !dbg !1964
  br i1 %13, label %14, label %63, !dbg !1965

; <label>:14:                                     ; preds = %10
  %15 = add nsw i32 %12, 1, !dbg !1966
  %16 = sdiv i32 %15, 2, !dbg !1967
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %18 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %17, align 8, !tbaa !1191
  %19 = sext i32 %16 to i64, !dbg !1965
  br label %20, !dbg !1965

; <label>:20:                                     ; preds = %60, %14
  %21 = phi i64 [ %61, %60 ], [ 0, %14 ]
  %22 = trunc i64 %21 to i32, !dbg !1970
  %23 = xor i32 %22, -1, !dbg !1970
  %24 = add i32 %12, %23, !dbg !1970
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %25, i32 1
  %27 = load i32, i32* %26, align 8, !dbg !1971, !tbaa !1197
  %28 = icmp eq i32 %27, 4, !dbg !1973
  br i1 %28, label %29, label %52, !dbg !1974

; <label>:29:                                     ; preds = %20
  %30 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %25, i32 0, !dbg !1975
  %31 = load i8*, i8** %30, align 8, !dbg !1975, !tbaa !1193
  %32 = icmp eq i8* %31, %4, !dbg !1976
  br i1 %32, label %36, label %52, !dbg !1977

; <label>:33:                                     ; preds = %56
  %34 = trunc i64 %21 to i32, !dbg !1963
  %35 = and i64 %21, 4294967295, !dbg !1978
  br label %36, !dbg !1979

; <label>:36:                                     ; preds = %29, %33
  %37 = phi i32 [ %34, %33 ], [ %24, %29 ], !dbg !1980
  %38 = phi i64 [ %35, %33 ], [ %25, %29 ], !dbg !1978
  %39 = phi i32* [ %53, %33 ], [ %26, %29 ], !dbg !1971
  store i32 3, i32* %39, align 8, !dbg !1979, !tbaa !1197
  %40 = add nsw i32 %12, -1, !dbg !1981
  %41 = icmp eq i32 %37, %40, !dbg !1982
  br i1 %41, label %50, label %42, !dbg !1983

; <label>:42:                                     ; preds = %36
  %43 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %38, !dbg !1984
  %44 = sext i32 %40 to i64, !dbg !1985
  %45 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %44, !dbg !1985
  %46 = bitcast %struct.AutoMemEntry* %43 to i8*, !dbg !1985
  %47 = bitcast %struct.AutoMemEntry* %45 to i8*, !dbg !1985
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #6, !dbg !1985, !tbaa.struct !1795
  %48 = load i32, i32* %11, align 4, !dbg !1986, !tbaa !1187
  %49 = add nsw i32 %48, -1, !dbg !1986
  br label %50, !dbg !1987

; <label>:50:                                     ; preds = %42, %36
  %51 = phi i32 [ %49, %42 ], [ %37, %36 ], !dbg !1986
  store i32 %51, i32* %11, align 4, !dbg !1986, !tbaa !1187
  br label %63

; <label>:52:                                     ; preds = %29, %20
  %53 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %21, i32 1, !dbg !1971
  %54 = load i32, i32* %53, align 8, !dbg !1971, !tbaa !1197
  %55 = icmp eq i32 %54, 4, !dbg !1973
  br i1 %55, label %56, label %60, !dbg !1974

; <label>:56:                                     ; preds = %52
  %57 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %21, i32 0, !dbg !1975
  %58 = load i8*, i8** %57, align 8, !dbg !1975, !tbaa !1193
  %59 = icmp eq i8* %58, %4, !dbg !1976
  br i1 %59, label %33, label %60, !dbg !1977

; <label>:60:                                     ; preds = %56, %52
  %61 = add nuw nsw i64 %21, 1, !dbg !1988
  %62 = icmp slt i64 %61, %19, !dbg !1964
  br i1 %62, label %20, label %63, !dbg !1965, !llvm.loop !1801

; <label>:63:                                     ; preds = %60, %2, %50, %10, %5
  %64 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %1, i64 0, i32 0, !dbg !1989
  %65 = load %struct.rax*, %struct.rax** %64, align 8, !dbg !1989, !tbaa !1224
  tail call void @raxFree(%struct.rax* %65) #11, !dbg !1990
  tail call void @zfree(i8* %4) #11, !dbg !1991
  ret void, !dbg !1992
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateString(%struct.RedisModuleCtx*, i8*, i64) #0 !dbg !1993 {
  %4 = tail call %struct.redisObject* @createStringObject(i8* %1, i64 %2) #11, !dbg !2004
  %5 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2006
  br i1 %5, label %40, label %6, !dbg !2008

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2013
  %8 = load i32, i32* %7, align 8, !dbg !2013, !tbaa !1164
  %9 = and i32 %8, 2, !dbg !2014
  %10 = icmp eq i32 %9, 0, !dbg !2014
  br i1 %10, label %40, label %11, !dbg !2015

; <label>:11:                                     ; preds = %6
  %12 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !2016
  %13 = load i32, i32* %12, align 4, !dbg !2016, !tbaa !1187
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !2017
  %15 = load i32, i32* %14, align 8, !dbg !2017, !tbaa !1238
  %16 = icmp eq i32 %13, %15, !dbg !2018
  br i1 %16, label %20, label %17, !dbg !2019

; <label>:17:                                     ; preds = %11
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %19 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %18, align 8, !dbg !2020, !tbaa !1191
  br label %32, !dbg !2019

; <label>:20:                                     ; preds = %11
  %21 = shl nsw i32 %13, 1, !dbg !2021
  %22 = icmp slt i32 %13, 8, !dbg !2022
  %23 = select i1 %22, i32 16, i32 %21, !dbg !2023
  store i32 %23, i32* %14, align 8, !dbg !2024, !tbaa !1238
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !2025
  %25 = bitcast %struct.AutoMemEntry** %24 to i8**, !dbg !2025
  %26 = load i8*, i8** %25, align 8, !dbg !2025, !tbaa !1191
  %27 = sext i32 %23 to i64, !dbg !2026
  %28 = shl nsw i64 %27, 4, !dbg !2027
  %29 = tail call i8* @zrealloc(i8* %26, i64 %28) #11, !dbg !2028
  store i8* %29, i8** %25, align 8, !dbg !2029, !tbaa !1191
  %30 = bitcast i8* %29 to %struct.AutoMemEntry*, !dbg !2030
  %31 = load i32, i32* %12, align 4, !dbg !2031, !tbaa !1187
  br label %32, !dbg !2030

; <label>:32:                                     ; preds = %20, %17
  %33 = phi i32 [ %13, %17 ], [ %31, %20 ], !dbg !2031
  %34 = phi %struct.AutoMemEntry* [ %19, %17 ], [ %30, %20 ], !dbg !2020
  %35 = sext i32 %33 to i64, !dbg !2032
  %36 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %34, i64 %35, i32 1, !dbg !2033
  store i32 1, i32* %36, align 8, !dbg !2034, !tbaa !1197
  %37 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %34, i64 %35, i32 0, !dbg !2035
  %38 = bitcast i8** %37 to %struct.redisObject**, !dbg !2036
  store %struct.redisObject* %4, %struct.redisObject** %38, align 8, !dbg !2036, !tbaa !1193
  %39 = add nsw i32 %33, 1, !dbg !2037
  store i32 %39, i32* %12, align 4, !dbg !2037, !tbaa !1187
  br label %40, !dbg !2038

; <label>:40:                                     ; preds = %32, %6, %3
  ret %struct.redisObject* %4, !dbg !2039
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateStringPrintf(%struct.RedisModuleCtx*, i8*, ...) #0 !dbg !2040 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = tail call i8* @sdsempty() #11, !dbg !2062
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !2064
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6, !dbg !2064
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !2066
  call void @llvm.va_start(i8* nonnull %5), !dbg !2066
  %7 = call i8* @sdscatvprintf(i8* %4, i8* %1, %struct.__va_list_tag* nonnull %6) #11, !dbg !2067
  call void @llvm.va_end(i8* nonnull %5), !dbg !2068
  %8 = call %struct.redisObject* @createObject(i32 0, i8* %7) #11, !dbg !2069
  %9 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2071
  br i1 %9, label %44, label %10, !dbg !2073

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2078
  %12 = load i32, i32* %11, align 8, !dbg !2078, !tbaa !1164
  %13 = and i32 %12, 2, !dbg !2079
  %14 = icmp eq i32 %13, 0, !dbg !2079
  br i1 %14, label %44, label %15, !dbg !2080

; <label>:15:                                     ; preds = %10
  %16 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !2081
  %17 = load i32, i32* %16, align 4, !dbg !2081, !tbaa !1187
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !2082
  %19 = load i32, i32* %18, align 8, !dbg !2082, !tbaa !1238
  %20 = icmp eq i32 %17, %19, !dbg !2083
  br i1 %20, label %24, label %21, !dbg !2084

; <label>:21:                                     ; preds = %15
  %22 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %23 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %22, align 8, !dbg !2085, !tbaa !1191
  br label %36, !dbg !2084

; <label>:24:                                     ; preds = %15
  %25 = shl nsw i32 %17, 1, !dbg !2086
  %26 = icmp slt i32 %17, 8, !dbg !2087
  %27 = select i1 %26, i32 16, i32 %25, !dbg !2088
  store i32 %27, i32* %18, align 8, !dbg !2089, !tbaa !1238
  %28 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !2090
  %29 = bitcast %struct.AutoMemEntry** %28 to i8**, !dbg !2090
  %30 = load i8*, i8** %29, align 8, !dbg !2090, !tbaa !1191
  %31 = sext i32 %27 to i64, !dbg !2091
  %32 = shl nsw i64 %31, 4, !dbg !2092
  %33 = call i8* @zrealloc(i8* %30, i64 %32) #11, !dbg !2093
  store i8* %33, i8** %29, align 8, !dbg !2094, !tbaa !1191
  %34 = bitcast i8* %33 to %struct.AutoMemEntry*, !dbg !2095
  %35 = load i32, i32* %16, align 4, !dbg !2096, !tbaa !1187
  br label %36, !dbg !2095

; <label>:36:                                     ; preds = %24, %21
  %37 = phi i32 [ %17, %21 ], [ %35, %24 ], !dbg !2096
  %38 = phi %struct.AutoMemEntry* [ %23, %21 ], [ %34, %24 ], !dbg !2085
  %39 = sext i32 %37 to i64, !dbg !2097
  %40 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %38, i64 %39, i32 1, !dbg !2098
  store i32 1, i32* %40, align 8, !dbg !2099, !tbaa !1197
  %41 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %38, i64 %39, i32 0, !dbg !2100
  %42 = bitcast i8** %41 to %struct.redisObject**, !dbg !2101
  store %struct.redisObject* %8, %struct.redisObject** %42, align 8, !dbg !2101, !tbaa !1193
  %43 = add nsw i32 %37, 1, !dbg !2102
  store i32 %43, i32* %16, align 4, !dbg !2102, !tbaa !1187
  br label %44, !dbg !2103

; <label>:44:                                     ; preds = %36, %10, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6, !dbg !2104
  ret %struct.redisObject* %8, !dbg !2105
}

; Function Attrs: noredzone
declare dso_local i8* @sdsempty() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: noredzone
declare dso_local i8* @sdscatvprintf(i8*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createObject(i32, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateStringFromLongLong(%struct.RedisModuleCtx*, i64) #0 !dbg !2106 {
  %3 = alloca [21 x i8], align 16
  %4 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 0, !dbg !2119
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %4) #6, !dbg !2119
  %5 = call i32 @ll2string(i8* nonnull %4, i64 21, i64 %1) #11, !dbg !2121
  %6 = sext i32 %5 to i64, !dbg !2121
  %7 = call %struct.redisObject* @createStringObject(i8* nonnull %4, i64 %6) #11, !dbg !2127
  %8 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2129
  br i1 %8, label %43, label %9, !dbg !2130

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2135
  %11 = load i32, i32* %10, align 8, !dbg !2135, !tbaa !1164
  %12 = and i32 %11, 2, !dbg !2136
  %13 = icmp eq i32 %12, 0, !dbg !2136
  br i1 %13, label %43, label %14, !dbg !2137

; <label>:14:                                     ; preds = %9
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !2138
  %16 = load i32, i32* %15, align 4, !dbg !2138, !tbaa !1187
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !2139
  %18 = load i32, i32* %17, align 8, !dbg !2139, !tbaa !1238
  %19 = icmp eq i32 %16, %18, !dbg !2140
  br i1 %19, label %23, label %20, !dbg !2141

; <label>:20:                                     ; preds = %14
  %21 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %22 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %21, align 8, !dbg !2142, !tbaa !1191
  br label %35, !dbg !2141

; <label>:23:                                     ; preds = %14
  %24 = shl nsw i32 %16, 1, !dbg !2143
  %25 = icmp slt i32 %16, 8, !dbg !2144
  %26 = select i1 %25, i32 16, i32 %24, !dbg !2145
  store i32 %26, i32* %17, align 8, !dbg !2146, !tbaa !1238
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !2147
  %28 = bitcast %struct.AutoMemEntry** %27 to i8**, !dbg !2147
  %29 = load i8*, i8** %28, align 8, !dbg !2147, !tbaa !1191
  %30 = sext i32 %26 to i64, !dbg !2148
  %31 = shl nsw i64 %30, 4, !dbg !2149
  %32 = call i8* @zrealloc(i8* %29, i64 %31) #11, !dbg !2150
  store i8* %32, i8** %28, align 8, !dbg !2151, !tbaa !1191
  %33 = bitcast i8* %32 to %struct.AutoMemEntry*, !dbg !2152
  %34 = load i32, i32* %15, align 4, !dbg !2153, !tbaa !1187
  br label %35, !dbg !2152

; <label>:35:                                     ; preds = %23, %20
  %36 = phi i32 [ %16, %20 ], [ %34, %23 ], !dbg !2153
  %37 = phi %struct.AutoMemEntry* [ %22, %20 ], [ %33, %23 ], !dbg !2142
  %38 = sext i32 %36 to i64, !dbg !2154
  %39 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %37, i64 %38, i32 1, !dbg !2155
  store i32 1, i32* %39, align 8, !dbg !2156, !tbaa !1197
  %40 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %37, i64 %38, i32 0, !dbg !2157
  %41 = bitcast i8** %40 to %struct.redisObject**, !dbg !2158
  store %struct.redisObject* %7, %struct.redisObject** %41, align 8, !dbg !2158, !tbaa !1193
  %42 = add nsw i32 %36, 1, !dbg !2159
  store i32 %42, i32* %15, align 4, !dbg !2159, !tbaa !1187
  br label %43, !dbg !2160

; <label>:43:                                     ; preds = %2, %9, %35
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %4) #6, !dbg !2161
  ret %struct.redisObject* %7, !dbg !2162
}

; Function Attrs: noredzone
declare dso_local i32 @ll2string(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateStringFromString(%struct.RedisModuleCtx*, %struct.redisObject*) #0 !dbg !2163 {
  %3 = tail call %struct.redisObject* @dupStringObject(%struct.redisObject* %1) #11, !dbg !2174
  %4 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2176
  br i1 %4, label %39, label %5, !dbg !2178

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2183
  %7 = load i32, i32* %6, align 8, !dbg !2183, !tbaa !1164
  %8 = and i32 %7, 2, !dbg !2184
  %9 = icmp eq i32 %8, 0, !dbg !2184
  br i1 %9, label %39, label %10, !dbg !2185

; <label>:10:                                     ; preds = %5
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !2186
  %12 = load i32, i32* %11, align 4, !dbg !2186, !tbaa !1187
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !2187
  %14 = load i32, i32* %13, align 8, !dbg !2187, !tbaa !1238
  %15 = icmp eq i32 %12, %14, !dbg !2188
  br i1 %15, label %19, label %16, !dbg !2189

; <label>:16:                                     ; preds = %10
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %18 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %17, align 8, !dbg !2190, !tbaa !1191
  br label %31, !dbg !2189

; <label>:19:                                     ; preds = %10
  %20 = shl nsw i32 %12, 1, !dbg !2191
  %21 = icmp slt i32 %12, 8, !dbg !2192
  %22 = select i1 %21, i32 16, i32 %20, !dbg !2193
  store i32 %22, i32* %13, align 8, !dbg !2194, !tbaa !1238
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !2195
  %24 = bitcast %struct.AutoMemEntry** %23 to i8**, !dbg !2195
  %25 = load i8*, i8** %24, align 8, !dbg !2195, !tbaa !1191
  %26 = sext i32 %22 to i64, !dbg !2196
  %27 = shl nsw i64 %26, 4, !dbg !2197
  %28 = tail call i8* @zrealloc(i8* %25, i64 %27) #11, !dbg !2198
  store i8* %28, i8** %24, align 8, !dbg !2199, !tbaa !1191
  %29 = bitcast i8* %28 to %struct.AutoMemEntry*, !dbg !2200
  %30 = load i32, i32* %11, align 4, !dbg !2201, !tbaa !1187
  br label %31, !dbg !2200

; <label>:31:                                     ; preds = %19, %16
  %32 = phi i32 [ %12, %16 ], [ %30, %19 ], !dbg !2201
  %33 = phi %struct.AutoMemEntry* [ %18, %16 ], [ %29, %19 ], !dbg !2190
  %34 = sext i32 %32 to i64, !dbg !2202
  %35 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %33, i64 %34, i32 1, !dbg !2203
  store i32 1, i32* %35, align 8, !dbg !2204, !tbaa !1197
  %36 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %33, i64 %34, i32 0, !dbg !2205
  %37 = bitcast i8** %36 to %struct.redisObject**, !dbg !2206
  store %struct.redisObject* %3, %struct.redisObject** %37, align 8, !dbg !2206, !tbaa !1193
  %38 = add nsw i32 %32, 1, !dbg !2207
  store i32 %38, i32* %11, align 4, !dbg !2207, !tbaa !1187
  br label %39, !dbg !2208

; <label>:39:                                     ; preds = %31, %5, %2
  ret %struct.redisObject* %3, !dbg !2209
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @dupStringObject(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeString(%struct.RedisModuleCtx*, %struct.redisObject*) #0 !dbg !2210 {
  tail call void @decrRefCount(%struct.redisObject* %1) #11, !dbg !2218
  %3 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2219
  br i1 %3, label %63, label %4, !dbg !2221

; <label>:4:                                      ; preds = %2
  %5 = bitcast %struct.redisObject* %1 to i8*, !dbg !2222
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2227
  %7 = load i32, i32* %6, align 8, !dbg !2227, !tbaa !1164
  %8 = and i32 %7, 2, !dbg !2228
  %9 = icmp eq i32 %8, 0, !dbg !2228
  br i1 %9, label %63, label %10, !dbg !2229

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !2230
  %12 = load i32, i32* %11, align 4, !dbg !2230, !tbaa !1187
  %13 = icmp sgt i32 %12, 0, !dbg !2232
  br i1 %13, label %14, label %63, !dbg !2233

; <label>:14:                                     ; preds = %10
  %15 = add nsw i32 %12, 1, !dbg !2234
  %16 = sdiv i32 %15, 2, !dbg !2235
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %18 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %17, align 8, !tbaa !1191
  %19 = sext i32 %16 to i64, !dbg !2233
  br label %20, !dbg !2233

; <label>:20:                                     ; preds = %60, %14
  %21 = phi i64 [ %61, %60 ], [ 0, %14 ]
  %22 = trunc i64 %21 to i32, !dbg !2238
  %23 = xor i32 %22, -1, !dbg !2238
  %24 = add i32 %12, %23, !dbg !2238
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %25, i32 1
  %27 = load i32, i32* %26, align 8, !dbg !2239, !tbaa !1197
  %28 = icmp eq i32 %27, 1, !dbg !2241
  br i1 %28, label %29, label %52, !dbg !2242

; <label>:29:                                     ; preds = %20
  %30 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %25, i32 0, !dbg !2243
  %31 = load i8*, i8** %30, align 8, !dbg !2243, !tbaa !1193
  %32 = icmp eq i8* %31, %5, !dbg !2244
  br i1 %32, label %36, label %52, !dbg !2245

; <label>:33:                                     ; preds = %56
  %34 = trunc i64 %21 to i32, !dbg !2231
  %35 = and i64 %21, 4294967295, !dbg !2246
  br label %36, !dbg !2247

; <label>:36:                                     ; preds = %29, %33
  %37 = phi i32 [ %34, %33 ], [ %24, %29 ], !dbg !2248
  %38 = phi i64 [ %35, %33 ], [ %25, %29 ], !dbg !2246
  %39 = phi i32* [ %53, %33 ], [ %26, %29 ], !dbg !2239
  store i32 3, i32* %39, align 8, !dbg !2247, !tbaa !1197
  %40 = add nsw i32 %12, -1, !dbg !2249
  %41 = icmp eq i32 %37, %40, !dbg !2250
  br i1 %41, label %50, label %42, !dbg !2251

; <label>:42:                                     ; preds = %36
  %43 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %38, !dbg !2252
  %44 = sext i32 %40 to i64, !dbg !2253
  %45 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %44, !dbg !2253
  %46 = bitcast %struct.AutoMemEntry* %43 to i8*, !dbg !2253
  %47 = bitcast %struct.AutoMemEntry* %45 to i8*, !dbg !2253
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #6, !dbg !2253, !tbaa.struct !1795
  %48 = load i32, i32* %11, align 4, !dbg !2254, !tbaa !1187
  %49 = add nsw i32 %48, -1, !dbg !2254
  br label %50, !dbg !2255

; <label>:50:                                     ; preds = %42, %36
  %51 = phi i32 [ %49, %42 ], [ %37, %36 ], !dbg !2254
  store i32 %51, i32* %11, align 4, !dbg !2254, !tbaa !1187
  br label %63

; <label>:52:                                     ; preds = %29, %20
  %53 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %21, i32 1, !dbg !2239
  %54 = load i32, i32* %53, align 8, !dbg !2239, !tbaa !1197
  %55 = icmp eq i32 %54, 1, !dbg !2241
  br i1 %55, label %56, label %60, !dbg !2242

; <label>:56:                                     ; preds = %52
  %57 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %21, i32 0, !dbg !2243
  %58 = load i8*, i8** %57, align 8, !dbg !2243, !tbaa !1193
  %59 = icmp eq i8* %58, %5, !dbg !2244
  br i1 %59, label %33, label %60, !dbg !2245

; <label>:60:                                     ; preds = %56, %52
  %61 = add nuw nsw i64 %21, 1, !dbg !2256
  %62 = icmp slt i64 %61, %19, !dbg !2232
  br i1 %62, label %20, label %63, !dbg !2233, !llvm.loop !1801

; <label>:63:                                     ; preds = %60, %50, %10, %4, %2
  ret void, !dbg !2257
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_RetainString(%struct.RedisModuleCtx*, %struct.redisObject*) #0 !dbg !2258 {
  %3 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2264
  br i1 %3, label %63, label %4, !dbg !2266

; <label>:4:                                      ; preds = %2
  %5 = bitcast %struct.redisObject* %1 to i8*, !dbg !2267
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2272
  %7 = load i32, i32* %6, align 8, !dbg !2272, !tbaa !1164
  %8 = and i32 %7, 2, !dbg !2273
  %9 = icmp eq i32 %8, 0, !dbg !2273
  br i1 %9, label %63, label %10, !dbg !2274

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !2275
  %12 = load i32, i32* %11, align 4, !dbg !2275, !tbaa !1187
  %13 = icmp sgt i32 %12, 0, !dbg !2277
  br i1 %13, label %14, label %63, !dbg !2278

; <label>:14:                                     ; preds = %10
  %15 = add nsw i32 %12, 1, !dbg !2279
  %16 = sdiv i32 %15, 2, !dbg !2280
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %18 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %17, align 8, !tbaa !1191
  %19 = sext i32 %16 to i64, !dbg !2278
  br label %20, !dbg !2278

; <label>:20:                                     ; preds = %58, %14
  %21 = phi i64 [ %59, %58 ], [ 0, %14 ]
  %22 = trunc i64 %21 to i32, !dbg !2283
  %23 = xor i32 %22, -1, !dbg !2283
  %24 = add i32 %12, %23, !dbg !2283
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %25, i32 1
  %27 = load i32, i32* %26, align 8, !dbg !2284, !tbaa !1197
  %28 = icmp eq i32 %27, 1, !dbg !2286
  br i1 %28, label %29, label %50, !dbg !2287

; <label>:29:                                     ; preds = %20
  %30 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %25, i32 0, !dbg !2288
  %31 = load i8*, i8** %30, align 8, !dbg !2288, !tbaa !1193
  %32 = icmp eq i8* %31, %5, !dbg !2289
  br i1 %32, label %36, label %50, !dbg !2290

; <label>:33:                                     ; preds = %54
  %34 = trunc i64 %21 to i32, !dbg !2276
  %35 = and i64 %21, 4294967295, !dbg !2291
  br label %36, !dbg !2292

; <label>:36:                                     ; preds = %29, %33
  %37 = phi i32 [ %34, %33 ], [ %24, %29 ], !dbg !2293
  %38 = phi i64 [ %35, %33 ], [ %25, %29 ], !dbg !2291
  %39 = phi i32* [ %51, %33 ], [ %26, %29 ], !dbg !2284
  store i32 3, i32* %39, align 8, !dbg !2292, !tbaa !1197
  %40 = add nsw i32 %12, -1, !dbg !2294
  %41 = icmp eq i32 %37, %40, !dbg !2295
  br i1 %41, label %61, label %42, !dbg !2296

; <label>:42:                                     ; preds = %36
  %43 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %38, !dbg !2297
  %44 = sext i32 %40 to i64, !dbg !2298
  %45 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %44, !dbg !2298
  %46 = bitcast %struct.AutoMemEntry* %43 to i8*, !dbg !2298
  %47 = bitcast %struct.AutoMemEntry* %45 to i8*, !dbg !2298
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #6, !dbg !2298, !tbaa.struct !1795
  %48 = load i32, i32* %11, align 4, !dbg !2299, !tbaa !1187
  %49 = add nsw i32 %48, -1, !dbg !2299
  br label %61, !dbg !2300

; <label>:50:                                     ; preds = %29, %20
  %51 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %21, i32 1, !dbg !2284
  %52 = load i32, i32* %51, align 8, !dbg !2284, !tbaa !1197
  %53 = icmp eq i32 %52, 1, !dbg !2286
  br i1 %53, label %54, label %58, !dbg !2287

; <label>:54:                                     ; preds = %50
  %55 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %18, i64 %21, i32 0, !dbg !2288
  %56 = load i8*, i8** %55, align 8, !dbg !2288, !tbaa !1193
  %57 = icmp eq i8* %56, %5, !dbg !2289
  br i1 %57, label %33, label %58, !dbg !2290

; <label>:58:                                     ; preds = %54, %50
  %59 = add nuw nsw i64 %21, 1, !dbg !2301
  %60 = icmp slt i64 %59, %19, !dbg !2277
  br i1 %60, label %20, label %63, !dbg !2278, !llvm.loop !1801

; <label>:61:                                     ; preds = %36, %42
  %62 = phi i32 [ %49, %42 ], [ %37, %36 ], !dbg !2299
  store i32 %62, i32* %11, align 4, !dbg !2299, !tbaa !1187
  br label %64, !dbg !2302

; <label>:63:                                     ; preds = %58, %10, %4, %2
  tail call void @incrRefCount(%struct.redisObject* %1) #11, !dbg !2303
  br label %64, !dbg !2305

; <label>:64:                                     ; preds = %61, %63
  ret void, !dbg !2306
}

; Function Attrs: noredzone
declare dso_local void @incrRefCount(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_StringPtrLen(%struct.redisObject* readonly, i64*) #0 !dbg !2307 {
  %3 = icmp eq %struct.redisObject* %0, null, !dbg !2319
  %4 = icmp eq i64* %1, null, !dbg !2320
  br i1 %3, label %5, label %8, !dbg !2322

; <label>:5:                                      ; preds = %2
  br i1 %4, label %38, label %6, !dbg !2323

; <label>:6:                                      ; preds = %5
  %7 = tail call i64 @strlen(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !2324
  store i64 %7, i64* %1, align 8, !dbg !2326, !tbaa !2327
  br label %38, !dbg !2328

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8, !dbg !2320, !tbaa !1041
  br i1 %4, label %38, label %11, !dbg !2329

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds i8, i8* %10, i64 -1, !dbg !2339
  %13 = load i8, i8* %12, align 1, !dbg !2339, !tbaa !1123
  %14 = trunc i8 %13 to i3, !dbg !2341
  switch i3 %14, label %36 [
    i3 0, label %15
    i3 1, label %18
    i3 2, label %22
    i3 3, label %27
    i3 -4, label %32
  ], !dbg !2341

; <label>:15:                                     ; preds = %11
  %16 = lshr i8 %13, 3, !dbg !2342
  %17 = zext i8 %16 to i64, !dbg !2342
  br label %36, !dbg !2344

; <label>:18:                                     ; preds = %11
  %19 = getelementptr inbounds i8, i8* %10, i64 -3, !dbg !2345
  %20 = load i8, i8* %19, align 1, !dbg !2346, !tbaa !1123
  %21 = zext i8 %20 to i64, !dbg !2345
  br label %36, !dbg !2347

; <label>:22:                                     ; preds = %11
  %23 = getelementptr inbounds i8, i8* %10, i64 -5, !dbg !2348
  %24 = bitcast i8* %23 to i16*, !dbg !2349
  %25 = load i16, i16* %24, align 1, !dbg !2349, !tbaa !2350
  %26 = zext i16 %25 to i64, !dbg !2348
  br label %36, !dbg !2352

; <label>:27:                                     ; preds = %11
  %28 = getelementptr inbounds i8, i8* %10, i64 -9, !dbg !2353
  %29 = bitcast i8* %28 to i32*, !dbg !2354
  %30 = load i32, i32* %29, align 1, !dbg !2354, !tbaa !933
  %31 = zext i32 %30 to i64, !dbg !2353
  br label %36, !dbg !2355

; <label>:32:                                     ; preds = %11
  %33 = getelementptr inbounds i8, i8* %10, i64 -17, !dbg !2356
  %34 = bitcast i8* %33 to i64*, !dbg !2357
  %35 = load i64, i64* %34, align 1, !dbg !2357, !tbaa !2327
  br label %36, !dbg !2358

; <label>:36:                                     ; preds = %11, %15, %18, %22, %27, %32
  %37 = phi i64 [ %35, %32 ], [ %31, %27 ], [ %26, %22 ], [ %21, %18 ], [ %17, %15 ], [ 0, %11 ], !dbg !2359
  store i64 %37, i64* %1, align 8, !dbg !2360, !tbaa !2327
  br label %38, !dbg !2361

; <label>:38:                                     ; preds = %8, %36, %6, %5
  %39 = phi i8* [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0), %5 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0), %6 ], [ %10, %36 ], [ %10, %8 ], !dbg !2362
  ret i8* %39, !dbg !2363
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringToLongLong(%struct.redisObject* nocapture readonly, i64*) #0 !dbg !2364 {
  %3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2, !dbg !2373
  %4 = load i8*, i8** %3, align 8, !dbg !2373, !tbaa !1041
  %5 = getelementptr inbounds i8, i8* %4, i64 -1, !dbg !2376
  %6 = load i8, i8* %5, align 1, !dbg !2376, !tbaa !1123
  %7 = trunc i8 %6 to i3, !dbg !2378
  switch i3 %7, label %29 [
    i3 0, label %8
    i3 1, label %11
    i3 2, label %15
    i3 3, label %20
    i3 -4, label %25
  ], !dbg !2378

; <label>:8:                                      ; preds = %2
  %9 = lshr i8 %6, 3, !dbg !2379
  %10 = zext i8 %9 to i64, !dbg !2379
  br label %29, !dbg !2380

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds i8, i8* %4, i64 -3, !dbg !2381
  %13 = load i8, i8* %12, align 1, !dbg !2382, !tbaa !1123
  %14 = zext i8 %13 to i64, !dbg !2381
  br label %29, !dbg !2383

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds i8, i8* %4, i64 -5, !dbg !2384
  %17 = bitcast i8* %16 to i16*, !dbg !2385
  %18 = load i16, i16* %17, align 1, !dbg !2385, !tbaa !2350
  %19 = zext i16 %18 to i64, !dbg !2384
  br label %29, !dbg !2386

; <label>:20:                                     ; preds = %2
  %21 = getelementptr inbounds i8, i8* %4, i64 -9, !dbg !2387
  %22 = bitcast i8* %21 to i32*, !dbg !2388
  %23 = load i32, i32* %22, align 1, !dbg !2388, !tbaa !933
  %24 = zext i32 %23 to i64, !dbg !2387
  br label %29, !dbg !2389

; <label>:25:                                     ; preds = %2
  %26 = getelementptr inbounds i8, i8* %4, i64 -17, !dbg !2390
  %27 = bitcast i8* %26 to i64*, !dbg !2391
  %28 = load i64, i64* %27, align 1, !dbg !2391, !tbaa !2327
  br label %29, !dbg !2392

; <label>:29:                                     ; preds = %2, %8, %11, %15, %20, %25
  %30 = phi i64 [ %28, %25 ], [ %24, %20 ], [ %19, %15 ], [ %14, %11 ], [ %10, %8 ], [ 0, %2 ], !dbg !2393
  %31 = tail call i32 @string2ll(i8* %4, i64 %30, i64* %1) #11, !dbg !2394
  %32 = icmp eq i32 %31, 0, !dbg !2394
  %33 = zext i1 %32 to i32, !dbg !2394
  ret i32 %33, !dbg !2395
}

; Function Attrs: noredzone
declare dso_local i32 @string2ll(i8*, i64, i64*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringToDouble(%struct.redisObject*, double*) #0 !dbg !2396 {
  %3 = tail call i32 @getDoubleFromObject(%struct.redisObject* %0, double* %1) #11, !dbg !2406
  %4 = icmp ne i32 %3, 0, !dbg !2408
  %5 = zext i1 %4 to i32, !dbg !2409
  ret i32 %5, !dbg !2410
}

; Function Attrs: noredzone
declare dso_local i32 @getDoubleFromObject(%struct.redisObject*, double*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringCompare(%struct.redisObject*, %struct.redisObject*) #0 !dbg !2411 {
  %3 = tail call i32 @compareStringObjects(%struct.redisObject* %0, %struct.redisObject* %1) #11, !dbg !2419
  ret i32 %3, !dbg !2420
}

; Function Attrs: noredzone
declare dso_local i32 @compareStringObjects(%struct.redisObject*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @moduleAssertUnsharedString(%struct.redisObject*) local_unnamed_addr #0 !dbg !2421 {
  %2 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 1, !dbg !2427
  %3 = load i32, i32* %2, align 4, !dbg !2427, !tbaa !1353
  %4 = icmp eq i32 %3, 1, !dbg !2429
  br i1 %4, label %6, label %5, !dbg !2430

; <label>:5:                                      ; preds = %1
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.17, i64 0, i64 0)) #11, !dbg !2431
  br label %50, !dbg !2433

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 0, !dbg !2434
  %8 = load i32, i32* %7, align 8, !dbg !2434
  %9 = lshr i32 %8, 4, !dbg !2434
  %10 = trunc i32 %9 to i4, !dbg !2436
  switch i4 %10, label %50 [
    i4 -8, label %11
    i4 1, label %43
  ], !dbg !2436

; <label>:11:                                     ; preds = %6
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2, !dbg !2437
  %13 = load i8*, i8** %12, align 8, !dbg !2437, !tbaa !1041
  %14 = getelementptr inbounds i8, i8* %13, i64 -1, !dbg !2441
  %15 = load i8, i8* %14, align 1, !dbg !2441, !tbaa !1123
  %16 = trunc i8 %15 to i3, !dbg !2443
  switch i3 %16, label %38 [
    i3 0, label %17
    i3 1, label %20
    i3 2, label %24
    i3 3, label %29
    i3 -4, label %34
  ], !dbg !2443

; <label>:17:                                     ; preds = %11
  %18 = lshr i8 %15, 3, !dbg !2444
  %19 = zext i8 %18 to i64, !dbg !2444
  br label %38, !dbg !2445

; <label>:20:                                     ; preds = %11
  %21 = getelementptr inbounds i8, i8* %13, i64 -3, !dbg !2446
  %22 = load i8, i8* %21, align 1, !dbg !2447, !tbaa !1123
  %23 = zext i8 %22 to i64, !dbg !2446
  br label %38, !dbg !2448

; <label>:24:                                     ; preds = %11
  %25 = getelementptr inbounds i8, i8* %13, i64 -5, !dbg !2449
  %26 = bitcast i8* %25 to i16*, !dbg !2450
  %27 = load i16, i16* %26, align 1, !dbg !2450, !tbaa !2350
  %28 = zext i16 %27 to i64, !dbg !2449
  br label %38, !dbg !2451

; <label>:29:                                     ; preds = %11
  %30 = getelementptr inbounds i8, i8* %13, i64 -9, !dbg !2452
  %31 = bitcast i8* %30 to i32*, !dbg !2453
  %32 = load i32, i32* %31, align 1, !dbg !2453, !tbaa !933
  %33 = zext i32 %32 to i64, !dbg !2452
  br label %38, !dbg !2454

; <label>:34:                                     ; preds = %11
  %35 = getelementptr inbounds i8, i8* %13, i64 -17, !dbg !2455
  %36 = bitcast i8* %35 to i64*, !dbg !2456
  %37 = load i64, i64* %36, align 1, !dbg !2456, !tbaa !2327
  br label %38, !dbg !2457

; <label>:38:                                     ; preds = %11, %17, %20, %24, %29, %34
  %39 = phi i64 [ %37, %34 ], [ %33, %29 ], [ %28, %24 ], [ %23, %20 ], [ %19, %17 ], [ 0, %11 ], !dbg !2458
  %40 = tail call i8* @sdsnewlen(i8* %13, i64 %39) #11, !dbg !2459
  store i8* %40, i8** %12, align 8, !dbg !2460, !tbaa !1041
  %41 = load i32, i32* %7, align 8, !dbg !2461
  %42 = and i32 %41, -241, !dbg !2461
  store i32 %42, i32* %7, align 8, !dbg !2461
  br label %50, !dbg !2462

; <label>:43:                                     ; preds = %6
  %44 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2, !dbg !2463
  %45 = bitcast i8** %44 to i64*, !dbg !2463
  %46 = load i64, i64* %45, align 8, !dbg !2463, !tbaa !1041
  %47 = tail call i8* @sdsfromlonglong(i64 %46) #11, !dbg !2466
  store i8* %47, i8** %44, align 8, !dbg !2467, !tbaa !1041
  %48 = load i32, i32* %7, align 8, !dbg !2468
  %49 = and i32 %48, -241, !dbg !2468
  store i32 %49, i32* %7, align 8, !dbg !2468
  br label %50, !dbg !2469

; <label>:50:                                     ; preds = %38, %43, %6, %5
  %51 = phi %struct.redisObject* [ null, %5 ], [ %0, %6 ], [ %0, %43 ], [ %0, %38 ], !dbg !2470
  ret %struct.redisObject* %51, !dbg !2471
}

; Function Attrs: noredzone
declare dso_local i8* @sdsnewlen(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @sdsfromlonglong(i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringAppendBuffer(%struct.RedisModuleCtx* nocapture readnone, %struct.redisObject*, i8*, i64) #0 !dbg !2472 {
  %5 = tail call %struct.redisObject* @moduleAssertUnsharedString(%struct.redisObject* %1) #12, !dbg !2484
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !2485
  br i1 %6, label %11, label %7, !dbg !2487

; <label>:7:                                      ; preds = %4
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 2, !dbg !2488
  %9 = load i8*, i8** %8, align 8, !dbg !2488, !tbaa !1041
  %10 = tail call i8* @sdscatlen(i8* %9, i8* %2, i64 %3) #11, !dbg !2489
  store i8* %10, i8** %8, align 8, !dbg !2490, !tbaa !1041
  br label %11, !dbg !2491

; <label>:11:                                     ; preds = %4, %7
  %12 = phi i32 [ 0, %7 ], [ 1, %4 ], !dbg !2492
  ret i32 %12, !dbg !2493
}

; Function Attrs: noredzone
declare dso_local i8* @sdscatlen(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_WrongArity(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !2494 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2498
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !2498, !tbaa !1168
  %4 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 9, !dbg !2499
  %5 = load %struct.redisObject**, %struct.redisObject*** %4, align 8, !dbg !2499, !tbaa !1316
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !2500, !tbaa !902
  %7 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 2, !dbg !2501
  %8 = load i8*, i8** %7, align 8, !dbg !2501, !tbaa !1041
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18, i64 0, i64 0), i8* %8) #11, !dbg !2502
  ret i32 0, !dbg !2503
}

; Function Attrs: noredzone
declare dso_local void @addReplyErrorFormat(%struct.client*, i8*, ...) local_unnamed_addr #2

; Function Attrs: noredzone nounwind readonly
define dso_local %struct.client* @moduleGetReplyClient(%struct.RedisModuleCtx* nocapture readonly) local_unnamed_addr #4 !dbg !2504 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2510
  %3 = load i32, i32* %2, align 8, !dbg !2510, !tbaa !1164
  %4 = and i32 %3, 32, !dbg !2512
  %5 = icmp eq i32 %4, 0, !dbg !2512
  br i1 %5, label %12, label %6, !dbg !2513

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2514
  %8 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %7, align 8, !dbg !2514, !tbaa !2517
  %9 = icmp eq %struct.RedisModuleBlockedClient* %8, null, !dbg !2518
  br i1 %9, label %17, label %10, !dbg !2519

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %8, i64 0, i32 7, !dbg !2520
  br label %14, !dbg !2521

; <label>:12:                                     ; preds = %1
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2522
  br label %14, !dbg !2524

; <label>:14:                                     ; preds = %10, %12
  %15 = phi %struct.client** [ %13, %12 ], [ %11, %10 ]
  %16 = load %struct.client*, %struct.client** %15, align 8, !dbg !2525, !tbaa !902
  br label %17, !dbg !2526

; <label>:17:                                     ; preds = %14, %6
  %18 = phi %struct.client* [ null, %6 ], [ %16, %14 ], !dbg !2527
  ret %struct.client* %18, !dbg !2526
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithLongLong(%struct.RedisModuleCtx* nocapture readonly, i64) #0 !dbg !2528 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2539
  %4 = load i32, i32* %3, align 8, !dbg !2539, !tbaa !1164
  %5 = and i32 %4, 32, !dbg !2540
  %6 = icmp eq i32 %5, 0, !dbg !2540
  br i1 %6, label %13, label %7, !dbg !2541

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2542
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2542, !tbaa !2517
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2543
  br i1 %10, label %20, label %11, !dbg !2544

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2545
  br label %15, !dbg !2546

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2547
  br label %15, !dbg !2548

; <label>:15:                                     ; preds = %11, %13
  %16 = phi %struct.client** [ %12, %11 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2549, !tbaa !902
  %18 = icmp eq %struct.client* %17, null, !dbg !2551
  br i1 %18, label %20, label %19, !dbg !2553

; <label>:19:                                     ; preds = %15
  tail call void @addReplyLongLong(%struct.client* nonnull %17, i64 %1) #11, !dbg !2554
  br label %20, !dbg !2555

; <label>:20:                                     ; preds = %7, %15, %19
  ret i32 0, !dbg !2556
}

; Function Attrs: noredzone
declare dso_local void @addReplyLongLong(%struct.client*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @replyWithStatus(%struct.RedisModuleCtx* nocapture readonly, i8*, i8*) local_unnamed_addr #0 !dbg !2557 {
  %4 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2571
  %5 = load i32, i32* %4, align 8, !dbg !2571, !tbaa !1164
  %6 = and i32 %5, 32, !dbg !2572
  %7 = icmp eq i32 %6, 0, !dbg !2572
  br i1 %7, label %14, label %8, !dbg !2573

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2574
  %10 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %9, align 8, !dbg !2574, !tbaa !2517
  %11 = icmp eq %struct.RedisModuleBlockedClient* %10, null, !dbg !2575
  br i1 %11, label %24, label %12, !dbg !2576

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %10, i64 0, i32 7, !dbg !2577
  br label %16, !dbg !2578

; <label>:14:                                     ; preds = %3
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2579
  br label %16, !dbg !2580

; <label>:16:                                     ; preds = %12, %14
  %17 = phi %struct.client** [ %13, %12 ], [ %15, %14 ]
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2581, !tbaa !902
  %19 = icmp eq %struct.client* %18, null, !dbg !2583
  br i1 %19, label %24, label %20, !dbg !2585

; <label>:20:                                     ; preds = %16
  %21 = tail call i8* @sdsnewlen(i8* %2, i64 1) #11, !dbg !2586
  %22 = tail call i8* @sdscat(i8* %21, i8* %1) #11, !dbg !2588
  %23 = tail call i8* @sdscatlen(i8* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i64 2) #11, !dbg !2589
  tail call void @addReplySds(%struct.client* nonnull %18, i8* %23) #11, !dbg !2590
  br label %24

; <label>:24:                                     ; preds = %8, %16, %20
  ret i32 0, !dbg !2591
}

; Function Attrs: noredzone
declare dso_local i8* @sdscat(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @addReplySds(%struct.client*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithError(%struct.RedisModuleCtx* nocapture readonly, i8*) #0 !dbg !2592 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2606
  %4 = load i32, i32* %3, align 8, !dbg !2606, !tbaa !1164
  %5 = and i32 %4, 32, !dbg !2607
  %6 = icmp eq i32 %5, 0, !dbg !2607
  br i1 %6, label %13, label %7, !dbg !2608

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2609
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2609, !tbaa !2517
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2610
  br i1 %10, label %23, label %11, !dbg !2611

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2612
  br label %15, !dbg !2613

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2614
  br label %15, !dbg !2615

; <label>:15:                                     ; preds = %13, %11
  %16 = phi %struct.client** [ %12, %11 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2616, !tbaa !902
  %18 = icmp eq %struct.client* %17, null, !dbg !2618
  br i1 %18, label %23, label %19, !dbg !2619

; <label>:19:                                     ; preds = %15
  %20 = tail call i8* @sdsnewlen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0), i64 1) #11, !dbg !2620
  %21 = tail call i8* @sdscat(i8* %20, i8* %1) #11, !dbg !2622
  %22 = tail call i8* @sdscatlen(i8* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i64 2) #11, !dbg !2623
  tail call void @addReplySds(%struct.client* nonnull %17, i8* %22) #11, !dbg !2624
  br label %23

; <label>:23:                                     ; preds = %7, %15, %19
  ret i32 0, !dbg !2625
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithSimpleString(%struct.RedisModuleCtx* nocapture readonly, i8*) #0 !dbg !2626 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2638
  %4 = load i32, i32* %3, align 8, !dbg !2638, !tbaa !1164
  %5 = and i32 %4, 32, !dbg !2639
  %6 = icmp eq i32 %5, 0, !dbg !2639
  br i1 %6, label %13, label %7, !dbg !2640

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2641
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2641, !tbaa !2517
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2642
  br i1 %10, label %23, label %11, !dbg !2643

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2644
  br label %15, !dbg !2645

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2646
  br label %15, !dbg !2647

; <label>:15:                                     ; preds = %13, %11
  %16 = phi %struct.client** [ %12, %11 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2648, !tbaa !902
  %18 = icmp eq %struct.client* %17, null, !dbg !2650
  br i1 %18, label %23, label %19, !dbg !2651

; <label>:19:                                     ; preds = %15
  %20 = tail call i8* @sdsnewlen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), i64 1) #11, !dbg !2652
  %21 = tail call i8* @sdscat(i8* %20, i8* %1) #11, !dbg !2654
  %22 = tail call i8* @sdscatlen(i8* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i64 2) #11, !dbg !2655
  tail call void @addReplySds(%struct.client* nonnull %17, i8* %22) #11, !dbg !2656
  br label %23

; <label>:23:                                     ; preds = %7, %15, %19
  ret i32 0, !dbg !2657
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithArray(%struct.RedisModuleCtx* nocapture, i64) #0 !dbg !2658 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2669
  %4 = load i32, i32* %3, align 8, !dbg !2669, !tbaa !1164
  %5 = and i32 %4, 32, !dbg !2670
  %6 = icmp eq i32 %5, 0, !dbg !2670
  br i1 %6, label %13, label %7, !dbg !2671

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2672
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2672, !tbaa !2517
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2673
  br i1 %10, label %38, label %11, !dbg !2674

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2675
  br label %15, !dbg !2676

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2677
  br label %15, !dbg !2678

; <label>:15:                                     ; preds = %11, %13
  %16 = phi %struct.client** [ %12, %11 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2679, !tbaa !902
  %18 = icmp eq %struct.client* %17, null, !dbg !2681
  br i1 %18, label %38, label %19, !dbg !2683

; <label>:19:                                     ; preds = %15
  %20 = icmp eq i64 %1, -1, !dbg !2684
  br i1 %20, label %21, label %37, !dbg !2686

; <label>:21:                                     ; preds = %19
  %22 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 8, !dbg !2687
  %23 = bitcast i8*** %22 to i8**, !dbg !2687
  %24 = load i8*, i8** %23, align 8, !dbg !2687, !tbaa !1146
  %25 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 9, !dbg !2689
  %26 = load i32, i32* %25, align 8, !dbg !2689, !tbaa !1154
  %27 = add nsw i32 %26, 1, !dbg !2690
  %28 = sext i32 %27 to i64, !dbg !2691
  %29 = shl nsw i64 %28, 3, !dbg !2692
  %30 = tail call i8* @zrealloc(i8* %24, i64 %29) #11, !dbg !2693
  store i8* %30, i8** %23, align 8, !dbg !2694, !tbaa !1146
  %31 = tail call i8* @addDeferredMultiBulkLength(%struct.client* nonnull %17) #11, !dbg !2695
  %32 = load i8**, i8*** %22, align 8, !dbg !2696, !tbaa !1146
  %33 = load i32, i32* %25, align 8, !dbg !2697, !tbaa !1154
  %34 = sext i32 %33 to i64, !dbg !2698
  %35 = getelementptr inbounds i8*, i8** %32, i64 %34, !dbg !2698
  store i8* %31, i8** %35, align 8, !dbg !2699, !tbaa !902
  %36 = add nsw i32 %33, 1, !dbg !2700
  store i32 %36, i32* %25, align 8, !dbg !2700, !tbaa !1154
  br label %38, !dbg !2701

; <label>:37:                                     ; preds = %19
  tail call void @addReplyMultiBulkLen(%struct.client* nonnull %17, i64 %1) #11, !dbg !2702
  br label %38

; <label>:38:                                     ; preds = %7, %21, %37, %15
  ret i32 0, !dbg !2704
}

; Function Attrs: noredzone
declare dso_local i8* @addDeferredMultiBulkLength(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @addReplyMultiBulkLen(%struct.client*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_ReplySetArrayLength(%struct.RedisModuleCtx* nocapture, i64) #0 !dbg !2705 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2716
  %4 = load i32, i32* %3, align 8, !dbg !2716, !tbaa !1164
  %5 = and i32 %4, 32, !dbg !2717
  %6 = icmp eq i32 %5, 0, !dbg !2717
  br i1 %6, label %13, label %7, !dbg !2718

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2719
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2719, !tbaa !2517
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2720
  br i1 %10, label %40, label %11, !dbg !2721

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2722
  br label %15, !dbg !2723

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2724
  br label %15, !dbg !2725

; <label>:15:                                     ; preds = %11, %13
  %16 = phi %struct.client** [ %12, %11 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2726, !tbaa !902
  %18 = icmp eq %struct.client* %17, null, !dbg !2728
  br i1 %18, label %40, label %19, !dbg !2730

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 9, !dbg !2731
  %21 = load i32, i32* %20, align 8, !dbg !2731, !tbaa !1154
  %22 = icmp eq i32 %21, 0, !dbg !2733
  br i1 %22, label %23, label %28, !dbg !2734

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !2735
  %25 = load %struct.RedisModule*, %struct.RedisModule** %24, align 8, !dbg !2735, !tbaa !1156
  %26 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %25, i64 0, i32 1, !dbg !2737
  %27 = load i8*, i8** %26, align 8, !dbg !2737, !tbaa !1158
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([162 x i8], [162 x i8]* @.str.22, i64 0, i64 0), i8* %27) #11, !dbg !2738
  br label %40, !dbg !2739

; <label>:28:                                     ; preds = %19
  %29 = add nsw i32 %21, -1, !dbg !2740
  store i32 %29, i32* %20, align 8, !dbg !2740, !tbaa !1154
  %30 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 8, !dbg !2741
  %31 = load i8**, i8*** %30, align 8, !dbg !2741, !tbaa !1146
  %32 = sext i32 %29 to i64, !dbg !2742
  %33 = getelementptr inbounds i8*, i8** %31, i64 %32, !dbg !2742
  %34 = load i8*, i8** %33, align 8, !dbg !2742, !tbaa !902
  tail call void @setDeferredMultiBulkLength(%struct.client* nonnull %17, i8* %34, i64 %1) #11, !dbg !2743
  %35 = load i32, i32* %20, align 8, !dbg !2744, !tbaa !1154
  %36 = icmp eq i32 %35, 0, !dbg !2746
  br i1 %36, label %37, label %40, !dbg !2747

; <label>:37:                                     ; preds = %28
  %38 = bitcast i8*** %30 to i8**, !dbg !2748
  %39 = load i8*, i8** %38, align 8, !dbg !2748, !tbaa !1146
  tail call void @zfree(i8* %39) #11, !dbg !2750
  store i8** null, i8*** %30, align 8, !dbg !2751, !tbaa !1146
  br label %40, !dbg !2752

; <label>:40:                                     ; preds = %7, %28, %37, %15, %23
  ret void, !dbg !2753
}

; Function Attrs: noredzone
declare dso_local void @setDeferredMultiBulkLength(%struct.client*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithStringBuffer(%struct.RedisModuleCtx* nocapture readonly, i8*, i64) #0 !dbg !2754 {
  %4 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2767
  %5 = load i32, i32* %4, align 8, !dbg !2767, !tbaa !1164
  %6 = and i32 %5, 32, !dbg !2768
  %7 = icmp eq i32 %6, 0, !dbg !2768
  br i1 %7, label %14, label %8, !dbg !2769

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2770
  %10 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %9, align 8, !dbg !2770, !tbaa !2517
  %11 = icmp eq %struct.RedisModuleBlockedClient* %10, null, !dbg !2771
  br i1 %11, label %21, label %12, !dbg !2772

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %10, i64 0, i32 7, !dbg !2773
  br label %16, !dbg !2774

; <label>:14:                                     ; preds = %3
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2775
  br label %16, !dbg !2776

; <label>:16:                                     ; preds = %12, %14
  %17 = phi %struct.client** [ %13, %12 ], [ %15, %14 ]
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2777, !tbaa !902
  %19 = icmp eq %struct.client* %18, null, !dbg !2779
  br i1 %19, label %21, label %20, !dbg !2781

; <label>:20:                                     ; preds = %16
  tail call void @addReplyBulkCBuffer(%struct.client* nonnull %18, i8* %1, i64 %2) #11, !dbg !2782
  br label %21, !dbg !2783

; <label>:21:                                     ; preds = %8, %16, %20
  ret i32 0, !dbg !2784
}

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCBuffer(%struct.client*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithCString(%struct.RedisModuleCtx* nocapture readonly, i8*) #0 !dbg !2785 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2794
  %4 = load i32, i32* %3, align 8, !dbg !2794, !tbaa !1164
  %5 = and i32 %4, 32, !dbg !2795
  %6 = icmp eq i32 %5, 0, !dbg !2795
  br i1 %6, label %13, label %7, !dbg !2796

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2797
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2797, !tbaa !2517
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2798
  br i1 %10, label %20, label %11, !dbg !2799

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2800
  br label %15, !dbg !2801

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2802
  br label %15, !dbg !2803

; <label>:15:                                     ; preds = %11, %13
  %16 = phi %struct.client** [ %12, %11 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2804, !tbaa !902
  %18 = icmp eq %struct.client* %17, null, !dbg !2806
  br i1 %18, label %20, label %19, !dbg !2808

; <label>:19:                                     ; preds = %15
  tail call void @addReplyBulkCString(%struct.client* nonnull %17, i8* %1) #11, !dbg !2809
  br label %20, !dbg !2810

; <label>:20:                                     ; preds = %7, %15, %19
  ret i32 0, !dbg !2811
}

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCString(%struct.client*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithString(%struct.RedisModuleCtx* nocapture readonly, %struct.redisObject*) #0 !dbg !2812 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2823
  %4 = load i32, i32* %3, align 8, !dbg !2823, !tbaa !1164
  %5 = and i32 %4, 32, !dbg !2824
  %6 = icmp eq i32 %5, 0, !dbg !2824
  br i1 %6, label %13, label %7, !dbg !2825

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2826
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2826, !tbaa !2517
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2827
  br i1 %10, label %20, label %11, !dbg !2828

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2829
  br label %15, !dbg !2830

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2831
  br label %15, !dbg !2832

; <label>:15:                                     ; preds = %11, %13
  %16 = phi %struct.client** [ %12, %11 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2833, !tbaa !902
  %18 = icmp eq %struct.client* %17, null, !dbg !2835
  br i1 %18, label %20, label %19, !dbg !2837

; <label>:19:                                     ; preds = %15
  tail call void @addReplyBulk(%struct.client* nonnull %17, %struct.redisObject* %1) #11, !dbg !2838
  br label %20, !dbg !2839

; <label>:20:                                     ; preds = %7, %15, %19
  ret i32 0, !dbg !2840
}

; Function Attrs: noredzone
declare dso_local void @addReplyBulk(%struct.client*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithNull(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !2841 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2848
  %3 = load i32, i32* %2, align 8, !dbg !2848, !tbaa !1164
  %4 = and i32 %3, 32, !dbg !2849
  %5 = icmp eq i32 %4, 0, !dbg !2849
  br i1 %5, label %12, label %6, !dbg !2850

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2851
  %8 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %7, align 8, !dbg !2851, !tbaa !2517
  %9 = icmp eq %struct.RedisModuleBlockedClient* %8, null, !dbg !2852
  br i1 %9, label %20, label %10, !dbg !2853

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %8, i64 0, i32 7, !dbg !2854
  br label %14, !dbg !2855

; <label>:12:                                     ; preds = %1
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2856
  br label %14, !dbg !2857

; <label>:14:                                     ; preds = %10, %12
  %15 = phi %struct.client** [ %11, %10 ], [ %13, %12 ]
  %16 = load %struct.client*, %struct.client** %15, align 8, !dbg !2858, !tbaa !902
  %17 = icmp eq %struct.client* %16, null, !dbg !2860
  br i1 %17, label %20, label %18, !dbg !2862

; <label>:18:                                     ; preds = %14
  %19 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 10), align 8, !dbg !2863, !tbaa !2864
  tail call void @addReply(%struct.client* nonnull %16, %struct.redisObject* %19) #11, !dbg !2866
  br label %20, !dbg !2867

; <label>:20:                                     ; preds = %6, %14, %18
  ret i32 0, !dbg !2868
}

; Function Attrs: noredzone
declare dso_local void @addReply(%struct.client*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithCallReply(%struct.RedisModuleCtx* nocapture readonly, %struct.RedisModuleCallReply* nocapture readonly) #0 !dbg !2869 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2881
  %4 = load i32, i32* %3, align 8, !dbg !2881, !tbaa !1164
  %5 = and i32 %4, 32, !dbg !2882
  %6 = icmp eq i32 %5, 0, !dbg !2882
  br i1 %6, label %13, label %7, !dbg !2883

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2884
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2884, !tbaa !2517
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2885
  br i1 %10, label %25, label %11, !dbg !2886

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2887
  br label %15, !dbg !2888

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2889
  br label %15, !dbg !2890

; <label>:15:                                     ; preds = %11, %13
  %16 = phi %struct.client** [ %12, %11 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2891, !tbaa !902
  %18 = icmp eq %struct.client* %17, null, !dbg !2893
  br i1 %18, label %25, label %19, !dbg !2895

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %1, i64 0, i32 4, !dbg !2896
  %21 = load i8*, i8** %20, align 8, !dbg !2896, !tbaa !2897
  %22 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %1, i64 0, i32 5, !dbg !2898
  %23 = load i64, i64* %22, align 8, !dbg !2898, !tbaa !2899
  %24 = tail call i8* @sdsnewlen(i8* %21, i64 %23) #11, !dbg !2900
  tail call void @addReplySds(%struct.client* nonnull %17, i8* %24) #11, !dbg !2902
  br label %25

; <label>:25:                                     ; preds = %7, %15, %19
  ret i32 0, !dbg !2903
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithDouble(%struct.RedisModuleCtx* nocapture readonly, double) #0 !dbg !2904 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2915
  %4 = load i32, i32* %3, align 8, !dbg !2915, !tbaa !1164
  %5 = and i32 %4, 32, !dbg !2916
  %6 = icmp eq i32 %5, 0, !dbg !2916
  br i1 %6, label %13, label %7, !dbg !2917

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2918
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2918, !tbaa !2517
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2919
  br i1 %10, label %20, label %11, !dbg !2920

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2921
  br label %15, !dbg !2922

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2923
  br label %15, !dbg !2924

; <label>:15:                                     ; preds = %11, %13
  %16 = phi %struct.client** [ %12, %11 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2925, !tbaa !902
  %18 = icmp eq %struct.client* %17, null, !dbg !2927
  br i1 %18, label %20, label %19, !dbg !2929

; <label>:19:                                     ; preds = %15
  tail call void @addReplyDouble(%struct.client* nonnull %17, double %1) #11, !dbg !2930
  br label %20, !dbg !2931

; <label>:20:                                     ; preds = %7, %15, %19
  ret i32 0, !dbg !2932
}

; Function Attrs: noredzone
declare dso_local void @addReplyDouble(%struct.client*, double) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleReplicateMultiIfNeeded(%struct.RedisModuleCtx* nocapture) local_unnamed_addr #0 !dbg !2933 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2937
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !2937, !tbaa !1168
  %4 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 21, !dbg !2939
  %5 = load i32, i32* %4, align 8, !dbg !2939, !tbaa !1254
  %6 = and i32 %5, 264, !dbg !2940
  %7 = icmp eq i32 %6, 0, !dbg !2940
  br i1 %7, label %8, label %16, !dbg !2941

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2942
  %10 = load i32, i32* %9, align 8, !dbg !2942, !tbaa !1164
  %11 = and i32 %10, 33, !dbg !2944
  %12 = icmp eq i32 %11, 0, !dbg !2944
  br i1 %12, label %13, label %16, !dbg !2944

; <label>:13:                                     ; preds = %8
  tail call void @execCommandPropagateMulti(%struct.client* %3) #11, !dbg !2945
  %14 = load i32, i32* %9, align 8, !dbg !2946, !tbaa !1164
  %15 = or i32 %14, 1, !dbg !2946
  store i32 %15, i32* %9, align 8, !dbg !2946, !tbaa !1164
  br label %16, !dbg !2947

; <label>:16:                                     ; preds = %8, %1, %13
  ret void, !dbg !2947
}

; Function Attrs: noredzone
declare dso_local void @execCommandPropagateMulti(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_Replicate(%struct.RedisModuleCtx* nocapture, i8*, i8*, ...) #0 !dbg !2948 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = bitcast i32* %4 to i8*, !dbg !2965
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6, !dbg !2965
  store i32 0, i32* %4, align 4, !dbg !2966, !tbaa !933
  %8 = bitcast i32* %5 to i8*, !dbg !2965
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6, !dbg !2965
  store i32 0, i32* %5, align 4, !dbg !2967, !tbaa !933
  %9 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*, !dbg !2968
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6, !dbg !2968
  %10 = tail call %struct.redisCommand* @lookupCommandByCString(i8* %1) #11, !dbg !2970
  %11 = icmp eq %struct.redisCommand* %10, null, !dbg !2972
  br i1 %11, label %52, label %12, !dbg !2974

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !2975
  call void @llvm.va_start(i8* nonnull %9), !dbg !2975
  %14 = call %struct.redisObject** @moduleCreateArgvFromUserFormat(i8* %1, i8* %2, i32* nonnull %4, i32* nonnull %5, %struct.__va_list_tag* nonnull %13) #12, !dbg !2976
  call void @llvm.va_end(i8* nonnull %9), !dbg !2977
  %15 = icmp eq %struct.redisObject** %14, null, !dbg !2978
  br i1 %15, label %52, label %16, !dbg !2980

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2983
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2983, !tbaa !1168
  %19 = getelementptr inbounds %struct.client, %struct.client* %18, i64 0, i32 21, !dbg !2984
  %20 = load i32, i32* %19, align 8, !dbg !2984, !tbaa !1254
  %21 = and i32 %20, 264, !dbg !2985
  %22 = icmp eq i32 %21, 0, !dbg !2985
  br i1 %22, label %23, label %32, !dbg !2986

; <label>:23:                                     ; preds = %16
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2987
  %25 = load i32, i32* %24, align 8, !dbg !2987, !tbaa !1164
  %26 = and i32 %25, 33, !dbg !2988
  %27 = icmp eq i32 %26, 0, !dbg !2988
  br i1 %27, label %28, label %32, !dbg !2988

; <label>:28:                                     ; preds = %23
  call void @execCommandPropagateMulti(%struct.client* %18) #11, !dbg !2989
  %29 = load i32, i32* %24, align 8, !dbg !2990, !tbaa !1164
  %30 = or i32 %29, 1, !dbg !2990
  store i32 %30, i32* %24, align 8, !dbg !2990, !tbaa !1164
  %31 = load %struct.client*, %struct.client** %17, align 8, !dbg !2991, !tbaa !1168
  br label %32, !dbg !2992

; <label>:32:                                     ; preds = %16, %23, %28
  %33 = phi %struct.client* [ %18, %16 ], [ %18, %23 ], [ %31, %28 ], !dbg !2991
  %34 = getelementptr inbounds %struct.client, %struct.client* %33, i64 0, i32 2, !dbg !2993
  %35 = load %struct.redisDb*, %struct.redisDb** %34, align 8, !dbg !2993, !tbaa !1271
  %36 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %35, i64 0, i32 5, !dbg !2994
  %37 = load i32, i32* %36, align 8, !dbg !2994, !tbaa !1273
  %38 = load i32, i32* %4, align 4, !dbg !2995, !tbaa !933
  call void @alsoPropagate(%struct.redisCommand* nonnull %10, i32 %37, %struct.redisObject** nonnull %14, i32 %38, i32 3) #11, !dbg !2996
  %39 = icmp sgt i32 %38, 0, !dbg !2998
  br i1 %39, label %40, label %48, !dbg !3001

; <label>:40:                                     ; preds = %32
  %41 = zext i32 %38 to i64
  br label %42, !dbg !3002

; <label>:42:                                     ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %46, %42 ]
  %44 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 %43, !dbg !3002
  %45 = load %struct.redisObject*, %struct.redisObject** %44, align 8, !dbg !3002, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %45) #11, !dbg !3003
  %46 = add nuw nsw i64 %43, 1, !dbg !3004
  %47 = icmp eq i64 %46, %41, !dbg !2998
  br i1 %47, label %48, label %42, !dbg !3001, !llvm.loop !3005

; <label>:48:                                     ; preds = %42, %32
  %49 = bitcast %struct.redisObject** %14 to i8*, !dbg !3007
  call void @zfree(i8* %49) #11, !dbg !3008
  %50 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !3009, !tbaa !3010
  %51 = add nsw i64 %50, 1, !dbg !3009
  store i64 %51, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !3009, !tbaa !3010
  br label %52, !dbg !3011

; <label>:52:                                     ; preds = %12, %3, %48
  %53 = phi i32 [ 0, %48 ], [ 1, %3 ], [ 1, %12 ], !dbg !3012
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6, !dbg !3013
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6, !dbg !3013
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6, !dbg !3013
  ret i32 %53, !dbg !3013
}

; Function Attrs: noredzone
declare dso_local %struct.redisCommand* @lookupCommandByCString(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject** @moduleCreateArgvFromUserFormat(i8*, i8*, i32* nocapture, i32*, %struct.__va_list_tag* nocapture) local_unnamed_addr #0 !dbg !3014 {
  %6 = tail call i64 @strlen(i8* %1) #11, !dbg !3055
  %7 = trunc i64 %6 to i32, !dbg !3055
  %8 = add i32 %7, 1, !dbg !3055
  %9 = sext i32 %8 to i64, !dbg !3057
  %10 = shl nsw i64 %9, 3, !dbg !3058
  %11 = tail call i8* @zrealloc(i8* null, i64 %10) #11, !dbg !3059
  %12 = bitcast i8* %11 to %struct.redisObject**, !dbg !3059
  %13 = tail call i64 @strlen(i8* %0) #11, !dbg !3060
  %14 = tail call %struct.redisObject* @createStringObject(i8* %0, i64 %13) #11, !dbg !3061
  store %struct.redisObject* %14, %struct.redisObject** %12, align 8, !dbg !3062, !tbaa !902
  %15 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 0
  %16 = icmp eq i32* %3, null
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 3
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 2
  br label %19, !dbg !3064

; <label>:19:                                     ; preds = %182, %5
  %20 = phi i8* [ %1, %5 ], [ %188, %182 ], !dbg !3065
  %21 = phi i8* [ %11, %5 ], [ %183, %182 ], !dbg !3066
  %22 = phi i8* [ %11, %5 ], [ %184, %182 ], !dbg !3066
  %23 = phi %struct.redisObject** [ %12, %5 ], [ %185, %182 ], !dbg !3066
  %24 = phi i32 [ %8, %5 ], [ %186, %182 ], !dbg !3067
  %25 = phi i32 [ 1, %5 ], [ %187, %182 ], !dbg !3068
  %26 = load i8, i8* %20, align 1, !dbg !3069, !tbaa !1123
  switch i8 %26, label %27 [
    i8 0, label %189
    i8 99, label %31
    i8 115, label %51
    i8 98, label %69
    i8 108, label %103
    i8 118, label %123
    i8 33, label %175
  ], !dbg !3064

; <label>:27:                                     ; preds = %19
  %28 = icmp sgt i32 %25, 0, !dbg !3071
  br i1 %28, label %29, label %196, !dbg !3074

; <label>:29:                                     ; preds = %27
  %30 = zext i32 %25 to i64
  br label %190, !dbg !3075

; <label>:31:                                     ; preds = %19
  %32 = load i32, i32* %15, align 8, !dbg !3076
  %33 = icmp ult i32 %32, 41, !dbg !3076
  br i1 %33, label %34, label %39, !dbg !3076

; <label>:34:                                     ; preds = %31
  %35 = load i8*, i8** %17, align 8, !dbg !3076
  %36 = sext i32 %32 to i64, !dbg !3076
  %37 = getelementptr i8, i8* %35, i64 %36, !dbg !3076
  %38 = add i32 %32, 8, !dbg !3076
  store i32 %38, i32* %15, align 8, !dbg !3076
  br label %42, !dbg !3076

; <label>:39:                                     ; preds = %31
  %40 = load i8*, i8** %18, align 8, !dbg !3076
  %41 = getelementptr i8, i8* %40, i64 8, !dbg !3076
  store i8* %41, i8** %18, align 8, !dbg !3076
  br label %42, !dbg !3076

; <label>:42:                                     ; preds = %39, %34
  %43 = phi i8* [ %37, %34 ], [ %40, %39 ]
  %44 = bitcast i8* %43 to i8**, !dbg !3076
  %45 = load i8*, i8** %44, align 8, !dbg !3076
  %46 = tail call i64 @strlen(i8* %45) #11, !dbg !3078
  %47 = tail call %struct.redisObject* @createStringObject(i8* %45, i64 %46) #11, !dbg !3079
  %48 = add nsw i32 %25, 1, !dbg !3080
  %49 = sext i32 %25 to i64, !dbg !3081
  %50 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %23, i64 %49, !dbg !3081
  store %struct.redisObject* %47, %struct.redisObject** %50, align 8, !dbg !3082, !tbaa !902
  br label %182, !dbg !3083

; <label>:51:                                     ; preds = %19
  %52 = load i32, i32* %15, align 8, !dbg !3084
  %53 = icmp ult i32 %52, 41, !dbg !3084
  br i1 %53, label %54, label %59, !dbg !3084

; <label>:54:                                     ; preds = %51
  %55 = load i8*, i8** %17, align 8, !dbg !3084
  %56 = sext i32 %52 to i64, !dbg !3084
  %57 = getelementptr i8, i8* %55, i64 %56, !dbg !3084
  %58 = add i32 %52, 8, !dbg !3084
  store i32 %58, i32* %15, align 8, !dbg !3084
  br label %62, !dbg !3084

; <label>:59:                                     ; preds = %51
  %60 = load i8*, i8** %18, align 8, !dbg !3084
  %61 = getelementptr i8, i8* %60, i64 8, !dbg !3084
  store i8* %61, i8** %18, align 8, !dbg !3084
  br label %62, !dbg !3084

; <label>:62:                                     ; preds = %59, %54
  %63 = phi i8* [ %57, %54 ], [ %60, %59 ]
  %64 = bitcast i8* %63 to %struct.redisObject**, !dbg !3084
  %65 = load %struct.redisObject*, %struct.redisObject** %64, align 8, !dbg !3084
  %66 = add nsw i32 %25, 1, !dbg !3086
  %67 = sext i32 %25 to i64, !dbg !3087
  %68 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %23, i64 %67, !dbg !3087
  store %struct.redisObject* %65, %struct.redisObject** %68, align 8, !dbg !3088, !tbaa !902
  tail call void @incrRefCount(%struct.redisObject* %65) #11, !dbg !3089
  br label %182, !dbg !3090

; <label>:69:                                     ; preds = %19
  %70 = load i32, i32* %15, align 8, !dbg !3091
  %71 = icmp ult i32 %70, 41, !dbg !3091
  br i1 %71, label %77, label %72, !dbg !3091

; <label>:72:                                     ; preds = %69
  %73 = load i8*, i8** %18, align 8, !dbg !3091
  %74 = getelementptr i8, i8* %73, i64 8, !dbg !3091
  store i8* %74, i8** %18, align 8, !dbg !3091
  %75 = bitcast i8* %73 to i8**, !dbg !3091
  %76 = load i8*, i8** %75, align 8, !dbg !3091
  br label %90, !dbg !3093

; <label>:77:                                     ; preds = %69
  %78 = load i8*, i8** %17, align 8, !dbg !3091
  %79 = sext i32 %70 to i64, !dbg !3091
  %80 = getelementptr i8, i8* %78, i64 %79, !dbg !3091
  %81 = add i32 %70, 8, !dbg !3091
  store i32 %81, i32* %15, align 8, !dbg !3091
  %82 = bitcast i8* %80 to i8**, !dbg !3091
  %83 = load i8*, i8** %82, align 8, !dbg !3091
  %84 = icmp ult i32 %81, 41, !dbg !3093
  br i1 %84, label %85, label %90, !dbg !3093

; <label>:85:                                     ; preds = %77
  %86 = load i8*, i8** %17, align 8, !dbg !3093
  %87 = sext i32 %81 to i64, !dbg !3093
  %88 = getelementptr i8, i8* %86, i64 %87, !dbg !3093
  %89 = add i32 %70, 16, !dbg !3093
  store i32 %89, i32* %15, align 8, !dbg !3093
  br label %94, !dbg !3093

; <label>:90:                                     ; preds = %72, %77
  %91 = phi i8* [ %76, %72 ], [ %83, %77 ]
  %92 = load i8*, i8** %18, align 8, !dbg !3093
  %93 = getelementptr i8, i8* %92, i64 8, !dbg !3093
  store i8* %93, i8** %18, align 8, !dbg !3093
  br label %94, !dbg !3093

; <label>:94:                                     ; preds = %90, %85
  %95 = phi i8* [ %83, %85 ], [ %91, %90 ]
  %96 = phi i8* [ %88, %85 ], [ %92, %90 ]
  %97 = bitcast i8* %96 to i64*, !dbg !3093
  %98 = load i64, i64* %97, align 8, !dbg !3093
  %99 = tail call %struct.redisObject* @createStringObject(i8* %95, i64 %98) #11, !dbg !3095
  %100 = add nsw i32 %25, 1, !dbg !3096
  %101 = sext i32 %25 to i64, !dbg !3097
  %102 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %23, i64 %101, !dbg !3097
  store %struct.redisObject* %99, %struct.redisObject** %102, align 8, !dbg !3098, !tbaa !902
  br label %182, !dbg !3099

; <label>:103:                                    ; preds = %19
  %104 = load i32, i32* %15, align 8, !dbg !3100
  %105 = icmp ult i32 %104, 41, !dbg !3100
  br i1 %105, label %106, label %111, !dbg !3100

; <label>:106:                                    ; preds = %103
  %107 = load i8*, i8** %17, align 8, !dbg !3100
  %108 = sext i32 %104 to i64, !dbg !3100
  %109 = getelementptr i8, i8* %107, i64 %108, !dbg !3100
  %110 = add i32 %104, 8, !dbg !3100
  store i32 %110, i32* %15, align 8, !dbg !3100
  br label %114, !dbg !3100

; <label>:111:                                    ; preds = %103
  %112 = load i8*, i8** %18, align 8, !dbg !3100
  %113 = getelementptr i8, i8* %112, i64 8, !dbg !3100
  store i8* %113, i8** %18, align 8, !dbg !3100
  br label %114, !dbg !3100

; <label>:114:                                    ; preds = %111, %106
  %115 = phi i8* [ %109, %106 ], [ %112, %111 ]
  %116 = bitcast i8* %115 to i64*, !dbg !3100
  %117 = load i64, i64* %116, align 8, !dbg !3100
  %118 = tail call i8* @sdsfromlonglong(i64 %117) #11, !dbg !3102
  %119 = tail call %struct.redisObject* @createObject(i32 0, i8* %118) #11, !dbg !3103
  %120 = add nsw i32 %25, 1, !dbg !3104
  %121 = sext i32 %25 to i64, !dbg !3105
  %122 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %23, i64 %121, !dbg !3105
  store %struct.redisObject* %119, %struct.redisObject** %122, align 8, !dbg !3106, !tbaa !902
  br label %182, !dbg !3107

; <label>:123:                                    ; preds = %19
  %124 = load i32, i32* %15, align 8, !dbg !3108
  %125 = icmp ult i32 %124, 41, !dbg !3108
  br i1 %125, label %131, label %126, !dbg !3108

; <label>:126:                                    ; preds = %123
  %127 = load i8*, i8** %18, align 8, !dbg !3108
  %128 = getelementptr i8, i8* %127, i64 8, !dbg !3108
  store i8* %128, i8** %18, align 8, !dbg !3108
  %129 = bitcast i8* %127 to %struct.redisObject***, !dbg !3108
  %130 = load %struct.redisObject**, %struct.redisObject*** %129, align 8, !dbg !3108
  br label %144, !dbg !3110

; <label>:131:                                    ; preds = %123
  %132 = load i8*, i8** %17, align 8, !dbg !3108
  %133 = sext i32 %124 to i64, !dbg !3108
  %134 = getelementptr i8, i8* %132, i64 %133, !dbg !3108
  %135 = add i32 %124, 8, !dbg !3108
  store i32 %135, i32* %15, align 8, !dbg !3108
  %136 = bitcast i8* %134 to %struct.redisObject***, !dbg !3108
  %137 = load %struct.redisObject**, %struct.redisObject*** %136, align 8, !dbg !3108
  %138 = icmp ult i32 %135, 41, !dbg !3110
  br i1 %138, label %139, label %144, !dbg !3110

; <label>:139:                                    ; preds = %131
  %140 = load i8*, i8** %17, align 8, !dbg !3110
  %141 = sext i32 %135 to i64, !dbg !3110
  %142 = getelementptr i8, i8* %140, i64 %141, !dbg !3110
  %143 = add i32 %124, 16, !dbg !3110
  store i32 %143, i32* %15, align 8, !dbg !3110
  br label %148, !dbg !3110

; <label>:144:                                    ; preds = %126, %131
  %145 = phi %struct.redisObject** [ %130, %126 ], [ %137, %131 ]
  %146 = load i8*, i8** %18, align 8, !dbg !3110
  %147 = getelementptr i8, i8* %146, i64 8, !dbg !3110
  store i8* %147, i8** %18, align 8, !dbg !3110
  br label %148, !dbg !3110

; <label>:148:                                    ; preds = %144, %139
  %149 = phi %struct.redisObject** [ %137, %139 ], [ %145, %144 ]
  %150 = phi i8* [ %142, %139 ], [ %146, %144 ]
  %151 = bitcast i8* %150 to i64*, !dbg !3110
  %152 = load i64, i64* %151, align 8, !dbg !3110
  %153 = trunc i64 %152 to i32, !dbg !3112
  %154 = add i32 %24, -1, !dbg !3112
  %155 = add i32 %154, %153, !dbg !3112
  %156 = sext i32 %155 to i64, !dbg !3113
  %157 = shl nsw i64 %156, 3, !dbg !3114
  %158 = tail call i8* @zrealloc(i8* %22, i64 %157) #11, !dbg !3115
  %159 = bitcast i8* %158 to %struct.redisObject**, !dbg !3115
  %160 = icmp eq i64 %152, 0, !dbg !3117
  br i1 %160, label %182, label %161, !dbg !3120

; <label>:161:                                    ; preds = %148
  %162 = sext i32 %25 to i64, !dbg !3121
  br label %163, !dbg !3121

; <label>:163:                                    ; preds = %163, %161
  %164 = phi i64 [ %162, %161 ], [ %170, %163 ]
  %165 = phi i64 [ 0, %161 ], [ %173, %163 ]
  %166 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %149, i64 %165, !dbg !3121
  %167 = load %struct.redisObject*, %struct.redisObject** %166, align 8, !dbg !3121, !tbaa !902
  tail call void @incrRefCount(%struct.redisObject* %167) #11, !dbg !3123
  %168 = bitcast %struct.redisObject** %166 to i64*, !dbg !3124
  %169 = load i64, i64* %168, align 8, !dbg !3124, !tbaa !902
  %170 = add i64 %164, 1, !dbg !3125
  %171 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %159, i64 %164, !dbg !3126
  %172 = bitcast %struct.redisObject** %171 to i64*, !dbg !3127
  store i64 %169, i64* %172, align 8, !dbg !3127, !tbaa !902
  %173 = add nuw i64 %165, 1, !dbg !3128
  %174 = icmp eq i64 %173, %152, !dbg !3117
  br i1 %174, label %179, label %163, !dbg !3120, !llvm.loop !3129

; <label>:175:                                    ; preds = %19
  br i1 %16, label %182, label %176, !dbg !3131

; <label>:176:                                    ; preds = %175
  %177 = load i32, i32* %3, align 4, !dbg !3134, !tbaa !933
  %178 = or i32 %177, 1, !dbg !3134
  store i32 %178, i32* %3, align 4, !dbg !3134, !tbaa !933
  br label %182, !dbg !3136

; <label>:179:                                    ; preds = %163
  %180 = trunc i64 %152 to i32, !dbg !3137
  %181 = add i32 %25, %180, !dbg !3137
  br label %182, !dbg !3137

; <label>:182:                                    ; preds = %179, %148, %175, %62, %114, %176, %94, %42
  %183 = phi i8* [ %21, %42 ], [ %21, %62 ], [ %21, %94 ], [ %21, %114 ], [ %21, %176 ], [ %21, %175 ], [ %158, %148 ], [ %158, %179 ], !dbg !3138
  %184 = phi i8* [ %22, %42 ], [ %22, %62 ], [ %22, %94 ], [ %22, %114 ], [ %22, %176 ], [ %22, %175 ], [ %158, %148 ], [ %158, %179 ], !dbg !3138
  %185 = phi %struct.redisObject** [ %23, %42 ], [ %23, %62 ], [ %23, %94 ], [ %23, %114 ], [ %23, %176 ], [ %23, %175 ], [ %159, %148 ], [ %159, %179 ], !dbg !3138
  %186 = phi i32 [ %24, %42 ], [ %24, %62 ], [ %24, %94 ], [ %24, %114 ], [ %24, %176 ], [ %24, %175 ], [ %155, %148 ], [ %155, %179 ], !dbg !3138
  %187 = phi i32 [ %48, %42 ], [ %66, %62 ], [ %100, %94 ], [ %120, %114 ], [ %25, %176 ], [ %25, %175 ], [ %25, %148 ], [ %181, %179 ], !dbg !3138
  %188 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !3137
  br label %19, !dbg !3064, !llvm.loop !3139

; <label>:189:                                    ; preds = %19
  store i32 %25, i32* %2, align 4, !dbg !3141, !tbaa !933
  br label %197, !dbg !3142

; <label>:190:                                    ; preds = %190, %29
  %191 = phi i64 [ 0, %29 ], [ %194, %190 ]
  %192 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %23, i64 %191, !dbg !3075
  %193 = load %struct.redisObject*, %struct.redisObject** %192, align 8, !dbg !3075, !tbaa !902
  tail call void @decrRefCount(%struct.redisObject* %193) #11, !dbg !3143
  %194 = add nuw nsw i64 %191, 1, !dbg !3144
  %195 = icmp eq i64 %194, %30, !dbg !3071
  br i1 %195, label %196, label %190, !dbg !3074, !llvm.loop !3145

; <label>:196:                                    ; preds = %190, %27
  tail call void @zfree(i8* %21) #11, !dbg !3147
  br label %197, !dbg !3148

; <label>:197:                                    ; preds = %196, %189
  %198 = phi %struct.redisObject** [ null, %196 ], [ %23, %189 ], !dbg !3138
  ret %struct.redisObject** %198, !dbg !3149
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplicateVerbatim(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !3150 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3154
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !3154, !tbaa !1168
  %4 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 10, !dbg !3155
  %5 = load %struct.redisCommand*, %struct.redisCommand** %4, align 8, !dbg !3155, !tbaa !1299
  %6 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 2, !dbg !3156
  %7 = load %struct.redisDb*, %struct.redisDb** %6, align 8, !dbg !3156, !tbaa !1271
  %8 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %7, i64 0, i32 5, !dbg !3157
  %9 = load i32, i32* %8, align 8, !dbg !3157, !tbaa !1273
  %10 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 9, !dbg !3158
  %11 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !3158, !tbaa !1316
  %12 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 8, !dbg !3159
  %13 = load i32, i32* %12, align 8, !dbg !3159, !tbaa !1318
  tail call void @alsoPropagate(%struct.redisCommand* %5, i32 %9, %struct.redisObject** %11, i32 %13, i32 3) #11, !dbg !3160
  %14 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !3161, !tbaa !3010
  %15 = add nsw i64 %14, 1, !dbg !3161
  store i64 %15, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !3161, !tbaa !3010
  ret i32 0, !dbg !3162
}

; Function Attrs: noredzone nounwind readonly
define dso_local i64 @RM_GetClientId(%struct.RedisModuleCtx* nocapture readonly) #4 !dbg !3163 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3169
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !3169, !tbaa !1168
  %4 = icmp eq %struct.client* %3, null, !dbg !3171
  br i1 %4, label %8, label %5, !dbg !3172

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 0, !dbg !3173
  %7 = load i64, i64* %6, align 8, !dbg !3173, !tbaa !3174
  br label %8, !dbg !3175

; <label>:8:                                      ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ], !dbg !3176
  ret i64 %9, !dbg !3177
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @RM_GetSelectedDb(%struct.RedisModuleCtx* nocapture readonly) #4 !dbg !3178 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3182
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !3182, !tbaa !1168
  %4 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 2, !dbg !3183
  %5 = load %struct.redisDb*, %struct.redisDb** %4, align 8, !dbg !3183, !tbaa !1271
  %6 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %5, i64 0, i32 5, !dbg !3184
  %7 = load i32, i32* %6, align 8, !dbg !3184, !tbaa !1273
  ret i32 %7, !dbg !3185
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_GetContextFlags(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !3186 {
  %2 = alloca float, align 4
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3195
  %4 = load %struct.client*, %struct.client** %3, align 8, !dbg !3195, !tbaa !1168
  %5 = icmp eq %struct.client* %4, null, !dbg !3197
  br i1 %5, label %17, label %6, !dbg !3198

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.client, %struct.client* %4, i64 0, i32 21, !dbg !3199
  %8 = load i32, i32* %7, align 8, !dbg !3199, !tbaa !1254
  %9 = lshr i32 %8, 8, !dbg !3202
  %10 = and i32 %9, 1, !dbg !3202
  %11 = lshr i32 %8, 2, !dbg !3203
  %12 = and i32 %11, 2, !dbg !3203
  %13 = or i32 %12, %10, !dbg !3203
  %14 = shl i32 %8, 11, !dbg !3204
  %15 = and i32 %14, 4096, !dbg !3204
  %16 = or i32 %13, %15, !dbg !3204
  br label %17, !dbg !3204

; <label>:17:                                     ; preds = %6, %1
  %18 = phi i32 [ 0, %1 ], [ %16, %6 ], !dbg !3205
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !3206, !tbaa !3208
  %20 = icmp eq i32 %19, 0, !dbg !3209
  %21 = or i32 %18, 32, !dbg !3210
  %22 = select i1 %20, i32 %18, i32 %21, !dbg !3211
  %23 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !3212, !tbaa !3214
  %24 = icmp eq i32 %23, 0, !dbg !3215
  %25 = or i32 %22, 8192, !dbg !3216
  %26 = select i1 %24, i32 %22, i32 %25, !dbg !3217
  %27 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 227), align 8, !dbg !3218, !tbaa !3220
  %28 = icmp eq i64 %27, 0, !dbg !3221
  br i1 %28, label %34, label %29, !dbg !3222

; <label>:29:                                     ; preds = %17
  %30 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 228), align 8, !dbg !3223, !tbaa !3226
  %31 = icmp eq i32 %30, 1792, !dbg !3227
  %32 = select i1 %31, i32 256, i32 768, !dbg !3228
  %33 = or i32 %32, %26, !dbg !3228
  br label %34, !dbg !3228

; <label>:34:                                     ; preds = %29, %17
  %35 = phi i32 [ %26, %17 ], [ %33, %29 ], !dbg !3229
  %36 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !3230, !tbaa !3232
  %37 = icmp eq i32 %36, 0, !dbg !3233
  %38 = or i32 %35, 64, !dbg !3234
  %39 = select i1 %37, i32 %35, i32 %38, !dbg !3235
  %40 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 156), align 8, !dbg !3236, !tbaa !3238
  %41 = icmp sgt i32 %40, 0, !dbg !3239
  %42 = or i32 %39, 128, !dbg !3240
  %43 = select i1 %41, i32 %42, i32 %39, !dbg !3241
  %44 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !3242, !tbaa !3244
  %45 = icmp eq i8* %44, null, !dbg !3245
  br i1 %45, label %46, label %48, !dbg !3246

; <label>:46:                                     ; preds = %34
  %47 = or i32 %43, 4, !dbg !3247
  br label %53, !dbg !3249

; <label>:48:                                     ; preds = %34
  %49 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 211), align 4, !dbg !3250, !tbaa !3253
  %50 = icmp eq i32 %49, 0, !dbg !3254
  %51 = select i1 %50, i32 8, i32 24, !dbg !3255
  %52 = or i32 %51, %43, !dbg !3255
  br label %53, !dbg !3255

; <label>:53:                                     ; preds = %48, %46
  %54 = phi i32 [ %47, %46 ], [ %52, %48 ], !dbg !3256
  %55 = bitcast float* %2 to i8*, !dbg !3257
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #6, !dbg !3257
  %56 = call i32 @getMaxmemoryState(i64* null, i64* null, i64* null, float* nonnull %2) #11, !dbg !3259
  %57 = icmp eq i32 %56, -1, !dbg !3261
  %58 = or i32 %54, 1024, !dbg !3263
  %59 = select i1 %57, i32 %58, i32 %54, !dbg !3264
  %60 = load float, float* %2, align 4, !dbg !3265, !tbaa !3267
  %61 = fcmp ogt float %60, 7.500000e-01, !dbg !3269
  %62 = or i32 %59, 2048, !dbg !3270
  %63 = select i1 %61, i32 %62, i32 %59, !dbg !3271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #6, !dbg !3272
  ret i32 %63, !dbg !3273
}

; Function Attrs: noredzone
declare dso_local i32 @getMaxmemoryState(i64*, i64*, i64*, float*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_SelectDb(%struct.RedisModuleCtx* nocapture readonly, i32) #0 !dbg !3274 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3283
  %4 = load %struct.client*, %struct.client** %3, align 8, !dbg !3283, !tbaa !1168
  %5 = tail call i32 @selectDb(%struct.client* %4, i32 %1) #11, !dbg !3284
  %6 = icmp ne i32 %5, 0, !dbg !3286
  %7 = zext i1 %6 to i32, !dbg !3287
  ret i32 %7, !dbg !3288
}

; Function Attrs: noredzone
declare dso_local i32 @selectDb(%struct.client*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_OpenKey(%struct.RedisModuleCtx*, %struct.redisObject*, i32) #0 !dbg !3289 {
  %4 = and i32 %2, 2, !dbg !3301
  %5 = icmp eq i32 %4, 0, !dbg !3301
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3303
  %7 = load %struct.client*, %struct.client** %6, align 8, !dbg !3303, !tbaa !1168
  %8 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 2, !dbg !3303
  %9 = load %struct.redisDb*, %struct.redisDb** %8, align 8, !dbg !3303, !tbaa !1271
  br i1 %5, label %12, label %10, !dbg !3305

; <label>:10:                                     ; preds = %3
  %11 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* %9, %struct.redisObject* %1) #11, !dbg !3306
  br label %15, !dbg !3309

; <label>:12:                                     ; preds = %3
  %13 = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* %9, %struct.redisObject* %1) #11, !dbg !3310
  %14 = icmp eq %struct.redisObject* %13, null, !dbg !3311
  br i1 %14, label %71, label %15, !dbg !3313

; <label>:15:                                     ; preds = %12, %10
  %16 = phi %struct.redisObject* [ %11, %10 ], [ %13, %12 ], !dbg !3303
  %17 = tail call i8* @zmalloc(i64 120) #11, !dbg !3314
  %18 = bitcast i8* %17 to %struct.RedisModuleCtx**, !dbg !3316
  store %struct.RedisModuleCtx* %0, %struct.RedisModuleCtx** %18, align 8, !dbg !3317, !tbaa !1911
  %19 = load %struct.client*, %struct.client** %6, align 8, !dbg !3318, !tbaa !1168
  %20 = getelementptr inbounds %struct.client, %struct.client* %19, i64 0, i32 2, !dbg !3319
  %21 = bitcast %struct.redisDb** %20 to i64*, !dbg !3319
  %22 = load i64, i64* %21, align 8, !dbg !3319, !tbaa !1271
  %23 = getelementptr inbounds i8, i8* %17, i64 8, !dbg !3320
  %24 = bitcast i8* %23 to i64*, !dbg !3321
  store i64 %22, i64* %24, align 8, !dbg !3321, !tbaa !1061
  %25 = getelementptr inbounds i8, i8* %17, i64 16, !dbg !3322
  %26 = bitcast i8* %25 to %struct.redisObject**, !dbg !3322
  store %struct.redisObject* %1, %struct.redisObject** %26, align 8, !dbg !3323, !tbaa !1063
  tail call void @incrRefCount(%struct.redisObject* %1) #11, !dbg !3324
  %27 = getelementptr inbounds i8, i8* %17, i64 24, !dbg !3325
  %28 = bitcast i8* %27 to %struct.redisObject**, !dbg !3325
  store %struct.redisObject* %16, %struct.redisObject** %28, align 8, !dbg !3326, !tbaa !1033
  %29 = getelementptr inbounds i8, i8* %17, i64 32, !dbg !3327
  %30 = bitcast i8* %29 to i8**, !dbg !3327
  store i8* null, i8** %30, align 8, !dbg !3328, !tbaa !3329
  %31 = getelementptr inbounds i8, i8* %17, i64 40, !dbg !3330
  %32 = bitcast i8* %31 to i32*, !dbg !3330
  store i32 %2, i32* %32, align 8, !dbg !3331, !tbaa !1025
  %33 = getelementptr inbounds i8, i8* %17, i64 44, !dbg !3334
  %34 = bitcast i8* %33 to i32*, !dbg !3334
  store i32 0, i32* %34, align 4, !dbg !3335, !tbaa !1891
  %35 = getelementptr inbounds i8, i8* %17, i64 104, !dbg !3336
  %36 = bitcast i8* %35 to i8**, !dbg !3336
  store i8* null, i8** %36, align 8, !dbg !3337, !tbaa !1904
  %37 = getelementptr inbounds i8, i8* %17, i64 112, !dbg !3338
  %38 = bitcast i8* %37 to i32*, !dbg !3338
  store i32 1, i32* %38, align 8, !dbg !3339, !tbaa !1907
  %39 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !3344
  %40 = load i32, i32* %39, align 8, !dbg !3344, !tbaa !1164
  %41 = and i32 %40, 2, !dbg !3345
  %42 = icmp eq i32 %41, 0, !dbg !3345
  br i1 %42, label %71, label %43, !dbg !3346

; <label>:43:                                     ; preds = %15
  %44 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !3347
  %45 = load i32, i32* %44, align 4, !dbg !3347, !tbaa !1187
  %46 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !3348
  %47 = load i32, i32* %46, align 8, !dbg !3348, !tbaa !1238
  %48 = icmp eq i32 %45, %47, !dbg !3349
  br i1 %48, label %52, label %49, !dbg !3350

; <label>:49:                                     ; preds = %43
  %50 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %51 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %50, align 8, !dbg !3351, !tbaa !1191
  br label %64, !dbg !3350

; <label>:52:                                     ; preds = %43
  %53 = shl nsw i32 %45, 1, !dbg !3352
  %54 = icmp slt i32 %45, 8, !dbg !3353
  %55 = select i1 %54, i32 16, i32 %53, !dbg !3354
  store i32 %55, i32* %46, align 8, !dbg !3355, !tbaa !1238
  %56 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !3356
  %57 = bitcast %struct.AutoMemEntry** %56 to i8**, !dbg !3356
  %58 = load i8*, i8** %57, align 8, !dbg !3356, !tbaa !1191
  %59 = sext i32 %55 to i64, !dbg !3357
  %60 = shl nsw i64 %59, 4, !dbg !3358
  %61 = tail call i8* @zrealloc(i8* %58, i64 %60) #11, !dbg !3359
  store i8* %61, i8** %57, align 8, !dbg !3360, !tbaa !1191
  %62 = bitcast i8* %61 to %struct.AutoMemEntry*, !dbg !3361
  %63 = load i32, i32* %44, align 4, !dbg !3362, !tbaa !1187
  br label %64, !dbg !3361

; <label>:64:                                     ; preds = %52, %49
  %65 = phi i32 [ %45, %49 ], [ %63, %52 ], !dbg !3362
  %66 = phi %struct.AutoMemEntry* [ %51, %49 ], [ %62, %52 ], !dbg !3351
  %67 = sext i32 %65 to i64, !dbg !3363
  %68 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %66, i64 %67, i32 1, !dbg !3364
  store i32 0, i32* %68, align 8, !dbg !3365, !tbaa !1197
  %69 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %66, i64 %67, i32 0, !dbg !3366
  store i8* %17, i8** %69, align 8, !dbg !3367, !tbaa !1193
  %70 = add nsw i32 %65, 1, !dbg !3368
  store i32 %70, i32* %44, align 4, !dbg !3368, !tbaa !1187
  br label %71, !dbg !3369

; <label>:71:                                     ; preds = %64, %15, %12
  %72 = phi i8* [ null, %12 ], [ %17, %15 ], [ %17, %64 ], !dbg !3370
  ret i8* %72, !dbg !3372
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @lookupKeyWrite(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @lookupKeyRead(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @signalModifiedKey(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_ZsetRangeStop(%struct.RedisModuleKey*) #0 !dbg !1885 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !3374
  %3 = load i32, i32* %2, align 4, !dbg !3374, !tbaa !1891
  %4 = icmp eq i32 %3, 1, !dbg !3375
  br i1 %4, label %5, label %7, !dbg !3376

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !3377
  tail call void @zslFreeLexRange(%struct.zlexrangespec* nonnull %6) #11, !dbg !3378
  br label %7, !dbg !3378

; <label>:7:                                      ; preds = %5, %1
  store i32 0, i32* %2, align 4, !dbg !3381, !tbaa !1891
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !3382
  store i8* null, i8** %8, align 8, !dbg !3383, !tbaa !1904
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !3384
  store i32 1, i32* %9, align 8, !dbg !3385, !tbaa !1907
  ret void, !dbg !3386
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @RM_KeyType(%struct.RedisModuleKey* readonly) #4 !dbg !3387 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !3391
  br i1 %2, label %16, label %3, !dbg !3393

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3394
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !3394, !tbaa !1033
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !3395
  br i1 %6, label %16, label %7, !dbg !3396

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !3397
  %9 = load i32, i32* %8, align 8, !dbg !3397
  %10 = trunc i32 %9 to i4, !dbg !3398
  %11 = icmp ult i4 %10, 6, !dbg !3398
  br i1 %11, label %12, label %16, !dbg !3398

; <label>:12:                                     ; preds = %7
  %13 = sext i4 %10 to i64, !dbg !3398
  %14 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.RM_KeyType, i64 0, i64 %13, !dbg !3398
  %15 = load i32, i32* %14, align 4, !dbg !3398
  ret i32 %15, !dbg !3398

; <label>:16:                                     ; preds = %7, %1, %3
  ret i32 0, !dbg !3399
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_ValueLength(%struct.RedisModuleKey* readonly) #0 !dbg !3400 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !3406
  br i1 %2, label %21, label %3, !dbg !3408

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3409
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !3409, !tbaa !1033
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !3410
  br i1 %6, label %21, label %7, !dbg !3411

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !3412
  %9 = load i32, i32* %8, align 8, !dbg !3412
  %10 = trunc i32 %9 to i4, !dbg !3413
  switch i4 %10, label %21 [
    i4 0, label %11
    i4 1, label %13
    i4 2, label %15
    i4 3, label %17
    i4 4, label %19
  ], !dbg !3413

; <label>:11:                                     ; preds = %7
  %12 = tail call i64 @stringObjectLen(%struct.redisObject* nonnull %5) #11, !dbg !3414
  br label %21, !dbg !3416

; <label>:13:                                     ; preds = %7
  %14 = tail call i64 @listTypeLength(%struct.redisObject* nonnull %5) #11, !dbg !3417
  br label %21, !dbg !3418

; <label>:15:                                     ; preds = %7
  %16 = tail call i64 @setTypeSize(%struct.redisObject* nonnull %5) #11, !dbg !3419
  br label %21, !dbg !3420

; <label>:17:                                     ; preds = %7
  %18 = tail call i64 @zsetLength(%struct.redisObject* nonnull %5) #11, !dbg !3421
  br label %21, !dbg !3422

; <label>:19:                                     ; preds = %7
  %20 = tail call i64 @hashTypeLength(%struct.redisObject* nonnull %5) #11, !dbg !3423
  br label %21, !dbg !3424

; <label>:21:                                     ; preds = %7, %1, %3, %19, %17, %15, %13, %11
  %22 = phi i64 [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ 0, %3 ], [ 0, %1 ], [ 0, %7 ], !dbg !3425
  ret i64 %22, !dbg !3426
}

; Function Attrs: noredzone
declare dso_local i64 @stringObjectLen(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DeleteKey(%struct.RedisModuleKey* nocapture) #0 !dbg !3427 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3431
  %3 = load i32, i32* %2, align 8, !dbg !3431, !tbaa !1025
  %4 = and i32 %3, 2, !dbg !3433
  %5 = icmp eq i32 %4, 0, !dbg !3433
  br i1 %5, label %16, label %6, !dbg !3434

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3435
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !3435, !tbaa !1033
  %9 = icmp eq %struct.redisObject* %8, null, !dbg !3437
  br i1 %9, label %16, label %10, !dbg !3438

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3439
  %12 = load %struct.redisDb*, %struct.redisDb** %11, align 8, !dbg !3439, !tbaa !1061
  %13 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3441
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !3441, !tbaa !1063
  %15 = tail call i32 @dbDelete(%struct.redisDb* %12, %struct.redisObject* %14) #11, !dbg !3442
  store %struct.redisObject* null, %struct.redisObject** %7, align 8, !dbg !3443, !tbaa !1033
  br label %16, !dbg !3444

; <label>:16:                                     ; preds = %10, %6, %1
  %17 = phi i32 [ 1, %1 ], [ 0, %6 ], [ 0, %10 ], !dbg !3445
  ret i32 %17, !dbg !3446
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_UnlinkKey(%struct.RedisModuleKey* nocapture) #0 !dbg !3447 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3451
  %3 = load i32, i32* %2, align 8, !dbg !3451, !tbaa !1025
  %4 = and i32 %3, 2, !dbg !3453
  %5 = icmp eq i32 %4, 0, !dbg !3453
  br i1 %5, label %16, label %6, !dbg !3454

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3455
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !3455, !tbaa !1033
  %9 = icmp eq %struct.redisObject* %8, null, !dbg !3457
  br i1 %9, label %16, label %10, !dbg !3458

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3459
  %12 = load %struct.redisDb*, %struct.redisDb** %11, align 8, !dbg !3459, !tbaa !1061
  %13 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3461
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !3461, !tbaa !1063
  %15 = tail call i32 @dbAsyncDelete(%struct.redisDb* %12, %struct.redisObject* %14) #11, !dbg !3462
  store %struct.redisObject* null, %struct.redisObject** %7, align 8, !dbg !3463, !tbaa !1033
  br label %16, !dbg !3464

; <label>:16:                                     ; preds = %10, %6, %1
  %17 = phi i32 [ 1, %1 ], [ 0, %6 ], [ 0, %10 ], !dbg !3465
  ret i32 %17, !dbg !3466
}

; Function Attrs: noredzone
declare dso_local i32 @dbAsyncDelete(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_GetExpire(%struct.RedisModuleKey* nocapture readonly) #0 !dbg !3467 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3474
  %3 = load %struct.redisDb*, %struct.redisDb** %2, align 8, !dbg !3474, !tbaa !1061
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3475
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !3475, !tbaa !1063
  %6 = tail call i64 @getExpire(%struct.redisDb* %3, %struct.redisObject* %5) #11, !dbg !3476
  %7 = icmp eq i64 %6, -1, !dbg !3478
  br i1 %7, label %17, label %8, !dbg !3480

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3481
  %10 = load %struct.redisObject*, %struct.redisObject** %9, align 8, !dbg !3481, !tbaa !1033
  %11 = icmp eq %struct.redisObject* %10, null, !dbg !3482
  br i1 %11, label %17, label %12, !dbg !3483

; <label>:12:                                     ; preds = %8
  %13 = tail call i64 @mstime() #11, !dbg !3484
  %14 = sub nsw i64 %6, %13, !dbg !3485
  %15 = icmp sgt i64 %14, 0, !dbg !3486
  %16 = select i1 %15, i64 %14, i64 0, !dbg !3486
  br label %17, !dbg !3487

; <label>:17:                                     ; preds = %1, %8, %12
  %18 = phi i64 [ %16, %12 ], [ -1, %8 ], [ -1, %1 ], !dbg !3488
  ret i64 %18, !dbg !3489
}

; Function Attrs: noredzone
declare dso_local i64 @getExpire(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_SetExpire(%struct.RedisModuleKey* nocapture readonly, i64) #0 !dbg !3490 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3498
  %4 = load i32, i32* %3, align 8, !dbg !3498, !tbaa !1025
  %5 = and i32 %4, 2, !dbg !3500
  %6 = icmp eq i32 %5, 0, !dbg !3500
  br i1 %6, label %30, label %7, !dbg !3501

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3502
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3502, !tbaa !1033
  %10 = icmp eq %struct.redisObject* %9, null, !dbg !3503
  br i1 %10, label %30, label %11, !dbg !3504

; <label>:11:                                     ; preds = %7
  %12 = icmp eq i64 %1, -1, !dbg !3505
  br i1 %12, label %24, label %13, !dbg !3507

; <label>:13:                                     ; preds = %11
  %14 = tail call i64 @mstime() #11, !dbg !3508
  %15 = add nsw i64 %14, %1, !dbg !3510
  %16 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0, !dbg !3511
  %17 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %16, align 8, !dbg !3511, !tbaa !1911
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %17, i64 0, i32 2, !dbg !3512
  %19 = load %struct.client*, %struct.client** %18, align 8, !dbg !3512, !tbaa !1168
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3513
  %21 = load %struct.redisDb*, %struct.redisDb** %20, align 8, !dbg !3513, !tbaa !1061
  %22 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3514
  %23 = load %struct.redisObject*, %struct.redisObject** %22, align 8, !dbg !3514, !tbaa !1063
  tail call void @setExpire(%struct.client* %19, %struct.redisDb* %21, %struct.redisObject* %23, i64 %15) #11, !dbg !3515
  br label %30, !dbg !3516

; <label>:24:                                     ; preds = %11
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3517
  %26 = load %struct.redisDb*, %struct.redisDb** %25, align 8, !dbg !3517, !tbaa !1061
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3519
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !3519, !tbaa !1063
  %29 = tail call i32 @removeExpire(%struct.redisDb* %26, %struct.redisObject* %28) #11, !dbg !3520
  br label %30

; <label>:30:                                     ; preds = %13, %24, %7, %2
  %31 = phi i32 [ 1, %2 ], [ 1, %7 ], [ 0, %24 ], [ 0, %13 ], !dbg !3521
  ret i32 %31, !dbg !3522
}

; Function Attrs: noredzone
declare dso_local void @setExpire(%struct.client*, %struct.redisDb*, %struct.redisObject*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @removeExpire(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringSet(%struct.RedisModuleKey* nocapture, %struct.redisObject*) #0 !dbg !3523 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3531
  %4 = load i32, i32* %3, align 8, !dbg !3531, !tbaa !1025
  %5 = and i32 %4, 2, !dbg !3533
  %6 = icmp eq i32 %5, 0, !dbg !3533
  br i1 %6, label %27, label %7, !dbg !3534

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 4, !dbg !3535
  %9 = load i8*, i8** %8, align 8, !dbg !3535, !tbaa !3329
  %10 = icmp eq i8* %9, null, !dbg !3536
  br i1 %10, label %11, label %27, !dbg !3537

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3540
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !3540, !tbaa !1033
  %14 = icmp eq %struct.redisObject* %13, null, !dbg !3541
  %15 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3542
  br i1 %14, label %16, label %18, !dbg !3543

; <label>:16:                                     ; preds = %11
  %17 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3544
  br label %23, !dbg !3543

; <label>:18:                                     ; preds = %11
  %19 = load %struct.redisDb*, %struct.redisDb** %15, align 8, !dbg !3545, !tbaa !1061
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3546
  %21 = load %struct.redisObject*, %struct.redisObject** %20, align 8, !dbg !3546, !tbaa !1063
  %22 = tail call i32 @dbDelete(%struct.redisDb* %19, %struct.redisObject* %21) #11, !dbg !3547
  store %struct.redisObject* null, %struct.redisObject** %12, align 8, !dbg !3548, !tbaa !1033
  br label %23, !dbg !3549

; <label>:23:                                     ; preds = %16, %18
  %24 = phi %struct.redisObject** [ %17, %16 ], [ %20, %18 ], !dbg !3544
  %25 = load %struct.redisDb*, %struct.redisDb** %15, align 8, !dbg !3550, !tbaa !1061
  %26 = load %struct.redisObject*, %struct.redisObject** %24, align 8, !dbg !3544, !tbaa !1063
  tail call void @setKey(%struct.redisDb* %25, %struct.redisObject* %26, %struct.redisObject* %1) #11, !dbg !3551
  store %struct.redisObject* %1, %struct.redisObject** %12, align 8, !dbg !3552, !tbaa !1033
  br label %27, !dbg !3553

; <label>:27:                                     ; preds = %2, %7, %23
  %28 = phi i32 [ 0, %23 ], [ 1, %7 ], [ 1, %2 ], !dbg !3542
  ret i32 %28, !dbg !3554
}

; Function Attrs: noredzone
declare dso_local void @setKey(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_StringDMA(%struct.RedisModuleKey* nocapture, i64* nocapture, i32) #0 !dbg !3555 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3566
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !3566, !tbaa !1033
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !3568
  br i1 %6, label %51, label %7, !dbg !3569

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !3570
  %9 = load i32, i32* %8, align 8, !dbg !3570
  %10 = and i32 %9, 15, !dbg !3570
  %11 = icmp eq i32 %10, 0, !dbg !3572
  br i1 %11, label %12, label %54, !dbg !3573

; <label>:12:                                     ; preds = %7
  %13 = and i32 %2, 2, !dbg !3574
  %14 = and i32 %9, 240, !dbg !3576
  %15 = or i32 %14, %13, !dbg !3577
  %16 = icmp eq i32 %15, 0, !dbg !3577
  br i1 %16, label %23, label %17, !dbg !3577

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3578
  %19 = load %struct.redisDb*, %struct.redisDb** %18, align 8, !dbg !3578, !tbaa !1061
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3579
  %21 = load %struct.redisObject*, %struct.redisObject** %20, align 8, !dbg !3579, !tbaa !1063
  %22 = tail call %struct.redisObject* @dbUnshareStringValue(%struct.redisDb* %19, %struct.redisObject* %21, %struct.redisObject* nonnull %5) #11, !dbg !3580
  store %struct.redisObject* %22, %struct.redisObject** %4, align 8, !dbg !3581, !tbaa !1033
  br label %23, !dbg !3582

; <label>:23:                                     ; preds = %12, %17
  %24 = phi %struct.redisObject* [ %5, %12 ], [ %22, %17 ], !dbg !3583
  %25 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %24, i64 0, i32 2, !dbg !3584
  %26 = load i8*, i8** %25, align 8, !dbg !3584, !tbaa !1041
  %27 = getelementptr inbounds i8, i8* %26, i64 -1, !dbg !3587
  %28 = load i8, i8* %27, align 1, !dbg !3587, !tbaa !1123
  %29 = trunc i8 %28 to i3, !dbg !3589
  switch i3 %29, label %51 [
    i3 0, label %30
    i3 1, label %33
    i3 2, label %37
    i3 3, label %42
    i3 -4, label %47
  ], !dbg !3589

; <label>:30:                                     ; preds = %23
  %31 = lshr i8 %28, 3, !dbg !3590
  %32 = zext i8 %31 to i64, !dbg !3590
  br label %51, !dbg !3591

; <label>:33:                                     ; preds = %23
  %34 = getelementptr inbounds i8, i8* %26, i64 -3, !dbg !3592
  %35 = load i8, i8* %34, align 1, !dbg !3593, !tbaa !1123
  %36 = zext i8 %35 to i64, !dbg !3592
  br label %51, !dbg !3594

; <label>:37:                                     ; preds = %23
  %38 = getelementptr inbounds i8, i8* %26, i64 -5, !dbg !3595
  %39 = bitcast i8* %38 to i16*, !dbg !3596
  %40 = load i16, i16* %39, align 1, !dbg !3596, !tbaa !2350
  %41 = zext i16 %40 to i64, !dbg !3595
  br label %51, !dbg !3597

; <label>:42:                                     ; preds = %23
  %43 = getelementptr inbounds i8, i8* %26, i64 -9, !dbg !3598
  %44 = bitcast i8* %43 to i32*, !dbg !3599
  %45 = load i32, i32* %44, align 1, !dbg !3599, !tbaa !933
  %46 = zext i32 %45 to i64, !dbg !3598
  br label %51, !dbg !3600

; <label>:47:                                     ; preds = %23
  %48 = getelementptr inbounds i8, i8* %26, i64 -17, !dbg !3601
  %49 = bitcast i8* %48 to i64*, !dbg !3602
  %50 = load i64, i64* %49, align 1, !dbg !3602, !tbaa !2327
  br label %51, !dbg !3603

; <label>:51:                                     ; preds = %47, %42, %37, %33, %30, %23, %3
  %52 = phi i64 [ 0, %3 ], [ %50, %47 ], [ %46, %42 ], [ %41, %37 ], [ %36, %33 ], [ %32, %30 ], [ 0, %23 ]
  %53 = phi i8* [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0), %3 ], [ %26, %47 ], [ %26, %42 ], [ %26, %37 ], [ %26, %33 ], [ %26, %30 ], [ %26, %23 ]
  store i64 %52, i64* %1, align 8, !dbg !3604, !tbaa !2327
  br label %54, !dbg !3606

; <label>:54:                                     ; preds = %51, %7
  %55 = phi i8* [ null, %7 ], [ %53, %51 ], !dbg !3607
  ret i8* %55, !dbg !3606
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @dbUnshareStringValue(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringTruncate(%struct.RedisModuleKey* nocapture, i64) #0 !dbg !3608 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3621
  %4 = load i32, i32* %3, align 8, !dbg !3621, !tbaa !1025
  %5 = and i32 %4, 2, !dbg !3623
  %6 = icmp eq i32 %5, 0, !dbg !3623
  br i1 %6, label %122, label %7, !dbg !3624

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3625
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3625, !tbaa !1033
  %10 = icmp eq %struct.redisObject* %9, null, !dbg !3627
  br i1 %10, label %18, label %11, !dbg !3628

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 0, !dbg !3629
  %13 = load i32, i32* %12, align 8, !dbg !3629
  %14 = and i32 %13, 15, !dbg !3629
  %15 = icmp ne i32 %14, 0, !dbg !3630
  %16 = icmp ugt i64 %1, 536870912, !dbg !3631
  %17 = or i1 %16, %15, !dbg !3633
  br i1 %17, label %122, label %29, !dbg !3633

; <label>:18:                                     ; preds = %7
  %19 = icmp ugt i64 %1, 536870912, !dbg !3631
  br i1 %19, label %122, label %20, !dbg !3634

; <label>:20:                                     ; preds = %18
  %21 = icmp eq i64 %1, 0, !dbg !3635
  br i1 %21, label %122, label %22, !dbg !3637

; <label>:22:                                     ; preds = %20
  %23 = tail call i8* @sdsnewlen(i8* null, i64 %1) #11, !dbg !3638
  %24 = tail call %struct.redisObject* @createObject(i32 0, i8* %23) #11, !dbg !3639
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3641
  %26 = load %struct.redisDb*, %struct.redisDb** %25, align 8, !dbg !3641, !tbaa !1061
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3642
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !3642, !tbaa !1063
  tail call void @setKey(%struct.redisDb* %26, %struct.redisObject* %28, %struct.redisObject* %24) #11, !dbg !3643
  store %struct.redisObject* %24, %struct.redisObject** %8, align 8, !dbg !3644, !tbaa !1033
  tail call void @decrRefCount(%struct.redisObject* %24) #11, !dbg !3645
  br label %122, !dbg !3646

; <label>:29:                                     ; preds = %11
  %30 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3647
  %31 = load %struct.redisDb*, %struct.redisDb** %30, align 8, !dbg !3647, !tbaa !1061
  %32 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3648
  %33 = load %struct.redisObject*, %struct.redisObject** %32, align 8, !dbg !3648, !tbaa !1063
  %34 = tail call %struct.redisObject* @dbUnshareStringValue(%struct.redisDb* %31, %struct.redisObject* %33, %struct.redisObject* nonnull %9) #11, !dbg !3649
  store %struct.redisObject* %34, %struct.redisObject** %8, align 8, !dbg !3650, !tbaa !1033
  %35 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %34, i64 0, i32 2, !dbg !3651
  %36 = load i8*, i8** %35, align 8, !dbg !3651, !tbaa !1041
  %37 = getelementptr inbounds i8, i8* %36, i64 -1, !dbg !3654
  %38 = load i8, i8* %37, align 1, !dbg !3654, !tbaa !1123
  %39 = trunc i8 %38 to i3, !dbg !3656
  switch i3 %39, label %61 [
    i3 0, label %40
    i3 1, label %43
    i3 2, label %47
    i3 3, label %52
    i3 -4, label %57
  ], !dbg !3656

; <label>:40:                                     ; preds = %29
  %41 = lshr i8 %38, 3, !dbg !3657
  %42 = zext i8 %41 to i64, !dbg !3657
  br label %61, !dbg !3658

; <label>:43:                                     ; preds = %29
  %44 = getelementptr inbounds i8, i8* %36, i64 -3, !dbg !3659
  %45 = load i8, i8* %44, align 1, !dbg !3660, !tbaa !1123
  %46 = zext i8 %45 to i64, !dbg !3659
  br label %61, !dbg !3661

; <label>:47:                                     ; preds = %29
  %48 = getelementptr inbounds i8, i8* %36, i64 -5, !dbg !3662
  %49 = bitcast i8* %48 to i16*, !dbg !3663
  %50 = load i16, i16* %49, align 1, !dbg !3663, !tbaa !2350
  %51 = zext i16 %50 to i64, !dbg !3662
  br label %61, !dbg !3664

; <label>:52:                                     ; preds = %29
  %53 = getelementptr inbounds i8, i8* %36, i64 -9, !dbg !3665
  %54 = bitcast i8* %53 to i32*, !dbg !3666
  %55 = load i32, i32* %54, align 1, !dbg !3666, !tbaa !933
  %56 = zext i32 %55 to i64, !dbg !3665
  br label %61, !dbg !3667

; <label>:57:                                     ; preds = %29
  %58 = getelementptr inbounds i8, i8* %36, i64 -17, !dbg !3668
  %59 = bitcast i8* %58 to i64*, !dbg !3669
  %60 = load i64, i64* %59, align 1, !dbg !3669, !tbaa !2327
  br label %61, !dbg !3670

; <label>:61:                                     ; preds = %29, %40, %43, %47, %52, %57
  %62 = phi i64 [ %60, %57 ], [ %56, %52 ], [ %51, %47 ], [ %46, %43 ], [ %42, %40 ], [ 0, %29 ], !dbg !3671
  %63 = icmp ult i64 %62, %1, !dbg !3673
  br i1 %63, label %64, label %68, !dbg !3675

; <label>:64:                                     ; preds = %61
  %65 = tail call i8* @sdsgrowzero(i8* %36, i64 %1) #11, !dbg !3676
  %66 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3678, !tbaa !1033
  %67 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %66, i64 0, i32 2, !dbg !3679
  store i8* %65, i8** %67, align 8, !dbg !3680, !tbaa !1041
  br label %122, !dbg !3681

; <label>:68:                                     ; preds = %61
  %69 = icmp ugt i64 %62, %1, !dbg !3682
  br i1 %69, label %70, label %122, !dbg !3684

; <label>:70:                                     ; preds = %68
  %71 = add i64 %1, -1, !dbg !3685
  tail call void @sdsrange(i8* %36, i64 0, i64 %71) #11, !dbg !3687
  %72 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3688, !tbaa !1033
  %73 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %72, i64 0, i32 2, !dbg !3690
  %74 = load i8*, i8** %73, align 8, !dbg !3690, !tbaa !1041
  %75 = getelementptr inbounds i8, i8* %74, i64 -1, !dbg !3693
  %76 = load i8, i8* %75, align 1, !dbg !3693, !tbaa !1123
  %77 = trunc i8 %76 to i3, !dbg !3695
  switch i3 %77, label %122 [
    i3 -4, label %106
    i3 1, label %78
    i3 2, label %86
    i3 3, label %96
  ], !dbg !3695

; <label>:78:                                     ; preds = %70
  %79 = getelementptr inbounds i8, i8* %74, i64 -3, !dbg !3696
  %80 = load i8, i8* %79, align 1, !dbg !3697, !tbaa !1123
  %81 = zext i8 %80 to i64, !dbg !3696
  %82 = getelementptr inbounds i8, i8* %74, i64 -2, !dbg !3715
  %83 = load i8, i8* %82, align 1, !dbg !3715, !tbaa !1123
  %84 = zext i8 %83 to i64, !dbg !3716
  %85 = sub nsw i64 %84, %81, !dbg !3717
  br label %114

; <label>:86:                                     ; preds = %70
  %87 = getelementptr inbounds i8, i8* %74, i64 -5, !dbg !3718
  %88 = bitcast i8* %87 to i16*, !dbg !3719
  %89 = load i16, i16* %88, align 1, !dbg !3719, !tbaa !2350
  %90 = zext i16 %89 to i64, !dbg !3718
  %91 = getelementptr inbounds i8, i8* %74, i64 -3, !dbg !3721
  %92 = bitcast i8* %91 to i16*, !dbg !3721
  %93 = load i16, i16* %92, align 1, !dbg !3721, !tbaa !2350
  %94 = zext i16 %93 to i64, !dbg !3722
  %95 = sub nsw i64 %94, %90, !dbg !3723
  br label %114

; <label>:96:                                     ; preds = %70
  %97 = getelementptr inbounds i8, i8* %74, i64 -9, !dbg !3724
  %98 = bitcast i8* %97 to i32*, !dbg !3725
  %99 = load i32, i32* %98, align 1, !dbg !3725, !tbaa !933
  %100 = zext i32 %99 to i64, !dbg !3724
  %101 = getelementptr inbounds i8, i8* %74, i64 -5, !dbg !3727
  %102 = bitcast i8* %101 to i32*, !dbg !3727
  %103 = load i32, i32* %102, align 1, !dbg !3727, !tbaa !933
  %104 = sub i32 %103, %99, !dbg !3728
  %105 = zext i32 %104 to i64, !dbg !3729
  br label %114

; <label>:106:                                    ; preds = %70
  %107 = getelementptr inbounds i8, i8* %74, i64 -17, !dbg !3730
  %108 = bitcast i8* %107 to i64*, !dbg !3731
  %109 = load i64, i64* %108, align 1, !dbg !3731, !tbaa !2327
  %110 = getelementptr inbounds i8, i8* %74, i64 -9, !dbg !3733
  %111 = bitcast i8* %110 to i64*, !dbg !3733
  %112 = load i64, i64* %111, align 1, !dbg !3733, !tbaa !2327
  %113 = sub i64 %112, %109, !dbg !3734
  br label %114

; <label>:114:                                    ; preds = %78, %86, %96, %106
  %115 = phi i64 [ %109, %106 ], [ %100, %96 ], [ %90, %86 ], [ %81, %78 ]
  %116 = phi i64 [ %113, %106 ], [ %105, %96 ], [ %95, %86 ], [ %85, %78 ], !dbg !3735
  %117 = icmp ult i64 %115, %116, !dbg !3737
  br i1 %117, label %118, label %122, !dbg !3738

; <label>:118:                                    ; preds = %114
  %119 = tail call i8* @sdsRemoveFreeSpace(i8* nonnull %74) #11, !dbg !3739
  %120 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3740, !tbaa !1033
  %121 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %120, i64 0, i32 2, !dbg !3741
  store i8* %119, i8** %121, align 8, !dbg !3742, !tbaa !1041
  br label %122, !dbg !3743

; <label>:122:                                    ; preds = %70, %11, %22, %68, %118, %114, %64, %20, %18, %2
  %123 = phi i32 [ 1, %2 ], [ 1, %11 ], [ 1, %18 ], [ 0, %20 ], [ 0, %64 ], [ 0, %114 ], [ 0, %118 ], [ 0, %68 ], [ 0, %22 ], [ 0, %70 ], !dbg !3744
  ret i32 %123, !dbg !3745
}

; Function Attrs: noredzone
declare dso_local i8* @sdsgrowzero(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @sdsrange(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @sdsRemoveFreeSpace(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ListPush(%struct.RedisModuleKey* nocapture, i32, %struct.redisObject*) #0 !dbg !3746 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3756
  %5 = load i32, i32* %4, align 8, !dbg !3756, !tbaa !1025
  %6 = and i32 %5, 2, !dbg !3758
  %7 = icmp eq i32 %6, 0, !dbg !3758
  br i1 %7, label %32, label %8, !dbg !3759

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3760
  %10 = load %struct.redisObject*, %struct.redisObject** %9, align 8, !dbg !3760, !tbaa !1033
  %11 = icmp eq %struct.redisObject* %10, null, !dbg !3762
  br i1 %11, label %17, label %12, !dbg !3763

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 0, !dbg !3764
  %14 = load i32, i32* %13, align 8, !dbg !3764
  %15 = and i32 %14, 15, !dbg !3764
  %16 = icmp eq i32 %15, 1, !dbg !3765
  br i1 %16, label %28, label %32, !dbg !3766

; <label>:17:                                     ; preds = %8
  %18 = tail call %struct.redisObject* @createQuicklistObject() #11, !dbg !3771
  %19 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %18, i64 0, i32 2, !dbg !3773
  %20 = bitcast i8** %19 to %struct.quicklist**, !dbg !3773
  %21 = load %struct.quicklist*, %struct.quicklist** %20, align 8, !dbg !3773, !tbaa !1041
  %22 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 249), align 8, !dbg !3774, !tbaa !1044
  %23 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 250), align 4, !dbg !3775, !tbaa !1052
  tail call void @quicklistSetOptions(%struct.quicklist* %21, i32 %22, i32 %23) #11, !dbg !3776
  %24 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3777
  %25 = load %struct.redisDb*, %struct.redisDb** %24, align 8, !dbg !3777, !tbaa !1061
  %26 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3778
  %27 = load %struct.redisObject*, %struct.redisObject** %26, align 8, !dbg !3778, !tbaa !1063
  tail call void @dbAdd(%struct.redisDb* %25, %struct.redisObject* %27, %struct.redisObject* %18) #11, !dbg !3779
  store %struct.redisObject* %18, %struct.redisObject** %9, align 8, !dbg !3780, !tbaa !1033
  br label %28, !dbg !3781

; <label>:28:                                     ; preds = %12, %17
  %29 = phi %struct.redisObject* [ %10, %12 ], [ %18, %17 ], !dbg !3782
  %30 = icmp ne i32 %1, 0, !dbg !3783
  %31 = sext i1 %30 to i32, !dbg !3784
  tail call void @listTypePush(%struct.redisObject* %29, %struct.redisObject* %2, i32 %31) #11, !dbg !3785
  br label %32, !dbg !3786

; <label>:32:                                     ; preds = %12, %3, %28
  %33 = phi i32 [ 0, %28 ], [ 1, %3 ], [ 1, %12 ], !dbg !3787
  ret i32 %33, !dbg !3788
}

; Function Attrs: noredzone
declare dso_local void @listTypePush(%struct.redisObject*, %struct.redisObject*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_ListPop(%struct.RedisModuleKey* nocapture, i32) #0 !dbg !3789 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3799
  %4 = load i32, i32* %3, align 8, !dbg !3799, !tbaa !1025
  %5 = and i32 %4, 2, !dbg !3801
  %6 = icmp eq i32 %5, 0, !dbg !3801
  br i1 %6, label %57, label %7, !dbg !3802

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3803
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3803, !tbaa !1033
  %10 = icmp eq %struct.redisObject* %9, null, !dbg !3804
  br i1 %10, label %57, label %11, !dbg !3805

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 0, !dbg !3806
  %13 = load i32, i32* %12, align 8, !dbg !3806
  %14 = and i32 %13, 15, !dbg !3806
  %15 = icmp eq i32 %14, 1, !dbg !3807
  br i1 %15, label %16, label %57, !dbg !3808

; <label>:16:                                     ; preds = %11
  %17 = icmp ne i32 %1, 0, !dbg !3809
  %18 = sext i1 %17 to i32, !dbg !3810
  %19 = tail call %struct.redisObject* @listTypePop(%struct.redisObject* nonnull %9, i32 %18) #11, !dbg !3811
  %20 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* %19) #11, !dbg !3813
  tail call void @decrRefCount(%struct.redisObject* %19) #11, !dbg !3815
  %21 = tail call i32 @moduleDelKeyIfEmpty(%struct.RedisModuleKey* nonnull %0) #12, !dbg !3816
  %22 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0, !dbg !3817
  %23 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %22, align 8, !dbg !3817, !tbaa !1911
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 7, !dbg !3822
  %25 = load i32, i32* %24, align 8, !dbg !3822, !tbaa !1164
  %26 = and i32 %25, 2, !dbg !3823
  %27 = icmp eq i32 %26, 0, !dbg !3823
  br i1 %27, label %57, label %28, !dbg !3824

; <label>:28:                                     ; preds = %16
  %29 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 6, !dbg !3825
  %30 = load i32, i32* %29, align 4, !dbg !3825, !tbaa !1187
  %31 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 5, !dbg !3826
  %32 = load i32, i32* %31, align 8, !dbg !3826, !tbaa !1238
  %33 = icmp eq i32 %30, %32, !dbg !3827
  br i1 %33, label %37, label %34, !dbg !3828

; <label>:34:                                     ; preds = %28
  %35 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 4
  %36 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %35, align 8, !dbg !3829, !tbaa !1191
  br label %49, !dbg !3828

; <label>:37:                                     ; preds = %28
  %38 = shl nsw i32 %30, 1, !dbg !3830
  %39 = icmp slt i32 %30, 8, !dbg !3831
  %40 = select i1 %39, i32 16, i32 %38, !dbg !3832
  store i32 %40, i32* %31, align 8, !dbg !3833, !tbaa !1238
  %41 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 4, !dbg !3834
  %42 = bitcast %struct.AutoMemEntry** %41 to i8**, !dbg !3834
  %43 = load i8*, i8** %42, align 8, !dbg !3834, !tbaa !1191
  %44 = sext i32 %40 to i64, !dbg !3835
  %45 = shl nsw i64 %44, 4, !dbg !3836
  %46 = tail call i8* @zrealloc(i8* %43, i64 %45) #11, !dbg !3837
  store i8* %46, i8** %42, align 8, !dbg !3838, !tbaa !1191
  %47 = bitcast i8* %46 to %struct.AutoMemEntry*, !dbg !3839
  %48 = load i32, i32* %29, align 4, !dbg !3840, !tbaa !1187
  br label %49, !dbg !3839

; <label>:49:                                     ; preds = %37, %34
  %50 = phi i32 [ %30, %34 ], [ %48, %37 ], !dbg !3840
  %51 = phi %struct.AutoMemEntry* [ %36, %34 ], [ %47, %37 ], !dbg !3829
  %52 = sext i32 %50 to i64, !dbg !3841
  %53 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %51, i64 %52, i32 1, !dbg !3842
  store i32 1, i32* %53, align 8, !dbg !3843, !tbaa !1197
  %54 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %51, i64 %52, i32 0, !dbg !3844
  %55 = bitcast i8** %54 to %struct.redisObject**, !dbg !3845
  store %struct.redisObject* %20, %struct.redisObject** %55, align 8, !dbg !3845, !tbaa !1193
  %56 = add nsw i32 %50, 1, !dbg !3846
  store i32 %56, i32* %29, align 4, !dbg !3846, !tbaa !1187
  br label %57, !dbg !3847

; <label>:57:                                     ; preds = %49, %16, %7, %2, %11
  %58 = phi %struct.redisObject* [ null, %11 ], [ null, %2 ], [ null, %7 ], [ %20, %16 ], [ %20, %49 ], !dbg !3848
  ret %struct.redisObject* %58, !dbg !3849
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @listTypePop(%struct.redisObject*, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @getDecodedObject(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind readnone
define dso_local i32 @RM_ZsetAddFlagsToCoreFlags(i32) local_unnamed_addr #7 !dbg !3850 {
  %2 = shl i32 %0, 2, !dbg !3858
  %3 = and i32 %2, 4, !dbg !3858
  %4 = and i32 %0, 2, !dbg !3859
  %5 = or i32 %3, %4, !dbg !3861
  ret i32 %5, !dbg !3862
}

; Function Attrs: noredzone nounwind readnone
define dso_local i32 @RM_ZsetAddFlagsFromCoreFlags(i32) local_unnamed_addr #7 !dbg !3863 {
  %2 = lshr i32 %0, 3, !dbg !3869
  %3 = and i32 %2, 12, !dbg !3870
  %4 = shl i32 %0, 1, !dbg !3871
  %5 = and i32 %4, 16, !dbg !3871
  %6 = or i32 %3, %5, !dbg !3871
  ret i32 %6, !dbg !3872
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetAdd(%struct.RedisModuleKey* nocapture, double, %struct.redisObject* nocapture readonly, i32*) #0 !dbg !3873 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*, !dbg !3886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !3886
  store i32 0, i32* %5, align 4, !dbg !3887, !tbaa !933
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3888
  %8 = load i32, i32* %7, align 8, !dbg !3888, !tbaa !1025
  %9 = and i32 %8, 2, !dbg !3890
  %10 = icmp eq i32 %9, 0, !dbg !3890
  br i1 %10, label %50, label %11, !dbg !3891

; <label>:11:                                     ; preds = %4
  %12 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3892
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !3892, !tbaa !1033
  %14 = icmp eq %struct.redisObject* %13, null, !dbg !3894
  br i1 %14, label %20, label %15, !dbg !3895

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %13, i64 0, i32 0, !dbg !3896
  %17 = load i32, i32* %16, align 8, !dbg !3896
  %18 = and i32 %17, 15, !dbg !3896
  %19 = icmp eq i32 %18, 3, !dbg !3897
  br i1 %19, label %26, label %50, !dbg !3898

; <label>:20:                                     ; preds = %11
  %21 = tail call %struct.redisObject* @createZsetZiplistObject() #11, !dbg !3903
  %22 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3905
  %23 = load %struct.redisDb*, %struct.redisDb** %22, align 8, !dbg !3905, !tbaa !1061
  %24 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3906
  %25 = load %struct.redisObject*, %struct.redisObject** %24, align 8, !dbg !3906, !tbaa !1063
  tail call void @dbAdd(%struct.redisDb* %23, %struct.redisObject* %25, %struct.redisObject* %21) #11, !dbg !3907
  store %struct.redisObject* %21, %struct.redisObject** %12, align 8, !dbg !3908, !tbaa !1033
  br label %26, !dbg !3909

; <label>:26:                                     ; preds = %15, %20
  %27 = phi %struct.redisObject* [ %13, %15 ], [ %21, %20 ]
  %28 = icmp ne i32* %3, null, !dbg !3910
  br i1 %28, label %29, label %35, !dbg !3912

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* %3, align 4, !dbg !3913, !tbaa !933
  %31 = shl i32 %30, 2, !dbg !3917
  %32 = and i32 %31, 4, !dbg !3917
  %33 = and i32 %30, 2, !dbg !3918
  %34 = or i32 %32, %33, !dbg !3919
  store i32 %34, i32* %5, align 4, !dbg !3920, !tbaa !933
  br label %35, !dbg !3921

; <label>:35:                                     ; preds = %29, %26
  %36 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !3922
  %37 = load i8*, i8** %36, align 8, !dbg !3922, !tbaa !1041
  %38 = call i32 @zsetAdd(%struct.redisObject* %27, double %1, i8* %37, i32* nonnull %5, double* null) #11, !dbg !3924
  %39 = icmp eq i32 %38, 0, !dbg !3925
  br i1 %39, label %40, label %42, !dbg !3926

; <label>:40:                                     ; preds = %35
  br i1 %28, label %41, label %50, !dbg !3927

; <label>:41:                                     ; preds = %40
  store i32 0, i32* %3, align 4, !dbg !3929, !tbaa !933
  br label %50, !dbg !3931

; <label>:42:                                     ; preds = %35
  br i1 %28, label %43, label %50, !dbg !3932

; <label>:43:                                     ; preds = %42
  %44 = load i32, i32* %5, align 4, !dbg !3933, !tbaa !933
  %45 = lshr i32 %44, 3, !dbg !3938
  %46 = and i32 %45, 12, !dbg !3939
  %47 = shl i32 %44, 1, !dbg !3940
  %48 = and i32 %47, 16, !dbg !3940
  %49 = or i32 %46, %48, !dbg !3940
  store i32 %49, i32* %3, align 4, !dbg !3941, !tbaa !933
  br label %50, !dbg !3942

; <label>:50:                                     ; preds = %42, %43, %40, %41, %15, %4
  %51 = phi i32 [ 1, %4 ], [ 1, %15 ], [ 1, %41 ], [ 1, %40 ], [ 0, %43 ], [ 0, %42 ], !dbg !3943
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !3944
  ret i32 %51, !dbg !3944
}

; Function Attrs: noredzone
declare dso_local i32 @zsetAdd(%struct.redisObject*, double, i8*, i32*, double*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetIncrby(%struct.RedisModuleKey* nocapture, double, %struct.redisObject* nocapture readonly, i32*, double*) #0 !dbg !3945 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*, !dbg !3960
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6, !dbg !3960
  store i32 0, i32* %6, align 4, !dbg !3961, !tbaa !933
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3962
  %9 = load i32, i32* %8, align 8, !dbg !3962, !tbaa !1025
  %10 = and i32 %9, 2, !dbg !3964
  %11 = icmp eq i32 %10, 0, !dbg !3964
  br i1 %11, label %58, label %12, !dbg !3965

; <label>:12:                                     ; preds = %5
  %13 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3966
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !3966, !tbaa !1033
  %15 = icmp eq %struct.redisObject* %14, null, !dbg !3968
  br i1 %15, label %21, label %16, !dbg !3969

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %14, i64 0, i32 0, !dbg !3970
  %18 = load i32, i32* %17, align 8, !dbg !3970
  %19 = and i32 %18, 15, !dbg !3970
  %20 = icmp eq i32 %19, 3, !dbg !3971
  br i1 %20, label %27, label %58, !dbg !3972

; <label>:21:                                     ; preds = %12
  %22 = tail call %struct.redisObject* @createZsetZiplistObject() #11, !dbg !3977
  %23 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3979
  %24 = load %struct.redisDb*, %struct.redisDb** %23, align 8, !dbg !3979, !tbaa !1061
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3980
  %26 = load %struct.redisObject*, %struct.redisObject** %25, align 8, !dbg !3980, !tbaa !1063
  tail call void @dbAdd(%struct.redisDb* %24, %struct.redisObject* %26, %struct.redisObject* %22) #11, !dbg !3981
  store %struct.redisObject* %22, %struct.redisObject** %13, align 8, !dbg !3982, !tbaa !1033
  br label %27, !dbg !3983

; <label>:27:                                     ; preds = %16, %21
  %28 = phi %struct.redisObject* [ %14, %16 ], [ %22, %21 ]
  %29 = icmp ne i32* %3, null, !dbg !3984
  br i1 %29, label %30, label %37, !dbg !3986

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* %3, align 4, !dbg !3987, !tbaa !933
  %32 = shl i32 %31, 2, !dbg !3991
  %33 = and i32 %32, 4, !dbg !3991
  %34 = and i32 %31, 2, !dbg !3992
  %35 = or i32 %33, %34, !dbg !3993
  store i32 %35, i32* %6, align 4, !dbg !3994, !tbaa !933
  %36 = or i32 %35, 1, !dbg !3995
  br label %37, !dbg !3995

; <label>:37:                                     ; preds = %30, %27
  %38 = phi i32 [ %36, %30 ], [ 1, %27 ]
  store i32 %38, i32* %6, align 4, !dbg !3996, !tbaa !933
  %39 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !3997
  %40 = load i8*, i8** %39, align 8, !dbg !3997, !tbaa !1041
  %41 = call i32 @zsetAdd(%struct.redisObject* %28, double %1, i8* %40, i32* nonnull %6, double* %4) #11, !dbg !3999
  %42 = icmp eq i32 %41, 0, !dbg !4000
  br i1 %42, label %43, label %45, !dbg !4001

; <label>:43:                                     ; preds = %37
  br i1 %29, label %44, label %58, !dbg !4002

; <label>:44:                                     ; preds = %43
  store i32 0, i32* %3, align 4, !dbg !4004, !tbaa !933
  br label %58, !dbg !4006

; <label>:45:                                     ; preds = %37
  br i1 %29, label %46, label %58, !dbg !4007

; <label>:46:                                     ; preds = %45
  %47 = load i32, i32* %3, align 4, !dbg !4009, !tbaa !933
  %48 = and i32 %47, 16, !dbg !4010
  %49 = icmp eq i32 %48, 0, !dbg !4010
  br i1 %49, label %51, label %50, !dbg !4011

; <label>:50:                                     ; preds = %46
  store i32 0, i32* %3, align 4, !dbg !4012, !tbaa !933
  br label %58, !dbg !4014

; <label>:51:                                     ; preds = %46
  %52 = load i32, i32* %6, align 4, !dbg !4015, !tbaa !933
  %53 = lshr i32 %52, 3, !dbg !4020
  %54 = and i32 %53, 12, !dbg !4021
  %55 = shl i32 %52, 1, !dbg !4022
  %56 = and i32 %55, 16, !dbg !4022
  %57 = or i32 %54, %56, !dbg !4022
  store i32 %57, i32* %3, align 4, !dbg !4023, !tbaa !933
  br label %58, !dbg !4024

; <label>:58:                                     ; preds = %51, %45, %43, %44, %16, %5, %50
  %59 = phi i32 [ 1, %50 ], [ 1, %5 ], [ 1, %16 ], [ 1, %44 ], [ 1, %43 ], [ 0, %45 ], [ 0, %51 ], !dbg !4025
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6, !dbg !4026
  ret i32 %59, !dbg !4026
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetRem(%struct.RedisModuleKey* nocapture readonly, %struct.redisObject* nocapture readonly, i32*) #0 !dbg !4027 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !4037
  %5 = load i32, i32* %4, align 8, !dbg !4037, !tbaa !1025
  %6 = and i32 %5, 2, !dbg !4039
  %7 = icmp eq i32 %6, 0, !dbg !4039
  br i1 %7, label %28, label %8, !dbg !4040

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4041
  %10 = load %struct.redisObject*, %struct.redisObject** %9, align 8, !dbg !4041, !tbaa !1033
  %11 = icmp eq %struct.redisObject* %10, null, !dbg !4043
  br i1 %11, label %25, label %12, !dbg !4044

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 0, !dbg !4045
  %14 = load i32, i32* %13, align 8, !dbg !4045
  %15 = and i32 %14, 15, !dbg !4045
  %16 = icmp eq i32 %15, 3, !dbg !4046
  br i1 %16, label %17, label %28, !dbg !4047

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !4048
  %19 = load i8*, i8** %18, align 8, !dbg !4048, !tbaa !1041
  %20 = tail call i32 @zsetDel(%struct.redisObject* nonnull %10, i8* %19) #11, !dbg !4050
  %21 = icmp eq i32 %20, 0, !dbg !4050
  br i1 %21, label %25, label %22, !dbg !4051

; <label>:22:                                     ; preds = %17
  %23 = icmp eq i32* %2, null, !dbg !4052
  br i1 %23, label %28, label %24, !dbg !4055

; <label>:24:                                     ; preds = %22
  store i32 1, i32* %2, align 4, !dbg !4056, !tbaa !933
  br label %28, !dbg !4057

; <label>:25:                                     ; preds = %8, %17
  %26 = icmp eq i32* %2, null, !dbg !4058
  br i1 %26, label %28, label %27, !dbg !4061

; <label>:27:                                     ; preds = %25
  store i32 0, i32* %2, align 4, !dbg !4062, !tbaa !933
  br label %28, !dbg !4063

; <label>:28:                                     ; preds = %24, %27, %25, %22, %12, %3
  %29 = phi i32 [ 1, %3 ], [ 1, %12 ], [ 0, %22 ], [ 0, %25 ], [ 0, %27 ], [ 0, %24 ], !dbg !4064
  ret i32 %29, !dbg !4065
}

; Function Attrs: noredzone
declare dso_local i32 @zsetDel(%struct.redisObject*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetScore(%struct.RedisModuleKey* nocapture readonly, %struct.redisObject* nocapture readonly, double*) #0 !dbg !4066 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4076
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !4076, !tbaa !1033
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !4078
  br i1 %6, label %18, label %7, !dbg !4079

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !4080
  %9 = load i32, i32* %8, align 8, !dbg !4080
  %10 = and i32 %9, 15, !dbg !4080
  %11 = icmp eq i32 %10, 3, !dbg !4082
  br i1 %11, label %12, label %18, !dbg !4083

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !4084
  %14 = load i8*, i8** %13, align 8, !dbg !4084, !tbaa !1041
  %15 = tail call i32 @zsetScore(%struct.redisObject* nonnull %5, i8* %14, double* %2) #11, !dbg !4086
  %16 = icmp eq i32 %15, -1, !dbg !4087
  %17 = zext i1 %16 to i32, !dbg !4088
  br label %18, !dbg !4088

; <label>:18:                                     ; preds = %12, %7, %3
  %19 = phi i32 [ 1, %3 ], [ 1, %7 ], [ %17, %12 ], !dbg !4089
  ret i32 %19, !dbg !4090
}

; Function Attrs: noredzone
declare dso_local i32 @zsetScore(%struct.redisObject*, i8*, double*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @zslFreeLexRange(%struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @RM_ZsetRangeEndReached(%struct.RedisModuleKey* nocapture readonly) #4 !dbg !4091 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4095
  %3 = load i32, i32* %2, align 8, !dbg !4095, !tbaa !1907
  ret i32 %3, !dbg !4096
}

; Function Attrs: noredzone nounwind
define dso_local i32 @zsetInitScoreRange(%struct.RedisModuleKey*, double, double, i32, i32, i32) local_unnamed_addr #0 !dbg !4097 {
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4146
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !4146, !tbaa !1033
  %9 = icmp eq %struct.redisObject* %8, null, !dbg !4148
  br i1 %9, label %66, label %10, !dbg !4149

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %8, i64 0, i32 0, !dbg !4150
  %12 = load i32, i32* %11, align 8, !dbg !4150
  %13 = and i32 %12, 15, !dbg !4150
  %14 = icmp eq i32 %13, 3, !dbg !4151
  br i1 %14, label %15, label %66, !dbg !4152

; <label>:15:                                     ; preds = %10
  %16 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !4155
  %17 = load i32, i32* %16, align 4, !dbg !4155, !tbaa !1891
  %18 = icmp eq i32 %17, 1, !dbg !4156
  br i1 %18, label %19, label %23, !dbg !4157

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4158
  tail call void @zslFreeLexRange(%struct.zlexrangespec* nonnull %20) #11, !dbg !4159
  %21 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !4160, !tbaa !1033
  %22 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %21, i64 0, i32 0, !dbg !4161
  br label %23, !dbg !4159

; <label>:23:                                     ; preds = %15, %19
  %24 = phi i32* [ %11, %15 ], [ %22, %19 ], !dbg !4161
  %25 = phi %struct.redisObject* [ %8, %15 ], [ %21, %19 ], !dbg !4160
  %26 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4164
  store i8* null, i8** %26, align 8, !dbg !4165, !tbaa !1904
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4166
  store i32 2, i32* %16, align 4, !dbg !4167, !tbaa !1891
  store i32 0, i32* %27, align 8, !dbg !4168, !tbaa !1907
  %28 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4169
  %29 = getelementptr inbounds %struct.zrangespec, %struct.zrangespec* %28, i64 0, i32 0, !dbg !4171
  store double %1, double* %29, align 8, !dbg !4172, !tbaa !4173
  %30 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, i32 1, !dbg !4174
  store double %2, double* %30, align 8, !dbg !4175, !tbaa !4176
  %31 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, i32 2, !dbg !4177
  store i32 %3, i32* %31, align 8, !dbg !4178, !tbaa !4179
  %32 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, i32 3, !dbg !4180
  store i32 %4, i32* %32, align 4, !dbg !4181, !tbaa !4182
  %33 = load i32, i32* %24, align 8, !dbg !4161
  %34 = lshr i32 %33, 4, !dbg !4161
  %35 = trunc i32 %34 to i4, !dbg !4183
  switch i4 %35, label %61 [
    i4 5, label %36
    i4 7, label %46
  ], !dbg !4183

; <label>:36:                                     ; preds = %23
  %37 = icmp eq i32 %5, 0, !dbg !4184
  %38 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !4186
  %39 = load i8*, i8** %38, align 8, !dbg !4186, !tbaa !1041
  br i1 %37, label %42, label %40, !dbg !4184

; <label>:40:                                     ; preds = %36
  %41 = tail call i8* @zzlFirstInRange(i8* %39, %struct.zrangespec* nonnull %28) #11, !dbg !4187
  br label %44, !dbg !4184

; <label>:42:                                     ; preds = %36
  %43 = tail call i8* @zzlLastInRange(i8* %39, %struct.zrangespec* nonnull %28) #11, !dbg !4188
  br label %44, !dbg !4184

; <label>:44:                                     ; preds = %42, %40
  %45 = phi i8* [ %41, %40 ], [ %43, %42 ], !dbg !4184
  store i8* %45, i8** %26, align 8, !dbg !4189, !tbaa !1904
  br label %62, !dbg !4190

; <label>:46:                                     ; preds = %23
  %47 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !4191
  %48 = bitcast i8** %47 to %struct.zset**, !dbg !4191
  %49 = load %struct.zset*, %struct.zset** %48, align 8, !dbg !4191, !tbaa !1041
  %50 = getelementptr inbounds %struct.zset, %struct.zset* %49, i64 0, i32 1, !dbg !4193
  %51 = load %struct.zskiplist*, %struct.zskiplist** %50, align 8, !dbg !4193, !tbaa !4194
  %52 = icmp eq i32 %5, 0, !dbg !4197
  br i1 %52, label %55, label %53, !dbg !4197

; <label>:53:                                     ; preds = %46
  %54 = tail call %struct.zskiplistNode* @zslFirstInRange(%struct.zskiplist* %51, %struct.zrangespec* nonnull %28) #11, !dbg !4198
  br label %57, !dbg !4197

; <label>:55:                                     ; preds = %46
  %56 = tail call %struct.zskiplistNode* @zslLastInRange(%struct.zskiplist* %51, %struct.zrangespec* nonnull %28) #11, !dbg !4199
  br label %57, !dbg !4197

; <label>:57:                                     ; preds = %55, %53
  %58 = phi %struct.zskiplistNode* [ %54, %53 ], [ %56, %55 ], !dbg !4197
  %59 = bitcast i8** %26 to %struct.zskiplistNode**, !dbg !4200
  store %struct.zskiplistNode* %58, %struct.zskiplistNode** %59, align 8, !dbg !4200, !tbaa !1904
  %60 = bitcast %struct.zskiplistNode* %58 to i8*
  br label %62

; <label>:61:                                     ; preds = %23
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2007, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #11, !dbg !4201
  tail call void @_exit(i32 1) #14, !dbg !4201
  unreachable, !dbg !4201

; <label>:62:                                     ; preds = %57, %44
  %63 = phi i8* [ %60, %57 ], [ %45, %44 ], !dbg !4203
  %64 = icmp eq i8* %63, null, !dbg !4205
  br i1 %64, label %65, label %66, !dbg !4206

; <label>:65:                                     ; preds = %62
  store i32 1, i32* %27, align 8, !dbg !4207, !tbaa !1907
  br label %66, !dbg !4208

; <label>:66:                                     ; preds = %62, %65, %6, %10
  %67 = phi i32 [ 1, %10 ], [ 1, %6 ], [ 0, %65 ], [ 0, %62 ], !dbg !4209
  ret i32 %67, !dbg !4210
}

; Function Attrs: noredzone
declare dso_local i8* @zzlFirstInRange(i8*, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @zzlLastInRange(i8*, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslFirstInRange(%struct.zskiplist*, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslLastInRange(%struct.zskiplist*, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @_serverPanic(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: noredzone noreturn
declare dso_local void @_exit(i32) local_unnamed_addr #8

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetFirstInScoreRange(%struct.RedisModuleKey*, double, double, i32, i32) #0 !dbg !4211 {
  %6 = tail call i32 @zsetInitScoreRange(%struct.RedisModuleKey* %0, double %1, double %2, i32 %3, i32 %4, i32 1) #12, !dbg !4225
  ret i32 %6, !dbg !4226
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetLastInScoreRange(%struct.RedisModuleKey*, double, double, i32, i32) #0 !dbg !4227 {
  %6 = tail call i32 @zsetInitScoreRange(%struct.RedisModuleKey* %0, double %1, double %2, i32 %3, i32 %4, i32 0) #12, !dbg !4239
  ret i32 %6, !dbg !4240
}

; Function Attrs: noredzone nounwind
define dso_local i32 @zsetInitLexRange(%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*, i32) local_unnamed_addr #0 !dbg !4241 {
  %5 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4260
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4260, !tbaa !1033
  %7 = icmp eq %struct.redisObject* %6, null, !dbg !4262
  br i1 %7, label %60, label %8, !dbg !4263

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 0, !dbg !4264
  %10 = load i32, i32* %9, align 8, !dbg !4264
  %11 = and i32 %10, 15, !dbg !4264
  %12 = icmp eq i32 %11, 3, !dbg !4265
  br i1 %12, label %13, label %60, !dbg !4266

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !4269
  %15 = load i32, i32* %14, align 4, !dbg !4269, !tbaa !1891
  %16 = icmp eq i32 %15, 1, !dbg !4270
  %17 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4271
  br i1 %16, label %18, label %19, !dbg !4272

; <label>:18:                                     ; preds = %13
  tail call void @zslFreeLexRange(%struct.zlexrangespec* nonnull %17) #11, !dbg !4273
  br label %19, !dbg !4273

; <label>:19:                                     ; preds = %13, %18
  store i32 0, i32* %14, align 4, !dbg !4276, !tbaa !1891
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4277
  store i8* null, i8** %20, align 8, !dbg !4278, !tbaa !1904
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4279
  store i32 0, i32* %21, align 8, !dbg !4280, !tbaa !1907
  %22 = tail call i32 @zslParseLexRange(%struct.redisObject* %1, %struct.redisObject* %2, %struct.zlexrangespec* nonnull %17) #11, !dbg !4282
  %23 = icmp eq i32 %22, -1, !dbg !4284
  br i1 %23, label %60, label %24, !dbg !4285

; <label>:24:                                     ; preds = %19
  store i32 1, i32* %14, align 4, !dbg !4286, !tbaa !1891
  %25 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4287, !tbaa !1033
  %26 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 0, !dbg !4288
  %27 = load i32, i32* %26, align 8, !dbg !4288
  %28 = lshr i32 %27, 4, !dbg !4288
  %29 = trunc i32 %28 to i4, !dbg !4289
  switch i4 %29, label %55 [
    i4 5, label %30
    i4 7, label %40
  ], !dbg !4289

; <label>:30:                                     ; preds = %24
  %31 = icmp eq i32 %3, 0, !dbg !4290
  %32 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !4292
  %33 = load i8*, i8** %32, align 8, !dbg !4292, !tbaa !1041
  br i1 %31, label %36, label %34, !dbg !4290

; <label>:34:                                     ; preds = %30
  %35 = tail call i8* @zzlFirstInLexRange(i8* %33, %struct.zlexrangespec* nonnull %17) #11, !dbg !4293
  br label %38, !dbg !4290

; <label>:36:                                     ; preds = %30
  %37 = tail call i8* @zzlLastInLexRange(i8* %33, %struct.zlexrangespec* nonnull %17) #11, !dbg !4294
  br label %38, !dbg !4290

; <label>:38:                                     ; preds = %36, %34
  %39 = phi i8* [ %35, %34 ], [ %37, %36 ], !dbg !4290
  store i8* %39, i8** %20, align 8, !dbg !4295, !tbaa !1904
  br label %56, !dbg !4296

; <label>:40:                                     ; preds = %24
  %41 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !4297
  %42 = bitcast i8** %41 to %struct.zset**, !dbg !4297
  %43 = load %struct.zset*, %struct.zset** %42, align 8, !dbg !4297, !tbaa !1041
  %44 = getelementptr inbounds %struct.zset, %struct.zset* %43, i64 0, i32 1, !dbg !4299
  %45 = load %struct.zskiplist*, %struct.zskiplist** %44, align 8, !dbg !4299, !tbaa !4194
  %46 = icmp eq i32 %3, 0, !dbg !4301
  br i1 %46, label %49, label %47, !dbg !4301

; <label>:47:                                     ; preds = %40
  %48 = tail call %struct.zskiplistNode* @zslFirstInLexRange(%struct.zskiplist* %45, %struct.zlexrangespec* nonnull %17) #11, !dbg !4302
  br label %51, !dbg !4301

; <label>:49:                                     ; preds = %40
  %50 = tail call %struct.zskiplistNode* @zslLastInLexRange(%struct.zskiplist* %45, %struct.zlexrangespec* nonnull %17) #11, !dbg !4303
  br label %51, !dbg !4301

; <label>:51:                                     ; preds = %49, %47
  %52 = phi %struct.zskiplistNode* [ %48, %47 ], [ %50, %49 ], !dbg !4301
  %53 = bitcast i8** %20 to %struct.zskiplistNode**, !dbg !4304
  store %struct.zskiplistNode* %52, %struct.zskiplistNode** %53, align 8, !dbg !4304, !tbaa !1904
  %54 = bitcast %struct.zskiplistNode* %52 to i8*
  br label %56

; <label>:55:                                     ; preds = %24
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2071, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #11, !dbg !4305
  tail call void @_exit(i32 1) #14, !dbg !4305
  unreachable, !dbg !4305

; <label>:56:                                     ; preds = %51, %38
  %57 = phi i8* [ %54, %51 ], [ %39, %38 ], !dbg !4307
  %58 = icmp eq i8* %57, null, !dbg !4309
  br i1 %58, label %59, label %60, !dbg !4310

; <label>:59:                                     ; preds = %56
  store i32 1, i32* %21, align 8, !dbg !4311, !tbaa !1907
  br label %60, !dbg !4312

; <label>:60:                                     ; preds = %19, %59, %56, %4, %8
  %61 = phi i32 [ 1, %8 ], [ 1, %4 ], [ 1, %19 ], [ 0, %59 ], [ 0, %56 ], !dbg !4313
  ret i32 %61, !dbg !4314
}

; Function Attrs: noredzone
declare dso_local i32 @zslParseLexRange(%struct.redisObject*, %struct.redisObject*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @zzlFirstInLexRange(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @zzlLastInLexRange(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslFirstInLexRange(%struct.zskiplist*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslLastInLexRange(%struct.zskiplist*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetFirstInLexRange(%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*) #0 !dbg !4315 {
  %4 = tail call i32 @zsetInitLexRange(%struct.RedisModuleKey* %0, %struct.redisObject* %1, %struct.redisObject* %2, i32 1) #12, !dbg !4325
  ret i32 %4, !dbg !4326
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetLastInLexRange(%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*) #0 !dbg !4327 {
  %4 = tail call i32 @zsetInitLexRange(%struct.RedisModuleKey* %0, %struct.redisObject* %1, %struct.redisObject* %2, i32 0) #12, !dbg !4335
  ret i32 %4, !dbg !4336
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_ZsetRangeCurrentElement(%struct.RedisModuleKey* nocapture readonly, double*) #0 !dbg !4337 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4356
  %4 = load i8*, i8** %3, align 8, !dbg !4356, !tbaa !1904
  %5 = icmp eq i8* %4, null, !dbg !4358
  br i1 %5, label %99, label %6, !dbg !4359

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4360
  %8 = bitcast %struct.redisObject** %7 to i32**, !dbg !4360
  %9 = load i32*, i32** %8, align 8, !dbg !4360, !tbaa !1033
  %10 = load i32, i32* %9, align 8, !dbg !4361
  %11 = lshr i32 %10, 4, !dbg !4361
  %12 = trunc i32 %11 to i4, !dbg !4362
  switch i4 %12, label %61 [
    i4 5, label %13
    i4 7, label %24
  ], !dbg !4362

; <label>:13:                                     ; preds = %6
  %14 = tail call i8* @ziplistGetObject(i8* nonnull %4) #11, !dbg !4364
  %15 = icmp eq double* %1, null, !dbg !4366
  br i1 %15, label %22, label %16, !dbg !4368

; <label>:16:                                     ; preds = %13
  %17 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !4369, !tbaa !1033
  %18 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %17, i64 0, i32 2, !dbg !4371
  %19 = load i8*, i8** %18, align 8, !dbg !4371, !tbaa !1041
  %20 = tail call i8* @ziplistNext(i8* %19, i8* nonnull %4) #11, !dbg !4372
  %21 = tail call double @zzlGetScore(i8* %20) #11, !dbg !4374
  store double %21, double* %1, align 8, !dbg !4375, !tbaa !4376
  br label %22, !dbg !4377

; <label>:22:                                     ; preds = %13, %16
  %23 = tail call %struct.redisObject* @createObject(i32 0, i8* %14) #11, !dbg !4378
  br label %62, !dbg !4380

; <label>:24:                                     ; preds = %6
  %25 = icmp eq double* %1, null, !dbg !4381
  br i1 %25, label %31, label %26, !dbg !4383

; <label>:26:                                     ; preds = %24
  %27 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !4385
  %28 = bitcast i8* %27 to i64*, !dbg !4385
  %29 = load i64, i64* %28, align 8, !dbg !4385, !tbaa !4376
  %30 = bitcast double* %1 to i64*, !dbg !4386
  store i64 %29, i64* %30, align 8, !dbg !4386, !tbaa !4376
  br label %31, !dbg !4387

; <label>:31:                                     ; preds = %24, %26
  %32 = bitcast i8* %4 to i8**, !dbg !4388
  %33 = load i8*, i8** %32, align 8, !dbg !4388, !tbaa !902
  %34 = getelementptr inbounds i8, i8* %33, i64 -1, !dbg !4391
  %35 = load i8, i8* %34, align 1, !dbg !4391, !tbaa !1123
  %36 = trunc i8 %35 to i3, !dbg !4393
  switch i3 %36, label %58 [
    i3 0, label %37
    i3 1, label %40
    i3 2, label %44
    i3 3, label %49
    i3 -4, label %54
  ], !dbg !4393

; <label>:37:                                     ; preds = %31
  %38 = lshr i8 %35, 3, !dbg !4394
  %39 = zext i8 %38 to i64, !dbg !4394
  br label %58, !dbg !4395

; <label>:40:                                     ; preds = %31
  %41 = getelementptr inbounds i8, i8* %33, i64 -3, !dbg !4396
  %42 = load i8, i8* %41, align 1, !dbg !4397, !tbaa !1123
  %43 = zext i8 %42 to i64, !dbg !4396
  br label %58, !dbg !4398

; <label>:44:                                     ; preds = %31
  %45 = getelementptr inbounds i8, i8* %33, i64 -5, !dbg !4399
  %46 = bitcast i8* %45 to i16*, !dbg !4400
  %47 = load i16, i16* %46, align 1, !dbg !4400, !tbaa !2350
  %48 = zext i16 %47 to i64, !dbg !4399
  br label %58, !dbg !4401

; <label>:49:                                     ; preds = %31
  %50 = getelementptr inbounds i8, i8* %33, i64 -9, !dbg !4402
  %51 = bitcast i8* %50 to i32*, !dbg !4403
  %52 = load i32, i32* %51, align 1, !dbg !4403, !tbaa !933
  %53 = zext i32 %52 to i64, !dbg !4402
  br label %58, !dbg !4404

; <label>:54:                                     ; preds = %31
  %55 = getelementptr inbounds i8, i8* %33, i64 -17, !dbg !4405
  %56 = bitcast i8* %55 to i64*, !dbg !4406
  %57 = load i64, i64* %56, align 1, !dbg !4406, !tbaa !2327
  br label %58, !dbg !4407

; <label>:58:                                     ; preds = %31, %37, %40, %44, %49, %54
  %59 = phi i64 [ %57, %54 ], [ %53, %49 ], [ %48, %44 ], [ %43, %40 ], [ %39, %37 ], [ 0, %31 ], !dbg !4408
  %60 = tail call %struct.redisObject* @createStringObject(i8* %33, i64 %59) #11, !dbg !4409
  br label %62

; <label>:61:                                     ; preds = %6
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2121, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #11, !dbg !4410
  tail call void @_exit(i32 1) #14, !dbg !4410
  unreachable, !dbg !4410

; <label>:62:                                     ; preds = %58, %22
  %63 = phi %struct.redisObject* [ %23, %22 ], [ %60, %58 ], !dbg !4412
  %64 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0, !dbg !4413
  %65 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %64, align 8, !dbg !4413, !tbaa !1911
  %66 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %65, i64 0, i32 7, !dbg !4418
  %67 = load i32, i32* %66, align 8, !dbg !4418, !tbaa !1164
  %68 = and i32 %67, 2, !dbg !4419
  %69 = icmp eq i32 %68, 0, !dbg !4419
  br i1 %69, label %99, label %70, !dbg !4420

; <label>:70:                                     ; preds = %62
  %71 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %65, i64 0, i32 6, !dbg !4421
  %72 = load i32, i32* %71, align 4, !dbg !4421, !tbaa !1187
  %73 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %65, i64 0, i32 5, !dbg !4422
  %74 = load i32, i32* %73, align 8, !dbg !4422, !tbaa !1238
  %75 = icmp eq i32 %72, %74, !dbg !4423
  br i1 %75, label %79, label %76, !dbg !4424

; <label>:76:                                     ; preds = %70
  %77 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %65, i64 0, i32 4
  %78 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %77, align 8, !dbg !4425, !tbaa !1191
  br label %91, !dbg !4424

; <label>:79:                                     ; preds = %70
  %80 = shl nsw i32 %72, 1, !dbg !4426
  %81 = icmp slt i32 %72, 8, !dbg !4427
  %82 = select i1 %81, i32 16, i32 %80, !dbg !4428
  store i32 %82, i32* %73, align 8, !dbg !4429, !tbaa !1238
  %83 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %65, i64 0, i32 4, !dbg !4430
  %84 = bitcast %struct.AutoMemEntry** %83 to i8**, !dbg !4430
  %85 = load i8*, i8** %84, align 8, !dbg !4430, !tbaa !1191
  %86 = sext i32 %82 to i64, !dbg !4431
  %87 = shl nsw i64 %86, 4, !dbg !4432
  %88 = tail call i8* @zrealloc(i8* %85, i64 %87) #11, !dbg !4433
  store i8* %88, i8** %84, align 8, !dbg !4434, !tbaa !1191
  %89 = bitcast i8* %88 to %struct.AutoMemEntry*, !dbg !4435
  %90 = load i32, i32* %71, align 4, !dbg !4436, !tbaa !1187
  br label %91, !dbg !4435

; <label>:91:                                     ; preds = %79, %76
  %92 = phi i32 [ %72, %76 ], [ %90, %79 ], !dbg !4436
  %93 = phi %struct.AutoMemEntry* [ %78, %76 ], [ %89, %79 ], !dbg !4425
  %94 = sext i32 %92 to i64, !dbg !4437
  %95 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %93, i64 %94, i32 1, !dbg !4438
  store i32 1, i32* %95, align 8, !dbg !4439, !tbaa !1197
  %96 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %93, i64 %94, i32 0, !dbg !4440
  %97 = bitcast i8** %96 to %struct.redisObject**, !dbg !4441
  store %struct.redisObject* %63, %struct.redisObject** %97, align 8, !dbg !4441, !tbaa !1193
  %98 = add nsw i32 %92, 1, !dbg !4442
  store i32 %98, i32* %71, align 4, !dbg !4442, !tbaa !1187
  br label %99, !dbg !4443

; <label>:99:                                     ; preds = %91, %62, %2
  %100 = phi %struct.redisObject* [ null, %2 ], [ %63, %62 ], [ %63, %91 ], !dbg !4444
  ret %struct.redisObject* %100, !dbg !4445
}

; Function Attrs: noredzone
declare dso_local i8* @ziplistGetObject(i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @ziplistNext(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local double @zzlGetScore(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetRangeNext(%struct.RedisModuleKey*) #0 !dbg !4446 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !4465
  %3 = load i32, i32* %2, align 4, !dbg !4465, !tbaa !1891
  %4 = icmp eq i32 %3, 0, !dbg !4467
  br i1 %4, label %76, label %5, !dbg !4468

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4469
  %7 = load i8*, i8** %6, align 8, !dbg !4469, !tbaa !1904
  %8 = icmp eq i8* %7, null, !dbg !4470
  br i1 %8, label %76, label %9, !dbg !4471

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4472
  %11 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !4472, !tbaa !1033
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 0, !dbg !4473
  %13 = load i32, i32* %12, align 8, !dbg !4473
  %14 = lshr i32 %13, 4, !dbg !4473
  %15 = trunc i32 %14 to i4, !dbg !4474
  switch i4 %15, label %75 [
    i4 5, label %16
    i4 7, label %43
  ], !dbg !4474

; <label>:16:                                     ; preds = %9
  %17 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 2, !dbg !4475
  %18 = load i8*, i8** %17, align 8, !dbg !4475, !tbaa !1041
  %19 = tail call i8* @ziplistNext(i8* %18, i8* nonnull %7) #11, !dbg !4478
  %20 = icmp eq i8* %19, null, !dbg !4480
  br i1 %20, label %24, label %21, !dbg !4482

; <label>:21:                                     ; preds = %16
  %22 = tail call i8* @ziplistNext(i8* %18, i8* nonnull %19) #11, !dbg !4483
  %23 = icmp eq i8* %22, null, !dbg !4484
  br i1 %23, label %24, label %26, !dbg !4485

; <label>:24:                                     ; preds = %16, %21
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4486
  store i32 1, i32* %25, align 8, !dbg !4488, !tbaa !1907
  br label %76, !dbg !4489

; <label>:26:                                     ; preds = %21
  %27 = load i32, i32* %2, align 4, !dbg !4490, !tbaa !1891
  switch i32 %27, label %42 [
    i32 2, label %28
    i32 1, label %36
  ], !dbg !4491

; <label>:28:                                     ; preds = %26
  %29 = tail call i8* @ziplistNext(i8* %18, i8* nonnull %22) #11, !dbg !4493
  %30 = tail call double @zzlGetScore(i8* %29) #11, !dbg !4494
  %31 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4496
  %32 = tail call i32 @zslValueLteMax(double %30, %struct.zrangespec* nonnull %31) #11, !dbg !4498
  %33 = icmp eq i32 %32, 0, !dbg !4498
  br i1 %33, label %34, label %42, !dbg !4499

; <label>:34:                                     ; preds = %28
  %35 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4500
  store i32 1, i32* %35, align 8, !dbg !4502, !tbaa !1907
  br label %76

; <label>:36:                                     ; preds = %26
  %37 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4503
  %38 = tail call i32 @zzlLexValueLteMax(i8* nonnull %22, %struct.zlexrangespec* nonnull %37) #11, !dbg !4507
  %39 = icmp eq i32 %38, 0, !dbg !4507
  br i1 %39, label %40, label %42, !dbg !4508

; <label>:40:                                     ; preds = %36
  %41 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4509
  store i32 1, i32* %41, align 8, !dbg !4511, !tbaa !1907
  br label %76, !dbg !4512

; <label>:42:                                     ; preds = %28, %26, %36
  store i8* %22, i8** %6, align 8, !dbg !4513, !tbaa !1904
  br label %76, !dbg !4514

; <label>:43:                                     ; preds = %9
  %44 = getelementptr inbounds i8, i8* %7, i64 24, !dbg !4516
  %45 = bitcast i8* %44 to %struct.zskiplistNode**, !dbg !4517
  %46 = load %struct.zskiplistNode*, %struct.zskiplistNode** %45, align 8, !dbg !4517, !tbaa !4518
  %47 = icmp eq %struct.zskiplistNode* %46, null, !dbg !4521
  br i1 %47, label %48, label %50, !dbg !4523

; <label>:48:                                     ; preds = %43
  %49 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4524
  store i32 1, i32* %49, align 8, !dbg !4526, !tbaa !1907
  br label %76, !dbg !4527

; <label>:50:                                     ; preds = %43
  %51 = icmp eq i32 %3, 2, !dbg !4528
  br i1 %51, label %52, label %62, !dbg !4531

; <label>:52:                                     ; preds = %50
  %53 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %46, i64 0, i32 1, !dbg !4532
  %54 = load double, double* %53, align 8, !dbg !4532, !tbaa !4376
  %55 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4533
  %56 = tail call i32 @zslValueLteMax(double %54, %struct.zrangespec* nonnull %55) #11, !dbg !4534
  %57 = icmp eq i32 %56, 0, !dbg !4534
  br i1 %57, label %60, label %58, !dbg !4535

; <label>:58:                                     ; preds = %52
  %59 = load i32, i32* %2, align 4, !dbg !4536, !tbaa !1891
  br label %62, !dbg !4535

; <label>:60:                                     ; preds = %52
  %61 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4538
  store i32 1, i32* %61, align 8, !dbg !4540, !tbaa !1907
  br label %76, !dbg !4541

; <label>:62:                                     ; preds = %58, %50
  %63 = phi i32 [ %59, %58 ], [ %3, %50 ], !dbg !4536
  %64 = icmp eq i32 %63, 1, !dbg !4542
  br i1 %64, label %65, label %73, !dbg !4543

; <label>:65:                                     ; preds = %62
  %66 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %46, i64 0, i32 0, !dbg !4544
  %67 = load i8*, i8** %66, align 8, !dbg !4544, !tbaa !902
  %68 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4547
  %69 = tail call i32 @zslLexValueLteMax(i8* %67, %struct.zlexrangespec* nonnull %68) #11, !dbg !4548
  %70 = icmp eq i32 %69, 0, !dbg !4548
  br i1 %70, label %71, label %73, !dbg !4549

; <label>:71:                                     ; preds = %65
  %72 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4550
  store i32 1, i32* %72, align 8, !dbg !4552, !tbaa !1907
  br label %76, !dbg !4553

; <label>:73:                                     ; preds = %65, %62
  %74 = bitcast i8** %6 to %struct.zskiplistNode**, !dbg !4554
  store %struct.zskiplistNode* %46, %struct.zskiplistNode** %74, align 8, !dbg !4554, !tbaa !1904
  br label %76, !dbg !4555

; <label>:75:                                     ; preds = %9
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2186, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #11, !dbg !4556
  tail call void @_exit(i32 1) #14, !dbg !4556
  unreachable, !dbg !4556

; <label>:76:                                     ; preds = %34, %48, %60, %71, %73, %24, %40, %42, %1, %5
  %77 = phi i32 [ 0, %5 ], [ 0, %1 ], [ 0, %24 ], [ 1, %42 ], [ 0, %34 ], [ 0, %40 ], [ 0, %48 ], [ 1, %73 ], [ 0, %71 ], [ 0, %60 ], !dbg !4558
  ret i32 %77, !dbg !4559
}

; Function Attrs: noredzone
declare dso_local i32 @zslValueLteMax(double, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zzlLexValueLteMax(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zslLexValueLteMax(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetRangePrev(%struct.RedisModuleKey*) #0 !dbg !4560 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !4579
  %3 = load i32, i32* %2, align 4, !dbg !4579, !tbaa !1891
  %4 = icmp eq i32 %3, 0, !dbg !4581
  br i1 %4, label %76, label %5, !dbg !4582

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4583
  %7 = load i8*, i8** %6, align 8, !dbg !4583, !tbaa !1904
  %8 = icmp eq i8* %7, null, !dbg !4584
  br i1 %8, label %76, label %9, !dbg !4585

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4586
  %11 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !4586, !tbaa !1033
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 0, !dbg !4587
  %13 = load i32, i32* %12, align 8, !dbg !4587
  %14 = lshr i32 %13, 4, !dbg !4587
  %15 = trunc i32 %14 to i4, !dbg !4588
  switch i4 %15, label %75 [
    i4 5, label %16
    i4 7, label %43
  ], !dbg !4588

; <label>:16:                                     ; preds = %9
  %17 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 2, !dbg !4589
  %18 = load i8*, i8** %17, align 8, !dbg !4589, !tbaa !1041
  %19 = tail call i8* @ziplistPrev(i8* %18, i8* nonnull %7) #11, !dbg !4592
  %20 = icmp eq i8* %19, null, !dbg !4594
  br i1 %20, label %24, label %21, !dbg !4596

; <label>:21:                                     ; preds = %16
  %22 = tail call i8* @ziplistPrev(i8* %18, i8* nonnull %19) #11, !dbg !4597
  %23 = icmp eq i8* %22, null, !dbg !4598
  br i1 %23, label %24, label %26, !dbg !4599

; <label>:24:                                     ; preds = %16, %21
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4600
  store i32 1, i32* %25, align 8, !dbg !4602, !tbaa !1907
  br label %76, !dbg !4603

; <label>:26:                                     ; preds = %21
  %27 = load i32, i32* %2, align 4, !dbg !4604, !tbaa !1891
  switch i32 %27, label %42 [
    i32 2, label %28
    i32 1, label %36
  ], !dbg !4605

; <label>:28:                                     ; preds = %26
  %29 = tail call i8* @ziplistNext(i8* %18, i8* nonnull %22) #11, !dbg !4607
  %30 = tail call double @zzlGetScore(i8* %29) #11, !dbg !4608
  %31 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4610
  %32 = tail call i32 @zslValueGteMin(double %30, %struct.zrangespec* nonnull %31) #11, !dbg !4612
  %33 = icmp eq i32 %32, 0, !dbg !4612
  br i1 %33, label %34, label %42, !dbg !4613

; <label>:34:                                     ; preds = %28
  %35 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4614
  store i32 1, i32* %35, align 8, !dbg !4616, !tbaa !1907
  br label %76

; <label>:36:                                     ; preds = %26
  %37 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4617
  %38 = tail call i32 @zzlLexValueGteMin(i8* nonnull %22, %struct.zlexrangespec* nonnull %37) #11, !dbg !4621
  %39 = icmp eq i32 %38, 0, !dbg !4621
  br i1 %39, label %40, label %42, !dbg !4622

; <label>:40:                                     ; preds = %36
  %41 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4623
  store i32 1, i32* %41, align 8, !dbg !4625, !tbaa !1907
  br label %76, !dbg !4626

; <label>:42:                                     ; preds = %28, %26, %36
  store i8* %22, i8** %6, align 8, !dbg !4627, !tbaa !1904
  br label %76, !dbg !4628

; <label>:43:                                     ; preds = %9
  %44 = getelementptr inbounds i8, i8* %7, i64 16, !dbg !4630
  %45 = bitcast i8* %44 to %struct.zskiplistNode**, !dbg !4630
  %46 = load %struct.zskiplistNode*, %struct.zskiplistNode** %45, align 8, !dbg !4630, !tbaa !902
  %47 = icmp eq %struct.zskiplistNode* %46, null, !dbg !4632
  br i1 %47, label %48, label %50, !dbg !4634

; <label>:48:                                     ; preds = %43
  %49 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4635
  store i32 1, i32* %49, align 8, !dbg !4637, !tbaa !1907
  br label %76, !dbg !4638

; <label>:50:                                     ; preds = %43
  %51 = icmp eq i32 %3, 2, !dbg !4639
  br i1 %51, label %52, label %62, !dbg !4642

; <label>:52:                                     ; preds = %50
  %53 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %46, i64 0, i32 1, !dbg !4643
  %54 = load double, double* %53, align 8, !dbg !4643, !tbaa !4376
  %55 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4644
  %56 = tail call i32 @zslValueGteMin(double %54, %struct.zrangespec* nonnull %55) #11, !dbg !4645
  %57 = icmp eq i32 %56, 0, !dbg !4645
  br i1 %57, label %60, label %58, !dbg !4646

; <label>:58:                                     ; preds = %52
  %59 = load i32, i32* %2, align 4, !dbg !4647, !tbaa !1891
  br label %62, !dbg !4646

; <label>:60:                                     ; preds = %52
  %61 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4649
  store i32 1, i32* %61, align 8, !dbg !4651, !tbaa !1907
  br label %76, !dbg !4652

; <label>:62:                                     ; preds = %58, %50
  %63 = phi i32 [ %59, %58 ], [ %3, %50 ], !dbg !4647
  %64 = icmp eq i32 %63, 1, !dbg !4653
  br i1 %64, label %65, label %73, !dbg !4654

; <label>:65:                                     ; preds = %62
  %66 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %46, i64 0, i32 0, !dbg !4655
  %67 = load i8*, i8** %66, align 8, !dbg !4655, !tbaa !902
  %68 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4658
  %69 = tail call i32 @zslLexValueGteMin(i8* %67, %struct.zlexrangespec* nonnull %68) #11, !dbg !4659
  %70 = icmp eq i32 %69, 0, !dbg !4659
  br i1 %70, label %71, label %73, !dbg !4660

; <label>:71:                                     ; preds = %65
  %72 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4661
  store i32 1, i32* %72, align 8, !dbg !4663, !tbaa !1907
  br label %76, !dbg !4664

; <label>:73:                                     ; preds = %65, %62
  %74 = bitcast i8** %6 to %struct.zskiplistNode**, !dbg !4665
  store %struct.zskiplistNode* %46, %struct.zskiplistNode** %74, align 8, !dbg !4665, !tbaa !1904
  br label %76, !dbg !4666

; <label>:75:                                     ; preds = %9
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2249, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #11, !dbg !4667
  tail call void @_exit(i32 1) #14, !dbg !4667
  unreachable, !dbg !4667

; <label>:76:                                     ; preds = %34, %48, %60, %71, %73, %24, %40, %42, %1, %5
  %77 = phi i32 [ 0, %5 ], [ 0, %1 ], [ 0, %24 ], [ 1, %42 ], [ 0, %34 ], [ 0, %40 ], [ 0, %48 ], [ 1, %73 ], [ 0, %71 ], [ 0, %60 ], !dbg !4669
  ret i32 %77, !dbg !4670
}

; Function Attrs: noredzone
declare dso_local i8* @ziplistPrev(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zslValueGteMin(double, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zzlLexValueGteMin(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zslLexValueGteMin(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_HashSet(%struct.RedisModuleKey* nocapture, i32, ...) #0 !dbg !4671 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca [2 x %struct.redisObject*], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !4693
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6, !dbg !4693
  %6 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !4695
  %7 = load i32, i32* %6, align 8, !dbg !4695, !tbaa !1025
  %8 = and i32 %7, 2, !dbg !4697
  %9 = icmp eq i32 %8, 0, !dbg !4697
  br i1 %9, label %133, label %10, !dbg !4698

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4699
  %12 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4699, !tbaa !1033
  %13 = icmp eq %struct.redisObject* %12, null, !dbg !4701
  br i1 %13, label %19, label %14, !dbg !4702

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %12, i64 0, i32 0, !dbg !4703
  %16 = load i32, i32* %15, align 8, !dbg !4703
  %17 = and i32 %16, 15, !dbg !4703
  %18 = icmp eq i32 %17, 4, !dbg !4704
  br i1 %18, label %25, label %133, !dbg !4705

; <label>:19:                                     ; preds = %10
  %20 = tail call %struct.redisObject* @createHashObject() #11, !dbg !4710
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !4712
  %22 = load %struct.redisDb*, %struct.redisDb** %21, align 8, !dbg !4712, !tbaa !1061
  %23 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !4713
  %24 = load %struct.redisObject*, %struct.redisObject** %23, align 8, !dbg !4713, !tbaa !1063
  tail call void @dbAdd(%struct.redisDb* %22, %struct.redisObject* %24, %struct.redisObject* %20) #11, !dbg !4714
  store %struct.redisObject* %20, %struct.redisObject** %11, align 8, !dbg !4715, !tbaa !1033
  br label %25, !dbg !4716

; <label>:25:                                     ; preds = %14, %19
  call void @llvm.va_start(i8* nonnull %5), !dbg !4718
  %26 = and i32 %1, 4
  %27 = icmp ne i32 %26, 0
  %28 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0
  %29 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2
  %31 = and i32 %1, 3
  %32 = icmp eq i32 %31, 0
  %33 = and i32 %1, 2
  %34 = icmp eq i32 %33, 0
  %35 = lshr exact i32 %26, 2
  %36 = bitcast [2 x %struct.redisObject*]* %4 to i8*
  %37 = getelementptr inbounds [2 x %struct.redisObject*], [2 x %struct.redisObject*]* %4, i64 0, i64 0
  %38 = getelementptr inbounds [2 x %struct.redisObject*], [2 x %struct.redisObject*]* %4, i64 0, i64 1
  %39 = and i32 %1, 1
  %40 = icmp ne i32 %39, 0
  br label %41, !dbg !4719

; <label>:41:                                     ; preds = %129, %25
  %42 = phi i32 [ 0, %25 ], [ %130, %129 ]
  br label %43, !dbg !4720

; <label>:43:                                     ; preds = %108, %41
  %44 = load i32, i32* %28, align 16, !dbg !4720
  %45 = icmp ult i32 %44, 41, !dbg !4720
  br i1 %27, label %46, label %64, !dbg !4722

; <label>:46:                                     ; preds = %43
  br i1 %45, label %47, label %52, !dbg !4723

; <label>:47:                                     ; preds = %46
  %48 = load i8*, i8** %29, align 16, !dbg !4723
  %49 = sext i32 %44 to i64, !dbg !4723
  %50 = getelementptr i8, i8* %48, i64 %49, !dbg !4723
  %51 = add i32 %44, 8, !dbg !4723
  store i32 %51, i32* %28, align 16, !dbg !4723
  br label %55, !dbg !4723

; <label>:52:                                     ; preds = %46
  %53 = load i8*, i8** %30, align 8, !dbg !4723
  %54 = getelementptr i8, i8* %53, i64 8, !dbg !4723
  store i8* %54, i8** %30, align 8, !dbg !4723
  br label %55, !dbg !4723

; <label>:55:                                     ; preds = %52, %47
  %56 = phi i8* [ %50, %47 ], [ %53, %52 ]
  %57 = bitcast i8* %56 to i8**, !dbg !4723
  %58 = load i8*, i8** %57, align 8, !dbg !4723
  %59 = icmp eq i8* %58, null, !dbg !4725
  br i1 %59, label %131, label %60, !dbg !4727

; <label>:60:                                     ; preds = %55
  %61 = call i64 @strlen(i8* nonnull %58) #11, !dbg !4728
  %62 = call %struct.redisObject* @createRawStringObject(i8* nonnull %58, i64 %61) #11, !dbg !4729
  %63 = load i32, i32* %28, align 16, !dbg !4731
  br label %79

; <label>:64:                                     ; preds = %43
  br i1 %45, label %65, label %70, !dbg !4732

; <label>:65:                                     ; preds = %64
  %66 = load i8*, i8** %29, align 16, !dbg !4732
  %67 = sext i32 %44 to i64, !dbg !4732
  %68 = getelementptr i8, i8* %66, i64 %67, !dbg !4732
  %69 = add i32 %44, 8, !dbg !4732
  store i32 %69, i32* %28, align 16, !dbg !4732
  br label %73, !dbg !4732

; <label>:70:                                     ; preds = %64
  %71 = load i8*, i8** %30, align 8, !dbg !4732
  %72 = getelementptr i8, i8* %71, i64 8, !dbg !4732
  store i8* %72, i8** %30, align 8, !dbg !4732
  br label %73, !dbg !4732

; <label>:73:                                     ; preds = %70, %65
  %74 = phi i32 [ %69, %65 ], [ %44, %70 ]
  %75 = phi i8* [ %68, %65 ], [ %71, %70 ]
  %76 = bitcast i8* %75 to %struct.redisObject**, !dbg !4732
  %77 = load %struct.redisObject*, %struct.redisObject** %76, align 8, !dbg !4732
  %78 = icmp eq %struct.redisObject* %77, null, !dbg !4733
  br i1 %78, label %131, label %79, !dbg !4735

; <label>:79:                                     ; preds = %60, %73
  %80 = phi i32 [ %74, %73 ], [ %63, %60 ], !dbg !4731
  %81 = phi %struct.redisObject* [ %77, %73 ], [ %62, %60 ]
  %82 = icmp ult i32 %80, 41, !dbg !4731
  br i1 %82, label %83, label %88, !dbg !4731

; <label>:83:                                     ; preds = %79
  %84 = load i8*, i8** %29, align 16, !dbg !4731
  %85 = sext i32 %80 to i64, !dbg !4731
  %86 = getelementptr i8, i8* %84, i64 %85, !dbg !4731
  %87 = add i32 %80, 8, !dbg !4731
  store i32 %87, i32* %28, align 16, !dbg !4731
  br label %91, !dbg !4731

; <label>:88:                                     ; preds = %79
  %89 = load i8*, i8** %30, align 8, !dbg !4731
  %90 = getelementptr i8, i8* %89, i64 8, !dbg !4731
  store i8* %90, i8** %30, align 8, !dbg !4731
  br label %91, !dbg !4731

; <label>:91:                                     ; preds = %88, %83
  %92 = phi i8* [ %86, %83 ], [ %89, %88 ]
  %93 = bitcast i8* %92 to %struct.redisObject**, !dbg !4731
  %94 = load %struct.redisObject*, %struct.redisObject** %93, align 8, !dbg !4731
  br i1 %32, label %109, label %95, !dbg !4737

; <label>:95:                                     ; preds = %91
  %96 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4738, !tbaa !1033
  %97 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %81, i64 0, i32 2, !dbg !4739
  %98 = load i8*, i8** %97, align 8, !dbg !4739, !tbaa !1041
  %99 = call i32 @hashTypeExists(%struct.redisObject* %96, i8* %98) #11, !dbg !4740
  %100 = icmp ne i32 %99, 0, !dbg !4742
  %101 = or i1 %34, %100, !dbg !4744
  br i1 %101, label %102, label %105, !dbg !4744

; <label>:102:                                    ; preds = %95
  %103 = and i1 %40, %100, !dbg !4745
  %104 = and i1 %27, %103, !dbg !4745
  br i1 %104, label %106, label %107, !dbg !4745

; <label>:105:                                    ; preds = %95
  br i1 %27, label %106, label %108, !dbg !4746

; <label>:106:                                    ; preds = %102, %105
  call void @decrRefCount(%struct.redisObject* nonnull %81) #11, !dbg !4748
  br label %108, !dbg !4748

; <label>:107:                                    ; preds = %102
  br i1 %103, label %108, label %109

; <label>:108:                                    ; preds = %107, %105, %106
  br label %43, !dbg !4717, !llvm.loop !4750

; <label>:109:                                    ; preds = %107, %91
  %110 = icmp eq %struct.redisObject* %94, inttoptr (i64 1 to %struct.redisObject*), !dbg !4752
  br i1 %110, label %111, label %118, !dbg !4754

; <label>:111:                                    ; preds = %109
  %112 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4755, !tbaa !1033
  %113 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %81, i64 0, i32 2, !dbg !4757
  %114 = load i8*, i8** %113, align 8, !dbg !4757, !tbaa !1041
  %115 = call i32 @hashTypeDelete(%struct.redisObject* %112, i8* %114) #11, !dbg !4758
  %116 = add nsw i32 %115, %42, !dbg !4759
  br i1 %27, label %117, label %129, !dbg !4760

; <label>:117:                                    ; preds = %111
  call void @decrRefCount(%struct.redisObject* nonnull %81) #11, !dbg !4761
  br label %129, !dbg !4761

; <label>:118:                                    ; preds = %109
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #6, !dbg !4764
  store %struct.redisObject* %81, %struct.redisObject** %37, align 16, !dbg !4766, !tbaa !902
  store %struct.redisObject* %94, %struct.redisObject** %38, align 8, !dbg !4766, !tbaa !902
  %119 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4767, !tbaa !1033
  call void @hashTypeTryConversion(%struct.redisObject* %119, %struct.redisObject** nonnull %37, i32 0, i32 1) #11, !dbg !4768
  %120 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4769, !tbaa !1033
  %121 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %81, i64 0, i32 2, !dbg !4770
  %122 = load i8*, i8** %121, align 8, !dbg !4770, !tbaa !1041
  %123 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %94, i64 0, i32 2, !dbg !4771
  %124 = load i8*, i8** %123, align 8, !dbg !4771, !tbaa !1041
  %125 = call i32 @hashTypeSet(%struct.redisObject* %120, i8* %122, i8* %124, i32 %35) #11, !dbg !4772
  %126 = add nsw i32 %125, %42, !dbg !4773
  br i1 %27, label %127, label %128, !dbg !4774

; <label>:127:                                    ; preds = %118
  store i8* null, i8** %121, align 8, !dbg !4775, !tbaa !1041
  call void @decrRefCount(%struct.redisObject* nonnull %81) #11, !dbg !4778
  br label %128, !dbg !4779

; <label>:128:                                    ; preds = %127, %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #6, !dbg !4751
  br label %129, !dbg !4751

; <label>:129:                                    ; preds = %128, %117, %111
  %130 = phi i32 [ %116, %111 ], [ %116, %117 ], [ %126, %128 ]
  br label %41, !dbg !4720, !llvm.loop !4750

; <label>:131:                                    ; preds = %73, %55
  call void @llvm.va_end(i8* nonnull %5), !dbg !4780
  %132 = call i32 @moduleDelKeyIfEmpty(%struct.RedisModuleKey* %0) #12, !dbg !4781
  br label %133

; <label>:133:                                    ; preds = %14, %2, %131
  %134 = phi i32 [ %42, %131 ], [ 0, %2 ], [ 0, %14 ], !dbg !4782
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6, !dbg !4783
  ret i32 %134, !dbg !4783
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createRawStringObject(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @hashTypeExists(%struct.redisObject*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @hashTypeDelete(%struct.redisObject*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @hashTypeTryConversion(%struct.redisObject*, %struct.redisObject**, i32, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @hashTypeSet(%struct.redisObject*, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_HashGet(%struct.RedisModuleKey* nocapture readonly, i32, ...) #0 !dbg !4784 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !4805
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6, !dbg !4805
  %5 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4807
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4807, !tbaa !1033
  %7 = icmp eq %struct.redisObject* %6, null, !dbg !4809
  br i1 %7, label %13, label %8, !dbg !4810

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 0, !dbg !4811
  %10 = load i32, i32* %9, align 8, !dbg !4811
  %11 = and i32 %10, 15, !dbg !4811
  %12 = icmp eq i32 %11, 4, !dbg !4812
  br i1 %12, label %13, label %146, !dbg !4813

; <label>:13:                                     ; preds = %8, %2
  call void @llvm.va_start(i8* nonnull %4), !dbg !4814
  %14 = and i32 %1, 4
  %15 = icmp ne i32 %14, 0
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0
  %17 = and i32 %1, 8
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3
  %20 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0
  br label %22, !dbg !4815

; <label>:22:                                     ; preds = %143, %13
  %23 = load i32, i32* %16, align 16, !dbg !4816
  %24 = icmp ult i32 %23, 41, !dbg !4816
  br i1 %15, label %25, label %43, !dbg !4818

; <label>:25:                                     ; preds = %22
  br i1 %24, label %26, label %31, !dbg !4819

; <label>:26:                                     ; preds = %25
  %27 = load i8*, i8** %19, align 16, !dbg !4819
  %28 = sext i32 %23 to i64, !dbg !4819
  %29 = getelementptr i8, i8* %27, i64 %28, !dbg !4819
  %30 = add i32 %23, 8, !dbg !4819
  store i32 %30, i32* %16, align 16, !dbg !4819
  br label %34, !dbg !4819

; <label>:31:                                     ; preds = %25
  %32 = load i8*, i8** %20, align 8, !dbg !4819
  %33 = getelementptr i8, i8* %32, i64 8, !dbg !4819
  store i8* %33, i8** %20, align 8, !dbg !4819
  br label %34, !dbg !4819

; <label>:34:                                     ; preds = %31, %26
  %35 = phi i8* [ %29, %26 ], [ %32, %31 ]
  %36 = bitcast i8* %35 to i8**, !dbg !4819
  %37 = load i8*, i8** %36, align 8, !dbg !4819
  %38 = icmp eq i8* %37, null, !dbg !4821
  br i1 %38, label %145, label %39, !dbg !4823

; <label>:39:                                     ; preds = %34
  %40 = call i64 @strlen(i8* nonnull %37) #11, !dbg !4824
  %41 = call %struct.redisObject* @createRawStringObject(i8* nonnull %37, i64 %40) #11, !dbg !4825
  %42 = load i32, i32* %16, align 16, !dbg !4827
  br label %58

; <label>:43:                                     ; preds = %22
  br i1 %24, label %44, label %49, !dbg !4828

; <label>:44:                                     ; preds = %43
  %45 = load i8*, i8** %19, align 16, !dbg !4828
  %46 = sext i32 %23 to i64, !dbg !4828
  %47 = getelementptr i8, i8* %45, i64 %46, !dbg !4828
  %48 = add i32 %23, 8, !dbg !4828
  store i32 %48, i32* %16, align 16, !dbg !4828
  br label %52, !dbg !4828

; <label>:49:                                     ; preds = %43
  %50 = load i8*, i8** %20, align 8, !dbg !4828
  %51 = getelementptr i8, i8* %50, i64 8, !dbg !4828
  store i8* %51, i8** %20, align 8, !dbg !4828
  br label %52, !dbg !4828

; <label>:52:                                     ; preds = %49, %44
  %53 = phi i32 [ %48, %44 ], [ %23, %49 ]
  %54 = phi i8* [ %47, %44 ], [ %50, %49 ]
  %55 = bitcast i8* %54 to %struct.redisObject**, !dbg !4828
  %56 = load %struct.redisObject*, %struct.redisObject** %55, align 8, !dbg !4828
  %57 = icmp eq %struct.redisObject* %56, null, !dbg !4829
  br i1 %57, label %145, label %58, !dbg !4831

; <label>:58:                                     ; preds = %39, %52
  %59 = phi i32 [ %53, %52 ], [ %42, %39 ], !dbg !4827
  %60 = phi %struct.redisObject* [ %56, %52 ], [ %41, %39 ]
  %61 = icmp ult i32 %59, 41, !dbg !4827
  br i1 %18, label %82, label %62, !dbg !4832

; <label>:62:                                     ; preds = %58
  br i1 %61, label %63, label %68, !dbg !4833

; <label>:63:                                     ; preds = %62
  %64 = load i8*, i8** %19, align 16, !dbg !4833
  %65 = sext i32 %59 to i64, !dbg !4833
  %66 = getelementptr i8, i8* %64, i64 %65, !dbg !4833
  %67 = add i32 %59, 8, !dbg !4833
  store i32 %67, i32* %16, align 16, !dbg !4833
  br label %71, !dbg !4833

; <label>:68:                                     ; preds = %62
  %69 = load i8*, i8** %20, align 8, !dbg !4833
  %70 = getelementptr i8, i8* %69, i64 8, !dbg !4833
  store i8* %70, i8** %20, align 8, !dbg !4833
  br label %71, !dbg !4833

; <label>:71:                                     ; preds = %68, %63
  %72 = phi i8* [ %66, %63 ], [ %69, %68 ]
  %73 = bitcast i8* %72 to i32**, !dbg !4833
  %74 = load i32*, i32** %73, align 8, !dbg !4833
  %75 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4836, !tbaa !1033
  %76 = icmp eq %struct.redisObject* %75, null, !dbg !4838
  br i1 %76, label %81, label %77, !dbg !4839

; <label>:77:                                     ; preds = %71
  %78 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %60, i64 0, i32 2, !dbg !4840
  %79 = load i8*, i8** %78, align 8, !dbg !4840, !tbaa !1041
  %80 = call i32 @hashTypeExists(%struct.redisObject* nonnull %75, i8* %79) #11, !dbg !4841
  store i32 %80, i32* %74, align 4, !dbg !4842, !tbaa !933
  br label %142, !dbg !4843

; <label>:81:                                     ; preds = %71
  store i32 0, i32* %74, align 4, !dbg !4844, !tbaa !933
  br label %142

; <label>:82:                                     ; preds = %58
  br i1 %61, label %83, label %88, !dbg !4845

; <label>:83:                                     ; preds = %82
  %84 = load i8*, i8** %19, align 16, !dbg !4845
  %85 = sext i32 %59 to i64, !dbg !4845
  %86 = getelementptr i8, i8* %84, i64 %85, !dbg !4845
  %87 = add i32 %59, 8, !dbg !4845
  store i32 %87, i32* %16, align 16, !dbg !4845
  br label %91, !dbg !4845

; <label>:88:                                     ; preds = %82
  %89 = load i8*, i8** %20, align 8, !dbg !4845
  %90 = getelementptr i8, i8* %89, i64 8, !dbg !4845
  store i8* %90, i8** %20, align 8, !dbg !4845
  br label %91, !dbg !4845

; <label>:91:                                     ; preds = %88, %83
  %92 = phi i8* [ %86, %83 ], [ %89, %88 ]
  %93 = bitcast i8* %92 to %struct.redisObject***, !dbg !4845
  %94 = load %struct.redisObject**, %struct.redisObject*** %93, align 8, !dbg !4845
  %95 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4847, !tbaa !1033
  %96 = icmp eq %struct.redisObject* %95, null, !dbg !4848
  br i1 %96, label %141, label %97, !dbg !4849

; <label>:97:                                     ; preds = %91
  %98 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %60, i64 0, i32 2, !dbg !4850
  %99 = load i8*, i8** %98, align 8, !dbg !4850, !tbaa !1041
  %100 = call %struct.redisObject* @hashTypeGetValueObject(%struct.redisObject* nonnull %95, i8* %99) #11, !dbg !4851
  store %struct.redisObject* %100, %struct.redisObject** %94, align 8, !dbg !4852, !tbaa !902
  %101 = icmp eq %struct.redisObject* %100, null, !dbg !4853
  br i1 %101, label %142, label %102, !dbg !4854

; <label>:102:                                    ; preds = %97
  %103 = call %struct.redisObject* @getDecodedObject(%struct.redisObject* nonnull %100) #11, !dbg !4855
  %104 = load %struct.redisObject*, %struct.redisObject** %94, align 8, !dbg !4857, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %104) #11, !dbg !4858
  store %struct.redisObject* %103, %struct.redisObject** %94, align 8, !dbg !4859, !tbaa !902
  %105 = icmp eq %struct.redisObject* %103, null, !dbg !4860
  br i1 %105, label %142, label %106, !dbg !4862

; <label>:106:                                    ; preds = %102
  %107 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %21, align 8, !dbg !4863, !tbaa !1911
  %108 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %107, i64 0, i32 7, !dbg !4868
  %109 = load i32, i32* %108, align 8, !dbg !4868, !tbaa !1164
  %110 = and i32 %109, 2, !dbg !4869
  %111 = icmp eq i32 %110, 0, !dbg !4869
  br i1 %111, label %142, label %112, !dbg !4870

; <label>:112:                                    ; preds = %106
  %113 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %107, i64 0, i32 6, !dbg !4871
  %114 = load i32, i32* %113, align 4, !dbg !4871, !tbaa !1187
  %115 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %107, i64 0, i32 5, !dbg !4872
  %116 = load i32, i32* %115, align 8, !dbg !4872, !tbaa !1238
  %117 = icmp eq i32 %114, %116, !dbg !4873
  br i1 %117, label %121, label %118, !dbg !4874

; <label>:118:                                    ; preds = %112
  %119 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %107, i64 0, i32 4
  %120 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %119, align 8, !dbg !4875, !tbaa !1191
  br label %133, !dbg !4874

; <label>:121:                                    ; preds = %112
  %122 = shl nsw i32 %114, 1, !dbg !4876
  %123 = icmp slt i32 %114, 8, !dbg !4877
  %124 = select i1 %123, i32 16, i32 %122, !dbg !4878
  store i32 %124, i32* %115, align 8, !dbg !4879, !tbaa !1238
  %125 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %107, i64 0, i32 4, !dbg !4880
  %126 = bitcast %struct.AutoMemEntry** %125 to i8**, !dbg !4880
  %127 = load i8*, i8** %126, align 8, !dbg !4880, !tbaa !1191
  %128 = sext i32 %124 to i64, !dbg !4881
  %129 = shl nsw i64 %128, 4, !dbg !4882
  %130 = call i8* @zrealloc(i8* %127, i64 %129) #11, !dbg !4883
  store i8* %130, i8** %126, align 8, !dbg !4884, !tbaa !1191
  %131 = bitcast i8* %130 to %struct.AutoMemEntry*, !dbg !4885
  %132 = load i32, i32* %113, align 4, !dbg !4886, !tbaa !1187
  br label %133, !dbg !4885

; <label>:133:                                    ; preds = %121, %118
  %134 = phi i32 [ %114, %118 ], [ %132, %121 ], !dbg !4886
  %135 = phi %struct.AutoMemEntry* [ %120, %118 ], [ %131, %121 ], !dbg !4875
  %136 = sext i32 %134 to i64, !dbg !4887
  %137 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %135, i64 %136, i32 1, !dbg !4888
  store i32 1, i32* %137, align 8, !dbg !4889, !tbaa !1197
  %138 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %135, i64 %136, i32 0, !dbg !4890
  %139 = bitcast i8** %138 to %struct.redisObject**, !dbg !4891
  store %struct.redisObject* %103, %struct.redisObject** %139, align 8, !dbg !4891, !tbaa !1193
  %140 = add nsw i32 %134, 1, !dbg !4892
  store i32 %140, i32* %113, align 4, !dbg !4892, !tbaa !1187
  br label %142, !dbg !4893

; <label>:141:                                    ; preds = %91
  store %struct.redisObject* null, %struct.redisObject** %94, align 8, !dbg !4894, !tbaa !902
  br label %142

; <label>:142:                                    ; preds = %97, %133, %106, %102, %141, %77, %81
  br i1 %15, label %144, label %143, !dbg !4896

; <label>:143:                                    ; preds = %142, %144
  br label %22, !dbg !4816

; <label>:144:                                    ; preds = %142
  call void @decrRefCount(%struct.redisObject* %60) #11, !dbg !4897
  br label %143, !dbg !4897

; <label>:145:                                    ; preds = %52, %34
  call void @llvm.va_end(i8* nonnull %4), !dbg !4899
  br label %146, !dbg !4900

; <label>:146:                                    ; preds = %8, %145
  %147 = phi i32 [ 0, %145 ], [ 1, %8 ], !dbg !4901
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6, !dbg !4902
  ret i32 %147, !dbg !4902
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @hashTypeGetValueObject(%struct.redisObject*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCallReply* @moduleCreateCallReplyFromProto(%struct.RedisModuleCtx*, i8*) local_unnamed_addr #0 !dbg !4903 {
  %3 = tail call i8* @zmalloc(i64 48) #11, !dbg !4912
  %4 = bitcast i8* %3 to %struct.RedisModuleCallReply*, !dbg !4912
  %5 = bitcast i8* %3 to %struct.RedisModuleCtx**, !dbg !4914
  store %struct.RedisModuleCtx* %0, %struct.RedisModuleCtx** %5, align 8, !dbg !4915, !tbaa !1828
  %6 = getelementptr inbounds i8, i8* %3, i64 24, !dbg !4916
  %7 = bitcast i8* %6 to i8**, !dbg !4916
  store i8* %1, i8** %7, align 8, !dbg !4917, !tbaa !2897
  %8 = getelementptr inbounds i8, i8* %1, i64 -1, !dbg !4920
  %9 = load i8, i8* %8, align 1, !dbg !4920, !tbaa !1123
  %10 = trunc i8 %9 to i3, !dbg !4922
  switch i3 %10, label %32 [
    i3 0, label %11
    i3 1, label %14
    i3 2, label %18
    i3 3, label %23
    i3 -4, label %28
  ], !dbg !4922

; <label>:11:                                     ; preds = %2
  %12 = lshr i8 %9, 3, !dbg !4923
  %13 = zext i8 %12 to i64, !dbg !4923
  br label %32, !dbg !4924

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds i8, i8* %1, i64 -3, !dbg !4925
  %16 = load i8, i8* %15, align 1, !dbg !4926, !tbaa !1123
  %17 = zext i8 %16 to i64, !dbg !4925
  br label %32, !dbg !4927

; <label>:18:                                     ; preds = %2
  %19 = getelementptr inbounds i8, i8* %1, i64 -5, !dbg !4928
  %20 = bitcast i8* %19 to i16*, !dbg !4929
  %21 = load i16, i16* %20, align 1, !dbg !4929, !tbaa !2350
  %22 = zext i16 %21 to i64, !dbg !4928
  br label %32, !dbg !4930

; <label>:23:                                     ; preds = %2
  %24 = getelementptr inbounds i8, i8* %1, i64 -9, !dbg !4931
  %25 = bitcast i8* %24 to i32*, !dbg !4932
  %26 = load i32, i32* %25, align 1, !dbg !4932, !tbaa !933
  %27 = zext i32 %26 to i64, !dbg !4931
  br label %32, !dbg !4933

; <label>:28:                                     ; preds = %2
  %29 = getelementptr inbounds i8, i8* %1, i64 -17, !dbg !4934
  %30 = bitcast i8* %29 to i64*, !dbg !4935
  %31 = load i64, i64* %30, align 1, !dbg !4935, !tbaa !2327
  br label %32, !dbg !4936

; <label>:32:                                     ; preds = %2, %11, %14, %18, %23, %28
  %33 = phi i64 [ %31, %28 ], [ %27, %23 ], [ %22, %18 ], [ %17, %14 ], [ %13, %11 ], [ 0, %2 ], !dbg !4937
  %34 = getelementptr inbounds i8, i8* %3, i64 32, !dbg !4938
  %35 = bitcast i8* %34 to i64*, !dbg !4938
  store i64 %33, i64* %35, align 8, !dbg !4939, !tbaa !2899
  %36 = getelementptr inbounds i8, i8* %3, i64 12, !dbg !4940
  %37 = bitcast i8* %36 to i32*, !dbg !4940
  store i32 1, i32* %37, align 4, !dbg !4941, !tbaa !4942
  %38 = load i8, i8* %1, align 1, !dbg !4943, !tbaa !1123
  %39 = sext i8 %38 to i32, !dbg !4943
  switch i32 %39, label %43 [
    i32 36, label %44
    i32 43, label %44
    i32 45, label %40
    i32 58, label %41
    i32 42, label %42
  ], !dbg !4944

; <label>:40:                                     ; preds = %32
  br label %44, !dbg !4945

; <label>:41:                                     ; preds = %32
  br label %44, !dbg !4947

; <label>:42:                                     ; preds = %32
  br label %44, !dbg !4948

; <label>:43:                                     ; preds = %32
  br label %44, !dbg !4949

; <label>:44:                                     ; preds = %32, %32, %43, %42, %41, %40
  %45 = phi i32 [ -1, %43 ], [ 3, %42 ], [ 2, %41 ], [ 1, %40 ], [ 0, %32 ], [ 0, %32 ]
  %46 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !4950
  %47 = bitcast i8* %46 to i32*, !dbg !4950
  store i32 %45, i32* %47, align 8, !dbg !4950, !tbaa !4951
  %48 = load i8, i8* %1, align 1, !dbg !4952, !tbaa !1123
  switch i8 %48, label %56 [
    i8 42, label %49
    i8 36, label %49
  ], !dbg !4954

; <label>:49:                                     ; preds = %44, %44
  %50 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !4955
  %51 = load i8, i8* %50, align 1, !dbg !4955, !tbaa !1123
  %52 = icmp eq i8 %51, 45, !dbg !4956
  br i1 %52, label %53, label %56, !dbg !4957

; <label>:53:                                     ; preds = %49
  %54 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !4958
  %55 = bitcast i8* %54 to i32*, !dbg !4958
  store i32 4, i32* %55, align 8, !dbg !4959, !tbaa !4951
  br label %56, !dbg !4960

; <label>:56:                                     ; preds = %44, %53, %49
  ret %struct.RedisModuleCallReply* %4, !dbg !4961
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply(%struct.RedisModuleCallReply*) local_unnamed_addr #0 !dbg !4962 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 2, !dbg !4966
  %4 = load i32, i32* %3, align 4, !dbg !4966, !tbaa !4942
  %5 = and i32 %4, 1, !dbg !4968
  %6 = icmp eq i32 %5, 0, !dbg !4968
  br i1 %6, label %66, label %7, !dbg !4969

; <label>:7:                                      ; preds = %1
  %8 = and i32 %4, -2, !dbg !4970
  store i32 %8, i32* %3, align 4, !dbg !4970, !tbaa !4942
  %9 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !4971
  %10 = load i8*, i8** %9, align 8, !dbg !4971, !tbaa !2897
  %11 = load i8, i8* %10, align 1, !dbg !4972, !tbaa !1123
  %12 = sext i8 %11 to i32, !dbg !4972
  switch i32 %12, label %66 [
    i32 58, label %13
    i32 36, label %26
    i32 45, label %50
    i32 43, label %50
    i32 42, label %65
  ], !dbg !4973

; <label>:13:                                     ; preds = %7
  %14 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !4983
  %15 = tail call i8* @strchr(i8* nonnull %14, i32 13) #11, !dbg !4984
  %16 = ptrtoint i8* %15 to i64, !dbg !4986
  %17 = ptrtoint i8* %10 to i64, !dbg !4986
  %18 = sub i64 %16, %17, !dbg !4986
  %19 = add nsw i64 %18, -1, !dbg !4987
  %20 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !4988
  %21 = bitcast %union.anon.1* %20 to i64*, !dbg !4989
  %22 = tail call i32 @string2ll(i8* nonnull %14, i64 %19, i64* nonnull %21) #11, !dbg !4990
  %23 = add nsw i64 %18, 2, !dbg !4991
  %24 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !4992
  store i64 %23, i64* %24, align 8, !dbg !4993, !tbaa !2899
  %25 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !4994
  store i32 2, i32* %25, align 8, !dbg !4995, !tbaa !4951
  br label %66, !dbg !4996

; <label>:26:                                     ; preds = %7
  %27 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5006
  %28 = tail call i8* @strchr(i8* nonnull %27, i32 13) #11, !dbg !5007
  %29 = bitcast i64* %2 to i8*, !dbg !5009
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6, !dbg !5009
  %30 = ptrtoint i8* %28 to i64, !dbg !5010
  %31 = ptrtoint i8* %10 to i64, !dbg !5010
  %32 = sub i64 %30, %31, !dbg !5010
  %33 = add nsw i64 %32, -1, !dbg !5011
  %34 = call i32 @string2ll(i8* nonnull %27, i64 %33, i64* nonnull %2) #11, !dbg !5013
  %35 = load i64, i64* %2, align 8, !dbg !5014, !tbaa !1612
  %36 = icmp eq i64 %35, -1, !dbg !5016
  br i1 %36, label %37, label %39, !dbg !5017

; <label>:37:                                     ; preds = %26
  %38 = add nsw i64 %32, 2, !dbg !5018
  br label %45, !dbg !5020

; <label>:39:                                     ; preds = %26
  %40 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !5021
  %41 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5023
  store i8* %40, i8** %41, align 8, !dbg !5024, !tbaa !1123
  %42 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5025
  store i64 %35, i64* %42, align 8, !dbg !5026, !tbaa !5027
  %43 = add i64 %32, 4, !dbg !5028
  %44 = add i64 %43, %35, !dbg !5029
  br label %45

; <label>:45:                                     ; preds = %37, %39
  %46 = phi i64 [ %44, %39 ], [ %38, %37 ]
  %47 = phi i32 [ 0, %39 ], [ 4, %37 ]
  %48 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5030
  store i64 %46, i64* %48, align 8, !dbg !5031
  %49 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5032
  store i32 %47, i32* %49, align 8, !dbg !5033
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6, !dbg !5034
  br label %66, !dbg !5035

; <label>:50:                                     ; preds = %7, %7
  %51 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5044
  %52 = tail call i8* @strchr(i8* nonnull %51, i32 13) #11, !dbg !5045
  %53 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5047
  store i8* %51, i8** %53, align 8, !dbg !5048, !tbaa !1123
  %54 = ptrtoint i8* %52 to i64, !dbg !5049
  %55 = ptrtoint i8* %10 to i64, !dbg !5049
  %56 = sub i64 %54, %55, !dbg !5049
  %57 = add nsw i64 %56, -1, !dbg !5050
  %58 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5051
  store i64 %57, i64* %58, align 8, !dbg !5052, !tbaa !5027
  %59 = add nsw i64 %56, 2, !dbg !5053
  %60 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5054
  store i64 %59, i64* %60, align 8, !dbg !5055, !tbaa !2899
  %61 = load i8, i8* %10, align 1, !dbg !5056, !tbaa !1123
  %62 = icmp ne i8 %61, 43, !dbg !5057
  %63 = zext i1 %62 to i32, !dbg !5056
  %64 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5058
  store i32 %63, i32* %64, align 8, !dbg !5059, !tbaa !4951
  br label %66, !dbg !5060

; <label>:65:                                     ; preds = %7
  tail call void @moduleParseCallReply_Array(%struct.RedisModuleCallReply* nonnull %0) #12, !dbg !5061
  br label %66, !dbg !5062

; <label>:66:                                     ; preds = %1, %7, %65, %50, %45, %13
  ret void, !dbg !5063
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply_Int(%struct.RedisModuleCallReply*) local_unnamed_addr #0 !dbg !4975 {
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5065
  %3 = load i8*, i8** %2, align 8, !dbg !5065, !tbaa !2897
  %4 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5067
  %5 = tail call i8* @strchr(i8* nonnull %4, i32 13) #11, !dbg !5068
  %6 = ptrtoint i8* %5 to i64, !dbg !5070
  %7 = ptrtoint i8* %3 to i64, !dbg !5070
  %8 = sub i64 %6, %7, !dbg !5070
  %9 = add nsw i64 %8, -1, !dbg !5071
  %10 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5072
  %11 = bitcast %union.anon.1* %10 to i64*, !dbg !5073
  %12 = tail call i32 @string2ll(i8* nonnull %4, i64 %9, i64* nonnull %11) #11, !dbg !5074
  %13 = add nsw i64 %8, 2, !dbg !5075
  %14 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5076
  store i64 %13, i64* %14, align 8, !dbg !5077, !tbaa !2899
  %15 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5078
  store i32 2, i32* %15, align 8, !dbg !5079, !tbaa !4951
  ret void, !dbg !5080
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply_BulkString(%struct.RedisModuleCallReply* nocapture) local_unnamed_addr #0 !dbg !4998 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5082
  %4 = load i8*, i8** %3, align 8, !dbg !5082, !tbaa !2897
  %5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !5084
  %6 = tail call i8* @strchr(i8* nonnull %5, i32 13) #11, !dbg !5085
  %7 = bitcast i64* %2 to i8*, !dbg !5087
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !5087
  %8 = ptrtoint i8* %6 to i64, !dbg !5088
  %9 = ptrtoint i8* %4 to i64, !dbg !5088
  %10 = sub i64 %8, %9, !dbg !5088
  %11 = add nsw i64 %10, -1, !dbg !5089
  %12 = call i32 @string2ll(i8* nonnull %5, i64 %11, i64* nonnull %2) #11, !dbg !5091
  %13 = load i64, i64* %2, align 8, !dbg !5092, !tbaa !1612
  %14 = icmp eq i64 %13, -1, !dbg !5093
  br i1 %14, label %15, label %17, !dbg !5094

; <label>:15:                                     ; preds = %1
  %16 = add nsw i64 %10, 2, !dbg !5095
  br label %23, !dbg !5096

; <label>:17:                                     ; preds = %1
  %18 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !5097
  %19 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5098
  store i8* %18, i8** %19, align 8, !dbg !5099, !tbaa !1123
  %20 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5100
  store i64 %13, i64* %20, align 8, !dbg !5101, !tbaa !5027
  %21 = add i64 %10, 4, !dbg !5102
  %22 = add i64 %21, %13, !dbg !5103
  br label %23

; <label>:23:                                     ; preds = %17, %15
  %24 = phi i64 [ %22, %17 ], [ %16, %15 ]
  %25 = phi i32 [ 0, %17 ], [ 4, %15 ]
  %26 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5104
  store i64 %24, i64* %26, align 8, !dbg !5105
  %27 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5106
  store i32 %25, i32* %27, align 8, !dbg !5107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !5108
  ret void, !dbg !5108
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply_SimpleString(%struct.RedisModuleCallReply* nocapture) local_unnamed_addr #0 !dbg !5037 {
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5110
  %3 = load i8*, i8** %2, align 8, !dbg !5110, !tbaa !2897
  %4 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5112
  %5 = tail call i8* @strchr(i8* nonnull %4, i32 13) #11, !dbg !5113
  %6 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5115
  store i8* %4, i8** %6, align 8, !dbg !5116, !tbaa !1123
  %7 = ptrtoint i8* %5 to i64, !dbg !5117
  %8 = ptrtoint i8* %3 to i64, !dbg !5117
  %9 = sub i64 %7, %8, !dbg !5117
  %10 = add nsw i64 %9, -1, !dbg !5118
  %11 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5119
  store i64 %10, i64* %11, align 8, !dbg !5120, !tbaa !5027
  %12 = add nsw i64 %9, 2, !dbg !5121
  %13 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5122
  store i64 %12, i64* %13, align 8, !dbg !5123, !tbaa !2899
  %14 = load i8, i8* %3, align 1, !dbg !5124, !tbaa !1123
  %15 = icmp ne i8 %14, 43, !dbg !5125
  %16 = zext i1 %15 to i32, !dbg !5124
  %17 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5126
  store i32 %16, i32* %17, align 8, !dbg !5127, !tbaa !4951
  ret void, !dbg !5128
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply_Array(%struct.RedisModuleCallReply* nocapture) local_unnamed_addr #0 !dbg !5129 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5141
  %4 = load i8*, i8** %3, align 8, !dbg !5141, !tbaa !2897
  %5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !5143
  %6 = tail call i8* @strchr(i8* nonnull %5, i32 13) #11, !dbg !5144
  %7 = bitcast i64* %2 to i8*, !dbg !5146
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !5146
  %8 = ptrtoint i8* %6 to i64, !dbg !5147
  %9 = ptrtoint i8* %4 to i64, !dbg !5147
  %10 = xor i64 %9, -1, !dbg !5148
  %11 = add i64 %8, %10, !dbg !5148
  %12 = call i32 @string2ll(i8* nonnull %5, i64 %11, i64* nonnull %2) #11, !dbg !5150
  %13 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !5151
  %14 = load i64, i64* %2, align 8, !dbg !5152, !tbaa !1612
  %15 = icmp eq i64 %14, -1, !dbg !5154
  br i1 %15, label %45, label %16, !dbg !5155

; <label>:16:                                     ; preds = %1
  %17 = mul i64 %14, 48, !dbg !5156
  %18 = call i8* @zmalloc(i64 %17) #11, !dbg !5157
  %19 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5158
  %20 = bitcast %union.anon.1* %19 to %struct.RedisModuleCallReply**, !dbg !5159
  %21 = getelementptr inbounds %union.anon.1, %union.anon.1* %19, i64 0, i32 0, !dbg !5160
  store i8* %18, i8** %21, align 8, !dbg !5160, !tbaa !1123
  %22 = load i64, i64* %2, align 8, !dbg !5161, !tbaa !1612
  %23 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5162
  store i64 %22, i64* %23, align 8, !dbg !5163, !tbaa !5027
  %24 = icmp sgt i64 %22, 0, !dbg !5165
  br i1 %24, label %25, label %45, !dbg !5166

; <label>:25:                                     ; preds = %16
  %26 = bitcast i8* %18 to %struct.RedisModuleCallReply*, !dbg !5166
  %27 = bitcast %struct.RedisModuleCallReply* %0 to i64*
  br label %28, !dbg !5166

; <label>:28:                                     ; preds = %43, %25
  %29 = phi %struct.RedisModuleCallReply* [ %26, %25 ], [ %44, %43 ], !dbg !5167
  %30 = phi i8* [ %13, %25 ], [ %39, %43 ]
  %31 = phi i64 [ 0, %25 ], [ %40, %43 ]
  %32 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %29, i64 %31, !dbg !5168
  %33 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %29, i64 %31, i32 2, !dbg !5170
  store i32 3, i32* %33, align 4, !dbg !5171, !tbaa !4942
  %34 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %29, i64 %31, i32 4, !dbg !5172
  store i8* %30, i8** %34, align 8, !dbg !5173, !tbaa !2897
  %35 = load i64, i64* %27, align 8, !dbg !5174, !tbaa !1828
  %36 = bitcast %struct.RedisModuleCallReply* %32 to i64*, !dbg !5175
  store i64 %35, i64* %36, align 8, !dbg !5175, !tbaa !1828
  call void @moduleParseCallReply(%struct.RedisModuleCallReply* %32) #12, !dbg !5176
  %37 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %29, i64 %31, i32 5, !dbg !5177
  %38 = load i64, i64* %37, align 8, !dbg !5177, !tbaa !2899
  %39 = getelementptr inbounds i8, i8* %30, i64 %38, !dbg !5178
  %40 = add nuw nsw i64 %31, 1, !dbg !5179
  %41 = load i64, i64* %2, align 8, !dbg !5180, !tbaa !1612
  %42 = icmp slt i64 %40, %41, !dbg !5165
  br i1 %42, label %43, label %45, !dbg !5166, !llvm.loop !5181

; <label>:43:                                     ; preds = %28
  %44 = load %struct.RedisModuleCallReply*, %struct.RedisModuleCallReply** %20, align 8, !dbg !5167, !tbaa !1123
  br label %28, !dbg !5166

; <label>:45:                                     ; preds = %28, %16, %1
  %46 = phi i8* [ %13, %1 ], [ %13, %16 ], [ %39, %28 ]
  %47 = phi i32 [ 4, %1 ], [ 3, %16 ], [ 3, %28 ]
  %48 = ptrtoint i8* %46 to i64, !dbg !5183
  %49 = sub i64 %48, %9, !dbg !5183
  %50 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5183
  store i64 %49, i64* %50, align 8, !dbg !5183, !tbaa !2899
  %51 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5183
  store i32 %47, i32* %51, align 8, !dbg !5183, !tbaa !4951
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !5185
  ret void, !dbg !5185
}

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeCallReply_Rec(%struct.RedisModuleCallReply*, i32) local_unnamed_addr #0 !dbg !5186 {
  %3 = icmp ne i32 %1, 0, !dbg !5199
  %4 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4, !dbg !5201, !tbaa !4942
  %6 = and i32 %5, 2, !dbg !5202
  %7 = icmp eq i32 %6, 0, !dbg !5202
  %8 = or i1 %3, %7, !dbg !5203
  br i1 %8, label %9, label %46, !dbg !5203

; <label>:9:                                      ; preds = %2
  %10 = and i32 %5, 1, !dbg !5204
  %11 = icmp eq i32 %10, 0, !dbg !5204
  br i1 %11, label %12, label %35, !dbg !5205

; <label>:12:                                     ; preds = %9
  %13 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5206
  %14 = load i32, i32* %13, align 8, !dbg !5206, !tbaa !4951
  %15 = icmp eq i32 %14, 3, !dbg !5207
  br i1 %15, label %16, label %35, !dbg !5208

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5210
  %18 = load i64, i64* %17, align 8, !dbg !5210, !tbaa !5027
  %19 = icmp eq i64 %18, 0, !dbg !5213
  %20 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5214
  %21 = bitcast %union.anon.1* %20 to %struct.RedisModuleCallReply**, !dbg !5214
  %22 = load %struct.RedisModuleCallReply*, %struct.RedisModuleCallReply** %21, align 8, !dbg !5214, !tbaa !1123
  br i1 %19, label %31, label %23, !dbg !5215

; <label>:23:                                     ; preds = %16, %23
  %24 = phi %struct.RedisModuleCallReply* [ %30, %23 ], [ %22, %16 ]
  %25 = phi i64 [ %27, %23 ], [ 0, %16 ]
  %26 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %24, i64 %25, !dbg !5216
  tail call void @RM_FreeCallReply_Rec(%struct.RedisModuleCallReply* %26, i32 1) #12, !dbg !5217
  %27 = add nuw i64 %25, 1, !dbg !5218
  %28 = load i64, i64* %17, align 8, !dbg !5210, !tbaa !5027
  %29 = icmp ult i64 %27, %28, !dbg !5213
  %30 = load %struct.RedisModuleCallReply*, %struct.RedisModuleCallReply** %21, align 8, !dbg !5214, !tbaa !1123
  br i1 %29, label %23, label %31, !dbg !5215, !llvm.loop !5219

; <label>:31:                                     ; preds = %23, %16
  %32 = phi %struct.RedisModuleCallReply* [ %22, %16 ], [ %30, %23 ], !dbg !5214
  %33 = bitcast %struct.RedisModuleCallReply* %32 to i8*, !dbg !5221
  tail call void @zfree(i8* %33) #11, !dbg !5222
  %34 = load i32, i32* %4, align 4, !dbg !5223, !tbaa !4942
  br label %35, !dbg !5225

; <label>:35:                                     ; preds = %9, %12, %31
  %36 = phi i32 [ %5, %9 ], [ %5, %12 ], [ %34, %31 ], !dbg !5223
  %37 = and i32 %36, 2, !dbg !5226
  %38 = icmp eq i32 %37, 0, !dbg !5226
  br i1 %38, label %39, label %46, !dbg !5227

; <label>:39:                                     ; preds = %35
  %40 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5228
  %41 = load i8*, i8** %40, align 8, !dbg !5228, !tbaa !2897
  %42 = icmp eq i8* %41, null, !dbg !5231
  br i1 %42, label %44, label %43, !dbg !5232

; <label>:43:                                     ; preds = %39
  tail call void @sdsfree(i8* nonnull %41) #11, !dbg !5233
  br label %44, !dbg !5233

; <label>:44:                                     ; preds = %39, %43
  %45 = bitcast %struct.RedisModuleCallReply* %0 to i8*, !dbg !5234
  tail call void @zfree(i8* %45) #11, !dbg !5235
  br label %46, !dbg !5236

; <label>:46:                                     ; preds = %2, %35, %44
  ret void, !dbg !5237
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @RM_CallReplyType(%struct.RedisModuleCallReply* readonly) #4 !dbg !5238 {
  %2 = icmp eq %struct.RedisModuleCallReply* %0, null, !dbg !5244
  br i1 %2, label %6, label %3, !dbg !5246

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5247
  %5 = load i32, i32* %4, align 8, !dbg !5247, !tbaa !4951
  br label %6, !dbg !5248

; <label>:6:                                      ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ -1, %1 ], !dbg !5249
  ret i32 %7, !dbg !5250
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_CallReplyLength(%struct.RedisModuleCallReply*) #0 !dbg !5251 {
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #12, !dbg !5257
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5258
  %3 = load i32, i32* %2, align 8, !dbg !5258, !tbaa !4951
  switch i32 %3, label %7 [
    i32 0, label %4
    i32 1, label %4
    i32 3, label %4
  ], !dbg !5259

; <label>:4:                                      ; preds = %1, %1, %1
  %5 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5260
  %6 = load i64, i64* %5, align 8, !dbg !5260, !tbaa !5027
  br label %7, !dbg !5262

; <label>:7:                                      ; preds = %1, %4
  %8 = phi i64 [ %6, %4 ], [ 0, %1 ], !dbg !5263
  ret i64 %8, !dbg !5264
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCallReply* @RM_CallReplyArrayElement(%struct.RedisModuleCallReply*, i64) #0 !dbg !5265 {
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #12, !dbg !5273
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5274
  %4 = load i32, i32* %3, align 8, !dbg !5274, !tbaa !4951
  %5 = icmp eq i32 %4, 3, !dbg !5276
  br i1 %5, label %6, label %15, !dbg !5277

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5278
  %8 = load i64, i64* %7, align 8, !dbg !5278, !tbaa !5027
  %9 = icmp ugt i64 %8, %1, !dbg !5280
  br i1 %9, label %10, label %15, !dbg !5281

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5282
  %12 = bitcast %union.anon.1* %11 to %struct.RedisModuleCallReply**, !dbg !5283
  %13 = load %struct.RedisModuleCallReply*, %struct.RedisModuleCallReply** %12, align 8, !dbg !5283, !tbaa !1123
  %14 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %13, i64 %1, !dbg !5284
  br label %15, !dbg !5285

; <label>:15:                                     ; preds = %6, %2, %10
  %16 = phi %struct.RedisModuleCallReply* [ %14, %10 ], [ null, %2 ], [ null, %6 ], !dbg !5286
  ret %struct.RedisModuleCallReply* %16, !dbg !5287
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_CallReplyInteger(%struct.RedisModuleCallReply*) #0 !dbg !5288 {
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #12, !dbg !5294
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5295
  %3 = load i32, i32* %2, align 8, !dbg !5295, !tbaa !4951
  %4 = icmp eq i32 %3, 2, !dbg !5297
  br i1 %4, label %5, label %9, !dbg !5298

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5299
  %7 = bitcast %union.anon.1* %6 to i64*, !dbg !5300
  %8 = load i64, i64* %7, align 8, !dbg !5300, !tbaa !1123
  br label %9, !dbg !5301

; <label>:9:                                      ; preds = %1, %5
  %10 = phi i64 [ %8, %5 ], [ -9223372036854775808, %1 ], !dbg !5302
  ret i64 %10, !dbg !5303
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_CallReplyStringPtr(%struct.RedisModuleCallReply*, i64*) #0 !dbg !5304 {
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #12, !dbg !5312
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5313
  %4 = load i32, i32* %3, align 8, !dbg !5313, !tbaa !4951
  %5 = icmp ult i32 %4, 2, !dbg !5315
  br i1 %5, label %6, label %14, !dbg !5315

; <label>:6:                                      ; preds = %2
  %7 = icmp eq i64* %1, null, !dbg !5316
  br i1 %7, label %11, label %8, !dbg !5318

; <label>:8:                                      ; preds = %6
  %9 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5319
  %10 = load i64, i64* %9, align 8, !dbg !5319, !tbaa !5027
  store i64 %10, i64* %1, align 8, !dbg !5320, !tbaa !2327
  br label %11, !dbg !5321

; <label>:11:                                     ; preds = %6, %8
  %12 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5322
  %13 = load i8*, i8** %12, align 8, !dbg !5322, !tbaa !1123
  br label %14, !dbg !5323

; <label>:14:                                     ; preds = %2, %11
  %15 = phi i8* [ %13, %11 ], [ null, %2 ], !dbg !5324
  ret i8* %15, !dbg !5325
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateStringFromCallReply(%struct.RedisModuleCallReply*) #0 !dbg !5326 {
  %2 = alloca [64 x i8], align 16
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #12, !dbg !5339
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5340
  %4 = load i32, i32* %3, align 8, !dbg !5340, !tbaa !4951
  switch i32 %4, label %94 [
    i32 0, label %5
    i32 1, label %5
    i32 2, label %48
  ], !dbg !5341

; <label>:5:                                      ; preds = %1, %1
  %6 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 0, !dbg !5342
  %7 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %6, align 8, !dbg !5342, !tbaa !1828
  %8 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5343
  %9 = load i8*, i8** %8, align 8, !dbg !5343, !tbaa !1123
  %10 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5344
  %11 = load i64, i64* %10, align 8, !dbg !5344, !tbaa !5027
  %12 = tail call %struct.redisObject* @createStringObject(i8* %9, i64 %11) #11, !dbg !5349
  %13 = icmp eq %struct.RedisModuleCtx* %7, null, !dbg !5351
  br i1 %13, label %94, label %14, !dbg !5352

; <label>:14:                                     ; preds = %5
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %7, i64 0, i32 7, !dbg !5357
  %16 = load i32, i32* %15, align 8, !dbg !5357, !tbaa !1164
  %17 = and i32 %16, 2, !dbg !5358
  %18 = icmp eq i32 %17, 0, !dbg !5358
  br i1 %18, label %94, label %19, !dbg !5359

; <label>:19:                                     ; preds = %14
  %20 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %7, i64 0, i32 6, !dbg !5360
  %21 = load i32, i32* %20, align 4, !dbg !5360, !tbaa !1187
  %22 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %7, i64 0, i32 5, !dbg !5361
  %23 = load i32, i32* %22, align 8, !dbg !5361, !tbaa !1238
  %24 = icmp eq i32 %21, %23, !dbg !5362
  br i1 %24, label %28, label %25, !dbg !5363

; <label>:25:                                     ; preds = %19
  %26 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %7, i64 0, i32 4
  %27 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %26, align 8, !dbg !5364, !tbaa !1191
  br label %40, !dbg !5363

; <label>:28:                                     ; preds = %19
  %29 = shl nsw i32 %21, 1, !dbg !5365
  %30 = icmp slt i32 %21, 8, !dbg !5366
  %31 = select i1 %30, i32 16, i32 %29, !dbg !5367
  store i32 %31, i32* %22, align 8, !dbg !5368, !tbaa !1238
  %32 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %7, i64 0, i32 4, !dbg !5369
  %33 = bitcast %struct.AutoMemEntry** %32 to i8**, !dbg !5369
  %34 = load i8*, i8** %33, align 8, !dbg !5369, !tbaa !1191
  %35 = sext i32 %31 to i64, !dbg !5370
  %36 = shl nsw i64 %35, 4, !dbg !5371
  %37 = tail call i8* @zrealloc(i8* %34, i64 %36) #11, !dbg !5372
  store i8* %37, i8** %33, align 8, !dbg !5373, !tbaa !1191
  %38 = bitcast i8* %37 to %struct.AutoMemEntry*, !dbg !5374
  %39 = load i32, i32* %20, align 4, !dbg !5375, !tbaa !1187
  br label %40, !dbg !5374

; <label>:40:                                     ; preds = %28, %25
  %41 = phi i32 [ %21, %25 ], [ %39, %28 ], !dbg !5375
  %42 = phi %struct.AutoMemEntry* [ %27, %25 ], [ %38, %28 ], !dbg !5364
  %43 = sext i32 %41 to i64, !dbg !5376
  %44 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %42, i64 %43, i32 1, !dbg !5377
  store i32 1, i32* %44, align 8, !dbg !5378, !tbaa !1197
  %45 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %42, i64 %43, i32 0, !dbg !5379
  %46 = bitcast i8** %45 to %struct.redisObject**, !dbg !5380
  store %struct.redisObject* %12, %struct.redisObject** %46, align 8, !dbg !5380, !tbaa !1193
  %47 = add nsw i32 %41, 1, !dbg !5381
  store i32 %47, i32* %20, align 4, !dbg !5381, !tbaa !1187
  br label %94, !dbg !5382

; <label>:48:                                     ; preds = %1
  %49 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 0, !dbg !5383
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %49) #6, !dbg !5383
  %50 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5385
  %51 = bitcast %union.anon.1* %50 to i64*, !dbg !5386
  %52 = load i64, i64* %51, align 8, !dbg !5386, !tbaa !1123
  %53 = call i32 @ll2string(i8* nonnull %49, i64 64, i64 %52) #11, !dbg !5387
  %54 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 0, !dbg !5389
  %55 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %54, align 8, !dbg !5389, !tbaa !1828
  %56 = sext i32 %53 to i64, !dbg !5390
  %57 = call %struct.redisObject* @createStringObject(i8* nonnull %49, i64 %56) #11, !dbg !5395
  %58 = icmp eq %struct.RedisModuleCtx* %55, null, !dbg !5397
  br i1 %58, label %93, label %59, !dbg !5398

; <label>:59:                                     ; preds = %48
  %60 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %55, i64 0, i32 7, !dbg !5403
  %61 = load i32, i32* %60, align 8, !dbg !5403, !tbaa !1164
  %62 = and i32 %61, 2, !dbg !5404
  %63 = icmp eq i32 %62, 0, !dbg !5404
  br i1 %63, label %93, label %64, !dbg !5405

; <label>:64:                                     ; preds = %59
  %65 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %55, i64 0, i32 6, !dbg !5406
  %66 = load i32, i32* %65, align 4, !dbg !5406, !tbaa !1187
  %67 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %55, i64 0, i32 5, !dbg !5407
  %68 = load i32, i32* %67, align 8, !dbg !5407, !tbaa !1238
  %69 = icmp eq i32 %66, %68, !dbg !5408
  br i1 %69, label %73, label %70, !dbg !5409

; <label>:70:                                     ; preds = %64
  %71 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %55, i64 0, i32 4
  %72 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %71, align 8, !dbg !5410, !tbaa !1191
  br label %85, !dbg !5409

; <label>:73:                                     ; preds = %64
  %74 = shl nsw i32 %66, 1, !dbg !5411
  %75 = icmp slt i32 %66, 8, !dbg !5412
  %76 = select i1 %75, i32 16, i32 %74, !dbg !5413
  store i32 %76, i32* %67, align 8, !dbg !5414, !tbaa !1238
  %77 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %55, i64 0, i32 4, !dbg !5415
  %78 = bitcast %struct.AutoMemEntry** %77 to i8**, !dbg !5415
  %79 = load i8*, i8** %78, align 8, !dbg !5415, !tbaa !1191
  %80 = sext i32 %76 to i64, !dbg !5416
  %81 = shl nsw i64 %80, 4, !dbg !5417
  %82 = call i8* @zrealloc(i8* %79, i64 %81) #11, !dbg !5418
  store i8* %82, i8** %78, align 8, !dbg !5419, !tbaa !1191
  %83 = bitcast i8* %82 to %struct.AutoMemEntry*, !dbg !5420
  %84 = load i32, i32* %65, align 4, !dbg !5421, !tbaa !1187
  br label %85, !dbg !5420

; <label>:85:                                     ; preds = %73, %70
  %86 = phi i32 [ %66, %70 ], [ %84, %73 ], !dbg !5421
  %87 = phi %struct.AutoMemEntry* [ %72, %70 ], [ %83, %73 ], !dbg !5410
  %88 = sext i32 %86 to i64, !dbg !5422
  %89 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %87, i64 %88, i32 1, !dbg !5423
  store i32 1, i32* %89, align 8, !dbg !5424, !tbaa !1197
  %90 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %87, i64 %88, i32 0, !dbg !5425
  %91 = bitcast i8** %90 to %struct.redisObject**, !dbg !5426
  store %struct.redisObject* %57, %struct.redisObject** %91, align 8, !dbg !5426, !tbaa !1193
  %92 = add nsw i32 %86, 1, !dbg !5427
  store i32 %92, i32* %65, align 4, !dbg !5427, !tbaa !1187
  br label %93, !dbg !5428

; <label>:93:                                     ; preds = %48, %59, %85
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %49) #6, !dbg !5429
  br label %94

; <label>:94:                                     ; preds = %40, %14, %5, %1, %93
  %95 = phi %struct.redisObject* [ %57, %93 ], [ null, %1 ], [ %12, %5 ], [ %12, %14 ], [ %12, %40 ], !dbg !5430
  ret %struct.redisObject* %95, !dbg !5431
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCallReply* @RM_Call(%struct.RedisModuleCtx*, i8*, i8*, ...) #0 !dbg !5432 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = bitcast i32* %4 to i8*, !dbg !5463
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6, !dbg !5463
  store i32 0, i32* %4, align 4, !dbg !5464, !tbaa !933
  %8 = bitcast i32* %5 to i8*, !dbg !5463
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6, !dbg !5463
  store i32 0, i32* %5, align 4, !dbg !5465, !tbaa !933
  %9 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*, !dbg !5466
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6, !dbg !5466
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !5470
  call void @llvm.va_start(i8* nonnull %9), !dbg !5470
  %11 = call %struct.client* @createClient(i32 -1) #11, !dbg !5471
  %12 = call %struct.redisObject** @moduleCreateArgvFromUserFormat(i8* %1, i8* %2, i32* nonnull %4, i32* nonnull %5, %struct.__va_list_tag* nonnull %10) #12, !dbg !5472
  %13 = load i32, i32* %5, align 4, !dbg !5473, !tbaa !933
  %14 = and i32 %13, 1, !dbg !5474
  call void @llvm.va_end(i8* nonnull %9), !dbg !5475
  %15 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 21, !dbg !5476
  %16 = load i32, i32* %15, align 8, !dbg !5477, !tbaa !1254
  %17 = or i32 %16, 134217728, !dbg !5477
  store i32 %17, i32* %15, align 8, !dbg !5477, !tbaa !1254
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !5478
  %19 = load %struct.client*, %struct.client** %18, align 8, !dbg !5478, !tbaa !1168
  %20 = getelementptr inbounds %struct.client, %struct.client* %19, i64 0, i32 2, !dbg !5479
  %21 = bitcast %struct.redisDb** %20 to i64*, !dbg !5479
  %22 = load i64, i64* %21, align 8, !dbg !5479, !tbaa !1271
  %23 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 2, !dbg !5480
  %24 = bitcast %struct.redisDb** %23 to i64*, !dbg !5481
  store i64 %22, i64* %24, align 8, !dbg !5481, !tbaa !1271
  %25 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 9, !dbg !5482
  store %struct.redisObject** %12, %struct.redisObject*** %25, align 8, !dbg !5483, !tbaa !1316
  %26 = load i32, i32* %4, align 4, !dbg !5484, !tbaa !933
  %27 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 8, !dbg !5485
  store i32 %26, i32* %27, align 8, !dbg !5486, !tbaa !1318
  %28 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !5487
  %29 = load %struct.RedisModule*, %struct.RedisModule** %28, align 8, !dbg !5487, !tbaa !1156
  %30 = icmp eq %struct.RedisModule* %29, null, !dbg !5489
  br i1 %30, label %35, label %31, !dbg !5490

; <label>:31:                                     ; preds = %3
  %32 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %29, i64 0, i32 8, !dbg !5491
  %33 = load i32, i32* %32, align 8, !dbg !5492, !tbaa !1672
  %34 = add nsw i32 %33, 1, !dbg !5492
  store i32 %34, i32* %32, align 8, !dbg !5492, !tbaa !1672
  br label %35, !dbg !5493

; <label>:35:                                     ; preds = %3, %31
  %36 = icmp eq %struct.redisObject** %12, null, !dbg !5494
  br i1 %36, label %166, label %37, !dbg !5496

; <label>:37:                                     ; preds = %35
  call void @moduleCallCommandFilters(%struct.client* %11) #12, !dbg !5497
  %38 = load %struct.redisObject**, %struct.redisObject*** %25, align 8, !dbg !5498, !tbaa !1316
  %39 = load %struct.redisObject*, %struct.redisObject** %38, align 8, !dbg !5499, !tbaa !902
  %40 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %39, i64 0, i32 2, !dbg !5500
  %41 = load i8*, i8** %40, align 8, !dbg !5500, !tbaa !1041
  %42 = call %struct.redisCommand* @lookupCommand(i8* %41) #11, !dbg !5501
  %43 = icmp eq %struct.redisCommand* %42, null, !dbg !5503
  br i1 %43, label %44, label %46, !dbg !5505

; <label>:44:                                     ; preds = %37
  %45 = call i32* @__errno() #11, !dbg !5506
  store i32 22, i32* %45, align 4, !dbg !5508, !tbaa !933
  br label %166, !dbg !5509

; <label>:46:                                     ; preds = %37
  %47 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 11, !dbg !5510
  store %struct.redisCommand* %42, %struct.redisCommand** %47, align 8, !dbg !5511, !tbaa !5512
  %48 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 10, !dbg !5513
  store %struct.redisCommand* %42, %struct.redisCommand** %48, align 8, !dbg !5514, !tbaa !1299
  %49 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %42, i64 0, i32 2, !dbg !5515
  %50 = load i32, i32* %49, align 8, !dbg !5515, !tbaa !1594
  %51 = icmp sgt i32 %50, 0, !dbg !5517
  %52 = icmp ne i32 %50, %26, !dbg !5518
  %53 = and i1 %52, %51, !dbg !5519
  %54 = sub nsw i32 0, %50, !dbg !5520
  %55 = icmp slt i32 %26, %54, !dbg !5521
  %56 = or i1 %55, %53, !dbg !5519
  br i1 %56, label %57, label %59, !dbg !5519

; <label>:57:                                     ; preds = %46
  %58 = call i32* @__errno() #11, !dbg !5522
  store i32 22, i32* %58, align 4, !dbg !5524, !tbaa !933
  br label %166, !dbg !5525

; <label>:59:                                     ; preds = %46
  %60 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !5526, !tbaa !3208
  %61 = icmp eq i32 %60, 0, !dbg !5528
  br i1 %61, label %83, label %62, !dbg !5529

; <label>:62:                                     ; preds = %59
  %63 = load %struct.client*, %struct.client** %18, align 8, !dbg !5530, !tbaa !1168
  %64 = getelementptr inbounds %struct.client, %struct.client* %63, i64 0, i32 21, !dbg !5531
  %65 = load i32, i32* %64, align 8, !dbg !5531, !tbaa !1254
  %66 = and i32 %65, 2, !dbg !5532
  %67 = icmp eq i32 %66, 0, !dbg !5532
  br i1 %67, label %68, label %83, !dbg !5533

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* %15, align 8, !dbg !5534, !tbaa !1254
  %70 = and i32 %69, -131585, !dbg !5534
  store i32 %70, i32* %15, align 8, !dbg !5534, !tbaa !1254
  %71 = load i32, i32* %64, align 8, !dbg !5536, !tbaa !1254
  %72 = and i32 %71, 131584, !dbg !5537
  %73 = or i32 %72, %70, !dbg !5538
  store i32 %73, i32* %15, align 8, !dbg !5538, !tbaa !1254
  %74 = load %struct.redisObject**, %struct.redisObject*** %25, align 8, !dbg !5539, !tbaa !1316
  %75 = load i32, i32* %27, align 8, !dbg !5541, !tbaa !1318
  %76 = call %struct.clusterNode* @getNodeByQuery(%struct.client* nonnull %11, %struct.redisCommand* nonnull %42, %struct.redisObject** %74, i32 %75, i32* null, i32* null) #11, !dbg !5542
  %77 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5543, !tbaa !5544
  %78 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %77, i64 0, i32 0, !dbg !5545
  %79 = load %struct.clusterNode*, %struct.clusterNode** %78, align 8, !dbg !5545, !tbaa !5546
  %80 = icmp eq %struct.clusterNode* %76, %79, !dbg !5548
  br i1 %80, label %83, label %81, !dbg !5549

; <label>:81:                                     ; preds = %68
  %82 = call i32* @__errno() #11, !dbg !5550
  store i32 1, i32* %82, align 4, !dbg !5552, !tbaa !933
  br label %166, !dbg !5553

; <label>:83:                                     ; preds = %68, %62, %59
  %84 = icmp ne i32 %14, 0, !dbg !5554
  br i1 %84, label %85, label %99, !dbg !5556

; <label>:85:                                     ; preds = %83
  %86 = load %struct.client*, %struct.client** %18, align 8, !dbg !5559, !tbaa !1168
  %87 = getelementptr inbounds %struct.client, %struct.client* %86, i64 0, i32 21, !dbg !5560
  %88 = load i32, i32* %87, align 8, !dbg !5560, !tbaa !1254
  %89 = and i32 %88, 264, !dbg !5561
  %90 = icmp eq i32 %89, 0, !dbg !5561
  br i1 %90, label %91, label %99, !dbg !5562

; <label>:91:                                     ; preds = %85
  %92 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !5563
  %93 = load i32, i32* %92, align 8, !dbg !5563, !tbaa !1164
  %94 = and i32 %93, 33, !dbg !5564
  %95 = icmp eq i32 %94, 0, !dbg !5564
  br i1 %95, label %96, label %99, !dbg !5564

; <label>:96:                                     ; preds = %91
  call void @execCommandPropagateMulti(%struct.client* %86) #11, !dbg !5565
  %97 = load i32, i32* %92, align 8, !dbg !5566, !tbaa !1164
  %98 = or i32 %97, 1, !dbg !5566
  store i32 %98, i32* %92, align 8, !dbg !5566, !tbaa !1164
  br label %99, !dbg !5567

; <label>:99:                                     ; preds = %96, %91, %85, %83
  %100 = select i1 %84, i32 15, i32 3, !dbg !5569
  call void @call(%struct.client* nonnull %11, i32 %100) #11, !dbg !5570
  %101 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 48, i64 0, !dbg !5571
  %102 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 47, !dbg !5572
  %103 = load i32, i32* %102, align 8, !dbg !5572, !tbaa !5573
  %104 = sext i32 %103 to i64, !dbg !5574
  %105 = call i8* @sdsnewlen(i8* nonnull %101, i64 %104) #11, !dbg !5575
  store i32 0, i32* %102, align 8, !dbg !5577, !tbaa !5573
  %106 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 15, !dbg !5578
  %107 = load %struct.list*, %struct.list** %106, align 8, !dbg !5578, !tbaa !5579
  %108 = getelementptr inbounds %struct.list, %struct.list* %107, i64 0, i32 5, !dbg !5578
  %109 = load i64, i64* %108, align 8, !dbg !5578, !tbaa !5580
  %110 = icmp eq i64 %109, 0, !dbg !5582
  br i1 %110, label %130, label %111, !dbg !5582

; <label>:111:                                    ; preds = %99, %111
  %112 = phi %struct.list* [ %126, %111 ], [ %107, %99 ]
  %113 = phi i8* [ %122, %111 ], [ %105, %99 ]
  %114 = getelementptr inbounds %struct.list, %struct.list* %112, i64 0, i32 0, !dbg !5583
  %115 = load %struct.listNode*, %struct.listNode** %114, align 8, !dbg !5583, !tbaa !5584
  %116 = getelementptr inbounds %struct.listNode, %struct.listNode* %115, i64 0, i32 2, !dbg !5583
  %117 = bitcast i8** %116 to %struct.clientReplyBlock**, !dbg !5583
  %118 = load %struct.clientReplyBlock*, %struct.clientReplyBlock** %117, align 8, !dbg !5583, !tbaa !5585
  %119 = getelementptr inbounds %struct.clientReplyBlock, %struct.clientReplyBlock* %118, i64 0, i32 2, i64 0, !dbg !5588
  %120 = getelementptr inbounds %struct.clientReplyBlock, %struct.clientReplyBlock* %118, i64 0, i32 1, !dbg !5589
  %121 = load i64, i64* %120, align 8, !dbg !5589, !tbaa !2327
  %122 = call i8* @sdscatlen(i8* %113, i8* nonnull %119, i64 %121) #11, !dbg !5590
  %123 = load %struct.list*, %struct.list** %106, align 8, !dbg !5591, !tbaa !5579
  %124 = getelementptr inbounds %struct.list, %struct.list* %123, i64 0, i32 0, !dbg !5592
  %125 = load %struct.listNode*, %struct.listNode** %124, align 8, !dbg !5592, !tbaa !5584
  call void @listDelNode(%struct.list* %123, %struct.listNode* %125) #11, !dbg !5593
  %126 = load %struct.list*, %struct.list** %106, align 8, !dbg !5578, !tbaa !5579
  %127 = getelementptr inbounds %struct.list, %struct.list* %126, i64 0, i32 5, !dbg !5578
  %128 = load i64, i64* %127, align 8, !dbg !5578, !tbaa !5580
  %129 = icmp eq i64 %128, 0, !dbg !5582
  br i1 %129, label %130, label %111, !dbg !5582, !llvm.loop !5594

; <label>:130:                                    ; preds = %111, %99
  %131 = phi i8* [ %105, %99 ], [ %122, %111 ], !dbg !5596
  %132 = call %struct.RedisModuleCallReply* @moduleCreateCallReplyFromProto(%struct.RedisModuleCtx* %0, i8* %131) #12, !dbg !5597
  %133 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !5602
  %134 = load i32, i32* %133, align 8, !dbg !5602, !tbaa !1164
  %135 = and i32 %134, 2, !dbg !5603
  %136 = icmp eq i32 %135, 0, !dbg !5603
  br i1 %136, label %166, label %137, !dbg !5604

; <label>:137:                                    ; preds = %130
  %138 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !5605
  %139 = load i32, i32* %138, align 4, !dbg !5605, !tbaa !1187
  %140 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !5606
  %141 = load i32, i32* %140, align 8, !dbg !5606, !tbaa !1238
  %142 = icmp eq i32 %139, %141, !dbg !5607
  br i1 %142, label %146, label %143, !dbg !5608

; <label>:143:                                    ; preds = %137
  %144 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %145 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %144, align 8, !dbg !5609, !tbaa !1191
  br label %158, !dbg !5608

; <label>:146:                                    ; preds = %137
  %147 = shl nsw i32 %139, 1, !dbg !5610
  %148 = icmp slt i32 %139, 8, !dbg !5611
  %149 = select i1 %148, i32 16, i32 %147, !dbg !5612
  store i32 %149, i32* %140, align 8, !dbg !5613, !tbaa !1238
  %150 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !5614
  %151 = bitcast %struct.AutoMemEntry** %150 to i8**, !dbg !5614
  %152 = load i8*, i8** %151, align 8, !dbg !5614, !tbaa !1191
  %153 = sext i32 %149 to i64, !dbg !5615
  %154 = shl nsw i64 %153, 4, !dbg !5616
  %155 = call i8* @zrealloc(i8* %152, i64 %154) #11, !dbg !5617
  store i8* %155, i8** %151, align 8, !dbg !5618, !tbaa !1191
  %156 = bitcast i8* %155 to %struct.AutoMemEntry*, !dbg !5619
  %157 = load i32, i32* %138, align 4, !dbg !5620, !tbaa !1187
  br label %158, !dbg !5619

; <label>:158:                                    ; preds = %146, %143
  %159 = phi i32 [ %139, %143 ], [ %157, %146 ], !dbg !5620
  %160 = phi %struct.AutoMemEntry* [ %145, %143 ], [ %156, %146 ], !dbg !5609
  %161 = sext i32 %159 to i64, !dbg !5621
  %162 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %160, i64 %161, i32 1, !dbg !5622
  store i32 2, i32* %162, align 8, !dbg !5623, !tbaa !1197
  %163 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %160, i64 %161, i32 0, !dbg !5624
  %164 = bitcast i8** %163 to %struct.RedisModuleCallReply**, !dbg !5625
  store %struct.RedisModuleCallReply* %132, %struct.RedisModuleCallReply** %164, align 8, !dbg !5625, !tbaa !1193
  %165 = add nsw i32 %159, 1, !dbg !5626
  store i32 %165, i32* %138, align 4, !dbg !5626, !tbaa !1187
  br label %166, !dbg !5627

; <label>:166:                                    ; preds = %158, %130, %35, %81, %57, %44
  %167 = phi %struct.RedisModuleCallReply* [ null, %35 ], [ null, %57 ], [ null, %81 ], [ null, %44 ], [ %132, %130 ], [ %132, %158 ], !dbg !5628
  %168 = load %struct.RedisModule*, %struct.RedisModule** %28, align 8, !dbg !5629, !tbaa !1156
  %169 = icmp eq %struct.RedisModule* %168, null, !dbg !5631
  br i1 %169, label %174, label %170, !dbg !5632

; <label>:170:                                    ; preds = %166
  %171 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %168, i64 0, i32 8, !dbg !5633
  %172 = load i32, i32* %171, align 8, !dbg !5634, !tbaa !1672
  %173 = add nsw i32 %172, -1, !dbg !5634
  store i32 %173, i32* %171, align 8, !dbg !5634, !tbaa !1672
  br label %174, !dbg !5635

; <label>:174:                                    ; preds = %166, %170
  call void @freeClient(%struct.client* %11) #11, !dbg !5636
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6, !dbg !5637
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6, !dbg !5637
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6, !dbg !5637
  ret %struct.RedisModuleCallReply* %167, !dbg !5638
}

; Function Attrs: noredzone
declare dso_local %struct.client* @createClient(i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleCallCommandFilters(%struct.client* nocapture) local_unnamed_addr #0 !dbg !5639 {
  %2 = alloca %struct.listIter, align 8
  %3 = alloca %struct.RedisModuleCommandFilterCtx, align 8
  %4 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !5665, !tbaa !902
  %5 = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 5, !dbg !5665
  %6 = load i64, i64* %5, align 8, !dbg !5665, !tbaa !5580
  %7 = icmp eq i64 %6, 0, !dbg !5667
  br i1 %7, label %47, label %8, !dbg !5668

; <label>:8:                                      ; preds = %1
  %9 = bitcast %struct.listIter* %2 to i8*, !dbg !5669
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6, !dbg !5669
  call void @listRewind(%struct.list* %4, %struct.listIter* nonnull %2) #11, !dbg !5671
  %10 = bitcast %struct.RedisModuleCommandFilterCtx* %3 to i8*, !dbg !5672
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6, !dbg !5672
  %11 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !5673
  %12 = bitcast %struct.redisObject*** %11 to i64*, !dbg !5673
  %13 = load i64, i64* %12, align 8, !dbg !5673, !tbaa !1316
  %14 = bitcast %struct.RedisModuleCommandFilterCtx* %3 to i64*, !dbg !5674
  store i64 %13, i64* %14, align 8, !dbg !5674, !tbaa !5675
  %15 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %3, i64 0, i32 1, !dbg !5674
  %16 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !5677
  %17 = load i32, i32* %16, align 8, !dbg !5677, !tbaa !1318
  store i32 %17, i32* %15, align 8, !dbg !5674, !tbaa !5678
  %18 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !5679
  %19 = icmp eq %struct.listNode* %18, null, !dbg !5681
  br i1 %19, label %44, label %20, !dbg !5681

; <label>:20:                                     ; preds = %8, %38
  %21 = phi %struct.listNode* [ %39, %38 ], [ %18, %8 ]
  %22 = getelementptr inbounds %struct.listNode, %struct.listNode* %21, i64 0, i32 2, !dbg !5682
  %23 = bitcast i8** %22 to %struct.RedisModuleCommandFilter**, !dbg !5682
  %24 = load %struct.RedisModuleCommandFilter*, %struct.RedisModuleCommandFilter** %23, align 8, !dbg !5682, !tbaa !5585
  %25 = getelementptr inbounds %struct.RedisModuleCommandFilter, %struct.RedisModuleCommandFilter* %24, i64 0, i32 2, !dbg !5684
  %26 = load i32, i32* %25, align 8, !dbg !5684, !tbaa !5686
  %27 = and i32 %26, 1, !dbg !5688
  %28 = icmp eq i32 %27, 0, !dbg !5688
  br i1 %28, label %35, label %29, !dbg !5689

; <label>:29:                                     ; preds = %20
  %30 = getelementptr inbounds %struct.RedisModuleCommandFilter, %struct.RedisModuleCommandFilter* %24, i64 0, i32 0, !dbg !5690
  %31 = load %struct.RedisModule*, %struct.RedisModule** %30, align 8, !dbg !5690, !tbaa !5691
  %32 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %31, i64 0, i32 8, !dbg !5692
  %33 = load i32, i32* %32, align 8, !dbg !5692, !tbaa !1672
  %34 = icmp eq i32 %33, 0, !dbg !5693
  br i1 %34, label %35, label %38, !dbg !5694, !llvm.loop !5695

; <label>:35:                                     ; preds = %29, %20
  %36 = getelementptr inbounds %struct.RedisModuleCommandFilter, %struct.RedisModuleCommandFilter* %24, i64 0, i32 1, !dbg !5697
  %37 = load void (%struct.RedisModuleCommandFilterCtx*)*, void (%struct.RedisModuleCommandFilterCtx*)** %36, align 8, !dbg !5697, !tbaa !5698
  call void %37(%struct.RedisModuleCommandFilterCtx* nonnull %3) #11, !dbg !5700
  br label %38, !dbg !5696

; <label>:38:                                     ; preds = %29, %35
  %39 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !5679
  %40 = icmp eq %struct.listNode* %39, null, !dbg !5681
  br i1 %40, label %41, label %20, !dbg !5681

; <label>:41:                                     ; preds = %38
  %42 = load i64, i64* %14, align 8, !dbg !5701, !tbaa !5675
  %43 = load i32, i32* %15, align 8, !dbg !5702, !tbaa !5678
  br label %44, !dbg !5701

; <label>:44:                                     ; preds = %41, %8
  %45 = phi i32 [ %43, %41 ], [ %17, %8 ], !dbg !5702
  %46 = phi i64 [ %42, %41 ], [ %13, %8 ], !dbg !5701
  store i64 %46, i64* %12, align 8, !dbg !5703, !tbaa !1316
  store i32 %45, i32* %16, align 8, !dbg !5704, !tbaa !1318
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6, !dbg !5705
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6, !dbg !5705
  br label %47, !dbg !5705

; <label>:47:                                     ; preds = %1, %44
  ret void, !dbg !5705
}

; Function Attrs: noredzone
declare dso_local i32* @__errno() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.clusterNode* @getNodeByQuery(%struct.client*, %struct.redisCommand*, %struct.redisObject**, i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @call(%struct.client*, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @listDelNode(%struct.list*, %struct.listNode*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_CallReplyProto(%struct.RedisModuleCallReply* nocapture readonly, i64* nocapture) #0 !dbg !5706 {
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5712
  %4 = load i8*, i8** %3, align 8, !dbg !5712, !tbaa !2897
  %5 = icmp eq i8* %4, null, !dbg !5714
  br i1 %5, label %33, label %6, !dbg !5715

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds i8, i8* %4, i64 -1, !dbg !5718
  %8 = load i8, i8* %7, align 1, !dbg !5718, !tbaa !1123
  %9 = trunc i8 %8 to i3, !dbg !5720
  switch i3 %9, label %31 [
    i3 0, label %10
    i3 1, label %13
    i3 2, label %17
    i3 3, label %22
    i3 -4, label %27
  ], !dbg !5720

; <label>:10:                                     ; preds = %6
  %11 = lshr i8 %8, 3, !dbg !5721
  %12 = zext i8 %11 to i64, !dbg !5721
  br label %31, !dbg !5722

; <label>:13:                                     ; preds = %6
  %14 = getelementptr inbounds i8, i8* %4, i64 -3, !dbg !5723
  %15 = load i8, i8* %14, align 1, !dbg !5724, !tbaa !1123
  %16 = zext i8 %15 to i64, !dbg !5723
  br label %31, !dbg !5725

; <label>:17:                                     ; preds = %6
  %18 = getelementptr inbounds i8, i8* %4, i64 -5, !dbg !5726
  %19 = bitcast i8* %18 to i16*, !dbg !5727
  %20 = load i16, i16* %19, align 1, !dbg !5727, !tbaa !2350
  %21 = zext i16 %20 to i64, !dbg !5726
  br label %31, !dbg !5728

; <label>:22:                                     ; preds = %6
  %23 = getelementptr inbounds i8, i8* %4, i64 -9, !dbg !5729
  %24 = bitcast i8* %23 to i32*, !dbg !5730
  %25 = load i32, i32* %24, align 1, !dbg !5730, !tbaa !933
  %26 = zext i32 %25 to i64, !dbg !5729
  br label %31, !dbg !5731

; <label>:27:                                     ; preds = %6
  %28 = getelementptr inbounds i8, i8* %4, i64 -17, !dbg !5732
  %29 = bitcast i8* %28 to i64*, !dbg !5733
  %30 = load i64, i64* %29, align 1, !dbg !5733, !tbaa !2327
  br label %31, !dbg !5734

; <label>:31:                                     ; preds = %6, %10, %13, %17, %22, %27
  %32 = phi i64 [ %30, %27 ], [ %26, %22 ], [ %21, %17 ], [ %16, %13 ], [ %12, %10 ], [ 0, %6 ], !dbg !5735
  store i64 %32, i64* %1, align 8, !dbg !5736, !tbaa !2327
  br label %33, !dbg !5737

; <label>:33:                                     ; preds = %2, %31
  ret i8* %4, !dbg !5738
}

; Function Attrs: noredzone nounwind
define dso_local i64 @moduleTypeEncodeId(i8*, i32) local_unnamed_addr #0 !dbg !5739 {
  %3 = load i8*, i8** @ModuleTypeNameCharSet, align 8, !dbg !5755, !tbaa !902
  %4 = tail call i64 @strlen(i8* %0) #11, !dbg !5757
  %5 = icmp ne i64 %4, 9, !dbg !5759
  %6 = icmp ugt i32 %1, 1023, !dbg !5760
  %7 = or i1 %6, %5, !dbg !5762
  br i1 %7, label %20, label %8, !dbg !5762

; <label>:8:                                      ; preds = %2
  %9 = ptrtoint i8* %3 to i64
  %10 = load i8, i8* %0, align 1, !dbg !5765, !tbaa !1123
  %11 = sext i8 %10 to i32, !dbg !5765
  %12 = tail call i8* @strchr(i8* %3, i32 %11) #11, !dbg !5766
  %13 = icmp eq i8* %12, null, !dbg !5768
  br i1 %13, label %20, label %14, !dbg !5770

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !5765
  %16 = load i8, i8* %15, align 1, !dbg !5765, !tbaa !1123
  %17 = sext i8 %16 to i32, !dbg !5765
  %18 = tail call i8* @strchr(i8* %3, i32 %17) #11, !dbg !5766
  %19 = icmp eq i8* %18, null, !dbg !5768
  br i1 %19, label %20, label %22, !dbg !5770

; <label>:20:                                     ; preds = %8, %14, %22, %28, %34, %40, %46, %52, %58, %2, %64
  %21 = phi i64 [ 0, %2 ], [ %101, %64 ], [ 0, %58 ], [ 0, %52 ], [ 0, %46 ], [ 0, %40 ], [ 0, %34 ], [ 0, %28 ], [ 0, %22 ], [ 0, %14 ], [ 0, %8 ], !dbg !5771
  ret i64 %21, !dbg !5772

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds i8, i8* %0, i64 2, !dbg !5765
  %24 = load i8, i8* %23, align 1, !dbg !5765, !tbaa !1123
  %25 = sext i8 %24 to i32, !dbg !5765
  %26 = tail call i8* @strchr(i8* %3, i32 %25) #11, !dbg !5766
  %27 = icmp eq i8* %26, null, !dbg !5768
  br i1 %27, label %20, label %28, !dbg !5770

; <label>:28:                                     ; preds = %22
  %29 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !5765
  %30 = load i8, i8* %29, align 1, !dbg !5765, !tbaa !1123
  %31 = sext i8 %30 to i32, !dbg !5765
  %32 = tail call i8* @strchr(i8* %3, i32 %31) #11, !dbg !5766
  %33 = icmp eq i8* %32, null, !dbg !5768
  br i1 %33, label %20, label %34, !dbg !5770

; <label>:34:                                     ; preds = %28
  %35 = getelementptr inbounds i8, i8* %0, i64 4, !dbg !5765
  %36 = load i8, i8* %35, align 1, !dbg !5765, !tbaa !1123
  %37 = sext i8 %36 to i32, !dbg !5765
  %38 = tail call i8* @strchr(i8* %3, i32 %37) #11, !dbg !5766
  %39 = icmp eq i8* %38, null, !dbg !5768
  br i1 %39, label %20, label %40, !dbg !5770

; <label>:40:                                     ; preds = %34
  %41 = getelementptr inbounds i8, i8* %0, i64 5, !dbg !5765
  %42 = load i8, i8* %41, align 1, !dbg !5765, !tbaa !1123
  %43 = sext i8 %42 to i32, !dbg !5765
  %44 = tail call i8* @strchr(i8* %3, i32 %43) #11, !dbg !5766
  %45 = icmp eq i8* %44, null, !dbg !5768
  br i1 %45, label %20, label %46, !dbg !5770

; <label>:46:                                     ; preds = %40
  %47 = getelementptr inbounds i8, i8* %0, i64 6, !dbg !5765
  %48 = load i8, i8* %47, align 1, !dbg !5765, !tbaa !1123
  %49 = sext i8 %48 to i32, !dbg !5765
  %50 = tail call i8* @strchr(i8* %3, i32 %49) #11, !dbg !5766
  %51 = icmp eq i8* %50, null, !dbg !5768
  br i1 %51, label %20, label %52, !dbg !5770

; <label>:52:                                     ; preds = %46
  %53 = getelementptr inbounds i8, i8* %0, i64 7, !dbg !5765
  %54 = load i8, i8* %53, align 1, !dbg !5765, !tbaa !1123
  %55 = sext i8 %54 to i32, !dbg !5765
  %56 = tail call i8* @strchr(i8* %3, i32 %55) #11, !dbg !5766
  %57 = icmp eq i8* %56, null, !dbg !5768
  br i1 %57, label %20, label %58, !dbg !5770

; <label>:58:                                     ; preds = %52
  %59 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !5765
  %60 = load i8, i8* %59, align 1, !dbg !5765, !tbaa !1123
  %61 = sext i8 %60 to i32, !dbg !5765
  %62 = tail call i8* @strchr(i8* %3, i32 %61) #11, !dbg !5766
  %63 = icmp eq i8* %62, null, !dbg !5768
  br i1 %63, label %20, label %64, !dbg !5770

; <label>:64:                                     ; preds = %58
  %65 = ptrtoint i8* %56 to i64, !dbg !5773
  %66 = sub i64 %65, %9, !dbg !5773
  %67 = ptrtoint i8* %50 to i64, !dbg !5773
  %68 = sub i64 %67, %9, !dbg !5773
  %69 = ptrtoint i8* %44 to i64, !dbg !5773
  %70 = sub i64 %69, %9, !dbg !5773
  %71 = ptrtoint i8* %38 to i64, !dbg !5773
  %72 = sub i64 %71, %9, !dbg !5773
  %73 = ptrtoint i8* %32 to i64, !dbg !5773
  %74 = sub i64 %73, %9, !dbg !5773
  %75 = ptrtoint i8* %26 to i64, !dbg !5773
  %76 = sub i64 %75, %9, !dbg !5773
  %77 = ptrtoint i8* %18 to i64, !dbg !5773
  %78 = sub i64 %77, %9, !dbg !5773
  %79 = ptrtoint i8* %12 to i64, !dbg !5773
  %80 = sub i64 %79, %9, !dbg !5773
  %81 = shl i64 %80, 6, !dbg !5775
  %82 = or i64 %78, %81, !dbg !5776
  %83 = shl i64 %82, 6, !dbg !5775
  %84 = or i64 %76, %83, !dbg !5776
  %85 = shl i64 %84, 6, !dbg !5775
  %86 = or i64 %74, %85, !dbg !5776
  %87 = shl i64 %86, 6, !dbg !5775
  %88 = or i64 %72, %87, !dbg !5776
  %89 = shl i64 %88, 6, !dbg !5775
  %90 = or i64 %70, %89, !dbg !5776
  %91 = shl i64 %90, 6, !dbg !5775
  %92 = or i64 %68, %91, !dbg !5776
  %93 = shl i64 %92, 6, !dbg !5775
  %94 = or i64 %66, %93, !dbg !5776
  %95 = ptrtoint i8* %62 to i64, !dbg !5773
  %96 = sub i64 %95, %9, !dbg !5773
  %97 = shl i64 %94, 6, !dbg !5775
  %98 = or i64 %96, %97, !dbg !5776
  %99 = shl i64 %98, 10, !dbg !5777
  %100 = sext i32 %1 to i64, !dbg !5778
  %101 = or i64 %99, %100, !dbg !5779
  br label %20, !dbg !5780
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleType* @moduleTypeLookupModuleByName(i8*) local_unnamed_addr #0 !dbg !5781 {
  %2 = alloca %struct.listIter, align 8
  %3 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !5795, !tbaa !902
  %4 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %3) #11, !dbg !5796
  %5 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #11, !dbg !5798
  %6 = icmp eq %struct.dictEntry* %5, null, !dbg !5800
  br i1 %6, label %30, label %7, !dbg !5801

; <label>:7:                                      ; preds = %1
  %8 = bitcast %struct.listIter* %2 to i8*
  br label %9, !dbg !5801

; <label>:9:                                      ; preds = %7, %27
  %10 = phi %struct.dictEntry* [ %5, %7 ], [ %28, %27 ]
  %11 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, i32 0, !dbg !5802
  %12 = bitcast i8** %11 to %struct.RedisModule**, !dbg !5802
  %13 = load %struct.RedisModule*, %struct.RedisModule** %12, align 8, !dbg !5802, !tbaa !1123
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6, !dbg !5804
  %14 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %13, i64 0, i32 4, !dbg !5805
  %15 = load %struct.list*, %struct.list** %14, align 8, !dbg !5805, !tbaa !1657
  call void @listRewind(%struct.list* %15, %struct.listIter* nonnull %2) #11, !dbg !5807
  br label %16, !dbg !5808

; <label>:16:                                     ; preds = %19, %9
  %17 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !5809
  %18 = icmp eq %struct.listNode* %17, null, !dbg !5808
  br i1 %18, label %27, label %19, !dbg !5808

; <label>:19:                                     ; preds = %16
  %20 = getelementptr inbounds %struct.listNode, %struct.listNode* %17, i64 0, i32 2, !dbg !5811
  %21 = bitcast i8** %20 to %struct.RedisModuleType**, !dbg !5811
  %22 = load %struct.RedisModuleType*, %struct.RedisModuleType** %21, align 8, !dbg !5811, !tbaa !5585
  %23 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %22, i64 0, i32 11, i64 0, !dbg !5813
  %24 = call i32 @memcmp(i8* %0, i8* nonnull %23, i64 10) #11, !dbg !5815
  %25 = icmp eq i32 %24, 0, !dbg !5816
  br i1 %25, label %26, label %16, !dbg !5817

; <label>:26:                                     ; preds = %19
  call void @dictReleaseIterator(%struct.dictIterator* %4) #11, !dbg !5818
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6, !dbg !5820
  br label %31

; <label>:27:                                     ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6, !dbg !5820
  %28 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #11, !dbg !5798
  %29 = icmp eq %struct.dictEntry* %28, null, !dbg !5800
  br i1 %29, label %30, label %9, !dbg !5801

; <label>:30:                                     ; preds = %27, %1
  call void @dictReleaseIterator(%struct.dictIterator* %4) #11, !dbg !5821
  br label %31, !dbg !5822

; <label>:31:                                     ; preds = %26, %30
  %32 = phi %struct.RedisModuleType* [ null, %30 ], [ %22, %26 ], !dbg !5823
  ret %struct.RedisModuleType* %32, !dbg !5824
}

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetIterator(%struct.dict*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictNext(%struct.dictIterator*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @listRewind(%struct.list*, %struct.listIter*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.listNode* @listNext(%struct.listIter*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @dictReleaseIterator(%struct.dictIterator*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleType* @moduleTypeLookupModuleByID(i64) local_unnamed_addr #0 !dbg !736 {
  %2 = alloca %struct.listIter, align 8
  %3 = load %struct.RedisModuleType*, %struct.RedisModuleType** getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 0, i32 1), align 8, !dbg !5827, !tbaa !5830
  %4 = icmp eq %struct.RedisModuleType* %3, null, !dbg !5832
  br i1 %4, label %11, label %5, !dbg !5833

; <label>:5:                                      ; preds = %1
  %6 = load i64, i64* getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 0, i32 0), align 16, !dbg !5834, !tbaa !5836
  %7 = icmp eq i64 %6, %0, !dbg !5837
  br i1 %7, label %51, label %8, !dbg !5838

; <label>:8:                                      ; preds = %5
  %9 = load %struct.RedisModuleType*, %struct.RedisModuleType** getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 1, i32 1), align 8, !dbg !5827, !tbaa !5830
  %10 = icmp eq %struct.RedisModuleType* %9, null, !dbg !5832
  br i1 %10, label %11, label %53, !dbg !5833

; <label>:11:                                     ; preds = %59, %56, %8, %1
  %12 = phi i64 [ 0, %1 ], [ 1, %8 ], [ 2, %56 ], [ 3, %59 ]
  %13 = phi i1 [ true, %1 ], [ true, %8 ], [ true, %56 ], [ false, %59 ], !dbg !5839
  %14 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !5841, !tbaa !902
  %15 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %14) #11, !dbg !5842
  %16 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %15) #11, !dbg !5844
  %17 = icmp eq %struct.dictEntry* %16, null, !dbg !5846
  br i1 %17, label %18, label %19, !dbg !5847

; <label>:18:                                     ; preds = %11
  call void @dictReleaseIterator(%struct.dictIterator* %15) #11, !dbg !5848
  br label %51, !dbg !5849

; <label>:19:                                     ; preds = %11
  %20 = bitcast %struct.listIter* %2 to i8*
  br label %21, !dbg !5847

; <label>:21:                                     ; preds = %19, %39
  %22 = phi %struct.dictEntry* [ %16, %19 ], [ %41, %39 ]
  %23 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %22, i64 0, i32 1, i32 0, !dbg !5851
  %24 = bitcast i8** %23 to %struct.RedisModule**, !dbg !5851
  %25 = load %struct.RedisModule*, %struct.RedisModule** %24, align 8, !dbg !5851, !tbaa !1123
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #6, !dbg !5853
  %26 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %25, i64 0, i32 4, !dbg !5854
  %27 = load %struct.list*, %struct.list** %26, align 8, !dbg !5854, !tbaa !1657
  call void @listRewind(%struct.list* %27, %struct.listIter* nonnull %2) #11, !dbg !5856
  br label %28, !dbg !5857

; <label>:28:                                     ; preds = %31, %21
  %29 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !5858
  %30 = icmp eq %struct.listNode* %29, null, !dbg !5857
  br i1 %30, label %39, label %31, !dbg !5857

; <label>:31:                                     ; preds = %28
  %32 = getelementptr inbounds %struct.listNode, %struct.listNode* %29, i64 0, i32 2, !dbg !5860
  %33 = bitcast i8** %32 to %struct.RedisModuleType**, !dbg !5860
  %34 = load %struct.RedisModuleType*, %struct.RedisModuleType** %33, align 8, !dbg !5860, !tbaa !5585
  %35 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %34, i64 0, i32 0, !dbg !5862
  %36 = load i64, i64* %35, align 8, !dbg !5862, !tbaa !5864
  %37 = xor i64 %36, %0, !dbg !5866
  %38 = icmp ult i64 %37, 1024, !dbg !5866
  br i1 %38, label %39, label %28, !llvm.loop !5867

; <label>:39:                                     ; preds = %31, %28
  %40 = phi %struct.RedisModuleType* [ %34, %31 ], [ null, %28 ], !dbg !5869
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #6, !dbg !5870
  %41 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %15) #11, !dbg !5844
  %42 = icmp ne %struct.dictEntry* %41, null, !dbg !5846
  %43 = icmp eq %struct.RedisModuleType* %40, null, !dbg !5871
  %44 = and i1 %43, %42, !dbg !5872
  br i1 %44, label %21, label %45, !dbg !5847, !llvm.loop !5873

; <label>:45:                                     ; preds = %39
  call void @dictReleaseIterator(%struct.dictIterator* %15) #11, !dbg !5848
  %46 = icmp ne %struct.RedisModuleType* %40, null, !dbg !5874
  %47 = and i1 %13, %46, !dbg !5849
  br i1 %47, label %48, label %51, !dbg !5849

; <label>:48:                                     ; preds = %45
  %49 = getelementptr inbounds [3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 %12, i32 0, !dbg !5875
  store i64 %0, i64* %49, align 16, !dbg !5877, !tbaa !5836
  %50 = getelementptr inbounds [3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 %12, i32 1, !dbg !5878
  store %struct.RedisModuleType* %40, %struct.RedisModuleType** %50, align 8, !dbg !5879, !tbaa !5830
  br label %51, !dbg !5880

; <label>:51:                                     ; preds = %5, %53, %59, %18, %45, %48
  %52 = phi %struct.RedisModuleType* [ %40, %48 ], [ %40, %45 ], [ null, %18 ], [ %3, %5 ], [ %9, %53 ], [ %57, %59 ], !dbg !5869
  ret %struct.RedisModuleType* %52, !dbg !5881

; <label>:53:                                     ; preds = %8
  %54 = load i64, i64* getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 1, i32 0), align 16, !dbg !5834, !tbaa !5836
  %55 = icmp eq i64 %54, %0, !dbg !5837
  br i1 %55, label %51, label %56, !dbg !5838

; <label>:56:                                     ; preds = %53
  %57 = load %struct.RedisModuleType*, %struct.RedisModuleType** getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 2, i32 1), align 8, !dbg !5827, !tbaa !5830
  %58 = icmp eq %struct.RedisModuleType* %57, null, !dbg !5832
  br i1 %58, label %11, label %59, !dbg !5833

; <label>:59:                                     ; preds = %56
  %60 = load i64, i64* getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 2, i32 0), align 16, !dbg !5834, !tbaa !5836
  %61 = icmp eq i64 %60, %0, !dbg !5837
  br i1 %61, label %51, label %11, !dbg !5838
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleTypeNameByID(i8* nocapture, i64) local_unnamed_addr #0 !dbg !5882 {
  %3 = load i8*, i8** @ModuleTypeNameCharSet, align 8, !dbg !5894, !tbaa !902
  %4 = getelementptr inbounds i8, i8* %0, i64 9, !dbg !5896
  store i8 0, i8* %4, align 1, !dbg !5897, !tbaa !1123
  %5 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !5898
  %6 = lshr i64 %1, 10, !dbg !5900
  %7 = and i64 %6, 63, !dbg !5902
  %8 = getelementptr inbounds i8, i8* %3, i64 %7, !dbg !5905
  %9 = load i8, i8* %8, align 1, !dbg !5905, !tbaa !1123
  %10 = getelementptr inbounds i8, i8* %0, i64 7, !dbg !5906
  store i8 %9, i8* %5, align 1, !dbg !5907, !tbaa !1123
  %11 = lshr i64 %1, 16, !dbg !5908
  %12 = and i64 %11, 63, !dbg !5902
  %13 = getelementptr inbounds i8, i8* %3, i64 %12, !dbg !5905
  %14 = load i8, i8* %13, align 1, !dbg !5905, !tbaa !1123
  %15 = getelementptr inbounds i8, i8* %0, i64 6, !dbg !5906
  store i8 %14, i8* %10, align 1, !dbg !5907, !tbaa !1123
  %16 = lshr i64 %1, 22, !dbg !5908
  %17 = and i64 %16, 63, !dbg !5902
  %18 = getelementptr inbounds i8, i8* %3, i64 %17, !dbg !5905
  %19 = load i8, i8* %18, align 1, !dbg !5905, !tbaa !1123
  %20 = getelementptr inbounds i8, i8* %0, i64 5, !dbg !5906
  store i8 %19, i8* %15, align 1, !dbg !5907, !tbaa !1123
  %21 = lshr i64 %1, 28, !dbg !5908
  %22 = and i64 %21, 63, !dbg !5902
  %23 = getelementptr inbounds i8, i8* %3, i64 %22, !dbg !5905
  %24 = load i8, i8* %23, align 1, !dbg !5905, !tbaa !1123
  %25 = getelementptr inbounds i8, i8* %0, i64 4, !dbg !5906
  store i8 %24, i8* %20, align 1, !dbg !5907, !tbaa !1123
  %26 = lshr i64 %1, 34, !dbg !5908
  %27 = and i64 %26, 63, !dbg !5902
  %28 = getelementptr inbounds i8, i8* %3, i64 %27, !dbg !5905
  %29 = load i8, i8* %28, align 1, !dbg !5905, !tbaa !1123
  %30 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !5906
  store i8 %29, i8* %25, align 1, !dbg !5907, !tbaa !1123
  %31 = lshr i64 %1, 40, !dbg !5908
  %32 = and i64 %31, 63, !dbg !5902
  %33 = getelementptr inbounds i8, i8* %3, i64 %32, !dbg !5905
  %34 = load i8, i8* %33, align 1, !dbg !5905, !tbaa !1123
  %35 = getelementptr inbounds i8, i8* %0, i64 2, !dbg !5906
  store i8 %34, i8* %30, align 1, !dbg !5907, !tbaa !1123
  %36 = lshr i64 %1, 46, !dbg !5908
  %37 = and i64 %36, 63, !dbg !5902
  %38 = getelementptr inbounds i8, i8* %3, i64 %37, !dbg !5905
  %39 = load i8, i8* %38, align 1, !dbg !5905, !tbaa !1123
  %40 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !5906
  store i8 %39, i8* %35, align 1, !dbg !5907, !tbaa !1123
  %41 = lshr i64 %1, 52, !dbg !5908
  %42 = and i64 %41, 63, !dbg !5902
  %43 = getelementptr inbounds i8, i8* %3, i64 %42, !dbg !5905
  %44 = load i8, i8* %43, align 1, !dbg !5905, !tbaa !1123
  store i8 %44, i8* %40, align 1, !dbg !5907, !tbaa !1123
  %45 = lshr i64 %1, 58, !dbg !5908
  %46 = getelementptr inbounds i8, i8* %3, i64 %45, !dbg !5905
  %47 = load i8, i8* %46, align 1, !dbg !5905, !tbaa !1123
  store i8 %47, i8* %0, align 1, !dbg !5907, !tbaa !1123
  ret void, !dbg !5909
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleType* @RM_CreateDataType(%struct.RedisModuleCtx* nocapture readonly, i8*, i32, i8* nocapture readonly) #0 !dbg !264 {
  %5 = tail call i64 @moduleTypeEncodeId(i8* %1, i32 %2) #12, !dbg !5914
  %6 = icmp eq i64 %5, 0, !dbg !5916
  br i1 %6, label %58, label %7, !dbg !5918

; <label>:7:                                      ; preds = %4
  %8 = tail call %struct.RedisModuleType* @moduleTypeLookupModuleByName(i8* %1) #12, !dbg !5919
  %9 = icmp eq %struct.RedisModuleType* %8, null, !dbg !5921
  br i1 %9, label %10, label %58, !dbg !5922

; <label>:10:                                     ; preds = %7
  %11 = bitcast i8* %3 to i64*, !dbg !5923
  %12 = load i64, i64* %11, align 8, !dbg !5924, !tbaa !2327
  %13 = icmp eq i64 %12, 0, !dbg !5926
  br i1 %13, label %58, label %14, !dbg !5928

; <label>:14:                                     ; preds = %10
  %15 = tail call i8* @zcalloc(i64 96) #11, !dbg !5929
  %16 = bitcast i8* %15 to %struct.RedisModuleType*, !dbg !5929
  %17 = bitcast i8* %15 to i64*, !dbg !5931
  store i64 %5, i64* %17, align 8, !dbg !5932, !tbaa !5864
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !5933
  %19 = bitcast %struct.RedisModule** %18 to i64*, !dbg !5933
  %20 = load i64, i64* %19, align 8, !dbg !5933, !tbaa !1156
  %21 = getelementptr inbounds i8, i8* %15, i64 8, !dbg !5934
  %22 = bitcast i8* %21 to i64*, !dbg !5935
  store i64 %20, i64* %22, align 8, !dbg !5935, !tbaa !5936
  %23 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !5937
  %24 = getelementptr inbounds i8, i8* %15, i64 16, !dbg !5938
  %25 = bitcast i8* %23 to <2 x i64>*, !dbg !5937
  %26 = load <2 x i64>, <2 x i64>* %25, align 8, !dbg !5937, !tbaa !902
  %27 = bitcast i8* %24 to <2 x i64>*, !dbg !5939
  store <2 x i64> %26, <2 x i64>* %27, align 8, !dbg !5939, !tbaa !902
  %28 = getelementptr inbounds i8, i8* %3, i64 24, !dbg !5940
  %29 = getelementptr inbounds i8, i8* %15, i64 32, !dbg !5941
  %30 = bitcast i8* %28 to <2 x i64>*, !dbg !5940
  %31 = load <2 x i64>, <2 x i64>* %30, align 8, !dbg !5940, !tbaa !902
  %32 = bitcast i8* %29 to <2 x i64>*, !dbg !5942
  store <2 x i64> %31, <2 x i64>* %32, align 8, !dbg !5942, !tbaa !902
  %33 = getelementptr inbounds i8, i8* %3, i64 40, !dbg !5943
  %34 = getelementptr inbounds i8, i8* %15, i64 48, !dbg !5944
  %35 = bitcast i8* %33 to <2 x i64>*, !dbg !5943
  %36 = load <2 x i64>, <2 x i64>* %35, align 8, !dbg !5943, !tbaa !902
  %37 = bitcast i8* %34 to <2 x i64>*, !dbg !5945
  store <2 x i64> %36, <2 x i64>* %37, align 8, !dbg !5945, !tbaa !902
  %38 = load i64, i64* %11, align 8, !dbg !5946, !tbaa !5948
  %39 = icmp ugt i64 %38, 1, !dbg !5951
  br i1 %39, label %40, label %51, !dbg !5952

; <label>:40:                                     ; preds = %14
  %41 = getelementptr inbounds i8, i8* %3, i64 56, !dbg !5954
  %42 = getelementptr inbounds i8, i8* %15, i64 64, !dbg !5956
  %43 = bitcast i8* %41 to <2 x i64>*, !dbg !5957
  %44 = load <2 x i64>, <2 x i64>* %43, align 8, !dbg !5957, !tbaa !902
  %45 = bitcast i8* %42 to <2 x i64>*, !dbg !5958
  store <2 x i64> %44, <2 x i64>* %45, align 8, !dbg !5958, !tbaa !902
  %46 = getelementptr inbounds i8, i8* %3, i64 72, !dbg !5959
  %47 = bitcast i8* %46 to i32*, !dbg !5959
  %48 = load i32, i32* %47, align 8, !dbg !5959, !tbaa !5960
  %49 = getelementptr inbounds i8, i8* %15, i64 80, !dbg !5961
  %50 = bitcast i8* %49 to i32*, !dbg !5961
  store i32 %48, i32* %50, align 8, !dbg !5962, !tbaa !5963
  br label %51, !dbg !5964

; <label>:51:                                     ; preds = %40, %14
  %52 = getelementptr inbounds i8, i8* %15, i64 84, !dbg !5965
  %53 = tail call i8* @memcpy(i8* nonnull %52, i8* %1, i64 10) #11, !dbg !5966
  %54 = load %struct.RedisModule*, %struct.RedisModule** %18, align 8, !dbg !5967, !tbaa !1156
  %55 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %54, i64 0, i32 4, !dbg !5968
  %56 = load %struct.list*, %struct.list** %55, align 8, !dbg !5968, !tbaa !1657
  %57 = tail call %struct.list* @listAddNodeTail(%struct.list* %56, i8* %15) #11, !dbg !5969
  br label %58

; <label>:58:                                     ; preds = %51, %10, %7, %4
  %59 = phi %struct.RedisModuleType* [ null, %4 ], [ null, %7 ], [ %16, %51 ], [ null, %10 ], !dbg !5970
  ret %struct.RedisModuleType* %59, !dbg !5971
}

; Function Attrs: noredzone
declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.list* @listAddNodeTail(%struct.list*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ModuleTypeSetValue(%struct.RedisModuleKey* nocapture, %struct.RedisModuleType*, i8*) #0 !dbg !5972 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !5983
  %5 = load i32, i32* %4, align 8, !dbg !5983, !tbaa !1025
  %6 = and i32 %5, 2, !dbg !5985
  %7 = icmp eq i32 %6, 0, !dbg !5985
  br i1 %7, label %29, label %8, !dbg !5986

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 4, !dbg !5987
  %10 = load i8*, i8** %9, align 8, !dbg !5987, !tbaa !3329
  %11 = icmp eq i8* %10, null, !dbg !5988
  br i1 %11, label %12, label %29, !dbg !5989

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !5992
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !5992, !tbaa !1033
  %15 = icmp eq %struct.redisObject* %14, null, !dbg !5993
  %16 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !5994
  br i1 %15, label %17, label %19, !dbg !5995

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !5996
  br label %24, !dbg !5995

; <label>:19:                                     ; preds = %12
  %20 = load %struct.redisDb*, %struct.redisDb** %16, align 8, !dbg !5997, !tbaa !1061
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !5998
  %22 = load %struct.redisObject*, %struct.redisObject** %21, align 8, !dbg !5998, !tbaa !1063
  %23 = tail call i32 @dbDelete(%struct.redisDb* %20, %struct.redisObject* %22) #11, !dbg !5999
  store %struct.redisObject* null, %struct.redisObject** %13, align 8, !dbg !6000, !tbaa !1033
  br label %24, !dbg !6001

; <label>:24:                                     ; preds = %17, %19
  %25 = phi %struct.redisObject** [ %18, %17 ], [ %21, %19 ], !dbg !5996
  %26 = tail call %struct.redisObject* @createModuleObject(%struct.RedisModuleType* %1, i8* %2) #11, !dbg !6002
  %27 = load %struct.redisDb*, %struct.redisDb** %16, align 8, !dbg !6004, !tbaa !1061
  %28 = load %struct.redisObject*, %struct.redisObject** %25, align 8, !dbg !5996, !tbaa !1063
  tail call void @setKey(%struct.redisDb* %27, %struct.redisObject* %28, %struct.redisObject* %26) #11, !dbg !6005
  tail call void @decrRefCount(%struct.redisObject* %26) #11, !dbg !6006
  store %struct.redisObject* %26, %struct.redisObject** %13, align 8, !dbg !6007, !tbaa !1033
  br label %29

; <label>:29:                                     ; preds = %3, %8, %24
  %30 = phi i32 [ 0, %24 ], [ 1, %8 ], [ 1, %3 ], !dbg !5994
  ret i32 %30, !dbg !6008
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createModuleObject(%struct.RedisModuleType*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind readonly
define dso_local %struct.RedisModuleType* @RM_ModuleTypeGetType(%struct.RedisModuleKey* readonly) #4 !dbg !6009 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !6022
  br i1 %2, label %18, label %3, !dbg !6024

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !6025
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !6025, !tbaa !1033
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !6026
  br i1 %6, label %18, label %7, !dbg !6027

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !6030
  %9 = load i32, i32* %8, align 8, !dbg !6030
  %10 = trunc i32 %9 to i4, !dbg !6031
  %11 = icmp eq i4 %10, 5, !dbg !6031
  br i1 %11, label %12, label %18, !dbg !6031

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 2, !dbg !6032
  %14 = bitcast i8** %13 to %struct.moduleValue**, !dbg !6032
  %15 = load %struct.moduleValue*, %struct.moduleValue** %14, align 8, !dbg !6032, !tbaa !1041
  %16 = getelementptr inbounds %struct.moduleValue, %struct.moduleValue* %15, i64 0, i32 0, !dbg !6034
  %17 = load %struct.RedisModuleType*, %struct.RedisModuleType** %16, align 8, !dbg !6034, !tbaa !6035
  br label %18

; <label>:18:                                     ; preds = %7, %1, %3, %12
  %19 = phi %struct.RedisModuleType* [ %17, %12 ], [ null, %3 ], [ null, %1 ], [ null, %7 ], !dbg !6037
  ret %struct.RedisModuleType* %19, !dbg !6038
}

; Function Attrs: noredzone nounwind readonly
define dso_local i8* @RM_ModuleTypeGetValue(%struct.RedisModuleKey* readonly) #4 !dbg !6039 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !6046
  br i1 %2, label %18, label %3, !dbg !6048

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !6049
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !6049, !tbaa !1033
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !6050
  br i1 %6, label %18, label %7, !dbg !6051

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !6054
  %9 = load i32, i32* %8, align 8, !dbg !6054
  %10 = trunc i32 %9 to i4, !dbg !6055
  %11 = icmp eq i4 %10, 5, !dbg !6055
  br i1 %11, label %12, label %18, !dbg !6055

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 2, !dbg !6056
  %14 = bitcast i8** %13 to %struct.moduleValue**, !dbg !6056
  %15 = load %struct.moduleValue*, %struct.moduleValue** %14, align 8, !dbg !6056, !tbaa !1041
  %16 = getelementptr inbounds %struct.moduleValue, %struct.moduleValue* %15, i64 0, i32 1, !dbg !6058
  %17 = load i8*, i8** %16, align 8, !dbg !6058, !tbaa !6059
  br label %18

; <label>:18:                                     ; preds = %7, %1, %3, %12
  %19 = phi i8* [ %17, %12 ], [ null, %3 ], [ null, %1 ], [ null, %7 ], !dbg !6060
  ret i8* %19, !dbg !6061
}

; Function Attrs: noredzone noreturn nounwind
define dso_local void @moduleRDBLoadError(%struct.RedisModuleIO* nocapture readonly) local_unnamed_addr #9 !dbg !6062 {
  %2 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6070
  %3 = load %struct.RedisModuleType*, %struct.RedisModuleType** %2, align 8, !dbg !6070, !tbaa !6071
  %4 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %3, i64 0, i32 1, !dbg !6073
  %5 = load %struct.RedisModule*, %struct.RedisModule** %4, align 8, !dbg !6073, !tbaa !5936
  %6 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %5, i64 0, i32 1, !dbg !6074
  %7 = load i8*, i8** %6, align 8, !dbg !6074, !tbaa !1158
  %8 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %3, i64 0, i32 11, i64 0, !dbg !6075
  %9 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6076
  %10 = load i64, i64* %9, align 8, !dbg !6076, !tbaa !6077
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.27, i64 0, i64 0), i8* %7, i8* nonnull %8, i64 %10) #11, !dbg !6078
  tail call void @exit(i32 1) #14, !dbg !6079
  unreachable, !dbg !6079
}

; Function Attrs: noredzone noreturn
declare dso_local void @exit(i32) local_unnamed_addr #8

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveUnsigned(%struct.RedisModuleIO* nocapture, i64) #0 !dbg !6080 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6089
  %4 = load i32, i32* %3, align 8, !dbg !6089, !tbaa !6091
  %5 = icmp eq i32 %4, 0, !dbg !6092
  br i1 %5, label %6, label %24, !dbg !6093

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6094
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6094, !tbaa !6095
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 2) #11, !dbg !6096
  %10 = icmp eq i32 %9, -1, !dbg !6098
  br i1 %10, label %23, label %11, !dbg !6100

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6101
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6102
  %14 = load i64, i64* %13, align 8, !dbg !6103, !tbaa !6077
  %15 = add i64 %14, %12, !dbg !6103
  store i64 %15, i64* %13, align 8, !dbg !6103, !tbaa !6077
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6104, !tbaa !6095
  %17 = tail call i32 @rdbSaveLen(%struct._rio* %16, i64 %1) #11, !dbg !6105
  %18 = icmp eq i32 %17, -1, !dbg !6106
  br i1 %18, label %23, label %19, !dbg !6108

; <label>:19:                                     ; preds = %11
  %20 = sext i32 %17 to i64, !dbg !6109
  %21 = load i64, i64* %13, align 8, !dbg !6110, !tbaa !6077
  %22 = add i64 %21, %20, !dbg !6110
  store i64 %22, i64* %13, align 8, !dbg !6110, !tbaa !6077
  br label %24, !dbg !6111

; <label>:23:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6112, !tbaa !6091
  br label %24, !dbg !6113

; <label>:24:                                     ; preds = %19, %23, %2
  ret void, !dbg !6113
}

; Function Attrs: noredzone
declare dso_local i32 @rdbSaveLen(%struct._rio*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_LoadUnsigned(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6114 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6125
  %4 = load i32, i32* %3, align 4, !dbg !6125, !tbaa !6126
  %5 = icmp eq i32 %4, 2, !dbg !6127
  %6 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6128
  br i1 %5, label %7, label %11, !dbg !6129

; <label>:7:                                      ; preds = %1
  %8 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6130, !tbaa !6095
  %9 = tail call i64 @rdbLoadLen(%struct._rio* %8, i32* null) #11, !dbg !6131
  %10 = icmp eq i64 %9, 2, !dbg !6133
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %1, %7
  %12 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6135, !tbaa !6095
  %13 = call i32 @rdbLoadLenByRef(%struct._rio* %12, i32* null, i64* nonnull %2) #11, !dbg !6137
  %14 = icmp eq i32 %13, -1, !dbg !6139
  br i1 %14, label %15, label %16, !dbg !6141

; <label>:15:                                     ; preds = %11, %7
  call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #12, !dbg !6142
  unreachable

; <label>:16:                                     ; preds = %11
  %17 = load i64, i64* %2, align 8, !dbg !6143, !tbaa !2327
  ret i64 %17, !dbg !6144
}

; Function Attrs: noredzone
declare dso_local i64 @rdbLoadLen(%struct._rio*, i32*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @rdbLoadLenByRef(%struct._rio*, i32*, i64*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveSigned(%struct.RedisModuleIO* nocapture, i64) #0 !dbg !6145 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6162
  %4 = load i32, i32* %3, align 8, !dbg !6162, !tbaa !6091
  %5 = icmp eq i32 %4, 0, !dbg !6163
  br i1 %5, label %6, label %24, !dbg !6164

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6165
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6165, !tbaa !6095
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 2) #11, !dbg !6166
  %10 = icmp eq i32 %9, -1, !dbg !6168
  br i1 %10, label %23, label %11, !dbg !6169

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6170
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6171
  %14 = load i64, i64* %13, align 8, !dbg !6172, !tbaa !6077
  %15 = add i64 %14, %12, !dbg !6172
  store i64 %15, i64* %13, align 8, !dbg !6172, !tbaa !6077
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6173, !tbaa !6095
  %17 = tail call i32 @rdbSaveLen(%struct._rio* %16, i64 %1) #11, !dbg !6174
  %18 = icmp eq i32 %17, -1, !dbg !6175
  br i1 %18, label %23, label %19, !dbg !6176

; <label>:19:                                     ; preds = %11
  %20 = sext i32 %17 to i64, !dbg !6177
  %21 = load i64, i64* %13, align 8, !dbg !6178, !tbaa !6077
  %22 = add i64 %21, %20, !dbg !6178
  store i64 %22, i64* %13, align 8, !dbg !6178, !tbaa !6077
  br label %24, !dbg !6179

; <label>:23:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6180, !tbaa !6091
  br label %24, !dbg !6181

; <label>:24:                                     ; preds = %2, %19, %23
  ret void, !dbg !6182
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_LoadSigned(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6183 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*, !dbg !6194
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3), !dbg !6194
  %4 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6196
  %5 = load i32, i32* %4, align 4, !dbg !6196, !tbaa !6126
  %6 = icmp eq i32 %5, 2, !dbg !6197
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6198
  br i1 %6, label %8, label %12, !dbg !6199

; <label>:8:                                      ; preds = %1
  %9 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6200, !tbaa !6095
  %10 = tail call i64 @rdbLoadLen(%struct._rio* %9, i32* null) #11, !dbg !6201
  %11 = icmp eq i64 %10, 2, !dbg !6203
  br i1 %11, label %12, label %16

; <label>:12:                                     ; preds = %8, %1
  %13 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6204, !tbaa !6095
  %14 = call i32 @rdbLoadLenByRef(%struct._rio* %13, i32* null, i64* nonnull %2) #11, !dbg !6206
  %15 = icmp eq i32 %14, -1, !dbg !6208
  br i1 %15, label %16, label %17, !dbg !6209

; <label>:16:                                     ; preds = %12, %8
  call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #11, !dbg !6210
  unreachable

; <label>:17:                                     ; preds = %12
  %18 = load i64, i64* %2, align 8, !dbg !6211, !tbaa !2327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3), !dbg !6212
  ret i64 %18, !dbg !6214
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveString(%struct.RedisModuleIO* nocapture, %struct.redisObject*) #0 !dbg !6215 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6225
  %4 = load i32, i32* %3, align 8, !dbg !6225, !tbaa !6091
  %5 = icmp eq i32 %4, 0, !dbg !6227
  br i1 %5, label %6, label %23, !dbg !6228

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6229
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6229, !tbaa !6095
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 5) #11, !dbg !6230
  %10 = icmp eq i32 %9, -1, !dbg !6231
  br i1 %10, label %22, label %11, !dbg !6233

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6230
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6235
  %14 = load i64, i64* %13, align 8, !dbg !6236, !tbaa !6077
  %15 = add i64 %14, %12, !dbg !6236
  store i64 %15, i64* %13, align 8, !dbg !6236, !tbaa !6077
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6237, !tbaa !6095
  %17 = tail call i64 @rdbSaveStringObject(%struct._rio* %16, %struct.redisObject* %1) #11, !dbg !6238
  %18 = icmp eq i64 %17, -1, !dbg !6239
  br i1 %18, label %22, label %19, !dbg !6241

; <label>:19:                                     ; preds = %11
  %20 = load i64, i64* %13, align 8, !dbg !6242, !tbaa !6077
  %21 = add i64 %20, %17, !dbg !6242
  store i64 %21, i64* %13, align 8, !dbg !6242, !tbaa !6077
  br label %23, !dbg !6243

; <label>:22:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6244, !tbaa !6091
  br label %23, !dbg !6245

; <label>:23:                                     ; preds = %19, %22, %2
  ret void, !dbg !6245
}

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveStringObject(%struct._rio*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveStringBuffer(%struct.RedisModuleIO* nocapture, i8*, i64) #0 !dbg !6246 {
  %4 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6257
  %5 = load i32, i32* %4, align 8, !dbg !6257, !tbaa !6091
  %6 = icmp eq i32 %5, 0, !dbg !6259
  br i1 %6, label %7, label %24, !dbg !6260

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6261
  %9 = load %struct._rio*, %struct._rio** %8, align 8, !dbg !6261, !tbaa !6095
  %10 = tail call i32 @rdbSaveLen(%struct._rio* %9, i64 5) #11, !dbg !6262
  %11 = icmp eq i32 %10, -1, !dbg !6263
  br i1 %11, label %23, label %12, !dbg !6265

; <label>:12:                                     ; preds = %7
  %13 = sext i32 %10 to i64, !dbg !6262
  %14 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6267
  %15 = load i64, i64* %14, align 8, !dbg !6268, !tbaa !6077
  %16 = add i64 %15, %13, !dbg !6268
  store i64 %16, i64* %14, align 8, !dbg !6268, !tbaa !6077
  %17 = load %struct._rio*, %struct._rio** %8, align 8, !dbg !6269, !tbaa !6095
  %18 = tail call i64 @rdbSaveRawString(%struct._rio* %17, i8* %1, i64 %2) #11, !dbg !6270
  %19 = icmp eq i64 %18, -1, !dbg !6271
  br i1 %19, label %23, label %20, !dbg !6273

; <label>:20:                                     ; preds = %12
  %21 = load i64, i64* %14, align 8, !dbg !6274, !tbaa !6077
  %22 = add i64 %21, %18, !dbg !6274
  store i64 %22, i64* %14, align 8, !dbg !6274, !tbaa !6077
  br label %24, !dbg !6275

; <label>:23:                                     ; preds = %12, %7
  store i32 1, i32* %4, align 8, !dbg !6276, !tbaa !6091
  br label %24, !dbg !6277

; <label>:24:                                     ; preds = %20, %23, %3
  ret void, !dbg !6277
}

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveRawString(%struct._rio*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @moduleLoadString(%struct.RedisModuleIO* nocapture readonly, i32, i64*) local_unnamed_addr #0 !dbg !6278 {
  %4 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6292
  %5 = load i32, i32* %4, align 4, !dbg !6292, !tbaa !6126
  %6 = icmp eq i32 %5, 2, !dbg !6293
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6294
  br i1 %6, label %8, label %12, !dbg !6295

; <label>:8:                                      ; preds = %3
  %9 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6296, !tbaa !6095
  %10 = tail call i64 @rdbLoadLen(%struct._rio* %9, i32* null) #11, !dbg !6297
  %11 = icmp eq i64 %10, 5, !dbg !6299
  br i1 %11, label %12, label %18

; <label>:12:                                     ; preds = %3, %8
  %13 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6301, !tbaa !6095
  %14 = icmp eq i32 %1, 0, !dbg !6302
  %15 = select i1 %14, i32 0, i32 2, !dbg !6302
  %16 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %13, i32 %15, i64* %2) #11, !dbg !6303
  %17 = icmp eq i8* %16, null, !dbg !6305
  br i1 %17, label %18, label %19, !dbg !6307

; <label>:18:                                     ; preds = %12, %8
  tail call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #12, !dbg !6308
  unreachable

; <label>:19:                                     ; preds = %12
  ret i8* %16, !dbg !6309
}

; Function Attrs: noredzone
declare dso_local i8* @rdbGenericLoadStringObject(%struct._rio*, i32, i64*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_LoadString(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6310 {
  %2 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6320
  %3 = load i32, i32* %2, align 4, !dbg !6320, !tbaa !6126
  %4 = icmp eq i32 %3, 2, !dbg !6321
  %5 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6322
  br i1 %4, label %6, label %10, !dbg !6323

; <label>:6:                                      ; preds = %1
  %7 = load %struct._rio*, %struct._rio** %5, align 8, !dbg !6324, !tbaa !6095
  %8 = tail call i64 @rdbLoadLen(%struct._rio* %7, i32* null) #11, !dbg !6325
  %9 = icmp eq i64 %8, 5, !dbg !6327
  br i1 %9, label %10, label %14

; <label>:10:                                     ; preds = %6, %1
  %11 = load %struct._rio*, %struct._rio** %5, align 8, !dbg !6328, !tbaa !6095
  %12 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %11, i32 0, i64* null) #11, !dbg !6329
  %13 = icmp eq i8* %12, null, !dbg !6331
  br i1 %13, label %14, label %15, !dbg !6332

; <label>:14:                                     ; preds = %10, %6
  tail call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #11, !dbg !6333
  unreachable

; <label>:15:                                     ; preds = %10
  %16 = bitcast i8* %12 to %struct.redisObject*, !dbg !6334
  ret %struct.redisObject* %16, !dbg !6335
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_LoadStringBuffer(%struct.RedisModuleIO* nocapture readonly, i64*) #0 !dbg !6336 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6348
  %4 = load i32, i32* %3, align 4, !dbg !6348, !tbaa !6126
  %5 = icmp eq i32 %4, 2, !dbg !6349
  %6 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6350
  br i1 %5, label %7, label %11, !dbg !6351

; <label>:7:                                      ; preds = %2
  %8 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6352, !tbaa !6095
  %9 = tail call i64 @rdbLoadLen(%struct._rio* %8, i32* null) #11, !dbg !6353
  %10 = icmp eq i64 %9, 5, !dbg !6355
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %7, %2
  %12 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6356, !tbaa !6095
  %13 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %12, i32 2, i64* %1) #11, !dbg !6357
  %14 = icmp eq i8* %13, null, !dbg !6359
  br i1 %14, label %15, label %16, !dbg !6360

; <label>:15:                                     ; preds = %11, %7
  tail call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #11, !dbg !6361
  unreachable

; <label>:16:                                     ; preds = %11
  ret i8* %13, !dbg !6362
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveDouble(%struct.RedisModuleIO* nocapture, double) #0 !dbg !6363 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6372
  %4 = load i32, i32* %3, align 8, !dbg !6372, !tbaa !6091
  %5 = icmp eq i32 %4, 0, !dbg !6374
  br i1 %5, label %6, label %24, !dbg !6375

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6376
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6376, !tbaa !6095
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 4) #11, !dbg !6377
  %10 = icmp eq i32 %9, -1, !dbg !6379
  br i1 %10, label %23, label %11, !dbg !6381

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6382
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6383
  %14 = load i64, i64* %13, align 8, !dbg !6384, !tbaa !6077
  %15 = add i64 %14, %12, !dbg !6384
  store i64 %15, i64* %13, align 8, !dbg !6384, !tbaa !6077
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6385, !tbaa !6095
  %17 = tail call i32 @rdbSaveBinaryDoubleValue(%struct._rio* %16, double %1) #11, !dbg !6386
  %18 = icmp eq i32 %17, -1, !dbg !6387
  br i1 %18, label %23, label %19, !dbg !6389

; <label>:19:                                     ; preds = %11
  %20 = sext i32 %17 to i64, !dbg !6390
  %21 = load i64, i64* %13, align 8, !dbg !6391, !tbaa !6077
  %22 = add i64 %21, %20, !dbg !6391
  store i64 %22, i64* %13, align 8, !dbg !6391, !tbaa !6077
  br label %24, !dbg !6392

; <label>:23:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6393, !tbaa !6091
  br label %24, !dbg !6394

; <label>:24:                                     ; preds = %19, %23, %2
  ret void, !dbg !6394
}

; Function Attrs: noredzone
declare dso_local i32 @rdbSaveBinaryDoubleValue(%struct._rio*, double) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local double @RM_LoadDouble(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6395 {
  %2 = alloca double, align 8
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6406
  %4 = load i32, i32* %3, align 4, !dbg !6406, !tbaa !6126
  %5 = icmp eq i32 %4, 2, !dbg !6407
  %6 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6408
  br i1 %5, label %7, label %11, !dbg !6409

; <label>:7:                                      ; preds = %1
  %8 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6410, !tbaa !6095
  %9 = tail call i64 @rdbLoadLen(%struct._rio* %8, i32* null) #11, !dbg !6411
  %10 = icmp eq i64 %9, 4, !dbg !6413
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %1, %7
  %12 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6415, !tbaa !6095
  %13 = call i32 @rdbLoadBinaryDoubleValue(%struct._rio* %12, double* nonnull %2) #11, !dbg !6417
  %14 = icmp eq i32 %13, -1, !dbg !6419
  br i1 %14, label %15, label %16, !dbg !6421

; <label>:15:                                     ; preds = %11, %7
  call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #12, !dbg !6422
  unreachable

; <label>:16:                                     ; preds = %11
  %17 = load double, double* %2, align 8, !dbg !6423, !tbaa !4376
  ret double %17, !dbg !6424
}

; Function Attrs: noredzone
declare dso_local i32 @rdbLoadBinaryDoubleValue(%struct._rio*, double*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveFloat(%struct.RedisModuleIO* nocapture, float) #0 !dbg !6425 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6434
  %4 = load i32, i32* %3, align 8, !dbg !6434, !tbaa !6091
  %5 = icmp eq i32 %4, 0, !dbg !6436
  br i1 %5, label %6, label %24, !dbg !6437

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6438
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6438, !tbaa !6095
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 3) #11, !dbg !6439
  %10 = icmp eq i32 %9, -1, !dbg !6441
  br i1 %10, label %23, label %11, !dbg !6443

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6444
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6445
  %14 = load i64, i64* %13, align 8, !dbg !6446, !tbaa !6077
  %15 = add i64 %14, %12, !dbg !6446
  store i64 %15, i64* %13, align 8, !dbg !6446, !tbaa !6077
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6447, !tbaa !6095
  %17 = tail call i32 @rdbSaveBinaryFloatValue(%struct._rio* %16, float %1) #11, !dbg !6448
  %18 = icmp eq i32 %17, -1, !dbg !6449
  br i1 %18, label %23, label %19, !dbg !6451

; <label>:19:                                     ; preds = %11
  %20 = sext i32 %17 to i64, !dbg !6452
  %21 = load i64, i64* %13, align 8, !dbg !6453, !tbaa !6077
  %22 = add i64 %21, %20, !dbg !6453
  store i64 %22, i64* %13, align 8, !dbg !6453, !tbaa !6077
  br label %24, !dbg !6454

; <label>:23:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6455, !tbaa !6091
  br label %24, !dbg !6456

; <label>:24:                                     ; preds = %19, %23, %2
  ret void, !dbg !6456
}

; Function Attrs: noredzone
declare dso_local i32 @rdbSaveBinaryFloatValue(%struct._rio*, float) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local float @RM_LoadFloat(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6457 {
  %2 = alloca float, align 4
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6468
  %4 = load i32, i32* %3, align 4, !dbg !6468, !tbaa !6126
  %5 = icmp eq i32 %4, 2, !dbg !6469
  %6 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6470
  br i1 %5, label %7, label %11, !dbg !6471

; <label>:7:                                      ; preds = %1
  %8 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6472, !tbaa !6095
  %9 = tail call i64 @rdbLoadLen(%struct._rio* %8, i32* null) #11, !dbg !6473
  %10 = icmp eq i64 %9, 3, !dbg !6475
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %1, %7
  %12 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6477, !tbaa !6095
  %13 = call i32 @rdbLoadBinaryFloatValue(%struct._rio* %12, float* nonnull %2) #11, !dbg !6479
  %14 = icmp eq i32 %13, -1, !dbg !6481
  br i1 %14, label %15, label %16, !dbg !6483

; <label>:15:                                     ; preds = %11, %7
  call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #12, !dbg !6484
  unreachable

; <label>:16:                                     ; preds = %11
  %17 = load float, float* %2, align 4, !dbg !6485, !tbaa !3267
  ret float %17, !dbg !6486
}

; Function Attrs: noredzone
declare dso_local i32 @rdbLoadBinaryFloatValue(%struct._rio*, float*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveModulesAux(%struct._rio*, i32) local_unnamed_addr #0 !dbg !6487 {
  %3 = alloca %struct.listIter, align 8
  %4 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !6506, !tbaa !902
  %5 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %4) #11, !dbg !6507
  %6 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %5) #11, !dbg !6509
  %7 = icmp eq %struct.dictEntry* %6, null, !dbg !6511
  br i1 %7, label %48, label %8, !dbg !6512

; <label>:8:                                      ; preds = %2
  %9 = bitcast %struct.listIter* %3 to i8*
  br label %10, !dbg !6512

; <label>:10:                                     ; preds = %8, %44
  %11 = phi %struct.dictEntry* [ %6, %8 ], [ %46, %44 ]
  %12 = phi i64 [ 0, %8 ], [ %45, %44 ]
  %13 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %11, i64 0, i32 1, i32 0, !dbg !6513
  %14 = bitcast i8** %13 to %struct.RedisModule**, !dbg !6513
  %15 = load %struct.RedisModule*, %struct.RedisModule** %14, align 8, !dbg !6513, !tbaa !1123
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6, !dbg !6515
  %16 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %15, i64 0, i32 4, !dbg !6516
  %17 = load %struct.list*, %struct.list** %16, align 8, !dbg !6516, !tbaa !1657
  call void @listRewind(%struct.list* %17, %struct.listIter* nonnull %3) #11, !dbg !6518
  %18 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #11, !dbg !6519
  %19 = icmp eq %struct.listNode* %18, null, !dbg !6521
  br i1 %19, label %44, label %20, !dbg !6521

; <label>:20:                                     ; preds = %10, %40
  %21 = phi %struct.listNode* [ %42, %40 ], [ %18, %10 ]
  %22 = phi i64 [ %41, %40 ], [ %12, %10 ]
  %23 = getelementptr inbounds %struct.listNode, %struct.listNode* %21, i64 0, i32 2, !dbg !6522
  %24 = bitcast i8** %23 to %struct.RedisModuleType**, !dbg !6522
  %25 = load %struct.RedisModuleType*, %struct.RedisModuleType** %24, align 8, !dbg !6522, !tbaa !5585
  %26 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %25, i64 0, i32 9, !dbg !6524
  %27 = load void (%struct.RedisModuleIO*, i32)*, void (%struct.RedisModuleIO*, i32)** %26, align 8, !dbg !6524, !tbaa !6526
  %28 = icmp eq void (%struct.RedisModuleIO*, i32)* %27, null, !dbg !6527
  br i1 %28, label %40, label %29, !dbg !6528, !llvm.loop !6529

; <label>:29:                                     ; preds = %20
  %30 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %25, i64 0, i32 10, !dbg !6531
  %31 = load i32, i32* %30, align 8, !dbg !6531, !tbaa !5963
  %32 = and i32 %31, %1, !dbg !6532
  %33 = icmp eq i32 %32, 0, !dbg !6532
  br i1 %33, label %40, label %34, !dbg !6533, !llvm.loop !6529

; <label>:34:                                     ; preds = %29
  %35 = call i64 @rdbSaveSingleModuleAux(%struct._rio* %0, i32 %1, %struct.RedisModuleType* nonnull %25) #11, !dbg !6534
  %36 = icmp eq i64 %35, -1, !dbg !6536
  br i1 %36, label %37, label %38, !dbg !6538

; <label>:37:                                     ; preds = %34
  call void @dictReleaseIterator(%struct.dictIterator* %5) #11, !dbg !6539
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6, !dbg !6541
  br label %50

; <label>:38:                                     ; preds = %34
  %39 = add i64 %35, %22, !dbg !6542
  br label %40, !dbg !6530

; <label>:40:                                     ; preds = %38, %20, %29
  %41 = phi i64 [ %22, %29 ], [ %22, %20 ], [ %39, %38 ], !dbg !6505
  %42 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #11, !dbg !6519
  %43 = icmp eq %struct.listNode* %42, null, !dbg !6521
  br i1 %43, label %44, label %20, !dbg !6521

; <label>:44:                                     ; preds = %40, %10
  %45 = phi i64 [ %12, %10 ], [ %41, %40 ], !dbg !6505
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6, !dbg !6541
  %46 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %5) #11, !dbg !6509
  %47 = icmp eq %struct.dictEntry* %46, null, !dbg !6511
  br i1 %47, label %48, label %10, !dbg !6512

; <label>:48:                                     ; preds = %44, %2
  %49 = phi i64 [ 0, %2 ], [ %45, %44 ], !dbg !6505
  call void @dictReleaseIterator(%struct.dictIterator* %5) #11, !dbg !6543
  br label %50, !dbg !6544

; <label>:50:                                     ; preds = %37, %48
  %51 = phi i64 [ %49, %48 ], [ -1, %37 ], !dbg !6545
  ret i64 %51, !dbg !6546
}

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveSingleModuleAux(%struct._rio*, i32, %struct.RedisModuleType*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_DigestAddStringBuffer(%struct.RedisModuleDigest*, i8*, i64) #0 !dbg !6547 {
  %4 = getelementptr inbounds %struct.RedisModuleDigest, %struct.RedisModuleDigest* %0, i64 0, i32 0, i64 0, !dbg !6559
  tail call void @mixDigest(i8* %4, i8* %1, i64 %2) #11, !dbg !6560
  ret void, !dbg !6561
}

; Function Attrs: noredzone
declare dso_local void @mixDigest(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_DigestAddLongLong(%struct.RedisModuleDigest*, i64) #0 !dbg !6562 {
  %3 = alloca [21 x i8], align 16
  %4 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 0, !dbg !6572
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %4) #6, !dbg !6572
  %5 = call i32 @ll2string(i8* nonnull %4, i64 21, i64 %1) #11, !dbg !6574
  %6 = sext i32 %5 to i64, !dbg !6574
  %7 = getelementptr inbounds %struct.RedisModuleDigest, %struct.RedisModuleDigest* %0, i64 0, i32 0, i64 0, !dbg !6576
  call void @mixDigest(i8* %7, i8* nonnull %4, i64 %6) #11, !dbg !6577
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %4) #6, !dbg !6578
  ret void, !dbg !6578
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_DigestEndSequence(%struct.RedisModuleDigest*) #0 !dbg !6579 {
  %2 = getelementptr inbounds %struct.RedisModuleDigest, %struct.RedisModuleDigest* %0, i64 0, i32 1, i64 0, !dbg !6585
  %3 = getelementptr inbounds %struct.RedisModuleDigest, %struct.RedisModuleDigest* %0, i64 0, i32 0, i64 0, !dbg !6586
  tail call void @xorDigest(i8* nonnull %2, i8* %3, i64 20) #11, !dbg !6587
  %4 = tail call i8* @memset(i8* %3, i32 0, i64 20) #11, !dbg !6588
  ret void, !dbg !6589
}

; Function Attrs: noredzone
declare dso_local void @xorDigest(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_EmitAOF(%struct.RedisModuleIO* nocapture, i8*, i8*, ...) #0 !dbg !6590 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6606
  %8 = load i32, i32* %7, align 8, !dbg !6606, !tbaa !6091
  %9 = icmp eq i32 %8, 0, !dbg !6608
  br i1 %9, label %10, label %70, !dbg !6609

; <label>:10:                                     ; preds = %3
  %11 = bitcast i32* %4 to i8*, !dbg !6611
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #6, !dbg !6611
  store i32 0, i32* %4, align 4, !dbg !6612, !tbaa !933
  %12 = bitcast i32* %5 to i8*, !dbg !6611
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6, !dbg !6611
  store i32 0, i32* %5, align 4, !dbg !6613, !tbaa !933
  %13 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*, !dbg !6614
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #6, !dbg !6614
  %14 = tail call %struct.redisCommand* @lookupCommandByCString(i8* %1) #11, !dbg !6616
  %15 = icmp eq %struct.redisCommand* %14, null, !dbg !6618
  br i1 %15, label %16, label %21, !dbg !6620

; <label>:16:                                     ; preds = %10
  %17 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6621
  %18 = load %struct.RedisModuleType*, %struct.RedisModuleType** %17, align 8, !dbg !6621, !tbaa !6071
  %19 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %18, i64 0, i32 11, i64 0, !dbg !6623
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.28, i64 0, i64 0), i8* nonnull %19, i8* %1) #11, !dbg !6624
  store i32 1, i32* %7, align 8, !dbg !6625, !tbaa !6091
  %20 = tail call i32* @__errno() #11, !dbg !6626
  store i32 22, i32* %20, align 4, !dbg !6627, !tbaa !933
  br label %69, !dbg !6628

; <label>:21:                                     ; preds = %10
  %22 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !6629
  call void @llvm.va_start(i8* nonnull %13), !dbg !6629
  %23 = call %struct.redisObject** @moduleCreateArgvFromUserFormat(i8* %1, i8* %2, i32* nonnull %4, i32* nonnull %5, %struct.__va_list_tag* nonnull %22) #12, !dbg !6630
  call void @llvm.va_end(i8* nonnull %13), !dbg !6631
  %24 = icmp eq %struct.redisObject** %23, null, !dbg !6632
  br i1 %24, label %25, label %30, !dbg !6634

; <label>:25:                                     ; preds = %21
  %26 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6635
  %27 = load %struct.RedisModuleType*, %struct.RedisModuleType** %26, align 8, !dbg !6635, !tbaa !6071
  %28 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %27, i64 0, i32 11, i64 0, !dbg !6637
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.29, i64 0, i64 0), i8* nonnull %28, i8* %2) #11, !dbg !6638
  store i32 1, i32* %7, align 8, !dbg !6639, !tbaa !6091
  %29 = call i32* @__errno() #11, !dbg !6640
  store i32 22, i32* %29, align 4, !dbg !6641, !tbaa !933
  br label %69, !dbg !6642

; <label>:30:                                     ; preds = %21
  %31 = load i32, i32* %7, align 8, !dbg !6643, !tbaa !6091
  %32 = icmp eq i32 %31, 0, !dbg !6645
  br i1 %32, label %35, label %33, !dbg !6646

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* %4, align 4, !dbg !6647, !tbaa !933
  br label %43, !dbg !6646

; <label>:35:                                     ; preds = %30
  %36 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6650
  %37 = load %struct._rio*, %struct._rio** %36, align 8, !dbg !6650, !tbaa !6095
  %38 = load i32, i32* %4, align 4, !dbg !6651, !tbaa !933
  %39 = sext i32 %38 to i64, !dbg !6651
  %40 = call i64 @rioWriteBulkCount(%struct._rio* %37, i8 signext 42, i64 %39) #11, !dbg !6652
  %41 = icmp eq i64 %40, 0, !dbg !6653
  br i1 %41, label %42, label %43, !dbg !6654

; <label>:42:                                     ; preds = %35
  store i32 1, i32* %7, align 8, !dbg !6655, !tbaa !6091
  br label %43, !dbg !6656

; <label>:43:                                     ; preds = %33, %42, %35
  %44 = phi i32 [ %34, %33 ], [ %38, %42 ], [ %38, %35 ], !dbg !6647
  %45 = icmp sgt i32 %44, 0, !dbg !6658
  br i1 %45, label %46, label %67, !dbg !6659

; <label>:46:                                     ; preds = %43
  %47 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1
  %48 = sext i32 %44 to i64, !dbg !6659
  br label %49, !dbg !6659

; <label>:49:                                     ; preds = %46, %62
  %50 = phi i64 [ 0, %46 ], [ %65, %62 ]
  %51 = load i32, i32* %7, align 8, !dbg !6660, !tbaa !6091
  %52 = icmp eq i32 %51, 0, !dbg !6663
  br i1 %52, label %55, label %53, !dbg !6664

; <label>:53:                                     ; preds = %49
  %54 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %23, i64 %50, !dbg !6665
  br label %62, !dbg !6664

; <label>:55:                                     ; preds = %49
  %56 = load %struct._rio*, %struct._rio** %47, align 8, !dbg !6666, !tbaa !6095
  %57 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %23, i64 %50, !dbg !6667
  %58 = load %struct.redisObject*, %struct.redisObject** %57, align 8, !dbg !6667, !tbaa !902
  %59 = call i32 @rioWriteBulkObject(%struct._rio* %56, %struct.redisObject* %58) #11, !dbg !6668
  %60 = icmp eq i32 %59, 0, !dbg !6669
  br i1 %60, label %61, label %62, !dbg !6670

; <label>:61:                                     ; preds = %55
  store i32 1, i32* %7, align 8, !dbg !6671, !tbaa !6091
  br label %62, !dbg !6672

; <label>:62:                                     ; preds = %53, %61, %55
  %63 = phi %struct.redisObject** [ %54, %53 ], [ %57, %61 ], [ %57, %55 ], !dbg !6665
  %64 = load %struct.redisObject*, %struct.redisObject** %63, align 8, !dbg !6665, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %64) #11, !dbg !6673
  %65 = add nuw nsw i64 %50, 1, !dbg !6674
  %66 = icmp slt i64 %65, %48, !dbg !6658
  br i1 %66, label %49, label %67, !dbg !6659, !llvm.loop !6675

; <label>:67:                                     ; preds = %62, %43
  %68 = bitcast %struct.redisObject** %23 to i8*, !dbg !6677
  call void @zfree(i8* %68) #11, !dbg !6678
  br label %69, !dbg !6679

; <label>:69:                                     ; preds = %67, %25, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #6, !dbg !6680
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6, !dbg !6680
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #6, !dbg !6680
  br label %70

; <label>:70:                                     ; preds = %3, %69
  ret void, !dbg !6680
}

; Function Attrs: noredzone
declare dso_local i64 @rioWriteBulkCount(%struct._rio*, i8 signext, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @rioWriteBulkObject(%struct._rio*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCtx* @RM_GetContextFromIO(%struct.RedisModuleIO* nocapture) #0 !dbg !6681 {
  %2 = alloca { %struct.RedisModule*, %struct.client*, %struct.RedisModuleBlockedClient*, %struct.AutoMemEntry*, i32, i32, i32, i8**, i32, i8*, i32*, i32, %struct.RedisModulePoolAllocBlock* }, align 8
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 5, !dbg !6688
  %4 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %3, align 8, !dbg !6688, !tbaa !6690
  %5 = icmp eq %struct.RedisModuleCtx* %4, null, !dbg !6691
  br i1 %5, label %6, label %21, !dbg !6692

; <label>:6:                                      ; preds = %1
  %7 = bitcast { %struct.RedisModule*, %struct.client*, %struct.RedisModuleBlockedClient*, %struct.AutoMemEntry*, i32, i32, i32, i8**, i32, i8*, i32*, i32, %struct.RedisModulePoolAllocBlock* }* %2 to i8*, !dbg !6693
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %7), !dbg !6693
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 96, i1 false), !dbg !6694
  %8 = tail call i8* @zmalloc(i64 104) #11, !dbg !6695
  %9 = bitcast %struct.RedisModuleCtx** %3 to i8**, !dbg !6696
  store i8* %8, i8** %9, align 8, !dbg !6696, !tbaa !6690
  %10 = bitcast i8* %8 to i8**, !dbg !6697
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %10, align 8, !dbg !6697
  %11 = getelementptr inbounds i8, i8* %8, i64 8, !dbg !6697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %7, i64 96, i1 false), !dbg !6697
  %12 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6698
  %13 = load %struct.RedisModuleType*, %struct.RedisModuleType** %12, align 8, !dbg !6698, !tbaa !6071
  %14 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %13, i64 0, i32 1, !dbg !6699
  %15 = bitcast %struct.RedisModule** %14 to i64*, !dbg !6699
  %16 = load i64, i64* %15, align 8, !dbg !6699, !tbaa !5936
  %17 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %3, align 8, !dbg !6700, !tbaa !6690
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %17, i64 0, i32 1, !dbg !6701
  %19 = bitcast %struct.RedisModule** %18 to i64*, !dbg !6702
  store i64 %16, i64* %19, align 8, !dbg !6702, !tbaa !1156
  %20 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %17, i64 0, i32 2, !dbg !6703
  store %struct.client* null, %struct.client** %20, align 8, !dbg !6704, !tbaa !1168
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %7), !dbg !6705
  br label %21

; <label>:21:                                     ; preds = %1, %6
  %22 = phi %struct.RedisModuleCtx* [ %17, %6 ], [ %4, %1 ], !dbg !6706
  ret %struct.RedisModuleCtx* %22, !dbg !6705
}

; Function Attrs: noredzone nounwind readonly
define dso_local %struct.redisObject* @RM_GetKeyNameFromIO(%struct.RedisModuleIO* nocapture readonly) #4 !dbg !6707 {
  %2 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 6, !dbg !6713
  %3 = load %struct.redisObject*, %struct.redisObject** %2, align 8, !dbg !6713, !tbaa !6714
  ret %struct.redisObject* %3, !dbg !6715
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_LogRaw(%struct.RedisModule* readonly, i8* readonly, i8*, %struct.__va_list_tag*) local_unnamed_addr #0 !dbg !6716 {
  %5 = alloca [1024 x i8], align 16
  %6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0, !dbg !6734
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %6) #6, !dbg !6734
  %7 = tail call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !6736
  %8 = icmp eq i32 %7, 0, !dbg !6736
  br i1 %8, label %19, label %9, !dbg !6738

; <label>:9:                                      ; preds = %4
  %10 = tail call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !6739
  %11 = icmp eq i32 %10, 0, !dbg !6739
  br i1 %11, label %19, label %12, !dbg !6741

; <label>:12:                                     ; preds = %9
  %13 = tail call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0)) #13, !dbg !6742
  %14 = icmp eq i32 %13, 0, !dbg !6742
  br i1 %14, label %19, label %15, !dbg !6744

; <label>:15:                                     ; preds = %12
  %16 = tail call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0)) #13, !dbg !6745
  %17 = icmp eq i32 %16, 0, !dbg !6745
  %18 = select i1 %17, i32 3, i32 1, !dbg !6747
  br label %19, !dbg !6747

; <label>:19:                                     ; preds = %15, %12, %9, %4
  %20 = phi i32 [ 0, %4 ], [ 1, %9 ], [ 2, %12 ], [ %18, %15 ], !dbg !6748
  %21 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 100), align 8, !dbg !6750, !tbaa !6752
  %22 = icmp slt i32 %20, %21, !dbg !6753
  br i1 %22, label %35, label %23, !dbg !6754

; <label>:23:                                     ; preds = %19
  %24 = icmp eq %struct.RedisModule* %0, null, !dbg !6755
  br i1 %24, label %28, label %25, !dbg !6755

; <label>:25:                                     ; preds = %23
  %26 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 1, !dbg !6756
  %27 = load i8*, i8** %26, align 8, !dbg !6756, !tbaa !1158
  br label %28, !dbg !6755

; <label>:28:                                     ; preds = %23, %25
  %29 = phi i8* [ %27, %25 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), %23 ], !dbg !6755
  %30 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 1024, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i8* %29) #11, !dbg !6757
  %31 = sext i32 %30 to i64, !dbg !6757
  %32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 %31, !dbg !6759
  %33 = sub nsw i64 1024, %31, !dbg !6760
  %34 = call i32 @vsnprintf(i8* nonnull %32, i64 %33, i8* %2, %struct.__va_list_tag* %3) #11, !dbg !6761
  call void @serverLogRaw(i32 %20, i8* nonnull %6) #11, !dbg !6762
  br label %35, !dbg !6763

; <label>:35:                                     ; preds = %19, %28
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %6) #6, !dbg !6763
  ret void, !dbg !6763
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @serverLogRaw(i32, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_Log(%struct.RedisModuleCtx* readonly, i8* readonly, i8*, ...) #0 !dbg !6764 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*, !dbg !6775
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6, !dbg !6775
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0, !dbg !6777
  call void @llvm.va_start(i8* nonnull %5), !dbg !6777
  %7 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !6778
  br i1 %7, label %11, label %8, !dbg !6778

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !6779
  %10 = load %struct.RedisModule*, %struct.RedisModule** %9, align 8, !dbg !6779, !tbaa !1156
  br label %11, !dbg !6778

; <label>:11:                                     ; preds = %3, %8
  %12 = phi %struct.RedisModule* [ %10, %8 ], [ null, %3 ], !dbg !6778
  call void @RM_LogRaw(%struct.RedisModule* %12, i8* %1, i8* %2, %struct.__va_list_tag* nonnull %6) #12, !dbg !6780
  call void @llvm.va_end(i8* nonnull %5), !dbg !6781
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6, !dbg !6782
  ret void, !dbg !6782
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_LogIOError(%struct.RedisModuleIO* nocapture readonly, i8* readonly, i8*, ...) #0 !dbg !6783 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*, !dbg !6792
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6, !dbg !6792
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0, !dbg !6794
  call void @llvm.va_start(i8* nonnull %5), !dbg !6794
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6795
  %8 = load %struct.RedisModuleType*, %struct.RedisModuleType** %7, align 8, !dbg !6795, !tbaa !6071
  %9 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %8, i64 0, i32 1, !dbg !6796
  %10 = load %struct.RedisModule*, %struct.RedisModule** %9, align 8, !dbg !6796, !tbaa !5936
  call void @RM_LogRaw(%struct.RedisModule* %10, i8* %1, i8* %2, %struct.__va_list_tag* nonnull %6) #12, !dbg !6797
  call void @llvm.va_end(i8* nonnull %5), !dbg !6798
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6, !dbg !6799
  ret void, !dbg !6799
}

; Function Attrs: noredzone nounwind readnone
define dso_local void @moduleBlockedClientPipeReadable(%struct.aeEventLoop* nocapture, i32, i8* nocapture, i32) local_unnamed_addr #7 !dbg !6800 {
  ret void, !dbg !6872
}

; Function Attrs: noredzone nounwind
define dso_local void @unblockClientFromModule(%struct.client*) local_unnamed_addr #0 !dbg !6873 {
  %2 = alloca %struct.RedisModuleCtx, align 8
  %3 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 40, i32 11, !dbg !6883
  %4 = bitcast i8** %3 to %struct.RedisModuleBlockedClient**, !dbg !6883
  %5 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %4, align 8, !dbg !6883, !tbaa !6884
  %6 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 4, !dbg !6886
  %7 = load void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %6, align 8, !dbg !6886, !tbaa !6887
  %8 = icmp eq void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* %7, null, !dbg !6889
  br i1 %8, label %25, label %9, !dbg !6890

; <label>:9:                                      ; preds = %1
  %10 = bitcast %struct.RedisModuleCtx* %2 to i8*, !dbg !6891
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %10) #6, !dbg !6891
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 3
  %12 = bitcast %struct.RedisModuleBlockedClient** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 80, i1 false), !dbg !6892
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 0, !dbg !6892
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %13, align 8, !dbg !6892
  %14 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 6, !dbg !6893
  %15 = bitcast i8** %14 to i64*, !dbg !6893
  %16 = load i64, i64* %15, align 8, !dbg !6893, !tbaa !6894
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 10, !dbg !6895
  %18 = bitcast i8** %17 to i64*, !dbg !6896
  store i64 %16, i64* %18, align 8, !dbg !6896, !tbaa !6897
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 1, !dbg !6898
  %20 = bitcast %struct.RedisModuleBlockedClient* %5 to <2 x i64>*, !dbg !6899
  %21 = load <2 x i64>, <2 x i64>* %20, align 8, !dbg !6899, !tbaa !902
  %22 = shufflevector <2 x i64> %21, <2 x i64> undef, <2 x i32> <i32 1, i32 0>, !dbg !6899
  %23 = bitcast %struct.RedisModule** %19 to <2 x i64>*, !dbg !6900
  store <2 x i64> %22, <2 x i64>* %23, align 8, !dbg !6900, !tbaa !902
  %24 = load void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %6, align 8, !dbg !6901, !tbaa !6887
  call void %24(%struct.RedisModuleCtx* nonnull %2, %struct.RedisModuleBlockedClient* %5) #11, !dbg !6902
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %2) #12, !dbg !6903
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %10) #6, !dbg !6904
  br label %25, !dbg !6905

; <label>:25:                                     ; preds = %1, %9
  %26 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 0, !dbg !6906
  store %struct.client* null, %struct.client** %26, align 8, !dbg !6907, !tbaa !6908
  call void @resetClient(%struct.client* nonnull %0) #11, !dbg !6909
  ret void, !dbg !6910
}

; Function Attrs: noredzone
declare dso_local void @resetClient(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleBlockedClient* @RM_BlockClient(%struct.RedisModuleCtx* nocapture readonly, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, void (%struct.RedisModuleCtx*, i8*)*, i64) #0 !dbg !6911 {
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !6929
  %7 = load %struct.client*, %struct.client** %6, align 8, !dbg !6929, !tbaa !1168
  %8 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 21, !dbg !6931
  %9 = load i32, i32* %8, align 8, !dbg !6931, !tbaa !1254
  %10 = and i32 %9, 256, !dbg !6932
  %11 = tail call i8* @zmalloc(i64 72) #11, !dbg !6935
  %12 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 40, i32 11, !dbg !6936
  store i8* %11, i8** %12, align 8, !dbg !6937, !tbaa !6884
  %13 = bitcast i8* %11 to %struct.RedisModuleBlockedClient*, !dbg !6938
  %14 = icmp eq i32 %10, 0, !dbg !6940
  %15 = and i32 %9, 264, !dbg !6941
  %16 = icmp ne i32 %15, 0, !dbg !6941
  %17 = select i1 %16, %struct.client* null, %struct.client* %7, !dbg !6941
  %18 = bitcast i8* %11 to %struct.client**, !dbg !6942
  store %struct.client* %17, %struct.client** %18, align 8, !dbg !6943, !tbaa !6908
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !6944
  %20 = bitcast %struct.RedisModule** %19 to i64*, !dbg !6944
  %21 = load i64, i64* %20, align 8, !dbg !6944, !tbaa !1156
  %22 = getelementptr inbounds i8, i8* %11, i64 8, !dbg !6945
  %23 = bitcast i8* %22 to i64*, !dbg !6946
  store i64 %21, i64* %23, align 8, !dbg !6946, !tbaa !6947
  %24 = getelementptr inbounds i8, i8* %11, i64 16, !dbg !6948
  %25 = bitcast i8* %24 to i32 (%struct.RedisModuleCtx*, i8**, i32)**, !dbg !6948
  store i32 (%struct.RedisModuleCtx*, i8**, i32)* %1, i32 (%struct.RedisModuleCtx*, i8**, i32)** %25, align 8, !dbg !6949, !tbaa !6950
  %26 = getelementptr inbounds i8, i8* %11, i64 24, !dbg !6951
  %27 = bitcast i8* %26 to i32 (%struct.RedisModuleCtx*, i8**, i32)**, !dbg !6951
  store i32 (%struct.RedisModuleCtx*, i8**, i32)* %2, i32 (%struct.RedisModuleCtx*, i8**, i32)** %27, align 8, !dbg !6952, !tbaa !6953
  %28 = getelementptr inbounds i8, i8* %11, i64 32, !dbg !6954
  %29 = bitcast i8* %28 to void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)**, !dbg !6954
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* null, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %29, align 8, !dbg !6955, !tbaa !6887
  %30 = getelementptr inbounds i8, i8* %11, i64 40, !dbg !6956
  %31 = bitcast i8* %30 to void (%struct.RedisModuleCtx*, i8*)**, !dbg !6956
  store void (%struct.RedisModuleCtx*, i8*)* %3, void (%struct.RedisModuleCtx*, i8*)** %31, align 8, !dbg !6957, !tbaa !6958
  %32 = getelementptr inbounds i8, i8* %11, i64 48, !dbg !6959
  %33 = bitcast i8* %32 to i8**, !dbg !6959
  store i8* null, i8** %33, align 8, !dbg !6960, !tbaa !6894
  %34 = tail call %struct.client* @createClient(i32 -1) #11, !dbg !6961
  %35 = getelementptr inbounds i8, i8* %11, i64 56, !dbg !6962
  %36 = bitcast i8* %35 to %struct.client**, !dbg !6962
  store %struct.client* %34, %struct.client** %36, align 8, !dbg !6963, !tbaa !6964
  %37 = getelementptr inbounds %struct.client, %struct.client* %34, i64 0, i32 21, !dbg !6965
  %38 = load i32, i32* %37, align 8, !dbg !6966, !tbaa !1254
  %39 = or i32 %38, 134217728, !dbg !6966
  store i32 %39, i32* %37, align 8, !dbg !6966, !tbaa !1254
  %40 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 2, !dbg !6967
  %41 = load %struct.redisDb*, %struct.redisDb** %40, align 8, !dbg !6967, !tbaa !1271
  %42 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %41, i64 0, i32 5, !dbg !6968
  %43 = load i32, i32* %42, align 8, !dbg !6968, !tbaa !1273
  %44 = getelementptr inbounds i8, i8* %11, i64 64, !dbg !6969
  %45 = bitcast i8* %44 to i32*, !dbg !6969
  store i32 %43, i32* %45, align 8, !dbg !6970, !tbaa !6971
  %46 = icmp eq i64 %4, 0, !dbg !6972
  br i1 %46, label %50, label %47, !dbg !6972

; <label>:47:                                     ; preds = %5
  %48 = tail call i64 @mstime() #11, !dbg !6973
  %49 = add nsw i64 %48, %4, !dbg !6974
  br label %50, !dbg !6972

; <label>:50:                                     ; preds = %5, %47
  %51 = phi i64 [ %49, %47 ], [ 0, %5 ], !dbg !6972
  %52 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 40, i32 0, !dbg !6975
  store i64 %51, i64* %52, align 8, !dbg !6976, !tbaa !6977
  br i1 %16, label %53, label %55, !dbg !6978

; <label>:53:                                     ; preds = %50
  store i8* null, i8** %12, align 8, !dbg !6980, !tbaa !6884
  %54 = select i1 %14, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), !dbg !6982
  tail call void @addReplyError(%struct.client* nonnull %7, i8* %54) #11, !dbg !6983
  br label %56, !dbg !6984

; <label>:55:                                     ; preds = %50
  tail call void @blockClient(%struct.client* nonnull %7, i32 3) #11, !dbg !6985
  br label %56

; <label>:56:                                     ; preds = %55, %53
  ret %struct.RedisModuleBlockedClient* %13, !dbg !6987
}

; Function Attrs: noredzone
declare dso_local void @addReplyError(%struct.client*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @blockClient(%struct.client*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_UnblockClient(%struct.RedisModuleBlockedClient*, i8*) #0 !dbg !6988 {
  %3 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #11, !dbg !6996
  %4 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 6, !dbg !6997
  store i8* %1, i8** %4, align 8, !dbg !6998, !tbaa !6894
  %5 = load %struct.list*, %struct.list** @moduleUnblockedClients, align 8, !dbg !6999, !tbaa !902
  %6 = bitcast %struct.RedisModuleBlockedClient* %0 to i8*, !dbg !7000
  %7 = tail call %struct.list* @listAddNodeTail(%struct.list* %5, i8* %6) #11, !dbg !7001
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 1), align 4, !dbg !7002, !tbaa !933
  %9 = tail call i64 @write(i32 %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i64 1) #11, !dbg !7004
  %10 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #11, !dbg !7005
  ret i32 0, !dbg !7006
}

; Function Attrs: noredzone
declare dso_local i32 @pthread_mutex_lock(%struct.pthread_mutex_t_**) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @write(i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_**) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_AbortBlock(%struct.RedisModuleBlockedClient*) #0 !dbg !7007 {
  %2 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 2, !dbg !7013
  store i32 (%struct.RedisModuleCtx*, i8**, i32)* null, i32 (%struct.RedisModuleCtx*, i8**, i32)** %2, align 8, !dbg !7014, !tbaa !6950
  %3 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 4, !dbg !7015
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* null, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %3, align 8, !dbg !7016, !tbaa !6887
  %4 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #11, !dbg !7020
  %5 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 6, !dbg !7021
  store i8* null, i8** %5, align 8, !dbg !7022, !tbaa !6894
  %6 = load %struct.list*, %struct.list** @moduleUnblockedClients, align 8, !dbg !7023, !tbaa !902
  %7 = bitcast %struct.RedisModuleBlockedClient* %0 to i8*, !dbg !7024
  %8 = tail call %struct.list* @listAddNodeTail(%struct.list* %6, i8* %7) #11, !dbg !7025
  %9 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 1), align 4, !dbg !7026, !tbaa !933
  %10 = tail call i64 @write(i32 %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i64 1) #11, !dbg !7027
  %11 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #11, !dbg !7028
  ret i32 0, !dbg !7029
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_SetDisconnectCallback(%struct.RedisModuleBlockedClient* nocapture, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*) #0 !dbg !7030 {
  %3 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 4, !dbg !7038
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* %1, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %3, align 8, !dbg !7039, !tbaa !6887
  ret void, !dbg !7040
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleHandleBlockedClients() local_unnamed_addr #0 !dbg !7041 {
  %1 = alloca [1 x %struct.redisObject*], align 8
  %2 = alloca [1 x i8], align 1
  %3 = alloca %struct.RedisModuleCtx, align 8
  %4 = alloca %struct.RedisModuleCtx, align 8
  %5 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #11, !dbg !7057
  %6 = getelementptr inbounds [1 x i8], [1 x i8]* %2, i64 0, i64 0, !dbg !7058
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #6, !dbg !7058
  br label %7, !dbg !7060

; <label>:7:                                      ; preds = %7, %0
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 0), align 8, !dbg !7061, !tbaa !933
  %9 = call i64 @read(i32 %8, i8* nonnull %6, i64 1) #11, !dbg !7062
  %10 = icmp eq i64 %9, 1, !dbg !7063
  br i1 %10, label %7, label %11, !dbg !7060, !llvm.loop !7064

; <label>:11:                                     ; preds = %7
  %12 = load %struct.list*, %struct.list** @moduleUnblockedClients, align 8, !dbg !7066, !tbaa !902
  %13 = getelementptr inbounds %struct.list, %struct.list* %12, i64 0, i32 5, !dbg !7066
  %14 = load i64, i64* %13, align 8, !dbg !7066, !tbaa !5580
  %15 = icmp eq i64 %14, 0, !dbg !7067
  br i1 %15, label %135, label %16, !dbg !7067

; <label>:16:                                     ; preds = %11
  %17 = bitcast %struct.RedisModuleCtx* %3 to i8*
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 0
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 7
  %20 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 10
  %21 = bitcast i8** %20 to i64*
  %22 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 1
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 2
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 3
  %25 = bitcast %struct.RedisModuleBlockedClient** %24 to i8**
  %26 = bitcast %struct.RedisModuleCtx* %4 to i8*
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 0
  %28 = bitcast [1 x %struct.redisObject*]* %1 to i8*
  %29 = getelementptr inbounds [1 x %struct.redisObject*], [1 x %struct.redisObject*]* %1, i64 0, i64 0
  %30 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 7
  %31 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 10
  %32 = bitcast i8** %31 to i64*
  %33 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 1
  %34 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 4
  %35 = bitcast %struct.AutoMemEntry** %34 to i8*
  %36 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 1
  %37 = bitcast %struct.RedisModule** %36 to i8*
  %38 = bitcast %struct.RedisModule** %22 to <2 x i64>*
  %39 = bitcast %struct.RedisModule** %33 to <2 x i64>*
  br label %40, !dbg !7067

; <label>:40:                                     ; preds = %16, %129
  %41 = phi %struct.list* [ %12, %16 ], [ %131, %129 ]
  %42 = getelementptr inbounds %struct.list, %struct.list* %41, i64 0, i32 0, !dbg !7068
  %43 = load %struct.listNode*, %struct.listNode** %42, align 8, !dbg !7068, !tbaa !5584
  %44 = getelementptr inbounds %struct.listNode, %struct.listNode* %43, i64 0, i32 2, !dbg !7070
  %45 = load i8*, i8** %44, align 8, !dbg !7070, !tbaa !5585
  %46 = bitcast i8* %45 to %struct.client**, !dbg !7072
  %47 = load %struct.client*, %struct.client** %46, align 8, !dbg !7072, !tbaa !6908
  call void @listDelNode(%struct.list* %41, %struct.listNode* %43) #11, !dbg !7074
  %48 = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #11, !dbg !7075
  %49 = icmp ne %struct.client* %47, null, !dbg !7076
  br i1 %49, label %50, label %87, !dbg !7077

; <label>:50:                                     ; preds = %40
  %51 = getelementptr inbounds i8, i8* %45, i64 16, !dbg !7078
  %52 = bitcast i8* %51 to i32 (%struct.RedisModuleCtx*, i8**, i32)**, !dbg !7078
  %53 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %52, align 8, !dbg !7078, !tbaa !6950
  %54 = icmp eq i32 (%struct.RedisModuleCtx*, i8**, i32)* %53, null, !dbg !7079
  br i1 %54, label %87, label %55, !dbg !7080

; <label>:55:                                     ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #6, !dbg !7081
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 72, i1 false), !dbg !7082
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %18, align 8, !dbg !7082
  store i32 8, i32* %19, align 8, !dbg !7083, !tbaa !1164
  %56 = getelementptr inbounds i8, i8* %45, i64 48, !dbg !7084
  %57 = bitcast i8* %56 to i64*, !dbg !7084
  %58 = load i64, i64* %57, align 8, !dbg !7084, !tbaa !6894
  store i64 %58, i64* %21, align 8, !dbg !7085, !tbaa !6897
  %59 = bitcast i8* %45 to <2 x i64>*, !dbg !7086
  %60 = load <2 x i64>, <2 x i64>* %59, align 8, !dbg !7086, !tbaa !902
  %61 = shufflevector <2 x i64> %60, <2 x i64> undef, <2 x i32> <i32 1, i32 0>, !dbg !7086
  store <2 x i64> %61, <2 x i64>* %38, align 8, !dbg !7087, !tbaa !902
  store i8* %45, i8** %25, align 8, !dbg !7088, !tbaa !2517
  %62 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %52, align 8, !dbg !7089, !tbaa !6950
  %63 = getelementptr inbounds %struct.client, %struct.client* %47, i64 0, i32 9, !dbg !7090
  %64 = bitcast %struct.redisObject*** %63 to i8***, !dbg !7090
  %65 = load i8**, i8*** %64, align 8, !dbg !7090, !tbaa !1316
  %66 = getelementptr inbounds %struct.client, %struct.client* %47, i64 0, i32 8, !dbg !7091
  %67 = load i32, i32* %66, align 8, !dbg !7091, !tbaa !1318
  %68 = call i32 %62(%struct.RedisModuleCtx* nonnull %3, i8** %65, i32 %67) #11, !dbg !7092
  %69 = load %struct.client*, %struct.client** %23, align 8, !dbg !7094, !tbaa !1168
  %70 = getelementptr inbounds %struct.client, %struct.client* %69, i64 0, i32 21, !dbg !7096
  %71 = load i32, i32* %70, align 8, !dbg !7096, !tbaa !1254
  %72 = and i32 %71, 256, !dbg !7097
  %73 = icmp eq i32 %72, 0, !dbg !7097
  br i1 %73, label %74, label %86, !dbg !7098

; <label>:74:                                     ; preds = %55
  %75 = load i32, i32* %19, align 8, !dbg !7099, !tbaa !1164
  %76 = and i32 %75, 1, !dbg !7100
  %77 = icmp eq i32 %76, 0, !dbg !7100
  br i1 %77, label %86, label %78, !dbg !7101

; <label>:78:                                     ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6, !dbg !7102
  %79 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #11, !dbg !7103
  store %struct.redisObject* %79, %struct.redisObject** %29, align 8, !dbg !7104, !tbaa !902
  %80 = load %struct.redisCommand*, %struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64), align 8, !dbg !7105, !tbaa !1269
  %81 = getelementptr inbounds %struct.client, %struct.client* %69, i64 0, i32 2, !dbg !7106
  %82 = load %struct.redisDb*, %struct.redisDb** %81, align 8, !dbg !7106, !tbaa !1271
  %83 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %82, i64 0, i32 5, !dbg !7107
  %84 = load i32, i32* %83, align 8, !dbg !7107, !tbaa !1273
  call void @alsoPropagate(%struct.redisCommand* %80, i32 %84, %struct.redisObject** nonnull %29, i32 1, i32 3) #11, !dbg !7108
  %85 = load %struct.redisObject*, %struct.redisObject** %29, align 8, !dbg !7109, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %85) #11, !dbg !7110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6, !dbg !7111
  br label %86, !dbg !7112

; <label>:86:                                     ; preds = %55, %74, %78
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %3) #12, !dbg !7113
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #6, !dbg !7114
  br label %87, !dbg !7115

; <label>:87:                                     ; preds = %50, %86, %40
  %88 = getelementptr inbounds i8, i8* %45, i64 48, !dbg !7116
  %89 = bitcast i8* %88 to i8**, !dbg !7116
  %90 = load i8*, i8** %89, align 8, !dbg !7116, !tbaa !6894
  %91 = icmp eq i8* %90, null, !dbg !7117
  br i1 %91, label %108, label %92, !dbg !7118

; <label>:92:                                     ; preds = %87
  %93 = getelementptr inbounds i8, i8* %45, i64 40, !dbg !7119
  %94 = bitcast i8* %93 to void (%struct.RedisModuleCtx*, i8*)**, !dbg !7119
  %95 = load void (%struct.RedisModuleCtx*, i8*)*, void (%struct.RedisModuleCtx*, i8*)** %94, align 8, !dbg !7119, !tbaa !6958
  %96 = icmp eq void (%struct.RedisModuleCtx*, i8*)* %95, null, !dbg !7120
  br i1 %96, label %108, label %97, !dbg !7121

; <label>:97:                                     ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %26) #6, !dbg !7122
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 96, i1 false), !dbg !7123
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %27, align 8, !dbg !7123
  %98 = icmp eq %struct.client* %47, null, !dbg !7124
  br i1 %98, label %99, label %100, !dbg !7126

; <label>:99:                                     ; preds = %97
  store i32 64, i32* %30, align 8, !dbg !7127, !tbaa !1164
  br label %100, !dbg !7128

; <label>:100:                                    ; preds = %99, %97
  %101 = bitcast i8* %88 to i64*, !dbg !7129
  %102 = load i64, i64* %101, align 8, !dbg !7129, !tbaa !6894
  store i64 %102, i64* %32, align 8, !dbg !7130, !tbaa !6897
  %103 = bitcast i8* %45 to <2 x i64>*, !dbg !7131
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !dbg !7131, !tbaa !902
  %105 = shufflevector <2 x i64> %104, <2 x i64> undef, <2 x i32> <i32 1, i32 0>, !dbg !7131
  store <2 x i64> %105, <2 x i64>* %39, align 8, !dbg !7132, !tbaa !902
  %106 = load void (%struct.RedisModuleCtx*, i8*)*, void (%struct.RedisModuleCtx*, i8*)** %94, align 8, !dbg !7133, !tbaa !6958
  %107 = inttoptr i64 %102 to i8*, !dbg !7134
  call void %106(%struct.RedisModuleCtx* nonnull %4, i8* %107) #11, !dbg !7135
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %4) #12, !dbg !7136
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %26) #6, !dbg !7137
  br label %108, !dbg !7138

; <label>:108:                                    ; preds = %92, %87, %100
  %109 = getelementptr inbounds i8, i8* %45, i64 56, !dbg !7139
  %110 = bitcast i8* %109 to %struct.client**, !dbg !7139
  %111 = load %struct.client*, %struct.client** %110, align 8, !dbg !7139, !tbaa !6964
  br i1 %49, label %112, label %128, !dbg !7140

; <label>:112:                                    ; preds = %108
  call void @AddReplyFromClient(%struct.client* nonnull %47, %struct.client* %111) #11, !dbg !7141
  %113 = load %struct.client*, %struct.client** %110, align 8, !dbg !7143, !tbaa !6964
  call void @freeClient(%struct.client* %113) #11, !dbg !7144
  %114 = getelementptr inbounds i8, i8* %45, i64 32, !dbg !7145
  %115 = bitcast i8* %114 to void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)**, !dbg !7145
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* null, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %115, align 8, !dbg !7148, !tbaa !6887
  call void @unblockClient(%struct.client* nonnull %47) #11, !dbg !7149
  %116 = call i32 @clientHasPendingReplies(%struct.client* nonnull %47) #11, !dbg !7150
  %117 = icmp eq i32 %116, 0, !dbg !7150
  br i1 %117, label %129, label %118, !dbg !7152

; <label>:118:                                    ; preds = %112
  %119 = getelementptr inbounds %struct.client, %struct.client* %47, i64 0, i32 21, !dbg !7153
  %120 = load i32, i32* %119, align 8, !dbg !7153, !tbaa !1254
  %121 = and i32 %120, 2097152, !dbg !7154
  %122 = icmp eq i32 %121, 0, !dbg !7154
  br i1 %122, label %123, label %129, !dbg !7155

; <label>:123:                                    ; preds = %118
  %124 = or i32 %120, 2097152, !dbg !7156
  store i32 %124, i32* %119, align 8, !dbg !7156, !tbaa !1254
  %125 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !7158, !tbaa !7159
  %126 = bitcast %struct.client* %47 to i8*, !dbg !7160
  %127 = call %struct.list* @listAddNodeHead(%struct.list* %125, i8* %126) #11, !dbg !7161
  br label %129, !dbg !7162

; <label>:128:                                    ; preds = %108
  call void @freeClient(%struct.client* %111) #11, !dbg !7144
  br label %129

; <label>:129:                                    ; preds = %128, %118, %112, %123
  call void @zfree(i8* nonnull %45) #11, !dbg !7163
  %130 = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #11, !dbg !7164
  %131 = load %struct.list*, %struct.list** @moduleUnblockedClients, align 8, !dbg !7066, !tbaa !902
  %132 = getelementptr inbounds %struct.list, %struct.list* %131, i64 0, i32 5, !dbg !7066
  %133 = load i64, i64* %132, align 8, !dbg !7066, !tbaa !5580
  %134 = icmp eq i64 %133, 0, !dbg !7067
  br i1 %134, label %135, label %40, !dbg !7067, !llvm.loop !7165

; <label>:135:                                    ; preds = %129, %11
  %136 = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #11, !dbg !7167
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6, !dbg !7168
  ret void, !dbg !7168
}

; Function Attrs: noredzone
declare dso_local i64 @read(i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @AddReplyFromClient(%struct.client*, %struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @unblockClient(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @clientHasPendingReplies(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.list* @listAddNodeHead(%struct.list*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleBlockedClientTimedOut(%struct.client* nocapture readonly) local_unnamed_addr #0 !dbg !7169 {
  %2 = alloca %struct.RedisModuleCtx, align 8
  %3 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 40, i32 11, !dbg !7175
  %4 = bitcast i8** %3 to %struct.RedisModuleBlockedClient**, !dbg !7175
  %5 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %4, align 8, !dbg !7175, !tbaa !6884
  %6 = bitcast %struct.RedisModuleCtx* %2 to i8*, !dbg !7177
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %6) #6, !dbg !7177
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 4
  %8 = bitcast %struct.AutoMemEntry** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 72, i1 false), !dbg !7178
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 0, !dbg !7178
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %9, align 8, !dbg !7178
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 7, !dbg !7179
  store i32 16, i32* %10, align 8, !dbg !7180, !tbaa !1164
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 1, !dbg !7181
  %12 = bitcast %struct.RedisModuleBlockedClient* %5 to <2 x i64>*, !dbg !7182
  %13 = load <2 x i64>, <2 x i64>* %12, align 8, !dbg !7182, !tbaa !902
  %14 = shufflevector <2 x i64> %13, <2 x i64> undef, <2 x i32> <i32 1, i32 0>, !dbg !7182
  %15 = bitcast %struct.RedisModule** %11 to <2 x i64>*, !dbg !7183
  store <2 x i64> %14, <2 x i64>* %15, align 8, !dbg !7183, !tbaa !902
  %16 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 3, !dbg !7184
  store %struct.RedisModuleBlockedClient* %5, %struct.RedisModuleBlockedClient** %16, align 8, !dbg !7185, !tbaa !2517
  %17 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 3, !dbg !7186
  %18 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %17, align 8, !dbg !7186, !tbaa !6953
  %19 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !7187
  %20 = bitcast %struct.redisObject*** %19 to i8***, !dbg !7187
  %21 = load i8**, i8*** %20, align 8, !dbg !7187, !tbaa !1316
  %22 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !7188
  %23 = load i32, i32* %22, align 8, !dbg !7188, !tbaa !1318
  %24 = call i32 %18(%struct.RedisModuleCtx* nonnull %2, i8** %21, i32 %23) #11, !dbg !7189
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %2) #12, !dbg !7190
  %25 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 4, !dbg !7191
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* null, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %25, align 8, !dbg !7192, !tbaa !6887
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %6) #6, !dbg !7193
  ret void, !dbg !7193
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @RM_IsBlockedReplyRequest(%struct.RedisModuleCtx* nocapture readonly) #4 !dbg !7194 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !7198
  %3 = load i32, i32* %2, align 8, !dbg !7198, !tbaa !1164
  %4 = lshr i32 %3, 3, !dbg !7199
  %5 = and i32 %4, 1, !dbg !7199
  ret i32 %5, !dbg !7200
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @RM_IsBlockedTimeoutRequest(%struct.RedisModuleCtx* nocapture readonly) #4 !dbg !7201 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !7205
  %3 = load i32, i32* %2, align 8, !dbg !7205, !tbaa !1164
  %4 = lshr i32 %3, 4, !dbg !7206
  %5 = and i32 %4, 1, !dbg !7206
  ret i32 %5, !dbg !7207
}

; Function Attrs: noredzone nounwind readonly
define dso_local i8* @RM_GetBlockedClientPrivateData(%struct.RedisModuleCtx* nocapture readonly) #4 !dbg !7208 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 10, !dbg !7214
  %3 = load i8*, i8** %2, align 8, !dbg !7214, !tbaa !6897
  ret i8* %3, !dbg !7215
}

; Function Attrs: noredzone nounwind readonly
define dso_local %struct.RedisModuleBlockedClient* @RM_GetBlockedClientHandle(%struct.RedisModuleCtx* nocapture readonly) #4 !dbg !7216 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !7222
  %3 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %2, align 8, !dbg !7222, !tbaa !2517
  ret %struct.RedisModuleBlockedClient* %3, !dbg !7223
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @RM_BlockedClientDisconnected(%struct.RedisModuleCtx* nocapture readonly) #4 !dbg !7224 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !7228
  %3 = load i32, i32* %2, align 8, !dbg !7228, !tbaa !1164
  %4 = lshr i32 %3, 6, !dbg !7229
  %5 = and i32 %4, 1, !dbg !7229
  ret i32 %5, !dbg !7230
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCtx* @RM_GetThreadSafeContext(%struct.RedisModuleBlockedClient*) #0 !dbg !7231 {
  %2 = alloca %struct.RedisModuleCtx, align 8
  %3 = tail call i8* @zmalloc(i64 104) #11, !dbg !7239
  %4 = bitcast i8* %3 to %struct.RedisModuleCtx*, !dbg !7239
  %5 = bitcast %struct.RedisModuleCtx* %2 to i8*, !dbg !7241
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %5) #6, !dbg !7241
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 1
  %7 = bitcast %struct.RedisModule** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 96, i1 false), !dbg !7242
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 0, !dbg !7242
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %8, align 8, !dbg !7242
  %9 = call i8* @memcpy(i8* %3, i8* nonnull %5, i64 104) #11, !dbg !7243
  %10 = icmp ne %struct.RedisModuleBlockedClient* %0, null, !dbg !7244
  br i1 %10, label %11, label %19, !dbg !7246

; <label>:11:                                     ; preds = %1
  %12 = getelementptr inbounds i8, i8* %3, i64 24, !dbg !7247
  %13 = bitcast i8* %12 to %struct.RedisModuleBlockedClient**, !dbg !7247
  store %struct.RedisModuleBlockedClient* %0, %struct.RedisModuleBlockedClient** %13, align 8, !dbg !7249, !tbaa !2517
  %14 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 1, !dbg !7250
  %15 = bitcast %struct.RedisModule** %14 to i64*, !dbg !7250
  %16 = load i64, i64* %15, align 8, !dbg !7250, !tbaa !6947
  %17 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !7251
  %18 = bitcast i8* %17 to i64*, !dbg !7252
  store i64 %16, i64* %18, align 8, !dbg !7252, !tbaa !1156
  br label %19, !dbg !7253

; <label>:19:                                     ; preds = %11, %1
  %20 = getelementptr inbounds i8, i8* %3, i64 48, !dbg !7254
  %21 = bitcast i8* %20 to i32*, !dbg !7254
  %22 = load i32, i32* %21, align 8, !dbg !7255, !tbaa !1164
  %23 = or i32 %22, 32, !dbg !7255
  store i32 %23, i32* %21, align 8, !dbg !7255, !tbaa !1164
  %24 = call %struct.client* @createClient(i32 -1) #11, !dbg !7256
  %25 = getelementptr inbounds i8, i8* %3, i64 16, !dbg !7257
  %26 = bitcast i8* %25 to %struct.client**, !dbg !7257
  store %struct.client* %24, %struct.client** %26, align 8, !dbg !7258, !tbaa !1168
  br i1 %10, label %27, label %37, !dbg !7259

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 8, !dbg !7260
  %29 = load i32, i32* %28, align 8, !dbg !7260, !tbaa !6971
  %30 = call i32 @selectDb(%struct.client* %24, i32 %29) #11, !dbg !7263
  %31 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 0, !dbg !7264
  %32 = load %struct.client*, %struct.client** %31, align 8, !dbg !7264, !tbaa !6908
  %33 = getelementptr inbounds %struct.client, %struct.client* %32, i64 0, i32 0, !dbg !7265
  %34 = load i64, i64* %33, align 8, !dbg !7265, !tbaa !3174
  %35 = load %struct.client*, %struct.client** %26, align 8, !dbg !7266, !tbaa !1168
  %36 = getelementptr inbounds %struct.client, %struct.client* %35, i64 0, i32 0, !dbg !7267
  store i64 %34, i64* %36, align 8, !dbg !7268, !tbaa !3174
  br label %37, !dbg !7269

; <label>:37:                                     ; preds = %27, %19
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %5) #6, !dbg !7270
  ret %struct.RedisModuleCtx* %4, !dbg !7271
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeThreadSafeContext(%struct.RedisModuleCtx*) #0 !dbg !7272 {
  tail call void @moduleFreeContext(%struct.RedisModuleCtx* %0) #12, !dbg !7276
  %2 = bitcast %struct.RedisModuleCtx* %0 to i8*, !dbg !7277
  tail call void @zfree(i8* %2) #11, !dbg !7278
  ret void, !dbg !7279
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_ThreadSafeContextLock(%struct.RedisModuleCtx* nocapture readnone) #0 !dbg !7280 {
  %2 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #11, !dbg !7284
  ret void, !dbg !7287
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleAcquireGIL() local_unnamed_addr #0 !dbg !7285 {
  %1 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #11, !dbg !7288
  ret void, !dbg !7289
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_ThreadSafeContextUnlock(%struct.RedisModuleCtx* nocapture readnone) #0 !dbg !7290 {
  %2 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #11, !dbg !7294
  ret void, !dbg !7297
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleReleaseGIL() local_unnamed_addr #0 !dbg !7295 {
  %1 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #11, !dbg !7298
  ret void, !dbg !7299
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_SubscribeToKeyspaceEvents(%struct.RedisModuleCtx* nocapture readonly, i32, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)*) #0 !dbg !7300 {
  %4 = tail call i8* @zmalloc(i64 24) #11, !dbg !7323
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !7325
  %6 = bitcast %struct.RedisModule** %5 to i64*, !dbg !7325
  %7 = load i64, i64* %6, align 8, !dbg !7325, !tbaa !1156
  %8 = bitcast i8* %4 to i64*, !dbg !7326
  store i64 %7, i64* %8, align 8, !dbg !7326, !tbaa !7327
  %9 = getelementptr inbounds i8, i8* %4, i64 16, !dbg !7329
  %10 = bitcast i8* %9 to i32*, !dbg !7329
  store i32 %1, i32* %10, align 8, !dbg !7330, !tbaa !7331
  %11 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !7332
  %12 = bitcast i8* %11 to i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)**, !dbg !7332
  store i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)* %2, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)** %12, align 8, !dbg !7333, !tbaa !7334
  %13 = getelementptr inbounds i8, i8* %4, i64 20, !dbg !7335
  %14 = bitcast i8* %13 to i32*, !dbg !7335
  store i32 0, i32* %14, align 4, !dbg !7336, !tbaa !7337
  %15 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !7338, !tbaa !902
  %16 = tail call %struct.list* @listAddNodeTail(%struct.list* %15, i8* %4) #11, !dbg !7339
  ret i32 0, !dbg !7340
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleNotifyKeyspaceEvent(i32, i8*, %struct.redisObject*, i32) local_unnamed_addr #0 !dbg !7341 {
  %5 = alloca %struct.listIter, align 8
  %6 = alloca %struct.RedisModuleCtx, align 8
  %7 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !7360, !tbaa !902
  %8 = getelementptr inbounds %struct.list, %struct.list* %7, i64 0, i32 5, !dbg !7360
  %9 = load i64, i64* %8, align 8, !dbg !7360, !tbaa !5580
  %10 = icmp eq i64 %9, 0, !dbg !7362
  br i1 %10, label %49, label %11, !dbg !7363

; <label>:11:                                     ; preds = %4
  %12 = bitcast %struct.listIter* %5 to i8*, !dbg !7364
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #6, !dbg !7364
  call void @listRewind(%struct.list* %7, %struct.listIter* nonnull %5) #11, !dbg !7366
  %13 = and i32 %0, -4, !dbg !7367
  %14 = call %struct.listNode* @listNext(%struct.listIter* nonnull %5) #11, !dbg !7368
  %15 = icmp eq %struct.listNode* %14, null, !dbg !7370
  br i1 %15, label %48, label %16, !dbg !7370

; <label>:16:                                     ; preds = %11
  %17 = bitcast %struct.RedisModuleCtx* %6 to i8*
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 0
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 1
  %20 = bitcast %struct.RedisModule** %19 to i64*
  %21 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 2
  %22 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 3
  %23 = bitcast %struct.RedisModuleBlockedClient** %22 to i8*
  br label %24, !dbg !7370

; <label>:24:                                     ; preds = %16, %45
  %25 = phi %struct.listNode* [ %14, %16 ], [ %46, %45 ]
  %26 = getelementptr inbounds %struct.listNode, %struct.listNode* %25, i64 0, i32 2, !dbg !7371
  %27 = bitcast i8** %26 to %struct.RedisModuleKeyspaceSubscriber**, !dbg !7371
  %28 = load %struct.RedisModuleKeyspaceSubscriber*, %struct.RedisModuleKeyspaceSubscriber** %27, align 8, !dbg !7371, !tbaa !5585
  %29 = getelementptr inbounds %struct.RedisModuleKeyspaceSubscriber, %struct.RedisModuleKeyspaceSubscriber* %28, i64 0, i32 2, !dbg !7373
  %30 = load i32, i32* %29, align 8, !dbg !7373, !tbaa !7331
  %31 = and i32 %30, %13, !dbg !7374
  %32 = icmp eq i32 %31, 0, !dbg !7374
  br i1 %32, label %45, label %33, !dbg !7375

; <label>:33:                                     ; preds = %24
  %34 = getelementptr inbounds %struct.RedisModuleKeyspaceSubscriber, %struct.RedisModuleKeyspaceSubscriber* %28, i64 0, i32 3, !dbg !7376
  %35 = load i32, i32* %34, align 4, !dbg !7376, !tbaa !7337
  %36 = icmp eq i32 %35, 0, !dbg !7377
  br i1 %36, label %37, label %45, !dbg !7378

; <label>:37:                                     ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #6, !dbg !7379
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 80, i1 false), !dbg !7380
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %18, align 8, !dbg !7380
  %38 = bitcast %struct.RedisModuleKeyspaceSubscriber* %28 to i64*, !dbg !7381
  %39 = load i64, i64* %38, align 8, !dbg !7381, !tbaa !7327
  store i64 %39, i64* %20, align 8, !dbg !7382, !tbaa !1156
  %40 = load %struct.client*, %struct.client** @moduleFreeContextReusedClient, align 8, !dbg !7383, !tbaa !902
  store %struct.client* %40, %struct.client** %21, align 8, !dbg !7384, !tbaa !1168
  %41 = call i32 @selectDb(%struct.client* %40, i32 %3) #11, !dbg !7385
  store i32 1, i32* %34, align 4, !dbg !7386, !tbaa !7337
  %42 = getelementptr inbounds %struct.RedisModuleKeyspaceSubscriber, %struct.RedisModuleKeyspaceSubscriber* %28, i64 0, i32 1, !dbg !7387
  %43 = load i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)*, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)** %42, align 8, !dbg !7387, !tbaa !7334
  %44 = call i32 %43(%struct.RedisModuleCtx* nonnull %6, i32 %13, i8* %1, %struct.redisObject* %2) #11, !dbg !7388
  store i32 0, i32* %34, align 4, !dbg !7389, !tbaa !7337
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %6) #12, !dbg !7390
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #6, !dbg !7391
  br label %45, !dbg !7392

; <label>:45:                                     ; preds = %24, %37, %33
  %46 = call %struct.listNode* @listNext(%struct.listIter* nonnull %5) #11, !dbg !7368
  %47 = icmp eq %struct.listNode* %46, null, !dbg !7370
  br i1 %47, label %48, label %24, !dbg !7370, !llvm.loop !7393

; <label>:48:                                     ; preds = %45, %11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #6, !dbg !7395
  br label %49, !dbg !7395

; <label>:49:                                     ; preds = %4, %48
  ret void, !dbg !7395
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleUnsubscribeNotifications(%struct.RedisModule* readnone) local_unnamed_addr #0 !dbg !7396 {
  %2 = alloca %struct.listIter, align 8
  %3 = bitcast %struct.listIter* %2 to i8*, !dbg !7406
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #6, !dbg !7406
  %4 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !7407, !tbaa !902
  call void @listRewind(%struct.list* %4, %struct.listIter* nonnull %2) #11, !dbg !7409
  %5 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !7410
  %6 = icmp eq %struct.listNode* %5, null, !dbg !7412
  br i1 %6, label %19, label %7, !dbg !7412

; <label>:7:                                      ; preds = %1, %16
  %8 = phi %struct.listNode* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %struct.listNode, %struct.listNode* %8, i64 0, i32 2, !dbg !7413
  %10 = load i8*, i8** %9, align 8, !dbg !7413, !tbaa !5585
  %11 = bitcast i8* %10 to %struct.RedisModule**, !dbg !7415
  %12 = load %struct.RedisModule*, %struct.RedisModule** %11, align 8, !dbg !7415, !tbaa !7327
  %13 = icmp eq %struct.RedisModule* %12, %0, !dbg !7417
  br i1 %13, label %14, label %16, !dbg !7418

; <label>:14:                                     ; preds = %7
  %15 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !7419, !tbaa !902
  call void @listDelNode(%struct.list* %15, %struct.listNode* nonnull %8) #11, !dbg !7421
  call void @zfree(i8* %10) #11, !dbg !7422
  br label %16, !dbg !7423

; <label>:16:                                     ; preds = %14, %7
  %17 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !7410
  %18 = icmp eq %struct.listNode* %17, null, !dbg !7412
  br i1 %18, label %19, label %7, !dbg !7412, !llvm.loop !7424

; <label>:19:                                     ; preds = %16, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #6, !dbg !7426
  ret void, !dbg !7426
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleCallClusterReceivers(i8*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #0 !dbg !7427 {
  %6 = alloca %struct.RedisModuleCtx, align 8
  %7 = zext i8 %2 to i64, !dbg !7446
  %8 = getelementptr inbounds [255 x %struct.moduleClusterReceiver*], [255 x %struct.moduleClusterReceiver*]* @clusterReceivers, i64 0, i64 %7, !dbg !7446
  %9 = load %struct.moduleClusterReceiver*, %struct.moduleClusterReceiver** %8, align 8, !dbg !7448, !tbaa !902
  %10 = icmp eq %struct.moduleClusterReceiver* %9, null, !dbg !7449
  br i1 %10, label %35, label %11, !dbg !7449

; <label>:11:                                     ; preds = %5, %31
  %12 = phi %struct.moduleClusterReceiver* [ %33, %31 ], [ %9, %5 ]
  %13 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %12, i64 0, i32 0, !dbg !7450
  %14 = load i64, i64* %13, align 8, !dbg !7450, !tbaa !7451
  %15 = icmp eq i64 %14, %1, !dbg !7453
  br i1 %15, label %16, label %31, !dbg !7454

; <label>:16:                                     ; preds = %11
  %17 = bitcast %struct.RedisModuleCtx* %6 to i8*, !dbg !7455
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #6, !dbg !7455
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 3
  %19 = bitcast %struct.RedisModuleBlockedClient** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 80, i1 false), !dbg !7456
  %20 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 0, !dbg !7456
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %20, align 8, !dbg !7456
  %21 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %12, i64 0, i32 2, !dbg !7457
  %22 = bitcast %struct.RedisModule** %21 to i64*, !dbg !7457
  %23 = load i64, i64* %22, align 8, !dbg !7457, !tbaa !7458
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 1, !dbg !7459
  %25 = bitcast %struct.RedisModule** %24 to i64*, !dbg !7460
  store i64 %23, i64* %25, align 8, !dbg !7460, !tbaa !1156
  %26 = load %struct.client*, %struct.client** @moduleFreeContextReusedClient, align 8, !dbg !7461, !tbaa !902
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 2, !dbg !7462
  store %struct.client* %26, %struct.client** %27, align 8, !dbg !7463, !tbaa !1168
  %28 = tail call i32 @selectDb(%struct.client* %26, i32 0) #11, !dbg !7464
  %29 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %12, i64 0, i32 1, !dbg !7465
  %30 = load void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)*, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)** %29, align 8, !dbg !7465, !tbaa !7466
  call void %30(%struct.RedisModuleCtx* nonnull %6, i8* %0, i8 zeroext %2, i8* %3, i32 %4) #11, !dbg !7467
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %6) #12, !dbg !7468
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #6, !dbg !7469
  br label %35

; <label>:31:                                     ; preds = %11
  %32 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %12, i64 0, i32 3, !dbg !7470
  %33 = load %struct.moduleClusterReceiver*, %struct.moduleClusterReceiver** %32, align 8, !dbg !7448, !tbaa !902
  %34 = icmp eq %struct.moduleClusterReceiver* %33, null, !dbg !7449
  br i1 %34, label %35, label %11, !dbg !7449, !llvm.loop !7471

; <label>:35:                                     ; preds = %31, %5, %16
  ret void, !dbg !7473
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_RegisterClusterMessageReceiver(%struct.RedisModuleCtx* nocapture readonly, i8 zeroext, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)*) #0 !dbg !7474 {
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7487, !tbaa !3208
  %5 = icmp eq i32 %4, 0, !dbg !7489
  br i1 %5, label %60, label %6, !dbg !7490

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !7491
  %8 = load %struct.RedisModule*, %struct.RedisModule** %7, align 8, !dbg !7491, !tbaa !1156
  %9 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %8, i64 0, i32 1, !dbg !7492
  %10 = load i8*, i8** %9, align 8, !dbg !7492, !tbaa !1158
  %11 = tail call i64 @moduleTypeEncodeId(i8* %10, i32 0) #12, !dbg !7493
  %12 = zext i8 %1 to i64, !dbg !7495
  %13 = getelementptr inbounds [255 x %struct.moduleClusterReceiver*], [255 x %struct.moduleClusterReceiver*]* @clusterReceivers, i64 0, i64 %12, !dbg !7495
  %14 = load %struct.moduleClusterReceiver*, %struct.moduleClusterReceiver** %13, align 8, !dbg !7498, !tbaa !902
  %15 = icmp eq %struct.moduleClusterReceiver* %14, null, !dbg !7500
  br i1 %15, label %44, label %16, !dbg !7500

; <label>:16:                                     ; preds = %6
  %17 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %14, i64 0, i32 0, !dbg !7501
  %18 = load i64, i64* %17, align 8, !dbg !7501, !tbaa !7451
  %19 = icmp eq i64 %18, %11, !dbg !7503
  br i1 %19, label %24, label %39, !dbg !7504

; <label>:20:                                     ; preds = %39
  %21 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %42, i64 0, i32 0, !dbg !7501
  %22 = load i64, i64* %21, align 8, !dbg !7501, !tbaa !7451
  %23 = icmp eq i64 %22, %11, !dbg !7503
  br i1 %23, label %24, label %39, !dbg !7504, !llvm.loop !7505

; <label>:24:                                     ; preds = %20, %16
  %25 = phi %struct.moduleClusterReceiver* [ %14, %16 ], [ %42, %20 ]
  %26 = phi %struct.moduleClusterReceiver* [ null, %16 ], [ %40, %20 ]
  %27 = icmp eq void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* %2, null, !dbg !7507
  br i1 %27, label %30, label %28, !dbg !7510

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %25, i64 0, i32 1, !dbg !7511
  store void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* %2, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)** %29, align 8, !dbg !7513, !tbaa !7466
  br label %60, !dbg !7514

; <label>:30:                                     ; preds = %24
  %31 = icmp eq %struct.moduleClusterReceiver* %26, null, !dbg !7515
  %32 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %25, i64 0, i32 3, !dbg !7518
  %33 = bitcast %struct.moduleClusterReceiver** %32 to i64*, !dbg !7518
  %34 = load i64, i64* %33, align 8, !dbg !7518, !tbaa !7519
  %35 = select i1 %31, %struct.moduleClusterReceiver* %14, %struct.moduleClusterReceiver* %26, !dbg !7520
  %36 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %35, i64 0, i32 3, !dbg !7518
  %37 = bitcast %struct.moduleClusterReceiver** %36 to i64*, !dbg !7518
  store i64 %34, i64* %37, align 8, !dbg !7518, !tbaa !7519
  %38 = bitcast %struct.moduleClusterReceiver* %25 to i8*, !dbg !7521
  tail call void @zfree(i8* %38) #11, !dbg !7522
  br label %60

; <label>:39:                                     ; preds = %16, %20
  %40 = phi %struct.moduleClusterReceiver* [ %42, %20 ], [ %14, %16 ]
  %41 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %40, i64 0, i32 3, !dbg !7523
  %42 = load %struct.moduleClusterReceiver*, %struct.moduleClusterReceiver** %41, align 8, !dbg !7498, !tbaa !902
  %43 = icmp eq %struct.moduleClusterReceiver* %42, null, !dbg !7500
  br i1 %43, label %44, label %20, !dbg !7500, !llvm.loop !7505

; <label>:44:                                     ; preds = %39, %6
  %45 = icmp eq void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* %2, null, !dbg !7524
  br i1 %45, label %60, label %46, !dbg !7526

; <label>:46:                                     ; preds = %44
  %47 = tail call i8* @zmalloc(i64 32) #11, !dbg !7527
  %48 = bitcast i8* %47 to i64*, !dbg !7529
  store i64 %11, i64* %48, align 8, !dbg !7530, !tbaa !7451
  %49 = bitcast %struct.RedisModule** %7 to i64*, !dbg !7531
  %50 = load i64, i64* %49, align 8, !dbg !7531, !tbaa !1156
  %51 = getelementptr inbounds i8, i8* %47, i64 16, !dbg !7532
  %52 = bitcast i8* %51 to i64*, !dbg !7533
  store i64 %50, i64* %52, align 8, !dbg !7533, !tbaa !7458
  %53 = getelementptr inbounds i8, i8* %47, i64 8, !dbg !7534
  %54 = bitcast i8* %53 to void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)**, !dbg !7534
  store void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* %2, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)** %54, align 8, !dbg !7535, !tbaa !7466
  %55 = bitcast %struct.moduleClusterReceiver** %13 to i64*, !dbg !7536
  %56 = load i64, i64* %55, align 8, !dbg !7536, !tbaa !902
  %57 = getelementptr inbounds i8, i8* %47, i64 24, !dbg !7537
  %58 = bitcast i8* %57 to i64*, !dbg !7538
  store i64 %56, i64* %58, align 8, !dbg !7538, !tbaa !7519
  %59 = bitcast %struct.moduleClusterReceiver** %13 to i8**, !dbg !7539
  store i8* %47, i8** %59, align 8, !dbg !7539, !tbaa !902
  br label %60, !dbg !7540

; <label>:60:                                     ; preds = %30, %28, %44, %46, %3
  ret void, !dbg !7541
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_SendClusterMessage(%struct.RedisModuleCtx* nocapture readonly, i8*, i8 zeroext, i8*, i32) #0 !dbg !7542 {
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7557, !tbaa !3208
  %7 = icmp eq i32 %6, 0, !dbg !7559
  br i1 %7, label %17, label %8, !dbg !7560

; <label>:8:                                      ; preds = %5
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !7561
  %10 = load %struct.RedisModule*, %struct.RedisModule** %9, align 8, !dbg !7561, !tbaa !1156
  %11 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %10, i64 0, i32 1, !dbg !7562
  %12 = load i8*, i8** %11, align 8, !dbg !7562, !tbaa !1158
  %13 = tail call i64 @moduleTypeEncodeId(i8* %12, i32 0) #12, !dbg !7563
  %14 = tail call i32 @clusterSendModuleMessageToTarget(i8* %1, i64 %13, i8 zeroext %2, i8* %3, i32 %4) #11, !dbg !7565
  %15 = icmp ne i32 %14, 0, !dbg !7567
  %16 = zext i1 %15 to i32, !dbg !7568
  br label %17

; <label>:17:                                     ; preds = %5, %8
  %18 = phi i32 [ %16, %8 ], [ 1, %5 ], !dbg !7569
  ret i32 %18, !dbg !7570
}

; Function Attrs: noredzone
declare dso_local i32 @clusterSendModuleMessageToTarget(i8*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8** @RM_GetClusterNodesList(%struct.RedisModuleCtx* nocapture readnone, i64* nocapture) #0 !dbg !7571 {
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7630, !tbaa !3208
  %4 = icmp eq i32 %3, 0, !dbg !7632
  br i1 %4, label %49, label %5, !dbg !7633

; <label>:5:                                      ; preds = %2
  %6 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7634, !tbaa !5544
  %7 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %6, i64 0, i32 4, !dbg !7634
  %8 = load %struct.dict*, %struct.dict** %7, align 8, !dbg !7634, !tbaa !7635
  %9 = getelementptr inbounds %struct.dict, %struct.dict* %8, i64 0, i32 2, i64 0, i32 3, !dbg !7634
  %10 = load i64, i64* %9, align 8, !dbg !7634, !tbaa !7636
  %11 = getelementptr inbounds %struct.dict, %struct.dict* %8, i64 0, i32 2, i64 1, i32 3, !dbg !7634
  %12 = load i64, i64* %11, align 8, !dbg !7634, !tbaa !7636
  %13 = add i64 %12, %10, !dbg !7634
  %14 = mul i64 %13, 40, !dbg !7639
  %15 = add i64 %14, 40, !dbg !7639
  %16 = tail call i8* @zmalloc(i64 %15) #11, !dbg !7640
  %17 = bitcast i8* %16 to i8**, !dbg !7640
  %18 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7642, !tbaa !5544
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %18, i64 0, i32 4, !dbg !7643
  %20 = load %struct.dict*, %struct.dict** %19, align 8, !dbg !7643, !tbaa !7635
  %21 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %20) #11, !dbg !7644
  %22 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %21) #11, !dbg !7647
  %23 = icmp eq %struct.dictEntry* %22, null, !dbg !7649
  br i1 %23, label %45, label %24, !dbg !7650

; <label>:24:                                     ; preds = %5, %41
  %25 = phi %struct.dictEntry* [ %43, %41 ], [ %22, %5 ]
  %26 = phi i32 [ %42, %41 ], [ 0, %5 ]
  %27 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %25, i64 0, i32 1, i32 0, !dbg !7651
  %28 = bitcast i8** %27 to %struct.clusterNode**, !dbg !7651
  %29 = load %struct.clusterNode*, %struct.clusterNode** %28, align 8, !dbg !7651, !tbaa !1123
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %29, i64 0, i32 2, !dbg !7653
  %31 = load i32, i32* %30, align 8, !dbg !7653, !tbaa !7655
  %32 = and i32 %31, 96, !dbg !7657
  %33 = icmp eq i32 %32, 0, !dbg !7657
  br i1 %33, label %34, label %41, !dbg !7658, !llvm.loop !7659

; <label>:34:                                     ; preds = %24
  %35 = tail call i8* @zmalloc(i64 40) #11, !dbg !7661
  %36 = sext i32 %26 to i64, !dbg !7662
  %37 = getelementptr inbounds i8*, i8** %17, i64 %36, !dbg !7662
  store i8* %35, i8** %37, align 8, !dbg !7663, !tbaa !902
  %38 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %29, i64 0, i32 1, i64 0, !dbg !7664
  %39 = tail call i8* @memcpy(i8* %35, i8* nonnull %38, i64 40) #11, !dbg !7665
  %40 = add nsw i32 %26, 1, !dbg !7666
  br label %41, !dbg !7660

; <label>:41:                                     ; preds = %24, %34
  %42 = phi i32 [ %40, %34 ], [ %26, %24 ], !dbg !7667
  %43 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %21) #11, !dbg !7647
  %44 = icmp eq %struct.dictEntry* %43, null, !dbg !7649
  br i1 %44, label %45, label %24, !dbg !7650

; <label>:45:                                     ; preds = %41, %5
  %46 = phi i32 [ 0, %5 ], [ %42, %41 ], !dbg !7646
  %47 = sext i32 %46 to i64, !dbg !7668
  store i64 %47, i64* %1, align 8, !dbg !7669, !tbaa !2327
  %48 = getelementptr inbounds i8*, i8** %17, i64 %47, !dbg !7670
  store i8* null, i8** %48, align 8, !dbg !7671, !tbaa !902
  tail call void @dictReleaseIterator(%struct.dictIterator* %21) #11, !dbg !7672
  br label %49

; <label>:49:                                     ; preds = %2, %45
  %50 = phi i8** [ %17, %45 ], [ null, %2 ], !dbg !7673
  ret i8** %50, !dbg !7674
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeClusterNodesList(i8**) #0 !dbg !7675 {
  %2 = icmp eq i8** %0, null, !dbg !7683
  br i1 %2, label %15, label %3, !dbg !7685

; <label>:3:                                      ; preds = %1
  %4 = load i8*, i8** %0, align 8, !dbg !7687, !tbaa !902
  %5 = icmp eq i8* %4, null, !dbg !7689
  br i1 %5, label %6, label %8, !dbg !7689

; <label>:6:                                      ; preds = %8, %3
  %7 = bitcast i8** %0 to i8*, !dbg !7690
  tail call void @zfree(i8* %7) #11, !dbg !7691
  br label %15, !dbg !7692

; <label>:8:                                      ; preds = %3, %8
  %9 = phi i64 [ %11, %8 ], [ 0, %3 ]
  %10 = phi i8* [ %13, %8 ], [ %4, %3 ]
  tail call void @zfree(i8* nonnull %10) #11, !dbg !7693
  %11 = add nuw i64 %9, 1, !dbg !7694
  %12 = getelementptr inbounds i8*, i8** %0, i64 %11, !dbg !7687
  %13 = load i8*, i8** %12, align 8, !dbg !7687, !tbaa !902
  %14 = icmp eq i8* %13, null, !dbg !7689
  br i1 %14, label %6, label %8, !dbg !7689, !llvm.loop !7695

; <label>:15:                                     ; preds = %1, %6
  ret void, !dbg !7692
}

; Function Attrs: norecurse noredzone nounwind readonly
define dso_local i8* @RM_GetMyClusterID() #10 !dbg !7697 {
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7700, !tbaa !3208
  %2 = icmp eq i32 %1, 0, !dbg !7702
  br i1 %2, label %8, label %3, !dbg !7703

; <label>:3:                                      ; preds = %0
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7704, !tbaa !5544
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 0, !dbg !7705
  %6 = load %struct.clusterNode*, %struct.clusterNode** %5, align 8, !dbg !7705, !tbaa !5546
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %6, i64 0, i32 1, i64 0, !dbg !7706
  br label %8, !dbg !7707

; <label>:8:                                      ; preds = %0, %3
  %9 = phi i8* [ %7, %3 ], [ null, %0 ], !dbg !7708
  ret i8* %9, !dbg !7709
}

; Function Attrs: norecurse noredzone nounwind readonly
define dso_local i64 @RM_GetClusterSize() #10 !dbg !7710 {
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7713, !tbaa !3208
  %2 = icmp eq i32 %1, 0, !dbg !7715
  br i1 %2, label %12, label %3, !dbg !7716

; <label>:3:                                      ; preds = %0
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7717, !tbaa !5544
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 4, !dbg !7717
  %6 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !7717, !tbaa !7635
  %7 = getelementptr inbounds %struct.dict, %struct.dict* %6, i64 0, i32 2, i64 0, i32 3, !dbg !7717
  %8 = load i64, i64* %7, align 8, !dbg !7717, !tbaa !7636
  %9 = getelementptr inbounds %struct.dict, %struct.dict* %6, i64 0, i32 2, i64 1, i32 3, !dbg !7717
  %10 = load i64, i64* %9, align 8, !dbg !7717, !tbaa !7636
  %11 = add i64 %10, %8, !dbg !7717
  br label %12, !dbg !7718

; <label>:12:                                     ; preds = %0, %3
  %13 = phi i64 [ %11, %3 ], [ 0, %0 ], !dbg !7719
  ret i64 %13, !dbg !7720
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_GetClusterNodeInfo(%struct.RedisModuleCtx* nocapture readnone, i8*, i8*, i8*, i32*, i32*) #0 !dbg !7721 {
  %7 = tail call %struct.clusterNode* @clusterLookupNode(i8* %1) #11, !dbg !7738
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %7, i64 0, i32 2, !dbg !7740
  %9 = load i32, i32* %8, align 8, !dbg !7740, !tbaa !7655
  %10 = and i32 %9, 96, !dbg !7742
  %11 = icmp eq i32 %10, 0, !dbg !7742
  br i1 %11, label %12, label %80, !dbg !7743

; <label>:12:                                     ; preds = %6
  %13 = icmp eq i8* %2, null, !dbg !7744
  br i1 %13, label %17, label %14, !dbg !7746

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %7, i64 0, i32 1, i64 0, !dbg !7747
  %16 = tail call i8* @memcpy(i8* nonnull %2, i8* nonnull %15, i64 40) #11, !dbg !7748
  br label %17, !dbg !7748

; <label>:17:                                     ; preds = %12, %14
  %18 = icmp eq i8* %3, null, !dbg !7749
  br i1 %18, label %32, label %19, !dbg !7751

; <label>:19:                                     ; preds = %17
  %20 = load i32, i32* %8, align 8, !dbg !7752, !tbaa !7655
  %21 = and i32 %20, 1, !dbg !7755
  %22 = icmp eq i32 %21, 0, !dbg !7755
  br i1 %22, label %30, label %23, !dbg !7756

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %7, i64 0, i32 8, !dbg !7757
  %25 = load %struct.clusterNode*, %struct.clusterNode** %24, align 8, !dbg !7757, !tbaa !7758
  %26 = icmp eq %struct.clusterNode* %25, null, !dbg !7759
  br i1 %26, label %30, label %27, !dbg !7760

; <label>:27:                                     ; preds = %23
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %25, i64 0, i32 1, i64 0, !dbg !7761
  %29 = tail call i8* @memcpy(i8* nonnull %3, i8* nonnull %28, i64 40) #11, !dbg !7762
  br label %32, !dbg !7762

; <label>:30:                                     ; preds = %23, %19
  %31 = tail call i8* @memset(i8* nonnull %3, i32 0, i64 40) #11, !dbg !7763
  br label %32

; <label>:32:                                     ; preds = %17, %27, %30
  %33 = icmp eq i32* %4, null, !dbg !7764
  br i1 %33, label %37, label %34, !dbg !7766

; <label>:34:                                     ; preds = %32
  %35 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %7, i64 0, i32 17, !dbg !7767
  %36 = load i32, i32* %35, align 8, !dbg !7767, !tbaa !7768
  store i32 %36, i32* %4, align 4, !dbg !7769, !tbaa !933
  br label %37, !dbg !7770

; <label>:37:                                     ; preds = %32, %34
  %38 = icmp eq i32* %5, null, !dbg !7771
  br i1 %38, label %80, label %39, !dbg !7773

; <label>:39:                                     ; preds = %37
  store i32 0, i32* %5, align 4, !dbg !7774, !tbaa !933
  %40 = load i32, i32* %8, align 8, !dbg !7776, !tbaa !7655
  %41 = lshr i32 %40, 4, !dbg !7778
  %42 = and i32 %41, 1, !dbg !7778
  store i32 %42, i32* %5, align 4, !dbg !7779
  %43 = load i32, i32* %8, align 8, !dbg !7780, !tbaa !7655
  %44 = and i32 %43, 1, !dbg !7782
  %45 = icmp eq i32 %44, 0, !dbg !7782
  br i1 %45, label %49, label %46, !dbg !7783

; <label>:46:                                     ; preds = %39
  %47 = or i32 %42, 2, !dbg !7784
  store i32 %47, i32* %5, align 4, !dbg !7784, !tbaa !933
  %48 = load i32, i32* %8, align 8, !dbg !7785, !tbaa !7655
  br label %49, !dbg !7787

; <label>:49:                                     ; preds = %39, %46
  %50 = phi i32 [ %42, %39 ], [ %47, %46 ]
  %51 = phi i32 [ %43, %39 ], [ %48, %46 ], !dbg !7785
  %52 = and i32 %51, 2, !dbg !7788
  %53 = icmp eq i32 %52, 0, !dbg !7788
  br i1 %53, label %57, label %54, !dbg !7789

; <label>:54:                                     ; preds = %49
  %55 = or i32 %50, 4, !dbg !7790
  store i32 %55, i32* %5, align 4, !dbg !7790, !tbaa !933
  %56 = load i32, i32* %8, align 8, !dbg !7791, !tbaa !7655
  br label %57, !dbg !7793

; <label>:57:                                     ; preds = %49, %54
  %58 = phi i32 [ %50, %49 ], [ %55, %54 ]
  %59 = phi i32 [ %51, %49 ], [ %56, %54 ], !dbg !7791
  %60 = and i32 %59, 4, !dbg !7794
  %61 = icmp eq i32 %60, 0, !dbg !7794
  br i1 %61, label %65, label %62, !dbg !7795

; <label>:62:                                     ; preds = %57
  %63 = or i32 %58, 8, !dbg !7796
  store i32 %63, i32* %5, align 4, !dbg !7796, !tbaa !933
  %64 = load i32, i32* %8, align 8, !dbg !7797, !tbaa !7655
  br label %65, !dbg !7799

; <label>:65:                                     ; preds = %57, %62
  %66 = phi i32 [ %58, %57 ], [ %63, %62 ]
  %67 = phi i32 [ %59, %57 ], [ %64, %62 ], !dbg !7797
  %68 = and i32 %67, 8, !dbg !7800
  %69 = icmp eq i32 %68, 0, !dbg !7800
  br i1 %69, label %73, label %70, !dbg !7801

; <label>:70:                                     ; preds = %65
  %71 = or i32 %66, 16, !dbg !7802
  store i32 %71, i32* %5, align 4, !dbg !7802, !tbaa !933
  %72 = load i32, i32* %8, align 8, !dbg !7803, !tbaa !7655
  br label %73, !dbg !7805

; <label>:73:                                     ; preds = %65, %70
  %74 = phi i32 [ %66, %65 ], [ %71, %70 ]
  %75 = phi i32 [ %67, %65 ], [ %72, %70 ], !dbg !7803
  %76 = and i32 %75, 512, !dbg !7806
  %77 = icmp eq i32 %76, 0, !dbg !7806
  br i1 %77, label %80, label %78, !dbg !7807

; <label>:78:                                     ; preds = %73
  %79 = or i32 %74, 32, !dbg !7808
  store i32 %79, i32* %5, align 4, !dbg !7808, !tbaa !933
  br label %80, !dbg !7809

; <label>:80:                                     ; preds = %78, %37, %73, %6
  %81 = phi i32 [ 1, %6 ], [ 0, %73 ], [ 0, %37 ], [ 0, %78 ], !dbg !7810
  ret i32 %81, !dbg !7811
}

; Function Attrs: noredzone
declare dso_local %struct.clusterNode* @clusterLookupNode(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SetClusterFlags(%struct.RedisModuleCtx* nocapture readnone, i64) #0 !dbg !7812 {
  %3 = and i64 %1, 2, !dbg !7820
  %4 = icmp eq i64 %3, 0, !dbg !7820
  br i1 %4, label %8, label %5, !dbg !7822

; <label>:5:                                      ; preds = %2
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7823, !tbaa !7824
  %7 = or i32 %6, 2, !dbg !7823
  store i32 %7, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7823, !tbaa !7824
  br label %8, !dbg !7825

; <label>:8:                                      ; preds = %2, %5
  %9 = and i64 %1, 4, !dbg !7826
  %10 = icmp eq i64 %9, 0, !dbg !7826
  br i1 %10, label %14, label %11, !dbg !7828

; <label>:11:                                     ; preds = %8
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7829, !tbaa !7824
  %13 = or i32 %12, 4, !dbg !7829
  store i32 %13, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7829, !tbaa !7824
  br label %14, !dbg !7830

; <label>:14:                                     ; preds = %8, %11
  ret void, !dbg !7831
}

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleTimerHandler(%struct.aeEventLoop* nocapture readnone, i64, i8* nocapture readnone) #0 !dbg !7832 {
  %4 = alloca %struct.raxIterator, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.RedisModuleCtx, align 8
  %7 = bitcast %struct.raxIterator* %4 to i8*, !dbg !7887
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %7) #6, !dbg !7887
  %8 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !7888, !tbaa !902
  call void @raxStart(%struct.raxIterator* nonnull %4, %struct.rax* %8) #11, !dbg !7890
  %9 = call i64 @ustime() #11, !dbg !7891
  %10 = call i32 @raxSeek(%struct.raxIterator* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i8* null, i64 0) #11, !dbg !7894
  %11 = call i32 @raxNext(%struct.raxIterator* nonnull %4) #11, !dbg !7895
  %12 = icmp eq i32 %11, 0, !dbg !7895
  br i1 %12, label %53, label %13, !dbg !7897

; <label>:13:                                     ; preds = %3
  %14 = bitcast i64* %5 to i8*
  %15 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 2
  %16 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 3
  %17 = bitcast %struct.RedisModuleCtx* %6 to i8*
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 0
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 1
  %20 = bitcast %struct.RedisModule** %19 to i64*
  %21 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 2
  %22 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 4
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 3
  %24 = bitcast %struct.RedisModuleBlockedClient** %23 to i8*
  br label %25, !dbg !7897

; <label>:25:                                     ; preds = %13, %31
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6, !dbg !7898
  %26 = load i8*, i8** %15, align 8, !dbg !7899, !tbaa !7900
  %27 = call i8* @memcpy(i8* nonnull %14, i8* %26, i64 8) #11, !dbg !7903
  %28 = load i64, i64* %5, align 8, !dbg !7904, !tbaa !2327
  %29 = call i64 @intrev64(i64 %28) #11, !dbg !7904
  store i64 %29, i64* %5, align 8, !dbg !7906, !tbaa !2327
  %30 = icmp ugt i64 %29, %9, !dbg !7907
  br i1 %30, label %54, label %31, !dbg !7908

; <label>:31:                                     ; preds = %25
  %32 = load i8*, i8** %16, align 8, !dbg !7909, !tbaa !7910
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #6, !dbg !7912
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 80, i1 false), !dbg !7913
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %18, align 8, !dbg !7913
  %33 = bitcast i8* %32 to i64*, !dbg !7914
  %34 = load i64, i64* %33, align 8, !dbg !7914, !tbaa !7915
  store i64 %34, i64* %20, align 8, !dbg !7917, !tbaa !1156
  %35 = load %struct.client*, %struct.client** @moduleFreeContextReusedClient, align 8, !dbg !7918, !tbaa !902
  store %struct.client* %35, %struct.client** %21, align 8, !dbg !7919, !tbaa !1168
  %36 = getelementptr inbounds i8, i8* %32, i64 24, !dbg !7920
  %37 = bitcast i8* %36 to i32*, !dbg !7920
  %38 = load i32, i32* %37, align 8, !dbg !7920, !tbaa !7921
  %39 = call i32 @selectDb(%struct.client* %35, i32 %38) #11, !dbg !7922
  %40 = getelementptr inbounds i8, i8* %32, i64 8, !dbg !7923
  %41 = bitcast i8* %40 to void (%struct.RedisModuleCtx*, i8*)**, !dbg !7923
  %42 = load void (%struct.RedisModuleCtx*, i8*)*, void (%struct.RedisModuleCtx*, i8*)** %41, align 8, !dbg !7923, !tbaa !7924
  %43 = getelementptr inbounds i8, i8* %32, i64 16, !dbg !7925
  %44 = bitcast i8* %43 to i8**, !dbg !7925
  %45 = load i8*, i8** %44, align 8, !dbg !7925, !tbaa !7926
  call void %42(%struct.RedisModuleCtx* nonnull %6, i8* %45) #11, !dbg !7927
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %6) #12, !dbg !7928
  %46 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !7929, !tbaa !902
  %47 = load i8*, i8** %15, align 8, !dbg !7930, !tbaa !7900
  %48 = load i64, i64* %22, align 8, !dbg !7931, !tbaa !7932
  %49 = call i32 @raxRemove(%struct.rax* %46, i8* %47, i64 %48, i8** null) #11, !dbg !7933
  call void @zfree(i8* %32) #11, !dbg !7934
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #6, !dbg !7935
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6, !dbg !7936
  %50 = call i32 @raxSeek(%struct.raxIterator* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i8* null, i64 0) #11, !dbg !7894
  %51 = call i32 @raxNext(%struct.raxIterator* nonnull %4) #11, !dbg !7895
  %52 = icmp eq i32 %51, 0, !dbg !7895
  br i1 %52, label %53, label %25, !dbg !7897

; <label>:53:                                     ; preds = %31, %3
  call void @raxStop(%struct.raxIterator* nonnull %4) #11, !dbg !7937
  br label %58, !dbg !7938

; <label>:54:                                     ; preds = %25
  %55 = sub i64 %29, %9, !dbg !7939
  %56 = udiv i64 %55, 1000, !dbg !7941
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6, !dbg !7936
  call void @raxStop(%struct.raxIterator* nonnull %4) #11, !dbg !7937
  %57 = icmp ult i64 %55, 1000, !dbg !7942
  br i1 %57, label %58, label %59, !dbg !7938

; <label>:58:                                     ; preds = %53, %54
  br label %59, !dbg !7938

; <label>:59:                                     ; preds = %54, %58
  %60 = phi i64 [ 1, %58 ], [ %56, %54 ]
  %61 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !7944, !tbaa !902
  %62 = call i64 @raxSize(%struct.rax* %61) #11, !dbg !7945
  %63 = icmp eq i64 %62, 0, !dbg !7946
  %64 = select i1 %63, i64 4294967295, i64 %60, !dbg !7947
  %65 = trunc i64 %64 to i32, !dbg !7947
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %7) #6, !dbg !7948
  ret i32 %65, !dbg !7949
}

; Function Attrs: noredzone
declare dso_local void @raxStart(%struct.raxIterator*, %struct.rax*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @ustime() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxSeek(%struct.raxIterator*, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxNext(%struct.raxIterator*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @intrev64(i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxRemove(%struct.rax*, i8*, i64, i8**) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @raxStop(%struct.raxIterator*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @raxSize(%struct.rax*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_CreateTimer(%struct.RedisModuleCtx* nocapture readonly, i64, void (%struct.RedisModuleCtx*, i8*)*, i8*) #0 !dbg !7950 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.raxIterator, align 8
  %7 = tail call i8* @zmalloc(i64 32) #11, !dbg !7970
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !7972
  %9 = bitcast %struct.RedisModule** %8 to i64*, !dbg !7972
  %10 = load i64, i64* %9, align 8, !dbg !7972, !tbaa !1156
  %11 = bitcast i8* %7 to i64*, !dbg !7973
  store i64 %10, i64* %11, align 8, !dbg !7973, !tbaa !7915
  %12 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !7974
  %13 = bitcast i8* %12 to void (%struct.RedisModuleCtx*, i8*)**, !dbg !7974
  store void (%struct.RedisModuleCtx*, i8*)* %2, void (%struct.RedisModuleCtx*, i8*)** %13, align 8, !dbg !7975, !tbaa !7924
  %14 = getelementptr inbounds i8, i8* %7, i64 16, !dbg !7976
  %15 = bitcast i8* %14 to i8**, !dbg !7976
  store i8* %3, i8** %15, align 8, !dbg !7977, !tbaa !7926
  %16 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !7978
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !7978, !tbaa !1168
  %18 = getelementptr inbounds %struct.client, %struct.client* %17, i64 0, i32 2, !dbg !7979
  %19 = load %struct.redisDb*, %struct.redisDb** %18, align 8, !dbg !7979, !tbaa !1271
  %20 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %19, i64 0, i32 5, !dbg !7980
  %21 = load i32, i32* %20, align 8, !dbg !7980, !tbaa !1273
  %22 = getelementptr inbounds i8, i8* %7, i64 24, !dbg !7981
  %23 = bitcast i8* %22 to i32*, !dbg !7981
  store i32 %21, i32* %23, align 8, !dbg !7982, !tbaa !7921
  %24 = tail call i64 @ustime() #11, !dbg !7983
  %25 = mul nsw i64 %1, 1000, !dbg !7984
  %26 = add nsw i64 %24, %25, !dbg !7985
  %27 = bitcast i64* %5 to i8*, !dbg !7987
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6, !dbg !7987
  br label %28, !dbg !7988

; <label>:28:                                     ; preds = %28, %4
  %29 = phi i64 [ %26, %4 ], [ %35, %28 ], !dbg !7989
  %30 = call i64 @intrev64(i64 %29) #11, !dbg !7993
  store i64 %30, i64* %5, align 8, !dbg !7995, !tbaa !2327
  %31 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !7996, !tbaa !902
  %32 = call i8* @raxFind(%struct.rax* %31, i8* nonnull %27, i64 8) #11, !dbg !7997
  %33 = load i8*, i8** @raxNotFound, align 8, !dbg !7998, !tbaa !902
  %34 = icmp eq i8* %32, %33, !dbg !7999
  %35 = add i64 %29, 1, !dbg !8000
  br i1 %34, label %36, label %28, !dbg !8001, !llvm.loop !8002

; <label>:36:                                     ; preds = %28
  %37 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8004, !tbaa !902
  %38 = call i32 @raxInsert(%struct.rax* %37, i8* nonnull %27, i64 8, i8* %7, i8** null) #11, !dbg !8006
  %39 = load i64, i64* @aeTimer, align 8, !dbg !8007, !tbaa !1612
  %40 = icmp eq i64 %39, -1, !dbg !8008
  br i1 %40, label %57, label %41, !dbg !8009

; <label>:41:                                     ; preds = %36
  %42 = bitcast %struct.raxIterator* %6 to i8*, !dbg !8010
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %42) #6, !dbg !8010
  %43 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8011, !tbaa !902
  call void @raxStart(%struct.raxIterator* nonnull %6, %struct.rax* %43) #11, !dbg !8013
  %44 = call i32 @raxSeek(%struct.raxIterator* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i8* null, i64 0) #11, !dbg !8014
  %45 = call i32 @raxNext(%struct.raxIterator* nonnull %6) #11, !dbg !8015
  %46 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %6, i64 0, i32 2, !dbg !8016
  %47 = load i8*, i8** %46, align 8, !dbg !8016, !tbaa !7900
  %48 = call i32 @memcmp(i8* %47, i8* nonnull %27, i64 8) #11, !dbg !8018
  %49 = icmp eq i32 %48, 0, !dbg !8019
  br i1 %49, label %50, label %54, !dbg !8020

; <label>:50:                                     ; preds = %41
  %51 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !8021, !tbaa !8023
  %52 = load i64, i64* @aeTimer, align 8, !dbg !8024, !tbaa !1612
  %53 = call i32 @aeDeleteTimeEvent(%struct.aeEventLoop* %51, i64 %52) #11, !dbg !8025
  store i64 -1, i64* @aeTimer, align 8, !dbg !8026, !tbaa !1612
  br label %54, !dbg !8027

; <label>:54:                                     ; preds = %41, %50
  call void @raxStop(%struct.raxIterator* nonnull %6) #11, !dbg !8028
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %42) #6, !dbg !8029
  %55 = load i64, i64* @aeTimer, align 8, !dbg !8030, !tbaa !1612
  %56 = icmp eq i64 %55, -1, !dbg !8032
  br i1 %56, label %57, label %60, !dbg !8033

; <label>:57:                                     ; preds = %36, %54
  %58 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !8034, !tbaa !8023
  %59 = call i64 @aeCreateTimeEvent(%struct.aeEventLoop* %58, i64 %1, i32 (%struct.aeEventLoop*, i64, i8*)* nonnull @moduleTimerHandler, i8* null, void (%struct.aeEventLoop*, i8*)* null) #11, !dbg !8035
  store i64 %59, i64* @aeTimer, align 8, !dbg !8036, !tbaa !1612
  br label %60, !dbg !8037

; <label>:60:                                     ; preds = %57, %54
  %61 = load i64, i64* %5, align 8, !dbg !8038, !tbaa !2327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6, !dbg !8039
  ret i64 %61, !dbg !8040
}

; Function Attrs: noredzone
declare dso_local i8* @raxFind(%struct.rax*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxInsert(%struct.rax*, i8*, i64, i8*, i8**) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @aeDeleteTimeEvent(%struct.aeEventLoop*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @aeCreateTimeEvent(%struct.aeEventLoop*, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, i8*, void (%struct.aeEventLoop*, i8*)*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StopTimer(%struct.RedisModuleCtx* nocapture readonly, i64, i8**) #0 !dbg !8041 {
  %4 = alloca i64, align 8
  store i64 %1, i64* %4, align 8, !tbaa !2327
  %5 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8052, !tbaa !902
  %6 = bitcast i64* %4 to i8*, !dbg !8053
  %7 = call i8* @raxFind(%struct.rax* %5, i8* nonnull %6, i64 8) #11, !dbg !8054
  %8 = bitcast i8* %7 to %struct.RedisModuleTimer*, !dbg !8054
  %9 = load %struct.RedisModuleTimer*, %struct.RedisModuleTimer** bitcast (i8** @raxNotFound to %struct.RedisModuleTimer**), align 8, !dbg !8056, !tbaa !902
  %10 = icmp eq %struct.RedisModuleTimer* %9, %8, !dbg !8058
  br i1 %10, label %27, label %11, !dbg !8059

; <label>:11:                                     ; preds = %3
  %12 = bitcast i8* %7 to %struct.RedisModule**, !dbg !8060
  %13 = load %struct.RedisModule*, %struct.RedisModule** %12, align 8, !dbg !8060, !tbaa !7915
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !8061
  %15 = load %struct.RedisModule*, %struct.RedisModule** %14, align 8, !dbg !8061, !tbaa !1156
  %16 = icmp eq %struct.RedisModule* %13, %15, !dbg !8062
  br i1 %16, label %17, label %27, !dbg !8063

; <label>:17:                                     ; preds = %11
  %18 = icmp eq i8** %2, null, !dbg !8064
  br i1 %18, label %24, label %19, !dbg !8066

; <label>:19:                                     ; preds = %17
  %20 = getelementptr inbounds i8, i8* %7, i64 16, !dbg !8067
  %21 = bitcast i8* %20 to i64*, !dbg !8067
  %22 = load i64, i64* %21, align 8, !dbg !8067, !tbaa !7926
  %23 = bitcast i8** %2 to i64*, !dbg !8068
  store i64 %22, i64* %23, align 8, !dbg !8068, !tbaa !902
  br label %24, !dbg !8069

; <label>:24:                                     ; preds = %17, %19
  %25 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8070, !tbaa !902
  %26 = call i32 @raxRemove(%struct.rax* %25, i8* nonnull %6, i64 8, i8** null) #11, !dbg !8071
  call void @zfree(i8* nonnull %7) #11, !dbg !8072
  br label %27, !dbg !8073

; <label>:27:                                     ; preds = %3, %11, %24
  %28 = phi i32 [ 0, %24 ], [ 1, %11 ], [ 1, %3 ], !dbg !8074
  ret i32 %28, !dbg !8075
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_GetTimerInfo(%struct.RedisModuleCtx* nocapture readonly, i64, i64*, i8**) #0 !dbg !8076 {
  %5 = alloca i64, align 8
  store i64 %1, i64* %5, align 8, !tbaa !2327
  %6 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8093, !tbaa !902
  %7 = bitcast i64* %5 to i8*, !dbg !8094
  %8 = call i8* @raxFind(%struct.rax* %6, i8* nonnull %7, i64 8) #11, !dbg !8095
  %9 = bitcast i8* %8 to %struct.RedisModuleTimer*, !dbg !8095
  %10 = load %struct.RedisModuleTimer*, %struct.RedisModuleTimer** bitcast (i8** @raxNotFound to %struct.RedisModuleTimer**), align 8, !dbg !8097, !tbaa !902
  %11 = icmp eq %struct.RedisModuleTimer* %10, %9, !dbg !8099
  br i1 %11, label %35, label %12, !dbg !8100

; <label>:12:                                     ; preds = %4
  %13 = bitcast i8* %8 to %struct.RedisModule**, !dbg !8101
  %14 = load %struct.RedisModule*, %struct.RedisModule** %13, align 8, !dbg !8101, !tbaa !7915
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !8102
  %16 = load %struct.RedisModule*, %struct.RedisModule** %15, align 8, !dbg !8102, !tbaa !1156
  %17 = icmp eq %struct.RedisModule* %14, %16, !dbg !8103
  br i1 %17, label %18, label %35, !dbg !8104

; <label>:18:                                     ; preds = %12
  %19 = icmp eq i64* %2, null, !dbg !8105
  br i1 %19, label %28, label %20, !dbg !8106

; <label>:20:                                     ; preds = %18
  %21 = load i64, i64* %5, align 8, !dbg !8107, !tbaa !2327
  %22 = call i64 @intrev64(i64 %21) #11, !dbg !8107
  %23 = call i64 @ustime() #11, !dbg !8108
  %24 = sub i64 %22, %23, !dbg !8109
  %25 = icmp sgt i64 %24, 0, !dbg !8111
  %26 = select i1 %25, i64 %24, i64 0, !dbg !8111
  %27 = udiv i64 %26, 1000, !dbg !8112
  store i64 %27, i64* %2, align 8, !dbg !8113, !tbaa !2327
  br label %28, !dbg !8114

; <label>:28:                                     ; preds = %18, %20
  %29 = icmp eq i8** %3, null, !dbg !8115
  br i1 %29, label %35, label %30, !dbg !8117

; <label>:30:                                     ; preds = %28
  %31 = getelementptr inbounds i8, i8* %8, i64 16, !dbg !8118
  %32 = bitcast i8* %31 to i64*, !dbg !8118
  %33 = load i64, i64* %32, align 8, !dbg !8118, !tbaa !7926
  %34 = bitcast i8** %3 to i64*, !dbg !8119
  store i64 %33, i64* %34, align 8, !dbg !8119, !tbaa !902
  br label %35, !dbg !8120

; <label>:35:                                     ; preds = %30, %28, %4, %12
  %36 = phi i32 [ 1, %12 ], [ 1, %4 ], [ 0, %28 ], [ 0, %30 ], !dbg !8121
  ret i32 %36, !dbg !8122
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleDict* @RM_CreateDict(%struct.RedisModuleCtx*) #0 !dbg !8123 {
  %2 = tail call i8* @zmalloc(i64 8) #11, !dbg !8131
  %3 = bitcast i8* %2 to %struct.RedisModuleDict*, !dbg !8131
  %4 = tail call %struct.rax* @raxNew() #11, !dbg !8133
  %5 = bitcast i8* %2 to %struct.rax**, !dbg !8134
  store %struct.rax* %4, %struct.rax** %5, align 8, !dbg !8135, !tbaa !1224
  %6 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !8136
  br i1 %6, label %40, label %7, !dbg !8138

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !8143
  %9 = load i32, i32* %8, align 8, !dbg !8143, !tbaa !1164
  %10 = and i32 %9, 2, !dbg !8144
  %11 = icmp eq i32 %10, 0, !dbg !8144
  br i1 %11, label %40, label %12, !dbg !8145

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !8146
  %14 = load i32, i32* %13, align 4, !dbg !8146, !tbaa !1187
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !8147
  %16 = load i32, i32* %15, align 8, !dbg !8147, !tbaa !1238
  %17 = icmp eq i32 %14, %16, !dbg !8148
  br i1 %17, label %21, label %18, !dbg !8149

; <label>:18:                                     ; preds = %12
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %20 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %19, align 8, !dbg !8150, !tbaa !1191
  br label %33, !dbg !8149

; <label>:21:                                     ; preds = %12
  %22 = shl nsw i32 %14, 1, !dbg !8151
  %23 = icmp slt i32 %14, 8, !dbg !8152
  %24 = select i1 %23, i32 16, i32 %22, !dbg !8153
  store i32 %24, i32* %15, align 8, !dbg !8154, !tbaa !1238
  %25 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !8155
  %26 = bitcast %struct.AutoMemEntry** %25 to i8**, !dbg !8155
  %27 = load i8*, i8** %26, align 8, !dbg !8155, !tbaa !1191
  %28 = sext i32 %24 to i64, !dbg !8156
  %29 = shl nsw i64 %28, 4, !dbg !8157
  %30 = tail call i8* @zrealloc(i8* %27, i64 %29) #11, !dbg !8158
  store i8* %30, i8** %26, align 8, !dbg !8159, !tbaa !1191
  %31 = bitcast i8* %30 to %struct.AutoMemEntry*, !dbg !8160
  %32 = load i32, i32* %13, align 4, !dbg !8161, !tbaa !1187
  br label %33, !dbg !8160

; <label>:33:                                     ; preds = %21, %18
  %34 = phi i32 [ %14, %18 ], [ %32, %21 ], !dbg !8161
  %35 = phi %struct.AutoMemEntry* [ %20, %18 ], [ %31, %21 ], !dbg !8150
  %36 = sext i32 %34 to i64, !dbg !8162
  %37 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %35, i64 %36, i32 1, !dbg !8163
  store i32 4, i32* %37, align 8, !dbg !8164, !tbaa !1197
  %38 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %35, i64 %36, i32 0, !dbg !8165
  store i8* %2, i8** %38, align 8, !dbg !8166, !tbaa !1193
  %39 = add nsw i32 %34, 1, !dbg !8167
  store i32 %39, i32* %13, align 4, !dbg !8167, !tbaa !1187
  br label %40, !dbg !8168

; <label>:40:                                     ; preds = %33, %7, %1
  ret %struct.RedisModuleDict* %3, !dbg !8169
}

; Function Attrs: noredzone
declare dso_local %struct.rax* @raxNew() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @raxFree(%struct.rax*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_DictSize(%struct.RedisModuleDict* nocapture readonly) #0 !dbg !8170 {
  %2 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8176
  %3 = load %struct.rax*, %struct.rax** %2, align 8, !dbg !8176, !tbaa !1224
  %4 = tail call i64 @raxSize(%struct.rax* %3) #11, !dbg !8177
  ret i64 %4, !dbg !8178
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictSetC(%struct.RedisModuleDict* nocapture readonly, i8*, i64, i8*) #0 !dbg !8179 {
  %5 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8192
  %6 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !8192, !tbaa !1224
  %7 = tail call i32 @raxTryInsert(%struct.rax* %6, i8* %1, i64 %2, i8* %3, i8** null) #11, !dbg !8193
  %8 = icmp ne i32 %7, 1, !dbg !8195
  %9 = zext i1 %8 to i32, !dbg !8196
  ret i32 %9, !dbg !8197
}

; Function Attrs: noredzone
declare dso_local i32 @raxTryInsert(%struct.rax*, i8*, i64, i8*, i8**) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictReplaceC(%struct.RedisModuleDict* nocapture readonly, i8*, i64, i8*) #0 !dbg !8198 {
  %5 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8209
  %6 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !8209, !tbaa !1224
  %7 = tail call i32 @raxInsert(%struct.rax* %6, i8* %1, i64 %2, i8* %3, i8** null) #11, !dbg !8210
  %8 = icmp ne i32 %7, 1, !dbg !8212
  %9 = zext i1 %8 to i32, !dbg !8213
  ret i32 %9, !dbg !8214
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictSet(%struct.RedisModuleDict* nocapture readonly, %struct.redisObject* nocapture readonly, i8*) #0 !dbg !8215 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !8225
  %5 = load i8*, i8** %4, align 8, !dbg !8225, !tbaa !1041
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8228
  %7 = load i8, i8* %6, align 1, !dbg !8228, !tbaa !1123
  %8 = trunc i8 %7 to i3, !dbg !8230
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8230

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8231
  %11 = zext i8 %10 to i64, !dbg !8231
  br label %30, !dbg !8232

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8233
  %14 = load i8, i8* %13, align 1, !dbg !8234, !tbaa !1123
  %15 = zext i8 %14 to i64, !dbg !8233
  br label %30, !dbg !8235

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8236
  %18 = bitcast i8* %17 to i16*, !dbg !8237
  %19 = load i16, i16* %18, align 1, !dbg !8237, !tbaa !2350
  %20 = zext i16 %19 to i64, !dbg !8236
  br label %30, !dbg !8238

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8239
  %23 = bitcast i8* %22 to i32*, !dbg !8240
  %24 = load i32, i32* %23, align 1, !dbg !8240, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8239
  br label %30, !dbg !8241

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8242
  %28 = bitcast i8* %27 to i64*, !dbg !8243
  %29 = load i64, i64* %28, align 1, !dbg !8243, !tbaa !2327
  br label %30, !dbg !8244

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8245
  %32 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8251
  %33 = load %struct.rax*, %struct.rax** %32, align 8, !dbg !8251, !tbaa !1224
  %34 = tail call i32 @raxTryInsert(%struct.rax* %33, i8* %5, i64 %31, i8* %2, i8** null) #11, !dbg !8252
  %35 = icmp ne i32 %34, 1, !dbg !8254
  %36 = zext i1 %35 to i32, !dbg !8255
  ret i32 %36, !dbg !8256
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictReplace(%struct.RedisModuleDict* nocapture readonly, %struct.redisObject* nocapture readonly, i8*) #0 !dbg !8257 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !8265
  %5 = load i8*, i8** %4, align 8, !dbg !8265, !tbaa !1041
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8268
  %7 = load i8, i8* %6, align 1, !dbg !8268, !tbaa !1123
  %8 = trunc i8 %7 to i3, !dbg !8270
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8270

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8271
  %11 = zext i8 %10 to i64, !dbg !8271
  br label %30, !dbg !8272

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8273
  %14 = load i8, i8* %13, align 1, !dbg !8274, !tbaa !1123
  %15 = zext i8 %14 to i64, !dbg !8273
  br label %30, !dbg !8275

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8276
  %18 = bitcast i8* %17 to i16*, !dbg !8277
  %19 = load i16, i16* %18, align 1, !dbg !8277, !tbaa !2350
  %20 = zext i16 %19 to i64, !dbg !8276
  br label %30, !dbg !8278

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8279
  %23 = bitcast i8* %22 to i32*, !dbg !8280
  %24 = load i32, i32* %23, align 1, !dbg !8280, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8279
  br label %30, !dbg !8281

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8282
  %28 = bitcast i8* %27 to i64*, !dbg !8283
  %29 = load i64, i64* %28, align 1, !dbg !8283, !tbaa !2327
  br label %30, !dbg !8284

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8285
  %32 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8291
  %33 = load %struct.rax*, %struct.rax** %32, align 8, !dbg !8291, !tbaa !1224
  %34 = tail call i32 @raxInsert(%struct.rax* %33, i8* %5, i64 %31, i8* %2, i8** null) #11, !dbg !8292
  %35 = icmp ne i32 %34, 1, !dbg !8294
  %36 = zext i1 %35 to i32, !dbg !8295
  ret i32 %36, !dbg !8296
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_DictGetC(%struct.RedisModuleDict* nocapture readonly, i8*, i64, i32*) #0 !dbg !8297 {
  %5 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8310
  %6 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !8310, !tbaa !1224
  %7 = tail call i8* @raxFind(%struct.rax* %6, i8* %1, i64 %2) #11, !dbg !8311
  %8 = icmp eq i32* %3, null, !dbg !8313
  %9 = load i8*, i8** @raxNotFound, align 8, !dbg !8315, !tbaa !902
  br i1 %8, label %13, label %10, !dbg !8316

; <label>:10:                                     ; preds = %4
  %11 = icmp eq i8* %7, %9, !dbg !8317
  %12 = zext i1 %11 to i32, !dbg !8317
  store i32 %12, i32* %3, align 4, !dbg !8318, !tbaa !933
  br label %13, !dbg !8319

; <label>:13:                                     ; preds = %4, %10
  %14 = icmp eq i8* %7, %9, !dbg !8320
  %15 = select i1 %14, i8* null, i8* %7, !dbg !8321
  ret i8* %15, !dbg !8322
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_DictGet(%struct.RedisModuleDict* nocapture readonly, %struct.redisObject* nocapture readonly, i32*) #0 !dbg !8323 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !8333
  %5 = load i8*, i8** %4, align 8, !dbg !8333, !tbaa !1041
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8336
  %7 = load i8, i8* %6, align 1, !dbg !8336, !tbaa !1123
  %8 = trunc i8 %7 to i3, !dbg !8338
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8338

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8339
  %11 = zext i8 %10 to i64, !dbg !8339
  br label %30, !dbg !8340

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8341
  %14 = load i8, i8* %13, align 1, !dbg !8342, !tbaa !1123
  %15 = zext i8 %14 to i64, !dbg !8341
  br label %30, !dbg !8343

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8344
  %18 = bitcast i8* %17 to i16*, !dbg !8345
  %19 = load i16, i16* %18, align 1, !dbg !8345, !tbaa !2350
  %20 = zext i16 %19 to i64, !dbg !8344
  br label %30, !dbg !8346

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8347
  %23 = bitcast i8* %22 to i32*, !dbg !8348
  %24 = load i32, i32* %23, align 1, !dbg !8348, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8347
  br label %30, !dbg !8349

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8350
  %28 = bitcast i8* %27 to i64*, !dbg !8351
  %29 = load i64, i64* %28, align 1, !dbg !8351, !tbaa !2327
  br label %30, !dbg !8352

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8353
  %32 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8359
  %33 = load %struct.rax*, %struct.rax** %32, align 8, !dbg !8359, !tbaa !1224
  %34 = tail call i8* @raxFind(%struct.rax* %33, i8* %5, i64 %31) #11, !dbg !8360
  %35 = icmp eq i32* %2, null, !dbg !8362
  %36 = load i8*, i8** @raxNotFound, align 8, !dbg !8363, !tbaa !902
  br i1 %35, label %40, label %37, !dbg !8364

; <label>:37:                                     ; preds = %30
  %38 = icmp eq i8* %34, %36, !dbg !8365
  %39 = zext i1 %38 to i32, !dbg !8365
  store i32 %39, i32* %2, align 4, !dbg !8366, !tbaa !933
  br label %40, !dbg !8367

; <label>:40:                                     ; preds = %30, %37
  %41 = icmp eq i8* %34, %36, !dbg !8368
  %42 = select i1 %41, i8* null, i8* %34, !dbg !8369
  ret i8* %42, !dbg !8370
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictDelC(%struct.RedisModuleDict* nocapture readonly, i8*, i64, i8*) #0 !dbg !8371 {
  %5 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8382
  %6 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !8382, !tbaa !1224
  %7 = bitcast i8* %3 to i8**, !dbg !8383
  %8 = tail call i32 @raxRemove(%struct.rax* %6, i8* %1, i64 %2, i8** %7) #11, !dbg !8384
  %9 = icmp eq i32 %8, 0, !dbg !8386
  %10 = zext i1 %9 to i32, !dbg !8386
  ret i32 %10, !dbg !8387
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictDel(%struct.RedisModuleDict* nocapture readonly, %struct.redisObject* nocapture readonly, i8*) #0 !dbg !8388 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !8396
  %5 = load i8*, i8** %4, align 8, !dbg !8396, !tbaa !1041
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8399
  %7 = load i8, i8* %6, align 1, !dbg !8399, !tbaa !1123
  %8 = trunc i8 %7 to i3, !dbg !8401
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8401

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8402
  %11 = zext i8 %10 to i64, !dbg !8402
  br label %30, !dbg !8403

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8404
  %14 = load i8, i8* %13, align 1, !dbg !8405, !tbaa !1123
  %15 = zext i8 %14 to i64, !dbg !8404
  br label %30, !dbg !8406

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8407
  %18 = bitcast i8* %17 to i16*, !dbg !8408
  %19 = load i16, i16* %18, align 1, !dbg !8408, !tbaa !2350
  %20 = zext i16 %19 to i64, !dbg !8407
  br label %30, !dbg !8409

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8410
  %23 = bitcast i8* %22 to i32*, !dbg !8411
  %24 = load i32, i32* %23, align 1, !dbg !8411, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8410
  br label %30, !dbg !8412

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8413
  %28 = bitcast i8* %27 to i64*, !dbg !8414
  %29 = load i64, i64* %28, align 1, !dbg !8414, !tbaa !2327
  br label %30, !dbg !8415

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8416
  %32 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8422
  %33 = load %struct.rax*, %struct.rax** %32, align 8, !dbg !8422, !tbaa !1224
  %34 = bitcast i8* %2 to i8**, !dbg !8423
  %35 = tail call i32 @raxRemove(%struct.rax* %33, i8* %5, i64 %31, i8** %34) #11, !dbg !8424
  %36 = icmp eq i32 %35, 0, !dbg !8426
  %37 = zext i1 %36 to i32, !dbg !8426
  ret i32 %37, !dbg !8427
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleDictIter* @RM_DictIteratorStartC(%struct.RedisModuleDict*, i8*, i8*, i64) #0 !dbg !8428 {
  %5 = tail call i8* @zmalloc(i64 488) #11, !dbg !8447
  %6 = bitcast i8* %5 to %struct.RedisModuleDictIter*, !dbg !8447
  %7 = bitcast i8* %5 to %struct.RedisModuleDict**, !dbg !8449
  store %struct.RedisModuleDict* %0, %struct.RedisModuleDict** %7, align 8, !dbg !8450, !tbaa !8451
  %8 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !8453
  %9 = bitcast i8* %8 to %struct.raxIterator*, !dbg !8453
  %10 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8454
  %11 = load %struct.rax*, %struct.rax** %10, align 8, !dbg !8454, !tbaa !1224
  tail call void @raxStart(%struct.raxIterator* nonnull %9, %struct.rax* %11) #11, !dbg !8455
  %12 = tail call i32 @raxSeek(%struct.raxIterator* nonnull %9, i8* %1, i8* %2, i64 %3) #11, !dbg !8456
  ret %struct.RedisModuleDictIter* %6, !dbg !8457
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleDictIter* @RM_DictIteratorStart(%struct.RedisModuleDict*, i8*, %struct.redisObject* nocapture readonly) #0 !dbg !8458 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !8468
  %5 = load i8*, i8** %4, align 8, !dbg !8468, !tbaa !1041
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8471
  %7 = load i8, i8* %6, align 1, !dbg !8471, !tbaa !1123
  %8 = trunc i8 %7 to i3, !dbg !8473
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8473

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8474
  %11 = zext i8 %10 to i64, !dbg !8474
  br label %30, !dbg !8475

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8476
  %14 = load i8, i8* %13, align 1, !dbg !8477, !tbaa !1123
  %15 = zext i8 %14 to i64, !dbg !8476
  br label %30, !dbg !8478

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8479
  %18 = bitcast i8* %17 to i16*, !dbg !8480
  %19 = load i16, i16* %18, align 1, !dbg !8480, !tbaa !2350
  %20 = zext i16 %19 to i64, !dbg !8479
  br label %30, !dbg !8481

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8482
  %23 = bitcast i8* %22 to i32*, !dbg !8483
  %24 = load i32, i32* %23, align 1, !dbg !8483, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8482
  br label %30, !dbg !8484

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8485
  %28 = bitcast i8* %27 to i64*, !dbg !8486
  %29 = load i64, i64* %28, align 1, !dbg !8486, !tbaa !2327
  br label %30, !dbg !8487

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8488
  %32 = tail call i8* @zmalloc(i64 488) #11, !dbg !8494
  %33 = bitcast i8* %32 to %struct.RedisModuleDictIter*, !dbg !8494
  %34 = bitcast i8* %32 to %struct.RedisModuleDict**, !dbg !8496
  store %struct.RedisModuleDict* %0, %struct.RedisModuleDict** %34, align 8, !dbg !8497, !tbaa !8451
  %35 = getelementptr inbounds i8, i8* %32, i64 8, !dbg !8498
  %36 = bitcast i8* %35 to %struct.raxIterator*, !dbg !8498
  %37 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8499
  %38 = load %struct.rax*, %struct.rax** %37, align 8, !dbg !8499, !tbaa !1224
  tail call void @raxStart(%struct.raxIterator* nonnull %36, %struct.rax* %38) #11, !dbg !8500
  %39 = tail call i32 @raxSeek(%struct.raxIterator* nonnull %36, i8* %1, i8* %5, i64 %31) #11, !dbg !8501
  ret %struct.RedisModuleDictIter* %33, !dbg !8502
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_DictIteratorStop(%struct.RedisModuleDictIter*) #0 !dbg !8503 {
  %2 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8509
  tail call void @raxStop(%struct.raxIterator* nonnull %2) #11, !dbg !8510
  %3 = bitcast %struct.RedisModuleDictIter* %0 to i8*, !dbg !8511
  tail call void @zfree(i8* %3) #11, !dbg !8512
  ret void, !dbg !8513
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictIteratorReseekC(%struct.RedisModuleDictIter*, i8*, i8*, i64) #0 !dbg !8514 {
  %5 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8526
  %6 = tail call i32 @raxSeek(%struct.raxIterator* nonnull %5, i8* %1, i8* %2, i64 %3) #11, !dbg !8527
  ret i32 %6, !dbg !8528
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictIteratorReseek(%struct.RedisModuleDictIter*, i8*, %struct.redisObject* nocapture readonly) #0 !dbg !8529 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !8539
  %5 = load i8*, i8** %4, align 8, !dbg !8539, !tbaa !1041
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8542
  %7 = load i8, i8* %6, align 1, !dbg !8542, !tbaa !1123
  %8 = trunc i8 %7 to i3, !dbg !8544
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8544

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8545
  %11 = zext i8 %10 to i64, !dbg !8545
  br label %30, !dbg !8546

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8547
  %14 = load i8, i8* %13, align 1, !dbg !8548, !tbaa !1123
  %15 = zext i8 %14 to i64, !dbg !8547
  br label %30, !dbg !8549

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8550
  %18 = bitcast i8* %17 to i16*, !dbg !8551
  %19 = load i16, i16* %18, align 1, !dbg !8551, !tbaa !2350
  %20 = zext i16 %19 to i64, !dbg !8550
  br label %30, !dbg !8552

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8553
  %23 = bitcast i8* %22 to i32*, !dbg !8554
  %24 = load i32, i32* %23, align 1, !dbg !8554, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8553
  br label %30, !dbg !8555

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8556
  %28 = bitcast i8* %27 to i64*, !dbg !8557
  %29 = load i64, i64* %28, align 1, !dbg !8557, !tbaa !2327
  br label %30, !dbg !8558

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8559
  %32 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8565
  %33 = tail call i32 @raxSeek(%struct.raxIterator* nonnull %32, i8* %1, i8* %5, i64 %31) #11, !dbg !8566
  ret i32 %33, !dbg !8567
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_DictNextC(%struct.RedisModuleDictIter*, i64*, i8**) #0 !dbg !8568 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8578
  %5 = tail call i32 @raxNext(%struct.raxIterator* nonnull %4) #11, !dbg !8580
  %6 = icmp eq i32 %5, 0, !dbg !8580
  br i1 %6, label %22, label %7, !dbg !8581

; <label>:7:                                      ; preds = %3
  %8 = icmp eq i64* %1, null, !dbg !8582
  br i1 %8, label %12, label %9, !dbg !8584

; <label>:9:                                      ; preds = %7
  %10 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 4, !dbg !8585
  %11 = load i64, i64* %10, align 8, !dbg !8585, !tbaa !8586
  store i64 %11, i64* %1, align 8, !dbg !8587, !tbaa !2327
  br label %12, !dbg !8588

; <label>:12:                                     ; preds = %7, %9
  %13 = icmp eq i8** %2, null, !dbg !8589
  br i1 %13, label %19, label %14, !dbg !8591

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 3, !dbg !8592
  %16 = bitcast i8** %15 to i64*, !dbg !8592
  %17 = load i64, i64* %16, align 8, !dbg !8592, !tbaa !8593
  %18 = bitcast i8** %2 to i64*, !dbg !8594
  store i64 %17, i64* %18, align 8, !dbg !8594, !tbaa !902
  br label %19, !dbg !8595

; <label>:19:                                     ; preds = %12, %14
  %20 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 2, !dbg !8596
  %21 = load i8*, i8** %20, align 8, !dbg !8596, !tbaa !8597
  br label %22, !dbg !8598

; <label>:22:                                     ; preds = %3, %19
  %23 = phi i8* [ %21, %19 ], [ null, %3 ], !dbg !8599
  ret i8* %23, !dbg !8600
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_DictPrevC(%struct.RedisModuleDictIter*, i64*, i8**) #0 !dbg !8601 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8609
  %5 = tail call i32 @raxPrev(%struct.raxIterator* nonnull %4) #11, !dbg !8611
  %6 = icmp eq i32 %5, 0, !dbg !8611
  br i1 %6, label %22, label %7, !dbg !8612

; <label>:7:                                      ; preds = %3
  %8 = icmp eq i64* %1, null, !dbg !8613
  br i1 %8, label %12, label %9, !dbg !8615

; <label>:9:                                      ; preds = %7
  %10 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 4, !dbg !8616
  %11 = load i64, i64* %10, align 8, !dbg !8616, !tbaa !8586
  store i64 %11, i64* %1, align 8, !dbg !8617, !tbaa !2327
  br label %12, !dbg !8618

; <label>:12:                                     ; preds = %7, %9
  %13 = icmp eq i8** %2, null, !dbg !8619
  br i1 %13, label %19, label %14, !dbg !8621

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 3, !dbg !8622
  %16 = bitcast i8** %15 to i64*, !dbg !8622
  %17 = load i64, i64* %16, align 8, !dbg !8622, !tbaa !8593
  %18 = bitcast i8** %2 to i64*, !dbg !8623
  store i64 %17, i64* %18, align 8, !dbg !8623, !tbaa !902
  br label %19, !dbg !8624

; <label>:19:                                     ; preds = %12, %14
  %20 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 2, !dbg !8625
  %21 = load i8*, i8** %20, align 8, !dbg !8625, !tbaa !8597
  br label %22, !dbg !8626

; <label>:22:                                     ; preds = %3, %19
  %23 = phi i8* [ %21, %19 ], [ null, %3 ], !dbg !8627
  ret i8* %23, !dbg !8628
}

; Function Attrs: noredzone
declare dso_local i32 @raxPrev(%struct.raxIterator*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_DictNext(%struct.RedisModuleCtx*, %struct.RedisModuleDictIter*, i8**) #0 !dbg !8629 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, !dbg !8644
  %5 = tail call i32 @raxNext(%struct.raxIterator* nonnull %4) #11, !dbg !8645
  %6 = icmp eq i32 %5, 0, !dbg !8645
  br i1 %6, label %57, label %7, !dbg !8646

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 4, !dbg !8647
  %9 = load i64, i64* %8, align 8, !dbg !8647, !tbaa !8586
  %10 = icmp eq i8** %2, null, !dbg !8648
  br i1 %10, label %16, label %11, !dbg !8649

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 3, !dbg !8650
  %13 = bitcast i8** %12 to i64*, !dbg !8650
  %14 = load i64, i64* %13, align 8, !dbg !8650, !tbaa !8593
  %15 = bitcast i8** %2 to i64*, !dbg !8651
  store i64 %14, i64* %15, align 8, !dbg !8651, !tbaa !902
  br label %16, !dbg !8652

; <label>:16:                                     ; preds = %7, %11
  %17 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 2, !dbg !8653
  %18 = load i8*, i8** %17, align 8, !dbg !8653, !tbaa !8597
  %19 = icmp eq i8* %18, null, !dbg !8655
  br i1 %19, label %57, label %20, !dbg !8657

; <label>:20:                                     ; preds = %16
  %21 = tail call %struct.redisObject* @createStringObject(i8* nonnull %18, i64 %9) #11, !dbg !8663
  %22 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !8665
  br i1 %22, label %57, label %23, !dbg !8666

; <label>:23:                                     ; preds = %20
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !8671
  %25 = load i32, i32* %24, align 8, !dbg !8671, !tbaa !1164
  %26 = and i32 %25, 2, !dbg !8672
  %27 = icmp eq i32 %26, 0, !dbg !8672
  br i1 %27, label %57, label %28, !dbg !8673

; <label>:28:                                     ; preds = %23
  %29 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !8674
  %30 = load i32, i32* %29, align 4, !dbg !8674, !tbaa !1187
  %31 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !8675
  %32 = load i32, i32* %31, align 8, !dbg !8675, !tbaa !1238
  %33 = icmp eq i32 %30, %32, !dbg !8676
  br i1 %33, label %37, label %34, !dbg !8677

; <label>:34:                                     ; preds = %28
  %35 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %36 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %35, align 8, !dbg !8678, !tbaa !1191
  br label %49, !dbg !8677

; <label>:37:                                     ; preds = %28
  %38 = shl nsw i32 %30, 1, !dbg !8679
  %39 = icmp slt i32 %30, 8, !dbg !8680
  %40 = select i1 %39, i32 16, i32 %38, !dbg !8681
  store i32 %40, i32* %31, align 8, !dbg !8682, !tbaa !1238
  %41 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !8683
  %42 = bitcast %struct.AutoMemEntry** %41 to i8**, !dbg !8683
  %43 = load i8*, i8** %42, align 8, !dbg !8683, !tbaa !1191
  %44 = sext i32 %40 to i64, !dbg !8684
  %45 = shl nsw i64 %44, 4, !dbg !8685
  %46 = tail call i8* @zrealloc(i8* %43, i64 %45) #11, !dbg !8686
  store i8* %46, i8** %42, align 8, !dbg !8687, !tbaa !1191
  %47 = bitcast i8* %46 to %struct.AutoMemEntry*, !dbg !8688
  %48 = load i32, i32* %29, align 4, !dbg !8689, !tbaa !1187
  br label %49, !dbg !8688

; <label>:49:                                     ; preds = %37, %34
  %50 = phi i32 [ %30, %34 ], [ %48, %37 ], !dbg !8689
  %51 = phi %struct.AutoMemEntry* [ %36, %34 ], [ %47, %37 ], !dbg !8678
  %52 = sext i32 %50 to i64, !dbg !8690
  %53 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %51, i64 %52, i32 1, !dbg !8691
  store i32 1, i32* %53, align 8, !dbg !8692, !tbaa !1197
  %54 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %51, i64 %52, i32 0, !dbg !8693
  %55 = bitcast i8** %54 to %struct.redisObject**, !dbg !8694
  store %struct.redisObject* %21, %struct.redisObject** %55, align 8, !dbg !8694, !tbaa !1193
  %56 = add nsw i32 %50, 1, !dbg !8695
  store i32 %56, i32* %29, align 4, !dbg !8695, !tbaa !1187
  br label %57, !dbg !8696

; <label>:57:                                     ; preds = %3, %49, %23, %20, %16
  %58 = phi %struct.redisObject* [ null, %16 ], [ %21, %20 ], [ %21, %23 ], [ %21, %49 ], [ null, %3 ], !dbg !8697
  ret %struct.redisObject* %58, !dbg !8698
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_DictPrev(%struct.RedisModuleCtx*, %struct.RedisModuleDictIter*, i8**) #0 !dbg !8699 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, !dbg !8712
  %5 = tail call i32 @raxPrev(%struct.raxIterator* nonnull %4) #11, !dbg !8713
  %6 = icmp eq i32 %5, 0, !dbg !8713
  br i1 %6, label %57, label %7, !dbg !8714

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 4, !dbg !8715
  %9 = load i64, i64* %8, align 8, !dbg !8715, !tbaa !8586
  %10 = icmp eq i8** %2, null, !dbg !8716
  br i1 %10, label %16, label %11, !dbg !8717

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 3, !dbg !8718
  %13 = bitcast i8** %12 to i64*, !dbg !8718
  %14 = load i64, i64* %13, align 8, !dbg !8718, !tbaa !8593
  %15 = bitcast i8** %2 to i64*, !dbg !8719
  store i64 %14, i64* %15, align 8, !dbg !8719, !tbaa !902
  br label %16, !dbg !8720

; <label>:16:                                     ; preds = %7, %11
  %17 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 2, !dbg !8721
  %18 = load i8*, i8** %17, align 8, !dbg !8721, !tbaa !8597
  %19 = icmp eq i8* %18, null, !dbg !8723
  br i1 %19, label %57, label %20, !dbg !8725

; <label>:20:                                     ; preds = %16
  %21 = tail call %struct.redisObject* @createStringObject(i8* nonnull %18, i64 %9) #11, !dbg !8731
  %22 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !8733
  br i1 %22, label %57, label %23, !dbg !8734

; <label>:23:                                     ; preds = %20
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !8739
  %25 = load i32, i32* %24, align 8, !dbg !8739, !tbaa !1164
  %26 = and i32 %25, 2, !dbg !8740
  %27 = icmp eq i32 %26, 0, !dbg !8740
  br i1 %27, label %57, label %28, !dbg !8741

; <label>:28:                                     ; preds = %23
  %29 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !8742
  %30 = load i32, i32* %29, align 4, !dbg !8742, !tbaa !1187
  %31 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !8743
  %32 = load i32, i32* %31, align 8, !dbg !8743, !tbaa !1238
  %33 = icmp eq i32 %30, %32, !dbg !8744
  br i1 %33, label %37, label %34, !dbg !8745

; <label>:34:                                     ; preds = %28
  %35 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %36 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %35, align 8, !dbg !8746, !tbaa !1191
  br label %49, !dbg !8745

; <label>:37:                                     ; preds = %28
  %38 = shl nsw i32 %30, 1, !dbg !8747
  %39 = icmp slt i32 %30, 8, !dbg !8748
  %40 = select i1 %39, i32 16, i32 %38, !dbg !8749
  store i32 %40, i32* %31, align 8, !dbg !8750, !tbaa !1238
  %41 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !8751
  %42 = bitcast %struct.AutoMemEntry** %41 to i8**, !dbg !8751
  %43 = load i8*, i8** %42, align 8, !dbg !8751, !tbaa !1191
  %44 = sext i32 %40 to i64, !dbg !8752
  %45 = shl nsw i64 %44, 4, !dbg !8753
  %46 = tail call i8* @zrealloc(i8* %43, i64 %45) #11, !dbg !8754
  store i8* %46, i8** %42, align 8, !dbg !8755, !tbaa !1191
  %47 = bitcast i8* %46 to %struct.AutoMemEntry*, !dbg !8756
  %48 = load i32, i32* %29, align 4, !dbg !8757, !tbaa !1187
  br label %49, !dbg !8756

; <label>:49:                                     ; preds = %37, %34
  %50 = phi i32 [ %30, %34 ], [ %48, %37 ], !dbg !8757
  %51 = phi %struct.AutoMemEntry* [ %36, %34 ], [ %47, %37 ], !dbg !8746
  %52 = sext i32 %50 to i64, !dbg !8758
  %53 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %51, i64 %52, i32 1, !dbg !8759
  store i32 1, i32* %53, align 8, !dbg !8760, !tbaa !1197
  %54 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %51, i64 %52, i32 0, !dbg !8761
  %55 = bitcast i8** %54 to %struct.redisObject**, !dbg !8762
  store %struct.redisObject* %21, %struct.redisObject** %55, align 8, !dbg !8762, !tbaa !1193
  %56 = add nsw i32 %50, 1, !dbg !8763
  store i32 %56, i32* %29, align 4, !dbg !8763, !tbaa !1187
  br label %57, !dbg !8764

; <label>:57:                                     ; preds = %3, %49, %23, %20, %16
  %58 = phi %struct.redisObject* [ null, %16 ], [ %21, %20 ], [ %21, %23 ], [ %21, %49 ], [ null, %3 ], !dbg !8765
  ret %struct.redisObject* %58, !dbg !8766
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictCompareC(%struct.RedisModuleDictIter*, i8*, i8*, i64) #0 !dbg !8767 {
  %5 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8778
  %6 = tail call i32 @raxEOF(%struct.raxIterator* nonnull %5) #11, !dbg !8780
  %7 = icmp eq i32 %6, 0, !dbg !8780
  br i1 %7, label %8, label %12, !dbg !8781

; <label>:8:                                      ; preds = %4
  %9 = tail call i32 @raxCompare(%struct.raxIterator* nonnull %5, i8* %1, i8* %2, i64 %3) #11, !dbg !8782
  %10 = icmp eq i32 %9, 0, !dbg !8784
  %11 = zext i1 %10 to i32, !dbg !8784
  br label %12

; <label>:12:                                     ; preds = %4, %8
  %13 = phi i32 [ %11, %8 ], [ 1, %4 ], !dbg !8785
  ret i32 %13, !dbg !8786
}

; Function Attrs: noredzone
declare dso_local i32 @raxEOF(%struct.raxIterator*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxCompare(%struct.raxIterator*, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictCompare(%struct.RedisModuleDictIter*, i8*, %struct.redisObject* nocapture readonly) #0 !dbg !8787 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8796
  %5 = tail call i32 @raxEOF(%struct.raxIterator* nonnull %4) #11, !dbg !8798
  %6 = icmp eq i32 %5, 0, !dbg !8798
  br i1 %6, label %7, label %39, !dbg !8799

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !8800
  %9 = load i8*, i8** %8, align 8, !dbg !8800, !tbaa !1041
  %10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !8803
  %11 = load i8, i8* %10, align 1, !dbg !8803, !tbaa !1123
  %12 = trunc i8 %11 to i3, !dbg !8805
  switch i3 %12, label %34 [
    i3 0, label %13
    i3 1, label %16
    i3 2, label %20
    i3 3, label %25
    i3 -4, label %30
  ], !dbg !8805

; <label>:13:                                     ; preds = %7
  %14 = lshr i8 %11, 3, !dbg !8806
  %15 = zext i8 %14 to i64, !dbg !8806
  br label %34, !dbg !8807

; <label>:16:                                     ; preds = %7
  %17 = getelementptr inbounds i8, i8* %9, i64 -3, !dbg !8808
  %18 = load i8, i8* %17, align 1, !dbg !8809, !tbaa !1123
  %19 = zext i8 %18 to i64, !dbg !8808
  br label %34, !dbg !8810

; <label>:20:                                     ; preds = %7
  %21 = getelementptr inbounds i8, i8* %9, i64 -5, !dbg !8811
  %22 = bitcast i8* %21 to i16*, !dbg !8812
  %23 = load i16, i16* %22, align 1, !dbg !8812, !tbaa !2350
  %24 = zext i16 %23 to i64, !dbg !8811
  br label %34, !dbg !8813

; <label>:25:                                     ; preds = %7
  %26 = getelementptr inbounds i8, i8* %9, i64 -9, !dbg !8814
  %27 = bitcast i8* %26 to i32*, !dbg !8815
  %28 = load i32, i32* %27, align 1, !dbg !8815, !tbaa !933
  %29 = zext i32 %28 to i64, !dbg !8814
  br label %34, !dbg !8816

; <label>:30:                                     ; preds = %7
  %31 = getelementptr inbounds i8, i8* %9, i64 -17, !dbg !8817
  %32 = bitcast i8* %31 to i64*, !dbg !8818
  %33 = load i64, i64* %32, align 1, !dbg !8818, !tbaa !2327
  br label %34, !dbg !8819

; <label>:34:                                     ; preds = %7, %13, %16, %20, %25, %30
  %35 = phi i64 [ %33, %30 ], [ %29, %25 ], [ %24, %20 ], [ %19, %16 ], [ %15, %13 ], [ 0, %7 ], !dbg !8820
  %36 = tail call i32 @raxCompare(%struct.raxIterator* nonnull %4, i8* %1, i8* %9, i64 %35) #11, !dbg !8821
  %37 = icmp eq i32 %36, 0, !dbg !8823
  %38 = zext i1 %37 to i32, !dbg !8823
  br label %39

; <label>:39:                                     ; preds = %3, %34
  %40 = phi i32 [ %38, %34 ], [ 1, %3 ], !dbg !8824
  ret i32 %40, !dbg !8825
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_GetRandomBytes(i8*, i64) #0 !dbg !8826 {
  tail call void @getRandomBytes(i8* %0, i64 %1) #11, !dbg !8834
  ret void, !dbg !8835
}

; Function Attrs: noredzone
declare dso_local void @getRandomBytes(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_GetRandomHexChars(i8*, i64) #0 !dbg !8836 {
  tail call void @getRandomHexChars(i8* %0, i64 %1) #11, !dbg !8844
  ret void, !dbg !8845
}

; Function Attrs: noredzone
declare dso_local void @getRandomHexChars(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ExportSharedAPI(%struct.RedisModuleCtx* nocapture readonly, i8*, i8*) #0 !dbg !8846 {
  %4 = tail call i8* @zmalloc(i64 16) #11, !dbg !8863
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !8865
  %6 = bitcast %struct.RedisModule** %5 to i64*, !dbg !8865
  %7 = load i64, i64* %6, align 8, !dbg !8865, !tbaa !1156
  %8 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !8866
  %9 = bitcast i8* %8 to i64*, !dbg !8867
  store i64 %7, i64* %9, align 8, !dbg !8867, !tbaa !8868
  %10 = bitcast i8* %4 to i8**, !dbg !8870
  store i8* %2, i8** %10, align 8, !dbg !8871, !tbaa !8872
  %11 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !8873, !tbaa !8875
  %12 = tail call i32 @dictAdd(%struct.dict* %11, i8* %1, i8* %4) #11, !dbg !8876
  %13 = icmp eq i32 %12, 0, !dbg !8877
  br i1 %13, label %15, label %14, !dbg !8878

; <label>:14:                                     ; preds = %3
  tail call void @zfree(i8* %4) #11, !dbg !8879
  br label %15, !dbg !8881

; <label>:15:                                     ; preds = %3, %14
  %16 = phi i32 [ 1, %14 ], [ 0, %3 ], !dbg !8882
  ret i32 %16, !dbg !8883
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_GetSharedAPI(%struct.RedisModuleCtx* nocapture readonly, i8*) #0 !dbg !8884 {
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !8894, !tbaa !8875
  %4 = tail call %struct.dictEntry* @dictFind(%struct.dict* %3, i8* %1) #11, !dbg !8895
  %5 = icmp eq %struct.dictEntry* %4, null, !dbg !8897
  br i1 %5, label %34, label %6, !dbg !8899

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %4, i64 0, i32 1, i32 0, !dbg !8900
  %8 = bitcast i8** %7 to %struct.RedisModuleSharedAPI**, !dbg !8900
  %9 = load %struct.RedisModuleSharedAPI*, %struct.RedisModuleSharedAPI** %8, align 8, !dbg !8900, !tbaa !1123
  %10 = getelementptr inbounds %struct.RedisModuleSharedAPI, %struct.RedisModuleSharedAPI* %9, i64 0, i32 1, !dbg !8902
  %11 = load %struct.RedisModule*, %struct.RedisModule** %10, align 8, !dbg !8902, !tbaa !8868
  %12 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %11, i64 0, i32 5, !dbg !8904
  %13 = load %struct.list*, %struct.list** %12, align 8, !dbg !8904, !tbaa !1661
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !8905
  %15 = bitcast %struct.RedisModule** %14 to i8**, !dbg !8905
  %16 = load i8*, i8** %15, align 8, !dbg !8905, !tbaa !1156
  %17 = tail call %struct.listNode* @listSearchKey(%struct.list* %13, i8* %16) #11, !dbg !8906
  %18 = icmp eq %struct.listNode* %17, null, !dbg !8907
  br i1 %18, label %19, label %31, !dbg !8908

; <label>:19:                                     ; preds = %6
  %20 = load %struct.RedisModule*, %struct.RedisModule** %10, align 8, !dbg !8909, !tbaa !8868
  %21 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %20, i64 0, i32 5, !dbg !8911
  %22 = load %struct.list*, %struct.list** %21, align 8, !dbg !8911, !tbaa !1661
  %23 = load i8*, i8** %15, align 8, !dbg !8912, !tbaa !1156
  %24 = tail call %struct.list* @listAddNodeTail(%struct.list* %22, i8* %23) #11, !dbg !8913
  %25 = load %struct.RedisModule*, %struct.RedisModule** %14, align 8, !dbg !8914, !tbaa !1156
  %26 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %25, i64 0, i32 6, !dbg !8915
  %27 = load %struct.list*, %struct.list** %26, align 8, !dbg !8915, !tbaa !1665
  %28 = bitcast %struct.RedisModule** %10 to i8**, !dbg !8916
  %29 = load i8*, i8** %28, align 8, !dbg !8916, !tbaa !8868
  %30 = tail call %struct.list* @listAddNodeTail(%struct.list* %27, i8* %29) #11, !dbg !8917
  br label %31, !dbg !8918

; <label>:31:                                     ; preds = %19, %6
  %32 = getelementptr inbounds %struct.RedisModuleSharedAPI, %struct.RedisModuleSharedAPI* %9, i64 0, i32 0, !dbg !8919
  %33 = load i8*, i8** %32, align 8, !dbg !8919, !tbaa !8872
  br label %34

; <label>:34:                                     ; preds = %2, %31
  %35 = phi i8* [ %33, %31 ], [ null, %2 ], !dbg !8920
  ret i8* %35, !dbg !8921
}

; Function Attrs: noredzone
declare dso_local %struct.listNode* @listSearchKey(%struct.list*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleUnregisterSharedAPI(%struct.RedisModule* readnone) local_unnamed_addr #0 !dbg !8922 {
  %2 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !8935, !tbaa !8875
  %3 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %2) #11, !dbg !8936
  %4 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %3) #11, !dbg !8938
  %5 = icmp eq %struct.dictEntry* %4, null, !dbg !8940
  br i1 %5, label %25, label %6, !dbg !8941

; <label>:6:                                      ; preds = %1, %21
  %7 = phi %struct.dictEntry* [ %23, %21 ], [ %4, %1 ]
  %8 = phi i32 [ %22, %21 ], [ 0, %1 ]
  %9 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %7, i64 0, i32 1, i32 0, !dbg !8942
  %10 = load i8*, i8** %9, align 8, !dbg !8942, !tbaa !1123
  %11 = getelementptr inbounds i8, i8* %10, i64 8, !dbg !8944
  %12 = bitcast i8* %11 to %struct.RedisModule**, !dbg !8944
  %13 = load %struct.RedisModule*, %struct.RedisModule** %12, align 8, !dbg !8944, !tbaa !8868
  %14 = icmp eq %struct.RedisModule* %13, %0, !dbg !8946
  br i1 %14, label %15, label %21, !dbg !8947

; <label>:15:                                     ; preds = %6
  %16 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %7, i64 0, i32 0, !dbg !8948
  %17 = load i8*, i8** %16, align 8, !dbg !8948, !tbaa !8949
  %18 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !8952, !tbaa !8875
  %19 = tail call i32 @dictDelete(%struct.dict* %18, i8* %17) #11, !dbg !8954
  tail call void @zfree(i8* %10) #11, !dbg !8955
  %20 = add nsw i32 %8, 1, !dbg !8956
  br label %21, !dbg !8957

; <label>:21:                                     ; preds = %15, %6
  %22 = phi i32 [ %20, %15 ], [ %8, %6 ], !dbg !8958
  %23 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %3) #11, !dbg !8938
  %24 = icmp eq %struct.dictEntry* %23, null, !dbg !8940
  br i1 %24, label %25, label %6, !dbg !8941, !llvm.loop !8959

; <label>:25:                                     ; preds = %21, %1
  %26 = phi i32 [ 0, %1 ], [ %22, %21 ], !dbg !8961
  tail call void @dictReleaseIterator(%struct.dictIterator* %3) #11, !dbg !8962
  ret i32 %26, !dbg !8963
}

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetSafeIterator(%struct.dict*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @dictDelete(%struct.dict*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleUnregisterUsedAPI(%struct.RedisModule*) local_unnamed_addr #0 !dbg !8964 {
  %2 = alloca %struct.listIter, align 8
  %3 = bitcast %struct.listIter* %2 to i8*, !dbg !8974
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #6, !dbg !8974
  %4 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 6, !dbg !8976
  %5 = load %struct.list*, %struct.list** %4, align 8, !dbg !8976, !tbaa !1665
  call void @listRewind(%struct.list* %5, %struct.listIter* nonnull %2) #11, !dbg !8978
  %6 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !8979
  %7 = icmp eq %struct.listNode* %6, null, !dbg !8981
  br i1 %7, label %27, label %8, !dbg !8981

; <label>:8:                                      ; preds = %1
  %9 = bitcast %struct.RedisModule* %0 to i8*
  br label %10, !dbg !8981

; <label>:10:                                     ; preds = %8, %23
  %11 = phi %struct.listNode* [ %6, %8 ], [ %25, %23 ]
  %12 = phi i32 [ 0, %8 ], [ %24, %23 ]
  %13 = getelementptr inbounds %struct.listNode, %struct.listNode* %11, i64 0, i32 2, !dbg !8982
  %14 = bitcast i8** %13 to %struct.RedisModule**, !dbg !8982
  %15 = load %struct.RedisModule*, %struct.RedisModule** %14, align 8, !dbg !8982, !tbaa !5585
  %16 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %15, i64 0, i32 5, !dbg !8984
  %17 = load %struct.list*, %struct.list** %16, align 8, !dbg !8984, !tbaa !1661
  %18 = call %struct.listNode* @listSearchKey(%struct.list* %17, i8* %9) #11, !dbg !8985
  %19 = icmp eq %struct.listNode* %18, null, !dbg !8987
  br i1 %19, label %23, label %20, !dbg !8989

; <label>:20:                                     ; preds = %10
  %21 = load %struct.list*, %struct.list** %4, align 8, !dbg !8990, !tbaa !1665
  call void @listDelNode(%struct.list* %21, %struct.listNode* nonnull %18) #11, !dbg !8992
  %22 = add nsw i32 %12, 1, !dbg !8993
  br label %23, !dbg !8994

; <label>:23:                                     ; preds = %10, %20
  %24 = phi i32 [ %22, %20 ], [ %12, %10 ], !dbg !8995
  %25 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !8979
  %26 = icmp eq %struct.listNode* %25, null, !dbg !8981
  br i1 %26, label %27, label %10, !dbg !8981, !llvm.loop !8996

; <label>:27:                                     ; preds = %23, %1
  %28 = phi i32 [ 0, %1 ], [ %24, %23 ], !dbg !8998
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #6, !dbg !8999
  ret i32 %28, !dbg !9000
}

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleUnregisterFilters(%struct.RedisModule* nocapture readonly) local_unnamed_addr #0 !dbg !9001 {
  %2 = alloca %struct.listIter, align 8
  %3 = bitcast %struct.listIter* %2 to i8*, !dbg !9011
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #6, !dbg !9011
  %4 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 7, !dbg !9013
  %5 = load %struct.list*, %struct.list** %4, align 8, !dbg !9013, !tbaa !1669
  call void @listRewind(%struct.list* %5, %struct.listIter* nonnull %2) #11, !dbg !9015
  %6 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !9016
  %7 = icmp eq %struct.listNode* %6, null, !dbg !9018
  br i1 %7, label %23, label %8, !dbg !9018

; <label>:8:                                      ; preds = %1, %19
  %9 = phi %struct.listNode* [ %21, %19 ], [ %6, %1 ]
  %10 = phi i32 [ %20, %19 ], [ 0, %1 ]
  %11 = getelementptr inbounds %struct.listNode, %struct.listNode* %9, i64 0, i32 2, !dbg !9019
  %12 = load i8*, i8** %11, align 8, !dbg !9019, !tbaa !5585
  %13 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9021, !tbaa !902
  %14 = call %struct.listNode* @listSearchKey(%struct.list* %13, i8* %12) #11, !dbg !9022
  %15 = icmp eq %struct.listNode* %14, null, !dbg !9024
  br i1 %15, label %19, label %16, !dbg !9026

; <label>:16:                                     ; preds = %8
  %17 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9027, !tbaa !902
  call void @listDelNode(%struct.list* %17, %struct.listNode* nonnull %14) #11, !dbg !9029
  %18 = add nsw i32 %10, 1, !dbg !9030
  br label %19, !dbg !9031

; <label>:19:                                     ; preds = %8, %16
  %20 = phi i32 [ %18, %16 ], [ %10, %8 ], !dbg !9032
  call void @zfree(i8* %12) #11, !dbg !9033
  %21 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !9016
  %22 = icmp eq %struct.listNode* %21, null, !dbg !9018
  br i1 %22, label %23, label %8, !dbg !9018, !llvm.loop !9034

; <label>:23:                                     ; preds = %19, %1
  %24 = phi i32 [ 0, %1 ], [ %20, %19 ], !dbg !9036
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #6, !dbg !9037
  ret i32 %24, !dbg !9038
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCommandFilter* @RM_RegisterCommandFilter(%struct.RedisModuleCtx* nocapture readonly, void (%struct.RedisModuleCommandFilterCtx*)*, i32) #0 !dbg !9039 {
  %4 = tail call i8* @zmalloc(i64 24) #11, !dbg !9050
  %5 = bitcast i8* %4 to %struct.RedisModuleCommandFilter*, !dbg !9050
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !9052
  %7 = bitcast %struct.RedisModule** %6 to i64*, !dbg !9052
  %8 = load i64, i64* %7, align 8, !dbg !9052, !tbaa !1156
  %9 = bitcast i8* %4 to i64*, !dbg !9053
  store i64 %8, i64* %9, align 8, !dbg !9053, !tbaa !5691
  %10 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !9054
  %11 = bitcast i8* %10 to void (%struct.RedisModuleCommandFilterCtx*)**, !dbg !9054
  store void (%struct.RedisModuleCommandFilterCtx*)* %1, void (%struct.RedisModuleCommandFilterCtx*)** %11, align 8, !dbg !9055, !tbaa !5698
  %12 = getelementptr inbounds i8, i8* %4, i64 16, !dbg !9056
  %13 = bitcast i8* %12 to i32*, !dbg !9056
  store i32 %2, i32* %13, align 8, !dbg !9057, !tbaa !5686
  %14 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9058, !tbaa !902
  %15 = tail call %struct.list* @listAddNodeTail(%struct.list* %14, i8* %4) #11, !dbg !9059
  %16 = load %struct.RedisModule*, %struct.RedisModule** %6, align 8, !dbg !9060, !tbaa !1156
  %17 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %16, i64 0, i32 7, !dbg !9061
  %18 = load %struct.list*, %struct.list** %17, align 8, !dbg !9061, !tbaa !1669
  %19 = tail call %struct.list* @listAddNodeTail(%struct.list* %18, i8* %4) #11, !dbg !9062
  ret %struct.RedisModuleCommandFilter* %5, !dbg !9063
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_UnregisterCommandFilter(%struct.RedisModuleCtx* nocapture readonly, %struct.RedisModuleCommandFilter*) #0 !dbg !9064 {
  %3 = getelementptr inbounds %struct.RedisModuleCommandFilter, %struct.RedisModuleCommandFilter* %1, i64 0, i32 0, !dbg !9073
  %4 = load %struct.RedisModule*, %struct.RedisModule** %3, align 8, !dbg !9073, !tbaa !5691
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !9075
  %6 = load %struct.RedisModule*, %struct.RedisModule** %5, align 8, !dbg !9075, !tbaa !1156
  %7 = icmp eq %struct.RedisModule* %4, %6, !dbg !9076
  br i1 %7, label %8, label %24, !dbg !9077

; <label>:8:                                      ; preds = %2
  %9 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9078, !tbaa !902
  %10 = bitcast %struct.RedisModuleCommandFilter* %1 to i8*, !dbg !9079
  %11 = tail call %struct.listNode* @listSearchKey(%struct.list* %9, i8* %10) #11, !dbg !9080
  %12 = icmp eq %struct.listNode* %11, null, !dbg !9082
  br i1 %12, label %24, label %13, !dbg !9084

; <label>:13:                                     ; preds = %8
  %14 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9085, !tbaa !902
  tail call void @listDelNode(%struct.list* %14, %struct.listNode* nonnull %11) #11, !dbg !9086
  %15 = load %struct.RedisModule*, %struct.RedisModule** %5, align 8, !dbg !9087, !tbaa !1156
  %16 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %15, i64 0, i32 7, !dbg !9088
  %17 = load %struct.list*, %struct.list** %16, align 8, !dbg !9088, !tbaa !1669
  %18 = tail call %struct.listNode* @listSearchKey(%struct.list* %17, i8* %10) #11, !dbg !9089
  %19 = icmp eq %struct.listNode* %18, null, !dbg !9090
  br i1 %19, label %24, label %20, !dbg !9092

; <label>:20:                                     ; preds = %13
  %21 = load %struct.RedisModule*, %struct.RedisModule** %5, align 8, !dbg !9093, !tbaa !1156
  %22 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %21, i64 0, i32 7, !dbg !9094
  %23 = load %struct.list*, %struct.list** %22, align 8, !dbg !9094, !tbaa !1669
  tail call void @listDelNode(%struct.list* %23, %struct.listNode* nonnull %18) #11, !dbg !9095
  br label %24, !dbg !9096

; <label>:24:                                     ; preds = %13, %8, %2, %20
  %25 = phi i32 [ 0, %20 ], [ 1, %2 ], [ 1, %8 ], [ 1, %13 ], !dbg !9097
  ret i32 %25, !dbg !9098
}

; Function Attrs: noredzone nounwind readonly
define dso_local i32 @RM_CommandFilterArgsCount(%struct.RedisModuleCommandFilterCtx* nocapture readonly) #4 !dbg !9099 {
  %2 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9105
  %3 = load i32, i32* %2, align 8, !dbg !9105, !tbaa !5678
  ret i32 %3, !dbg !9106
}

; Function Attrs: noredzone nounwind readonly
define dso_local %struct.redisObject* @RM_CommandFilterArgGet(%struct.RedisModuleCommandFilterCtx* nocapture readonly, i32) #4 !dbg !9107 {
  %3 = icmp slt i32 %1, 0, !dbg !9115
  br i1 %3, label %14, label %4, !dbg !9117

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9118
  %6 = load i32, i32* %5, align 8, !dbg !9118, !tbaa !5678
  %7 = icmp sgt i32 %6, %1, !dbg !9119
  br i1 %7, label %8, label %14, !dbg !9120

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 0, !dbg !9121
  %10 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9121, !tbaa !5675
  %11 = sext i32 %1 to i64, !dbg !9122
  %12 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 %11, !dbg !9122
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !9122, !tbaa !902
  br label %14, !dbg !9123

; <label>:14:                                     ; preds = %2, %4, %8
  %15 = phi %struct.redisObject* [ %13, %8 ], [ null, %4 ], [ null, %2 ], !dbg !9124
  ret %struct.redisObject* %15, !dbg !9125
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CommandFilterArgInsert(%struct.RedisModuleCommandFilterCtx* nocapture, i32, %struct.redisObject*) #0 !dbg !9126 {
  %4 = icmp slt i32 %1, 0, !dbg !9137
  br i1 %4, label %85, label %5, !dbg !9139

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9140
  %7 = load i32, i32* %6, align 8, !dbg !9140, !tbaa !5678
  %8 = icmp slt i32 %7, %1, !dbg !9141
  br i1 %8, label %85, label %9, !dbg !9142

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 0, !dbg !9143
  %11 = bitcast %struct.RedisModuleCommandFilterCtx* %0 to i8**, !dbg !9143
  %12 = load i8*, i8** %11, align 8, !dbg !9143, !tbaa !5675
  %13 = add nsw i32 %7, 1, !dbg !9144
  %14 = sext i32 %13 to i64, !dbg !9145
  %15 = shl nsw i64 %14, 3, !dbg !9146
  %16 = tail call i8* @zrealloc(i8* %12, i64 %15) #11, !dbg !9147
  store i8* %16, i8** %11, align 8, !dbg !9148, !tbaa !5675
  %17 = load i32, i32* %6, align 8, !dbg !9149, !tbaa !5678
  %18 = icmp sgt i32 %17, %1, !dbg !9152
  %19 = bitcast i8* %16 to %struct.redisObject**, !dbg !9154
  br i1 %18, label %22, label %20, !dbg !9155

; <label>:20:                                     ; preds = %9
  %21 = sext i32 %1 to i64, !dbg !9156
  br label %80, !dbg !9155

; <label>:22:                                     ; preds = %9
  %23 = sext i32 %17 to i64, !dbg !9157
  %24 = sext i32 %1 to i64, !dbg !9157
  %25 = sub nsw i64 %23, %24, !dbg !9157
  %26 = xor i64 %24, -1, !dbg !9157
  %27 = add nsw i64 %26, %23, !dbg !9157
  %28 = and i64 %25, 3, !dbg !9157
  %29 = icmp eq i64 %28, 0, !dbg !9157
  br i1 %29, label %43, label %30, !dbg !9157

; <label>:30:                                     ; preds = %22, %30
  %31 = phi i64 [ %34, %30 ], [ %23, %22 ]
  %32 = phi %struct.redisObject** [ %40, %30 ], [ %19, %22 ]
  %33 = phi i64 [ %41, %30 ], [ %28, %22 ]
  %34 = add nsw i64 %31, -1, !dbg !9157
  %35 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %32, i64 %34, !dbg !9159
  %36 = bitcast %struct.redisObject** %35 to i64*, !dbg !9159
  %37 = load i64, i64* %36, align 8, !dbg !9159, !tbaa !902
  %38 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %32, i64 %31, !dbg !9160
  %39 = bitcast %struct.redisObject** %38 to i64*, !dbg !9161
  store i64 %37, i64* %39, align 8, !dbg !9161, !tbaa !902
  %40 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9154, !tbaa !5675
  %41 = add i64 %33, -1, !dbg !9155
  %42 = icmp eq i64 %41, 0, !dbg !9155
  br i1 %42, label %43, label %30, !dbg !9155, !llvm.loop !9162

; <label>:43:                                     ; preds = %30, %22
  %44 = phi i64 [ %23, %22 ], [ %34, %30 ]
  %45 = phi %struct.redisObject** [ %19, %22 ], [ %40, %30 ]
  %46 = phi %struct.redisObject** [ undef, %22 ], [ %40, %30 ]
  %47 = icmp ult i64 %27, 3, !dbg !9157
  br i1 %47, label %80, label %48, !dbg !9157

; <label>:48:                                     ; preds = %43, %48
  %49 = phi i64 [ %72, %48 ], [ %44, %43 ]
  %50 = phi %struct.redisObject** [ %79, %48 ], [ %45, %43 ]
  %51 = add nsw i64 %49, -1, !dbg !9157
  %52 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %50, i64 %51, !dbg !9159
  %53 = bitcast %struct.redisObject** %52 to i64*, !dbg !9159
  %54 = load i64, i64* %53, align 8, !dbg !9159, !tbaa !902
  %55 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %50, i64 %49, !dbg !9160
  %56 = bitcast %struct.redisObject** %55 to i64*, !dbg !9161
  store i64 %54, i64* %56, align 8, !dbg !9161, !tbaa !902
  %57 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9154, !tbaa !5675
  %58 = add nsw i64 %49, -2, !dbg !9157
  %59 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %57, i64 %58, !dbg !9159
  %60 = bitcast %struct.redisObject** %59 to i64*, !dbg !9159
  %61 = load i64, i64* %60, align 8, !dbg !9159, !tbaa !902
  %62 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %57, i64 %51, !dbg !9160
  %63 = bitcast %struct.redisObject** %62 to i64*, !dbg !9161
  store i64 %61, i64* %63, align 8, !dbg !9161, !tbaa !902
  %64 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9154, !tbaa !5675
  %65 = add nsw i64 %49, -3, !dbg !9157
  %66 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %64, i64 %65, !dbg !9159
  %67 = bitcast %struct.redisObject** %66 to i64*, !dbg !9159
  %68 = load i64, i64* %67, align 8, !dbg !9159, !tbaa !902
  %69 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %64, i64 %58, !dbg !9160
  %70 = bitcast %struct.redisObject** %69 to i64*, !dbg !9161
  store i64 %68, i64* %70, align 8, !dbg !9161, !tbaa !902
  %71 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9154, !tbaa !5675
  %72 = add nsw i64 %49, -4, !dbg !9157
  %73 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %71, i64 %72, !dbg !9159
  %74 = bitcast %struct.redisObject** %73 to i64*, !dbg !9159
  %75 = load i64, i64* %74, align 8, !dbg !9159, !tbaa !902
  %76 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %71, i64 %65, !dbg !9160
  %77 = bitcast %struct.redisObject** %76 to i64*, !dbg !9161
  store i64 %75, i64* %77, align 8, !dbg !9161, !tbaa !902
  %78 = icmp sgt i64 %72, %24, !dbg !9152
  %79 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9154, !tbaa !5675
  br i1 %78, label %48, label %80, !dbg !9155, !llvm.loop !9164

; <label>:80:                                     ; preds = %43, %48, %20
  %81 = phi i64 [ %21, %20 ], [ %24, %48 ], [ %24, %43 ], !dbg !9156
  %82 = phi %struct.redisObject** [ %19, %20 ], [ %46, %43 ], [ %79, %48 ], !dbg !9154
  %83 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %82, i64 %81, !dbg !9156
  store %struct.redisObject* %2, %struct.redisObject** %83, align 8, !dbg !9166, !tbaa !902
  %84 = add nsw i32 %17, 1, !dbg !9167
  store i32 %84, i32* %6, align 8, !dbg !9167, !tbaa !5678
  br label %85, !dbg !9168

; <label>:85:                                     ; preds = %3, %5, %80
  %86 = phi i32 [ 0, %80 ], [ 1, %5 ], [ 1, %3 ], !dbg !9154
  ret i32 %86, !dbg !9169
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CommandFilterArgReplace(%struct.RedisModuleCommandFilterCtx* nocapture readonly, i32, %struct.redisObject*) #0 !dbg !9170 {
  %4 = icmp slt i32 %1, 0, !dbg !9178
  br i1 %4, label %17, label %5, !dbg !9180

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9181
  %7 = load i32, i32* %6, align 8, !dbg !9181, !tbaa !5678
  %8 = icmp sgt i32 %7, %1, !dbg !9182
  br i1 %8, label %9, label %17, !dbg !9183

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 0, !dbg !9184
  %11 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9184, !tbaa !5675
  %12 = sext i32 %1 to i64, !dbg !9185
  %13 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %11, i64 %12, !dbg !9185
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !9185, !tbaa !902
  tail call void @decrRefCount(%struct.redisObject* %14) #11, !dbg !9186
  %15 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9187, !tbaa !5675
  %16 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %15, i64 %12, !dbg !9188
  store %struct.redisObject* %2, %struct.redisObject** %16, align 8, !dbg !9189, !tbaa !902
  br label %17, !dbg !9190

; <label>:17:                                     ; preds = %3, %5, %9
  %18 = phi i32 [ 0, %9 ], [ 1, %5 ], [ 1, %3 ], !dbg !9191
  ret i32 %18, !dbg !9192
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CommandFilterArgDelete(%struct.RedisModuleCommandFilterCtx* nocapture, i32) #0 !dbg !9193 {
  %3 = icmp slt i32 %1, 0, !dbg !9202
  br i1 %3, label %71, label %4, !dbg !9204

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9205
  %6 = load i32, i32* %5, align 8, !dbg !9205, !tbaa !5678
  %7 = icmp sgt i32 %6, %1, !dbg !9206
  br i1 %7, label %8, label %71, !dbg !9207

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 0, !dbg !9208
  %10 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9208, !tbaa !5675
  %11 = sext i32 %1 to i64, !dbg !9209
  %12 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 %11, !dbg !9209
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !9209, !tbaa !902
  tail call void @decrRefCount(%struct.redisObject* %13) #11, !dbg !9210
  %14 = load i32, i32* %5, align 8, !dbg !9212, !tbaa !5678
  %15 = add nsw i32 %14, -1, !dbg !9215
  %16 = icmp sgt i32 %15, %1, !dbg !9216
  br i1 %16, label %17, label %70, !dbg !9217

; <label>:17:                                     ; preds = %8
  %18 = sext i32 %15 to i64, !dbg !9217
  %19 = sub nsw i64 %18, %11, !dbg !9217
  %20 = xor i64 %11, -1, !dbg !9217
  %21 = add nsw i64 %20, %18, !dbg !9217
  %22 = and i64 %19, 3, !dbg !9217
  %23 = icmp eq i64 %22, 0, !dbg !9217
  br i1 %23, label %36, label %24, !dbg !9217

; <label>:24:                                     ; preds = %17, %24
  %25 = phi i64 [ %28, %24 ], [ %11, %17 ]
  %26 = phi i64 [ %34, %24 ], [ %22, %17 ]
  %27 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9218, !tbaa !5675
  %28 = add nsw i64 %25, 1, !dbg !9220
  %29 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %27, i64 %28, !dbg !9221
  %30 = bitcast %struct.redisObject** %29 to i64*, !dbg !9221
  %31 = load i64, i64* %30, align 8, !dbg !9221, !tbaa !902
  %32 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %27, i64 %25, !dbg !9222
  %33 = bitcast %struct.redisObject** %32 to i64*, !dbg !9223
  store i64 %31, i64* %33, align 8, !dbg !9223, !tbaa !902
  %34 = add i64 %26, -1, !dbg !9217
  %35 = icmp eq i64 %34, 0, !dbg !9217
  br i1 %35, label %36, label %24, !dbg !9217, !llvm.loop !9224

; <label>:36:                                     ; preds = %24, %17
  %37 = phi i64 [ %11, %17 ], [ %28, %24 ]
  %38 = icmp ult i64 %21, 3, !dbg !9217
  br i1 %38, label %70, label %39, !dbg !9217

; <label>:39:                                     ; preds = %36, %39
  %40 = phi i64 [ %63, %39 ], [ %37, %36 ]
  %41 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9218, !tbaa !5675
  %42 = add nsw i64 %40, 1, !dbg !9220
  %43 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %41, i64 %42, !dbg !9221
  %44 = bitcast %struct.redisObject** %43 to i64*, !dbg !9221
  %45 = load i64, i64* %44, align 8, !dbg !9221, !tbaa !902
  %46 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %41, i64 %40, !dbg !9222
  %47 = bitcast %struct.redisObject** %46 to i64*, !dbg !9223
  store i64 %45, i64* %47, align 8, !dbg !9223, !tbaa !902
  %48 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9218, !tbaa !5675
  %49 = add nsw i64 %40, 2, !dbg !9220
  %50 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %48, i64 %49, !dbg !9221
  %51 = bitcast %struct.redisObject** %50 to i64*, !dbg !9221
  %52 = load i64, i64* %51, align 8, !dbg !9221, !tbaa !902
  %53 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %48, i64 %42, !dbg !9222
  %54 = bitcast %struct.redisObject** %53 to i64*, !dbg !9223
  store i64 %52, i64* %54, align 8, !dbg !9223, !tbaa !902
  %55 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9218, !tbaa !5675
  %56 = add nsw i64 %40, 3, !dbg !9220
  %57 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %55, i64 %56, !dbg !9221
  %58 = bitcast %struct.redisObject** %57 to i64*, !dbg !9221
  %59 = load i64, i64* %58, align 8, !dbg !9221, !tbaa !902
  %60 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %55, i64 %49, !dbg !9222
  %61 = bitcast %struct.redisObject** %60 to i64*, !dbg !9223
  store i64 %59, i64* %61, align 8, !dbg !9223, !tbaa !902
  %62 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9218, !tbaa !5675
  %63 = add nsw i64 %40, 4, !dbg !9220
  %64 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %62, i64 %63, !dbg !9221
  %65 = bitcast %struct.redisObject** %64 to i64*, !dbg !9221
  %66 = load i64, i64* %65, align 8, !dbg !9221, !tbaa !902
  %67 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %62, i64 %56, !dbg !9222
  %68 = bitcast %struct.redisObject** %67 to i64*, !dbg !9223
  store i64 %66, i64* %68, align 8, !dbg !9223, !tbaa !902
  %69 = icmp slt i64 %63, %18, !dbg !9216
  br i1 %69, label %39, label %70, !dbg !9217, !llvm.loop !9225

; <label>:70:                                     ; preds = %36, %39, %8
  store i32 %15, i32* %5, align 8, !dbg !9227, !tbaa !5678
  br label %71, !dbg !9228

; <label>:71:                                     ; preds = %2, %4, %70
  %72 = phi i32 [ 0, %70 ], [ 1, %4 ], [ 1, %2 ], !dbg !9229
  ret i32 %72, !dbg !9230
}

; Function Attrs: noredzone nounwind
define dso_local i64 @dictCStringKeyHash(i8*) #0 !dbg !9231 {
  %2 = tail call i64 @strlen(i8* %0) #11, !dbg !9235
  %3 = trunc i64 %2 to i32, !dbg !9235
  %4 = tail call i64 @dictGenHashFunction(i8* %0, i32 %3) #11, !dbg !9236
  ret i64 %4, !dbg !9237
}

; Function Attrs: noredzone
declare dso_local i64 @dictGenHashFunction(i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @dictCStringKeyCompare(i8* nocapture readnone, i8*, i8*) #0 !dbg !9238 {
  %4 = tail call i32 @strcmp(i8* %1, i8* %2) #11, !dbg !9246
  %5 = icmp eq i32 %4, 0, !dbg !9247
  %6 = zext i1 %5 to i32, !dbg !9247
  ret i32 %6, !dbg !9248
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleRegisterApi(i8*, i8*) local_unnamed_addr #0 !dbg !9249 {
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9257, !tbaa !1116
  %4 = tail call i32 @dictAdd(%struct.dict* %3, i8* %0, i8* %1) #11, !dbg !9258
  ret i32 %4, !dbg !9259
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleInitModulesSystem() local_unnamed_addr #0 !dbg !9260 {
  %1 = tail call %struct.list* @listCreate() #11, !dbg !9261
  store %struct.list* %1, %struct.list** @moduleUnblockedClients, align 8, !dbg !9262, !tbaa !902
  %2 = tail call %struct.list* @listCreate() #11, !dbg !9263
  store %struct.list* %2, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 25), align 8, !dbg !9264, !tbaa !9265
  %3 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @modulesDictType, i8* null) #11, !dbg !9266
  store %struct.dict* %3, %struct.dict** @modules, align 8, !dbg !9267, !tbaa !902
  %4 = tail call %struct.list* @listCreate() #11, !dbg !9268
  store %struct.list* %4, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !9269, !tbaa !902
  %5 = tail call %struct.client* @createClient(i32 -1) #11, !dbg !9270
  store %struct.client* %5, %struct.client** @moduleFreeContextReusedClient, align 8, !dbg !9271, !tbaa !902
  %6 = getelementptr inbounds %struct.client, %struct.client* %5, i64 0, i32 21, !dbg !9272
  %7 = load i32, i32* %6, align 8, !dbg !9273, !tbaa !1254
  %8 = or i32 %7, 134217728, !dbg !9273
  store i32 %8, i32* %6, align 8, !dbg !9273, !tbaa !1254
  %9 = tail call %struct.list* @listCreate() #11, !dbg !9274
  store %struct.list* %9, %struct.list** @moduleCommandFilters, align 8, !dbg !9275, !tbaa !902
  tail call void @moduleRegisterCoreAPI() #12, !dbg !9276
  %10 = tail call i32 @pipe(i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 0)) #11, !dbg !9277
  %11 = icmp eq i32 %10, -1, !dbg !9279
  br i1 %11, label %12, label %16, !dbg !9280

; <label>:12:                                     ; preds = %0
  %13 = tail call i32* @__errno() #11, !dbg !9281
  %14 = load i32, i32* %13, align 4, !dbg !9281, !tbaa !933
  %15 = tail call i8* @strerror(i32 %14) #11, !dbg !9283
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.40, i64 0, i64 0), i8* %15) #11, !dbg !9284
  tail call void @exit(i32 1) #14, !dbg !9285
  unreachable, !dbg !9285

; <label>:16:                                     ; preds = %0
  %17 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 0), align 8, !dbg !9286, !tbaa !933
  %18 = tail call i32 @anetNonBlock(i8* null, i32 %17) #11, !dbg !9287
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 1), align 4, !dbg !9288, !tbaa !933
  %20 = tail call i32 @anetNonBlock(i8* null, i32 %19) #11, !dbg !9289
  %21 = tail call %struct.rax* @raxNew() #11, !dbg !9290
  store %struct.rax* %21, %struct.rax** @Timers, align 8, !dbg !9291, !tbaa !902
  %22 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #11, !dbg !9292
  ret void, !dbg !9293
}

; Function Attrs: noredzone
declare dso_local %struct.dict* @dictCreate(%struct.dictType*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleRegisterCoreAPI() local_unnamed_addr #0 !dbg !9294 {
  %1 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @moduleAPIDictType, i8* null) #11, !dbg !9295
  store %struct.dict* %1, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9296, !tbaa !1116
  %2 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @moduleAPIDictType, i8* null) #11, !dbg !9297
  store %struct.dict* %2, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !9298, !tbaa !8875
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9302, !tbaa !1116
  %4 = tail call i32 @dictAdd(%struct.dict* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i64 0, i64 0), i8* bitcast (i8* (i64)* @RM_Alloc to i8*)) #11, !dbg !9303
  %5 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9307, !tbaa !1116
  %6 = tail call i32 @dictAdd(%struct.dict* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.66, i64 0, i64 0), i8* bitcast (i8* (i64, i64)* @RM_Calloc to i8*)) #11, !dbg !9308
  %7 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9312, !tbaa !1116
  %8 = tail call i32 @dictAdd(%struct.dict* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* bitcast (i8* (i8*, i64)* @RM_Realloc to i8*)) #11, !dbg !9313
  %9 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9317, !tbaa !1116
  %10 = tail call i32 @dictAdd(%struct.dict* %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.68, i64 0, i64 0), i8* bitcast (void (i8*)* @RM_Free to i8*)) #11, !dbg !9318
  %11 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9322, !tbaa !1116
  %12 = tail call i32 @dictAdd(%struct.dict* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* bitcast (i8* (i8*)* @RM_Strdup to i8*)) #11, !dbg !9323
  %13 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9327, !tbaa !1116
  %14 = tail call i32 @dictAdd(%struct.dict* %13, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i8*, i32, i32, i32)* @RM_CreateCommand to i8*)) #11, !dbg !9328
  %15 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9332, !tbaa !1116
  %16 = tail call i32 @dictAdd(%struct.dict* %15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i8*, i32, i32)* @RM_SetModuleAttribs to i8*)) #11, !dbg !9333
  %17 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9337, !tbaa !1116
  %18 = tail call i32 @dictAdd(%struct.dict* %17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.72, i64 0, i64 0), i8* bitcast (i32 (i8*)* @RM_IsModuleNameBusy to i8*)) #11, !dbg !9338
  %19 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9342, !tbaa !1116
  %20 = tail call i32 @dictAdd(%struct.dict* %19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_WrongArity to i8*)) #11, !dbg !9343
  %21 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9347, !tbaa !1116
  %22 = tail call i32 @dictAdd(%struct.dict* %21, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.74, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i64)* @RM_ReplyWithLongLong to i8*)) #11, !dbg !9348
  %23 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9352, !tbaa !1116
  %24 = tail call i32 @dictAdd(%struct.dict* %23, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*)* @RM_ReplyWithError to i8*)) #11, !dbg !9353
  %25 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9357, !tbaa !1116
  %26 = tail call i32 @dictAdd(%struct.dict* %25, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.76, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*)* @RM_ReplyWithSimpleString to i8*)) #11, !dbg !9358
  %27 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9362, !tbaa !1116
  %28 = tail call i32 @dictAdd(%struct.dict* %27, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.77, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i64)* @RM_ReplyWithArray to i8*)) #11, !dbg !9363
  %29 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9367, !tbaa !1116
  %30 = tail call i32 @dictAdd(%struct.dict* %29, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.78, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i64)* @RM_ReplySetArrayLength to i8*)) #11, !dbg !9368
  %31 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9372, !tbaa !1116
  %32 = tail call i32 @dictAdd(%struct.dict* %31, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.79, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, %struct.redisObject*)* @RM_ReplyWithString to i8*)) #11, !dbg !9373
  %33 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9377, !tbaa !1116
  %34 = tail call i32 @dictAdd(%struct.dict* %33, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.80, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i64)* @RM_ReplyWithStringBuffer to i8*)) #11, !dbg !9378
  %35 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9382, !tbaa !1116
  %36 = tail call i32 @dictAdd(%struct.dict* %35, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*)* @RM_ReplyWithCString to i8*)) #11, !dbg !9383
  %37 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9387, !tbaa !1116
  %38 = tail call i32 @dictAdd(%struct.dict* %37, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_ReplyWithNull to i8*)) #11, !dbg !9388
  %39 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9392, !tbaa !1116
  %40 = tail call i32 @dictAdd(%struct.dict* %39, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, %struct.RedisModuleCallReply*)* @RM_ReplyWithCallReply to i8*)) #11, !dbg !9393
  %41 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9397, !tbaa !1116
  %42 = tail call i32 @dictAdd(%struct.dict* %41, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.84, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, double)* @RM_ReplyWithDouble to i8*)) #11, !dbg !9398
  %43 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9402, !tbaa !1116
  %44 = tail call i32 @dictAdd(%struct.dict* %43, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.85, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_GetSelectedDb to i8*)) #11, !dbg !9403
  %45 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9407, !tbaa !1116
  %46 = tail call i32 @dictAdd(%struct.dict* %45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i32)* @RM_SelectDb to i8*)) #11, !dbg !9408
  %47 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9412, !tbaa !1116
  %48 = tail call i32 @dictAdd(%struct.dict* %47, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.87, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCtx*, %struct.redisObject*, i32)* @RM_OpenKey to i8*)) #11, !dbg !9413
  %49 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9417, !tbaa !1116
  %50 = tail call i32 @dictAdd(%struct.dict* %49, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.88, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleKey*)* @RM_CloseKey to i8*)) #11, !dbg !9418
  %51 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9422, !tbaa !1116
  %52 = tail call i32 @dictAdd(%struct.dict* %51, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.89, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_KeyType to i8*)) #11, !dbg !9423
  %53 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9427, !tbaa !1116
  %54 = tail call i32 @dictAdd(%struct.dict* %53, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleKey*)* @RM_ValueLength to i8*)) #11, !dbg !9428
  %55 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9432, !tbaa !1116
  %56 = tail call i32 @dictAdd(%struct.dict* %55, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.91, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i32, %struct.redisObject*)* @RM_ListPush to i8*)) #11, !dbg !9433
  %57 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9437, !tbaa !1116
  %58 = tail call i32 @dictAdd(%struct.dict* %57, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleKey*, i32)* @RM_ListPop to i8*)) #11, !dbg !9438
  %59 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9442, !tbaa !1116
  %60 = tail call i32 @dictAdd(%struct.dict* %59, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i64 0, i64 0), i8* bitcast (i32 (%struct.redisObject*, i64*)* @RM_StringToLongLong to i8*)) #11, !dbg !9443
  %61 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9447, !tbaa !1116
  %62 = tail call i32 @dictAdd(%struct.dict* %61, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.94, i64 0, i64 0), i8* bitcast (i32 (%struct.redisObject*, double*)* @RM_StringToDouble to i8*)) #11, !dbg !9448
  %63 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9452, !tbaa !1116
  %64 = tail call i32 @dictAdd(%struct.dict* %63, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.95, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCallReply* (%struct.RedisModuleCtx*, i8*, i8*, ...)* @RM_Call to i8*)) #11, !dbg !9453
  %65 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9457, !tbaa !1116
  %66 = tail call i32 @dictAdd(%struct.dict* %65, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.96, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCallReply*, i64*)* @RM_CallReplyProto to i8*)) #11, !dbg !9458
  %67 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9462, !tbaa !1116
  %68 = tail call i32 @dictAdd(%struct.dict* %67, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.97, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCallReply*)* @RM_FreeCallReply to i8*)) #11, !dbg !9463
  %69 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9467, !tbaa !1116
  %70 = tail call i32 @dictAdd(%struct.dict* %69, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.98, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleCallReply*)* @RM_CallReplyInteger to i8*)) #11, !dbg !9468
  %71 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9472, !tbaa !1116
  %72 = tail call i32 @dictAdd(%struct.dict* %71, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.99, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCallReply*)* @RM_CallReplyType to i8*)) #11, !dbg !9473
  %73 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9477, !tbaa !1116
  %74 = tail call i32 @dictAdd(%struct.dict* %73, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.100, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleCallReply*)* @RM_CallReplyLength to i8*)) #11, !dbg !9478
  %75 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9482, !tbaa !1116
  %76 = tail call i32 @dictAdd(%struct.dict* %75, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.101, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCallReply* (%struct.RedisModuleCallReply*, i64)* @RM_CallReplyArrayElement to i8*)) #11, !dbg !9483
  %77 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9487, !tbaa !1116
  %78 = tail call i32 @dictAdd(%struct.dict* %77, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.102, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCallReply*, i64*)* @RM_CallReplyStringPtr to i8*)) #11, !dbg !9488
  %79 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9492, !tbaa !1116
  %80 = tail call i32 @dictAdd(%struct.dict* %79, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCallReply*)* @RM_CreateStringFromCallReply to i8*)) #11, !dbg !9493
  %81 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9497, !tbaa !1116
  %82 = tail call i32 @dictAdd(%struct.dict* %81, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.104, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, i8*, i64)* @RM_CreateString to i8*)) #11, !dbg !9498
  %83 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9502, !tbaa !1116
  %84 = tail call i32 @dictAdd(%struct.dict* %83, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.105, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, i64)* @RM_CreateStringFromLongLong to i8*)) #11, !dbg !9503
  %85 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9507, !tbaa !1116
  %86 = tail call i32 @dictAdd(%struct.dict* %85, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.106, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, %struct.redisObject*)* @RM_CreateStringFromString to i8*)) #11, !dbg !9508
  %87 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9512, !tbaa !1116
  %88 = tail call i32 @dictAdd(%struct.dict* %87, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.107, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, i8*, ...)* @RM_CreateStringPrintf to i8*)) #11, !dbg !9513
  %89 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9517, !tbaa !1116
  %90 = tail call i32 @dictAdd(%struct.dict* %89, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.108, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, %struct.redisObject*)* @RM_FreeString to i8*)) #11, !dbg !9518
  %91 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9522, !tbaa !1116
  %92 = tail call i32 @dictAdd(%struct.dict* %91, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.109, i64 0, i64 0), i8* bitcast (i8* (%struct.redisObject*, i64*)* @RM_StringPtrLen to i8*)) #11, !dbg !9523
  %93 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9527, !tbaa !1116
  %94 = tail call i32 @dictAdd(%struct.dict* %93, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.110, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*)* @RM_AutoMemory to i8*)) #11, !dbg !9528
  %95 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9532, !tbaa !1116
  %96 = tail call i32 @dictAdd(%struct.dict* %95, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.111, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i8*, ...)* @RM_Replicate to i8*)) #11, !dbg !9533
  %97 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9537, !tbaa !1116
  %98 = tail call i32 @dictAdd(%struct.dict* %97, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.112, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_ReplicateVerbatim to i8*)) #11, !dbg !9538
  %99 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9542, !tbaa !1116
  %100 = tail call i32 @dictAdd(%struct.dict* %99, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.113, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_DeleteKey to i8*)) #11, !dbg !9543
  %101 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9547, !tbaa !1116
  %102 = tail call i32 @dictAdd(%struct.dict* %101, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.114, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_UnlinkKey to i8*)) #11, !dbg !9548
  %103 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9552, !tbaa !1116
  %104 = tail call i32 @dictAdd(%struct.dict* %103, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.115, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*)* @RM_StringSet to i8*)) #11, !dbg !9553
  %105 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9557, !tbaa !1116
  %106 = tail call i32 @dictAdd(%struct.dict* %105, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.116, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleKey*, i64*, i32)* @RM_StringDMA to i8*)) #11, !dbg !9558
  %107 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9562, !tbaa !1116
  %108 = tail call i32 @dictAdd(%struct.dict* %107, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.117, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i64)* @RM_StringTruncate to i8*)) #11, !dbg !9563
  %109 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9567, !tbaa !1116
  %110 = tail call i32 @dictAdd(%struct.dict* %109, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.118, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i64)* @RM_SetExpire to i8*)) #11, !dbg !9568
  %111 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9572, !tbaa !1116
  %112 = tail call i32 @dictAdd(%struct.dict* %111, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.119, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleKey*)* @RM_GetExpire to i8*)) #11, !dbg !9573
  %113 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9577, !tbaa !1116
  %114 = tail call i32 @dictAdd(%struct.dict* %113, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.120, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, double, %struct.redisObject*, i32*)* @RM_ZsetAdd to i8*)) #11, !dbg !9578
  %115 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9582, !tbaa !1116
  %116 = tail call i32 @dictAdd(%struct.dict* %115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.121, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, double, %struct.redisObject*, i32*, double*)* @RM_ZsetIncrby to i8*)) #11, !dbg !9583
  %117 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9587, !tbaa !1116
  %118 = tail call i32 @dictAdd(%struct.dict* %117, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.122, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*, double*)* @RM_ZsetScore to i8*)) #11, !dbg !9588
  %119 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9592, !tbaa !1116
  %120 = tail call i32 @dictAdd(%struct.dict* %119, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.123, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*, i32*)* @RM_ZsetRem to i8*)) #11, !dbg !9593
  %121 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9597, !tbaa !1116
  %122 = tail call i32 @dictAdd(%struct.dict* %121, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.124, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleKey*)* @RM_ZsetRangeStop to i8*)) #11, !dbg !9598
  %123 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9602, !tbaa !1116
  %124 = tail call i32 @dictAdd(%struct.dict* %123, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.125, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, double, double, i32, i32)* @RM_ZsetFirstInScoreRange to i8*)) #11, !dbg !9603
  %125 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9607, !tbaa !1116
  %126 = tail call i32 @dictAdd(%struct.dict* %125, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.126, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, double, double, i32, i32)* @RM_ZsetLastInScoreRange to i8*)) #11, !dbg !9608
  %127 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9612, !tbaa !1116
  %128 = tail call i32 @dictAdd(%struct.dict* %127, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.127, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*)* @RM_ZsetFirstInLexRange to i8*)) #11, !dbg !9613
  %129 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9617, !tbaa !1116
  %130 = tail call i32 @dictAdd(%struct.dict* %129, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.128, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*)* @RM_ZsetLastInLexRange to i8*)) #11, !dbg !9618
  %131 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9622, !tbaa !1116
  %132 = tail call i32 @dictAdd(%struct.dict* %131, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.129, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleKey*, double*)* @RM_ZsetRangeCurrentElement to i8*)) #11, !dbg !9623
  %133 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9627, !tbaa !1116
  %134 = tail call i32 @dictAdd(%struct.dict* %133, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_ZsetRangeNext to i8*)) #11, !dbg !9628
  %135 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9632, !tbaa !1116
  %136 = tail call i32 @dictAdd(%struct.dict* %135, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.131, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_ZsetRangePrev to i8*)) #11, !dbg !9633
  %137 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9637, !tbaa !1116
  %138 = tail call i32 @dictAdd(%struct.dict* %137, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.132, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_ZsetRangeEndReached to i8*)) #11, !dbg !9638
  %139 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9642, !tbaa !1116
  %140 = tail call i32 @dictAdd(%struct.dict* %139, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.133, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i32, ...)* @RM_HashSet to i8*)) #11, !dbg !9643
  %141 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9647, !tbaa !1116
  %142 = tail call i32 @dictAdd(%struct.dict* %141, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.134, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i32, ...)* @RM_HashGet to i8*)) #11, !dbg !9648
  %143 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9652, !tbaa !1116
  %144 = tail call i32 @dictAdd(%struct.dict* %143, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.135, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_IsKeysPositionRequest to i8*)) #11, !dbg !9653
  %145 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9657, !tbaa !1116
  %146 = tail call i32 @dictAdd(%struct.dict* %145, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.136, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i32)* @RM_KeyAtPos to i8*)) #11, !dbg !9658
  %147 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9662, !tbaa !1116
  %148 = tail call i32 @dictAdd(%struct.dict* %147, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.137, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleCtx*)* @RM_GetClientId to i8*)) #11, !dbg !9663
  %149 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9667, !tbaa !1116
  %150 = tail call i32 @dictAdd(%struct.dict* %149, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.138, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_GetContextFlags to i8*)) #11, !dbg !9668
  %151 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9672, !tbaa !1116
  %152 = tail call i32 @dictAdd(%struct.dict* %151, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.139, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCtx*, i64)* @RM_PoolAlloc to i8*)) #11, !dbg !9673
  %153 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9677, !tbaa !1116
  %154 = tail call i32 @dictAdd(%struct.dict* %153, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.140, i64 0, i64 0), i8* bitcast (%struct.RedisModuleType* (%struct.RedisModuleCtx*, i8*, i32, i8*)* @RM_CreateDataType to i8*)) #11, !dbg !9678
  %155 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9682, !tbaa !1116
  %156 = tail call i32 @dictAdd(%struct.dict* %155, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.141, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.RedisModuleType*, i8*)* @RM_ModuleTypeSetValue to i8*)) #11, !dbg !9683
  %157 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9687, !tbaa !1116
  %158 = tail call i32 @dictAdd(%struct.dict* %157, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.142, i64 0, i64 0), i8* bitcast (%struct.RedisModuleType* (%struct.RedisModuleKey*)* @RM_ModuleTypeGetType to i8*)) #11, !dbg !9688
  %159 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9692, !tbaa !1116
  %160 = tail call i32 @dictAdd(%struct.dict* %159, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.143, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleKey*)* @RM_ModuleTypeGetValue to i8*)) #11, !dbg !9693
  %161 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9697, !tbaa !1116
  %162 = tail call i32 @dictAdd(%struct.dict* %161, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.144, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i64)* @RM_SaveUnsigned to i8*)) #11, !dbg !9698
  %163 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9702, !tbaa !1116
  %164 = tail call i32 @dictAdd(%struct.dict* %163, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.145, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleIO*)* @RM_LoadUnsigned to i8*)) #11, !dbg !9703
  %165 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9707, !tbaa !1116
  %166 = tail call i32 @dictAdd(%struct.dict* %165, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.146, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i64)* @RM_SaveSigned to i8*)) #11, !dbg !9708
  %167 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9712, !tbaa !1116
  %168 = tail call i32 @dictAdd(%struct.dict* %167, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.147, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleIO*)* @RM_LoadSigned to i8*)) #11, !dbg !9713
  %169 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9717, !tbaa !1116
  %170 = tail call i32 @dictAdd(%struct.dict* %169, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.148, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, %struct.redisObject*)* @RM_SaveString to i8*)) #11, !dbg !9718
  %171 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9722, !tbaa !1116
  %172 = tail call i32 @dictAdd(%struct.dict* %171, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.149, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i8*, i64)* @RM_SaveStringBuffer to i8*)) #11, !dbg !9723
  %173 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9727, !tbaa !1116
  %174 = tail call i32 @dictAdd(%struct.dict* %173, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.150, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleIO*)* @RM_LoadString to i8*)) #11, !dbg !9728
  %175 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9732, !tbaa !1116
  %176 = tail call i32 @dictAdd(%struct.dict* %175, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleIO*, i64*)* @RM_LoadStringBuffer to i8*)) #11, !dbg !9733
  %177 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9737, !tbaa !1116
  %178 = tail call i32 @dictAdd(%struct.dict* %177, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.152, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, double)* @RM_SaveDouble to i8*)) #11, !dbg !9738
  %179 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9742, !tbaa !1116
  %180 = tail call i32 @dictAdd(%struct.dict* %179, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.153, i64 0, i64 0), i8* bitcast (double (%struct.RedisModuleIO*)* @RM_LoadDouble to i8*)) #11, !dbg !9743
  %181 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9747, !tbaa !1116
  %182 = tail call i32 @dictAdd(%struct.dict* %181, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.154, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, float)* @RM_SaveFloat to i8*)) #11, !dbg !9748
  %183 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9752, !tbaa !1116
  %184 = tail call i32 @dictAdd(%struct.dict* %183, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.155, i64 0, i64 0), i8* bitcast (float (%struct.RedisModuleIO*)* @RM_LoadFloat to i8*)) #11, !dbg !9753
  %185 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9757, !tbaa !1116
  %186 = tail call i32 @dictAdd(%struct.dict* %185, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.156, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i8*, i8*, ...)* @RM_EmitAOF to i8*)) #11, !dbg !9758
  %187 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9762, !tbaa !1116
  %188 = tail call i32 @dictAdd(%struct.dict* %187, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.157, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i8*, i8*, ...)* @RM_Log to i8*)) #11, !dbg !9763
  %189 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9767, !tbaa !1116
  %190 = tail call i32 @dictAdd(%struct.dict* %189, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.158, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i8*, i8*, ...)* @RM_LogIOError to i8*)) #11, !dbg !9768
  %191 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9772, !tbaa !1116
  %192 = tail call i32 @dictAdd(%struct.dict* %191, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.159, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, %struct.redisObject*, i8*, i64)* @RM_StringAppendBuffer to i8*)) #11, !dbg !9773
  %193 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9777, !tbaa !1116
  %194 = tail call i32 @dictAdd(%struct.dict* %193, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.160, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, %struct.redisObject*)* @RM_RetainString to i8*)) #11, !dbg !9778
  %195 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9782, !tbaa !1116
  %196 = tail call i32 @dictAdd(%struct.dict* %195, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.161, i64 0, i64 0), i8* bitcast (i32 (%struct.redisObject*, %struct.redisObject*)* @RM_StringCompare to i8*)) #11, !dbg !9783
  %197 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9787, !tbaa !1116
  %198 = tail call i32 @dictAdd(%struct.dict* %197, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.162, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCtx* (%struct.RedisModuleIO*)* @RM_GetContextFromIO to i8*)) #11, !dbg !9788
  %199 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9792, !tbaa !1116
  %200 = tail call i32 @dictAdd(%struct.dict* %199, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.163, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleIO*)* @RM_GetKeyNameFromIO to i8*)) #11, !dbg !9793
  %201 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9797, !tbaa !1116
  %202 = tail call i32 @dictAdd(%struct.dict* %201, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.164, i64 0, i64 0), i8* bitcast (%struct.RedisModuleBlockedClient* (%struct.RedisModuleCtx*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, void (%struct.RedisModuleCtx*, i8*)*, i64)* @RM_BlockClient to i8*)) #11, !dbg !9798
  %203 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9802, !tbaa !1116
  %204 = tail call i32 @dictAdd(%struct.dict* %203, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.165, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleBlockedClient*, i8*)* @RM_UnblockClient to i8*)) #11, !dbg !9803
  %205 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9807, !tbaa !1116
  %206 = tail call i32 @dictAdd(%struct.dict* %205, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.166, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_IsBlockedReplyRequest to i8*)) #11, !dbg !9808
  %207 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9812, !tbaa !1116
  %208 = tail call i32 @dictAdd(%struct.dict* %207, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.167, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_IsBlockedTimeoutRequest to i8*)) #11, !dbg !9813
  %209 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9817, !tbaa !1116
  %210 = tail call i32 @dictAdd(%struct.dict* %209, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.168, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCtx*)* @RM_GetBlockedClientPrivateData to i8*)) #11, !dbg !9818
  %211 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9822, !tbaa !1116
  %212 = tail call i32 @dictAdd(%struct.dict* %211, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.169, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleBlockedClient*)* @RM_AbortBlock to i8*)) #11, !dbg !9823
  %213 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9827, !tbaa !1116
  %214 = tail call i32 @dictAdd(%struct.dict* %213, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.170, i64 0, i64 0), i8* bitcast (i64 ()* @RM_Milliseconds to i8*)) #11, !dbg !9828
  %215 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9832, !tbaa !1116
  %216 = tail call i32 @dictAdd(%struct.dict* %215, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.171, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCtx* (%struct.RedisModuleBlockedClient*)* @RM_GetThreadSafeContext to i8*)) #11, !dbg !9833
  %217 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9837, !tbaa !1116
  %218 = tail call i32 @dictAdd(%struct.dict* %217, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.172, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*)* @RM_FreeThreadSafeContext to i8*)) #11, !dbg !9838
  %219 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9842, !tbaa !1116
  %220 = tail call i32 @dictAdd(%struct.dict* %219, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.173, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*)* @RM_ThreadSafeContextLock to i8*)) #11, !dbg !9843
  %221 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9847, !tbaa !1116
  %222 = tail call i32 @dictAdd(%struct.dict* %221, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.174, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*)* @RM_ThreadSafeContextUnlock to i8*)) #11, !dbg !9848
  %223 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9852, !tbaa !1116
  %224 = tail call i32 @dictAdd(%struct.dict* %223, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.175, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleDigest*, i8*, i64)* @RM_DigestAddStringBuffer to i8*)) #11, !dbg !9853
  %225 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9857, !tbaa !1116
  %226 = tail call i32 @dictAdd(%struct.dict* %225, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.176, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleDigest*, i64)* @RM_DigestAddLongLong to i8*)) #11, !dbg !9858
  %227 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9862, !tbaa !1116
  %228 = tail call i32 @dictAdd(%struct.dict* %227, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.177, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleDigest*)* @RM_DigestEndSequence to i8*)) #11, !dbg !9863
  %229 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9867, !tbaa !1116
  %230 = tail call i32 @dictAdd(%struct.dict* %229, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.178, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i32, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)*)* @RM_SubscribeToKeyspaceEvents to i8*)) #11, !dbg !9868
  %231 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9872, !tbaa !1116
  %232 = tail call i32 @dictAdd(%struct.dict* %231, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.179, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i8, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)*)* @RM_RegisterClusterMessageReceiver to i8*)) #11, !dbg !9873
  %233 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9877, !tbaa !1116
  %234 = tail call i32 @dictAdd(%struct.dict* %233, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.180, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* @RM_SendClusterMessage to i8*)) #11, !dbg !9878
  %235 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9882, !tbaa !1116
  %236 = tail call i32 @dictAdd(%struct.dict* %235, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.181, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i8*, i8*, i32*, i32*)* @RM_GetClusterNodeInfo to i8*)) #11, !dbg !9883
  %237 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9887, !tbaa !1116
  %238 = tail call i32 @dictAdd(%struct.dict* %237, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.182, i64 0, i64 0), i8* bitcast (i8** (%struct.RedisModuleCtx*, i64*)* @RM_GetClusterNodesList to i8*)) #11, !dbg !9888
  %239 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9892, !tbaa !1116
  %240 = tail call i32 @dictAdd(%struct.dict* %239, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.183, i64 0, i64 0), i8* bitcast (void (i8**)* @RM_FreeClusterNodesList to i8*)) #11, !dbg !9893
  %241 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9897, !tbaa !1116
  %242 = tail call i32 @dictAdd(%struct.dict* %241, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.184, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleCtx*, i64, void (%struct.RedisModuleCtx*, i8*)*, i8*)* @RM_CreateTimer to i8*)) #11, !dbg !9898
  %243 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9902, !tbaa !1116
  %244 = tail call i32 @dictAdd(%struct.dict* %243, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.185, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i64, i8**)* @RM_StopTimer to i8*)) #11, !dbg !9903
  %245 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9907, !tbaa !1116
  %246 = tail call i32 @dictAdd(%struct.dict* %245, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.186, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i64, i64*, i8**)* @RM_GetTimerInfo to i8*)) #11, !dbg !9908
  %247 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9912, !tbaa !1116
  %248 = tail call i32 @dictAdd(%struct.dict* %247, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), i8* bitcast (i8* ()* @RM_GetMyClusterID to i8*)) #11, !dbg !9913
  %249 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9917, !tbaa !1116
  %250 = tail call i32 @dictAdd(%struct.dict* %249, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.188, i64 0, i64 0), i8* bitcast (i64 ()* @RM_GetClusterSize to i8*)) #11, !dbg !9918
  %251 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9922, !tbaa !1116
  %252 = tail call i32 @dictAdd(%struct.dict* %251, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0), i8* bitcast (void (i8*, i64)* @RM_GetRandomBytes to i8*)) #11, !dbg !9923
  %253 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9927, !tbaa !1116
  %254 = tail call i32 @dictAdd(%struct.dict* %253, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.190, i64 0, i64 0), i8* bitcast (void (i8*, i64)* @RM_GetRandomHexChars to i8*)) #11, !dbg !9928
  %255 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9932, !tbaa !1116
  %256 = tail call i32 @dictAdd(%struct.dict* %255, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.191, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_BlockedClientDisconnected to i8*)) #11, !dbg !9933
  %257 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9937, !tbaa !1116
  %258 = tail call i32 @dictAdd(%struct.dict* %257, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.192, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleBlockedClient*, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*)* @RM_SetDisconnectCallback to i8*)) #11, !dbg !9938
  %259 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9942, !tbaa !1116
  %260 = tail call i32 @dictAdd(%struct.dict* %259, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.193, i64 0, i64 0), i8* bitcast (%struct.RedisModuleBlockedClient* (%struct.RedisModuleCtx*)* @RM_GetBlockedClientHandle to i8*)) #11, !dbg !9943
  %261 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9947, !tbaa !1116
  %262 = tail call i32 @dictAdd(%struct.dict* %261, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.194, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i64)* @RM_SetClusterFlags to i8*)) #11, !dbg !9948
  %263 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9952, !tbaa !1116
  %264 = tail call i32 @dictAdd(%struct.dict* %263, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.195, i64 0, i64 0), i8* bitcast (%struct.RedisModuleDict* (%struct.RedisModuleCtx*)* @RM_CreateDict to i8*)) #11, !dbg !9953
  %265 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9957, !tbaa !1116
  %266 = tail call i32 @dictAdd(%struct.dict* %265, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.196, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, %struct.RedisModuleDict*)* @RM_FreeDict to i8*)) #11, !dbg !9958
  %267 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9962, !tbaa !1116
  %268 = tail call i32 @dictAdd(%struct.dict* %267, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.197, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleDict*)* @RM_DictSize to i8*)) #11, !dbg !9963
  %269 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9967, !tbaa !1116
  %270 = tail call i32 @dictAdd(%struct.dict* %269, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.198, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, i8*, i64, i8*)* @RM_DictSetC to i8*)) #11, !dbg !9968
  %271 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9972, !tbaa !1116
  %272 = tail call i32 @dictAdd(%struct.dict* %271, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.199, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, i8*, i64, i8*)* @RM_DictReplaceC to i8*)) #11, !dbg !9973
  %273 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9977, !tbaa !1116
  %274 = tail call i32 @dictAdd(%struct.dict* %273, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.200, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, %struct.redisObject*, i8*)* @RM_DictSet to i8*)) #11, !dbg !9978
  %275 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9982, !tbaa !1116
  %276 = tail call i32 @dictAdd(%struct.dict* %275, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.201, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, %struct.redisObject*, i8*)* @RM_DictReplace to i8*)) #11, !dbg !9983
  %277 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9987, !tbaa !1116
  %278 = tail call i32 @dictAdd(%struct.dict* %277, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.202, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleDict*, i8*, i64, i32*)* @RM_DictGetC to i8*)) #11, !dbg !9988
  %279 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9992, !tbaa !1116
  %280 = tail call i32 @dictAdd(%struct.dict* %279, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.203, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleDict*, %struct.redisObject*, i32*)* @RM_DictGet to i8*)) #11, !dbg !9993
  %281 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9997, !tbaa !1116
  %282 = tail call i32 @dictAdd(%struct.dict* %281, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.204, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, i8*, i64, i8*)* @RM_DictDelC to i8*)) #11, !dbg !9998
  %283 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10002, !tbaa !1116
  %284 = tail call i32 @dictAdd(%struct.dict* %283, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.205, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, %struct.redisObject*, i8*)* @RM_DictDel to i8*)) #11, !dbg !10003
  %285 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10007, !tbaa !1116
  %286 = tail call i32 @dictAdd(%struct.dict* %285, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.206, i64 0, i64 0), i8* bitcast (%struct.RedisModuleDictIter* (%struct.RedisModuleDict*, i8*, i8*, i64)* @RM_DictIteratorStartC to i8*)) #11, !dbg !10008
  %287 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10012, !tbaa !1116
  %288 = tail call i32 @dictAdd(%struct.dict* %287, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.207, i64 0, i64 0), i8* bitcast (%struct.RedisModuleDictIter* (%struct.RedisModuleDict*, i8*, %struct.redisObject*)* @RM_DictIteratorStart to i8*)) #11, !dbg !10013
  %289 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10017, !tbaa !1116
  %290 = tail call i32 @dictAdd(%struct.dict* %289, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.208, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleDictIter*)* @RM_DictIteratorStop to i8*)) #11, !dbg !10018
  %291 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10022, !tbaa !1116
  %292 = tail call i32 @dictAdd(%struct.dict* %291, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.209, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDictIter*, i8*, i8*, i64)* @RM_DictIteratorReseekC to i8*)) #11, !dbg !10023
  %293 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10027, !tbaa !1116
  %294 = tail call i32 @dictAdd(%struct.dict* %293, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.210, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDictIter*, i8*, %struct.redisObject*)* @RM_DictIteratorReseek to i8*)) #11, !dbg !10028
  %295 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10032, !tbaa !1116
  %296 = tail call i32 @dictAdd(%struct.dict* %295, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.211, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleDictIter*, i64*, i8**)* @RM_DictNextC to i8*)) #11, !dbg !10033
  %297 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10037, !tbaa !1116
  %298 = tail call i32 @dictAdd(%struct.dict* %297, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.212, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleDictIter*, i64*, i8**)* @RM_DictPrevC to i8*)) #11, !dbg !10038
  %299 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10042, !tbaa !1116
  %300 = tail call i32 @dictAdd(%struct.dict* %299, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.213, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, %struct.RedisModuleDictIter*, i8**)* @RM_DictNext to i8*)) #11, !dbg !10043
  %301 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10047, !tbaa !1116
  %302 = tail call i32 @dictAdd(%struct.dict* %301, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.214, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, %struct.RedisModuleDictIter*, i8**)* @RM_DictPrev to i8*)) #11, !dbg !10048
  %303 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10052, !tbaa !1116
  %304 = tail call i32 @dictAdd(%struct.dict* %303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.215, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDictIter*, i8*, i8*, i64)* @RM_DictCompareC to i8*)) #11, !dbg !10053
  %305 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10057, !tbaa !1116
  %306 = tail call i32 @dictAdd(%struct.dict* %305, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.216, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDictIter*, i8*, %struct.redisObject*)* @RM_DictCompare to i8*)) #11, !dbg !10058
  %307 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10062, !tbaa !1116
  %308 = tail call i32 @dictAdd(%struct.dict* %307, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.217, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i8*)* @RM_ExportSharedAPI to i8*)) #11, !dbg !10063
  %309 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10067, !tbaa !1116
  %310 = tail call i32 @dictAdd(%struct.dict* %309, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.218, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCtx*, i8*)* @RM_GetSharedAPI to i8*)) #11, !dbg !10068
  %311 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10072, !tbaa !1116
  %312 = tail call i32 @dictAdd(%struct.dict* %311, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.219, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCommandFilter* (%struct.RedisModuleCtx*, void (%struct.RedisModuleCommandFilterCtx*)*, i32)* @RM_RegisterCommandFilter to i8*)) #11, !dbg !10073
  %313 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10077, !tbaa !1116
  %314 = tail call i32 @dictAdd(%struct.dict* %313, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.220, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, %struct.RedisModuleCommandFilter*)* @RM_UnregisterCommandFilter to i8*)) #11, !dbg !10078
  %315 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10082, !tbaa !1116
  %316 = tail call i32 @dictAdd(%struct.dict* %315, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.221, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCommandFilterCtx*)* @RM_CommandFilterArgsCount to i8*)) #11, !dbg !10083
  %317 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10087, !tbaa !1116
  %318 = tail call i32 @dictAdd(%struct.dict* %317, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.222, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCommandFilterCtx*, i32)* @RM_CommandFilterArgGet to i8*)) #11, !dbg !10088
  %319 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10092, !tbaa !1116
  %320 = tail call i32 @dictAdd(%struct.dict* %319, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.223, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCommandFilterCtx*, i32, %struct.redisObject*)* @RM_CommandFilterArgInsert to i8*)) #11, !dbg !10093
  %321 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10097, !tbaa !1116
  %322 = tail call i32 @dictAdd(%struct.dict* %321, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.224, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCommandFilterCtx*, i32, %struct.redisObject*)* @RM_CommandFilterArgReplace to i8*)) #11, !dbg !10098
  %323 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10102, !tbaa !1116
  %324 = tail call i32 @dictAdd(%struct.dict* %323, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.225, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCommandFilterCtx*, i32)* @RM_CommandFilterArgDelete to i8*)) #11, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: noredzone
declare dso_local i32 @pipe(i32*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @strerror(i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @anetNonBlock(i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleLoadFromQueue() local_unnamed_addr #0 !dbg !10105 {
  %1 = alloca %struct.listIter, align 8
  %2 = bitcast %struct.listIter* %1 to i8*, !dbg !10117
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #6, !dbg !10117
  %3 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 25), align 8, !dbg !10118, !tbaa !9265
  call void @listRewind(%struct.list* %3, %struct.listIter* nonnull %1) #11, !dbg !10120
  br label %4, !dbg !10121

; <label>:4:                                      ; preds = %7, %0
  %5 = call %struct.listNode* @listNext(%struct.listIter* nonnull %1) #11, !dbg !10122
  %6 = icmp eq %struct.listNode* %5, null, !dbg !10121
  br i1 %6, label %23, label %7, !dbg !10121

; <label>:7:                                      ; preds = %4
  %8 = getelementptr inbounds %struct.listNode, %struct.listNode* %5, i64 0, i32 2, !dbg !10124
  %9 = bitcast i8** %8 to %struct.moduleLoadQueueEntry**, !dbg !10124
  %10 = load %struct.moduleLoadQueueEntry*, %struct.moduleLoadQueueEntry** %9, align 8, !dbg !10124, !tbaa !5585
  %11 = getelementptr inbounds %struct.moduleLoadQueueEntry, %struct.moduleLoadQueueEntry* %10, i64 0, i32 0, !dbg !10126
  %12 = load i8*, i8** %11, align 8, !dbg !10126, !tbaa !10128
  %13 = getelementptr inbounds %struct.moduleLoadQueueEntry, %struct.moduleLoadQueueEntry* %10, i64 0, i32 2, !dbg !10130
  %14 = bitcast %struct.redisObject*** %13 to i8***, !dbg !10130
  %15 = load i8**, i8*** %14, align 8, !dbg !10130, !tbaa !10131
  %16 = getelementptr inbounds %struct.moduleLoadQueueEntry, %struct.moduleLoadQueueEntry* %10, i64 0, i32 1, !dbg !10132
  %17 = load i32, i32* %16, align 8, !dbg !10132, !tbaa !10133
  %18 = call i32 @moduleLoad(i8* %12, i8** %15, i32 %17) #12, !dbg !10134
  %19 = icmp eq i32 %18, -1, !dbg !10135
  br i1 %19, label %20, label %4, !dbg !10136, !llvm.loop !10137

; <label>:20:                                     ; preds = %7
  %21 = getelementptr inbounds %struct.moduleLoadQueueEntry, %struct.moduleLoadQueueEntry* %10, i64 0, i32 0, !dbg !10126
  %22 = load i8*, i8** %21, align 8, !dbg !10139, !tbaa !10128
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i8* %22) #11, !dbg !10141
  call void @exit(i32 1) #14, !dbg !10142
  unreachable, !dbg !10142

; <label>:23:                                     ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #6, !dbg !10143
  ret void, !dbg !10143
}

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleLoad(i8*, i8**, i32) local_unnamed_addr #0 !dbg !10144 {
  %4 = alloca %struct.listIter, align 8
  %5 = alloca %struct.RedisModuleCtx, align 8
  %6 = bitcast %struct.RedisModuleCtx* %5 to i8*, !dbg !10157
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %6) #6, !dbg !10157
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 1
  %8 = bitcast %struct.RedisModule** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 96, i1 false), !dbg !10158
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 0, !dbg !10158
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %9, align 8, !dbg !10158
  %10 = tail call i8* @dlopen(i8* %0, i32 2) #11, !dbg !10159
  %11 = icmp eq i8* %10, null, !dbg !10161
  br i1 %11, label %12, label %14, !dbg !10163

; <label>:12:                                     ; preds = %3
  %13 = tail call i8* @dlerror() #11, !dbg !10164
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i64 0, i64 0), i8* %0, i8* %13) #11, !dbg !10166
  br label %75, !dbg !10167

; <label>:14:                                     ; preds = %3
  %15 = tail call i8* @dlsym(i8* nonnull %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0)) #11, !dbg !10168
  %16 = icmp eq i8* %15, null, !dbg !10169
  br i1 %16, label %17, label %19, !dbg !10171

; <label>:17:                                     ; preds = %14
  %18 = tail call i32 @dlclose(i8* nonnull %10) #11, !dbg !10172
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.44, i64 0, i64 0), i8* %0) #11, !dbg !10174
  br label %75, !dbg !10175

; <label>:19:                                     ; preds = %14
  %20 = bitcast i8* %15 to i32 (i8*, i8**, i32)*, !dbg !10176
  %21 = call i32 %20(i8* nonnull %6, i8** %1, i32 %2) #11, !dbg !10178
  %22 = icmp eq i32 %21, 1, !dbg !10180
  br i1 %22, label %23, label %63, !dbg !10181

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 1, !dbg !10182
  %25 = load %struct.RedisModule*, %struct.RedisModule** %24, align 8, !dbg !10182, !tbaa !1156
  %26 = icmp eq %struct.RedisModule* %25, null, !dbg !10185
  br i1 %26, label %61, label %27, !dbg !10186

; <label>:27:                                     ; preds = %23
  call void @moduleUnregisterCommands(%struct.RedisModule* nonnull %25) #12, !dbg !10187
  %28 = load %struct.RedisModule*, %struct.RedisModule** %24, align 8, !dbg !10189, !tbaa !1156
  %29 = call i32 @moduleUnregisterSharedAPI(%struct.RedisModule* %28) #12, !dbg !10190
  %30 = load %struct.RedisModule*, %struct.RedisModule** %24, align 8, !dbg !10191, !tbaa !1156
  %31 = bitcast %struct.listIter* %4 to i8*, !dbg !10194
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #6, !dbg !10194
  %32 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %30, i64 0, i32 6, !dbg !10196
  %33 = load %struct.list*, %struct.list** %32, align 8, !dbg !10196, !tbaa !1665
  call void @listRewind(%struct.list* %33, %struct.listIter* nonnull %4) #11, !dbg !10198
  %34 = call %struct.listNode* @listNext(%struct.listIter* nonnull %4) #11, !dbg !10199
  %35 = icmp eq %struct.listNode* %34, null, !dbg !10201
  br i1 %35, label %52, label %36, !dbg !10201

; <label>:36:                                     ; preds = %27
  %37 = bitcast %struct.RedisModule* %30 to i8*
  br label %38, !dbg !10201

; <label>:38:                                     ; preds = %49, %36
  %39 = phi %struct.listNode* [ %34, %36 ], [ %50, %49 ]
  %40 = getelementptr inbounds %struct.listNode, %struct.listNode* %39, i64 0, i32 2, !dbg !10202
  %41 = bitcast i8** %40 to %struct.RedisModule**, !dbg !10202
  %42 = load %struct.RedisModule*, %struct.RedisModule** %41, align 8, !dbg !10202, !tbaa !5585
  %43 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %42, i64 0, i32 5, !dbg !10204
  %44 = load %struct.list*, %struct.list** %43, align 8, !dbg !10204, !tbaa !1661
  %45 = call %struct.listNode* @listSearchKey(%struct.list* %44, i8* %37) #11, !dbg !10205
  %46 = icmp eq %struct.listNode* %45, null, !dbg !10207
  br i1 %46, label %49, label %47, !dbg !10208

; <label>:47:                                     ; preds = %38
  %48 = load %struct.list*, %struct.list** %32, align 8, !dbg !10209, !tbaa !1665
  call void @listDelNode(%struct.list* %48, %struct.listNode* nonnull %45) #11, !dbg !10210
  br label %49, !dbg !10211

; <label>:49:                                     ; preds = %47, %38
  %50 = call %struct.listNode* @listNext(%struct.listIter* nonnull %4) #11, !dbg !10199
  %51 = icmp eq %struct.listNode* %50, null, !dbg !10201
  br i1 %51, label %52, label %38, !dbg !10201, !llvm.loop !8996

; <label>:52:                                     ; preds = %49, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #6, !dbg !10212
  %53 = load %struct.RedisModule*, %struct.RedisModule** %24, align 8, !dbg !10213, !tbaa !1156
  %54 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %53, i64 0, i32 4, !dbg !10221
  %55 = load %struct.list*, %struct.list** %54, align 8, !dbg !10221, !tbaa !1657
  call void @listRelease(%struct.list* %55) #11, !dbg !10222
  %56 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %53, i64 0, i32 7, !dbg !10223
  %57 = load %struct.list*, %struct.list** %56, align 8, !dbg !10223, !tbaa !1669
  call void @listRelease(%struct.list* %57) #11, !dbg !10224
  %58 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %53, i64 0, i32 1, !dbg !10225
  %59 = load i8*, i8** %58, align 8, !dbg !10225, !tbaa !1158
  call void @sdsfree(i8* %59) #11, !dbg !10226
  %60 = bitcast %struct.RedisModule* %53 to i8*, !dbg !10227
  call void @zfree(i8* %60) #11, !dbg !10228
  br label %61, !dbg !10229

; <label>:61:                                     ; preds = %23, %52
  %62 = call i32 @dlclose(i8* nonnull %10) #11, !dbg !10230
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.45, i64 0, i64 0), i8* %0) #11, !dbg !10231
  br label %75, !dbg !10232

; <label>:63:                                     ; preds = %19
  %64 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10233, !tbaa !902
  %65 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 1, !dbg !10234
  %66 = load %struct.RedisModule*, %struct.RedisModule** %65, align 8, !dbg !10234, !tbaa !1156
  %67 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %66, i64 0, i32 1, !dbg !10235
  %68 = load i8*, i8** %67, align 8, !dbg !10235, !tbaa !1158
  %69 = bitcast %struct.RedisModule* %66 to i8*, !dbg !10236
  %70 = call i32 @dictAdd(%struct.dict* %64, i8* %68, i8* %69) #11, !dbg !10237
  %71 = load %struct.RedisModule*, %struct.RedisModule** %65, align 8, !dbg !10238, !tbaa !1156
  %72 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %71, i64 0, i32 0, !dbg !10239
  store i8* %10, i8** %72, align 8, !dbg !10240, !tbaa !10241
  %73 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %71, i64 0, i32 1, !dbg !10242
  %74 = load i8*, i8** %73, align 8, !dbg !10242, !tbaa !1158
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %74, i8* %0) #11, !dbg !10243
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %5) #12, !dbg !10244
  br label %75, !dbg !10245

; <label>:75:                                     ; preds = %63, %61, %17, %12
  %76 = phi i32 [ -1, %12 ], [ -1, %17 ], [ -1, %61 ], [ 0, %63 ], !dbg !10246
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %6) #6, !dbg !10247
  ret i32 %76, !dbg !10247
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleFreeModuleStructure(%struct.RedisModule*) local_unnamed_addr #0 !dbg !10215 {
  %2 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 4, !dbg !10249
  %3 = load %struct.list*, %struct.list** %2, align 8, !dbg !10249, !tbaa !1657
  tail call void @listRelease(%struct.list* %3) #11, !dbg !10250
  %4 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 7, !dbg !10251
  %5 = load %struct.list*, %struct.list** %4, align 8, !dbg !10251, !tbaa !1669
  tail call void @listRelease(%struct.list* %5) #11, !dbg !10252
  %6 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 1, !dbg !10253
  %7 = load i8*, i8** %6, align 8, !dbg !10253, !tbaa !1158
  tail call void @sdsfree(i8* %7) #11, !dbg !10254
  %8 = bitcast %struct.RedisModule* %0 to i8*, !dbg !10255
  tail call void @zfree(i8* %8) #11, !dbg !10256
  ret void, !dbg !10257
}

; Function Attrs: noredzone
declare dso_local void @listRelease(%struct.list*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleUnregisterCommands(%struct.RedisModule* readnone) local_unnamed_addr #0 !dbg !10258 {
  %2 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !10270, !tbaa !1614
  %3 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %2) #11, !dbg !10271
  %4 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %3) #11, !dbg !10273
  %5 = icmp eq %struct.dictEntry* %4, null, !dbg !10275
  br i1 %5, label %36, label %6, !dbg !10276

; <label>:6:                                      ; preds = %1, %33
  %7 = phi %struct.dictEntry* [ %34, %33 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %7, i64 0, i32 1, i32 0, !dbg !10277
  %9 = bitcast i8** %8 to %struct.redisCommand**, !dbg !10277
  %10 = load %struct.redisCommand*, %struct.redisCommand** %9, align 8, !dbg !10277, !tbaa !1123
  %11 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %10, i64 0, i32 1, !dbg !10279
  %12 = load void (%struct.client*)*, void (%struct.client*)** %11, align 8, !dbg !10279, !tbaa !1591
  %13 = icmp eq void (%struct.client*)* %12, @RedisModuleCommandDispatcher, !dbg !10280
  br i1 %13, label %14, label %33, !dbg !10281

; <label>:14:                                     ; preds = %6
  %15 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %10, i64 0, i32 5, !dbg !10282
  %16 = bitcast i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)** %15 to i8**, !dbg !10282
  %17 = load i8*, i8** %16, align 8, !dbg !10282, !tbaa !1301
  %18 = getelementptr inbounds i8, i8* %17, i64 16, !dbg !10284
  %19 = bitcast i8* %18 to %struct.redisCommand**, !dbg !10284
  %20 = load %struct.redisCommand*, %struct.redisCommand** %19, align 8, !dbg !10284, !tbaa !1585
  %21 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %20, i64 0, i32 0, !dbg !10285
  %22 = load i8*, i8** %21, align 8, !dbg !10285, !tbaa !1588
  %23 = bitcast i8* %17 to %struct.RedisModule**, !dbg !10287
  %24 = load %struct.RedisModule*, %struct.RedisModule** %23, align 8, !dbg !10287, !tbaa !1307
  %25 = icmp eq %struct.RedisModule* %24, %0, !dbg !10289
  br i1 %25, label %26, label %33, !dbg !10290

; <label>:26:                                     ; preds = %14
  %27 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !10291, !tbaa !1614
  %28 = tail call i32 @dictDelete(%struct.dict* %27, i8* %22) #11, !dbg !10293
  %29 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9), align 8, !dbg !10294, !tbaa !1619
  %30 = tail call i32 @dictDelete(%struct.dict* %29, i8* %22) #11, !dbg !10295
  tail call void @sdsfree(i8* %22) #11, !dbg !10296
  %31 = bitcast i8* %18 to i8**, !dbg !10297
  %32 = load i8*, i8** %31, align 8, !dbg !10297, !tbaa !1585
  tail call void @zfree(i8* %32) #11, !dbg !10298
  tail call void @zfree(i8* %17) #11, !dbg !10299
  br label %33, !dbg !10300

; <label>:33:                                     ; preds = %14, %26, %6
  %34 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %3) #11, !dbg !10273
  %35 = icmp eq %struct.dictEntry* %34, null, !dbg !10275
  br i1 %35, label %36, label %6, !dbg !10276, !llvm.loop !10301

; <label>:36:                                     ; preds = %33, %1
  tail call void @dictReleaseIterator(%struct.dictIterator* %3) #11, !dbg !10303
  ret void, !dbg !10304
}

; Function Attrs: noredzone
declare dso_local i8* @dlopen(i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @dlerror() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @dlsym(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @dlclose(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleUnload(i8*) local_unnamed_addr #0 !dbg !10305 {
  %2 = alloca %struct.listIter, align 8
  %3 = alloca %struct.listIter, align 8
  %4 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10315, !tbaa !902
  %5 = tail call i8* @dictFetchValue(%struct.dict* %4, i8* %0) #11, !dbg !10316
  %6 = bitcast i8* %5 to %struct.RedisModule*, !dbg !10316
  %7 = icmp eq i8* %5, null, !dbg !10318
  br i1 %7, label %8, label %10, !dbg !10320

; <label>:8:                                      ; preds = %1
  %9 = tail call i32* @__errno() #11, !dbg !10321
  store i32 2, i32* %9, align 4, !dbg !10323, !tbaa !933
  br label %94, !dbg !10324

; <label>:10:                                     ; preds = %1
  %11 = getelementptr inbounds i8, i8* %5, i64 24, !dbg !10325
  %12 = bitcast i8* %11 to %struct.list**, !dbg !10325
  %13 = load %struct.list*, %struct.list** %12, align 8, !dbg !10325, !tbaa !1657
  %14 = getelementptr inbounds %struct.list, %struct.list* %13, i64 0, i32 5, !dbg !10325
  %15 = load i64, i64* %14, align 8, !dbg !10325, !tbaa !5580
  %16 = icmp eq i64 %15, 0, !dbg !10325
  br i1 %16, label %19, label %17, !dbg !10327

; <label>:17:                                     ; preds = %10
  %18 = tail call i32* @__errno() #11, !dbg !10328
  store i32 16, i32* %18, align 4, !dbg !10330, !tbaa !933
  br label %94, !dbg !10331

; <label>:19:                                     ; preds = %10
  %20 = getelementptr inbounds i8, i8* %5, i64 32, !dbg !10332
  %21 = bitcast i8* %20 to %struct.list**, !dbg !10332
  %22 = load %struct.list*, %struct.list** %21, align 8, !dbg !10332, !tbaa !1661
  %23 = getelementptr inbounds %struct.list, %struct.list* %22, i64 0, i32 5, !dbg !10332
  %24 = load i64, i64* %23, align 8, !dbg !10332, !tbaa !5580
  %25 = icmp eq i64 %24, 0, !dbg !10332
  br i1 %25, label %28, label %26, !dbg !10334

; <label>:26:                                     ; preds = %19
  %27 = tail call i32* @__errno() #11, !dbg !10335
  store i32 1, i32* %27, align 4, !dbg !10337, !tbaa !933
  br label %94, !dbg !10338

; <label>:28:                                     ; preds = %19
  tail call void @moduleUnregisterCommands(%struct.RedisModule* nonnull %6) #12, !dbg !10339
  %29 = tail call i32 @moduleUnregisterSharedAPI(%struct.RedisModule* nonnull %6) #12, !dbg !10340
  %30 = bitcast %struct.listIter* %3 to i8*, !dbg !10343
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #6, !dbg !10343
  %31 = getelementptr inbounds i8, i8* %5, i64 40, !dbg !10345
  %32 = bitcast i8* %31 to %struct.list**, !dbg !10345
  %33 = load %struct.list*, %struct.list** %32, align 8, !dbg !10345, !tbaa !1665
  call void @listRewind(%struct.list* %33, %struct.listIter* nonnull %3) #11, !dbg !10347
  %34 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #11, !dbg !10348
  %35 = icmp eq %struct.listNode* %34, null, !dbg !10350
  br i1 %35, label %50, label %36, !dbg !10350

; <label>:36:                                     ; preds = %28, %47
  %37 = phi %struct.listNode* [ %48, %47 ], [ %34, %28 ]
  %38 = getelementptr inbounds %struct.listNode, %struct.listNode* %37, i64 0, i32 2, !dbg !10351
  %39 = bitcast i8** %38 to %struct.RedisModule**, !dbg !10351
  %40 = load %struct.RedisModule*, %struct.RedisModule** %39, align 8, !dbg !10351, !tbaa !5585
  %41 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %40, i64 0, i32 5, !dbg !10353
  %42 = load %struct.list*, %struct.list** %41, align 8, !dbg !10353, !tbaa !1661
  %43 = call %struct.listNode* @listSearchKey(%struct.list* %42, i8* nonnull %5) #11, !dbg !10354
  %44 = icmp eq %struct.listNode* %43, null, !dbg !10356
  br i1 %44, label %47, label %45, !dbg !10357

; <label>:45:                                     ; preds = %36
  %46 = load %struct.list*, %struct.list** %32, align 8, !dbg !10358, !tbaa !1665
  call void @listDelNode(%struct.list* %46, %struct.listNode* nonnull %43) #11, !dbg !10359
  br label %47, !dbg !10360

; <label>:47:                                     ; preds = %45, %36
  %48 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #11, !dbg !10348
  %49 = icmp eq %struct.listNode* %48, null, !dbg !10350
  br i1 %49, label %50, label %36, !dbg !10350, !llvm.loop !8996

; <label>:50:                                     ; preds = %47, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #6, !dbg !10361
  %51 = call i32 @moduleUnregisterFilters(%struct.RedisModule* %6) #12, !dbg !10362
  %52 = bitcast %struct.listIter* %2 to i8*, !dbg !10365
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #6, !dbg !10365
  %53 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !10366, !tbaa !902
  call void @listRewind(%struct.list* %53, %struct.listIter* nonnull %2) #11, !dbg !10368
  %54 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !10369
  %55 = icmp eq %struct.listNode* %54, null, !dbg !10371
  br i1 %55, label %68, label %56, !dbg !10371

; <label>:56:                                     ; preds = %50, %65
  %57 = phi %struct.listNode* [ %66, %65 ], [ %54, %50 ]
  %58 = getelementptr inbounds %struct.listNode, %struct.listNode* %57, i64 0, i32 2, !dbg !10372
  %59 = load i8*, i8** %58, align 8, !dbg !10372, !tbaa !5585
  %60 = bitcast i8* %59 to %struct.RedisModule**, !dbg !10374
  %61 = load %struct.RedisModule*, %struct.RedisModule** %60, align 8, !dbg !10374, !tbaa !7327
  %62 = icmp eq %struct.RedisModule* %61, %6, !dbg !10375
  br i1 %62, label %63, label %65, !dbg !10376

; <label>:63:                                     ; preds = %56
  %64 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !10377, !tbaa !902
  call void @listDelNode(%struct.list* %64, %struct.listNode* nonnull %57) #11, !dbg !10378
  call void @zfree(i8* %59) #11, !dbg !10379
  br label %65, !dbg !10380

; <label>:65:                                     ; preds = %63, %56
  %66 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #11, !dbg !10369
  %67 = icmp eq %struct.listNode* %66, null, !dbg !10371
  br i1 %67, label %68, label %56, !dbg !10371, !llvm.loop !7424

; <label>:68:                                     ; preds = %65, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #6, !dbg !10381
  %69 = bitcast i8* %5 to i8**, !dbg !10382
  %70 = load i8*, i8** %69, align 8, !dbg !10382, !tbaa !10241
  %71 = call i32 @dlclose(i8* %70) #11, !dbg !10383
  %72 = icmp eq i32 %71, -1, !dbg !10384
  br i1 %72, label %76, label %73, !dbg !10385

; <label>:73:                                     ; preds = %68
  %74 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !10386
  %75 = bitcast i8* %74 to i8**, !dbg !10386
  br label %83, !dbg !10385

; <label>:76:                                     ; preds = %68
  %77 = call i8* @dlerror() #11, !dbg !10387
  %78 = icmp eq i8* %77, null, !dbg !10389
  %79 = select i1 %78, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i64 0, i64 0), i8* %77, !dbg !10391
  %80 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !10392
  %81 = bitcast i8* %80 to i8**, !dbg !10392
  %82 = load i8*, i8** %81, align 8, !dbg !10392, !tbaa !1158
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.48, i64 0, i64 0), i8* %82, i8* %79) #11, !dbg !10393
  br label %83, !dbg !10394

; <label>:83:                                     ; preds = %73, %76
  %84 = phi i8** [ %75, %73 ], [ %81, %76 ], !dbg !10386
  %85 = load i8*, i8** %84, align 8, !dbg !10386, !tbaa !1158
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0), i8* %85) #11, !dbg !10395
  %86 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10396, !tbaa !902
  %87 = load i8*, i8** %84, align 8, !dbg !10397, !tbaa !1158
  %88 = call i32 @dictDelete(%struct.dict* %86, i8* %87) #11, !dbg !10398
  store i8* null, i8** %84, align 8, !dbg !10399, !tbaa !1158
  %89 = load %struct.list*, %struct.list** %12, align 8, !dbg !10402, !tbaa !1657
  call void @listRelease(%struct.list* %89) #11, !dbg !10403
  %90 = getelementptr inbounds i8, i8* %5, i64 48, !dbg !10404
  %91 = bitcast i8* %90 to %struct.list**, !dbg !10404
  %92 = load %struct.list*, %struct.list** %91, align 8, !dbg !10404, !tbaa !1669
  call void @listRelease(%struct.list* %92) #11, !dbg !10405
  %93 = load i8*, i8** %84, align 8, !dbg !10406, !tbaa !1158
  call void @sdsfree(i8* %93) #11, !dbg !10407
  call void @zfree(i8* nonnull %5) #11, !dbg !10408
  br label %94, !dbg !10409

; <label>:94:                                     ; preds = %83, %26, %17, %8
  %95 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %26 ], [ 0, %83 ], !dbg !10410
  ret i32 %95, !dbg !10411
}

; Function Attrs: noredzone
declare dso_local i8* @dictFetchValue(%struct.dict*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleCommand(%struct.client*) local_unnamed_addr #0 !dbg !10412 {
  %2 = alloca [4 x i8*], align 16
  %3 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !10437
  %4 = load %struct.redisObject**, %struct.redisObject*** %3, align 8, !dbg !10437, !tbaa !1316
  %5 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 1, !dbg !10438
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !10438, !tbaa !902
  %7 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 2, !dbg !10439
  %8 = load i8*, i8** %7, align 8, !dbg !10439, !tbaa !1041
  %9 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !10441
  %10 = load i32, i32* %9, align 8, !dbg !10441, !tbaa !1318
  %11 = icmp eq i32 %10, 2, !dbg !10442
  br i1 %11, label %12, label %18, !dbg !10443

; <label>:12:                                     ; preds = %1
  %13 = tail call i32 @strcasecmp(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0)) #13, !dbg !10444
  %14 = icmp eq i32 %13, 0, !dbg !10444
  br i1 %14, label %15, label %18, !dbg !10445

; <label>:15:                                     ; preds = %12
  %16 = bitcast [4 x i8*]* %2 to i8*, !dbg !10446
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6, !dbg !10446
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* align 16 bitcast ([4 x i8*]* @moduleCommand.help to i8*), i64 32, i1 false), !dbg !10447
  %17 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 0, !dbg !10448
  call void @addReplyHelp(%struct.client* nonnull %0, i8** nonnull %17) #11, !dbg !10449
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6, !dbg !10450
  br label %117, !dbg !10451

; <label>:18:                                     ; preds = %12, %1
  %19 = tail call i32 @strcasecmp(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0)) #13, !dbg !10452
  %20 = icmp eq i32 %19, 0, !dbg !10452
  %21 = icmp sgt i32 %10, 2, !dbg !10453
  %22 = and i1 %21, %20, !dbg !10454
  br i1 %22, label %23, label %39, !dbg !10454

; <label>:23:                                     ; preds = %18
  %24 = icmp eq i32 %10, 3, !dbg !10457
  %25 = add nsw i32 %10, -3, !dbg !10459
  %26 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 3, !dbg !10461
  %27 = bitcast %struct.redisObject** %26 to i8**, !dbg !10462
  %28 = select i1 %24, i32 0, i32 %25, !dbg !10463
  %29 = select i1 %24, i8** null, i8** %27, !dbg !10463
  %30 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 2, !dbg !10464
  %31 = load %struct.redisObject*, %struct.redisObject** %30, align 8, !dbg !10464, !tbaa !902
  %32 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %31, i64 0, i32 2, !dbg !10466
  %33 = load i8*, i8** %32, align 8, !dbg !10466, !tbaa !1041
  %34 = tail call i32 @moduleLoad(i8* %33, i8** %29, i32 %28) #12, !dbg !10467
  %35 = icmp eq i32 %34, 0, !dbg !10468
  br i1 %35, label %36, label %38, !dbg !10469

; <label>:36:                                     ; preds = %23
  %37 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10470, !tbaa !10471
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %37) #11, !dbg !10472
  br label %117, !dbg !10472

; <label>:38:                                     ; preds = %23
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.55, i64 0, i64 0)) #11, !dbg !10473
  br label %117

; <label>:39:                                     ; preds = %18
  %40 = tail call i32 @strcasecmp(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0)) #13, !dbg !10474
  %41 = icmp eq i32 %40, 0, !dbg !10474
  %42 = icmp eq i32 %10, 3, !dbg !10475
  %43 = and i1 %42, %41, !dbg !10476
  br i1 %43, label %44, label %61, !dbg !10476

; <label>:44:                                     ; preds = %39
  %45 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 2, !dbg !10477
  %46 = load %struct.redisObject*, %struct.redisObject** %45, align 8, !dbg !10477, !tbaa !902
  %47 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %46, i64 0, i32 2, !dbg !10478
  %48 = load i8*, i8** %47, align 8, !dbg !10478, !tbaa !1041
  %49 = tail call i32 @moduleUnload(i8* %48) #12, !dbg !10479
  %50 = icmp eq i32 %49, 0, !dbg !10480
  br i1 %50, label %51, label %53, !dbg !10481

; <label>:51:                                     ; preds = %44
  %52 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10482, !tbaa !10471
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %52) #11, !dbg !10483
  br label %117, !dbg !10483

; <label>:53:                                     ; preds = %44
  %54 = tail call i32* @__errno() #11, !dbg !10484
  %55 = load i32, i32* %54, align 4, !dbg !10484, !tbaa !933
  switch i32 %55, label %58 [
    i32 2, label %59
    i32 16, label %56
    i32 1, label %57
  ], !dbg !10485

; <label>:56:                                     ; preds = %53
  br label %59, !dbg !10486

; <label>:57:                                     ; preds = %53
  br label %59, !dbg !10488

; <label>:58:                                     ; preds = %53
  br label %59, !dbg !10489

; <label>:59:                                     ; preds = %53, %58, %57, %56
  %60 = phi i8* [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i64 0, i64 0), %58 ], [ getelementptr inbounds ([86 x i8], [86 x i8]* @.str.59, i64 0, i64 0), %57 ], [ getelementptr inbounds ([68 x i8], [68 x i8]* @.str.58, i64 0, i64 0), %56 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.57, i64 0, i64 0), %53 ], !dbg !10490
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i64 0, i64 0), i8* nonnull %60) #11, !dbg !10492
  br label %117

; <label>:61:                                     ; preds = %39
  %62 = tail call i32 @strcasecmp(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #13, !dbg !10493
  %63 = icmp ne i32 %62, 0, !dbg !10493
  %64 = xor i1 %11, true, !dbg !10494
  %65 = or i1 %63, %64, !dbg !10494
  br i1 %65, label %116, label %66, !dbg !10494

; <label>:66:                                     ; preds = %61
  %67 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10495, !tbaa !902
  %68 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %67) #11, !dbg !10496
  %69 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10498, !tbaa !902
  %70 = getelementptr inbounds %struct.dict, %struct.dict* %69, i64 0, i32 2, i64 0, i32 3, !dbg !10498
  %71 = load i64, i64* %70, align 8, !dbg !10498, !tbaa !7636
  %72 = getelementptr inbounds %struct.dict, %struct.dict* %69, i64 0, i32 2, i64 1, i32 3, !dbg !10498
  %73 = load i64, i64* %72, align 8, !dbg !10498, !tbaa !7636
  %74 = add i64 %73, %71, !dbg !10498
  tail call void @addReplyMultiBulkLen(%struct.client* nonnull %0, i64 %74) #11, !dbg !10499
  %75 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %68) #11, !dbg !10500
  %76 = icmp eq %struct.dictEntry* %75, null, !dbg !10502
  br i1 %76, label %115, label %77, !dbg !10503

; <label>:77:                                     ; preds = %66, %108
  %78 = phi %struct.dictEntry* [ %113, %108 ], [ %75, %66 ]
  %79 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %78, i64 0, i32 0, !dbg !10504
  %80 = load i8*, i8** %79, align 8, !dbg !10504, !tbaa !8949
  %81 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %78, i64 0, i32 1, i32 0, !dbg !10506
  %82 = bitcast i8** %81 to %struct.RedisModule**, !dbg !10506
  %83 = load %struct.RedisModule*, %struct.RedisModule** %82, align 8, !dbg !10506, !tbaa !1123
  tail call void @addReplyMultiBulkLen(%struct.client* %0, i64 4) #11, !dbg !10508
  tail call void @addReplyBulkCString(%struct.client* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #11, !dbg !10509
  %84 = getelementptr inbounds i8, i8* %80, i64 -1, !dbg !10512
  %85 = load i8, i8* %84, align 1, !dbg !10512, !tbaa !1123
  %86 = trunc i8 %85 to i3, !dbg !10514
  switch i3 %86, label %108 [
    i3 0, label %87
    i3 1, label %90
    i3 2, label %94
    i3 3, label %99
    i3 -4, label %104
  ], !dbg !10514

; <label>:87:                                     ; preds = %77
  %88 = lshr i8 %85, 3, !dbg !10515
  %89 = zext i8 %88 to i64, !dbg !10515
  br label %108, !dbg !10516

; <label>:90:                                     ; preds = %77
  %91 = getelementptr inbounds i8, i8* %80, i64 -3, !dbg !10517
  %92 = load i8, i8* %91, align 1, !dbg !10518, !tbaa !1123
  %93 = zext i8 %92 to i64, !dbg !10517
  br label %108, !dbg !10519

; <label>:94:                                     ; preds = %77
  %95 = getelementptr inbounds i8, i8* %80, i64 -5, !dbg !10520
  %96 = bitcast i8* %95 to i16*, !dbg !10521
  %97 = load i16, i16* %96, align 1, !dbg !10521, !tbaa !2350
  %98 = zext i16 %97 to i64, !dbg !10520
  br label %108, !dbg !10522

; <label>:99:                                     ; preds = %77
  %100 = getelementptr inbounds i8, i8* %80, i64 -9, !dbg !10523
  %101 = bitcast i8* %100 to i32*, !dbg !10524
  %102 = load i32, i32* %101, align 1, !dbg !10524, !tbaa !933
  %103 = zext i32 %102 to i64, !dbg !10523
  br label %108, !dbg !10525

; <label>:104:                                    ; preds = %77
  %105 = getelementptr inbounds i8, i8* %80, i64 -17, !dbg !10526
  %106 = bitcast i8* %105 to i64*, !dbg !10527
  %107 = load i64, i64* %106, align 1, !dbg !10527, !tbaa !2327
  br label %108, !dbg !10528

; <label>:108:                                    ; preds = %77, %87, %90, %94, %99, %104
  %109 = phi i64 [ %107, %104 ], [ %103, %99 ], [ %98, %94 ], [ %93, %90 ], [ %89, %87 ], [ 0, %77 ], !dbg !10529
  tail call void @addReplyBulkCBuffer(%struct.client* %0, i8* %80, i64 %109) #11, !dbg !10530
  tail call void @addReplyBulkCString(%struct.client* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0)) #11, !dbg !10531
  %110 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %83, i64 0, i32 2, !dbg !10532
  %111 = load i32, i32* %110, align 8, !dbg !10532, !tbaa !1650
  %112 = sext i32 %111 to i64, !dbg !10533
  tail call void @addReplyLongLong(%struct.client* %0, i64 %112) #11, !dbg !10534
  %113 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %68) #11, !dbg !10500
  %114 = icmp eq %struct.dictEntry* %113, null, !dbg !10502
  br i1 %114, label %115, label %77, !dbg !10503, !llvm.loop !10535

; <label>:115:                                    ; preds = %108, %66
  tail call void @dictReleaseIterator(%struct.dictIterator* %68) #11, !dbg !10537
  br label %117

; <label>:116:                                    ; preds = %61
  tail call void @addReplySubcommandSyntaxError(%struct.client* nonnull %0) #11, !dbg !10538
  br label %117, !dbg !10540

; <label>:117:                                    ; preds = %15, %115, %59, %51, %38, %36, %116
  ret void, !dbg !10541
}

; Function Attrs: noredzone
declare dso_local void @addReplyHelp(%struct.client*, i8**) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @addReplySubcommandSyntaxError(%struct.client*) local_unnamed_addr #2

; Function Attrs: norecurse noredzone nounwind readonly
define dso_local i64 @moduleCount() local_unnamed_addr #10 !dbg !10542 {
  %1 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10543, !tbaa !902
  %2 = getelementptr inbounds %struct.dict, %struct.dict* %1, i64 0, i32 2, i64 0, i32 3, !dbg !10543
  %3 = load i64, i64* %2, align 8, !dbg !10543, !tbaa !7636
  %4 = getelementptr inbounds %struct.dict, %struct.dict* %1, i64 0, i32 2, i64 1, i32 3, !dbg !10543
  %5 = load i64, i64* %4, align 8, !dbg !10543, !tbaa !7636
  %6 = add i64 %5, %3, !dbg !10543
  ret i64 %6, !dbg !10544
}

; Function Attrs: nounwind readnone speculatable

attributes #0 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noredzone nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin noredzone nounwind }
attributes #12 = { nobuiltin noredzone }
attributes #13 = { nobuiltin noredzone nounwind readonly }
attributes #14 = { nobuiltin noredzone noreturn nounwind }

!llvm.module.flags = !{!832, !833, !834}
!llvm.ident = !{!835}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "modules", scope: !2, file: !3, line: 68, type: !43, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !731)
!3 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/module.c", directory: "/root/.unikraft/apps/redis/build")
!4 = !{}
!5 = !{!6, !7, !8, !9, !11, !94, !143, !261, !262, !173, !346, !696, !699, !708, !717, !724}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!7 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisGetKeysProc", file: !13, line: 1306, baseType: !14)
!13 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.h", directory: "/root/.unikraft/apps/redis/build")
!14 = !DISubroutineType(types: !15)
!15 = !{!16, !18, !165, !17, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!19 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisCommand", file: !13, line: 1307, size: 640, elements: !20)
!20 = !{!21, !22, !252, !253, !254, !255, !256, !257, !258, !259, !260}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !19, file: !13, line: 1308, baseType: !9, size: 64)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !19, file: !13, line: 1309, baseType: !23, size: 64, offset: 64)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisCommandProc", file: !13, line: 1305, baseType: !25)
!25 = !DISubroutineType(types: !26)
!26 = !{null, !27}
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "client", file: !13, line: 780, baseType: !29)
!29 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "client", file: !13, line: 723, size: 135360, elements: !30)
!30 = !{!31, !36, !37, !142, !153, !156, !161, !162, !163, !164, !166, !167, !168, !169, !170, !171, !172, !174, !175, !178, !179, !180, !181, !182, !183, !184, !185, !190, !191, !192, !193, !194, !195, !196, !197, !201, !202, !206, !207, !223, !224, !241, !242, !243, !244, !245, !246, !247, !248}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !29, file: !13, line: 724, baseType: !32, size: 64)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !33, line: 60, baseType: !34)
!33 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !35, line: 105, baseType: !7)
!35 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!36 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !29, file: !13, line: 725, baseType: !17, size: 32, offset: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !29, file: !13, line: 726, baseType: !38, size: 64, offset: 128)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisDb", file: !13, line: 656, baseType: !40)
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisDb", file: !13, line: 647, size: 512, elements: !41)
!41 = !{!42, !106, !107, !108, !109, !110, !111, !113}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !40, file: !13, line: 648, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict", file: !45, line: 82, baseType: !46)
!45 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/dict.h", directory: "/root/.unikraft/apps/redis/build")
!46 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !45, line: 76, size: 768, elements: !47)
!47 = !{!48, !73, !74, !104, !105}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !46, file: !45, line: 77, baseType: !49, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictType", file: !45, line: 65, baseType: !51)
!51 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictType", file: !45, line: 58, size: 384, elements: !52)
!52 = !{!53, !59, !63, !64, !68, !72}
!53 = !DIDerivedType(tag: DW_TAG_member, name: "hashFunction", scope: !51, file: !45, line: 59, baseType: !54, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!55 = !DISubroutineType(types: !56)
!56 = !{!32, !57}
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!58 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "keyDup", scope: !51, file: !45, line: 60, baseType: !60, size: 64, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = !DISubroutineType(types: !62)
!62 = !{!6, !6, !57}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "valDup", scope: !51, file: !45, line: 61, baseType: !60, size: 64, offset: 128)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "keyCompare", scope: !51, file: !45, line: 62, baseType: !65, size: 64, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!66 = !DISubroutineType(types: !67)
!67 = !{!17, !6, !57, !57}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "keyDestructor", scope: !51, file: !45, line: 63, baseType: !69, size: 64, offset: 256)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DISubroutineType(types: !71)
!71 = !{null, !6, !6}
!72 = !DIDerivedType(tag: DW_TAG_member, name: "valDestructor", scope: !51, file: !45, line: 64, baseType: !69, size: 64, offset: 320)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !46, file: !45, line: 78, baseType: !6, size: 64, offset: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !46, file: !45, line: 79, baseType: !75, size: 512, offset: 128)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 512, elements: !102)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictht", file: !45, line: 74, baseType: !77)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictht", file: !45, line: 69, size: 256, elements: !78)
!78 = !{!79, !99, !100, !101}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !77, file: !45, line: 70, baseType: !80, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictEntry", file: !45, line: 56, baseType: !83)
!83 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictEntry", file: !45, line: 47, size: 192, elements: !84)
!84 = !{!85, !86, !97}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !83, file: !45, line: 48, baseType: !6, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !83, file: !45, line: 54, baseType: !87, size: 64, offset: 64)
!87 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !83, file: !45, line: 49, size: 64, elements: !88)
!88 = !{!89, !90, !91, !95}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !87, file: !45, line: 50, baseType: !6, size: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !87, file: !45, line: 51, baseType: !32, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "s64", scope: !87, file: !45, line: 52, baseType: !92, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !33, line: 56, baseType: !93)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !35, line: 103, baseType: !94)
!94 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !87, file: !45, line: 53, baseType: !96, size: 64)
!96 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !83, file: !45, line: 55, baseType: !98, size: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !77, file: !45, line: 71, baseType: !7, size: 64, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "sizemask", scope: !77, file: !45, line: 72, baseType: !7, size: 64, offset: 128)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !77, file: !45, line: 73, baseType: !7, size: 64, offset: 192)
!102 = !{!103}
!103 = !DISubrange(count: 2)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "rehashidx", scope: !46, file: !45, line: 80, baseType: !94, size: 64, offset: 640)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "iterators", scope: !46, file: !45, line: 81, baseType: !7, size: 64, offset: 704)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !40, file: !13, line: 649, baseType: !43, size: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "blocking_keys", scope: !40, file: !13, line: 650, baseType: !43, size: 64, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "ready_keys", scope: !40, file: !13, line: 651, baseType: !43, size: 64, offset: 192)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !40, file: !13, line: 652, baseType: !43, size: 64, offset: 256)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !40, file: !13, line: 653, baseType: !17, size: 32, offset: 320)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "avg_ttl", scope: !40, file: !13, line: 654, baseType: !112, size: 64, offset: 384)
!112 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "defrag_later", scope: !40, file: !13, line: 655, baseType: !114, size: 64, offset: 448)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !116, line: 54, baseType: !117)
!116 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/adlist.h", directory: "/root/.unikraft/apps/redis/build")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list", file: !116, line: 47, size: 384, elements: !118)
!118 = !{!119, !128, !129, !133, !137, !141}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !117, file: !116, line: 48, baseType: !120, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "listNode", file: !116, line: 40, baseType: !122)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listNode", file: !116, line: 36, size: 192, elements: !123)
!123 = !{!124, !126, !127}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !122, file: !116, line: 37, baseType: !125, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !122, file: !116, line: 38, baseType: !125, size: 64, offset: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !122, file: !116, line: 39, baseType: !6, size: 64, offset: 128)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !117, file: !116, line: 49, baseType: !120, size: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "dup", scope: !117, file: !116, line: 50, baseType: !130, size: 64, offset: 128)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!131 = !DISubroutineType(types: !132)
!132 = !{!6, !6}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !117, file: !116, line: 51, baseType: !134, size: 64, offset: 192)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!135 = !DISubroutineType(types: !136)
!136 = !{null, !6}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !117, file: !116, line: 52, baseType: !138, size: 64, offset: 256)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = !DISubroutineType(types: !140)
!140 = !{!17, !6, !6}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !117, file: !116, line: 53, baseType: !7, size: 64, offset: 320)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !29, file: !13, line: 727, baseType: !143, size: 64, offset: 192)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "robj", file: !13, line: 622, baseType: !145)
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisObject", file: !13, line: 614, size: 128, elements: !146)
!146 = !{!147, !149, !150, !151, !152}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !145, file: !13, line: 615, baseType: !148, size: 4, flags: DIFlagBitField, extraData: i64 0)
!148 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !145, file: !13, line: 616, baseType: !148, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !145, file: !13, line: 617, baseType: !148, size: 24, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !145, file: !13, line: 620, baseType: !17, size: 32, offset: 32)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !145, file: !13, line: 621, baseType: !6, size: 64, offset: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf", scope: !29, file: !13, line: 728, baseType: !154, size: 64, offset: 256)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sds", file: !155, line: 43, baseType: !9)
!155 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/sds.h", directory: "/root/.unikraft/apps/redis/build")
!156 = !DIDerivedType(tag: DW_TAG_member, name: "qb_pos", scope: !29, file: !13, line: 729, baseType: !157, size: 64, offset: 320)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !158, line: 40, baseType: !159)
!158 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/strings.h", directory: "/root/.unikraft/apps/redis/build")
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !160, line: 129, baseType: !7)
!160 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_types.h", directory: "/root/.unikraft/apps/redis/build")
!161 = !DIDerivedType(tag: DW_TAG_member, name: "pending_querybuf", scope: !29, file: !13, line: 730, baseType: !154, size: 64, offset: 384)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf_peak", scope: !29, file: !13, line: 734, baseType: !157, size: 64, offset: 448)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !29, file: !13, line: 735, baseType: !17, size: 32, offset: 512)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !29, file: !13, line: 736, baseType: !165, size: 64, offset: 576)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !29, file: !13, line: 737, baseType: !18, size: 64, offset: 640)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "lastcmd", scope: !29, file: !13, line: 737, baseType: !18, size: 64, offset: 704)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !29, file: !13, line: 738, baseType: !17, size: 32, offset: 768)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "multibulklen", scope: !29, file: !13, line: 739, baseType: !17, size: 32, offset: 800)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "bulklen", scope: !29, file: !13, line: 740, baseType: !94, size: 64, offset: 832)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !29, file: !13, line: 741, baseType: !114, size: 64, offset: 896)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "reply_bytes", scope: !29, file: !13, line: 742, baseType: !173, size: 64, offset: 960)
!173 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "sentlen", scope: !29, file: !13, line: 743, baseType: !157, size: 64, offset: 1024)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !29, file: !13, line: 745, baseType: !176, size: 64, offset: 1088)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !177, line: 34, baseType: !94)
!177 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/include/uk/time_types.h", directory: "/root/.unikraft/apps/redis/build")
!178 = !DIDerivedType(tag: DW_TAG_member, name: "lastinteraction", scope: !29, file: !13, line: 746, baseType: !176, size: 64, offset: 1152)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "obuf_soft_limit_reached_time", scope: !29, file: !13, line: 747, baseType: !176, size: 64, offset: 1216)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !29, file: !13, line: 748, baseType: !17, size: 32, offset: 1280)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !29, file: !13, line: 749, baseType: !17, size: 32, offset: 1312)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "replstate", scope: !29, file: !13, line: 750, baseType: !17, size: 32, offset: 1344)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "repl_put_online_on_ack", scope: !29, file: !13, line: 751, baseType: !17, size: 32, offset: 1376)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "repldbfd", scope: !29, file: !13, line: 752, baseType: !17, size: 32, offset: 1408)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "repldboff", scope: !29, file: !13, line: 753, baseType: !186, size: 64, offset: 1472)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !187, line: 173, baseType: !188)
!187 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/types.h", directory: "/root/.unikraft/apps/redis/build")
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !160, line: 100, baseType: !189)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !160, line: 44, baseType: !94)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "repldbsize", scope: !29, file: !13, line: 754, baseType: !186, size: 64, offset: 1536)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "replpreamble", scope: !29, file: !13, line: 755, baseType: !154, size: 64, offset: 1600)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "read_reploff", scope: !29, file: !13, line: 756, baseType: !112, size: 64, offset: 1664)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "reploff", scope: !29, file: !13, line: 757, baseType: !112, size: 64, offset: 1728)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_off", scope: !29, file: !13, line: 758, baseType: !112, size: 64, offset: 1792)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_time", scope: !29, file: !13, line: 759, baseType: !112, size: 64, offset: 1856)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "psync_initial_offset", scope: !29, file: !13, line: 760, baseType: !112, size: 64, offset: 1920)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "replid", scope: !29, file: !13, line: 763, baseType: !198, size: 328, offset: 1984)
!198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 328, elements: !199)
!199 = !{!200}
!200 = !DISubrange(count: 41)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "slave_listening_port", scope: !29, file: !13, line: 764, baseType: !17, size: 32, offset: 2336)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "slave_ip", scope: !29, file: !13, line: 765, baseType: !203, size: 368, offset: 2368)
!203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 368, elements: !204)
!204 = !{!205}
!205 = !DISubrange(count: 46)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "slave_capa", scope: !29, file: !13, line: 766, baseType: !17, size: 32, offset: 2752)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !29, file: !13, line: 767, baseType: !208, size: 256, offset: 2816)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiState", file: !13, line: 673, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiState", file: !13, line: 665, size: 256, elements: !210)
!210 = !{!211, !219, !220, !221, !222}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !209, file: !13, line: 666, baseType: !212, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiCmd", file: !13, line: 663, baseType: !214)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiCmd", file: !13, line: 659, size: 192, elements: !215)
!215 = !{!216, !217, !218}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !214, file: !13, line: 660, baseType: !165, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !214, file: !13, line: 661, baseType: !17, size: 32, offset: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !214, file: !13, line: 662, baseType: !18, size: 64, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !209, file: !13, line: 667, baseType: !17, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !209, file: !13, line: 668, baseType: !17, size: 32, offset: 96)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas", scope: !209, file: !13, line: 671, baseType: !17, size: 32, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas_timeout", scope: !209, file: !13, line: 672, baseType: !176, size: 64, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "btype", scope: !29, file: !13, line: 768, baseType: !17, size: 32, offset: 3072)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "bpop", scope: !29, file: !13, line: 769, baseType: !225, size: 704, offset: 3136)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "blockingState", file: !13, line: 703, baseType: !226)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blockingState", file: !13, line: 677, size: 704, elements: !227)
!227 = !{!228, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !226, file: !13, line: 679, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "mstime_t", file: !13, line: 52, baseType: !112)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !226, file: !13, line: 683, baseType: !43, size: 64, offset: 64)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !226, file: !13, line: 685, baseType: !143, size: 64, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "xread_count", scope: !226, file: !13, line: 689, baseType: !157, size: 64, offset: 192)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group", scope: !226, file: !13, line: 690, baseType: !143, size: 64, offset: 256)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "xread_consumer", scope: !226, file: !13, line: 691, baseType: !143, size: 64, offset: 320)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_time", scope: !226, file: !13, line: 692, baseType: !229, size: 64, offset: 384)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_ttl", scope: !226, file: !13, line: 692, baseType: !229, size: 64, offset: 448)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group_noack", scope: !226, file: !13, line: 693, baseType: !17, size: 32, offset: 512)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "numreplicas", scope: !226, file: !13, line: 696, baseType: !17, size: 32, offset: 544)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "reploffset", scope: !226, file: !13, line: 697, baseType: !112, size: 64, offset: 576)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "module_blocked_handle", scope: !226, file: !13, line: 700, baseType: !6, size: 64, offset: 640)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "woff", scope: !29, file: !13, line: 770, baseType: !112, size: 64, offset: 3840)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !29, file: !13, line: 771, baseType: !114, size: 64, offset: 3904)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !29, file: !13, line: 772, baseType: !43, size: 64, offset: 3968)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !29, file: !13, line: 773, baseType: !114, size: 64, offset: 4032)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "peerid", scope: !29, file: !13, line: 774, baseType: !154, size: 64, offset: 4096)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "client_list_node", scope: !29, file: !13, line: 775, baseType: !120, size: 64, offset: 4160)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "bufpos", scope: !29, file: !13, line: 778, baseType: !17, size: 32, offset: 4224)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !29, file: !13, line: 779, baseType: !249, size: 131072, offset: 4256)
!249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 131072, elements: !250)
!250 = !{!251}
!251 = !DISubrange(count: 16384)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !19, file: !13, line: 1310, baseType: !17, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "sflags", scope: !19, file: !13, line: 1311, baseType: !9, size: 64, offset: 192)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !19, file: !13, line: 1312, baseType: !17, size: 32, offset: 256)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "getkeys_proc", scope: !19, file: !13, line: 1315, baseType: !11, size: 64, offset: 320)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "firstkey", scope: !19, file: !13, line: 1317, baseType: !17, size: 32, offset: 384)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lastkey", scope: !19, file: !13, line: 1318, baseType: !17, size: 32, offset: 416)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "keystep", scope: !19, file: !13, line: 1319, baseType: !17, size: 32, offset: 448)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "microseconds", scope: !19, file: !13, line: 1320, baseType: !112, size: 64, offset: 512)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "calls", scope: !19, file: !13, line: 1320, baseType: !112, size: 64, offset: 576)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "typemethods", scope: !264, file: !3, line: 3072, size: 640, elements: !682)
!264 = distinct !DISubprogram(name: "RM_CreateDataType", scope: !3, file: !3, line: 3064, type: !265, isLocal: false, isDefinition: true, scopeLine: 3064, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !673)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !584, !523, !17, !6}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleType", file: !13, line: 530, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleType", file: !13, line: 517, size: 768, elements: !270)
!270 = !{!271, !272, !285, !628, !633, !638, !643, !656, !658, !663, !668, !669}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !269, file: !13, line: 518, baseType: !32, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !269, file: !13, line: 519, baseType: !273, size: 64, offset: 64)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModule", file: !3, line: 45, size: 512, elements: !275)
!275 = !{!276, !277, !278, !279, !280, !281, !282, !283, !284}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !274, file: !3, line: 46, baseType: !6, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !274, file: !3, line: 47, baseType: !9, size: 64, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !274, file: !3, line: 48, baseType: !17, size: 32, offset: 128)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "apiver", scope: !274, file: !3, line: 49, baseType: !17, size: 32, offset: 160)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !274, file: !3, line: 50, baseType: !114, size: 64, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "usedby", scope: !274, file: !3, line: 51, baseType: !114, size: 64, offset: 256)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "using", scope: !274, file: !3, line: 52, baseType: !114, size: 64, offset: 320)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !274, file: !3, line: 53, baseType: !114, size: 64, offset: 384)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "in_call", scope: !274, file: !3, line: 54, baseType: !17, size: 32, offset: 448)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_load", scope: !269, file: !13, line: 520, baseType: !286, size: 64, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeLoadFunc", file: !13, line: 506, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DISubroutineType(types: !289)
!289 = !{!6, !290, !17}
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleIO", file: !13, line: 555, size: 384, elements: !292)
!292 = !{!293, !294, !561, !562, !563, !564, !626}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !291, file: !13, line: 556, baseType: !157, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "rio", scope: !291, file: !13, line: 557, baseType: !295, size: 64, offset: 64)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "rio", file: !297, line: 87, baseType: !298)
!297 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rio.h", directory: "/root/.unikraft/apps/redis/build")
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rio", file: !297, line: 39, size: 832, elements: !299)
!299 = !{!300, !307, !311, !315, !319, !323, !324, !325, !326}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !298, file: !297, line: 43, baseType: !301, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DISubroutineType(types: !303)
!303 = !{!304, !306, !6, !304}
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !305, line: 58, baseType: !7)
!305 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stddef.h", directory: "/root/.unikraft/apps/redis/build")
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !298, file: !297, line: 44, baseType: !308, size: 64, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DISubroutineType(types: !310)
!310 = !{!304, !306, !57, !304}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tell", scope: !298, file: !297, line: 45, baseType: !312, size: 64, offset: 128)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = !DISubroutineType(types: !314)
!314 = !{!186, !306}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !298, file: !297, line: 46, baseType: !316, size: 64, offset: 192)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{!17, !306}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "update_cksum", scope: !298, file: !297, line: 52, baseType: !320, size: 64, offset: 256)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{null, !306, !57, !304}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "cksum", scope: !298, file: !297, line: 55, baseType: !32, size: 64, offset: 320)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "processed_bytes", scope: !298, file: !297, line: 58, baseType: !304, size: 64, offset: 384)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "max_processing_chunk", scope: !298, file: !297, line: 61, baseType: !304, size: 64, offset: 448)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !298, file: !297, line: 84, baseType: !327, size: 320, offset: 512)
!327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !298, file: !297, line: 64, size: 320, elements: !328)
!328 = !{!329, !334, !553}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !327, file: !297, line: 69, baseType: !330, size: 128)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !327, file: !297, line: 66, size: 128, elements: !331)
!331 = !{!332, !333}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !330, file: !297, line: 67, baseType: !154, size: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !330, file: !297, line: 68, baseType: !186, size: 64, offset: 64)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !327, file: !297, line: 75, baseType: !335, size: 192)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !327, file: !297, line: 71, size: 192, elements: !336)
!336 = !{!337, !551, !552}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !335, file: !297, line: 72, baseType: !338, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !340, line: 66, baseType: !341)
!340 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/stdio.h", directory: "/root/.unikraft/apps/redis/build")
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !342, line: 287, baseType: !343)
!342 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/reent.h", directory: "/root/.unikraft/apps/redis/build")
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !342, line: 181, size: 1408, elements: !344)
!344 = !{!345, !348, !349, !350, !352, !353, !358, !359, !360, !519, !525, !530, !534, !535, !536, !537, !539, !541, !542, !543, !544, !545, !549, !550}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !343, file: !342, line: 182, baseType: !346, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !343, file: !342, line: 183, baseType: !17, size: 32, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !343, file: !342, line: 184, baseType: !17, size: 32, offset: 96)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !343, file: !342, line: 185, baseType: !351, size: 16, offset: 128)
!351 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !343, file: !342, line: 186, baseType: !351, size: 16, offset: 144)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !343, file: !342, line: 187, baseType: !354, size: 128, offset: 192)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !342, line: 117, size: 128, elements: !355)
!355 = !{!356, !357}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !354, file: !342, line: 118, baseType: !346, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !354, file: !342, line: 119, baseType: !17, size: 32, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !343, file: !342, line: 188, baseType: !17, size: 32, offset: 320)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !343, file: !342, line: 195, baseType: !6, size: 64, offset: 384)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !343, file: !342, line: 197, baseType: !361, size: 64, offset: 448)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DISubroutineType(types: !363)
!363 = !{!364, !365, !6, !9, !17}
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "_ssize_t", file: !160, line: 145, baseType: !94)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !342, line: 569, size: 14912, elements: !367)
!367 = !{!368, !369, !371, !372, !373, !374, !378, !379, !382, !383, !387, !401, !402, !403, !405, !406, !407, !483, !504, !505, !510, !517}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !366, file: !342, line: 571, baseType: !17, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !366, file: !342, line: 576, baseType: !370, size: 64, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !366, file: !342, line: 576, baseType: !370, size: 64, offset: 128)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !366, file: !342, line: 576, baseType: !370, size: 64, offset: 192)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !366, file: !342, line: 578, baseType: !17, size: 32, offset: 256)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !366, file: !342, line: 579, baseType: !375, size: 200, offset: 288)
!375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 200, elements: !376)
!376 = !{!377}
!377 = !DISubrange(count: 25)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !366, file: !342, line: 582, baseType: !17, size: 32, offset: 512)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !366, file: !342, line: 583, baseType: !380, size: 64, offset: 576)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !342, line: 40, flags: DIFlagFwdDecl)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !366, file: !342, line: 585, baseType: !17, size: 32, offset: 640)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !366, file: !342, line: 587, baseType: !384, size: 64, offset: 704)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DISubroutineType(types: !386)
!386 = !{null, !365}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !366, file: !342, line: 590, baseType: !388, size: 64, offset: 768)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !342, line: 47, size: 256, elements: !390)
!390 = !{!391, !392, !393, !394, !395, !396}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !389, file: !342, line: 49, baseType: !388, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !389, file: !342, line: 50, baseType: !17, size: 32, offset: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !389, file: !342, line: 50, baseType: !17, size: 32, offset: 96)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !389, file: !342, line: 50, baseType: !17, size: 32, offset: 128)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !389, file: !342, line: 50, baseType: !17, size: 32, offset: 160)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !389, file: !342, line: 51, baseType: !397, size: 32, offset: 192)
!397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !398, size: 32, elements: !399)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !342, line: 25, baseType: !148)
!399 = !{!400}
!400 = !DISubrange(count: 1)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !366, file: !342, line: 591, baseType: !17, size: 32, offset: 832)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !366, file: !342, line: 592, baseType: !388, size: 64, offset: 896)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !366, file: !342, line: 593, baseType: !404, size: 64, offset: 960)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !366, file: !342, line: 596, baseType: !17, size: 32, offset: 1024)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !366, file: !342, line: 597, baseType: !9, size: 64, offset: 1088)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !366, file: !342, line: 632, baseType: !408, size: 2880, offset: 1152)
!408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !366, file: !342, line: 599, size: 2880, elements: !409)
!409 = !{!410, !474}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !408, file: !342, line: 622, baseType: !411, size: 1728)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !408, file: !342, line: 601, size: 1728, elements: !412)
!412 = !{!413, !414, !415, !419, !431, !432, !433, !443, !457, !458, !459, !463, !467, !468, !469, !470, !471, !472, !473}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !411, file: !342, line: 603, baseType: !148, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !411, file: !342, line: 604, baseType: !9, size: 64, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !411, file: !342, line: 605, baseType: !416, size: 208, offset: 128)
!416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 208, elements: !417)
!417 = !{!418}
!418 = !DISubrange(count: 26)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !411, file: !342, line: 606, baseType: !420, size: 288, offset: 352)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !342, line: 55, size: 288, elements: !421)
!421 = !{!422, !423, !424, !425, !426, !427, !428, !429, !430}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !420, file: !342, line: 57, baseType: !17, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !420, file: !342, line: 58, baseType: !17, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !420, file: !342, line: 59, baseType: !17, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !420, file: !342, line: 60, baseType: !17, size: 32, offset: 96)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !420, file: !342, line: 61, baseType: !17, size: 32, offset: 128)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !420, file: !342, line: 62, baseType: !17, size: 32, offset: 160)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !420, file: !342, line: 63, baseType: !17, size: 32, offset: 192)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !420, file: !342, line: 64, baseType: !17, size: 32, offset: 224)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !420, file: !342, line: 65, baseType: !17, size: 32, offset: 256)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !411, file: !342, line: 607, baseType: !17, size: 32, offset: 640)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !411, file: !342, line: 608, baseType: !173, size: 64, offset: 704)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !411, file: !342, line: 609, baseType: !434, size: 112, offset: 768)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !342, line: 319, size: 112, elements: !435)
!435 = !{!436, !441, !442}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !434, file: !342, line: 320, baseType: !437, size: 48)
!437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 48, elements: !439)
!438 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!439 = !{!440}
!440 = !DISubrange(count: 3)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !434, file: !342, line: 321, baseType: !437, size: 48, offset: 48)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !434, file: !342, line: 322, baseType: !438, size: 16, offset: 96)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !411, file: !342, line: 610, baseType: !444, size: 64, offset: 896)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !160, line: 171, baseType: !445)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !160, line: 163, size: 64, elements: !446)
!446 = !{!447, !448}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !445, file: !160, line: 165, baseType: !17, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !445, file: !160, line: 170, baseType: !449, size: 32, offset: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !445, file: !160, line: 166, size: 32, elements: !450)
!450 = !{!451, !453}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !449, file: !160, line: 168, baseType: !452, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !305, line: 124, baseType: !148)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !449, file: !160, line: 169, baseType: !454, size: 32)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 32, elements: !455)
!455 = !{!456}
!456 = !DISubrange(count: 4)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !411, file: !342, line: 611, baseType: !444, size: 64, offset: 960)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !411, file: !342, line: 612, baseType: !444, size: 64, offset: 1024)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !411, file: !342, line: 613, baseType: !460, size: 64, offset: 1088)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 64, elements: !461)
!461 = !{!462}
!462 = !DISubrange(count: 8)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !411, file: !342, line: 614, baseType: !464, size: 192, offset: 1152)
!464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 192, elements: !465)
!465 = !{!466}
!466 = !DISubrange(count: 24)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !411, file: !342, line: 615, baseType: !17, size: 32, offset: 1344)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !411, file: !342, line: 616, baseType: !444, size: 64, offset: 1376)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !411, file: !342, line: 617, baseType: !444, size: 64, offset: 1440)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !411, file: !342, line: 618, baseType: !444, size: 64, offset: 1504)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !411, file: !342, line: 619, baseType: !444, size: 64, offset: 1568)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !411, file: !342, line: 620, baseType: !444, size: 64, offset: 1632)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !411, file: !342, line: 621, baseType: !17, size: 32, offset: 1696)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !408, file: !342, line: 631, baseType: !475, size: 2880)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !408, file: !342, line: 626, size: 2880, elements: !476)
!476 = !{!477, !481}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !475, file: !342, line: 629, baseType: !478, size: 1920)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 1920, elements: !479)
!479 = !{!480}
!480 = !DISubrange(count: 30)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !475, file: !342, line: 630, baseType: !482, size: 960, offset: 1920)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 960, elements: !479)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !366, file: !342, line: 636, baseType: !484, size: 64, offset: 4032)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !342, line: 93, size: 6336, elements: !486)
!486 = !{!487, !488, !489, !496}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !485, file: !342, line: 94, baseType: !484, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !485, file: !342, line: 95, baseType: !17, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !485, file: !342, line: 97, baseType: !490, size: 2048, offset: 128)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !491, size: 2048, elements: !494)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{null}
!494 = !{!495}
!495 = !DISubrange(count: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !485, file: !342, line: 98, baseType: !497, size: 4160, offset: 2176)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !342, line: 74, size: 4160, elements: !498)
!498 = !{!499, !501, !502, !503}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !497, file: !342, line: 75, baseType: !500, size: 2048)
!500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2048, elements: !494)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !497, file: !342, line: 76, baseType: !500, size: 2048, offset: 2048)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !497, file: !342, line: 78, baseType: !398, size: 32, offset: 4096)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !497, file: !342, line: 81, baseType: !398, size: 32, offset: 4128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !366, file: !342, line: 637, baseType: !485, size: 6336, offset: 4096)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !366, file: !342, line: 641, baseType: !506, size: 64, offset: 10432)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DISubroutineType(types: !509)
!509 = !{null, !17}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !366, file: !342, line: 646, baseType: !511, size: 192, offset: 10496)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !342, line: 291, size: 192, elements: !512)
!512 = !{!513, !515, !516}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !511, file: !342, line: 293, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !511, file: !342, line: 294, baseType: !17, size: 32, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !511, file: !342, line: 295, baseType: !370, size: 64, offset: 128)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !366, file: !342, line: 648, baseType: !518, size: 4224, offset: 10688)
!518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 4224, elements: !439)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !343, file: !342, line: 199, baseType: !520, size: 64, offset: 512)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DISubroutineType(types: !522)
!522 = !{!364, !365, !6, !523, !17}
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !343, file: !342, line: 202, baseType: !526, size: 64, offset: 576)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{!529, !365, !6, !529, !17}
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !160, line: 114, baseType: !94)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !343, file: !342, line: 203, baseType: !531, size: 64, offset: 640)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{!17, !365, !6}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !343, file: !342, line: 206, baseType: !354, size: 128, offset: 704)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !343, file: !342, line: 207, baseType: !346, size: 64, offset: 832)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !343, file: !342, line: 208, baseType: !17, size: 32, offset: 896)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !343, file: !342, line: 211, baseType: !538, size: 24, offset: 928)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 24, elements: !439)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !343, file: !342, line: 212, baseType: !540, size: 8, offset: 952)
!540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 8, elements: !399)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !343, file: !342, line: 215, baseType: !354, size: 128, offset: 960)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !343, file: !342, line: 218, baseType: !17, size: 32, offset: 1088)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !343, file: !342, line: 219, baseType: !189, size: 64, offset: 1152)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !343, file: !342, line: 222, baseType: !365, size: 64, offset: 1216)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !343, file: !342, line: 226, baseType: !546, size: 32, offset: 1280)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !160, line: 175, baseType: !547)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_RECURSIVE_T", file: !548, line: 12, baseType: !17)
!548 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/lock.h", directory: "/root/.unikraft/apps/redis/build")
!549 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !343, file: !342, line: 228, baseType: !444, size: 64, offset: 1312)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !343, file: !342, line: 229, baseType: !17, size: 32, offset: 1376)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !335, file: !297, line: 73, baseType: !186, size: 64, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "autosync", scope: !335, file: !297, line: 74, baseType: !186, size: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "fdset", scope: !327, file: !297, line: 83, baseType: !554, size: 320)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !327, file: !297, line: 77, size: 320, elements: !555)
!555 = !{!556, !557, !558, !559, !560}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "fds", scope: !554, file: !297, line: 78, baseType: !16, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !554, file: !297, line: 79, baseType: !16, size: 64, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "numfds", scope: !554, file: !297, line: 80, baseType: !17, size: 32, offset: 128)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !554, file: !297, line: 81, baseType: !186, size: 64, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !554, file: !297, line: 82, baseType: !154, size: 64, offset: 256)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !291, file: !13, line: 558, baseType: !267, size: 64, offset: 128)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !291, file: !13, line: 559, baseType: !17, size: 32, offset: 192)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !291, file: !13, line: 560, baseType: !17, size: 32, offset: 224)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !291, file: !13, line: 562, baseType: !565, size: 64, offset: 256)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCtx", file: !3, line: 117, size: 832, elements: !567)
!567 = !{!568, !569, !570, !571, !599, !605, !606, !607, !608, !609, !610, !611, !612, !613}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "getapifuncptr", scope: !566, file: !3, line: 118, baseType: !6, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !566, file: !3, line: 119, baseType: !273, size: 64, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !566, file: !3, line: 120, baseType: !27, size: 64, offset: 128)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_client", scope: !566, file: !3, line: 121, baseType: !572, size: 64, offset: 192)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleBlockedClient", file: !3, line: 216, size: 576, elements: !574)
!574 = !{!575, !576, !579, !586, !587, !592, !596, !597, !598}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !573, file: !3, line: 217, baseType: !27, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !573, file: !3, line: 219, baseType: !577, size: 64, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModule", file: !3, line: 56, baseType: !274)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "reply_callback", scope: !573, file: !3, line: 220, baseType: !580, size: 64, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCmdFunc", file: !3, line: 178, baseType: !581)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DISubroutineType(types: !583)
!583 = !{!17, !584, !8, !17}
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCtx", file: !3, line: 137, baseType: !566)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_callback", scope: !573, file: !3, line: 221, baseType: !580, size: 64, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect_callback", scope: !573, file: !3, line: 222, baseType: !588, size: 64, offset: 256)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleDisconnectFunc", file: !3, line: 179, baseType: !589)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DISubroutineType(types: !591)
!591 = !{null, !584, !572}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "free_privdata", scope: !573, file: !3, line: 223, baseType: !593, size: 64, offset: 320)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !584, !6}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !573, file: !3, line: 224, baseType: !6, size: 64, offset: 384)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "reply_client", scope: !573, file: !3, line: 227, baseType: !27, size: 64, offset: 448)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "dbid", scope: !573, file: !3, line: 229, baseType: !17, size: 32, offset: 512)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "amqueue", scope: !566, file: !3, line: 123, baseType: !600, size: 64, offset: 256)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AutoMemEntry", file: !3, line: 72, size: 128, elements: !602)
!602 = !{!603, !604}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !601, file: !3, line: 73, baseType: !6, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !601, file: !3, line: 74, baseType: !17, size: 32, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "amqueue_len", scope: !566, file: !3, line: 124, baseType: !17, size: 32, offset: 320)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "amqueue_used", scope: !566, file: !3, line: 125, baseType: !17, size: 32, offset: 352)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !566, file: !3, line: 126, baseType: !17, size: 32, offset: 384)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "postponed_arrays", scope: !566, file: !3, line: 127, baseType: !8, size: 64, offset: 448)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "postponed_arrays_count", scope: !566, file: !3, line: 128, baseType: !17, size: 32, offset: 512)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_privdata", scope: !566, file: !3, line: 129, baseType: !6, size: 64, offset: 576)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "keys_pos", scope: !566, file: !3, line: 132, baseType: !16, size: 64, offset: 640)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "keys_count", scope: !566, file: !3, line: 133, baseType: !17, size: 32, offset: 704)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "pa_head", scope: !566, file: !3, line: 135, baseType: !614, size: 64, offset: 768)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModulePoolAllocBlock", file: !3, line: 100, size: 128, elements: !616)
!616 = !{!617, !620, !621, !622}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !615, file: !3, line: 101, baseType: !618, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !33, line: 48, baseType: !619)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !35, line: 79, baseType: !148)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !615, file: !3, line: 102, baseType: !618, size: 32, offset: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !615, file: !3, line: 103, baseType: !614, size: 64, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !615, file: !3, line: 104, baseType: !623, offset: 128)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, elements: !624)
!624 = !{!625}
!625 = !DISubrange(count: -1)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !291, file: !13, line: 563, baseType: !627, size: 64, offset: 320)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_save", scope: !269, file: !13, line: 521, baseType: !629, size: 64, offset: 192)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeSaveFunc", file: !13, line: 507, baseType: !630)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DISubroutineType(types: !632)
!632 = !{null, !290, !6}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite", scope: !269, file: !13, line: 522, baseType: !634, size: 64, offset: 256)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeRewriteFunc", file: !13, line: 510, baseType: !635)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DISubroutineType(types: !637)
!637 = !{null, !290, !627, !6}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "mem_usage", scope: !269, file: !13, line: 523, baseType: !639, size: 64, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeMemUsageFunc", file: !13, line: 512, baseType: !640)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DISubroutineType(types: !642)
!642 = !{!157, !57}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !269, file: !13, line: 524, baseType: !644, size: 64, offset: 384)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeDigestFunc", file: !13, line: 511, baseType: !645)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{null, !648, !6}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleDigest", file: !13, line: 583, size: 320, elements: !650)
!650 = !{!651, !655}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "o", scope: !649, file: !13, line: 584, baseType: !652, size: 160)
!652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 160, elements: !653)
!653 = !{!654}
!654 = !DISubrange(count: 20)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !649, file: !13, line: 585, baseType: !652, size: 160, offset: 160)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !269, file: !13, line: 525, baseType: !657, size: 64, offset: 448)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeFreeFunc", file: !13, line: 513, baseType: !134)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "aux_load", scope: !269, file: !13, line: 526, baseType: !659, size: 64, offset: 512)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeAuxLoadFunc", file: !13, line: 508, baseType: !660)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DISubroutineType(types: !662)
!662 = !{!17, !290, !17, !17}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save", scope: !269, file: !13, line: 527, baseType: !664, size: 64, offset: 576)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeAuxSaveFunc", file: !13, line: 509, baseType: !665)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{null, !290, !17}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save_triggers", scope: !269, file: !13, line: 528, baseType: !17, size: 32, offset: 640)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !13, line: 529, baseType: !670, size: 80, offset: 672)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 80, elements: !671)
!671 = !{!672}
!672 = !DISubrange(count: 10)
!673 = !{!674, !675, !676, !677, !678, !679, !680, !681}
!674 = !DILocalVariable(name: "ctx", arg: 1, scope: !264, file: !3, line: 3064, type: !584)
!675 = !DILocalVariable(name: "name", arg: 2, scope: !264, file: !3, line: 3064, type: !523)
!676 = !DILocalVariable(name: "encver", arg: 3, scope: !264, file: !3, line: 3064, type: !17)
!677 = !DILocalVariable(name: "typemethods_ptr", arg: 4, scope: !264, file: !3, line: 3064, type: !6)
!678 = !DILocalVariable(name: "id", scope: !264, file: !3, line: 3065, type: !32)
!679 = !DILocalVariable(name: "typemethods_version", scope: !264, file: !3, line: 3069, type: !94)
!680 = !DILocalVariable(name: "tms", scope: !264, file: !3, line: 3085, type: !262)
!681 = !DILocalVariable(name: "mt", scope: !264, file: !3, line: 3087, type: !267)
!682 = !{!683, !684, !685, !686, !687, !688, !689, !690}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !263, file: !3, line: 3073, baseType: !32, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_load", scope: !263, file: !3, line: 3074, baseType: !286, size: 64, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_save", scope: !263, file: !3, line: 3075, baseType: !629, size: 64, offset: 128)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite", scope: !263, file: !3, line: 3076, baseType: !634, size: 64, offset: 192)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "mem_usage", scope: !263, file: !3, line: 3077, baseType: !639, size: 64, offset: 256)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !263, file: !3, line: 3078, baseType: !644, size: 64, offset: 320)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !263, file: !3, line: 3079, baseType: !657, size: 64, offset: 384)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !263, file: !3, line: 3084, baseType: !691, size: 192, offset: 448)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !263, file: !3, line: 3080, size: 192, elements: !692)
!692 = !{!693, !694, !695}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "aux_load", scope: !691, file: !3, line: 3081, baseType: !659, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save", scope: !691, file: !3, line: 3082, baseType: !664, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save_triggers", scope: !691, file: !3, line: 3083, baseType: !17, size: 32, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{!17, !6, !8, !17}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr8", file: !155, line: 51, size: 24, elements: !701)
!701 = !{!702, !705, !706, !707}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !700, file: !155, line: 52, baseType: !703, size: 8)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !33, line: 24, baseType: !704)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !35, line: 43, baseType: !347)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !700, file: !155, line: 53, baseType: !703, size: 8, offset: 8)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !700, file: !155, line: 54, baseType: !347, size: 8, offset: 16)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !700, file: !155, line: 55, baseType: !623, offset: 24)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr16", file: !155, line: 57, size: 40, elements: !710)
!710 = !{!711, !714, !715, !716}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !709, file: !155, line: 58, baseType: !712, size: 16)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !33, line: 36, baseType: !713)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !35, line: 57, baseType: !438)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !709, file: !155, line: 59, baseType: !712, size: 16, offset: 16)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !709, file: !155, line: 60, baseType: !347, size: 8, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !709, file: !155, line: 61, baseType: !623, offset: 40)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr32", file: !155, line: 63, size: 72, elements: !719)
!719 = !{!720, !721, !722, !723}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !718, file: !155, line: 64, baseType: !618, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !718, file: !155, line: 65, baseType: !618, size: 32, offset: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !718, file: !155, line: 66, baseType: !347, size: 8, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !718, file: !155, line: 67, baseType: !623, offset: 72)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr64", file: !155, line: 69, size: 136, elements: !726)
!726 = !{!727, !728, !729, !730}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !725, file: !155, line: 70, baseType: !32, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !725, file: !155, line: 71, baseType: !32, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !725, file: !155, line: 72, baseType: !347, size: 8, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !725, file: !155, line: 73, baseType: !623, offset: 136)
!731 = !{!732, !734, !772, !774, !0, !776, !778, !780, !782, !784, !804, !824, !830}
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "ModuleTypeNameCharSet", scope: !2, file: !3, line: 2889, type: !523, isLocal: false, isDefinition: true)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "cache", scope: !736, file: !3, line: 2946, type: !767, isLocal: true, isDefinition: true)
!736 = distinct !DISubprogram(name: "moduleTypeLookupModuleByID", scope: !3, file: !3, line: 2942, type: !737, isLocal: false, isDefinition: true, scopeLine: 2942, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !739)
!737 = !DISubroutineType(types: !738)
!738 = !{!267, !32}
!739 = !{!740, !741, !742, !743, !755, !756, !758, !764, !765}
!740 = !DILocalVariable(name: "id", arg: 1, scope: !736, file: !3, line: 2942, type: !32)
!741 = !DILocalVariable(name: "j", scope: !736, file: !3, line: 2949, type: !17)
!742 = !DILocalVariable(name: "mt", scope: !736, file: !3, line: 2954, type: !267)
!743 = !DILocalVariable(name: "di", scope: !736, file: !3, line: 2955, type: !744)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictIterator", file: !45, line: 95, baseType: !746)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictIterator", file: !45, line: 88, size: 384, elements: !747)
!747 = !{!748, !749, !750, !751, !752, !753, !754}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !746, file: !45, line: 89, baseType: !43, size: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !746, file: !45, line: 90, baseType: !94, size: 64, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !746, file: !45, line: 91, baseType: !17, size: 32, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "safe", scope: !746, file: !45, line: 91, baseType: !17, size: 32, offset: 160)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !746, file: !45, line: 92, baseType: !81, size: 64, offset: 192)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "nextEntry", scope: !746, file: !45, line: 92, baseType: !81, size: 64, offset: 256)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "fingerprint", scope: !746, file: !45, line: 94, baseType: !112, size: 64, offset: 320)
!755 = !DILocalVariable(name: "de", scope: !736, file: !3, line: 2956, type: !81)
!756 = !DILocalVariable(name: "module", scope: !757, file: !3, line: 2959, type: !273)
!757 = distinct !DILexicalBlock(scope: !736, file: !3, line: 2958, column: 55)
!758 = !DILocalVariable(name: "li", scope: !757, file: !3, line: 2960, type: !759)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "listIter", file: !116, line: 45, baseType: !760)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listIter", file: !116, line: 42, size: 128, elements: !761)
!761 = !{!762, !763}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !760, file: !116, line: 43, baseType: !120, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !760, file: !116, line: 44, baseType: !17, size: 32, offset: 64)
!764 = !DILocalVariable(name: "ln", scope: !757, file: !3, line: 2961, type: !120)
!765 = !DILocalVariable(name: "this_mt", scope: !766, file: !3, line: 2965, type: !267)
!766 = distinct !DILexicalBlock(scope: !757, file: !3, line: 2964, column: 37)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !768, size: 384, elements: !439)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !736, file: !3, line: 2943, size: 128, elements: !769)
!769 = !{!770, !771}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !768, file: !3, line: 2944, baseType: !32, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !768, file: !3, line: 2945, baseType: !267, size: 64, offset: 64)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "aeTimer", scope: !2, file: !3, line: 4346, type: !112, isLocal: false, isDefinition: true)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "moduleAPIDictType", scope: !2, file: !3, line: 5088, type: !50, isLocal: false, isDefinition: true)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "moduleUnblockedClients", scope: !2, file: !3, line: 233, type: !114, isLocal: true, isDefinition: true)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "moduleKeyspaceSubscribers", scope: !2, file: !3, line: 258, type: !114, isLocal: true, isDefinition: true)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "moduleFreeContextReusedClient", scope: !2, file: !3, line: 264, type: !27, isLocal: true, isDefinition: true)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "moduleCommandFilters", scope: !2, file: !3, line: 293, type: !114, isLocal: true, isDefinition: true)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "clusterReceivers", scope: !2, file: !3, line: 4099, type: !786, isLocal: true, isDefinition: true)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 16320, elements: !802)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleClusterReceiver", file: !3, line: 4088, baseType: !789)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moduleClusterReceiver", file: !3, line: 4083, size: 256, elements: !790)
!790 = !{!791, !792, !799, !800}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "module_id", scope: !789, file: !3, line: 4084, baseType: !32, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !789, file: !3, line: 4085, baseType: !793, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleClusterMessageReceiver", file: !3, line: 4078, baseType: !794)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DISubroutineType(types: !796)
!796 = !{null, !584, !523, !703, !797, !618}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !789, file: !3, line: 4086, baseType: !273, size: 64, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !789, file: !3, line: 4087, baseType: !801, size: 64, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!802 = !{!803}
!803 = !DISubrange(count: 255)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "Timers", scope: !2, file: !3, line: 4345, type: !806, isLocal: true, isDefinition: true)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "rax", file: !808, line: 137, baseType: !809)
!808 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rax.h", directory: "/root/.unikraft/apps/redis/build")
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rax", file: !808, line: 133, size: 192, elements: !810)
!810 = !{!811, !822, !823}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !809, file: !808, line: 134, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxNode", file: !808, line: 131, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxNode", file: !808, line: 98, size: 32, elements: !815)
!815 = !{!816, !817, !818, !819, !820}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "iskey", scope: !814, file: !808, line: 99, baseType: !618, size: 1, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "isnull", scope: !814, file: !808, line: 100, baseType: !618, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "iscompr", scope: !814, file: !808, line: 101, baseType: !618, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !814, file: !808, line: 102, baseType: !618, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !814, file: !808, line: 130, baseType: !821, offset: 32)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, elements: !624)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "numele", scope: !809, file: !808, line: 135, baseType: !32, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "numnodes", scope: !809, file: !808, line: 136, baseType: !32, size: 64, offset: 128)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "moduleUnblockedClientsMutex", scope: !2, file: !3, line: 232, type: !826, isLocal: true, isDefinition: true)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !827, line: 417, baseType: !828)
!827 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libpthread-embedded/origin/pthread-embedded-44b41d760a433915d70a7be9809651b0a65e001d/pthread.h", directory: "/root/.unikraft/apps/redis/build")
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DICompositeType(tag: DW_TAG_structure_type, name: "pthread_mutex_t_", file: !827, line: 417, flags: DIFlagFwdDecl)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "moduleGIL", scope: !2, file: !3, line: 237, type: !826, isLocal: true, isDefinition: true)
!832 = !{i32 2, !"Dwarf Version", i32 4}
!833 = !{i32 2, !"Debug Info Version", i32 3}
!834 = !{i32 1, !"wchar_size", i32 4}
!835 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!836 = distinct !DISubprogram(name: "RM_Alloc", scope: !3, file: !3, line: 316, type: !837, isLocal: false, isDefinition: true, scopeLine: 316, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !839)
!837 = !DISubroutineType(types: !838)
!838 = !{!6, !157}
!839 = !{!840}
!840 = !DILocalVariable(name: "bytes", arg: 1, scope: !836, file: !3, line: 316, type: !157)
!841 = !DILocation(line: 316, column: 23, scope: !836)
!842 = !DILocation(line: 317, column: 12, scope: !836)
!843 = !DILocation(line: 317, column: 5, scope: !836)
!844 = distinct !DISubprogram(name: "RM_Calloc", scope: !3, file: !3, line: 324, type: !845, isLocal: false, isDefinition: true, scopeLine: 324, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !847)
!845 = !DISubroutineType(types: !846)
!846 = !{!6, !157, !157}
!847 = !{!848, !849}
!848 = !DILocalVariable(name: "nmemb", arg: 1, scope: !844, file: !3, line: 324, type: !157)
!849 = !DILocalVariable(name: "size", arg: 2, scope: !844, file: !3, line: 324, type: !157)
!850 = !DILocation(line: 324, column: 24, scope: !844)
!851 = !DILocation(line: 324, column: 38, scope: !844)
!852 = !DILocation(line: 325, column: 25, scope: !844)
!853 = !DILocation(line: 325, column: 12, scope: !844)
!854 = !DILocation(line: 325, column: 5, scope: !844)
!855 = distinct !DISubprogram(name: "RM_Realloc", scope: !3, file: !3, line: 329, type: !856, isLocal: false, isDefinition: true, scopeLine: 329, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !858)
!856 = !DISubroutineType(types: !857)
!857 = !{!6, !6, !157}
!858 = !{!859, !860}
!859 = !DILocalVariable(name: "ptr", arg: 1, scope: !855, file: !3, line: 329, type: !6)
!860 = !DILocalVariable(name: "bytes", arg: 2, scope: !855, file: !3, line: 329, type: !157)
!861 = !DILocation(line: 329, column: 24, scope: !855)
!862 = !DILocation(line: 329, column: 36, scope: !855)
!863 = !DILocation(line: 330, column: 12, scope: !855)
!864 = !DILocation(line: 330, column: 5, scope: !855)
!865 = distinct !DISubprogram(name: "RM_Free", scope: !3, file: !3, line: 336, type: !135, isLocal: false, isDefinition: true, scopeLine: 336, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !866)
!866 = !{!867}
!867 = !DILocalVariable(name: "ptr", arg: 1, scope: !865, file: !3, line: 336, type: !6)
!868 = !DILocation(line: 336, column: 20, scope: !865)
!869 = !DILocation(line: 337, column: 5, scope: !865)
!870 = !DILocation(line: 338, column: 1, scope: !865)
!871 = distinct !DISubprogram(name: "RM_Strdup", scope: !3, file: !3, line: 341, type: !872, isLocal: false, isDefinition: true, scopeLine: 341, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !874)
!872 = !DISubroutineType(types: !873)
!873 = !{!9, !523}
!874 = !{!875}
!875 = !DILocalVariable(name: "str", arg: 1, scope: !871, file: !3, line: 341, type: !523)
!876 = !DILocation(line: 341, column: 29, scope: !871)
!877 = !DILocation(line: 342, column: 12, scope: !871)
!878 = !DILocation(line: 342, column: 5, scope: !871)
!879 = distinct !DISubprogram(name: "poolAllocRelease", scope: !3, file: !3, line: 350, type: !880, isLocal: false, isDefinition: true, scopeLine: 350, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !882)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !584}
!882 = !{!883, !884, !887}
!883 = !DILocalVariable(name: "ctx", arg: 1, scope: !879, file: !3, line: 350, type: !584)
!884 = !DILocalVariable(name: "head", scope: !879, file: !3, line: 351, type: !885)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModulePoolAllocBlock", file: !3, line: 105, baseType: !615)
!887 = !DILocalVariable(name: "next", scope: !879, file: !3, line: 351, type: !885)
!888 = !DILocation(line: 350, column: 39, scope: !879)
!889 = !DILocation(line: 351, column: 44, scope: !879)
!890 = !{!891, !892, i64 96}
!891 = !{!"RedisModuleCtx", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !895, i64 40, !895, i64 44, !895, i64 48, !892, i64 56, !895, i64 64, !892, i64 72, !892, i64 80, !895, i64 88, !892, i64 96}
!892 = !{!"any pointer", !893, i64 0}
!893 = !{!"omnipotent char", !894, i64 0}
!894 = !{!"Simple C/C++ TBAA"}
!895 = !{!"int", !893, i64 0}
!896 = !DILocation(line: 351, column: 32, scope: !879)
!897 = !DILocation(line: 353, column: 16, scope: !879)
!898 = !DILocation(line: 353, column: 5, scope: !879)
!899 = !DILocation(line: 0, scope: !879)
!900 = !DILocation(line: 354, column: 22, scope: !901)
!901 = distinct !DILexicalBlock(scope: !879, file: !3, line: 353, column: 25)
!902 = !{!892, !892, i64 0}
!903 = !DILocation(line: 351, column: 54, scope: !879)
!904 = !DILocation(line: 355, column: 9, scope: !901)
!905 = distinct !{!905, !898, !906}
!906 = !DILocation(line: 357, column: 5, scope: !879)
!907 = !DILocation(line: 358, column: 18, scope: !879)
!908 = !DILocation(line: 359, column: 1, scope: !879)
!909 = distinct !DISubprogram(name: "RM_PoolAlloc", scope: !3, file: !3, line: 373, type: !910, isLocal: false, isDefinition: true, scopeLine: 373, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !912)
!910 = !DISubroutineType(types: !911)
!911 = !{!6, !584, !157}
!912 = !{!913, !914, !915, !916, !917, !920, !923}
!913 = !DILocalVariable(name: "ctx", arg: 1, scope: !909, file: !3, line: 373, type: !584)
!914 = !DILocalVariable(name: "bytes", arg: 2, scope: !909, file: !3, line: 373, type: !157)
!915 = !DILocalVariable(name: "b", scope: !909, file: !3, line: 375, type: !885)
!916 = !DILocalVariable(name: "left", scope: !909, file: !3, line: 376, type: !157)
!917 = !DILocalVariable(name: "alignment", scope: !918, file: !3, line: 380, type: !157)
!918 = distinct !DILexicalBlock(scope: !919, file: !3, line: 379, column: 24)
!919 = distinct !DILexicalBlock(scope: !909, file: !3, line: 379, column: 9)
!920 = !DILocalVariable(name: "blocksize", scope: !921, file: !3, line: 389, type: !157)
!921 = distinct !DILexicalBlock(scope: !922, file: !3, line: 388, column: 23)
!922 = distinct !DILexicalBlock(scope: !909, file: !3, line: 388, column: 9)
!923 = !DILocalVariable(name: "retval", scope: !909, file: !3, line: 398, type: !9)
!924 = !DILocation(line: 373, column: 36, scope: !909)
!925 = !DILocation(line: 373, column: 48, scope: !909)
!926 = !DILocation(line: 374, column: 15, scope: !927)
!927 = distinct !DILexicalBlock(scope: !909, file: !3, line: 374, column: 9)
!928 = !DILocation(line: 374, column: 9, scope: !909)
!929 = !DILocation(line: 375, column: 41, scope: !909)
!930 = !DILocation(line: 375, column: 32, scope: !909)
!931 = !DILocation(line: 376, column: 19, scope: !909)
!932 = !DILocation(line: 376, column: 26, scope: !909)
!933 = !{!895, !895, i64 0}
!934 = !DILocation(line: 376, column: 36, scope: !909)
!935 = !DILocation(line: 376, column: 31, scope: !909)
!936 = !DILocation(line: 376, column: 12, scope: !909)
!937 = !DILocation(line: 379, column: 14, scope: !919)
!938 = !DILocation(line: 379, column: 9, scope: !909)
!939 = !DILocation(line: 0, scope: !918)
!940 = !DILocation(line: 380, column: 16, scope: !918)
!941 = !DILocation(line: 381, column: 22, scope: !918)
!942 = !DILocation(line: 381, column: 34, scope: !918)
!943 = !DILocation(line: 381, column: 46, scope: !918)
!944 = !DILocation(line: 381, column: 49, scope: !918)
!945 = !DILocation(line: 381, column: 9, scope: !918)
!946 = distinct !{!946, !945, !947}
!947 = !DILocation(line: 381, column: 72, scope: !918)
!948 = !DILocation(line: 382, column: 16, scope: !949)
!949 = distinct !DILexicalBlock(scope: !918, file: !3, line: 382, column: 13)
!950 = !DILocation(line: 382, column: 13, scope: !949)
!951 = !DILocation(line: 382, column: 21, scope: !949)
!952 = !DILocation(line: 382, column: 13, scope: !918)
!953 = !DILocation(line: 383, column: 34, scope: !949)
!954 = !DILocation(line: 383, column: 21, scope: !949)
!955 = !DILocation(line: 383, column: 13, scope: !949)
!956 = !DILocation(line: 384, column: 20, scope: !918)
!957 = !DILocation(line: 384, column: 30, scope: !918)
!958 = !DILocation(line: 384, column: 16, scope: !918)
!959 = !DILocation(line: 0, scope: !909)
!960 = !DILocation(line: 388, column: 14, scope: !922)
!961 = !DILocation(line: 388, column: 9, scope: !909)
!962 = !DILocation(line: 389, column: 16, scope: !921)
!963 = !DILocation(line: 390, column: 23, scope: !964)
!964 = distinct !DILexicalBlock(scope: !921, file: !3, line: 390, column: 13)
!965 = !DILocation(line: 390, column: 13, scope: !921)
!966 = !DILocation(line: 391, column: 32, scope: !921)
!967 = !DILocation(line: 391, column: 13, scope: !921)
!968 = !DILocation(line: 392, column: 19, scope: !921)
!969 = !DILocation(line: 392, column: 12, scope: !921)
!970 = !DILocation(line: 392, column: 17, scope: !921)
!971 = !DILocation(line: 393, column: 12, scope: !921)
!972 = !DILocation(line: 393, column: 17, scope: !921)
!973 = !DILocation(line: 394, column: 24, scope: !921)
!974 = !DILocation(line: 394, column: 12, scope: !921)
!975 = !DILocation(line: 394, column: 17, scope: !921)
!976 = !DILocation(line: 395, column: 22, scope: !921)
!977 = !DILocation(line: 396, column: 5, scope: !921)
!978 = !DILocation(line: 398, column: 35, scope: !909)
!979 = !DILocation(line: 398, column: 30, scope: !909)
!980 = !DILocation(line: 398, column: 11, scope: !909)
!981 = !DILocation(line: 399, column: 13, scope: !909)
!982 = !DILocation(line: 401, column: 1, scope: !909)
!983 = distinct !DISubprogram(name: "moduleCreateEmptyKey", scope: !3, file: !3, line: 419, type: !984, isLocal: false, isDefinition: true, scopeLine: 419, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1017)
!984 = !DISubroutineType(types: !985)
!985 = !{!17, !986, !17}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleKey", file: !3, line: 167, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleKey", file: !3, line: 149, size: 960, elements: !989)
!989 = !{!990, !991, !992, !993, !994, !995, !996, !997, !1005, !1013, !1014, !1015, !1016}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !988, file: !3, line: 150, baseType: !584, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !988, file: !3, line: 151, baseType: !38, size: 64, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !988, file: !3, line: 152, baseType: !143, size: 64, offset: 128)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !988, file: !3, line: 153, baseType: !143, size: 64, offset: 192)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !988, file: !3, line: 154, baseType: !6, size: 64, offset: 256)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !988, file: !3, line: 155, baseType: !17, size: 32, offset: 320)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "ztype", scope: !988, file: !3, line: 158, baseType: !618, size: 32, offset: 352)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "zrs", scope: !988, file: !3, line: 159, baseType: !998, size: 192, offset: 384)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "zrangespec", file: !13, line: 1675, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 1672, size: 192, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !999, file: !13, line: 1673, baseType: !96, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !999, file: !13, line: 1673, baseType: !96, size: 64, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "minex", scope: !999, file: !13, line: 1674, baseType: !17, size: 32, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "maxex", scope: !999, file: !13, line: 1674, baseType: !17, size: 32, offset: 160)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "zlrs", scope: !988, file: !3, line: 160, baseType: !1006, size: 192, offset: 576)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "zlexrangespec", file: !13, line: 1681, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 1678, size: 192, elements: !1008)
!1008 = !{!1009, !1010, !1011, !1012}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1007, file: !13, line: 1679, baseType: !154, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1007, file: !13, line: 1679, baseType: !154, size: 64, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "minex", scope: !1007, file: !13, line: 1680, baseType: !17, size: 32, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "maxex", scope: !1007, file: !13, line: 1680, baseType: !17, size: 32, offset: 160)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "zstart", scope: !988, file: !3, line: 161, baseType: !618, size: 32, offset: 768)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "zend", scope: !988, file: !3, line: 162, baseType: !618, size: 32, offset: 800)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "zcurrent", scope: !988, file: !3, line: 163, baseType: !6, size: 64, offset: 832)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "zer", scope: !988, file: !3, line: 164, baseType: !17, size: 32, offset: 896)
!1017 = !{!1018, !1019, !1020}
!1018 = !DILocalVariable(name: "key", arg: 1, scope: !983, file: !3, line: 419, type: !986)
!1019 = !DILocalVariable(name: "type", arg: 2, scope: !983, file: !3, line: 419, type: !17)
!1020 = !DILocalVariable(name: "obj", scope: !983, file: !3, line: 420, type: !143)
!1021 = !DILocation(line: 419, column: 42, scope: !983)
!1022 = !DILocation(line: 419, column: 51, scope: !983)
!1023 = !DILocation(line: 423, column: 16, scope: !1024)
!1024 = distinct !DILexicalBlock(scope: !983, file: !3, line: 423, column: 9)
!1025 = !{!1026, !895, i64 40}
!1026 = !{!"RedisModuleKey", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !895, i64 40, !895, i64 44, !1027, i64 48, !1029, i64 72, !895, i64 96, !895, i64 100, !892, i64 104, !895, i64 112}
!1027 = !{!"", !1028, i64 0, !1028, i64 8, !895, i64 16, !895, i64 20}
!1028 = !{!"double", !893, i64 0}
!1029 = !{!"", !892, i64 0, !892, i64 8, !895, i64 16, !895, i64 20}
!1030 = !DILocation(line: 423, column: 21, scope: !1024)
!1031 = !DILocation(line: 423, column: 42, scope: !1024)
!1032 = !DILocation(line: 423, column: 50, scope: !1024)
!1033 = !{!1026, !892, i64 24}
!1034 = !DILocation(line: 423, column: 45, scope: !1024)
!1035 = !DILocation(line: 423, column: 9, scope: !983)
!1036 = !DILocation(line: 426, column: 5, scope: !983)
!1037 = !DILocation(line: 428, column: 15, scope: !1038)
!1038 = distinct !DILexicalBlock(scope: !983, file: !3, line: 426, column: 18)
!1039 = !DILocation(line: 420, column: 11, scope: !983)
!1040 = !DILocation(line: 429, column: 34, scope: !1038)
!1041 = !{!1042, !892, i64 8}
!1042 = !{!"redisObject", !895, i64 0, !895, i64 0, !895, i64 1, !895, i64 4, !892, i64 8}
!1043 = !DILocation(line: 429, column: 46, scope: !1038)
!1044 = !{!1045, !895, i64 2864}
!1045 = !{!"redisServer", !895, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !895, i64 32, !895, i64 36, !895, i64 40, !892, i64 48, !892, i64 56, !892, i64 64, !892, i64 72, !895, i64 80, !895, i64 84, !895, i64 88, !895, i64 92, !892, i64 96, !892, i64 104, !895, i64 112, !895, i64 116, !893, i64 120, !895, i64 164, !1046, i64 168, !895, i64 176, !892, i64 184, !892, i64 192, !892, i64 200, !893, i64 208, !895, i64 216, !895, i64 220, !893, i64 224, !895, i64 352, !892, i64 360, !895, i64 368, !893, i64 372, !895, i64 436, !895, i64 440, !893, i64 444, !895, i64 508, !892, i64 512, !892, i64 520, !892, i64 528, !892, i64 536, !892, i64 544, !892, i64 552, !892, i64 560, !895, i64 568, !1047, i64 576, !893, i64 584, !892, i64 840, !1046, i64 848, !895, i64 856, !895, i64 860, !1046, i64 864, !1046, i64 872, !1046, i64 880, !1046, i64 888, !892, i64 896, !892, i64 904, !892, i64 912, !892, i64 920, !892, i64 928, !892, i64 936, !892, i64 944, !892, i64 952, !892, i64 960, !892, i64 968, !892, i64 976, !892, i64 984, !892, i64 992, !1046, i64 1000, !1047, i64 1008, !1047, i64 1016, !1047, i64 1024, !1028, i64 1032, !1047, i64 1040, !1047, i64 1048, !1047, i64 1056, !1047, i64 1064, !1047, i64 1072, !1047, i64 1080, !1047, i64 1088, !1047, i64 1096, !1047, i64 1104, !1046, i64 1112, !1047, i64 1120, !1028, i64 1128, !1047, i64 1136, !1047, i64 1144, !1047, i64 1152, !1047, i64 1160, !892, i64 1168, !1047, i64 1176, !1047, i64 1184, !1046, i64 1192, !1048, i64 1200, !1047, i64 1240, !1047, i64 1248, !1046, i64 1256, !1046, i64 1264, !893, i64 1272, !895, i64 1728, !895, i64 1732, !895, i64 1736, !895, i64 1740, !895, i64 1744, !1046, i64 1752, !895, i64 1760, !895, i64 1764, !895, i64 1768, !895, i64 1772, !1046, i64 1776, !1046, i64 1784, !895, i64 1792, !895, i64 1796, !895, i64 1800, !895, i64 1804, !893, i64 1808, !895, i64 1880, !895, i64 1884, !892, i64 1888, !895, i64 1896, !895, i64 1900, !1046, i64 1904, !1046, i64 1912, !1046, i64 1920, !1046, i64 1928, !895, i64 1936, !895, i64 1940, !892, i64 1944, !892, i64 1952, !895, i64 1960, !895, i64 1964, !1046, i64 1968, !1046, i64 1976, !1046, i64 1984, !1046, i64 1992, !895, i64 2000, !1046, i64 2008, !895, i64 2016, !895, i64 2020, !895, i64 2024, !895, i64 2028, !895, i64 2032, !895, i64 2036, !895, i64 2040, !895, i64 2044, !895, i64 2048, !895, i64 2052, !895, i64 2056, !895, i64 2060, !895, i64 2064, !892, i64 2072, !1047, i64 2080, !1047, i64 2088, !895, i64 2096, !892, i64 2104, !895, i64 2112, !892, i64 2120, !895, i64 2128, !895, i64 2132, !1046, i64 2136, !1046, i64 2144, !1046, i64 2152, !1046, i64 2160, !895, i64 2168, !895, i64 2172, !895, i64 2176, !895, i64 2180, !895, i64 2184, !895, i64 2188, !893, i64 2192, !1049, i64 2200, !1050, i64 2224, !892, i64 2240, !895, i64 2248, !892, i64 2256, !895, i64 2264, !893, i64 2268, !893, i64 2309, !1047, i64 2352, !1047, i64 2360, !895, i64 2368, !895, i64 2372, !892, i64 2376, !1047, i64 2384, !1047, i64 2392, !1047, i64 2400, !1047, i64 2408, !1046, i64 2416, !1046, i64 2424, !895, i64 2432, !895, i64 2436, !895, i64 2440, !895, i64 2444, !895, i64 2448, !892, i64 2456, !892, i64 2464, !895, i64 2472, !895, i64 2476, !892, i64 2480, !892, i64 2488, !895, i64 2496, !895, i64 2500, !1046, i64 2504, !1046, i64 2512, !1046, i64 2520, !895, i64 2528, !895, i64 2532, !892, i64 2536, !1046, i64 2544, !895, i64 2552, !895, i64 2556, !895, i64 2560, !1046, i64 2568, !895, i64 2576, !895, i64 2580, !895, i64 2584, !892, i64 2592, !893, i64 2600, !1047, i64 2648, !895, i64 2656, !892, i64 2664, !892, i64 2672, !895, i64 2680, !892, i64 2688, !895, i64 2696, !895, i64 2700, !1047, i64 2704, !895, i64 2712, !895, i64 2716, !895, i64 2720, !895, i64 2724, !1047, i64 2728, !895, i64 2736, !893, i64 2740, !892, i64 2768, !892, i64 2776, !895, i64 2784, !895, i64 2788, !895, i64 2792, !895, i64 2796, !1046, i64 2800, !1046, i64 2808, !1046, i64 2816, !1046, i64 2824, !1046, i64 2832, !1046, i64 2840, !1046, i64 2848, !1046, i64 2856, !895, i64 2864, !895, i64 2868, !1046, i64 2872, !1046, i64 2880, !895, i64 2888, !1047, i64 2896, !892, i64 2904, !892, i64 2912, !895, i64 2920, !895, i64 2924, !1047, i64 2928, !892, i64 2936, !892, i64 2944, !895, i64 2952, !895, i64 2956, !895, i64 2960, !895, i64 2964, !892, i64 2968, !895, i64 2976, !895, i64 2980, !895, i64 2984, !892, i64 2992, !892, i64 3000, !892, i64 3008, !892, i64 3016, !1047, i64 3024, !1047, i64 3032, !1047, i64 3040, !895, i64 3048, !895, i64 3052, !895, i64 3056, !895, i64 3060, !895, i64 3064, !895, i64 3068, !895, i64 3072, !895, i64 3076, !895, i64 3080, !895, i64 3084, !895, i64 3088, !1047, i64 3096, !892, i64 3104, !892, i64 3112, !892, i64 3120, !895, i64 3128, !895, i64 3132, !895, i64 3136, !1046, i64 3144, !892, i64 3152, !892, i64 3160, !892, i64 3168}
!1046 = !{!"long", !893, i64 0}
!1047 = !{!"long long", !893, i64 0}
!1048 = !{!"malloc_stats", !1046, i64 0, !1046, i64 8, !1046, i64 16, !1046, i64 24, !1046, i64 32}
!1049 = !{!"", !895, i64 0, !1046, i64 8, !1047, i64 16}
!1050 = !{!"redisOpArray", !892, i64 0, !895, i64 8}
!1051 = !DILocation(line: 430, column: 36, scope: !1038)
!1052 = !{!1045, !895, i64 2868}
!1053 = !DILocation(line: 429, column: 9, scope: !1038)
!1054 = !DILocation(line: 431, column: 9, scope: !1038)
!1055 = !DILocation(line: 433, column: 15, scope: !1038)
!1056 = !DILocation(line: 434, column: 9, scope: !1038)
!1057 = !DILocation(line: 436, column: 15, scope: !1038)
!1058 = !DILocation(line: 437, column: 9, scope: !1038)
!1059 = !DILocation(line: 0, scope: !1038)
!1060 = !DILocation(line: 440, column: 16, scope: !983)
!1061 = !{!1026, !892, i64 8}
!1062 = !DILocation(line: 440, column: 24, scope: !983)
!1063 = !{!1026, !892, i64 16}
!1064 = !DILocation(line: 440, column: 5, scope: !983)
!1065 = !DILocation(line: 441, column: 16, scope: !983)
!1066 = !DILocation(line: 442, column: 5, scope: !983)
!1067 = !DILocation(line: 0, scope: !983)
!1068 = !DILocation(line: 443, column: 1, scope: !983)
!1069 = distinct !DISubprogram(name: "moduleDelKeyIfEmpty", scope: !3, file: !3, line: 455, type: !1070, isLocal: false, isDefinition: true, scopeLine: 455, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1072)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!17, !986}
!1072 = !{!1073, !1074, !1075}
!1073 = !DILocalVariable(name: "key", arg: 1, scope: !1069, file: !3, line: 455, type: !986)
!1074 = !DILocalVariable(name: "isempty", scope: !1069, file: !3, line: 457, type: !17)
!1075 = !DILocalVariable(name: "o", scope: !1069, file: !3, line: 458, type: !143)
!1076 = !DILocation(line: 455, column: 41, scope: !1069)
!1077 = !DILocation(line: 456, column: 16, scope: !1078)
!1078 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 456, column: 9)
!1079 = !DILocation(line: 456, column: 21, scope: !1078)
!1080 = !DILocation(line: 456, column: 42, scope: !1078)
!1081 = !DILocation(line: 456, column: 50, scope: !1078)
!1082 = !DILocation(line: 456, column: 56, scope: !1078)
!1083 = !DILocation(line: 456, column: 9, scope: !1069)
!1084 = !DILocation(line: 458, column: 11, scope: !1069)
!1085 = !DILocation(line: 460, column: 15, scope: !1069)
!1086 = !DILocation(line: 460, column: 5, scope: !1069)
!1087 = !DILocation(line: 462, column: 29, scope: !1088)
!1088 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 460, column: 21)
!1089 = !DILocation(line: 462, column: 44, scope: !1088)
!1090 = !DILocation(line: 468, column: 9, scope: !1069)
!1091 = !DILocation(line: 463, column: 30, scope: !1088)
!1092 = !DILocation(line: 463, column: 44, scope: !1088)
!1093 = !DILocation(line: 464, column: 31, scope: !1088)
!1094 = !DILocation(line: 464, column: 49, scope: !1088)
!1095 = !DILocation(line: 461, column: 30, scope: !1088)
!1096 = !DILocation(line: 461, column: 48, scope: !1088)
!1097 = !DILocation(line: 469, column: 23, scope: !1098)
!1098 = distinct !DILexicalBlock(scope: !1099, file: !3, line: 468, column: 18)
!1099 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 468, column: 9)
!1100 = !DILocation(line: 469, column: 31, scope: !1098)
!1101 = !DILocation(line: 469, column: 9, scope: !1098)
!1102 = !DILocation(line: 470, column: 20, scope: !1098)
!1103 = !DILocation(line: 471, column: 9, scope: !1098)
!1104 = !DILocation(line: 0, scope: !1098)
!1105 = !DILocation(line: 475, column: 1, scope: !1069)
!1106 = distinct !DISubprogram(name: "RM_GetApi", scope: !3, file: !3, line: 493, type: !1107, isLocal: false, isDefinition: true, scopeLine: 493, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1109)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!17, !523, !8}
!1109 = !{!1110, !1111, !1112}
!1110 = !DILocalVariable(name: "funcname", arg: 1, scope: !1106, file: !3, line: 493, type: !523)
!1111 = !DILocalVariable(name: "targetPtrPtr", arg: 2, scope: !1106, file: !3, line: 493, type: !8)
!1112 = !DILocalVariable(name: "he", scope: !1106, file: !3, line: 494, type: !81)
!1113 = !DILocation(line: 493, column: 27, scope: !1106)
!1114 = !DILocation(line: 493, column: 44, scope: !1106)
!1115 = !DILocation(line: 494, column: 37, scope: !1106)
!1116 = !{!1045, !892, i64 184}
!1117 = !DILocation(line: 494, column: 21, scope: !1106)
!1118 = !DILocation(line: 494, column: 16, scope: !1106)
!1119 = !DILocation(line: 495, column: 10, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1106, file: !3, line: 495, column: 9)
!1121 = !DILocation(line: 495, column: 9, scope: !1106)
!1122 = !DILocation(line: 496, column: 21, scope: !1106)
!1123 = !{!893, !893, i64 0}
!1124 = !DILocation(line: 496, column: 19, scope: !1106)
!1125 = !DILocation(line: 497, column: 5, scope: !1106)
!1126 = !DILocation(line: 0, scope: !1120)
!1127 = !DILocation(line: 498, column: 1, scope: !1106)
!1128 = distinct !DISubprogram(name: "moduleFreeContext", scope: !3, file: !3, line: 501, type: !880, isLocal: false, isDefinition: true, scopeLine: 501, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1129)
!1129 = !{!1130}
!1130 = !DILocalVariable(name: "ctx", arg: 1, scope: !1128, file: !3, line: 501, type: !584)
!1131 = !DILocation(line: 501, column: 40, scope: !1128)
!1132 = !DILocation(line: 502, column: 5, scope: !1128)
!1133 = !DILocation(line: 350, column: 39, scope: !879, inlinedAt: !1134)
!1134 = distinct !DILocation(line: 503, column: 5, scope: !1128)
!1135 = !DILocation(line: 351, column: 44, scope: !879, inlinedAt: !1134)
!1136 = !DILocation(line: 351, column: 32, scope: !879, inlinedAt: !1134)
!1137 = !DILocation(line: 353, column: 16, scope: !879, inlinedAt: !1134)
!1138 = !DILocation(line: 353, column: 5, scope: !879, inlinedAt: !1134)
!1139 = !DILocation(line: 0, scope: !879, inlinedAt: !1134)
!1140 = !DILocation(line: 354, column: 22, scope: !901, inlinedAt: !1134)
!1141 = !DILocation(line: 351, column: 54, scope: !879, inlinedAt: !1134)
!1142 = !DILocation(line: 355, column: 9, scope: !901, inlinedAt: !1134)
!1143 = !DILocation(line: 358, column: 18, scope: !879, inlinedAt: !1134)
!1144 = !DILocation(line: 504, column: 14, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1128, file: !3, line: 504, column: 9)
!1146 = !{!891, !892, i64 56}
!1147 = !DILocation(line: 504, column: 9, scope: !1145)
!1148 = !DILocation(line: 504, column: 9, scope: !1128)
!1149 = !DILocation(line: 505, column: 15, scope: !1150)
!1150 = distinct !DILexicalBlock(scope: !1145, file: !3, line: 504, column: 32)
!1151 = !DILocation(line: 505, column: 9, scope: !1150)
!1152 = !DILocation(line: 506, column: 14, scope: !1150)
!1153 = !DILocation(line: 506, column: 37, scope: !1150)
!1154 = !{!891, !895, i64 64}
!1155 = !DILocation(line: 512, column: 18, scope: !1150)
!1156 = !{!891, !892, i64 8}
!1157 = !DILocation(line: 512, column: 26, scope: !1150)
!1158 = !{!1159, !892, i64 8}
!1159 = !{!"RedisModule", !892, i64 0, !892, i64 8, !895, i64 16, !895, i64 20, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !895, i64 56}
!1160 = !DILocation(line: 507, column: 9, scope: !1150)
!1161 = !DILocation(line: 513, column: 5, scope: !1150)
!1162 = !DILocation(line: 514, column: 14, scope: !1163)
!1163 = distinct !DILexicalBlock(scope: !1128, file: !3, line: 514, column: 9)
!1164 = !{!891, !895, i64 48}
!1165 = !DILocation(line: 514, column: 20, scope: !1163)
!1166 = !DILocation(line: 514, column: 9, scope: !1128)
!1167 = !DILocation(line: 514, column: 67, scope: !1163)
!1168 = !{!891, !892, i64 16}
!1169 = !DILocation(line: 514, column: 51, scope: !1163)
!1170 = !DILocation(line: 515, column: 1, scope: !1128)
!1171 = distinct !DISubprogram(name: "autoMemoryCollect", scope: !3, file: !3, line: 835, type: !880, isLocal: false, isDefinition: true, scopeLine: 835, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1172)
!1172 = !{!1173, !1174, !1175}
!1173 = !DILocalVariable(name: "ctx", arg: 1, scope: !1171, file: !3, line: 835, type: !584)
!1174 = !DILocalVariable(name: "j", scope: !1171, file: !3, line: 841, type: !17)
!1175 = !DILocalVariable(name: "ptr", scope: !1176, file: !3, line: 843, type: !6)
!1176 = distinct !DILexicalBlock(scope: !1177, file: !3, line: 842, column: 45)
!1177 = distinct !DILexicalBlock(scope: !1178, file: !3, line: 842, column: 5)
!1178 = distinct !DILexicalBlock(scope: !1171, file: !3, line: 842, column: 5)
!1179 = !DILocation(line: 835, column: 40, scope: !1171)
!1180 = !DILocation(line: 836, column: 16, scope: !1181)
!1181 = distinct !DILexicalBlock(scope: !1171, file: !3, line: 836, column: 9)
!1182 = !DILocation(line: 836, column: 22, scope: !1181)
!1183 = !DILocation(line: 836, column: 9, scope: !1171)
!1184 = !DILocation(line: 840, column: 16, scope: !1171)
!1185 = !DILocation(line: 841, column: 9, scope: !1171)
!1186 = !DILocation(line: 842, column: 26, scope: !1177)
!1187 = !{!891, !895, i64 44}
!1188 = !DILocation(line: 842, column: 19, scope: !1177)
!1189 = !DILocation(line: 842, column: 5, scope: !1178)
!1190 = !DILocation(line: 843, column: 26, scope: !1176)
!1191 = !{!891, !892, i64 32}
!1192 = !DILocation(line: 843, column: 37, scope: !1176)
!1193 = !{!1194, !892, i64 0}
!1194 = !{!"AutoMemEntry", !892, i64 0, !895, i64 8}
!1195 = !DILocation(line: 843, column: 15, scope: !1176)
!1196 = !DILocation(line: 844, column: 32, scope: !1176)
!1197 = !{!1194, !895, i64 8}
!1198 = !DILocation(line: 844, column: 9, scope: !1176)
!1199 = !DILocation(line: 845, column: 50, scope: !1200)
!1200 = distinct !DILexicalBlock(scope: !1176, file: !3, line: 844, column: 38)
!1201 = !DILocation(line: 845, column: 37, scope: !1200)
!1202 = !DILocation(line: 845, column: 56, scope: !1200)
!1203 = !DILocation(line: 846, column: 53, scope: !1200)
!1204 = !DILocation(line: 846, column: 36, scope: !1200)
!1205 = !DILocation(line: 846, column: 59, scope: !1200)
!1206 = !DILocation(line: 847, column: 46, scope: !1200)
!1207 = !DILocation(line: 847, column: 34, scope: !1200)
!1208 = !DILocation(line: 847, column: 52, scope: !1200)
!1209 = !DILocalVariable(name: "ctx", arg: 1, scope: !1210, file: !3, line: 4510, type: !584)
!1210 = distinct !DISubprogram(name: "RM_FreeDict", scope: !3, file: !3, line: 4510, type: !1211, isLocal: false, isDefinition: true, scopeLine: 4510, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1218)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{null, !584, !1213}
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleDict", file: !3, line: 269, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleDict", file: !3, line: 267, size: 64, elements: !1216)
!1216 = !{!1217}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !1215, file: !3, line: 268, baseType: !806, size: 64)
!1218 = !{!1209, !1219}
!1219 = !DILocalVariable(name: "d", arg: 2, scope: !1210, file: !3, line: 4510, type: !1213)
!1220 = !DILocation(line: 4510, column: 34, scope: !1210, inlinedAt: !1221)
!1221 = distinct !DILocation(line: 848, column: 35, scope: !1200)
!1222 = !DILocation(line: 4510, column: 56, scope: !1210, inlinedAt: !1221)
!1223 = !DILocation(line: 4512, column: 16, scope: !1210, inlinedAt: !1221)
!1224 = !{!1225, !892, i64 0}
!1225 = !{!"RedisModuleDict", !892, i64 0}
!1226 = !DILocation(line: 4512, column: 5, scope: !1210, inlinedAt: !1221)
!1227 = !DILocation(line: 4513, column: 5, scope: !1210, inlinedAt: !1221)
!1228 = !DILocation(line: 848, column: 58, scope: !1200)
!1229 = !DILocation(line: 842, column: 41, scope: !1177)
!1230 = distinct !{!1230, !1189, !1231}
!1231 = !DILocation(line: 850, column: 5, scope: !1178)
!1232 = !DILocation(line: 851, column: 16, scope: !1171)
!1233 = !DILocation(line: 852, column: 16, scope: !1171)
!1234 = !DILocation(line: 852, column: 5, scope: !1171)
!1235 = !DILocation(line: 853, column: 18, scope: !1171)
!1236 = !DILocation(line: 854, column: 10, scope: !1171)
!1237 = !DILocation(line: 854, column: 22, scope: !1171)
!1238 = !{!891, !895, i64 40}
!1239 = !DILocation(line: 855, column: 23, scope: !1171)
!1240 = !DILocation(line: 856, column: 1, scope: !1171)
!1241 = distinct !DISubprogram(name: "moduleHandlePropagationAfterCommandCallback", scope: !3, file: !3, line: 519, type: !880, isLocal: false, isDefinition: true, scopeLine: 519, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1242)
!1242 = !{!1243, !1244, !1245}
!1243 = !DILocalVariable(name: "ctx", arg: 1, scope: !1241, file: !3, line: 519, type: !584)
!1244 = !DILocalVariable(name: "c", scope: !1241, file: !3, line: 520, type: !27)
!1245 = !DILocalVariable(name: "propargv", scope: !1246, file: !3, line: 527, type: !1248)
!1246 = distinct !DILexicalBlock(scope: !1247, file: !3, line: 526, column: 53)
!1247 = distinct !DILexicalBlock(scope: !1241, file: !3, line: 526, column: 9)
!1248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 64, elements: !399)
!1249 = !DILocation(line: 519, column: 66, scope: !1241)
!1250 = !DILocation(line: 520, column: 22, scope: !1241)
!1251 = !DILocation(line: 520, column: 13, scope: !1241)
!1252 = !DILocation(line: 522, column: 12, scope: !1253)
!1253 = distinct !DILexicalBlock(scope: !1241, file: !3, line: 522, column: 9)
!1254 = !{!1255, !895, i64 160}
!1255 = !{!"client", !1046, i64 0, !895, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !1046, i64 40, !892, i64 48, !1046, i64 56, !895, i64 64, !892, i64 72, !892, i64 80, !892, i64 88, !895, i64 96, !895, i64 100, !1046, i64 104, !892, i64 112, !1047, i64 120, !1046, i64 128, !1046, i64 136, !1046, i64 144, !1046, i64 152, !895, i64 160, !895, i64 164, !895, i64 168, !895, i64 172, !895, i64 176, !1046, i64 184, !1046, i64 192, !892, i64 200, !1047, i64 208, !1047, i64 216, !1047, i64 224, !1047, i64 232, !1047, i64 240, !893, i64 248, !895, i64 292, !893, i64 296, !895, i64 344, !1256, i64 352, !895, i64 384, !1257, i64 392, !1047, i64 480, !892, i64 488, !892, i64 496, !892, i64 504, !892, i64 512, !892, i64 520, !895, i64 528, !893, i64 532}
!1256 = !{!"multiState", !892, i64 0, !895, i64 8, !895, i64 12, !895, i64 16, !1046, i64 24}
!1257 = !{!"blockingState", !1047, i64 0, !892, i64 8, !892, i64 16, !1046, i64 24, !892, i64 32, !892, i64 40, !1047, i64 48, !1047, i64 56, !895, i64 64, !895, i64 68, !1047, i64 72, !892, i64 80}
!1258 = !DILocation(line: 522, column: 18, scope: !1253)
!1259 = !DILocation(line: 522, column: 9, scope: !1241)
!1260 = !DILocation(line: 526, column: 14, scope: !1247)
!1261 = !DILocation(line: 526, column: 20, scope: !1247)
!1262 = !DILocation(line: 526, column: 9, scope: !1241)
!1263 = !DILocation(line: 527, column: 9, scope: !1246)
!1264 = !DILocation(line: 527, column: 15, scope: !1246)
!1265 = !DILocation(line: 528, column: 23, scope: !1246)
!1266 = !DILocation(line: 528, column: 9, scope: !1246)
!1267 = !DILocation(line: 528, column: 21, scope: !1246)
!1268 = !DILocation(line: 529, column: 30, scope: !1246)
!1269 = !{!1045, !892, i64 960}
!1270 = !DILocation(line: 529, column: 45, scope: !1246)
!1271 = !{!1255, !892, i64 16}
!1272 = !DILocation(line: 529, column: 49, scope: !1246)
!1273 = !{!1274, !895, i64 40}
!1274 = !{!"redisDb", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !895, i64 40, !1047, i64 48, !892, i64 56}
!1275 = !DILocation(line: 529, column: 9, scope: !1246)
!1276 = !DILocation(line: 531, column: 22, scope: !1246)
!1277 = !DILocation(line: 531, column: 9, scope: !1246)
!1278 = !DILocation(line: 532, column: 5, scope: !1247)
!1279 = !DILocation(line: 532, column: 5, scope: !1246)
!1280 = !DILocation(line: 533, column: 1, scope: !1241)
!1281 = distinct !DISubprogram(name: "RedisModuleCommandDispatcher", scope: !3, file: !3, line: 537, type: !25, isLocal: false, isDefinition: true, scopeLine: 537, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1282)
!1282 = !{!1283, !1284, !1292, !1293}
!1283 = !DILocalVariable(name: "c", arg: 1, scope: !1281, file: !3, line: 537, type: !27)
!1284 = !DILocalVariable(name: "cp", scope: !1281, file: !3, line: 538, type: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCommandProxy", file: !3, line: 187, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCommandProxy", file: !3, line: 182, size: 192, elements: !1288)
!1288 = !{!1289, !1290, !1291}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !1287, file: !3, line: 183, baseType: !273, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1287, file: !3, line: 184, baseType: !580, size: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "rediscmd", scope: !1287, file: !3, line: 185, baseType: !18, size: 64, offset: 128)
!1292 = !DILocalVariable(name: "ctx", scope: !1281, file: !3, line: 539, type: !585)
!1293 = !DILocalVariable(name: "i", scope: !1294, file: !3, line: 556, type: !17)
!1294 = distinct !DILexicalBlock(scope: !1281, file: !3, line: 556, column: 5)
!1295 = !DILocation(line: 527, column: 15, scope: !1246, inlinedAt: !1296)
!1296 = distinct !DILocation(line: 544, column: 5, scope: !1281)
!1297 = !DILocation(line: 537, column: 43, scope: !1281)
!1298 = !DILocation(line: 538, column: 60, scope: !1281)
!1299 = !{!1255, !892, i64 80}
!1300 = !DILocation(line: 538, column: 65, scope: !1281)
!1301 = !{!1302, !892, i64 40}
!1302 = !{!"redisCommand", !892, i64 0, !892, i64 8, !895, i64 16, !892, i64 24, !895, i64 32, !892, i64 40, !895, i64 48, !895, i64 52, !895, i64 56, !1047, i64 64, !1047, i64 72}
!1303 = !DILocation(line: 538, column: 30, scope: !1281)
!1304 = !DILocation(line: 539, column: 5, scope: !1281)
!1305 = !DILocation(line: 539, column: 20, scope: !1281)
!1306 = !DILocation(line: 541, column: 22, scope: !1281)
!1307 = !{!1308, !892, i64 0}
!1308 = !{!"RedisModuleCommandProxy", !892, i64 0, !892, i64 8, !892, i64 16}
!1309 = !DILocation(line: 541, column: 9, scope: !1281)
!1310 = !DILocation(line: 541, column: 16, scope: !1281)
!1311 = !DILocation(line: 542, column: 9, scope: !1281)
!1312 = !DILocation(line: 542, column: 16, scope: !1281)
!1313 = !DILocation(line: 543, column: 9, scope: !1281)
!1314 = !{!1308, !892, i64 8}
!1315 = !DILocation(line: 543, column: 30, scope: !1281)
!1316 = !{!1255, !892, i64 72}
!1317 = !DILocation(line: 543, column: 38, scope: !1281)
!1318 = !{!1255, !895, i64 64}
!1319 = !DILocation(line: 543, column: 5, scope: !1281)
!1320 = !DILocation(line: 519, column: 66, scope: !1241, inlinedAt: !1296)
!1321 = !DILocation(line: 520, column: 22, scope: !1241, inlinedAt: !1296)
!1322 = !DILocation(line: 520, column: 13, scope: !1241, inlinedAt: !1296)
!1323 = !DILocation(line: 522, column: 12, scope: !1253, inlinedAt: !1296)
!1324 = !DILocation(line: 522, column: 18, scope: !1253, inlinedAt: !1296)
!1325 = !DILocation(line: 522, column: 9, scope: !1241, inlinedAt: !1296)
!1326 = !DILocation(line: 526, column: 14, scope: !1247, inlinedAt: !1296)
!1327 = !DILocation(line: 526, column: 20, scope: !1247, inlinedAt: !1296)
!1328 = !DILocation(line: 526, column: 9, scope: !1241, inlinedAt: !1296)
!1329 = !DILocation(line: 527, column: 9, scope: !1246, inlinedAt: !1296)
!1330 = !DILocation(line: 528, column: 23, scope: !1246, inlinedAt: !1296)
!1331 = !DILocation(line: 528, column: 9, scope: !1246, inlinedAt: !1296)
!1332 = !DILocation(line: 528, column: 21, scope: !1246, inlinedAt: !1296)
!1333 = !DILocation(line: 529, column: 30, scope: !1246, inlinedAt: !1296)
!1334 = !DILocation(line: 529, column: 45, scope: !1246, inlinedAt: !1296)
!1335 = !DILocation(line: 529, column: 49, scope: !1246, inlinedAt: !1296)
!1336 = !DILocation(line: 529, column: 9, scope: !1246, inlinedAt: !1296)
!1337 = !DILocation(line: 531, column: 22, scope: !1246, inlinedAt: !1296)
!1338 = !DILocation(line: 531, column: 9, scope: !1246, inlinedAt: !1296)
!1339 = !DILocation(line: 532, column: 5, scope: !1247, inlinedAt: !1296)
!1340 = !DILocation(line: 532, column: 5, scope: !1246, inlinedAt: !1296)
!1341 = !DILocation(line: 545, column: 5, scope: !1281)
!1342 = !DILocation(line: 556, column: 14, scope: !1294)
!1343 = !DILocation(line: 556, column: 28, scope: !1344)
!1344 = distinct !DILexicalBlock(scope: !1294, file: !3, line: 556, column: 5)
!1345 = !DILocation(line: 556, column: 23, scope: !1344)
!1346 = !DILocation(line: 556, column: 5, scope: !1294)
!1347 = !DILocation(line: 562, column: 1, scope: !1281)
!1348 = !DILocation(line: 559, column: 16, scope: !1349)
!1349 = distinct !DILexicalBlock(scope: !1350, file: !3, line: 559, column: 13)
!1350 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 556, column: 39)
!1351 = !DILocation(line: 559, column: 13, scope: !1349)
!1352 = !DILocation(line: 559, column: 25, scope: !1349)
!1353 = !{!1042, !895, i64 4}
!1354 = !DILocation(line: 559, column: 34, scope: !1349)
!1355 = !DILocation(line: 559, column: 13, scope: !1350)
!1356 = !DILocation(line: 560, column: 13, scope: !1349)
!1357 = !DILocation(line: 556, column: 35, scope: !1344)
!1358 = distinct !{!1358, !1346, !1359}
!1359 = !DILocation(line: 561, column: 5, scope: !1294)
!1360 = distinct !DISubprogram(name: "moduleGetCommandKeysViaAPI", scope: !3, file: !3, line: 573, type: !14, isLocal: false, isDefinition: true, scopeLine: 573, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1361)
!1361 = !{!1362, !1363, !1364, !1365, !1366, !1367, !1368}
!1362 = !DILocalVariable(name: "cmd", arg: 1, scope: !1360, file: !3, line: 573, type: !18)
!1363 = !DILocalVariable(name: "argv", arg: 2, scope: !1360, file: !3, line: 573, type: !165)
!1364 = !DILocalVariable(name: "argc", arg: 3, scope: !1360, file: !3, line: 573, type: !17)
!1365 = !DILocalVariable(name: "numkeys", arg: 4, scope: !1360, file: !3, line: 573, type: !16)
!1366 = !DILocalVariable(name: "cp", scope: !1360, file: !3, line: 574, type: !1285)
!1367 = !DILocalVariable(name: "ctx", scope: !1360, file: !3, line: 575, type: !585)
!1368 = !DILocalVariable(name: "res", scope: !1360, file: !3, line: 581, type: !16)
!1369 = !DILocation(line: 573, column: 54, scope: !1360)
!1370 = !DILocation(line: 573, column: 66, scope: !1360)
!1371 = !DILocation(line: 573, column: 76, scope: !1360)
!1372 = !DILocation(line: 573, column: 87, scope: !1360)
!1373 = !DILocation(line: 574, column: 62, scope: !1360)
!1374 = !DILocation(line: 574, column: 30, scope: !1360)
!1375 = !DILocation(line: 575, column: 5, scope: !1360)
!1376 = !DILocation(line: 575, column: 20, scope: !1360)
!1377 = !DILocation(line: 577, column: 22, scope: !1360)
!1378 = !DILocation(line: 577, column: 9, scope: !1360)
!1379 = !DILocation(line: 577, column: 16, scope: !1360)
!1380 = !DILocation(line: 578, column: 9, scope: !1360)
!1381 = !DILocation(line: 578, column: 16, scope: !1360)
!1382 = !DILocation(line: 579, column: 9, scope: !1360)
!1383 = !DILocation(line: 579, column: 15, scope: !1360)
!1384 = !DILocation(line: 580, column: 9, scope: !1360)
!1385 = !DILocation(line: 580, column: 19, scope: !1360)
!1386 = !DILocation(line: 580, column: 5, scope: !1360)
!1387 = !DILocation(line: 581, column: 20, scope: !1360)
!1388 = !{!891, !892, i64 80}
!1389 = !DILocation(line: 581, column: 10, scope: !1360)
!1390 = !DILocation(line: 582, column: 9, scope: !1391)
!1391 = distinct !DILexicalBlock(scope: !1360, file: !3, line: 582, column: 9)
!1392 = !DILocation(line: 582, column: 9, scope: !1360)
!1393 = !DILocation(line: 582, column: 33, scope: !1391)
!1394 = !{!891, !895, i64 88}
!1395 = !DILocation(line: 582, column: 27, scope: !1391)
!1396 = !DILocation(line: 582, column: 18, scope: !1391)
!1397 = !DILocation(line: 583, column: 5, scope: !1360)
!1398 = !DILocation(line: 585, column: 1, scope: !1360)
!1399 = !DILocation(line: 584, column: 5, scope: !1360)
!1400 = distinct !DISubprogram(name: "RM_IsKeysPositionRequest", scope: !3, file: !3, line: 590, type: !1401, isLocal: false, isDefinition: true, scopeLine: 590, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1403)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!17, !584}
!1403 = !{!1404}
!1404 = !DILocalVariable(name: "ctx", arg: 1, scope: !1400, file: !3, line: 590, type: !584)
!1405 = !DILocation(line: 590, column: 46, scope: !1400)
!1406 = !DILocation(line: 591, column: 18, scope: !1400)
!1407 = !DILocation(line: 591, column: 60, scope: !1400)
!1408 = !DILocation(line: 591, column: 5, scope: !1400)
!1409 = distinct !DISubprogram(name: "RM_KeyAtPos", scope: !3, file: !3, line: 608, type: !1410, isLocal: false, isDefinition: true, scopeLine: 608, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1412)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{null, !584, !17}
!1412 = !{!1413, !1414}
!1413 = !DILocalVariable(name: "ctx", arg: 1, scope: !1409, file: !3, line: 608, type: !584)
!1414 = !DILocalVariable(name: "pos", arg: 2, scope: !1409, file: !3, line: 608, type: !17)
!1415 = !DILocation(line: 608, column: 34, scope: !1409)
!1416 = !DILocation(line: 608, column: 43, scope: !1409)
!1417 = !DILocation(line: 609, column: 16, scope: !1418)
!1418 = distinct !DILexicalBlock(scope: !1409, file: !3, line: 609, column: 9)
!1419 = !DILocation(line: 609, column: 22, scope: !1418)
!1420 = !DILocation(line: 610, column: 13, scope: !1421)
!1421 = distinct !DILexicalBlock(scope: !1409, file: !3, line: 610, column: 9)
!1422 = !DILocation(line: 609, column: 9, scope: !1409)
!1423 = !DILocation(line: 611, column: 35, scope: !1409)
!1424 = !DILocation(line: 611, column: 62, scope: !1409)
!1425 = !DILocation(line: 611, column: 72, scope: !1409)
!1426 = !DILocation(line: 611, column: 56, scope: !1409)
!1427 = !DILocation(line: 611, column: 55, scope: !1409)
!1428 = !DILocation(line: 611, column: 21, scope: !1409)
!1429 = !DILocation(line: 611, column: 19, scope: !1409)
!1430 = !DILocation(line: 612, column: 34, scope: !1409)
!1431 = !DILocation(line: 612, column: 5, scope: !1409)
!1432 = !DILocation(line: 612, column: 38, scope: !1409)
!1433 = !DILocation(line: 613, column: 1, scope: !1409)
!1434 = distinct !DISubprogram(name: "commandFlagsFromString", scope: !3, file: !3, line: 619, type: !1435, isLocal: false, isDefinition: true, scopeLine: 619, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1437)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!17, !9}
!1437 = !{!1438, !1439, !1440, !1441, !1442, !1444}
!1438 = !DILocalVariable(name: "s", arg: 1, scope: !1434, file: !3, line: 619, type: !9)
!1439 = !DILocalVariable(name: "count", scope: !1434, file: !3, line: 620, type: !17)
!1440 = !DILocalVariable(name: "j", scope: !1434, file: !3, line: 620, type: !17)
!1441 = !DILocalVariable(name: "flags", scope: !1434, file: !3, line: 621, type: !17)
!1442 = !DILocalVariable(name: "tokens", scope: !1434, file: !3, line: 622, type: !1443)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!1444 = !DILocalVariable(name: "t", scope: !1445, file: !3, line: 624, type: !9)
!1445 = distinct !DILexicalBlock(scope: !1446, file: !3, line: 623, column: 33)
!1446 = distinct !DILexicalBlock(scope: !1447, file: !3, line: 623, column: 5)
!1447 = distinct !DILexicalBlock(scope: !1434, file: !3, line: 623, column: 5)
!1448 = !DILocation(line: 619, column: 34, scope: !1434)
!1449 = !DILocation(line: 620, column: 5, scope: !1434)
!1450 = !DILocation(line: 621, column: 9, scope: !1434)
!1451 = !DILocation(line: 622, column: 33, scope: !1434)
!1452 = !DILocation(line: 620, column: 9, scope: !1434)
!1453 = !DILocation(line: 622, column: 19, scope: !1434)
!1454 = !DILocation(line: 622, column: 10, scope: !1434)
!1455 = !DILocation(line: 620, column: 16, scope: !1434)
!1456 = !DILocation(line: 623, column: 21, scope: !1446)
!1457 = !DILocation(line: 623, column: 19, scope: !1446)
!1458 = !DILocation(line: 623, column: 5, scope: !1447)
!1459 = !DILocation(line: 624, column: 19, scope: !1445)
!1460 = !DILocation(line: 624, column: 15, scope: !1445)
!1461 = !DILocation(line: 625, column: 14, scope: !1462)
!1462 = distinct !DILexicalBlock(scope: !1445, file: !3, line: 625, column: 13)
!1463 = !DILocation(line: 625, column: 13, scope: !1445)
!1464 = !DILocation(line: 625, column: 43, scope: !1462)
!1465 = !DILocation(line: 625, column: 37, scope: !1462)
!1466 = !DILocation(line: 626, column: 19, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1462, file: !3, line: 626, column: 18)
!1468 = !DILocation(line: 626, column: 18, scope: !1462)
!1469 = !DILocation(line: 626, column: 51, scope: !1467)
!1470 = !DILocation(line: 626, column: 45, scope: !1467)
!1471 = !DILocation(line: 627, column: 19, scope: !1472)
!1472 = distinct !DILexicalBlock(scope: !1467, file: !3, line: 627, column: 18)
!1473 = !DILocation(line: 627, column: 18, scope: !1467)
!1474 = !DILocation(line: 627, column: 48, scope: !1472)
!1475 = !DILocation(line: 627, column: 42, scope: !1472)
!1476 = !DILocation(line: 628, column: 19, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 628, column: 18)
!1478 = !DILocation(line: 628, column: 18, scope: !1472)
!1479 = !DILocation(line: 628, column: 51, scope: !1477)
!1480 = !DILocation(line: 628, column: 45, scope: !1477)
!1481 = !DILocation(line: 629, column: 19, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1477, file: !3, line: 629, column: 18)
!1483 = !DILocation(line: 629, column: 18, scope: !1477)
!1484 = !DILocation(line: 629, column: 54, scope: !1482)
!1485 = !DILocation(line: 629, column: 48, scope: !1482)
!1486 = !DILocation(line: 630, column: 19, scope: !1487)
!1487 = distinct !DILexicalBlock(scope: !1482, file: !3, line: 630, column: 18)
!1488 = !DILocation(line: 630, column: 18, scope: !1482)
!1489 = !DILocation(line: 630, column: 56, scope: !1487)
!1490 = !DILocation(line: 630, column: 50, scope: !1487)
!1491 = !DILocation(line: 631, column: 19, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !1487, file: !3, line: 631, column: 18)
!1493 = !DILocation(line: 631, column: 18, scope: !1487)
!1494 = !DILocation(line: 631, column: 49, scope: !1492)
!1495 = !DILocation(line: 631, column: 43, scope: !1492)
!1496 = !DILocation(line: 632, column: 19, scope: !1497)
!1497 = distinct !DILexicalBlock(scope: !1492, file: !3, line: 632, column: 18)
!1498 = !DILocation(line: 632, column: 18, scope: !1492)
!1499 = !DILocation(line: 632, column: 49, scope: !1497)
!1500 = !DILocation(line: 632, column: 43, scope: !1497)
!1501 = !DILocation(line: 633, column: 19, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1497, file: !3, line: 633, column: 18)
!1503 = !DILocation(line: 633, column: 18, scope: !1497)
!1504 = !DILocation(line: 633, column: 54, scope: !1502)
!1505 = !DILocation(line: 633, column: 48, scope: !1502)
!1506 = !DILocation(line: 634, column: 19, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1502, file: !3, line: 634, column: 18)
!1508 = !DILocation(line: 634, column: 18, scope: !1502)
!1509 = !DILocation(line: 634, column: 53, scope: !1507)
!1510 = !DILocation(line: 634, column: 47, scope: !1507)
!1511 = !DILocation(line: 635, column: 19, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1507, file: !3, line: 635, column: 18)
!1513 = !DILocation(line: 635, column: 18, scope: !1507)
!1514 = !DILocation(line: 635, column: 47, scope: !1512)
!1515 = !DILocation(line: 635, column: 41, scope: !1512)
!1516 = !DILocation(line: 636, column: 19, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1512, file: !3, line: 636, column: 18)
!1518 = !DILocation(line: 636, column: 18, scope: !1512)
!1519 = !DILocation(line: 636, column: 54, scope: !1517)
!1520 = !DILocation(line: 636, column: 48, scope: !1517)
!1521 = !DILocation(line: 637, column: 19, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1517, file: !3, line: 637, column: 18)
!1523 = !DILocation(line: 637, column: 53, scope: !1522)
!1524 = !DILocation(line: 623, column: 29, scope: !1446)
!1525 = distinct !{!1525, !1458, !1526}
!1526 = !DILocation(line: 639, column: 5, scope: !1447)
!1527 = !DILocation(line: 640, column: 5, scope: !1434)
!1528 = !DILocation(line: 0, scope: !1446)
!1529 = !DILocation(line: 641, column: 14, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1434, file: !3, line: 641, column: 9)
!1531 = !DILocation(line: 641, column: 11, scope: !1530)
!1532 = !DILocation(line: 642, column: 5, scope: !1434)
!1533 = !DILocation(line: 643, column: 1, scope: !1434)
!1534 = distinct !DISubprogram(name: "RM_CreateCommand", scope: !3, file: !3, line: 698, type: !1535, isLocal: false, isDefinition: true, scopeLine: 698, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1537)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!17, !584, !523, !580, !523, !17, !17, !17}
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548}
!1538 = !DILocalVariable(name: "ctx", arg: 1, scope: !1534, file: !3, line: 698, type: !584)
!1539 = !DILocalVariable(name: "name", arg: 2, scope: !1534, file: !3, line: 698, type: !523)
!1540 = !DILocalVariable(name: "cmdfunc", arg: 3, scope: !1534, file: !3, line: 698, type: !580)
!1541 = !DILocalVariable(name: "strflags", arg: 4, scope: !1534, file: !3, line: 698, type: !523)
!1542 = !DILocalVariable(name: "firstkey", arg: 5, scope: !1534, file: !3, line: 698, type: !17)
!1543 = !DILocalVariable(name: "lastkey", arg: 6, scope: !1534, file: !3, line: 698, type: !17)
!1544 = !DILocalVariable(name: "keystep", arg: 7, scope: !1534, file: !3, line: 698, type: !17)
!1545 = !DILocalVariable(name: "flags", scope: !1534, file: !3, line: 699, type: !17)
!1546 = !DILocalVariable(name: "rediscmd", scope: !1534, file: !3, line: 704, type: !18)
!1547 = !DILocalVariable(name: "cp", scope: !1534, file: !3, line: 705, type: !1285)
!1548 = !DILocalVariable(name: "cmdname", scope: !1534, file: !3, line: 706, type: !154)
!1549 = !DILocation(line: 698, column: 38, scope: !1534)
!1550 = !DILocation(line: 698, column: 55, scope: !1534)
!1551 = !DILocation(line: 698, column: 80, scope: !1534)
!1552 = !DILocation(line: 698, column: 101, scope: !1534)
!1553 = !DILocation(line: 698, column: 115, scope: !1534)
!1554 = !DILocation(line: 698, column: 129, scope: !1534)
!1555 = !DILocation(line: 698, column: 142, scope: !1534)
!1556 = !DILocation(line: 699, column: 17, scope: !1534)
!1557 = !DILocation(line: 699, column: 28, scope: !1534)
!1558 = !DILocation(line: 699, column: 9, scope: !1534)
!1559 = !DILocation(line: 700, column: 15, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1534, file: !3, line: 700, column: 9)
!1561 = !DILocation(line: 700, column: 9, scope: !1534)
!1562 = !DILocation(line: 701, column: 16, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !1534, file: !3, line: 701, column: 9)
!1564 = !DILocation(line: 701, column: 51, scope: !1563)
!1565 = !DILocation(line: 701, column: 44, scope: !1563)
!1566 = !DILocation(line: 701, column: 41, scope: !1563)
!1567 = !DILocation(line: 706, column: 19, scope: !1534)
!1568 = !DILocation(line: 706, column: 9, scope: !1534)
!1569 = !DILocation(line: 709, column: 9, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1534, file: !3, line: 709, column: 9)
!1571 = !DILocation(line: 709, column: 32, scope: !1570)
!1572 = !DILocation(line: 709, column: 9, scope: !1534)
!1573 = !DILocation(line: 710, column: 9, scope: !1574)
!1574 = distinct !DILexicalBlock(scope: !1570, file: !3, line: 709, column: 41)
!1575 = !DILocation(line: 711, column: 9, scope: !1574)
!1576 = !DILocation(line: 721, column: 10, scope: !1534)
!1577 = !DILocation(line: 705, column: 30, scope: !1534)
!1578 = !DILocation(line: 722, column: 23, scope: !1534)
!1579 = !DILocation(line: 722, column: 16, scope: !1534)
!1580 = !DILocation(line: 723, column: 9, scope: !1534)
!1581 = !DILocation(line: 723, column: 14, scope: !1534)
!1582 = !DILocation(line: 724, column: 20, scope: !1534)
!1583 = !DILocation(line: 724, column: 9, scope: !1534)
!1584 = !DILocation(line: 724, column: 18, scope: !1534)
!1585 = !{!1308, !892, i64 16}
!1586 = !DILocation(line: 725, column: 19, scope: !1534)
!1587 = !DILocation(line: 725, column: 24, scope: !1534)
!1588 = !{!1302, !892, i64 0}
!1589 = !DILocation(line: 726, column: 19, scope: !1534)
!1590 = !DILocation(line: 726, column: 24, scope: !1534)
!1591 = !{!1302, !892, i64 8}
!1592 = !DILocation(line: 727, column: 19, scope: !1534)
!1593 = !DILocation(line: 727, column: 25, scope: !1534)
!1594 = !{!1302, !895, i64 16}
!1595 = !DILocation(line: 728, column: 33, scope: !1534)
!1596 = !DILocation(line: 728, column: 19, scope: !1534)
!1597 = !DILocation(line: 728, column: 25, scope: !1534)
!1598 = !{!1302, !895, i64 32}
!1599 = !DILocation(line: 729, column: 19, scope: !1534)
!1600 = !DILocation(line: 729, column: 32, scope: !1534)
!1601 = !DILocation(line: 730, column: 19, scope: !1534)
!1602 = !DILocation(line: 730, column: 28, scope: !1534)
!1603 = !{!1302, !895, i64 48}
!1604 = !DILocation(line: 731, column: 19, scope: !1534)
!1605 = !DILocation(line: 731, column: 27, scope: !1534)
!1606 = !{!1302, !895, i64 52}
!1607 = !DILocation(line: 732, column: 19, scope: !1534)
!1608 = !DILocation(line: 732, column: 27, scope: !1534)
!1609 = !{!1302, !895, i64 56}
!1610 = !DILocation(line: 733, column: 19, scope: !1534)
!1611 = !DILocation(line: 733, column: 32, scope: !1534)
!1612 = !{!1047, !1047, i64 0}
!1613 = !DILocation(line: 735, column: 20, scope: !1534)
!1614 = !{!1045, !892, i64 56}
!1615 = !DILocation(line: 735, column: 29, scope: !1534)
!1616 = !DILocation(line: 735, column: 49, scope: !1534)
!1617 = !DILocation(line: 735, column: 5, scope: !1534)
!1618 = !DILocation(line: 736, column: 20, scope: !1534)
!1619 = !{!1045, !892, i64 64}
!1620 = !DILocation(line: 736, column: 34, scope: !1534)
!1621 = !DILocation(line: 736, column: 54, scope: !1534)
!1622 = !DILocation(line: 736, column: 5, scope: !1534)
!1623 = !DILocation(line: 737, column: 5, scope: !1534)
!1624 = !DILocation(line: 0, scope: !1574)
!1625 = !DILocation(line: 738, column: 1, scope: !1534)
!1626 = distinct !DISubprogram(name: "RM_SetModuleAttribs", scope: !3, file: !3, line: 744, type: !1627, isLocal: false, isDefinition: true, scopeLine: 744, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1629)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{null, !584, !523, !17, !17}
!1629 = !{!1630, !1631, !1632, !1633, !1634}
!1630 = !DILocalVariable(name: "ctx", arg: 1, scope: !1626, file: !3, line: 744, type: !584)
!1631 = !DILocalVariable(name: "name", arg: 2, scope: !1626, file: !3, line: 744, type: !523)
!1632 = !DILocalVariable(name: "ver", arg: 3, scope: !1626, file: !3, line: 744, type: !17)
!1633 = !DILocalVariable(name: "apiver", arg: 4, scope: !1626, file: !3, line: 744, type: !17)
!1634 = !DILocalVariable(name: "module", scope: !1626, file: !3, line: 745, type: !577)
!1635 = !DILocation(line: 744, column: 42, scope: !1626)
!1636 = !DILocation(line: 744, column: 59, scope: !1626)
!1637 = !DILocation(line: 744, column: 69, scope: !1626)
!1638 = !DILocation(line: 744, column: 78, scope: !1626)
!1639 = !DILocation(line: 747, column: 14, scope: !1640)
!1640 = distinct !DILexicalBlock(scope: !1626, file: !3, line: 747, column: 9)
!1641 = !DILocation(line: 747, column: 21, scope: !1640)
!1642 = !DILocation(line: 747, column: 9, scope: !1626)
!1643 = !DILocation(line: 748, column: 14, scope: !1626)
!1644 = !DILocation(line: 745, column: 18, scope: !1626)
!1645 = !DILocation(line: 749, column: 20, scope: !1626)
!1646 = !DILocation(line: 749, column: 13, scope: !1626)
!1647 = !DILocation(line: 749, column: 18, scope: !1626)
!1648 = !DILocation(line: 750, column: 13, scope: !1626)
!1649 = !DILocation(line: 750, column: 17, scope: !1626)
!1650 = !{!1159, !895, i64 16}
!1651 = !DILocation(line: 751, column: 13, scope: !1626)
!1652 = !DILocation(line: 751, column: 20, scope: !1626)
!1653 = !{!1159, !895, i64 20}
!1654 = !DILocation(line: 752, column: 21, scope: !1626)
!1655 = !DILocation(line: 752, column: 13, scope: !1626)
!1656 = !DILocation(line: 752, column: 19, scope: !1626)
!1657 = !{!1159, !892, i64 24}
!1658 = !DILocation(line: 753, column: 22, scope: !1626)
!1659 = !DILocation(line: 753, column: 13, scope: !1626)
!1660 = !DILocation(line: 753, column: 20, scope: !1626)
!1661 = !{!1159, !892, i64 32}
!1662 = !DILocation(line: 754, column: 21, scope: !1626)
!1663 = !DILocation(line: 754, column: 13, scope: !1626)
!1664 = !DILocation(line: 754, column: 19, scope: !1626)
!1665 = !{!1159, !892, i64 40}
!1666 = !DILocation(line: 755, column: 23, scope: !1626)
!1667 = !DILocation(line: 755, column: 13, scope: !1626)
!1668 = !DILocation(line: 755, column: 21, scope: !1626)
!1669 = !{!1159, !892, i64 48}
!1670 = !DILocation(line: 756, column: 13, scope: !1626)
!1671 = !DILocation(line: 756, column: 21, scope: !1626)
!1672 = !{!1159, !895, i64 56}
!1673 = !DILocation(line: 757, column: 17, scope: !1626)
!1674 = !DILocation(line: 758, column: 1, scope: !1626)
!1675 = distinct !DISubprogram(name: "RM_IsModuleNameBusy", scope: !3, file: !3, line: 762, type: !1676, isLocal: false, isDefinition: true, scopeLine: 762, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1678)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!17, !523}
!1678 = !{!1679, !1680, !1681}
!1679 = !DILocalVariable(name: "name", arg: 1, scope: !1675, file: !3, line: 762, type: !523)
!1680 = !DILocalVariable(name: "modulename", scope: !1675, file: !3, line: 763, type: !154)
!1681 = !DILocalVariable(name: "de", scope: !1675, file: !3, line: 764, type: !81)
!1682 = !DILocation(line: 762, column: 37, scope: !1675)
!1683 = !DILocation(line: 763, column: 22, scope: !1675)
!1684 = !DILocation(line: 763, column: 9, scope: !1675)
!1685 = !DILocation(line: 764, column: 30, scope: !1675)
!1686 = !DILocation(line: 764, column: 21, scope: !1675)
!1687 = !DILocation(line: 764, column: 16, scope: !1675)
!1688 = !DILocation(line: 765, column: 5, scope: !1675)
!1689 = !DILocation(line: 766, column: 15, scope: !1675)
!1690 = !DILocation(line: 766, column: 5, scope: !1675)
!1691 = distinct !DISubprogram(name: "RM_Milliseconds", scope: !3, file: !3, line: 770, type: !1692, isLocal: false, isDefinition: true, scopeLine: 770, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!112}
!1694 = !DILocation(line: 771, column: 12, scope: !1691)
!1695 = !DILocation(line: 771, column: 5, scope: !1691)
!1696 = distinct !DISubprogram(name: "RM_AutoMemory", scope: !3, file: !3, line: 782, type: !880, isLocal: false, isDefinition: true, scopeLine: 782, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1697)
!1697 = !{!1698}
!1698 = !DILocalVariable(name: "ctx", arg: 1, scope: !1696, file: !3, line: 782, type: !584)
!1699 = !DILocation(line: 782, column: 36, scope: !1696)
!1700 = !DILocation(line: 783, column: 10, scope: !1696)
!1701 = !DILocation(line: 783, column: 16, scope: !1696)
!1702 = !DILocation(line: 784, column: 1, scope: !1696)
!1703 = distinct !DISubprogram(name: "autoMemoryAdd", scope: !3, file: !3, line: 787, type: !1704, isLocal: false, isDefinition: true, scopeLine: 787, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1706)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{null, !584, !17, !6}
!1706 = !{!1707, !1708, !1709}
!1707 = !DILocalVariable(name: "ctx", arg: 1, scope: !1703, file: !3, line: 787, type: !584)
!1708 = !DILocalVariable(name: "type", arg: 2, scope: !1703, file: !3, line: 787, type: !17)
!1709 = !DILocalVariable(name: "ptr", arg: 3, scope: !1703, file: !3, line: 787, type: !6)
!1710 = !DILocation(line: 787, column: 36, scope: !1703)
!1711 = !DILocation(line: 787, column: 45, scope: !1703)
!1712 = !DILocation(line: 787, column: 57, scope: !1703)
!1713 = !DILocation(line: 788, column: 16, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1703, file: !3, line: 788, column: 9)
!1715 = !DILocation(line: 788, column: 22, scope: !1714)
!1716 = !DILocation(line: 788, column: 9, scope: !1703)
!1717 = !DILocation(line: 789, column: 14, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1703, file: !3, line: 789, column: 9)
!1719 = !DILocation(line: 789, column: 35, scope: !1718)
!1720 = !DILocation(line: 789, column: 27, scope: !1718)
!1721 = !DILocation(line: 789, column: 9, scope: !1703)
!1722 = !DILocation(line: 794, column: 10, scope: !1703)
!1723 = !DILocation(line: 790, column: 26, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1718, file: !3, line: 789, column: 48)
!1725 = !DILocation(line: 791, column: 30, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1724, file: !3, line: 791, column: 13)
!1727 = !DILocation(line: 791, column: 13, scope: !1724)
!1728 = !DILocation(line: 0, scope: !1724)
!1729 = !DILocation(line: 792, column: 38, scope: !1724)
!1730 = !DILocation(line: 792, column: 74, scope: !1724)
!1731 = !DILocation(line: 792, column: 73, scope: !1724)
!1732 = !DILocation(line: 792, column: 24, scope: !1724)
!1733 = !DILocation(line: 792, column: 22, scope: !1724)
!1734 = !DILocation(line: 793, column: 5, scope: !1724)
!1735 = !DILocation(line: 794, column: 23, scope: !1703)
!1736 = !DILocation(line: 794, column: 5, scope: !1703)
!1737 = !DILocation(line: 794, column: 37, scope: !1703)
!1738 = !DILocation(line: 794, column: 42, scope: !1703)
!1739 = !DILocation(line: 795, column: 37, scope: !1703)
!1740 = !DILocation(line: 795, column: 41, scope: !1703)
!1741 = !DILocation(line: 796, column: 22, scope: !1703)
!1742 = !DILocation(line: 797, column: 1, scope: !1703)
!1743 = distinct !DISubprogram(name: "autoMemoryFreed", scope: !3, file: !3, line: 804, type: !1744, isLocal: false, isDefinition: true, scopeLine: 804, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1746)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!17, !584, !17, !6}
!1746 = !{!1747, !1748, !1749, !1750, !1751, !1753, !1757}
!1747 = !DILocalVariable(name: "ctx", arg: 1, scope: !1743, file: !3, line: 804, type: !584)
!1748 = !DILocalVariable(name: "type", arg: 2, scope: !1743, file: !3, line: 804, type: !17)
!1749 = !DILocalVariable(name: "ptr", arg: 3, scope: !1743, file: !3, line: 804, type: !6)
!1750 = !DILocalVariable(name: "count", scope: !1743, file: !3, line: 807, type: !17)
!1751 = !DILocalVariable(name: "j", scope: !1752, file: !3, line: 808, type: !17)
!1752 = distinct !DILexicalBlock(scope: !1743, file: !3, line: 808, column: 5)
!1753 = !DILocalVariable(name: "side", scope: !1754, file: !3, line: 809, type: !17)
!1754 = distinct !DILexicalBlock(scope: !1755, file: !3, line: 809, column: 9)
!1755 = distinct !DILexicalBlock(scope: !1756, file: !3, line: 808, column: 37)
!1756 = distinct !DILexicalBlock(scope: !1752, file: !3, line: 808, column: 5)
!1757 = !DILocalVariable(name: "i", scope: !1758, file: !3, line: 812, type: !17)
!1758 = distinct !DILexicalBlock(scope: !1759, file: !3, line: 809, column: 46)
!1759 = distinct !DILexicalBlock(scope: !1754, file: !3, line: 809, column: 9)
!1760 = !DILocation(line: 804, column: 37, scope: !1743)
!1761 = !DILocation(line: 804, column: 46, scope: !1743)
!1762 = !DILocation(line: 804, column: 58, scope: !1743)
!1763 = !DILocation(line: 805, column: 16, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1743, file: !3, line: 805, column: 9)
!1765 = !DILocation(line: 805, column: 22, scope: !1764)
!1766 = !DILocation(line: 805, column: 9, scope: !1743)
!1767 = !DILocation(line: 807, column: 23, scope: !1743)
!1768 = !DILocation(line: 807, column: 35, scope: !1743)
!1769 = !DILocation(line: 807, column: 38, scope: !1743)
!1770 = !DILocation(line: 807, column: 9, scope: !1743)
!1771 = !DILocation(line: 808, column: 14, scope: !1752)
!1772 = !DILocation(line: 808, column: 23, scope: !1756)
!1773 = !DILocation(line: 808, column: 5, scope: !1752)
!1774 = !DILocation(line: 809, column: 18, scope: !1754)
!1775 = !DILocation(line: 812, column: 58, scope: !1758)
!1776 = !DILocation(line: 813, column: 33, scope: !1777)
!1777 = distinct !DILexicalBlock(scope: !1758, file: !3, line: 813, column: 17)
!1778 = !DILocation(line: 812, column: 17, scope: !1758)
!1779 = !DILocation(line: 813, column: 17, scope: !1777)
!1780 = !DILocation(line: 813, column: 38, scope: !1777)
!1781 = !DILocation(line: 813, column: 46, scope: !1777)
!1782 = !DILocation(line: 814, column: 33, scope: !1777)
!1783 = !DILocation(line: 814, column: 37, scope: !1777)
!1784 = !DILocation(line: 813, column: 17, scope: !1758)
!1785 = !DILocation(line: 816, column: 38, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1777, file: !3, line: 815, column: 13)
!1787 = !DILocation(line: 812, column: 21, scope: !1758)
!1788 = !DILocation(line: 820, column: 43, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1786, file: !3, line: 820, column: 21)
!1790 = !DILocation(line: 820, column: 23, scope: !1789)
!1791 = !DILocation(line: 820, column: 21, scope: !1786)
!1792 = !DILocation(line: 821, column: 21, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1789, file: !3, line: 820, column: 47)
!1794 = !DILocation(line: 821, column: 39, scope: !1793)
!1795 = !{i64 0, i64 8, !902, i64 8, i64 4, !933}
!1796 = !DILocation(line: 826, column: 34, scope: !1786)
!1797 = !DILocation(line: 822, column: 17, scope: !1793)
!1798 = !DILocation(line: 0, scope: !1764)
!1799 = !DILocation(line: 832, column: 1, scope: !1743)
!1800 = !DILocation(line: 808, column: 33, scope: !1756)
!1801 = distinct !{!1801, !1773, !1802}
!1802 = !DILocation(line: 830, column: 5, scope: !1752)
!1803 = distinct !DISubprogram(name: "RM_FreeCallReply", scope: !3, file: !3, line: 2604, type: !1804, isLocal: false, isDefinition: true, scopeLine: 2604, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1823)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{null, !1806}
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCallReply", file: !3, line: 212, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCallReply", file: !3, line: 197, size: 384, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1808, file: !3, line: 198, baseType: !584, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1808, file: !3, line: 199, baseType: !17, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1808, file: !3, line: 200, baseType: !17, size: 32, offset: 96)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1808, file: !3, line: 201, baseType: !157, size: 64, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !1808, file: !3, line: 202, baseType: !9, size: 64, offset: 192)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "protolen", scope: !1808, file: !3, line: 203, baseType: !157, size: 64, offset: 256)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1808, file: !3, line: 211, baseType: !1817, size: 64, offset: 320)
!1817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1808, file: !3, line: 204, size: 64, elements: !1818)
!1818 = !{!1819, !1820, !1821}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1817, file: !3, line: 205, baseType: !523, size: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "ll", scope: !1817, file: !3, line: 209, baseType: !112, size: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !1817, file: !3, line: 210, baseType: !1822, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1823 = !{!1824, !1825}
!1824 = !DILocalVariable(name: "reply", arg: 1, scope: !1803, file: !3, line: 2604, type: !1806)
!1825 = !DILocalVariable(name: "ctx", scope: !1803, file: !3, line: 2606, type: !584)
!1826 = !DILocation(line: 2604, column: 45, scope: !1803)
!1827 = !DILocation(line: 2606, column: 34, scope: !1803)
!1828 = !{!1829, !892, i64 0}
!1829 = !{!"RedisModuleCallReply", !892, i64 0, !895, i64 8, !895, i64 12, !1046, i64 16, !892, i64 24, !1046, i64 32, !893, i64 40}
!1830 = !DILocation(line: 2606, column: 21, scope: !1803)
!1831 = !DILocation(line: 2607, column: 5, scope: !1803)
!1832 = !DILocation(line: 2608, column: 46, scope: !1803)
!1833 = !DILocation(line: 804, column: 37, scope: !1743, inlinedAt: !1834)
!1834 = distinct !DILocation(line: 2608, column: 5, scope: !1803)
!1835 = !DILocation(line: 804, column: 46, scope: !1743, inlinedAt: !1834)
!1836 = !DILocation(line: 804, column: 58, scope: !1743, inlinedAt: !1834)
!1837 = !DILocation(line: 805, column: 16, scope: !1764, inlinedAt: !1834)
!1838 = !DILocation(line: 805, column: 22, scope: !1764, inlinedAt: !1834)
!1839 = !DILocation(line: 805, column: 9, scope: !1743, inlinedAt: !1834)
!1840 = !DILocation(line: 807, column: 23, scope: !1743, inlinedAt: !1834)
!1841 = !DILocation(line: 808, column: 14, scope: !1752, inlinedAt: !1834)
!1842 = !DILocation(line: 808, column: 23, scope: !1756, inlinedAt: !1834)
!1843 = !DILocation(line: 808, column: 5, scope: !1752, inlinedAt: !1834)
!1844 = !DILocation(line: 807, column: 35, scope: !1743, inlinedAt: !1834)
!1845 = !DILocation(line: 807, column: 38, scope: !1743, inlinedAt: !1834)
!1846 = !DILocation(line: 807, column: 9, scope: !1743, inlinedAt: !1834)
!1847 = !DILocation(line: 809, column: 18, scope: !1754, inlinedAt: !1834)
!1848 = !DILocation(line: 812, column: 58, scope: !1758, inlinedAt: !1834)
!1849 = !DILocation(line: 813, column: 33, scope: !1777, inlinedAt: !1834)
!1850 = !DILocation(line: 812, column: 17, scope: !1758, inlinedAt: !1834)
!1851 = !DILocation(line: 813, column: 38, scope: !1777, inlinedAt: !1834)
!1852 = !DILocation(line: 813, column: 46, scope: !1777, inlinedAt: !1834)
!1853 = !DILocation(line: 814, column: 33, scope: !1777, inlinedAt: !1834)
!1854 = !DILocation(line: 814, column: 37, scope: !1777, inlinedAt: !1834)
!1855 = !DILocation(line: 813, column: 17, scope: !1758, inlinedAt: !1834)
!1856 = !DILocation(line: 813, column: 17, scope: !1777, inlinedAt: !1834)
!1857 = !DILocation(line: 816, column: 38, scope: !1786, inlinedAt: !1834)
!1858 = !DILocation(line: 812, column: 21, scope: !1758, inlinedAt: !1834)
!1859 = !DILocation(line: 820, column: 43, scope: !1789, inlinedAt: !1834)
!1860 = !DILocation(line: 820, column: 23, scope: !1789, inlinedAt: !1834)
!1861 = !DILocation(line: 820, column: 21, scope: !1786, inlinedAt: !1834)
!1862 = !DILocation(line: 821, column: 21, scope: !1793, inlinedAt: !1834)
!1863 = !DILocation(line: 821, column: 39, scope: !1793, inlinedAt: !1834)
!1864 = !DILocation(line: 826, column: 34, scope: !1786, inlinedAt: !1834)
!1865 = !DILocation(line: 822, column: 17, scope: !1793, inlinedAt: !1834)
!1866 = !DILocation(line: 808, column: 33, scope: !1756, inlinedAt: !1834)
!1867 = !DILocation(line: 2609, column: 1, scope: !1803)
!1868 = distinct !DISubprogram(name: "RM_CloseKey", scope: !3, file: !3, line: 1561, type: !1869, isLocal: false, isDefinition: true, scopeLine: 1561, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1871)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{null, !986}
!1871 = !{!1872}
!1872 = !DILocalVariable(name: "key", arg: 1, scope: !1868, file: !3, line: 1561, type: !986)
!1873 = !DILocation(line: 1561, column: 34, scope: !1868)
!1874 = !DILocation(line: 1562, column: 13, scope: !1875)
!1875 = distinct !DILexicalBlock(scope: !1868, file: !3, line: 1562, column: 9)
!1876 = !DILocation(line: 1562, column: 9, scope: !1868)
!1877 = !DILocation(line: 1563, column: 14, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1868, file: !3, line: 1563, column: 9)
!1879 = !DILocation(line: 1563, column: 19, scope: !1878)
!1880 = !DILocation(line: 1563, column: 9, scope: !1868)
!1881 = !DILocation(line: 1563, column: 63, scope: !1878)
!1882 = !DILocation(line: 1563, column: 71, scope: !1878)
!1883 = !DILocation(line: 1563, column: 40, scope: !1878)
!1884 = !DILocalVariable(name: "key", arg: 1, scope: !1885, file: !3, line: 1962, type: !986)
!1885 = distinct !DISubprogram(name: "RM_ZsetRangeStop", scope: !3, file: !3, line: 1962, type: !1869, isLocal: false, isDefinition: true, scopeLine: 1962, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1886)
!1886 = !{!1884}
!1887 = !DILocation(line: 1962, column: 39, scope: !1885, inlinedAt: !1888)
!1888 = distinct !DILocation(line: 1565, column: 5, scope: !1868)
!1889 = !DILocation(line: 1964, column: 14, scope: !1890, inlinedAt: !1888)
!1890 = distinct !DILexicalBlock(scope: !1885, file: !3, line: 1964, column: 9)
!1891 = !{!1026, !895, i64 44}
!1892 = !DILocation(line: 1964, column: 20, scope: !1890, inlinedAt: !1888)
!1893 = !DILocation(line: 1964, column: 9, scope: !1885, inlinedAt: !1888)
!1894 = !DILocation(line: 1965, column: 31, scope: !1890, inlinedAt: !1888)
!1895 = !DILocation(line: 1965, column: 9, scope: !1890, inlinedAt: !1888)
!1896 = !DILocalVariable(name: "key", arg: 1, scope: !1897, file: !3, line: 1955, type: !986)
!1897 = distinct !DISubprogram(name: "zsetKeyReset", scope: !3, file: !3, line: 1955, type: !1869, isLocal: true, isDefinition: true, scopeLine: 1955, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1898)
!1898 = !{!1896}
!1899 = !DILocation(line: 1955, column: 35, scope: !1897, inlinedAt: !1900)
!1900 = distinct !DILocation(line: 1969, column: 5, scope: !1885, inlinedAt: !1888)
!1901 = !DILocation(line: 1956, column: 16, scope: !1897, inlinedAt: !1900)
!1902 = !DILocation(line: 1957, column: 10, scope: !1897, inlinedAt: !1900)
!1903 = !DILocation(line: 1957, column: 19, scope: !1897, inlinedAt: !1900)
!1904 = !{!1026, !892, i64 104}
!1905 = !DILocation(line: 1958, column: 10, scope: !1897, inlinedAt: !1900)
!1906 = !DILocation(line: 1958, column: 14, scope: !1897, inlinedAt: !1900)
!1907 = !{!1026, !895, i64 112}
!1908 = !DILocation(line: 1566, column: 23, scope: !1868)
!1909 = !DILocation(line: 1566, column: 5, scope: !1868)
!1910 = !DILocation(line: 1567, column: 26, scope: !1868)
!1911 = !{!1026, !892, i64 0}
!1912 = !DILocation(line: 1567, column: 49, scope: !1868)
!1913 = !DILocation(line: 804, column: 37, scope: !1743, inlinedAt: !1914)
!1914 = distinct !DILocation(line: 1567, column: 5, scope: !1868)
!1915 = !DILocation(line: 804, column: 46, scope: !1743, inlinedAt: !1914)
!1916 = !DILocation(line: 804, column: 58, scope: !1743, inlinedAt: !1914)
!1917 = !DILocation(line: 805, column: 16, scope: !1764, inlinedAt: !1914)
!1918 = !DILocation(line: 805, column: 22, scope: !1764, inlinedAt: !1914)
!1919 = !DILocation(line: 805, column: 9, scope: !1743, inlinedAt: !1914)
!1920 = !DILocation(line: 807, column: 23, scope: !1743, inlinedAt: !1914)
!1921 = !DILocation(line: 808, column: 14, scope: !1752, inlinedAt: !1914)
!1922 = !DILocation(line: 808, column: 23, scope: !1756, inlinedAt: !1914)
!1923 = !DILocation(line: 808, column: 5, scope: !1752, inlinedAt: !1914)
!1924 = !DILocation(line: 807, column: 35, scope: !1743, inlinedAt: !1914)
!1925 = !DILocation(line: 807, column: 38, scope: !1743, inlinedAt: !1914)
!1926 = !DILocation(line: 807, column: 9, scope: !1743, inlinedAt: !1914)
!1927 = !DILocation(line: 809, column: 18, scope: !1754, inlinedAt: !1914)
!1928 = !DILocation(line: 812, column: 58, scope: !1758, inlinedAt: !1914)
!1929 = !DILocation(line: 813, column: 33, scope: !1777, inlinedAt: !1914)
!1930 = !DILocation(line: 812, column: 17, scope: !1758, inlinedAt: !1914)
!1931 = !DILocation(line: 813, column: 38, scope: !1777, inlinedAt: !1914)
!1932 = !DILocation(line: 813, column: 46, scope: !1777, inlinedAt: !1914)
!1933 = !DILocation(line: 814, column: 33, scope: !1777, inlinedAt: !1914)
!1934 = !DILocation(line: 814, column: 37, scope: !1777, inlinedAt: !1914)
!1935 = !DILocation(line: 813, column: 17, scope: !1758, inlinedAt: !1914)
!1936 = !DILocation(line: 813, column: 17, scope: !1777, inlinedAt: !1914)
!1937 = !DILocation(line: 816, column: 38, scope: !1786, inlinedAt: !1914)
!1938 = !DILocation(line: 812, column: 21, scope: !1758, inlinedAt: !1914)
!1939 = !DILocation(line: 820, column: 43, scope: !1789, inlinedAt: !1914)
!1940 = !DILocation(line: 820, column: 23, scope: !1789, inlinedAt: !1914)
!1941 = !DILocation(line: 820, column: 21, scope: !1786, inlinedAt: !1914)
!1942 = !DILocation(line: 821, column: 21, scope: !1793, inlinedAt: !1914)
!1943 = !DILocation(line: 821, column: 39, scope: !1793, inlinedAt: !1914)
!1944 = !DILocation(line: 826, column: 34, scope: !1786, inlinedAt: !1914)
!1945 = !DILocation(line: 822, column: 17, scope: !1793, inlinedAt: !1914)
!1946 = !DILocation(line: 808, column: 33, scope: !1756, inlinedAt: !1914)
!1947 = !DILocation(line: 1568, column: 5, scope: !1868)
!1948 = !DILocation(line: 1569, column: 1, scope: !1868)
!1949 = !DILocation(line: 4510, column: 34, scope: !1210)
!1950 = !DILocation(line: 4510, column: 56, scope: !1210)
!1951 = !DILocation(line: 4511, column: 13, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1210, file: !3, line: 4511, column: 9)
!1953 = !DILocation(line: 0, scope: !1952)
!1954 = !DILocation(line: 4511, column: 9, scope: !1210)
!1955 = !DILocation(line: 804, column: 37, scope: !1743, inlinedAt: !1956)
!1956 = distinct !DILocation(line: 4511, column: 22, scope: !1952)
!1957 = !DILocation(line: 804, column: 46, scope: !1743, inlinedAt: !1956)
!1958 = !DILocation(line: 804, column: 58, scope: !1743, inlinedAt: !1956)
!1959 = !DILocation(line: 805, column: 16, scope: !1764, inlinedAt: !1956)
!1960 = !DILocation(line: 805, column: 22, scope: !1764, inlinedAt: !1956)
!1961 = !DILocation(line: 805, column: 9, scope: !1743, inlinedAt: !1956)
!1962 = !DILocation(line: 807, column: 23, scope: !1743, inlinedAt: !1956)
!1963 = !DILocation(line: 808, column: 14, scope: !1752, inlinedAt: !1956)
!1964 = !DILocation(line: 808, column: 23, scope: !1756, inlinedAt: !1956)
!1965 = !DILocation(line: 808, column: 5, scope: !1752, inlinedAt: !1956)
!1966 = !DILocation(line: 807, column: 35, scope: !1743, inlinedAt: !1956)
!1967 = !DILocation(line: 807, column: 38, scope: !1743, inlinedAt: !1956)
!1968 = !DILocation(line: 807, column: 9, scope: !1743, inlinedAt: !1956)
!1969 = !DILocation(line: 809, column: 18, scope: !1754, inlinedAt: !1956)
!1970 = !DILocation(line: 812, column: 58, scope: !1758, inlinedAt: !1956)
!1971 = !DILocation(line: 813, column: 33, scope: !1777, inlinedAt: !1956)
!1972 = !DILocation(line: 812, column: 17, scope: !1758, inlinedAt: !1956)
!1973 = !DILocation(line: 813, column: 38, scope: !1777, inlinedAt: !1956)
!1974 = !DILocation(line: 813, column: 46, scope: !1777, inlinedAt: !1956)
!1975 = !DILocation(line: 814, column: 33, scope: !1777, inlinedAt: !1956)
!1976 = !DILocation(line: 814, column: 37, scope: !1777, inlinedAt: !1956)
!1977 = !DILocation(line: 813, column: 17, scope: !1758, inlinedAt: !1956)
!1978 = !DILocation(line: 813, column: 17, scope: !1777, inlinedAt: !1956)
!1979 = !DILocation(line: 816, column: 38, scope: !1786, inlinedAt: !1956)
!1980 = !DILocation(line: 812, column: 21, scope: !1758, inlinedAt: !1956)
!1981 = !DILocation(line: 820, column: 43, scope: !1789, inlinedAt: !1956)
!1982 = !DILocation(line: 820, column: 23, scope: !1789, inlinedAt: !1956)
!1983 = !DILocation(line: 820, column: 21, scope: !1786, inlinedAt: !1956)
!1984 = !DILocation(line: 821, column: 21, scope: !1793, inlinedAt: !1956)
!1985 = !DILocation(line: 821, column: 39, scope: !1793, inlinedAt: !1956)
!1986 = !DILocation(line: 826, column: 34, scope: !1786, inlinedAt: !1956)
!1987 = !DILocation(line: 822, column: 17, scope: !1793, inlinedAt: !1956)
!1988 = !DILocation(line: 808, column: 33, scope: !1756, inlinedAt: !1956)
!1989 = !DILocation(line: 4512, column: 16, scope: !1210)
!1990 = !DILocation(line: 4512, column: 5, scope: !1210)
!1991 = !DILocation(line: 4513, column: 5, scope: !1210)
!1992 = !DILocation(line: 4514, column: 1, scope: !1210)
!1993 = distinct !DISubprogram(name: "RM_CreateString", scope: !3, file: !3, line: 872, type: !1994, isLocal: false, isDefinition: true, scopeLine: 872, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1996)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{!143, !584, !523, !157}
!1996 = !{!1997, !1998, !1999, !2000}
!1997 = !DILocalVariable(name: "ctx", arg: 1, scope: !1993, file: !3, line: 872, type: !584)
!1998 = !DILocalVariable(name: "ptr", arg: 2, scope: !1993, file: !3, line: 872, type: !523)
!1999 = !DILocalVariable(name: "len", arg: 3, scope: !1993, file: !3, line: 872, type: !157)
!2000 = !DILocalVariable(name: "o", scope: !1993, file: !3, line: 873, type: !143)
!2001 = !DILocation(line: 872, column: 52, scope: !1993)
!2002 = !DILocation(line: 872, column: 69, scope: !1993)
!2003 = !DILocation(line: 872, column: 81, scope: !1993)
!2004 = !DILocation(line: 873, column: 28, scope: !1993)
!2005 = !DILocation(line: 873, column: 24, scope: !1993)
!2006 = !DILocation(line: 874, column: 13, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1993, file: !3, line: 874, column: 9)
!2008 = !DILocation(line: 874, column: 9, scope: !1993)
!2009 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !2010)
!2010 = distinct !DILocation(line: 874, column: 22, scope: !2007)
!2011 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !2010)
!2012 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !2010)
!2013 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !2010)
!2014 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !2010)
!2015 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !2010)
!2016 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !2010)
!2017 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !2010)
!2018 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !2010)
!2019 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !2010)
!2020 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !2010)
!2021 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !2010)
!2022 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !2010)
!2023 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !2010)
!2024 = !DILocation(line: 0, scope: !1724, inlinedAt: !2010)
!2025 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !2010)
!2026 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !2010)
!2027 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !2010)
!2028 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !2010)
!2029 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !2010)
!2030 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !2010)
!2031 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !2010)
!2032 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !2010)
!2033 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !2010)
!2034 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !2010)
!2035 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !2010)
!2036 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !2010)
!2037 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !2010)
!2038 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !2010)
!2039 = !DILocation(line: 875, column: 5, scope: !1993)
!2040 = distinct !DISubprogram(name: "RM_CreateStringPrintf", scope: !3, file: !3, line: 886, type: !2041, isLocal: false, isDefinition: true, scopeLine: 886, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2043)
!2041 = !DISubroutineType(types: !2042)
!2042 = !{!143, !584, !523, null}
!2043 = !{!2044, !2045, !2046, !2047, !2059}
!2044 = !DILocalVariable(name: "ctx", arg: 1, scope: !2040, file: !3, line: 886, type: !584)
!2045 = !DILocalVariable(name: "fmt", arg: 2, scope: !2040, file: !3, line: 886, type: !523)
!2046 = !DILocalVariable(name: "s", scope: !2040, file: !3, line: 887, type: !154)
!2047 = !DILocalVariable(name: "ap", scope: !2040, file: !3, line: 889, type: !2048)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !340, line: 46, baseType: !2049)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2050, line: 51, baseType: !2051)
!2050 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stdarg.h", directory: "/root/.unikraft/apps/redis/build")
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 889, baseType: !2052)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2053, size: 192, elements: !399)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 889, size: 192, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2053, file: !3, line: 889, baseType: !148, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2053, file: !3, line: 889, baseType: !148, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2053, file: !3, line: 889, baseType: !6, size: 64, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2053, file: !3, line: 889, baseType: !6, size: 64, offset: 128)
!2059 = !DILocalVariable(name: "o", scope: !2040, file: !3, line: 894, type: !143)
!2060 = !DILocation(line: 886, column: 58, scope: !2040)
!2061 = !DILocation(line: 886, column: 75, scope: !2040)
!2062 = !DILocation(line: 887, column: 13, scope: !2040)
!2063 = !DILocation(line: 887, column: 9, scope: !2040)
!2064 = !DILocation(line: 889, column: 5, scope: !2040)
!2065 = !DILocation(line: 889, column: 13, scope: !2040)
!2066 = !DILocation(line: 890, column: 5, scope: !2040)
!2067 = !DILocation(line: 891, column: 9, scope: !2040)
!2068 = !DILocation(line: 892, column: 5, scope: !2040)
!2069 = !DILocation(line: 894, column: 28, scope: !2040)
!2070 = !DILocation(line: 894, column: 24, scope: !2040)
!2071 = !DILocation(line: 895, column: 13, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !2040, file: !3, line: 895, column: 9)
!2073 = !DILocation(line: 895, column: 9, scope: !2040)
!2074 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !2075)
!2075 = distinct !DILocation(line: 895, column: 22, scope: !2072)
!2076 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !2075)
!2077 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !2075)
!2078 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !2075)
!2079 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !2075)
!2080 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !2075)
!2081 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !2075)
!2082 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !2075)
!2083 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !2075)
!2084 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !2075)
!2085 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !2075)
!2086 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !2075)
!2087 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !2075)
!2088 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !2075)
!2089 = !DILocation(line: 0, scope: !1724, inlinedAt: !2075)
!2090 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !2075)
!2091 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !2075)
!2092 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !2075)
!2093 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !2075)
!2094 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !2075)
!2095 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !2075)
!2096 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !2075)
!2097 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !2075)
!2098 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !2075)
!2099 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !2075)
!2100 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !2075)
!2101 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !2075)
!2102 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !2075)
!2103 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !2075)
!2104 = !DILocation(line: 898, column: 1, scope: !2040)
!2105 = !DILocation(line: 897, column: 5, scope: !2040)
!2106 = distinct !DISubprogram(name: "RM_CreateStringFromLongLong", scope: !3, file: !3, line: 909, type: !2107, isLocal: false, isDefinition: true, scopeLine: 909, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2109)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{!143, !584, !112}
!2109 = !{!2110, !2111, !2112, !2116}
!2110 = !DILocalVariable(name: "ctx", arg: 1, scope: !2106, file: !3, line: 909, type: !584)
!2111 = !DILocalVariable(name: "ll", arg: 2, scope: !2106, file: !3, line: 909, type: !112)
!2112 = !DILocalVariable(name: "buf", scope: !2106, file: !3, line: 910, type: !2113)
!2113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 168, elements: !2114)
!2114 = !{!2115}
!2115 = !DISubrange(count: 21)
!2116 = !DILocalVariable(name: "len", scope: !2106, file: !3, line: 911, type: !157)
!2117 = !DILocation(line: 909, column: 64, scope: !2106)
!2118 = !DILocation(line: 909, column: 79, scope: !2106)
!2119 = !DILocation(line: 910, column: 5, scope: !2106)
!2120 = !DILocation(line: 910, column: 10, scope: !2106)
!2121 = !DILocation(line: 911, column: 18, scope: !2106)
!2122 = !DILocation(line: 911, column: 12, scope: !2106)
!2123 = !DILocation(line: 872, column: 52, scope: !1993, inlinedAt: !2124)
!2124 = distinct !DILocation(line: 912, column: 12, scope: !2106)
!2125 = !DILocation(line: 872, column: 69, scope: !1993, inlinedAt: !2124)
!2126 = !DILocation(line: 872, column: 81, scope: !1993, inlinedAt: !2124)
!2127 = !DILocation(line: 873, column: 28, scope: !1993, inlinedAt: !2124)
!2128 = !DILocation(line: 873, column: 24, scope: !1993, inlinedAt: !2124)
!2129 = !DILocation(line: 874, column: 13, scope: !2007, inlinedAt: !2124)
!2130 = !DILocation(line: 874, column: 9, scope: !1993, inlinedAt: !2124)
!2131 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !2132)
!2132 = distinct !DILocation(line: 874, column: 22, scope: !2007, inlinedAt: !2124)
!2133 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !2132)
!2134 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !2132)
!2135 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !2132)
!2136 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !2132)
!2137 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !2132)
!2138 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !2132)
!2139 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !2132)
!2140 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !2132)
!2141 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !2132)
!2142 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !2132)
!2143 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !2132)
!2144 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !2132)
!2145 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !2132)
!2146 = !DILocation(line: 0, scope: !1724, inlinedAt: !2132)
!2147 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !2132)
!2148 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !2132)
!2149 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !2132)
!2150 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !2132)
!2151 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !2132)
!2152 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !2132)
!2153 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !2132)
!2154 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !2132)
!2155 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !2132)
!2156 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !2132)
!2157 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !2132)
!2158 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !2132)
!2159 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !2132)
!2160 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !2132)
!2161 = !DILocation(line: 913, column: 1, scope: !2106)
!2162 = !DILocation(line: 912, column: 5, scope: !2106)
!2163 = distinct !DISubprogram(name: "RM_CreateStringFromString", scope: !3, file: !3, line: 923, type: !2164, isLocal: false, isDefinition: true, scopeLine: 923, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2168)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!143, !584, !2166}
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!2168 = !{!2169, !2170, !2171}
!2169 = !DILocalVariable(name: "ctx", arg: 1, scope: !2163, file: !3, line: 923, type: !584)
!2170 = !DILocalVariable(name: "str", arg: 2, scope: !2163, file: !3, line: 923, type: !2166)
!2171 = !DILocalVariable(name: "o", scope: !2163, file: !3, line: 924, type: !143)
!2172 = !DILocation(line: 923, column: 62, scope: !2163)
!2173 = !DILocation(line: 923, column: 92, scope: !2163)
!2174 = !DILocation(line: 924, column: 28, scope: !2163)
!2175 = !DILocation(line: 924, column: 24, scope: !2163)
!2176 = !DILocation(line: 925, column: 13, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !2163, file: !3, line: 925, column: 9)
!2178 = !DILocation(line: 925, column: 9, scope: !2163)
!2179 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !2180)
!2180 = distinct !DILocation(line: 925, column: 22, scope: !2177)
!2181 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !2180)
!2182 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !2180)
!2183 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !2180)
!2184 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !2180)
!2185 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !2180)
!2186 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !2180)
!2187 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !2180)
!2188 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !2180)
!2189 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !2180)
!2190 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !2180)
!2191 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !2180)
!2192 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !2180)
!2193 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !2180)
!2194 = !DILocation(line: 0, scope: !1724, inlinedAt: !2180)
!2195 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !2180)
!2196 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !2180)
!2197 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !2180)
!2198 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !2180)
!2199 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !2180)
!2200 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !2180)
!2201 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !2180)
!2202 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !2180)
!2203 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !2180)
!2204 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !2180)
!2205 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !2180)
!2206 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !2180)
!2207 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !2180)
!2208 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !2180)
!2209 = !DILocation(line: 926, column: 5, scope: !2163)
!2210 = distinct !DISubprogram(name: "RM_FreeString", scope: !3, file: !3, line: 941, type: !2211, isLocal: false, isDefinition: true, scopeLine: 941, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2213)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{null, !584, !143}
!2213 = !{!2214, !2215}
!2214 = !DILocalVariable(name: "ctx", arg: 1, scope: !2210, file: !3, line: 941, type: !584)
!2215 = !DILocalVariable(name: "str", arg: 2, scope: !2210, file: !3, line: 941, type: !143)
!2216 = !DILocation(line: 941, column: 36, scope: !2210)
!2217 = !DILocation(line: 941, column: 60, scope: !2210)
!2218 = !DILocation(line: 942, column: 5, scope: !2210)
!2219 = !DILocation(line: 943, column: 13, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2210, file: !3, line: 943, column: 9)
!2221 = !DILocation(line: 943, column: 9, scope: !2210)
!2222 = !DILocation(line: 943, column: 64, scope: !2220)
!2223 = !DILocation(line: 804, column: 37, scope: !1743, inlinedAt: !2224)
!2224 = distinct !DILocation(line: 943, column: 22, scope: !2220)
!2225 = !DILocation(line: 804, column: 46, scope: !1743, inlinedAt: !2224)
!2226 = !DILocation(line: 804, column: 58, scope: !1743, inlinedAt: !2224)
!2227 = !DILocation(line: 805, column: 16, scope: !1764, inlinedAt: !2224)
!2228 = !DILocation(line: 805, column: 22, scope: !1764, inlinedAt: !2224)
!2229 = !DILocation(line: 805, column: 9, scope: !1743, inlinedAt: !2224)
!2230 = !DILocation(line: 807, column: 23, scope: !1743, inlinedAt: !2224)
!2231 = !DILocation(line: 808, column: 14, scope: !1752, inlinedAt: !2224)
!2232 = !DILocation(line: 808, column: 23, scope: !1756, inlinedAt: !2224)
!2233 = !DILocation(line: 808, column: 5, scope: !1752, inlinedAt: !2224)
!2234 = !DILocation(line: 807, column: 35, scope: !1743, inlinedAt: !2224)
!2235 = !DILocation(line: 807, column: 38, scope: !1743, inlinedAt: !2224)
!2236 = !DILocation(line: 807, column: 9, scope: !1743, inlinedAt: !2224)
!2237 = !DILocation(line: 809, column: 18, scope: !1754, inlinedAt: !2224)
!2238 = !DILocation(line: 812, column: 58, scope: !1758, inlinedAt: !2224)
!2239 = !DILocation(line: 813, column: 33, scope: !1777, inlinedAt: !2224)
!2240 = !DILocation(line: 812, column: 17, scope: !1758, inlinedAt: !2224)
!2241 = !DILocation(line: 813, column: 38, scope: !1777, inlinedAt: !2224)
!2242 = !DILocation(line: 813, column: 46, scope: !1777, inlinedAt: !2224)
!2243 = !DILocation(line: 814, column: 33, scope: !1777, inlinedAt: !2224)
!2244 = !DILocation(line: 814, column: 37, scope: !1777, inlinedAt: !2224)
!2245 = !DILocation(line: 813, column: 17, scope: !1758, inlinedAt: !2224)
!2246 = !DILocation(line: 813, column: 17, scope: !1777, inlinedAt: !2224)
!2247 = !DILocation(line: 816, column: 38, scope: !1786, inlinedAt: !2224)
!2248 = !DILocation(line: 812, column: 21, scope: !1758, inlinedAt: !2224)
!2249 = !DILocation(line: 820, column: 43, scope: !1789, inlinedAt: !2224)
!2250 = !DILocation(line: 820, column: 23, scope: !1789, inlinedAt: !2224)
!2251 = !DILocation(line: 820, column: 21, scope: !1786, inlinedAt: !2224)
!2252 = !DILocation(line: 821, column: 21, scope: !1793, inlinedAt: !2224)
!2253 = !DILocation(line: 821, column: 39, scope: !1793, inlinedAt: !2224)
!2254 = !DILocation(line: 826, column: 34, scope: !1786, inlinedAt: !2224)
!2255 = !DILocation(line: 822, column: 17, scope: !1793, inlinedAt: !2224)
!2256 = !DILocation(line: 808, column: 33, scope: !1756, inlinedAt: !2224)
!2257 = !DILocation(line: 944, column: 1, scope: !2210)
!2258 = distinct !DISubprogram(name: "RM_RetainString", scope: !3, file: !3, line: 970, type: !2211, isLocal: false, isDefinition: true, scopeLine: 970, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2259)
!2259 = !{!2260, !2261}
!2260 = !DILocalVariable(name: "ctx", arg: 1, scope: !2258, file: !3, line: 970, type: !584)
!2261 = !DILocalVariable(name: "str", arg: 2, scope: !2258, file: !3, line: 970, type: !143)
!2262 = !DILocation(line: 970, column: 38, scope: !2258)
!2263 = !DILocation(line: 970, column: 62, scope: !2258)
!2264 = !DILocation(line: 971, column: 13, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2258, file: !3, line: 971, column: 9)
!2266 = !DILocation(line: 971, column: 21, scope: !2265)
!2267 = !DILocation(line: 971, column: 67, scope: !2265)
!2268 = !DILocation(line: 804, column: 37, scope: !1743, inlinedAt: !2269)
!2269 = distinct !DILocation(line: 971, column: 25, scope: !2265)
!2270 = !DILocation(line: 804, column: 46, scope: !1743, inlinedAt: !2269)
!2271 = !DILocation(line: 804, column: 58, scope: !1743, inlinedAt: !2269)
!2272 = !DILocation(line: 805, column: 16, scope: !1764, inlinedAt: !2269)
!2273 = !DILocation(line: 805, column: 22, scope: !1764, inlinedAt: !2269)
!2274 = !DILocation(line: 805, column: 9, scope: !1743, inlinedAt: !2269)
!2275 = !DILocation(line: 807, column: 23, scope: !1743, inlinedAt: !2269)
!2276 = !DILocation(line: 808, column: 14, scope: !1752, inlinedAt: !2269)
!2277 = !DILocation(line: 808, column: 23, scope: !1756, inlinedAt: !2269)
!2278 = !DILocation(line: 808, column: 5, scope: !1752, inlinedAt: !2269)
!2279 = !DILocation(line: 807, column: 35, scope: !1743, inlinedAt: !2269)
!2280 = !DILocation(line: 807, column: 38, scope: !1743, inlinedAt: !2269)
!2281 = !DILocation(line: 807, column: 9, scope: !1743, inlinedAt: !2269)
!2282 = !DILocation(line: 809, column: 18, scope: !1754, inlinedAt: !2269)
!2283 = !DILocation(line: 812, column: 58, scope: !1758, inlinedAt: !2269)
!2284 = !DILocation(line: 813, column: 33, scope: !1777, inlinedAt: !2269)
!2285 = !DILocation(line: 812, column: 17, scope: !1758, inlinedAt: !2269)
!2286 = !DILocation(line: 813, column: 38, scope: !1777, inlinedAt: !2269)
!2287 = !DILocation(line: 813, column: 46, scope: !1777, inlinedAt: !2269)
!2288 = !DILocation(line: 814, column: 33, scope: !1777, inlinedAt: !2269)
!2289 = !DILocation(line: 814, column: 37, scope: !1777, inlinedAt: !2269)
!2290 = !DILocation(line: 813, column: 17, scope: !1758, inlinedAt: !2269)
!2291 = !DILocation(line: 813, column: 17, scope: !1777, inlinedAt: !2269)
!2292 = !DILocation(line: 816, column: 38, scope: !1786, inlinedAt: !2269)
!2293 = !DILocation(line: 812, column: 21, scope: !1758, inlinedAt: !2269)
!2294 = !DILocation(line: 820, column: 43, scope: !1789, inlinedAt: !2269)
!2295 = !DILocation(line: 820, column: 23, scope: !1789, inlinedAt: !2269)
!2296 = !DILocation(line: 820, column: 21, scope: !1786, inlinedAt: !2269)
!2297 = !DILocation(line: 821, column: 21, scope: !1793, inlinedAt: !2269)
!2298 = !DILocation(line: 821, column: 39, scope: !1793, inlinedAt: !2269)
!2299 = !DILocation(line: 826, column: 34, scope: !1786, inlinedAt: !2269)
!2300 = !DILocation(line: 822, column: 17, scope: !1793, inlinedAt: !2269)
!2301 = !DILocation(line: 808, column: 33, scope: !1756, inlinedAt: !2269)
!2302 = !DILocation(line: 971, column: 9, scope: !2258)
!2303 = !DILocation(line: 981, column: 9, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2265, file: !3, line: 971, column: 73)
!2305 = !DILocation(line: 982, column: 5, scope: !2304)
!2306 = !DILocation(line: 983, column: 1, scope: !2258)
!2307 = distinct !DISubprogram(name: "RM_StringPtrLen", scope: !3, file: !3, line: 988, type: !2308, isLocal: false, isDefinition: true, scopeLine: 988, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2311)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{!523, !2166, !2310}
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!2311 = !{!2312, !2313, !2314}
!2312 = !DILocalVariable(name: "str", arg: 1, scope: !2307, file: !3, line: 988, type: !2166)
!2313 = !DILocalVariable(name: "len", arg: 2, scope: !2307, file: !3, line: 988, type: !2310)
!2314 = !DILocalVariable(name: "errmsg", scope: !2315, file: !3, line: 990, type: !523)
!2315 = distinct !DILexicalBlock(scope: !2316, file: !3, line: 989, column: 22)
!2316 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 989, column: 9)
!2317 = !DILocation(line: 988, column: 54, scope: !2307)
!2318 = !DILocation(line: 988, column: 67, scope: !2307)
!2319 = !DILocation(line: 989, column: 13, scope: !2316)
!2320 = !DILocation(line: 0, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 994, column: 9)
!2322 = !DILocation(line: 989, column: 9, scope: !2307)
!2323 = !DILocation(line: 991, column: 13, scope: !2315)
!2324 = !DILocation(line: 991, column: 25, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2315, file: !3, line: 991, column: 13)
!2326 = !DILocation(line: 991, column: 23, scope: !2325)
!2327 = !{!1046, !1046, i64 0}
!2328 = !DILocation(line: 991, column: 18, scope: !2325)
!2329 = !DILocation(line: 994, column: 9, scope: !2307)
!2330 = !DILocalVariable(name: "s", arg: 1, scope: !2331, file: !155, line: 87, type: !2334)
!2331 = distinct !DISubprogram(name: "sdslen", scope: !155, file: !155, line: 87, type: !2332, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2335)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!304, !2334}
!2334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!2335 = !{!2330, !2336}
!2336 = !DILocalVariable(name: "flags", scope: !2331, file: !155, line: 88, type: !347)
!2337 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !2338)
!2338 = distinct !DILocation(line: 994, column: 21, scope: !2321)
!2339 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !2338)
!2340 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !2338)
!2341 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !2338)
!2342 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !2338)
!2343 = distinct !DILexicalBlock(scope: !2331, file: !155, line: 89, column: 33)
!2344 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !2338)
!2345 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !2338)
!2346 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !2338)
!2347 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !2338)
!2348 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !2338)
!2349 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !2338)
!2350 = !{!2351, !2351, i64 0}
!2351 = !{!"short", !893, i64 0}
!2352 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !2338)
!2353 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !2338)
!2354 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !2338)
!2355 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !2338)
!2356 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !2338)
!2357 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !2338)
!2358 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !2338)
!2359 = !DILocation(line: 0, scope: !2343, inlinedAt: !2338)
!2360 = !DILocation(line: 994, column: 19, scope: !2321)
!2361 = !DILocation(line: 994, column: 14, scope: !2321)
!2362 = !DILocation(line: 0, scope: !2307)
!2363 = !DILocation(line: 996, column: 1, scope: !2307)
!2364 = distinct !DISubprogram(name: "RM_StringToLongLong", scope: !3, file: !3, line: 1006, type: !2365, isLocal: false, isDefinition: true, scopeLine: 1006, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2368)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!17, !2166, !2367}
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!2368 = !{!2369, !2370}
!2369 = !DILocalVariable(name: "str", arg: 1, scope: !2364, file: !3, line: 1006, type: !2166)
!2370 = !DILocalVariable(name: "ll", arg: 2, scope: !2364, file: !3, line: 1006, type: !2367)
!2371 = !DILocation(line: 1006, column: 50, scope: !2364)
!2372 = !DILocation(line: 1006, column: 66, scope: !2364)
!2373 = !DILocation(line: 1007, column: 27, scope: !2364)
!2374 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !2375)
!2375 = distinct !DILocation(line: 1007, column: 31, scope: !2364)
!2376 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !2375)
!2377 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !2375)
!2378 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !2375)
!2379 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !2375)
!2380 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !2375)
!2381 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !2375)
!2382 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !2375)
!2383 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !2375)
!2384 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !2375)
!2385 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !2375)
!2386 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !2375)
!2387 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !2375)
!2388 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !2375)
!2389 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !2375)
!2390 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !2375)
!2391 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !2375)
!2392 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !2375)
!2393 = !DILocation(line: 0, scope: !2343, inlinedAt: !2375)
!2394 = !DILocation(line: 1007, column: 12, scope: !2364)
!2395 = !DILocation(line: 1007, column: 5, scope: !2364)
!2396 = distinct !DISubprogram(name: "RM_StringToDouble", scope: !3, file: !3, line: 1014, type: !2397, isLocal: false, isDefinition: true, scopeLine: 1014, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2400)
!2397 = !DISubroutineType(types: !2398)
!2398 = !{!17, !2166, !2399}
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!2400 = !{!2401, !2402, !2403}
!2401 = !DILocalVariable(name: "str", arg: 1, scope: !2396, file: !3, line: 1014, type: !2166)
!2402 = !DILocalVariable(name: "d", arg: 2, scope: !2396, file: !3, line: 1014, type: !2399)
!2403 = !DILocalVariable(name: "retval", scope: !2396, file: !3, line: 1015, type: !17)
!2404 = !DILocation(line: 1014, column: 48, scope: !2396)
!2405 = !DILocation(line: 1014, column: 61, scope: !2396)
!2406 = !DILocation(line: 1015, column: 18, scope: !2396)
!2407 = !DILocation(line: 1015, column: 9, scope: !2396)
!2408 = !DILocation(line: 1016, column: 20, scope: !2396)
!2409 = !DILocation(line: 1016, column: 12, scope: !2396)
!2410 = !DILocation(line: 1016, column: 5, scope: !2396)
!2411 = distinct !DISubprogram(name: "RM_StringCompare", scope: !3, file: !3, line: 1022, type: !2412, isLocal: false, isDefinition: true, scopeLine: 1022, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2414)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!17, !143, !143}
!2414 = !{!2415, !2416}
!2415 = !DILocalVariable(name: "a", arg: 1, scope: !2411, file: !3, line: 1022, type: !143)
!2416 = !DILocalVariable(name: "b", arg: 2, scope: !2411, file: !3, line: 1022, type: !143)
!2417 = !DILocation(line: 1022, column: 41, scope: !2411)
!2418 = !DILocation(line: 1022, column: 63, scope: !2411)
!2419 = !DILocation(line: 1023, column: 12, scope: !2411)
!2420 = !DILocation(line: 1023, column: 5, scope: !2411)
!2421 = distinct !DISubprogram(name: "moduleAssertUnsharedString", scope: !3, file: !3, line: 1028, type: !2422, isLocal: false, isDefinition: true, scopeLine: 1028, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2424)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!143, !143}
!2424 = !{!2425}
!2425 = !DILocalVariable(name: "str", arg: 1, scope: !2421, file: !3, line: 1028, type: !143)
!2426 = !DILocation(line: 1028, column: 66, scope: !2421)
!2427 = !DILocation(line: 1029, column: 14, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2421, file: !3, line: 1029, column: 9)
!2429 = !DILocation(line: 1029, column: 23, scope: !2428)
!2430 = !DILocation(line: 1029, column: 9, scope: !2421)
!2431 = !DILocation(line: 1030, column: 9, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 1029, column: 29)
!2433 = !DILocation(line: 1034, column: 9, scope: !2432)
!2434 = !DILocation(line: 1036, column: 14, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2421, file: !3, line: 1036, column: 9)
!2436 = !DILocation(line: 1036, column: 9, scope: !2421)
!2437 = !DILocation(line: 1039, column: 35, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1036, column: 47)
!2439 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !2440)
!2440 = distinct !DILocation(line: 1039, column: 39, scope: !2438)
!2441 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !2440)
!2442 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !2440)
!2443 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !2440)
!2444 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !2440)
!2445 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !2440)
!2446 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !2440)
!2447 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !2440)
!2448 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !2440)
!2449 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !2440)
!2450 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !2440)
!2451 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !2440)
!2452 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !2440)
!2453 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !2440)
!2454 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !2440)
!2455 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !2440)
!2456 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !2440)
!2457 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !2440)
!2458 = !DILocation(line: 0, scope: !2343, inlinedAt: !2440)
!2459 = !DILocation(line: 1039, column: 20, scope: !2438)
!2460 = !DILocation(line: 1039, column: 18, scope: !2438)
!2461 = !DILocation(line: 1040, column: 23, scope: !2438)
!2462 = !DILocation(line: 1041, column: 5, scope: !2438)
!2463 = !DILocation(line: 1043, column: 47, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 1041, column: 51)
!2465 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1041, column: 16)
!2466 = !DILocation(line: 1043, column: 20, scope: !2464)
!2467 = !DILocation(line: 1043, column: 18, scope: !2464)
!2468 = !DILocation(line: 1044, column: 23, scope: !2464)
!2469 = !DILocation(line: 1045, column: 5, scope: !2464)
!2470 = !DILocation(line: 0, scope: !2421)
!2471 = !DILocation(line: 1047, column: 1, scope: !2421)
!2472 = distinct !DISubprogram(name: "RM_StringAppendBuffer", scope: !3, file: !3, line: 1052, type: !2473, isLocal: false, isDefinition: true, scopeLine: 1052, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2475)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!17, !584, !143, !523, !157}
!2475 = !{!2476, !2477, !2478, !2479}
!2476 = !DILocalVariable(name: "ctx", arg: 1, scope: !2472, file: !3, line: 1052, type: !584)
!2477 = !DILocalVariable(name: "str", arg: 2, scope: !2472, file: !3, line: 1052, type: !143)
!2478 = !DILocalVariable(name: "buf", arg: 3, scope: !2472, file: !3, line: 1052, type: !523)
!2479 = !DILocalVariable(name: "len", arg: 4, scope: !2472, file: !3, line: 1052, type: !157)
!2480 = !DILocation(line: 1052, column: 43, scope: !2472)
!2481 = !DILocation(line: 1052, column: 67, scope: !2472)
!2482 = !DILocation(line: 1052, column: 84, scope: !2472)
!2483 = !DILocation(line: 1052, column: 96, scope: !2472)
!2484 = !DILocation(line: 1054, column: 11, scope: !2472)
!2485 = !DILocation(line: 1055, column: 13, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2472, file: !3, line: 1055, column: 9)
!2487 = !DILocation(line: 1055, column: 9, scope: !2472)
!2488 = !DILocation(line: 1056, column: 31, scope: !2472)
!2489 = !DILocation(line: 1056, column: 16, scope: !2472)
!2490 = !DILocation(line: 1056, column: 14, scope: !2472)
!2491 = !DILocation(line: 1057, column: 5, scope: !2472)
!2492 = !DILocation(line: 0, scope: !2472)
!2493 = !DILocation(line: 1058, column: 1, scope: !2472)
!2494 = distinct !DISubprogram(name: "RM_WrongArity", scope: !3, file: !3, line: 1077, type: !1401, isLocal: false, isDefinition: true, scopeLine: 1077, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2495)
!2495 = !{!2496}
!2496 = !DILocalVariable(name: "ctx", arg: 1, scope: !2494, file: !3, line: 1077, type: !584)
!2497 = !DILocation(line: 1077, column: 35, scope: !2494)
!2498 = !DILocation(line: 1078, column: 30, scope: !2494)
!2499 = !DILocation(line: 1080, column: 29, scope: !2494)
!2500 = !DILocation(line: 1080, column: 16, scope: !2494)
!2501 = !DILocation(line: 1080, column: 38, scope: !2494)
!2502 = !DILocation(line: 1078, column: 5, scope: !2494)
!2503 = !DILocation(line: 1081, column: 5, scope: !2494)
!2504 = distinct !DISubprogram(name: "moduleGetReplyClient", scope: !3, file: !3, line: 1098, type: !2505, isLocal: false, isDefinition: true, scopeLine: 1098, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2507)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!27, !584}
!2507 = !{!2508}
!2508 = !DILocalVariable(name: "ctx", arg: 1, scope: !2504, file: !3, line: 1098, type: !584)
!2509 = !DILocation(line: 1098, column: 46, scope: !2504)
!2510 = !DILocation(line: 1099, column: 14, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 1099, column: 9)
!2512 = !DILocation(line: 1099, column: 20, scope: !2511)
!2513 = !DILocation(line: 1099, column: 9, scope: !2504)
!2514 = !DILocation(line: 1100, column: 18, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 1100, column: 13)
!2516 = distinct !DILexicalBlock(scope: !2511, file: !3, line: 1099, column: 51)
!2517 = !{!891, !892, i64 24}
!2518 = !DILocation(line: 1100, column: 13, scope: !2515)
!2519 = !DILocation(line: 1100, column: 13, scope: !2516)
!2520 = !DILocation(line: 1101, column: 41, scope: !2515)
!2521 = !DILocation(line: 1101, column: 13, scope: !2515)
!2522 = !DILocation(line: 1109, column: 21, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2511, file: !3, line: 1104, column: 12)
!2524 = !DILocation(line: 1109, column: 9, scope: !2523)
!2525 = !DILocation(line: 0, scope: !2515)
!2526 = !DILocation(line: 1111, column: 1, scope: !2504)
!2527 = !DILocation(line: 0, scope: !2523)
!2528 = distinct !DISubprogram(name: "RM_ReplyWithLongLong", scope: !3, file: !3, line: 1115, type: !2529, isLocal: false, isDefinition: true, scopeLine: 1115, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2531)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!17, !584, !112}
!2531 = !{!2532, !2533, !2534}
!2532 = !DILocalVariable(name: "ctx", arg: 1, scope: !2528, file: !3, line: 1115, type: !584)
!2533 = !DILocalVariable(name: "ll", arg: 2, scope: !2528, file: !3, line: 1115, type: !112)
!2534 = !DILocalVariable(name: "c", scope: !2528, file: !3, line: 1116, type: !27)
!2535 = !DILocation(line: 1115, column: 42, scope: !2528)
!2536 = !DILocation(line: 1115, column: 57, scope: !2528)
!2537 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2538)
!2538 = distinct !DILocation(line: 1116, column: 17, scope: !2528)
!2539 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2538)
!2540 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2538)
!2541 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2538)
!2542 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2538)
!2543 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2538)
!2544 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2538)
!2545 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2538)
!2546 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2538)
!2547 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2538)
!2548 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2538)
!2549 = !DILocation(line: 0, scope: !2523, inlinedAt: !2538)
!2550 = !DILocation(line: 1116, column: 13, scope: !2528)
!2551 = !DILocation(line: 1117, column: 11, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 1117, column: 9)
!2553 = !DILocation(line: 1117, column: 9, scope: !2528)
!2554 = !DILocation(line: 1118, column: 5, scope: !2528)
!2555 = !DILocation(line: 1119, column: 5, scope: !2528)
!2556 = !DILocation(line: 1120, column: 1, scope: !2528)
!2557 = distinct !DISubprogram(name: "replyWithStatus", scope: !3, file: !3, line: 1125, type: !2558, isLocal: false, isDefinition: true, scopeLine: 1125, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2560)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!17, !584, !523, !9}
!2560 = !{!2561, !2562, !2563, !2564, !2565}
!2561 = !DILocalVariable(name: "ctx", arg: 1, scope: !2557, file: !3, line: 1125, type: !584)
!2562 = !DILocalVariable(name: "msg", arg: 2, scope: !2557, file: !3, line: 1125, type: !523)
!2563 = !DILocalVariable(name: "prefix", arg: 3, scope: !2557, file: !3, line: 1125, type: !9)
!2564 = !DILocalVariable(name: "c", scope: !2557, file: !3, line: 1126, type: !27)
!2565 = !DILocalVariable(name: "strmsg", scope: !2557, file: !3, line: 1128, type: !154)
!2566 = !DILocation(line: 1125, column: 37, scope: !2557)
!2567 = !DILocation(line: 1125, column: 54, scope: !2557)
!2568 = !DILocation(line: 1125, column: 65, scope: !2557)
!2569 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2570)
!2570 = distinct !DILocation(line: 1126, column: 17, scope: !2557)
!2571 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2570)
!2572 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2570)
!2573 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2570)
!2574 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2570)
!2575 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2570)
!2576 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2570)
!2577 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2570)
!2578 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2570)
!2579 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2570)
!2580 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2570)
!2581 = !DILocation(line: 0, scope: !2523, inlinedAt: !2570)
!2582 = !DILocation(line: 1126, column: 13, scope: !2557)
!2583 = !DILocation(line: 1127, column: 11, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 1127, column: 9)
!2585 = !DILocation(line: 1127, column: 9, scope: !2557)
!2586 = !DILocation(line: 1128, column: 18, scope: !2557)
!2587 = !DILocation(line: 1128, column: 9, scope: !2557)
!2588 = !DILocation(line: 1129, column: 14, scope: !2557)
!2589 = !DILocation(line: 1130, column: 14, scope: !2557)
!2590 = !DILocation(line: 1131, column: 5, scope: !2557)
!2591 = !DILocation(line: 1133, column: 1, scope: !2557)
!2592 = distinct !DISubprogram(name: "RM_ReplyWithError", scope: !3, file: !3, line: 1149, type: !2593, isLocal: false, isDefinition: true, scopeLine: 1149, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2595)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!17, !584, !523}
!2595 = !{!2596, !2597}
!2596 = !DILocalVariable(name: "ctx", arg: 1, scope: !2592, file: !3, line: 1149, type: !584)
!2597 = !DILocalVariable(name: "err", arg: 2, scope: !2592, file: !3, line: 1149, type: !523)
!2598 = !DILocation(line: 1149, column: 39, scope: !2592)
!2599 = !DILocation(line: 1149, column: 56, scope: !2592)
!2600 = !DILocation(line: 1125, column: 37, scope: !2557, inlinedAt: !2601)
!2601 = distinct !DILocation(line: 1150, column: 12, scope: !2592)
!2602 = !DILocation(line: 1125, column: 54, scope: !2557, inlinedAt: !2601)
!2603 = !DILocation(line: 1125, column: 65, scope: !2557, inlinedAt: !2601)
!2604 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2605)
!2605 = distinct !DILocation(line: 1126, column: 17, scope: !2557, inlinedAt: !2601)
!2606 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2605)
!2607 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2605)
!2608 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2605)
!2609 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2605)
!2610 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2605)
!2611 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2605)
!2612 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2605)
!2613 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2605)
!2614 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2605)
!2615 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2605)
!2616 = !DILocation(line: 0, scope: !2523, inlinedAt: !2605)
!2617 = !DILocation(line: 1126, column: 13, scope: !2557, inlinedAt: !2601)
!2618 = !DILocation(line: 1127, column: 11, scope: !2584, inlinedAt: !2601)
!2619 = !DILocation(line: 1127, column: 9, scope: !2557, inlinedAt: !2601)
!2620 = !DILocation(line: 1128, column: 18, scope: !2557, inlinedAt: !2601)
!2621 = !DILocation(line: 1128, column: 9, scope: !2557, inlinedAt: !2601)
!2622 = !DILocation(line: 1129, column: 14, scope: !2557, inlinedAt: !2601)
!2623 = !DILocation(line: 1130, column: 14, scope: !2557, inlinedAt: !2601)
!2624 = !DILocation(line: 1131, column: 5, scope: !2557, inlinedAt: !2601)
!2625 = !DILocation(line: 1150, column: 5, scope: !2592)
!2626 = distinct !DISubprogram(name: "RM_ReplyWithSimpleString", scope: !3, file: !3, line: 1158, type: !2593, isLocal: false, isDefinition: true, scopeLine: 1158, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2627)
!2627 = !{!2628, !2629}
!2628 = !DILocalVariable(name: "ctx", arg: 1, scope: !2626, file: !3, line: 1158, type: !584)
!2629 = !DILocalVariable(name: "msg", arg: 2, scope: !2626, file: !3, line: 1158, type: !523)
!2630 = !DILocation(line: 1158, column: 46, scope: !2626)
!2631 = !DILocation(line: 1158, column: 63, scope: !2626)
!2632 = !DILocation(line: 1125, column: 37, scope: !2557, inlinedAt: !2633)
!2633 = distinct !DILocation(line: 1159, column: 12, scope: !2626)
!2634 = !DILocation(line: 1125, column: 54, scope: !2557, inlinedAt: !2633)
!2635 = !DILocation(line: 1125, column: 65, scope: !2557, inlinedAt: !2633)
!2636 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2637)
!2637 = distinct !DILocation(line: 1126, column: 17, scope: !2557, inlinedAt: !2633)
!2638 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2637)
!2639 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2637)
!2640 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2637)
!2641 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2637)
!2642 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2637)
!2643 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2637)
!2644 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2637)
!2645 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2637)
!2646 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2637)
!2647 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2637)
!2648 = !DILocation(line: 0, scope: !2523, inlinedAt: !2637)
!2649 = !DILocation(line: 1126, column: 13, scope: !2557, inlinedAt: !2633)
!2650 = !DILocation(line: 1127, column: 11, scope: !2584, inlinedAt: !2633)
!2651 = !DILocation(line: 1127, column: 9, scope: !2557, inlinedAt: !2633)
!2652 = !DILocation(line: 1128, column: 18, scope: !2557, inlinedAt: !2633)
!2653 = !DILocation(line: 1128, column: 9, scope: !2557, inlinedAt: !2633)
!2654 = !DILocation(line: 1129, column: 14, scope: !2557, inlinedAt: !2633)
!2655 = !DILocation(line: 1130, column: 14, scope: !2557, inlinedAt: !2633)
!2656 = !DILocation(line: 1131, column: 5, scope: !2557, inlinedAt: !2633)
!2657 = !DILocation(line: 1159, column: 5, scope: !2626)
!2658 = distinct !DISubprogram(name: "RM_ReplyWithArray", scope: !3, file: !3, line: 1173, type: !2659, isLocal: false, isDefinition: true, scopeLine: 1173, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2661)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{!17, !584, !94}
!2661 = !{!2662, !2663, !2664}
!2662 = !DILocalVariable(name: "ctx", arg: 1, scope: !2658, file: !3, line: 1173, type: !584)
!2663 = !DILocalVariable(name: "len", arg: 2, scope: !2658, file: !3, line: 1173, type: !94)
!2664 = !DILocalVariable(name: "c", scope: !2658, file: !3, line: 1174, type: !27)
!2665 = !DILocation(line: 1173, column: 39, scope: !2658)
!2666 = !DILocation(line: 1173, column: 49, scope: !2658)
!2667 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2668)
!2668 = distinct !DILocation(line: 1174, column: 17, scope: !2658)
!2669 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2668)
!2670 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2668)
!2671 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2668)
!2672 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2668)
!2673 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2668)
!2674 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2668)
!2675 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2668)
!2676 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2668)
!2677 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2668)
!2678 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2668)
!2679 = !DILocation(line: 0, scope: !2523, inlinedAt: !2668)
!2680 = !DILocation(line: 1174, column: 13, scope: !2658)
!2681 = !DILocation(line: 1175, column: 11, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1175, column: 9)
!2683 = !DILocation(line: 1175, column: 9, scope: !2658)
!2684 = !DILocation(line: 1176, column: 13, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1176, column: 9)
!2686 = !DILocation(line: 1176, column: 9, scope: !2658)
!2687 = !DILocation(line: 1177, column: 47, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2685, file: !3, line: 1176, column: 49)
!2689 = !DILocation(line: 1178, column: 23, scope: !2688)
!2690 = !DILocation(line: 1178, column: 45, scope: !2688)
!2691 = !DILocation(line: 1178, column: 17, scope: !2688)
!2692 = !DILocation(line: 1177, column: 77, scope: !2688)
!2693 = !DILocation(line: 1177, column: 33, scope: !2688)
!2694 = !DILocation(line: 1177, column: 31, scope: !2688)
!2695 = !DILocation(line: 1180, column: 13, scope: !2688)
!2696 = !DILocation(line: 1179, column: 14, scope: !2688)
!2697 = !DILocation(line: 1179, column: 36, scope: !2688)
!2698 = !DILocation(line: 1179, column: 9, scope: !2688)
!2699 = !DILocation(line: 1179, column: 60, scope: !2688)
!2700 = !DILocation(line: 1181, column: 36, scope: !2688)
!2701 = !DILocation(line: 1182, column: 5, scope: !2688)
!2702 = !DILocation(line: 1183, column: 9, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2685, file: !3, line: 1182, column: 12)
!2704 = !DILocation(line: 1186, column: 1, scope: !2658)
!2705 = distinct !DISubprogram(name: "RM_ReplySetArrayLength", scope: !3, file: !3, line: 1214, type: !2706, isLocal: false, isDefinition: true, scopeLine: 1214, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2708)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{null, !584, !94}
!2708 = !{!2709, !2710, !2711}
!2709 = !DILocalVariable(name: "ctx", arg: 1, scope: !2705, file: !3, line: 1214, type: !584)
!2710 = !DILocalVariable(name: "len", arg: 2, scope: !2705, file: !3, line: 1214, type: !94)
!2711 = !DILocalVariable(name: "c", scope: !2705, file: !3, line: 1215, type: !27)
!2712 = !DILocation(line: 1214, column: 45, scope: !2705)
!2713 = !DILocation(line: 1214, column: 55, scope: !2705)
!2714 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2715)
!2715 = distinct !DILocation(line: 1215, column: 17, scope: !2705)
!2716 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2715)
!2717 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2715)
!2718 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2715)
!2719 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2715)
!2720 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2715)
!2721 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2715)
!2722 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2715)
!2723 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2715)
!2724 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2715)
!2725 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2715)
!2726 = !DILocation(line: 0, scope: !2523, inlinedAt: !2715)
!2727 = !DILocation(line: 1215, column: 13, scope: !2705)
!2728 = !DILocation(line: 1216, column: 11, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 1216, column: 9)
!2730 = !DILocation(line: 1216, column: 9, scope: !2705)
!2731 = !DILocation(line: 1217, column: 14, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 1217, column: 9)
!2733 = !DILocation(line: 1217, column: 37, scope: !2732)
!2734 = !DILocation(line: 1217, column: 9, scope: !2705)
!2735 = !DILocation(line: 1222, column: 27, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2732, file: !3, line: 1217, column: 43)
!2737 = !DILocation(line: 1222, column: 35, scope: !2736)
!2738 = !DILocation(line: 1218, column: 9, scope: !2736)
!2739 = !DILocation(line: 1223, column: 13, scope: !2736)
!2740 = !DILocation(line: 1225, column: 32, scope: !2705)
!2741 = !DILocation(line: 1227, column: 18, scope: !2705)
!2742 = !DILocation(line: 1227, column: 13, scope: !2705)
!2743 = !DILocation(line: 1226, column: 5, scope: !2705)
!2744 = !DILocation(line: 1229, column: 14, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 1229, column: 9)
!2746 = !DILocation(line: 1229, column: 37, scope: !2745)
!2747 = !DILocation(line: 1229, column: 9, scope: !2705)
!2748 = !DILocation(line: 1230, column: 20, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2745, file: !3, line: 1229, column: 43)
!2750 = !DILocation(line: 1230, column: 9, scope: !2749)
!2751 = !DILocation(line: 1231, column: 31, scope: !2749)
!2752 = !DILocation(line: 1232, column: 5, scope: !2749)
!2753 = !DILocation(line: 1233, column: 1, scope: !2705)
!2754 = distinct !DISubprogram(name: "RM_ReplyWithStringBuffer", scope: !3, file: !3, line: 1238, type: !2755, isLocal: false, isDefinition: true, scopeLine: 1238, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2757)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{!17, !584, !523, !157}
!2757 = !{!2758, !2759, !2760, !2761}
!2758 = !DILocalVariable(name: "ctx", arg: 1, scope: !2754, file: !3, line: 1238, type: !584)
!2759 = !DILocalVariable(name: "buf", arg: 2, scope: !2754, file: !3, line: 1238, type: !523)
!2760 = !DILocalVariable(name: "len", arg: 3, scope: !2754, file: !3, line: 1238, type: !157)
!2761 = !DILocalVariable(name: "c", scope: !2754, file: !3, line: 1239, type: !27)
!2762 = !DILocation(line: 1238, column: 46, scope: !2754)
!2763 = !DILocation(line: 1238, column: 63, scope: !2754)
!2764 = !DILocation(line: 1238, column: 75, scope: !2754)
!2765 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2766)
!2766 = distinct !DILocation(line: 1239, column: 17, scope: !2754)
!2767 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2766)
!2768 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2766)
!2769 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2766)
!2770 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2766)
!2771 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2766)
!2772 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2766)
!2773 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2766)
!2774 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2766)
!2775 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2766)
!2776 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2766)
!2777 = !DILocation(line: 0, scope: !2523, inlinedAt: !2766)
!2778 = !DILocation(line: 1239, column: 13, scope: !2754)
!2779 = !DILocation(line: 1240, column: 11, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2754, file: !3, line: 1240, column: 9)
!2781 = !DILocation(line: 1240, column: 9, scope: !2754)
!2782 = !DILocation(line: 1241, column: 5, scope: !2754)
!2783 = !DILocation(line: 1242, column: 5, scope: !2754)
!2784 = !DILocation(line: 1243, column: 1, scope: !2754)
!2785 = distinct !DISubprogram(name: "RM_ReplyWithCString", scope: !3, file: !3, line: 1249, type: !2593, isLocal: false, isDefinition: true, scopeLine: 1249, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2786)
!2786 = !{!2787, !2788, !2789}
!2787 = !DILocalVariable(name: "ctx", arg: 1, scope: !2785, file: !3, line: 1249, type: !584)
!2788 = !DILocalVariable(name: "buf", arg: 2, scope: !2785, file: !3, line: 1249, type: !523)
!2789 = !DILocalVariable(name: "c", scope: !2785, file: !3, line: 1250, type: !27)
!2790 = !DILocation(line: 1249, column: 41, scope: !2785)
!2791 = !DILocation(line: 1249, column: 58, scope: !2785)
!2792 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2793)
!2793 = distinct !DILocation(line: 1250, column: 17, scope: !2785)
!2794 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2793)
!2795 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2793)
!2796 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2793)
!2797 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2793)
!2798 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2793)
!2799 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2793)
!2800 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2793)
!2801 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2793)
!2802 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2793)
!2803 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2793)
!2804 = !DILocation(line: 0, scope: !2523, inlinedAt: !2793)
!2805 = !DILocation(line: 1250, column: 13, scope: !2785)
!2806 = !DILocation(line: 1251, column: 11, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 1251, column: 9)
!2808 = !DILocation(line: 1251, column: 9, scope: !2785)
!2809 = !DILocation(line: 1252, column: 5, scope: !2785)
!2810 = !DILocation(line: 1253, column: 5, scope: !2785)
!2811 = !DILocation(line: 1254, column: 1, scope: !2785)
!2812 = distinct !DISubprogram(name: "RM_ReplyWithString", scope: !3, file: !3, line: 1259, type: !2813, isLocal: false, isDefinition: true, scopeLine: 1259, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2815)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!17, !584, !143}
!2815 = !{!2816, !2817, !2818}
!2816 = !DILocalVariable(name: "ctx", arg: 1, scope: !2812, file: !3, line: 1259, type: !584)
!2817 = !DILocalVariable(name: "str", arg: 2, scope: !2812, file: !3, line: 1259, type: !143)
!2818 = !DILocalVariable(name: "c", scope: !2812, file: !3, line: 1260, type: !27)
!2819 = !DILocation(line: 1259, column: 40, scope: !2812)
!2820 = !DILocation(line: 1259, column: 64, scope: !2812)
!2821 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2822)
!2822 = distinct !DILocation(line: 1260, column: 17, scope: !2812)
!2823 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2822)
!2824 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2822)
!2825 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2822)
!2826 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2822)
!2827 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2822)
!2828 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2822)
!2829 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2822)
!2830 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2822)
!2831 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2822)
!2832 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2822)
!2833 = !DILocation(line: 0, scope: !2523, inlinedAt: !2822)
!2834 = !DILocation(line: 1260, column: 13, scope: !2812)
!2835 = !DILocation(line: 1261, column: 11, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 1261, column: 9)
!2837 = !DILocation(line: 1261, column: 9, scope: !2812)
!2838 = !DILocation(line: 1262, column: 5, scope: !2812)
!2839 = !DILocation(line: 1263, column: 5, scope: !2812)
!2840 = !DILocation(line: 1264, column: 1, scope: !2812)
!2841 = distinct !DISubprogram(name: "RM_ReplyWithNull", scope: !3, file: !3, line: 1270, type: !1401, isLocal: false, isDefinition: true, scopeLine: 1270, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2842)
!2842 = !{!2843, !2844}
!2843 = !DILocalVariable(name: "ctx", arg: 1, scope: !2841, file: !3, line: 1270, type: !584)
!2844 = !DILocalVariable(name: "c", scope: !2841, file: !3, line: 1271, type: !27)
!2845 = !DILocation(line: 1270, column: 38, scope: !2841)
!2846 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2847)
!2847 = distinct !DILocation(line: 1271, column: 17, scope: !2841)
!2848 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2847)
!2849 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2847)
!2850 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2847)
!2851 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2847)
!2852 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2847)
!2853 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2847)
!2854 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2847)
!2855 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2847)
!2856 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2847)
!2857 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2847)
!2858 = !DILocation(line: 0, scope: !2523, inlinedAt: !2847)
!2859 = !DILocation(line: 1271, column: 13, scope: !2841)
!2860 = !DILocation(line: 1272, column: 11, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 1272, column: 9)
!2862 = !DILocation(line: 1272, column: 9, scope: !2841)
!2863 = !DILocation(line: 1273, column: 23, scope: !2841)
!2864 = !{!2865, !892, i64 80}
!2865 = !{!"sharedObjectsStruct", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !892, i64 56, !892, i64 64, !892, i64 72, !892, i64 80, !892, i64 88, !892, i64 96, !892, i64 104, !892, i64 112, !892, i64 120, !892, i64 128, !892, i64 136, !892, i64 144, !892, i64 152, !892, i64 160, !892, i64 168, !892, i64 176, !892, i64 184, !892, i64 192, !892, i64 200, !892, i64 208, !892, i64 216, !892, i64 224, !892, i64 232, !892, i64 240, !892, i64 248, !892, i64 256, !892, i64 264, !892, i64 272, !892, i64 280, !892, i64 288, !892, i64 296, !892, i64 304, !892, i64 312, !892, i64 320, !892, i64 328, !892, i64 336, !892, i64 344, !892, i64 352, !892, i64 360, !893, i64 368, !893, i64 448, !893, i64 80448, !893, i64 80704, !892, i64 80960, !892, i64 80968}
!2866 = !DILocation(line: 1273, column: 5, scope: !2841)
!2867 = !DILocation(line: 1274, column: 5, scope: !2841)
!2868 = !DILocation(line: 1275, column: 1, scope: !2841)
!2869 = distinct !DISubprogram(name: "RM_ReplyWithCallReply", scope: !3, file: !3, line: 1283, type: !2870, isLocal: false, isDefinition: true, scopeLine: 1283, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2872)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!17, !584, !1806}
!2872 = !{!2873, !2874, !2875, !2876}
!2873 = !DILocalVariable(name: "ctx", arg: 1, scope: !2869, file: !3, line: 1283, type: !584)
!2874 = !DILocalVariable(name: "reply", arg: 2, scope: !2869, file: !3, line: 1283, type: !1806)
!2875 = !DILocalVariable(name: "c", scope: !2869, file: !3, line: 1284, type: !27)
!2876 = !DILocalVariable(name: "proto", scope: !2869, file: !3, line: 1286, type: !154)
!2877 = !DILocation(line: 1283, column: 43, scope: !2869)
!2878 = !DILocation(line: 1283, column: 70, scope: !2869)
!2879 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2880)
!2880 = distinct !DILocation(line: 1284, column: 17, scope: !2869)
!2881 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2880)
!2882 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2880)
!2883 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2880)
!2884 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2880)
!2885 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2880)
!2886 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2880)
!2887 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2880)
!2888 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2880)
!2889 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2880)
!2890 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2880)
!2891 = !DILocation(line: 0, scope: !2523, inlinedAt: !2880)
!2892 = !DILocation(line: 1284, column: 13, scope: !2869)
!2893 = !DILocation(line: 1285, column: 11, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 1285, column: 9)
!2895 = !DILocation(line: 1285, column: 9, scope: !2869)
!2896 = !DILocation(line: 1286, column: 34, scope: !2869)
!2897 = !{!1829, !892, i64 24}
!2898 = !DILocation(line: 1286, column: 48, scope: !2869)
!2899 = !{!1829, !1046, i64 32}
!2900 = !DILocation(line: 1286, column: 17, scope: !2869)
!2901 = !DILocation(line: 1286, column: 9, scope: !2869)
!2902 = !DILocation(line: 1287, column: 5, scope: !2869)
!2903 = !DILocation(line: 1289, column: 1, scope: !2869)
!2904 = distinct !DISubprogram(name: "RM_ReplyWithDouble", scope: !3, file: !3, line: 1297, type: !2905, isLocal: false, isDefinition: true, scopeLine: 1297, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2907)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{!17, !584, !96}
!2907 = !{!2908, !2909, !2910}
!2908 = !DILocalVariable(name: "ctx", arg: 1, scope: !2904, file: !3, line: 1297, type: !584)
!2909 = !DILocalVariable(name: "d", arg: 2, scope: !2904, file: !3, line: 1297, type: !96)
!2910 = !DILocalVariable(name: "c", scope: !2904, file: !3, line: 1298, type: !27)
!2911 = !DILocation(line: 1297, column: 40, scope: !2904)
!2912 = !DILocation(line: 1297, column: 52, scope: !2904)
!2913 = !DILocation(line: 1098, column: 46, scope: !2504, inlinedAt: !2914)
!2914 = distinct !DILocation(line: 1298, column: 17, scope: !2904)
!2915 = !DILocation(line: 1099, column: 14, scope: !2511, inlinedAt: !2914)
!2916 = !DILocation(line: 1099, column: 20, scope: !2511, inlinedAt: !2914)
!2917 = !DILocation(line: 1099, column: 9, scope: !2504, inlinedAt: !2914)
!2918 = !DILocation(line: 1100, column: 18, scope: !2515, inlinedAt: !2914)
!2919 = !DILocation(line: 1100, column: 13, scope: !2515, inlinedAt: !2914)
!2920 = !DILocation(line: 1100, column: 13, scope: !2516, inlinedAt: !2914)
!2921 = !DILocation(line: 1101, column: 41, scope: !2515, inlinedAt: !2914)
!2922 = !DILocation(line: 1101, column: 13, scope: !2515, inlinedAt: !2914)
!2923 = !DILocation(line: 1109, column: 21, scope: !2523, inlinedAt: !2914)
!2924 = !DILocation(line: 1109, column: 9, scope: !2523, inlinedAt: !2914)
!2925 = !DILocation(line: 0, scope: !2523, inlinedAt: !2914)
!2926 = !DILocation(line: 1298, column: 13, scope: !2904)
!2927 = !DILocation(line: 1299, column: 11, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 1299, column: 9)
!2929 = !DILocation(line: 1299, column: 9, scope: !2904)
!2930 = !DILocation(line: 1300, column: 5, scope: !2904)
!2931 = !DILocation(line: 1301, column: 5, scope: !2904)
!2932 = !DILocation(line: 1302, column: 1, scope: !2904)
!2933 = distinct !DISubprogram(name: "moduleReplicateMultiIfNeeded", scope: !3, file: !3, line: 1311, type: !880, isLocal: false, isDefinition: true, scopeLine: 1311, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2934)
!2934 = !{!2935}
!2935 = !DILocalVariable(name: "ctx", arg: 1, scope: !2933, file: !3, line: 1311, type: !584)
!2936 = !DILocation(line: 1311, column: 51, scope: !2933)
!2937 = !DILocation(line: 1314, column: 14, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1314, column: 9)
!2939 = !DILocation(line: 1314, column: 22, scope: !2938)
!2940 = !DILocation(line: 1314, column: 28, scope: !2938)
!2941 = !DILocation(line: 1314, column: 9, scope: !2933)
!2942 = !DILocation(line: 1316, column: 14, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1316, column: 9)
!2944 = !DILocation(line: 1316, column: 9, scope: !2933)
!2945 = !DILocation(line: 1321, column: 5, scope: !2933)
!2946 = !DILocation(line: 1322, column: 16, scope: !2933)
!2947 = !DILocation(line: 1323, column: 1, scope: !2933)
!2948 = distinct !DISubprogram(name: "RM_Replicate", scope: !3, file: !3, line: 1344, type: !2949, isLocal: false, isDefinition: true, scopeLine: 1344, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2951)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!17, !584, !523, !523, null}
!2951 = !{!2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960}
!2952 = !DILocalVariable(name: "ctx", arg: 1, scope: !2948, file: !3, line: 1344, type: !584)
!2953 = !DILocalVariable(name: "cmdname", arg: 2, scope: !2948, file: !3, line: 1344, type: !523)
!2954 = !DILocalVariable(name: "fmt", arg: 3, scope: !2948, file: !3, line: 1344, type: !523)
!2955 = !DILocalVariable(name: "cmd", scope: !2948, file: !3, line: 1345, type: !18)
!2956 = !DILocalVariable(name: "argv", scope: !2948, file: !3, line: 1346, type: !165)
!2957 = !DILocalVariable(name: "argc", scope: !2948, file: !3, line: 1347, type: !17)
!2958 = !DILocalVariable(name: "flags", scope: !2948, file: !3, line: 1347, type: !17)
!2959 = !DILocalVariable(name: "j", scope: !2948, file: !3, line: 1347, type: !17)
!2960 = !DILocalVariable(name: "ap", scope: !2948, file: !3, line: 1348, type: !2048)
!2961 = !DILocation(line: 1344, column: 34, scope: !2948)
!2962 = !DILocation(line: 1344, column: 51, scope: !2948)
!2963 = !DILocation(line: 1344, column: 72, scope: !2948)
!2964 = !DILocation(line: 1346, column: 12, scope: !2948)
!2965 = !DILocation(line: 1347, column: 5, scope: !2948)
!2966 = !DILocation(line: 1347, column: 9, scope: !2948)
!2967 = !DILocation(line: 1347, column: 19, scope: !2948)
!2968 = !DILocation(line: 1348, column: 5, scope: !2948)
!2969 = !DILocation(line: 1348, column: 13, scope: !2948)
!2970 = !DILocation(line: 1350, column: 11, scope: !2948)
!2971 = !DILocation(line: 1345, column: 26, scope: !2948)
!2972 = !DILocation(line: 1351, column: 10, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 1351, column: 9)
!2974 = !DILocation(line: 1351, column: 9, scope: !2948)
!2975 = !DILocation(line: 1354, column: 5, scope: !2948)
!2976 = !DILocation(line: 1355, column: 12, scope: !2948)
!2977 = !DILocation(line: 1356, column: 5, scope: !2948)
!2978 = !DILocation(line: 1357, column: 14, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 1357, column: 9)
!2980 = !DILocation(line: 1357, column: 9, scope: !2948)
!2981 = !DILocation(line: 1311, column: 51, scope: !2933, inlinedAt: !2982)
!2982 = distinct !DILocation(line: 1360, column: 5, scope: !2948)
!2983 = !DILocation(line: 1314, column: 14, scope: !2938, inlinedAt: !2982)
!2984 = !DILocation(line: 1314, column: 22, scope: !2938, inlinedAt: !2982)
!2985 = !DILocation(line: 1314, column: 28, scope: !2938, inlinedAt: !2982)
!2986 = !DILocation(line: 1314, column: 9, scope: !2933, inlinedAt: !2982)
!2987 = !DILocation(line: 1316, column: 14, scope: !2943, inlinedAt: !2982)
!2988 = !DILocation(line: 1316, column: 9, scope: !2933, inlinedAt: !2982)
!2989 = !DILocation(line: 1321, column: 5, scope: !2933, inlinedAt: !2982)
!2990 = !DILocation(line: 1322, column: 16, scope: !2933, inlinedAt: !2982)
!2991 = !DILocation(line: 1361, column: 28, scope: !2948)
!2992 = !DILocation(line: 1323, column: 1, scope: !2933, inlinedAt: !2982)
!2993 = !DILocation(line: 1361, column: 36, scope: !2948)
!2994 = !DILocation(line: 1361, column: 40, scope: !2948)
!2995 = !DILocation(line: 1361, column: 48, scope: !2948)
!2996 = !DILocation(line: 1361, column: 5, scope: !2948)
!2997 = !DILocation(line: 1347, column: 30, scope: !2948)
!2998 = !DILocation(line: 1365, column: 19, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 1365, column: 5)
!3000 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 1365, column: 5)
!3001 = !DILocation(line: 1365, column: 5, scope: !3000)
!3002 = !DILocation(line: 1365, column: 45, scope: !2999)
!3003 = !DILocation(line: 1365, column: 32, scope: !2999)
!3004 = !DILocation(line: 1365, column: 28, scope: !2999)
!3005 = distinct !{!3005, !3001, !3006}
!3006 = !DILocation(line: 1365, column: 52, scope: !3000)
!3007 = !DILocation(line: 1366, column: 11, scope: !2948)
!3008 = !DILocation(line: 1366, column: 5, scope: !2948)
!3009 = !DILocation(line: 1367, column: 17, scope: !2948)
!3010 = !{!1045, !1047, i64 2080}
!3011 = !DILocation(line: 1368, column: 5, scope: !2948)
!3012 = !DILocation(line: 0, scope: !2973)
!3013 = !DILocation(line: 1369, column: 1, scope: !2948)
!3014 = distinct !DISubprogram(name: "moduleCreateArgvFromUserFormat", scope: !3, file: !3, line: 2686, type: !3015, isLocal: false, isDefinition: true, scopeLine: 2686, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3018)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!165, !523, !523, !16, !16, !3017}
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!3018 = !{!3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3033, !3036, !3039, !3040, !3043, !3046, !3047}
!3019 = !DILocalVariable(name: "cmdname", arg: 1, scope: !3014, file: !3, line: 2686, type: !523)
!3020 = !DILocalVariable(name: "fmt", arg: 2, scope: !3014, file: !3, line: 2686, type: !523)
!3021 = !DILocalVariable(name: "argcp", arg: 3, scope: !3014, file: !3, line: 2686, type: !16)
!3022 = !DILocalVariable(name: "flags", arg: 4, scope: !3014, file: !3, line: 2686, type: !16)
!3023 = !DILocalVariable(name: "ap", arg: 5, scope: !3014, file: !3, line: 2686, type: !3017)
!3024 = !DILocalVariable(name: "argc", scope: !3014, file: !3, line: 2687, type: !17)
!3025 = !DILocalVariable(name: "argv_size", scope: !3014, file: !3, line: 2687, type: !17)
!3026 = !DILocalVariable(name: "j", scope: !3014, file: !3, line: 2687, type: !17)
!3027 = !DILocalVariable(name: "argv", scope: !3014, file: !3, line: 2688, type: !165)
!3028 = !DILocalVariable(name: "p", scope: !3014, file: !3, line: 2700, type: !523)
!3029 = !DILocalVariable(name: "cstr", scope: !3030, file: !3, line: 2703, type: !9)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 2702, column: 24)
!3031 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 2702, column: 13)
!3032 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 2701, column: 15)
!3033 = !DILocalVariable(name: "obj", scope: !3034, file: !3, line: 2706, type: !143)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 2705, column: 31)
!3035 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 2705, column: 20)
!3036 = !DILocalVariable(name: "buf", scope: !3037, file: !3, line: 2710, type: !9)
!3037 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 2709, column: 31)
!3038 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 2709, column: 20)
!3039 = !DILocalVariable(name: "len", scope: !3037, file: !3, line: 2711, type: !157)
!3040 = !DILocalVariable(name: "ll", scope: !3041, file: !3, line: 2714, type: !94)
!3041 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 2713, column: 31)
!3042 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 2713, column: 20)
!3043 = !DILocalVariable(name: "v", scope: !3044, file: !3, line: 2718, type: !165)
!3044 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 2716, column: 31)
!3045 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 2716, column: 20)
!3046 = !DILocalVariable(name: "vlen", scope: !3044, file: !3, line: 2719, type: !157)
!3047 = !DILocalVariable(name: "i", scope: !3044, file: !3, line: 2727, type: !157)
!3048 = !DILocation(line: 2686, column: 51, scope: !3014)
!3049 = !DILocation(line: 2686, column: 72, scope: !3014)
!3050 = !DILocation(line: 2686, column: 82, scope: !3014)
!3051 = !DILocation(line: 2686, column: 94, scope: !3014)
!3052 = !DILocation(line: 2686, column: 109, scope: !3014)
!3053 = !DILocation(line: 2687, column: 9, scope: !3014)
!3054 = !DILocation(line: 2688, column: 12, scope: !3014)
!3055 = !DILocation(line: 2692, column: 17, scope: !3014)
!3056 = !DILocation(line: 2687, column: 19, scope: !3014)
!3057 = !DILocation(line: 2693, column: 40, scope: !3014)
!3058 = !DILocation(line: 2693, column: 39, scope: !3014)
!3059 = !DILocation(line: 2693, column: 12, scope: !3014)
!3060 = !DILocation(line: 2696, column: 42, scope: !3014)
!3061 = !DILocation(line: 2696, column: 15, scope: !3014)
!3062 = !DILocation(line: 2696, column: 13, scope: !3014)
!3063 = !DILocation(line: 2700, column: 17, scope: !3014)
!3064 = !DILocation(line: 2701, column: 5, scope: !3014)
!3065 = !DILocation(line: 0, scope: !3032)
!3066 = !DILocation(line: 2693, column: 10, scope: !3014)
!3067 = !DILocation(line: 2692, column: 15, scope: !3014)
!3068 = !DILocation(line: 0, scope: !3030)
!3069 = !DILocation(line: 2701, column: 11, scope: !3014)
!3070 = !DILocation(line: 2687, column: 30, scope: !3014)
!3071 = !DILocation(line: 2743, column: 19, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3073, file: !3, line: 2743, column: 5)
!3073 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 2743, column: 5)
!3074 = !DILocation(line: 2743, column: 5, scope: !3073)
!3075 = !DILocation(line: 2744, column: 22, scope: !3072)
!3076 = !DILocation(line: 2703, column: 26, scope: !3030)
!3077 = !DILocation(line: 2703, column: 19, scope: !3030)
!3078 = !DILocation(line: 2704, column: 52, scope: !3030)
!3079 = !DILocation(line: 2704, column: 28, scope: !3030)
!3080 = !DILocation(line: 2704, column: 22, scope: !3030)
!3081 = !DILocation(line: 2704, column: 13, scope: !3030)
!3082 = !DILocation(line: 2704, column: 26, scope: !3030)
!3083 = !DILocation(line: 2705, column: 9, scope: !3030)
!3084 = !DILocation(line: 2706, column: 25, scope: !3034)
!3085 = !DILocation(line: 2706, column: 19, scope: !3034)
!3086 = !DILocation(line: 2707, column: 22, scope: !3034)
!3087 = !DILocation(line: 2707, column: 13, scope: !3034)
!3088 = !DILocation(line: 2707, column: 26, scope: !3034)
!3089 = !DILocation(line: 2708, column: 13, scope: !3034)
!3090 = !DILocation(line: 2709, column: 9, scope: !3034)
!3091 = !DILocation(line: 2710, column: 25, scope: !3037)
!3092 = !DILocation(line: 2710, column: 19, scope: !3037)
!3093 = !DILocation(line: 2711, column: 26, scope: !3037)
!3094 = !DILocation(line: 2711, column: 20, scope: !3037)
!3095 = !DILocation(line: 2712, column: 28, scope: !3037)
!3096 = !DILocation(line: 2712, column: 22, scope: !3037)
!3097 = !DILocation(line: 2712, column: 13, scope: !3037)
!3098 = !DILocation(line: 2712, column: 26, scope: !3037)
!3099 = !DILocation(line: 2713, column: 9, scope: !3037)
!3100 = !DILocation(line: 2714, column: 23, scope: !3041)
!3101 = !DILocation(line: 2714, column: 18, scope: !3041)
!3102 = !DILocation(line: 2715, column: 52, scope: !3041)
!3103 = !DILocation(line: 2715, column: 28, scope: !3041)
!3104 = !DILocation(line: 2715, column: 22, scope: !3041)
!3105 = !DILocation(line: 2715, column: 13, scope: !3041)
!3106 = !DILocation(line: 2715, column: 26, scope: !3041)
!3107 = !DILocation(line: 2716, column: 9, scope: !3041)
!3108 = !DILocation(line: 2718, column: 25, scope: !3044)
!3109 = !DILocation(line: 2718, column: 21, scope: !3044)
!3110 = !DILocation(line: 2719, column: 28, scope: !3044)
!3111 = !DILocation(line: 2719, column: 21, scope: !3044)
!3112 = !DILocation(line: 2724, column: 24, scope: !3044)
!3113 = !DILocation(line: 2725, column: 49, scope: !3044)
!3114 = !DILocation(line: 2725, column: 48, scope: !3044)
!3115 = !DILocation(line: 2725, column: 21, scope: !3044)
!3116 = !DILocation(line: 2727, column: 21, scope: !3044)
!3117 = !DILocation(line: 2728, column: 28, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 2728, column: 14)
!3119 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 2728, column: 14)
!3120 = !DILocation(line: 2728, column: 14, scope: !3119)
!3121 = !DILocation(line: 2729, column: 31, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3118, file: !3, line: 2728, column: 41)
!3123 = !DILocation(line: 2729, column: 18, scope: !3122)
!3124 = !DILocation(line: 2730, column: 33, scope: !3122)
!3125 = !DILocation(line: 2730, column: 27, scope: !3122)
!3126 = !DILocation(line: 2730, column: 18, scope: !3122)
!3127 = !DILocation(line: 2730, column: 31, scope: !3122)
!3128 = !DILocation(line: 2728, column: 37, scope: !3118)
!3129 = distinct !{!3129, !3120, !3130}
!3130 = !DILocation(line: 2731, column: 14, scope: !3119)
!3131 = !DILocation(line: 2733, column: 17, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 2732, column: 31)
!3133 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 2732, column: 20)
!3134 = !DILocation(line: 2733, column: 33, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 2733, column: 17)
!3136 = !DILocation(line: 2733, column: 24, scope: !3135)
!3137 = !DILocation(line: 2737, column: 10, scope: !3032)
!3138 = !DILocation(line: 0, scope: !3014)
!3139 = distinct !{!3139, !3064, !3140}
!3140 = !DILocation(line: 2738, column: 5, scope: !3014)
!3141 = !DILocation(line: 2739, column: 12, scope: !3014)
!3142 = !DILocation(line: 2740, column: 5, scope: !3014)
!3143 = !DILocation(line: 2744, column: 9, scope: !3072)
!3144 = !DILocation(line: 2743, column: 28, scope: !3072)
!3145 = distinct !{!3145, !3074, !3146}
!3146 = !DILocation(line: 2744, column: 29, scope: !3073)
!3147 = !DILocation(line: 2745, column: 5, scope: !3014)
!3148 = !DILocation(line: 2746, column: 5, scope: !3014)
!3149 = !DILocation(line: 2747, column: 1, scope: !3014)
!3150 = distinct !DISubprogram(name: "RM_ReplicateVerbatim", scope: !3, file: !3, line: 1382, type: !1401, isLocal: false, isDefinition: true, scopeLine: 1382, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3151)
!3151 = !{!3152}
!3152 = !DILocalVariable(name: "ctx", arg: 1, scope: !3150, file: !3, line: 1382, type: !584)
!3153 = !DILocation(line: 1382, column: 42, scope: !3150)
!3154 = !DILocation(line: 1383, column: 24, scope: !3150)
!3155 = !DILocation(line: 1383, column: 32, scope: !3150)
!3156 = !DILocation(line: 1383, column: 49, scope: !3150)
!3157 = !DILocation(line: 1383, column: 53, scope: !3150)
!3158 = !DILocation(line: 1384, column: 22, scope: !3150)
!3159 = !DILocation(line: 1384, column: 40, scope: !3150)
!3160 = !DILocation(line: 1383, column: 5, scope: !3150)
!3161 = !DILocation(line: 1386, column: 17, scope: !3150)
!3162 = !DILocation(line: 1387, column: 5, scope: !3150)
!3163 = distinct !DISubprogram(name: "RM_GetClientId", scope: !3, file: !3, line: 1405, type: !3164, isLocal: false, isDefinition: true, scopeLine: 1405, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3166)
!3164 = !DISubroutineType(types: !3165)
!3165 = !{!173, !584}
!3166 = !{!3167}
!3167 = !DILocalVariable(name: "ctx", arg: 1, scope: !3163, file: !3, line: 1405, type: !584)
!3168 = !DILocation(line: 1405, column: 51, scope: !3163)
!3169 = !DILocation(line: 1406, column: 14, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1406, column: 9)
!3171 = !DILocation(line: 1406, column: 21, scope: !3170)
!3172 = !DILocation(line: 1406, column: 9, scope: !3163)
!3173 = !DILocation(line: 1407, column: 25, scope: !3163)
!3174 = !{!1255, !1046, i64 0}
!3175 = !DILocation(line: 1407, column: 5, scope: !3163)
!3176 = !DILocation(line: 0, scope: !3163)
!3177 = !DILocation(line: 1408, column: 1, scope: !3163)
!3178 = distinct !DISubprogram(name: "RM_GetSelectedDb", scope: !3, file: !3, line: 1411, type: !1401, isLocal: false, isDefinition: true, scopeLine: 1411, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3179)
!3179 = !{!3180}
!3180 = !DILocalVariable(name: "ctx", arg: 1, scope: !3178, file: !3, line: 1411, type: !584)
!3181 = !DILocation(line: 1411, column: 38, scope: !3178)
!3182 = !DILocation(line: 1412, column: 17, scope: !3178)
!3183 = !DILocation(line: 1412, column: 25, scope: !3178)
!3184 = !DILocation(line: 1412, column: 29, scope: !3178)
!3185 = !DILocation(line: 1412, column: 5, scope: !3178)
!3186 = distinct !DISubprogram(name: "RM_GetContextFlags", scope: !3, file: !3, line: 1452, type: !1401, isLocal: false, isDefinition: true, scopeLine: 1452, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3187)
!3187 = !{!3188, !3189, !3190, !3192}
!3188 = !DILocalVariable(name: "ctx", arg: 1, scope: !3186, file: !3, line: 1452, type: !584)
!3189 = !DILocalVariable(name: "flags", scope: !3186, file: !3, line: 1454, type: !17)
!3190 = !DILocalVariable(name: "level", scope: !3186, file: !3, line: 1496, type: !3191)
!3191 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!3192 = !DILocalVariable(name: "retval", scope: !3186, file: !3, line: 1497, type: !17)
!3193 = !DILocation(line: 1452, column: 40, scope: !3186)
!3194 = !DILocation(line: 1454, column: 9, scope: !3186)
!3195 = !DILocation(line: 1456, column: 14, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1456, column: 9)
!3197 = !DILocation(line: 1456, column: 9, scope: !3196)
!3198 = !DILocation(line: 1456, column: 9, scope: !3186)
!3199 = !DILocation(line: 1457, column: 26, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 1457, column: 13)
!3201 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 1456, column: 22)
!3202 = !DILocation(line: 1457, column: 13, scope: !3201)
!3203 = !DILocation(line: 1459, column: 13, scope: !3201)
!3204 = !DILocation(line: 1462, column: 13, scope: !3201)
!3205 = !DILocation(line: 0, scope: !3186)
!3206 = !DILocation(line: 1466, column: 16, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1466, column: 9)
!3208 = !{!1045, !895, i64 2924}
!3209 = !DILocation(line: 1466, column: 9, scope: !3207)
!3210 = !DILocation(line: 1467, column: 15, scope: !3207)
!3211 = !DILocation(line: 1466, column: 9, scope: !3186)
!3212 = !DILocation(line: 1469, column: 16, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1469, column: 9)
!3214 = !{!1045, !895, i64 860}
!3215 = !DILocation(line: 1469, column: 9, scope: !3213)
!3216 = !DILocation(line: 1470, column: 15, scope: !3213)
!3217 = !DILocation(line: 1469, column: 9, scope: !3186)
!3218 = !DILocation(line: 1473, column: 16, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1473, column: 9)
!3220 = !{!1045, !1047, i64 2704}
!3221 = !DILocation(line: 1473, column: 26, scope: !3219)
!3222 = !DILocation(line: 1473, column: 9, scope: !3186)
!3223 = !DILocation(line: 1476, column: 20, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1476, column: 13)
!3225 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 1473, column: 31)
!3226 = !{!1045, !895, i64 2712}
!3227 = !DILocation(line: 1476, column: 37, scope: !3224)
!3228 = !DILocation(line: 1476, column: 13, scope: !3225)
!3229 = !DILocation(line: 0, scope: !3213)
!3230 = !DILocation(line: 1481, column: 16, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1481, column: 9)
!3232 = !{!1045, !895, i64 1880}
!3233 = !DILocation(line: 1481, column: 26, scope: !3231)
!3234 = !DILocation(line: 1482, column: 15, scope: !3231)
!3235 = !DILocation(line: 1481, column: 9, scope: !3186)
!3236 = !DILocation(line: 1483, column: 16, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1483, column: 9)
!3238 = !{!1045, !895, i64 2112}
!3239 = !DILocation(line: 1483, column: 30, scope: !3237)
!3240 = !DILocation(line: 1484, column: 15, scope: !3237)
!3241 = !DILocation(line: 1483, column: 9, scope: !3186)
!3242 = !DILocation(line: 1487, column: 16, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1487, column: 9)
!3244 = !{!1045, !892, i64 2464}
!3245 = !DILocation(line: 1487, column: 27, scope: !3243)
!3246 = !DILocation(line: 1487, column: 9, scope: !3186)
!3247 = !DILocation(line: 1488, column: 15, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 1487, column: 36)
!3249 = !DILocation(line: 1489, column: 5, scope: !3248)
!3250 = !DILocation(line: 1491, column: 20, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !3, line: 1491, column: 13)
!3252 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 1489, column: 12)
!3253 = !{!1045, !895, i64 2556}
!3254 = !DILocation(line: 1491, column: 13, scope: !3251)
!3255 = !DILocation(line: 1491, column: 13, scope: !3252)
!3256 = !DILocation(line: 0, scope: !3252)
!3257 = !DILocation(line: 1496, column: 5, scope: !3186)
!3258 = !DILocation(line: 1496, column: 11, scope: !3186)
!3259 = !DILocation(line: 1497, column: 18, scope: !3186)
!3260 = !DILocation(line: 1497, column: 9, scope: !3186)
!3261 = !DILocation(line: 1498, column: 16, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1498, column: 9)
!3263 = !DILocation(line: 1498, column: 32, scope: !3262)
!3264 = !DILocation(line: 1498, column: 9, scope: !3186)
!3265 = !DILocation(line: 1499, column: 9, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1499, column: 9)
!3267 = !{!3268, !3268, i64 0}
!3268 = !{!"float", !893, i64 0}
!3269 = !DILocation(line: 1499, column: 15, scope: !3266)
!3270 = !DILocation(line: 1499, column: 29, scope: !3266)
!3271 = !DILocation(line: 1499, column: 9, scope: !3186)
!3272 = !DILocation(line: 1502, column: 1, scope: !3186)
!3273 = !DILocation(line: 1501, column: 5, scope: !3186)
!3274 = distinct !DISubprogram(name: "RM_SelectDb", scope: !3, file: !3, line: 1514, type: !3275, isLocal: false, isDefinition: true, scopeLine: 1514, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3277)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{!17, !584, !17}
!3277 = !{!3278, !3279, !3280}
!3278 = !DILocalVariable(name: "ctx", arg: 1, scope: !3274, file: !3, line: 1514, type: !584)
!3279 = !DILocalVariable(name: "newid", arg: 2, scope: !3274, file: !3, line: 1514, type: !17)
!3280 = !DILocalVariable(name: "retval", scope: !3274, file: !3, line: 1515, type: !17)
!3281 = !DILocation(line: 1514, column: 33, scope: !3274)
!3282 = !DILocation(line: 1514, column: 42, scope: !3274)
!3283 = !DILocation(line: 1515, column: 32, scope: !3274)
!3284 = !DILocation(line: 1515, column: 18, scope: !3274)
!3285 = !DILocation(line: 1515, column: 9, scope: !3274)
!3286 = !DILocation(line: 1516, column: 20, scope: !3274)
!3287 = !DILocation(line: 1516, column: 12, scope: !3274)
!3288 = !DILocation(line: 1516, column: 5, scope: !3274)
!3289 = distinct !DISubprogram(name: "RM_OpenKey", scope: !3, file: !3, line: 1533, type: !3290, isLocal: false, isDefinition: true, scopeLine: 1533, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3292)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!6, !584, !143, !17}
!3292 = !{!3293, !3294, !3295, !3296, !3297}
!3293 = !DILocalVariable(name: "ctx", arg: 1, scope: !3289, file: !3, line: 1533, type: !584)
!3294 = !DILocalVariable(name: "keyname", arg: 2, scope: !3289, file: !3, line: 1533, type: !143)
!3295 = !DILocalVariable(name: "mode", arg: 3, scope: !3289, file: !3, line: 1533, type: !17)
!3296 = !DILocalVariable(name: "kp", scope: !3289, file: !3, line: 1534, type: !986)
!3297 = !DILocalVariable(name: "value", scope: !3289, file: !3, line: 1535, type: !143)
!3298 = !DILocation(line: 1533, column: 34, scope: !3289)
!3299 = !DILocation(line: 1533, column: 45, scope: !3289)
!3300 = !DILocation(line: 1533, column: 58, scope: !3289)
!3301 = !DILocation(line: 1537, column: 14, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3289, file: !3, line: 1537, column: 9)
!3303 = !DILocation(line: 0, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 1539, column: 12)
!3305 = !DILocation(line: 1537, column: 9, scope: !3289)
!3306 = !DILocation(line: 1538, column: 17, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 1537, column: 35)
!3308 = !DILocation(line: 1535, column: 11, scope: !3289)
!3309 = !DILocation(line: 1539, column: 5, scope: !3307)
!3310 = !DILocation(line: 1540, column: 17, scope: !3304)
!3311 = !DILocation(line: 1541, column: 19, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 1541, column: 13)
!3313 = !DILocation(line: 1541, column: 13, scope: !3304)
!3314 = !DILocation(line: 1547, column: 10, scope: !3289)
!3315 = !DILocation(line: 1534, column: 21, scope: !3289)
!3316 = !DILocation(line: 1548, column: 9, scope: !3289)
!3317 = !DILocation(line: 1548, column: 13, scope: !3289)
!3318 = !DILocation(line: 1549, column: 19, scope: !3289)
!3319 = !DILocation(line: 1549, column: 27, scope: !3289)
!3320 = !DILocation(line: 1549, column: 9, scope: !3289)
!3321 = !DILocation(line: 1549, column: 12, scope: !3289)
!3322 = !DILocation(line: 1550, column: 9, scope: !3289)
!3323 = !DILocation(line: 1550, column: 13, scope: !3289)
!3324 = !DILocation(line: 1551, column: 5, scope: !3289)
!3325 = !DILocation(line: 1552, column: 9, scope: !3289)
!3326 = !DILocation(line: 1552, column: 15, scope: !3289)
!3327 = !DILocation(line: 1553, column: 9, scope: !3289)
!3328 = !DILocation(line: 1553, column: 14, scope: !3289)
!3329 = !{!1026, !892, i64 32}
!3330 = !DILocation(line: 1554, column: 9, scope: !3289)
!3331 = !DILocation(line: 1554, column: 14, scope: !3289)
!3332 = !DILocation(line: 1955, column: 35, scope: !1897, inlinedAt: !3333)
!3333 = distinct !DILocation(line: 1555, column: 5, scope: !3289)
!3334 = !DILocation(line: 1956, column: 10, scope: !1897, inlinedAt: !3333)
!3335 = !DILocation(line: 1956, column: 16, scope: !1897, inlinedAt: !3333)
!3336 = !DILocation(line: 1957, column: 10, scope: !1897, inlinedAt: !3333)
!3337 = !DILocation(line: 1957, column: 19, scope: !1897, inlinedAt: !3333)
!3338 = !DILocation(line: 1958, column: 10, scope: !1897, inlinedAt: !3333)
!3339 = !DILocation(line: 1958, column: 14, scope: !1897, inlinedAt: !3333)
!3340 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !3341)
!3341 = distinct !DILocation(line: 1556, column: 5, scope: !3289)
!3342 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !3341)
!3343 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !3341)
!3344 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !3341)
!3345 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !3341)
!3346 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !3341)
!3347 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !3341)
!3348 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !3341)
!3349 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !3341)
!3350 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !3341)
!3351 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !3341)
!3352 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !3341)
!3353 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !3341)
!3354 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !3341)
!3355 = !DILocation(line: 0, scope: !1724, inlinedAt: !3341)
!3356 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !3341)
!3357 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !3341)
!3358 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !3341)
!3359 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !3341)
!3360 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !3341)
!3361 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !3341)
!3362 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !3341)
!3363 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !3341)
!3364 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !3341)
!3365 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !3341)
!3366 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !3341)
!3367 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !3341)
!3368 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !3341)
!3369 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !3341)
!3370 = !DILocation(line: 0, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 1541, column: 28)
!3372 = !DILocation(line: 1558, column: 1, scope: !3289)
!3373 = !DILocation(line: 1962, column: 39, scope: !1885)
!3374 = !DILocation(line: 1964, column: 14, scope: !1890)
!3375 = !DILocation(line: 1964, column: 20, scope: !1890)
!3376 = !DILocation(line: 1964, column: 9, scope: !1885)
!3377 = !DILocation(line: 1965, column: 31, scope: !1890)
!3378 = !DILocation(line: 1965, column: 9, scope: !1890)
!3379 = !DILocation(line: 1955, column: 35, scope: !1897, inlinedAt: !3380)
!3380 = distinct !DILocation(line: 1969, column: 5, scope: !1885)
!3381 = !DILocation(line: 1956, column: 16, scope: !1897, inlinedAt: !3380)
!3382 = !DILocation(line: 1957, column: 10, scope: !1897, inlinedAt: !3380)
!3383 = !DILocation(line: 1957, column: 19, scope: !1897, inlinedAt: !3380)
!3384 = !DILocation(line: 1958, column: 10, scope: !1897, inlinedAt: !3380)
!3385 = !DILocation(line: 1958, column: 14, scope: !1897, inlinedAt: !3380)
!3386 = !DILocation(line: 1970, column: 1, scope: !1885)
!3387 = distinct !DISubprogram(name: "RM_KeyType", scope: !3, file: !3, line: 1573, type: !1070, isLocal: false, isDefinition: true, scopeLine: 1573, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3388)
!3388 = !{!3389}
!3389 = !DILocalVariable(name: "key", arg: 1, scope: !3387, file: !3, line: 1573, type: !986)
!3390 = !DILocation(line: 1573, column: 32, scope: !3387)
!3391 = !DILocation(line: 1574, column: 13, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 1574, column: 9)
!3393 = !DILocation(line: 1574, column: 21, scope: !3392)
!3394 = !DILocation(line: 1574, column: 29, scope: !3392)
!3395 = !DILocation(line: 1574, column: 35, scope: !3392)
!3396 = !DILocation(line: 1574, column: 9, scope: !3387)
!3397 = !DILocation(line: 1577, column: 24, scope: !3387)
!3398 = !DILocation(line: 1577, column: 5, scope: !3387)
!3399 = !DILocation(line: 1586, column: 1, scope: !3387)
!3400 = distinct !DISubprogram(name: "RM_ValueLength", scope: !3, file: !3, line: 1593, type: !3401, isLocal: false, isDefinition: true, scopeLine: 1593, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3403)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!157, !986}
!3403 = !{!3404}
!3404 = !DILocalVariable(name: "key", arg: 1, scope: !3400, file: !3, line: 1593, type: !986)
!3405 = !DILocation(line: 1593, column: 39, scope: !3400)
!3406 = !DILocation(line: 1594, column: 13, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1594, column: 9)
!3408 = !DILocation(line: 1594, column: 21, scope: !3407)
!3409 = !DILocation(line: 1594, column: 29, scope: !3407)
!3410 = !DILocation(line: 1594, column: 35, scope: !3407)
!3411 = !DILocation(line: 1594, column: 9, scope: !3400)
!3412 = !DILocation(line: 1595, column: 24, scope: !3400)
!3413 = !DILocation(line: 1595, column: 5, scope: !3400)
!3414 = !DILocation(line: 1596, column: 29, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1595, column: 30)
!3416 = !DILocation(line: 1596, column: 22, scope: !3415)
!3417 = !DILocation(line: 1597, column: 27, scope: !3415)
!3418 = !DILocation(line: 1597, column: 20, scope: !3415)
!3419 = !DILocation(line: 1598, column: 26, scope: !3415)
!3420 = !DILocation(line: 1598, column: 19, scope: !3415)
!3421 = !DILocation(line: 1599, column: 27, scope: !3415)
!3422 = !DILocation(line: 1599, column: 20, scope: !3415)
!3423 = !DILocation(line: 1600, column: 27, scope: !3415)
!3424 = !DILocation(line: 1600, column: 20, scope: !3415)
!3425 = !DILocation(line: 0, scope: !3415)
!3426 = !DILocation(line: 1603, column: 1, scope: !3400)
!3427 = distinct !DISubprogram(name: "RM_DeleteKey", scope: !3, file: !3, line: 1609, type: !1070, isLocal: false, isDefinition: true, scopeLine: 1609, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3428)
!3428 = !{!3429}
!3429 = !DILocalVariable(name: "key", arg: 1, scope: !3427, file: !3, line: 1609, type: !986)
!3430 = !DILocation(line: 1609, column: 34, scope: !3427)
!3431 = !DILocation(line: 1610, column: 16, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 1610, column: 9)
!3433 = !DILocation(line: 1610, column: 21, scope: !3432)
!3434 = !DILocation(line: 1610, column: 9, scope: !3427)
!3435 = !DILocation(line: 1611, column: 14, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 1611, column: 9)
!3437 = !DILocation(line: 1611, column: 9, scope: !3436)
!3438 = !DILocation(line: 1611, column: 9, scope: !3427)
!3439 = !DILocation(line: 1612, column: 23, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 1611, column: 21)
!3441 = !DILocation(line: 1612, column: 31, scope: !3440)
!3442 = !DILocation(line: 1612, column: 9, scope: !3440)
!3443 = !DILocation(line: 1613, column: 20, scope: !3440)
!3444 = !DILocation(line: 1614, column: 5, scope: !3440)
!3445 = !DILocation(line: 0, scope: !3432)
!3446 = !DILocation(line: 1616, column: 1, scope: !3427)
!3447 = distinct !DISubprogram(name: "RM_UnlinkKey", scope: !3, file: !3, line: 1623, type: !1070, isLocal: false, isDefinition: true, scopeLine: 1623, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3448)
!3448 = !{!3449}
!3449 = !DILocalVariable(name: "key", arg: 1, scope: !3447, file: !3, line: 1623, type: !986)
!3450 = !DILocation(line: 1623, column: 34, scope: !3447)
!3451 = !DILocation(line: 1624, column: 16, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 1624, column: 9)
!3453 = !DILocation(line: 1624, column: 21, scope: !3452)
!3454 = !DILocation(line: 1624, column: 9, scope: !3447)
!3455 = !DILocation(line: 1625, column: 14, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 1625, column: 9)
!3457 = !DILocation(line: 1625, column: 9, scope: !3456)
!3458 = !DILocation(line: 1625, column: 9, scope: !3447)
!3459 = !DILocation(line: 1626, column: 28, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1625, column: 21)
!3461 = !DILocation(line: 1626, column: 36, scope: !3460)
!3462 = !DILocation(line: 1626, column: 9, scope: !3460)
!3463 = !DILocation(line: 1627, column: 20, scope: !3460)
!3464 = !DILocation(line: 1628, column: 5, scope: !3460)
!3465 = !DILocation(line: 0, scope: !3452)
!3466 = !DILocation(line: 1630, column: 1, scope: !3447)
!3467 = distinct !DISubprogram(name: "RM_GetExpire", scope: !3, file: !3, line: 1635, type: !3468, isLocal: false, isDefinition: true, scopeLine: 1635, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3470)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!229, !986}
!3470 = !{!3471, !3472}
!3471 = !DILocalVariable(name: "key", arg: 1, scope: !3467, file: !3, line: 1635, type: !986)
!3472 = !DILocalVariable(name: "expire", scope: !3467, file: !3, line: 1636, type: !229)
!3473 = !DILocation(line: 1635, column: 39, scope: !3467)
!3474 = !DILocation(line: 1636, column: 38, scope: !3467)
!3475 = !DILocation(line: 1636, column: 46, scope: !3467)
!3476 = !DILocation(line: 1636, column: 23, scope: !3467)
!3477 = !DILocation(line: 1636, column: 14, scope: !3467)
!3478 = !DILocation(line: 1637, column: 16, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 1637, column: 9)
!3480 = !DILocation(line: 1637, column: 22, scope: !3479)
!3481 = !DILocation(line: 1637, column: 30, scope: !3479)
!3482 = !DILocation(line: 1637, column: 36, scope: !3479)
!3483 = !DILocation(line: 1637, column: 9, scope: !3467)
!3484 = !DILocation(line: 1638, column: 15, scope: !3467)
!3485 = !DILocation(line: 1638, column: 12, scope: !3467)
!3486 = !DILocation(line: 1639, column: 12, scope: !3467)
!3487 = !DILocation(line: 1639, column: 5, scope: !3467)
!3488 = !DILocation(line: 0, scope: !3467)
!3489 = !DILocation(line: 1640, column: 1, scope: !3467)
!3490 = distinct !DISubprogram(name: "RM_SetExpire", scope: !3, file: !3, line: 1651, type: !3491, isLocal: false, isDefinition: true, scopeLine: 1651, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3493)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!17, !986, !229}
!3493 = !{!3494, !3495}
!3494 = !DILocalVariable(name: "key", arg: 1, scope: !3490, file: !3, line: 1651, type: !986)
!3495 = !DILocalVariable(name: "expire", arg: 2, scope: !3490, file: !3, line: 1651, type: !229)
!3496 = !DILocation(line: 1651, column: 34, scope: !3490)
!3497 = !DILocation(line: 1651, column: 48, scope: !3490)
!3498 = !DILocation(line: 1652, column: 16, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1652, column: 9)
!3500 = !DILocation(line: 1652, column: 21, scope: !3499)
!3501 = !DILocation(line: 1652, column: 42, scope: !3499)
!3502 = !DILocation(line: 1652, column: 50, scope: !3499)
!3503 = !DILocation(line: 1652, column: 56, scope: !3499)
!3504 = !DILocation(line: 1652, column: 9, scope: !3490)
!3505 = !DILocation(line: 1654, column: 16, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1654, column: 9)
!3507 = !DILocation(line: 1654, column: 9, scope: !3490)
!3508 = !DILocation(line: 1655, column: 19, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 1654, column: 42)
!3510 = !DILocation(line: 1655, column: 16, scope: !3509)
!3511 = !DILocation(line: 1656, column: 24, scope: !3509)
!3512 = !DILocation(line: 1656, column: 29, scope: !3509)
!3513 = !DILocation(line: 1656, column: 41, scope: !3509)
!3514 = !DILocation(line: 1656, column: 49, scope: !3509)
!3515 = !DILocation(line: 1656, column: 9, scope: !3509)
!3516 = !DILocation(line: 1657, column: 5, scope: !3509)
!3517 = !DILocation(line: 1658, column: 27, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 1657, column: 12)
!3519 = !DILocation(line: 1658, column: 35, scope: !3518)
!3520 = !DILocation(line: 1658, column: 9, scope: !3518)
!3521 = !DILocation(line: 0, scope: !3490)
!3522 = !DILocation(line: 1661, column: 1, scope: !3490)
!3523 = distinct !DISubprogram(name: "RM_StringSet", scope: !3, file: !3, line: 1671, type: !3524, isLocal: false, isDefinition: true, scopeLine: 1671, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3526)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!17, !986, !143}
!3526 = !{!3527, !3528}
!3527 = !DILocalVariable(name: "key", arg: 1, scope: !3523, file: !3, line: 1671, type: !986)
!3528 = !DILocalVariable(name: "str", arg: 2, scope: !3523, file: !3, line: 1671, type: !143)
!3529 = !DILocation(line: 1671, column: 34, scope: !3523)
!3530 = !DILocation(line: 1671, column: 58, scope: !3523)
!3531 = !DILocation(line: 1672, column: 16, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 1672, column: 9)
!3533 = !DILocation(line: 1672, column: 21, scope: !3532)
!3534 = !DILocation(line: 1672, column: 42, scope: !3532)
!3535 = !DILocation(line: 1672, column: 50, scope: !3532)
!3536 = !DILocation(line: 1672, column: 45, scope: !3532)
!3537 = !DILocation(line: 1672, column: 9, scope: !3523)
!3538 = !DILocation(line: 1609, column: 34, scope: !3427, inlinedAt: !3539)
!3539 = distinct !DILocation(line: 1673, column: 5, scope: !3523)
!3540 = !DILocation(line: 1611, column: 14, scope: !3436, inlinedAt: !3539)
!3541 = !DILocation(line: 1611, column: 9, scope: !3436, inlinedAt: !3539)
!3542 = !DILocation(line: 0, scope: !3523)
!3543 = !DILocation(line: 1611, column: 9, scope: !3427, inlinedAt: !3539)
!3544 = !DILocation(line: 1674, column: 25, scope: !3523)
!3545 = !DILocation(line: 1612, column: 23, scope: !3440, inlinedAt: !3539)
!3546 = !DILocation(line: 1612, column: 31, scope: !3440, inlinedAt: !3539)
!3547 = !DILocation(line: 1612, column: 9, scope: !3440, inlinedAt: !3539)
!3548 = !DILocation(line: 1613, column: 20, scope: !3440, inlinedAt: !3539)
!3549 = !DILocation(line: 1614, column: 5, scope: !3440, inlinedAt: !3539)
!3550 = !DILocation(line: 1674, column: 17, scope: !3523)
!3551 = !DILocation(line: 1674, column: 5, scope: !3523)
!3552 = !DILocation(line: 1675, column: 16, scope: !3523)
!3553 = !DILocation(line: 1676, column: 5, scope: !3523)
!3554 = !DILocation(line: 1677, column: 1, scope: !3523)
!3555 = distinct !DISubprogram(name: "RM_StringDMA", scope: !3, file: !3, line: 1708, type: !3556, isLocal: false, isDefinition: true, scopeLine: 1708, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3558)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!9, !986, !2310, !17}
!3558 = !{!3559, !3560, !3561, !3562}
!3559 = !DILocalVariable(name: "key", arg: 1, scope: !3555, file: !3, line: 1708, type: !986)
!3560 = !DILocalVariable(name: "len", arg: 2, scope: !3555, file: !3, line: 1708, type: !2310)
!3561 = !DILocalVariable(name: "mode", arg: 3, scope: !3555, file: !3, line: 1708, type: !17)
!3562 = !DILocalVariable(name: "emptystring", scope: !3555, file: !3, line: 1713, type: !9)
!3563 = !DILocation(line: 1708, column: 36, scope: !3555)
!3564 = !DILocation(line: 1708, column: 49, scope: !3555)
!3565 = !DILocation(line: 1708, column: 58, scope: !3555)
!3566 = !DILocation(line: 1714, column: 14, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 1714, column: 9)
!3568 = !DILocation(line: 1714, column: 20, scope: !3567)
!3569 = !DILocation(line: 1714, column: 9, scope: !3555)
!3570 = !DILocation(line: 1719, column: 21, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 1719, column: 9)
!3572 = !DILocation(line: 1719, column: 26, scope: !3571)
!3573 = !DILocation(line: 1719, column: 9, scope: !3555)
!3574 = !DILocation(line: 1723, column: 15, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 1723, column: 9)
!3576 = !DILocation(line: 1723, column: 51, scope: !3575)
!3577 = !DILocation(line: 1723, column: 36, scope: !3575)
!3578 = !DILocation(line: 1724, column: 48, scope: !3575)
!3579 = !DILocation(line: 1724, column: 57, scope: !3575)
!3580 = !DILocation(line: 1724, column: 22, scope: !3575)
!3581 = !DILocation(line: 1724, column: 20, scope: !3575)
!3582 = !DILocation(line: 1724, column: 9, scope: !3575)
!3583 = !DILocation(line: 1726, column: 24, scope: !3555)
!3584 = !DILocation(line: 1726, column: 31, scope: !3555)
!3585 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !3586)
!3586 = distinct !DILocation(line: 1726, column: 12, scope: !3555)
!3587 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !3586)
!3588 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !3586)
!3589 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !3586)
!3590 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !3586)
!3591 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !3586)
!3592 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !3586)
!3593 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !3586)
!3594 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !3586)
!3595 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !3586)
!3596 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !3586)
!3597 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !3586)
!3598 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !3586)
!3599 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !3586)
!3600 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !3586)
!3601 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !3586)
!3602 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !3586)
!3603 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !3586)
!3604 = !DILocation(line: 0, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3567, file: !3, line: 1714, column: 29)
!3606 = !DILocation(line: 1728, column: 1, scope: !3555)
!3607 = !DILocation(line: 0, scope: !3555)
!3608 = distinct !DISubprogram(name: "RM_StringTruncate", scope: !3, file: !3, line: 1742, type: !3609, isLocal: false, isDefinition: true, scopeLine: 1742, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3611)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!17, !986, !157}
!3611 = !{!3612, !3613, !3614, !3617}
!3612 = !DILocalVariable(name: "key", arg: 1, scope: !3608, file: !3, line: 1742, type: !986)
!3613 = !DILocalVariable(name: "newlen", arg: 2, scope: !3608, file: !3, line: 1742, type: !157)
!3614 = !DILocalVariable(name: "o", scope: !3615, file: !3, line: 1753, type: !143)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 1751, column: 29)
!3616 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 1751, column: 9)
!3617 = !DILocalVariable(name: "curlen", scope: !3618, file: !3, line: 1760, type: !157)
!3618 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 1757, column: 12)
!3619 = !DILocation(line: 1742, column: 39, scope: !3608)
!3620 = !DILocation(line: 1742, column: 51, scope: !3608)
!3621 = !DILocation(line: 1743, column: 16, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 1743, column: 9)
!3623 = !DILocation(line: 1743, column: 21, scope: !3622)
!3624 = !DILocation(line: 1743, column: 9, scope: !3608)
!3625 = !DILocation(line: 1744, column: 14, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 1744, column: 9)
!3627 = !DILocation(line: 1744, column: 9, scope: !3626)
!3628 = !DILocation(line: 1744, column: 20, scope: !3626)
!3629 = !DILocation(line: 1744, column: 35, scope: !3626)
!3630 = !DILocation(line: 1744, column: 40, scope: !3626)
!3631 = !DILocation(line: 1745, column: 16, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 1745, column: 9)
!3633 = !DILocation(line: 1744, column: 9, scope: !3608)
!3634 = !DILocation(line: 1745, column: 9, scope: !3608)
!3635 = !DILocation(line: 1749, column: 38, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 1749, column: 9)
!3637 = !DILocation(line: 1749, column: 28, scope: !3636)
!3638 = !DILocation(line: 1753, column: 43, scope: !3615)
!3639 = !DILocation(line: 1753, column: 19, scope: !3615)
!3640 = !DILocation(line: 1753, column: 15, scope: !3615)
!3641 = !DILocation(line: 1754, column: 21, scope: !3615)
!3642 = !DILocation(line: 1754, column: 29, scope: !3615)
!3643 = !DILocation(line: 1754, column: 9, scope: !3615)
!3644 = !DILocation(line: 1755, column: 20, scope: !3615)
!3645 = !DILocation(line: 1756, column: 9, scope: !3615)
!3646 = !DILocation(line: 1757, column: 5, scope: !3615)
!3647 = !DILocation(line: 1759, column: 48, scope: !3618)
!3648 = !DILocation(line: 1759, column: 57, scope: !3618)
!3649 = !DILocation(line: 1759, column: 22, scope: !3618)
!3650 = !DILocation(line: 1759, column: 20, scope: !3618)
!3651 = !DILocation(line: 1760, column: 44, scope: !3618)
!3652 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !3653)
!3653 = distinct !DILocation(line: 1760, column: 25, scope: !3618)
!3654 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !3653)
!3655 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !3653)
!3656 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !3653)
!3657 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !3653)
!3658 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !3653)
!3659 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !3653)
!3660 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !3653)
!3661 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !3653)
!3662 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !3653)
!3663 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !3653)
!3664 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !3653)
!3665 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !3653)
!3666 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !3653)
!3667 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !3653)
!3668 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !3653)
!3669 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !3653)
!3670 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !3653)
!3671 = !DILocation(line: 0, scope: !2343, inlinedAt: !3653)
!3672 = !DILocation(line: 1760, column: 16, scope: !3618)
!3673 = !DILocation(line: 1761, column: 20, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 1761, column: 13)
!3675 = !DILocation(line: 1761, column: 13, scope: !3618)
!3676 = !DILocation(line: 1762, column: 31, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3674, file: !3, line: 1761, column: 30)
!3678 = !DILocation(line: 1762, column: 18, scope: !3677)
!3679 = !DILocation(line: 1762, column: 25, scope: !3677)
!3680 = !DILocation(line: 1762, column: 29, scope: !3677)
!3681 = !DILocation(line: 1763, column: 9, scope: !3677)
!3682 = !DILocation(line: 1763, column: 27, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3674, file: !3, line: 1763, column: 20)
!3684 = !DILocation(line: 1763, column: 20, scope: !3674)
!3685 = !DILocation(line: 1764, column: 46, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 1763, column: 37)
!3687 = !DILocation(line: 1764, column: 13, scope: !3686)
!3688 = !DILocation(line: 1766, column: 29, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 1766, column: 17)
!3690 = !DILocation(line: 1766, column: 36, scope: !3689)
!3691 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !3692)
!3692 = distinct !DILocation(line: 1766, column: 17, scope: !3689)
!3693 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !3692)
!3694 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !3692)
!3695 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !3692)
!3696 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !3692)
!3697 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !3692)
!3698 = !DILocalVariable(name: "s", arg: 1, scope: !3699, file: !155, line: 104, type: !2334)
!3699 = distinct !DISubprogram(name: "sdsavail", scope: !155, file: !155, line: 104, type: !2332, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3700)
!3700 = !{!3698, !3701, !3702, !3705, !3707, !3709}
!3701 = !DILocalVariable(name: "flags", scope: !3699, file: !155, line: 105, type: !347)
!3702 = !DILocalVariable(name: "sh", scope: !3703, file: !155, line: 111, type: !699)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !155, line: 110, column: 26)
!3704 = distinct !DILexicalBlock(scope: !3699, file: !155, line: 106, column: 33)
!3705 = !DILocalVariable(name: "sh", scope: !3706, file: !155, line: 115, type: !708)
!3706 = distinct !DILexicalBlock(scope: !3704, file: !155, line: 114, column: 27)
!3707 = !DILocalVariable(name: "sh", scope: !3708, file: !155, line: 119, type: !717)
!3708 = distinct !DILexicalBlock(scope: !3704, file: !155, line: 118, column: 27)
!3709 = !DILocalVariable(name: "sh", scope: !3710, file: !155, line: 123, type: !724)
!3710 = distinct !DILexicalBlock(scope: !3704, file: !155, line: 122, column: 27)
!3711 = !DILocation(line: 104, column: 41, scope: !3699, inlinedAt: !3712)
!3712 = distinct !DILocation(line: 1766, column: 43, scope: !3689)
!3713 = !DILocation(line: 105, column: 19, scope: !3699, inlinedAt: !3712)
!3714 = !DILocation(line: 111, column: 13, scope: !3703, inlinedAt: !3712)
!3715 = !DILocation(line: 112, column: 24, scope: !3703, inlinedAt: !3712)
!3716 = !DILocation(line: 112, column: 20, scope: !3703, inlinedAt: !3712)
!3717 = !DILocation(line: 112, column: 30, scope: !3703, inlinedAt: !3712)
!3718 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !3692)
!3719 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !3692)
!3720 = !DILocation(line: 115, column: 13, scope: !3706, inlinedAt: !3712)
!3721 = !DILocation(line: 116, column: 24, scope: !3706, inlinedAt: !3712)
!3722 = !DILocation(line: 116, column: 20, scope: !3706, inlinedAt: !3712)
!3723 = !DILocation(line: 116, column: 30, scope: !3706, inlinedAt: !3712)
!3724 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !3692)
!3725 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !3692)
!3726 = !DILocation(line: 119, column: 13, scope: !3708, inlinedAt: !3712)
!3727 = !DILocation(line: 120, column: 24, scope: !3708, inlinedAt: !3712)
!3728 = !DILocation(line: 120, column: 30, scope: !3708, inlinedAt: !3712)
!3729 = !DILocation(line: 120, column: 20, scope: !3708, inlinedAt: !3712)
!3730 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !3692)
!3731 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !3692)
!3732 = !DILocation(line: 123, column: 13, scope: !3710, inlinedAt: !3712)
!3733 = !DILocation(line: 124, column: 24, scope: !3710, inlinedAt: !3712)
!3734 = !DILocation(line: 124, column: 30, scope: !3710, inlinedAt: !3712)
!3735 = !DILocation(line: 0, scope: !3736, inlinedAt: !3712)
!3736 = distinct !DILexicalBlock(scope: !3704, file: !155, line: 107, column: 26)
!3737 = !DILocation(line: 1766, column: 41, scope: !3689)
!3738 = !DILocation(line: 1766, column: 17, scope: !3686)
!3739 = !DILocation(line: 1767, column: 35, scope: !3689)
!3740 = !DILocation(line: 1767, column: 22, scope: !3689)
!3741 = !DILocation(line: 1767, column: 29, scope: !3689)
!3742 = !DILocation(line: 1767, column: 33, scope: !3689)
!3743 = !DILocation(line: 1767, column: 17, scope: !3689)
!3744 = !DILocation(line: 0, scope: !3622)
!3745 = !DILocation(line: 1771, column: 1, scope: !3608)
!3746 = distinct !DISubprogram(name: "RM_ListPush", scope: !3, file: !3, line: 1781, type: !3747, isLocal: false, isDefinition: true, scopeLine: 1781, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3749)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!17, !986, !17, !143}
!3749 = !{!3750, !3751, !3752}
!3750 = !DILocalVariable(name: "key", arg: 1, scope: !3746, file: !3, line: 1781, type: !986)
!3751 = !DILocalVariable(name: "where", arg: 2, scope: !3746, file: !3, line: 1781, type: !17)
!3752 = !DILocalVariable(name: "ele", arg: 3, scope: !3746, file: !3, line: 1781, type: !143)
!3753 = !DILocation(line: 1781, column: 33, scope: !3746)
!3754 = !DILocation(line: 1781, column: 42, scope: !3746)
!3755 = !DILocation(line: 1781, column: 68, scope: !3746)
!3756 = !DILocation(line: 1782, column: 16, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 1782, column: 9)
!3758 = !DILocation(line: 1782, column: 21, scope: !3757)
!3759 = !DILocation(line: 1782, column: 9, scope: !3746)
!3760 = !DILocation(line: 1783, column: 14, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 1783, column: 9)
!3762 = !DILocation(line: 1783, column: 9, scope: !3761)
!3763 = !DILocation(line: 1783, column: 20, scope: !3761)
!3764 = !DILocation(line: 1783, column: 35, scope: !3761)
!3765 = !DILocation(line: 1783, column: 40, scope: !3761)
!3766 = !DILocation(line: 1783, column: 9, scope: !3746)
!3767 = !DILocation(line: 419, column: 42, scope: !983, inlinedAt: !3768)
!3768 = distinct !DILocation(line: 1784, column: 29, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 1784, column: 9)
!3770 = !DILocation(line: 419, column: 51, scope: !983, inlinedAt: !3768)
!3771 = !DILocation(line: 428, column: 15, scope: !1038, inlinedAt: !3768)
!3772 = !DILocation(line: 420, column: 11, scope: !983, inlinedAt: !3768)
!3773 = !DILocation(line: 429, column: 34, scope: !1038, inlinedAt: !3768)
!3774 = !DILocation(line: 429, column: 46, scope: !1038, inlinedAt: !3768)
!3775 = !DILocation(line: 430, column: 36, scope: !1038, inlinedAt: !3768)
!3776 = !DILocation(line: 429, column: 9, scope: !1038, inlinedAt: !3768)
!3777 = !DILocation(line: 440, column: 16, scope: !983, inlinedAt: !3768)
!3778 = !DILocation(line: 440, column: 24, scope: !983, inlinedAt: !3768)
!3779 = !DILocation(line: 440, column: 5, scope: !983, inlinedAt: !3768)
!3780 = !DILocation(line: 441, column: 16, scope: !983, inlinedAt: !3768)
!3781 = !DILocation(line: 1784, column: 29, scope: !3769)
!3782 = !DILocation(line: 1785, column: 23, scope: !3746)
!3783 = !DILocation(line: 1786, column: 16, scope: !3746)
!3784 = !DILocation(line: 1786, column: 9, scope: !3746)
!3785 = !DILocation(line: 1785, column: 5, scope: !3746)
!3786 = !DILocation(line: 1787, column: 5, scope: !3746)
!3787 = !DILocation(line: 0, scope: !3757)
!3788 = !DILocation(line: 1788, column: 1, scope: !3746)
!3789 = distinct !DISubprogram(name: "RM_ListPop", scope: !3, file: !3, line: 1797, type: !3790, isLocal: false, isDefinition: true, scopeLine: 1797, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3792)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!143, !986, !17}
!3792 = !{!3793, !3794, !3795, !3796}
!3793 = !DILocalVariable(name: "key", arg: 1, scope: !3789, file: !3, line: 1797, type: !986)
!3794 = !DILocalVariable(name: "where", arg: 2, scope: !3789, file: !3, line: 1797, type: !17)
!3795 = !DILocalVariable(name: "ele", scope: !3789, file: !3, line: 1801, type: !143)
!3796 = !DILocalVariable(name: "decoded", scope: !3789, file: !3, line: 1803, type: !143)
!3797 = !DILocation(line: 1797, column: 47, scope: !3789)
!3798 = !DILocation(line: 1797, column: 56, scope: !3789)
!3799 = !DILocation(line: 1798, column: 16, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 1798, column: 9)
!3801 = !DILocation(line: 1798, column: 21, scope: !3800)
!3802 = !DILocation(line: 1798, column: 42, scope: !3800)
!3803 = !DILocation(line: 1799, column: 14, scope: !3800)
!3804 = !DILocation(line: 1799, column: 20, scope: !3800)
!3805 = !DILocation(line: 1799, column: 28, scope: !3800)
!3806 = !DILocation(line: 1800, column: 21, scope: !3800)
!3807 = !DILocation(line: 1800, column: 26, scope: !3800)
!3808 = !DILocation(line: 1798, column: 9, scope: !3789)
!3809 = !DILocation(line: 1802, column: 16, scope: !3789)
!3810 = !DILocation(line: 1802, column: 9, scope: !3789)
!3811 = !DILocation(line: 1801, column: 17, scope: !3789)
!3812 = !DILocation(line: 1801, column: 11, scope: !3789)
!3813 = !DILocation(line: 1803, column: 21, scope: !3789)
!3814 = !DILocation(line: 1803, column: 11, scope: !3789)
!3815 = !DILocation(line: 1804, column: 5, scope: !3789)
!3816 = !DILocation(line: 1805, column: 5, scope: !3789)
!3817 = !DILocation(line: 1806, column: 24, scope: !3789)
!3818 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !3819)
!3819 = distinct !DILocation(line: 1806, column: 5, scope: !3789)
!3820 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !3819)
!3821 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !3819)
!3822 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !3819)
!3823 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !3819)
!3824 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !3819)
!3825 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !3819)
!3826 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !3819)
!3827 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !3819)
!3828 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !3819)
!3829 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !3819)
!3830 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !3819)
!3831 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !3819)
!3832 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !3819)
!3833 = !DILocation(line: 0, scope: !1724, inlinedAt: !3819)
!3834 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !3819)
!3835 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !3819)
!3836 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !3819)
!3837 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !3819)
!3838 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !3819)
!3839 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !3819)
!3840 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !3819)
!3841 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !3819)
!3842 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !3819)
!3843 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !3819)
!3844 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !3819)
!3845 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !3819)
!3846 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !3819)
!3847 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !3819)
!3848 = !DILocation(line: 0, scope: !3789)
!3849 = !DILocation(line: 1808, column: 1, scope: !3789)
!3850 = distinct !DISubprogram(name: "RM_ZsetAddFlagsToCoreFlags", scope: !3, file: !3, line: 1816, type: !3851, isLocal: false, isDefinition: true, scopeLine: 1816, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3853)
!3851 = !DISubroutineType(types: !3852)
!3852 = !{!17, !17}
!3853 = !{!3854, !3855}
!3854 = !DILocalVariable(name: "flags", arg: 1, scope: !3850, file: !3, line: 1816, type: !17)
!3855 = !DILocalVariable(name: "retflags", scope: !3850, file: !3, line: 1817, type: !17)
!3856 = !DILocation(line: 1816, column: 36, scope: !3850)
!3857 = !DILocation(line: 1817, column: 9, scope: !3850)
!3858 = !DILocation(line: 1818, column: 9, scope: !3850)
!3859 = !DILocation(line: 1819, column: 15, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 1819, column: 9)
!3861 = !DILocation(line: 1819, column: 9, scope: !3850)
!3862 = !DILocation(line: 1820, column: 5, scope: !3850)
!3863 = distinct !DISubprogram(name: "RM_ZsetAddFlagsFromCoreFlags", scope: !3, file: !3, line: 1824, type: !3851, isLocal: false, isDefinition: true, scopeLine: 1824, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3864)
!3864 = !{!3865, !3866}
!3865 = !DILocalVariable(name: "flags", arg: 1, scope: !3863, file: !3, line: 1824, type: !17)
!3866 = !DILocalVariable(name: "retflags", scope: !3863, file: !3, line: 1825, type: !17)
!3867 = !DILocation(line: 1824, column: 38, scope: !3863)
!3868 = !DILocation(line: 1825, column: 9, scope: !3863)
!3869 = !DILocation(line: 1826, column: 9, scope: !3863)
!3870 = !DILocation(line: 1827, column: 9, scope: !3863)
!3871 = !DILocation(line: 1828, column: 9, scope: !3863)
!3872 = !DILocation(line: 1829, column: 5, scope: !3863)
!3873 = distinct !DISubprogram(name: "RM_ZsetAdd", scope: !3, file: !3, line: 1860, type: !3874, isLocal: false, isDefinition: true, scopeLine: 1860, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3876)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{!17, !986, !96, !143, !16}
!3876 = !{!3877, !3878, !3879, !3880, !3881}
!3877 = !DILocalVariable(name: "key", arg: 1, scope: !3873, file: !3, line: 1860, type: !986)
!3878 = !DILocalVariable(name: "score", arg: 2, scope: !3873, file: !3, line: 1860, type: !96)
!3879 = !DILocalVariable(name: "ele", arg: 3, scope: !3873, file: !3, line: 1860, type: !143)
!3880 = !DILocalVariable(name: "flagsptr", arg: 4, scope: !3873, file: !3, line: 1860, type: !16)
!3881 = !DILocalVariable(name: "flags", scope: !3873, file: !3, line: 1861, type: !17)
!3882 = !DILocation(line: 1860, column: 32, scope: !3873)
!3883 = !DILocation(line: 1860, column: 44, scope: !3873)
!3884 = !DILocation(line: 1860, column: 70, scope: !3873)
!3885 = !DILocation(line: 1860, column: 80, scope: !3873)
!3886 = !DILocation(line: 1861, column: 5, scope: !3873)
!3887 = !DILocation(line: 1861, column: 9, scope: !3873)
!3888 = !DILocation(line: 1862, column: 16, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 1862, column: 9)
!3890 = !DILocation(line: 1862, column: 21, scope: !3889)
!3891 = !DILocation(line: 1862, column: 9, scope: !3873)
!3892 = !DILocation(line: 1863, column: 14, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 1863, column: 9)
!3894 = !DILocation(line: 1863, column: 9, scope: !3893)
!3895 = !DILocation(line: 1863, column: 20, scope: !3893)
!3896 = !DILocation(line: 1863, column: 35, scope: !3893)
!3897 = !DILocation(line: 1863, column: 40, scope: !3893)
!3898 = !DILocation(line: 1863, column: 9, scope: !3873)
!3899 = !DILocation(line: 419, column: 42, scope: !983, inlinedAt: !3900)
!3900 = distinct !DILocation(line: 1864, column: 29, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 1864, column: 9)
!3902 = !DILocation(line: 419, column: 51, scope: !983, inlinedAt: !3900)
!3903 = !DILocation(line: 433, column: 15, scope: !1038, inlinedAt: !3900)
!3904 = !DILocation(line: 420, column: 11, scope: !983, inlinedAt: !3900)
!3905 = !DILocation(line: 440, column: 16, scope: !983, inlinedAt: !3900)
!3906 = !DILocation(line: 440, column: 24, scope: !983, inlinedAt: !3900)
!3907 = !DILocation(line: 440, column: 5, scope: !983, inlinedAt: !3900)
!3908 = !DILocation(line: 441, column: 16, scope: !983, inlinedAt: !3900)
!3909 = !DILocation(line: 1864, column: 29, scope: !3901)
!3910 = !DILocation(line: 1865, column: 9, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 1865, column: 9)
!3912 = !DILocation(line: 1865, column: 9, scope: !3873)
!3913 = !DILocation(line: 1865, column: 54, scope: !3911)
!3914 = !DILocation(line: 1816, column: 36, scope: !3850, inlinedAt: !3915)
!3915 = distinct !DILocation(line: 1865, column: 27, scope: !3911)
!3916 = !DILocation(line: 1817, column: 9, scope: !3850, inlinedAt: !3915)
!3917 = !DILocation(line: 1818, column: 9, scope: !3850, inlinedAt: !3915)
!3918 = !DILocation(line: 1819, column: 15, scope: !3860, inlinedAt: !3915)
!3919 = !DILocation(line: 1819, column: 9, scope: !3850, inlinedAt: !3915)
!3920 = !DILocation(line: 1865, column: 25, scope: !3911)
!3921 = !DILocation(line: 1865, column: 19, scope: !3911)
!3922 = !DILocation(line: 1866, column: 39, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 1866, column: 9)
!3924 = !DILocation(line: 1866, column: 9, scope: !3923)
!3925 = !DILocation(line: 1866, column: 56, scope: !3923)
!3926 = !DILocation(line: 1866, column: 9, scope: !3873)
!3927 = !DILocation(line: 1867, column: 13, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 1866, column: 62)
!3929 = !DILocation(line: 1867, column: 33, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1867, column: 13)
!3931 = !DILocation(line: 1867, column: 23, scope: !3930)
!3932 = !DILocation(line: 1870, column: 9, scope: !3873)
!3933 = !DILocation(line: 1870, column: 60, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 1870, column: 9)
!3935 = !DILocation(line: 1824, column: 38, scope: !3863, inlinedAt: !3936)
!3936 = distinct !DILocation(line: 1870, column: 31, scope: !3934)
!3937 = !DILocation(line: 1825, column: 9, scope: !3863, inlinedAt: !3936)
!3938 = !DILocation(line: 1826, column: 9, scope: !3863, inlinedAt: !3936)
!3939 = !DILocation(line: 1827, column: 9, scope: !3863, inlinedAt: !3936)
!3940 = !DILocation(line: 1828, column: 9, scope: !3863, inlinedAt: !3936)
!3941 = !DILocation(line: 1870, column: 29, scope: !3934)
!3942 = !DILocation(line: 1870, column: 19, scope: !3934)
!3943 = !DILocation(line: 0, scope: !3889)
!3944 = !DILocation(line: 1872, column: 1, scope: !3873)
!3945 = distinct !DISubprogram(name: "RM_ZsetIncrby", scope: !3, file: !3, line: 1887, type: !3946, isLocal: false, isDefinition: true, scopeLine: 1887, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3948)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{!17, !986, !96, !143, !16, !2399}
!3948 = !{!3949, !3950, !3951, !3952, !3953, !3954}
!3949 = !DILocalVariable(name: "key", arg: 1, scope: !3945, file: !3, line: 1887, type: !986)
!3950 = !DILocalVariable(name: "score", arg: 2, scope: !3945, file: !3, line: 1887, type: !96)
!3951 = !DILocalVariable(name: "ele", arg: 3, scope: !3945, file: !3, line: 1887, type: !143)
!3952 = !DILocalVariable(name: "flagsptr", arg: 4, scope: !3945, file: !3, line: 1887, type: !16)
!3953 = !DILocalVariable(name: "newscore", arg: 5, scope: !3945, file: !3, line: 1887, type: !2399)
!3954 = !DILocalVariable(name: "flags", scope: !3945, file: !3, line: 1888, type: !17)
!3955 = !DILocation(line: 1887, column: 35, scope: !3945)
!3956 = !DILocation(line: 1887, column: 47, scope: !3945)
!3957 = !DILocation(line: 1887, column: 73, scope: !3945)
!3958 = !DILocation(line: 1887, column: 83, scope: !3945)
!3959 = !DILocation(line: 1887, column: 101, scope: !3945)
!3960 = !DILocation(line: 1888, column: 5, scope: !3945)
!3961 = !DILocation(line: 1888, column: 9, scope: !3945)
!3962 = !DILocation(line: 1889, column: 16, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 1889, column: 9)
!3964 = !DILocation(line: 1889, column: 21, scope: !3963)
!3965 = !DILocation(line: 1889, column: 9, scope: !3945)
!3966 = !DILocation(line: 1890, column: 14, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 1890, column: 9)
!3968 = !DILocation(line: 1890, column: 9, scope: !3967)
!3969 = !DILocation(line: 1890, column: 20, scope: !3967)
!3970 = !DILocation(line: 1890, column: 35, scope: !3967)
!3971 = !DILocation(line: 1890, column: 40, scope: !3967)
!3972 = !DILocation(line: 1890, column: 9, scope: !3945)
!3973 = !DILocation(line: 419, column: 42, scope: !983, inlinedAt: !3974)
!3974 = distinct !DILocation(line: 1891, column: 29, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 1891, column: 9)
!3976 = !DILocation(line: 419, column: 51, scope: !983, inlinedAt: !3974)
!3977 = !DILocation(line: 433, column: 15, scope: !1038, inlinedAt: !3974)
!3978 = !DILocation(line: 420, column: 11, scope: !983, inlinedAt: !3974)
!3979 = !DILocation(line: 440, column: 16, scope: !983, inlinedAt: !3974)
!3980 = !DILocation(line: 440, column: 24, scope: !983, inlinedAt: !3974)
!3981 = !DILocation(line: 440, column: 5, scope: !983, inlinedAt: !3974)
!3982 = !DILocation(line: 441, column: 16, scope: !983, inlinedAt: !3974)
!3983 = !DILocation(line: 1891, column: 29, scope: !3975)
!3984 = !DILocation(line: 1892, column: 9, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 1892, column: 9)
!3986 = !DILocation(line: 1892, column: 9, scope: !3945)
!3987 = !DILocation(line: 1892, column: 54, scope: !3985)
!3988 = !DILocation(line: 1816, column: 36, scope: !3850, inlinedAt: !3989)
!3989 = distinct !DILocation(line: 1892, column: 27, scope: !3985)
!3990 = !DILocation(line: 1817, column: 9, scope: !3850, inlinedAt: !3989)
!3991 = !DILocation(line: 1818, column: 9, scope: !3850, inlinedAt: !3989)
!3992 = !DILocation(line: 1819, column: 15, scope: !3860, inlinedAt: !3989)
!3993 = !DILocation(line: 1819, column: 9, scope: !3850, inlinedAt: !3989)
!3994 = !DILocation(line: 1892, column: 25, scope: !3985)
!3995 = !DILocation(line: 1892, column: 19, scope: !3985)
!3996 = !DILocation(line: 1893, column: 11, scope: !3945)
!3997 = !DILocation(line: 1894, column: 39, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 1894, column: 9)
!3999 = !DILocation(line: 1894, column: 9, scope: !3998)
!4000 = !DILocation(line: 1894, column: 60, scope: !3998)
!4001 = !DILocation(line: 1894, column: 9, scope: !3945)
!4002 = !DILocation(line: 1895, column: 13, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 1894, column: 66)
!4004 = !DILocation(line: 1895, column: 33, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 1895, column: 13)
!4006 = !DILocation(line: 1895, column: 23, scope: !4005)
!4007 = !DILocation(line: 1899, column: 18, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 1899, column: 9)
!4009 = !DILocation(line: 1899, column: 22, scope: !4008)
!4010 = !DILocation(line: 1899, column: 32, scope: !4008)
!4011 = !DILocation(line: 1899, column: 9, scope: !3945)
!4012 = !DILocation(line: 1900, column: 19, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 1899, column: 45)
!4014 = !DILocation(line: 1901, column: 9, scope: !4013)
!4015 = !DILocation(line: 1903, column: 60, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 1903, column: 9)
!4017 = !DILocation(line: 1824, column: 38, scope: !3863, inlinedAt: !4018)
!4018 = distinct !DILocation(line: 1903, column: 31, scope: !4016)
!4019 = !DILocation(line: 1825, column: 9, scope: !3863, inlinedAt: !4018)
!4020 = !DILocation(line: 1826, column: 9, scope: !3863, inlinedAt: !4018)
!4021 = !DILocation(line: 1827, column: 9, scope: !3863, inlinedAt: !4018)
!4022 = !DILocation(line: 1828, column: 9, scope: !3863, inlinedAt: !4018)
!4023 = !DILocation(line: 1903, column: 29, scope: !4016)
!4024 = !DILocation(line: 1903, column: 19, scope: !4016)
!4025 = !DILocation(line: 0, scope: !3963)
!4026 = !DILocation(line: 1905, column: 1, scope: !3945)
!4027 = distinct !DISubprogram(name: "RM_ZsetRem", scope: !3, file: !3, line: 1925, type: !4028, isLocal: false, isDefinition: true, scopeLine: 1925, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4030)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{!17, !986, !143, !16}
!4030 = !{!4031, !4032, !4033}
!4031 = !DILocalVariable(name: "key", arg: 1, scope: !4027, file: !3, line: 1925, type: !986)
!4032 = !DILocalVariable(name: "ele", arg: 2, scope: !4027, file: !3, line: 1925, type: !143)
!4033 = !DILocalVariable(name: "deleted", arg: 3, scope: !4027, file: !3, line: 1925, type: !16)
!4034 = !DILocation(line: 1925, column: 32, scope: !4027)
!4035 = !DILocation(line: 1925, column: 56, scope: !4027)
!4036 = !DILocation(line: 1925, column: 66, scope: !4027)
!4037 = !DILocation(line: 1926, column: 16, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 1926, column: 9)
!4039 = !DILocation(line: 1926, column: 21, scope: !4038)
!4040 = !DILocation(line: 1926, column: 9, scope: !4027)
!4041 = !DILocation(line: 1927, column: 14, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 1927, column: 9)
!4043 = !DILocation(line: 1927, column: 9, scope: !4042)
!4044 = !DILocation(line: 1927, column: 20, scope: !4042)
!4045 = !DILocation(line: 1927, column: 35, scope: !4042)
!4046 = !DILocation(line: 1927, column: 40, scope: !4042)
!4047 = !DILocation(line: 1927, column: 9, scope: !4027)
!4048 = !DILocation(line: 1928, column: 55, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 1928, column: 9)
!4050 = !DILocation(line: 1928, column: 31, scope: !4049)
!4051 = !DILocation(line: 1928, column: 9, scope: !4027)
!4052 = !DILocation(line: 1929, column: 13, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1929, column: 13)
!4054 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1928, column: 61)
!4055 = !DILocation(line: 1929, column: 13, scope: !4054)
!4056 = !DILocation(line: 1929, column: 31, scope: !4053)
!4057 = !DILocation(line: 1929, column: 22, scope: !4053)
!4058 = !DILocation(line: 1931, column: 13, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 1931, column: 13)
!4060 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1930, column: 12)
!4061 = !DILocation(line: 1931, column: 13, scope: !4060)
!4062 = !DILocation(line: 1931, column: 31, scope: !4059)
!4063 = !DILocation(line: 1931, column: 22, scope: !4059)
!4064 = !DILocation(line: 0, scope: !4038)
!4065 = !DILocation(line: 1934, column: 1, scope: !4027)
!4066 = distinct !DISubprogram(name: "RM_ZsetScore", scope: !3, file: !3, line: 1944, type: !4067, isLocal: false, isDefinition: true, scopeLine: 1944, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4069)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!17, !986, !143, !2399}
!4069 = !{!4070, !4071, !4072}
!4070 = !DILocalVariable(name: "key", arg: 1, scope: !4066, file: !3, line: 1944, type: !986)
!4071 = !DILocalVariable(name: "ele", arg: 2, scope: !4066, file: !3, line: 1944, type: !143)
!4072 = !DILocalVariable(name: "score", arg: 3, scope: !4066, file: !3, line: 1944, type: !2399)
!4073 = !DILocation(line: 1944, column: 34, scope: !4066)
!4074 = !DILocation(line: 1944, column: 58, scope: !4066)
!4075 = !DILocation(line: 1944, column: 71, scope: !4066)
!4076 = !DILocation(line: 1945, column: 14, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1945, column: 9)
!4078 = !DILocation(line: 1945, column: 20, scope: !4077)
!4079 = !DILocation(line: 1945, column: 9, scope: !4066)
!4080 = !DILocation(line: 1946, column: 21, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1946, column: 9)
!4082 = !DILocation(line: 1946, column: 26, scope: !4081)
!4083 = !DILocation(line: 1946, column: 9, scope: !4066)
!4084 = !DILocation(line: 1947, column: 35, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1947, column: 9)
!4086 = !DILocation(line: 1947, column: 9, scope: !4085)
!4087 = !DILocation(line: 1947, column: 46, scope: !4085)
!4088 = !DILocation(line: 1947, column: 56, scope: !4085)
!4089 = !DILocation(line: 0, scope: !4066)
!4090 = !DILocation(line: 1949, column: 1, scope: !4066)
!4091 = distinct !DISubprogram(name: "RM_ZsetRangeEndReached", scope: !3, file: !3, line: 1973, type: !1070, isLocal: false, isDefinition: true, scopeLine: 1973, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4092)
!4092 = !{!4093}
!4093 = !DILocalVariable(name: "key", arg: 1, scope: !4091, file: !3, line: 1973, type: !986)
!4094 = !DILocation(line: 1973, column: 44, scope: !4091)
!4095 = !DILocation(line: 1974, column: 17, scope: !4091)
!4096 = !DILocation(line: 1974, column: 5, scope: !4091)
!4097 = distinct !DISubprogram(name: "zsetInitScoreRange", scope: !3, file: !3, line: 1983, type: !4098, isLocal: false, isDefinition: true, scopeLine: 1983, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4100)
!4098 = !DISubroutineType(types: !4099)
!4099 = !{!17, !986, !96, !96, !17, !17, !17}
!4100 = !{!4101, !4102, !4103, !4104, !4105, !4106, !4107, !4109, !4139}
!4101 = !DILocalVariable(name: "key", arg: 1, scope: !4097, file: !3, line: 1983, type: !986)
!4102 = !DILocalVariable(name: "min", arg: 2, scope: !4097, file: !3, line: 1983, type: !96)
!4103 = !DILocalVariable(name: "max", arg: 3, scope: !4097, file: !3, line: 1983, type: !96)
!4104 = !DILocalVariable(name: "minex", arg: 4, scope: !4097, file: !3, line: 1983, type: !17)
!4105 = !DILocalVariable(name: "maxex", arg: 5, scope: !4097, file: !3, line: 1983, type: !17)
!4106 = !DILocalVariable(name: "first", arg: 6, scope: !4097, file: !3, line: 1983, type: !17)
!4107 = !DILocalVariable(name: "zrs", scope: !4097, file: !3, line: 1992, type: !4108)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!4109 = !DILocalVariable(name: "zs", scope: !4110, file: !3, line: 2002, type: !4113)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 2001, column: 63)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 2001, column: 16)
!4112 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 1998, column: 9)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_typedef, name: "zset", file: !13, line: 829, baseType: !4115)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zset", file: !13, line: 826, size: 128, elements: !4116)
!4116 = !{!4117, !4118}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !4115, file: !13, line: 827, baseType: !43, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "zsl", scope: !4115, file: !13, line: 828, baseType: !4119, size: 64, offset: 64)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplist", file: !13, line: 824, baseType: !4121)
!4121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplist", file: !13, line: 820, size: 256, elements: !4122)
!4122 = !{!4123, !4136, !4137, !4138}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4121, file: !13, line: 821, baseType: !4124, size: 64)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplistNode", file: !13, line: 810, size: 192, elements: !4126)
!4126 = !{!4127, !4128, !4129, !4130}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "ele", scope: !4125, file: !13, line: 811, baseType: !154, size: 64)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "score", scope: !4125, file: !13, line: 812, baseType: !96, size: 64, offset: 64)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "backward", scope: !4125, file: !13, line: 813, baseType: !4124, size: 64, offset: 128)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4125, file: !13, line: 817, baseType: !4131, offset: 192)
!4131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4132, elements: !624)
!4132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplistLevel", file: !13, line: 814, size: 128, elements: !4133)
!4133 = !{!4134, !4135}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !4132, file: !13, line: 815, baseType: !4124, size: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !4132, file: !13, line: 816, baseType: !7, size: 64, offset: 64)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4121, file: !13, line: 821, baseType: !4124, size: 64, offset: 64)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4121, file: !13, line: 822, baseType: !7, size: 64, offset: 128)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4121, file: !13, line: 823, baseType: !17, size: 32, offset: 192)
!4139 = !DILocalVariable(name: "zsl", scope: !4110, file: !3, line: 2003, type: !4119)
!4140 = !DILocation(line: 1983, column: 40, scope: !4097)
!4141 = !DILocation(line: 1983, column: 52, scope: !4097)
!4142 = !DILocation(line: 1983, column: 64, scope: !4097)
!4143 = !DILocation(line: 1983, column: 73, scope: !4097)
!4144 = !DILocation(line: 1983, column: 84, scope: !4097)
!4145 = !DILocation(line: 1983, column: 95, scope: !4097)
!4146 = !DILocation(line: 1984, column: 15, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 1984, column: 9)
!4148 = !DILocation(line: 1984, column: 10, scope: !4147)
!4149 = !DILocation(line: 1984, column: 21, scope: !4147)
!4150 = !DILocation(line: 1984, column: 36, scope: !4147)
!4151 = !DILocation(line: 1984, column: 41, scope: !4147)
!4152 = !DILocation(line: 1984, column: 9, scope: !4097)
!4153 = !DILocation(line: 1962, column: 39, scope: !1885, inlinedAt: !4154)
!4154 = distinct !DILocation(line: 1986, column: 5, scope: !4097)
!4155 = !DILocation(line: 1964, column: 14, scope: !1890, inlinedAt: !4154)
!4156 = !DILocation(line: 1964, column: 20, scope: !1890, inlinedAt: !4154)
!4157 = !DILocation(line: 1964, column: 9, scope: !1885, inlinedAt: !4154)
!4158 = !DILocation(line: 1965, column: 31, scope: !1890, inlinedAt: !4154)
!4159 = !DILocation(line: 1965, column: 9, scope: !1890, inlinedAt: !4154)
!4160 = !DILocation(line: 1998, column: 14, scope: !4112)
!4161 = !DILocation(line: 1998, column: 21, scope: !4112)
!4162 = !DILocation(line: 1955, column: 35, scope: !1897, inlinedAt: !4163)
!4163 = distinct !DILocation(line: 1969, column: 5, scope: !1885, inlinedAt: !4154)
!4164 = !DILocation(line: 1957, column: 10, scope: !1897, inlinedAt: !4163)
!4165 = !DILocation(line: 1957, column: 19, scope: !1897, inlinedAt: !4163)
!4166 = !DILocation(line: 1958, column: 10, scope: !1897, inlinedAt: !4163)
!4167 = !DILocation(line: 1987, column: 16, scope: !4097)
!4168 = !DILocation(line: 1988, column: 14, scope: !4097)
!4169 = !DILocation(line: 1992, column: 29, scope: !4097)
!4170 = !DILocation(line: 1992, column: 17, scope: !4097)
!4171 = !DILocation(line: 1993, column: 10, scope: !4097)
!4172 = !DILocation(line: 1993, column: 14, scope: !4097)
!4173 = !{!1027, !1028, i64 0}
!4174 = !DILocation(line: 1994, column: 10, scope: !4097)
!4175 = !DILocation(line: 1994, column: 14, scope: !4097)
!4176 = !{!1027, !1028, i64 8}
!4177 = !DILocation(line: 1995, column: 10, scope: !4097)
!4178 = !DILocation(line: 1995, column: 16, scope: !4097)
!4179 = !{!1027, !895, i64 16}
!4180 = !DILocation(line: 1996, column: 10, scope: !4097)
!4181 = !DILocation(line: 1996, column: 16, scope: !4097)
!4182 = !{!1027, !895, i64 20}
!4183 = !DILocation(line: 1998, column: 9, scope: !4097)
!4184 = !DILocation(line: 1999, column: 25, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 1998, column: 55)
!4186 = !DILocation(line: 0, scope: !4185)
!4187 = !DILocation(line: 1999, column: 33, scope: !4185)
!4188 = !DILocation(line: 2000, column: 33, scope: !4185)
!4189 = !DILocation(line: 1999, column: 23, scope: !4185)
!4190 = !DILocation(line: 2001, column: 5, scope: !4185)
!4191 = !DILocation(line: 2002, column: 32, scope: !4110)
!4192 = !DILocation(line: 2002, column: 15, scope: !4110)
!4193 = !DILocation(line: 2003, column: 30, scope: !4110)
!4194 = !{!4195, !892, i64 8}
!4195 = !{!"zset", !892, i64 0, !892, i64 8}
!4196 = !DILocation(line: 2003, column: 20, scope: !4110)
!4197 = !DILocation(line: 2004, column: 25, scope: !4110)
!4198 = !DILocation(line: 2004, column: 33, scope: !4110)
!4199 = !DILocation(line: 2005, column: 33, scope: !4110)
!4200 = !DILocation(line: 2004, column: 23, scope: !4110)
!4201 = !DILocation(line: 2007, column: 9, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 2006, column: 12)
!4203 = !DILocation(line: 2009, column: 14, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2009, column: 9)
!4205 = !DILocation(line: 2009, column: 23, scope: !4204)
!4206 = !DILocation(line: 2009, column: 9, scope: !4097)
!4207 = !DILocation(line: 2009, column: 41, scope: !4204)
!4208 = !DILocation(line: 2009, column: 32, scope: !4204)
!4209 = !DILocation(line: 0, scope: !4097)
!4210 = !DILocation(line: 2011, column: 1, scope: !4097)
!4211 = distinct !DISubprogram(name: "RM_ZsetFirstInScoreRange", scope: !3, file: !3, line: 2028, type: !4212, isLocal: false, isDefinition: true, scopeLine: 2028, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4214)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{!17, !986, !96, !96, !17, !17}
!4214 = !{!4215, !4216, !4217, !4218, !4219}
!4215 = !DILocalVariable(name: "key", arg: 1, scope: !4211, file: !3, line: 2028, type: !986)
!4216 = !DILocalVariable(name: "min", arg: 2, scope: !4211, file: !3, line: 2028, type: !96)
!4217 = !DILocalVariable(name: "max", arg: 3, scope: !4211, file: !3, line: 2028, type: !96)
!4218 = !DILocalVariable(name: "minex", arg: 4, scope: !4211, file: !3, line: 2028, type: !17)
!4219 = !DILocalVariable(name: "maxex", arg: 5, scope: !4211, file: !3, line: 2028, type: !17)
!4220 = !DILocation(line: 2028, column: 46, scope: !4211)
!4221 = !DILocation(line: 2028, column: 58, scope: !4211)
!4222 = !DILocation(line: 2028, column: 70, scope: !4211)
!4223 = !DILocation(line: 2028, column: 79, scope: !4211)
!4224 = !DILocation(line: 2028, column: 90, scope: !4211)
!4225 = !DILocation(line: 2029, column: 12, scope: !4211)
!4226 = !DILocation(line: 2029, column: 5, scope: !4211)
!4227 = distinct !DISubprogram(name: "RM_ZsetLastInScoreRange", scope: !3, file: !3, line: 2034, type: !4212, isLocal: false, isDefinition: true, scopeLine: 2034, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4228)
!4228 = !{!4229, !4230, !4231, !4232, !4233}
!4229 = !DILocalVariable(name: "key", arg: 1, scope: !4227, file: !3, line: 2034, type: !986)
!4230 = !DILocalVariable(name: "min", arg: 2, scope: !4227, file: !3, line: 2034, type: !96)
!4231 = !DILocalVariable(name: "max", arg: 3, scope: !4227, file: !3, line: 2034, type: !96)
!4232 = !DILocalVariable(name: "minex", arg: 4, scope: !4227, file: !3, line: 2034, type: !17)
!4233 = !DILocalVariable(name: "maxex", arg: 5, scope: !4227, file: !3, line: 2034, type: !17)
!4234 = !DILocation(line: 2034, column: 45, scope: !4227)
!4235 = !DILocation(line: 2034, column: 57, scope: !4227)
!4236 = !DILocation(line: 2034, column: 69, scope: !4227)
!4237 = !DILocation(line: 2034, column: 78, scope: !4227)
!4238 = !DILocation(line: 2034, column: 89, scope: !4227)
!4239 = !DILocation(line: 2035, column: 12, scope: !4227)
!4240 = !DILocation(line: 2035, column: 5, scope: !4227)
!4241 = distinct !DISubprogram(name: "zsetInitLexRange", scope: !3, file: !3, line: 2047, type: !4242, isLocal: false, isDefinition: true, scopeLine: 2047, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4244)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!17, !986, !143, !143, !17}
!4244 = !{!4245, !4246, !4247, !4248, !4249, !4251, !4255}
!4245 = !DILocalVariable(name: "key", arg: 1, scope: !4241, file: !3, line: 2047, type: !986)
!4246 = !DILocalVariable(name: "min", arg: 2, scope: !4241, file: !3, line: 2047, type: !143)
!4247 = !DILocalVariable(name: "max", arg: 3, scope: !4241, file: !3, line: 2047, type: !143)
!4248 = !DILocalVariable(name: "first", arg: 4, scope: !4241, file: !3, line: 2047, type: !17)
!4249 = !DILocalVariable(name: "zlrs", scope: !4241, file: !3, line: 2055, type: !4250)
!4250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!4251 = !DILocalVariable(name: "zs", scope: !4252, file: !3, line: 2066, type: !4113)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 2065, column: 63)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 2065, column: 16)
!4254 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 2062, column: 9)
!4255 = !DILocalVariable(name: "zsl", scope: !4252, file: !3, line: 2067, type: !4119)
!4256 = !DILocation(line: 2047, column: 38, scope: !4241)
!4257 = !DILocation(line: 2047, column: 62, scope: !4241)
!4258 = !DILocation(line: 2047, column: 86, scope: !4241)
!4259 = !DILocation(line: 2047, column: 95, scope: !4241)
!4260 = !DILocation(line: 2048, column: 15, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 2048, column: 9)
!4262 = !DILocation(line: 2048, column: 10, scope: !4261)
!4263 = !DILocation(line: 2048, column: 21, scope: !4261)
!4264 = !DILocation(line: 2048, column: 36, scope: !4261)
!4265 = !DILocation(line: 2048, column: 41, scope: !4261)
!4266 = !DILocation(line: 2048, column: 9, scope: !4241)
!4267 = !DILocation(line: 1962, column: 39, scope: !1885, inlinedAt: !4268)
!4268 = distinct !DILocation(line: 2050, column: 5, scope: !4241)
!4269 = !DILocation(line: 1964, column: 14, scope: !1890, inlinedAt: !4268)
!4270 = !DILocation(line: 1964, column: 20, scope: !1890, inlinedAt: !4268)
!4271 = !DILocation(line: 0, scope: !4241)
!4272 = !DILocation(line: 1964, column: 9, scope: !1885, inlinedAt: !4268)
!4273 = !DILocation(line: 1965, column: 9, scope: !1890, inlinedAt: !4268)
!4274 = !DILocation(line: 1955, column: 35, scope: !1897, inlinedAt: !4275)
!4275 = distinct !DILocation(line: 1969, column: 5, scope: !1885, inlinedAt: !4268)
!4276 = !DILocation(line: 1956, column: 16, scope: !1897, inlinedAt: !4275)
!4277 = !DILocation(line: 1957, column: 10, scope: !1897, inlinedAt: !4275)
!4278 = !DILocation(line: 1957, column: 19, scope: !1897, inlinedAt: !4275)
!4279 = !DILocation(line: 1958, column: 10, scope: !1897, inlinedAt: !4275)
!4280 = !DILocation(line: 2051, column: 14, scope: !4241)
!4281 = !DILocation(line: 2055, column: 20, scope: !4241)
!4282 = !DILocation(line: 2056, column: 9, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 2056, column: 9)
!4284 = !DILocation(line: 2056, column: 42, scope: !4283)
!4285 = !DILocation(line: 2056, column: 9, scope: !4241)
!4286 = !DILocation(line: 2060, column: 16, scope: !4241)
!4287 = !DILocation(line: 2062, column: 14, scope: !4254)
!4288 = !DILocation(line: 2062, column: 21, scope: !4254)
!4289 = !DILocation(line: 2062, column: 9, scope: !4241)
!4290 = !DILocation(line: 2063, column: 25, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 2062, column: 55)
!4292 = !DILocation(line: 0, scope: !4291)
!4293 = !DILocation(line: 2063, column: 33, scope: !4291)
!4294 = !DILocation(line: 2064, column: 33, scope: !4291)
!4295 = !DILocation(line: 2063, column: 23, scope: !4291)
!4296 = !DILocation(line: 2065, column: 5, scope: !4291)
!4297 = !DILocation(line: 2066, column: 32, scope: !4252)
!4298 = !DILocation(line: 2066, column: 15, scope: !4252)
!4299 = !DILocation(line: 2067, column: 30, scope: !4252)
!4300 = !DILocation(line: 2067, column: 20, scope: !4252)
!4301 = !DILocation(line: 2068, column: 25, scope: !4252)
!4302 = !DILocation(line: 2068, column: 33, scope: !4252)
!4303 = !DILocation(line: 2069, column: 33, scope: !4252)
!4304 = !DILocation(line: 2068, column: 23, scope: !4252)
!4305 = !DILocation(line: 2071, column: 9, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 2070, column: 12)
!4307 = !DILocation(line: 2073, column: 14, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 2073, column: 9)
!4309 = !DILocation(line: 2073, column: 23, scope: !4308)
!4310 = !DILocation(line: 2073, column: 9, scope: !4241)
!4311 = !DILocation(line: 2073, column: 41, scope: !4308)
!4312 = !DILocation(line: 2073, column: 32, scope: !4308)
!4313 = !DILocation(line: 0, scope: !4283)
!4314 = !DILocation(line: 2076, column: 1, scope: !4241)
!4315 = distinct !DISubprogram(name: "RM_ZsetFirstInLexRange", scope: !3, file: !3, line: 2090, type: !4316, isLocal: false, isDefinition: true, scopeLine: 2090, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4318)
!4316 = !DISubroutineType(types: !4317)
!4317 = !{!17, !986, !143, !143}
!4318 = !{!4319, !4320, !4321}
!4319 = !DILocalVariable(name: "key", arg: 1, scope: !4315, file: !3, line: 2090, type: !986)
!4320 = !DILocalVariable(name: "min", arg: 2, scope: !4315, file: !3, line: 2090, type: !143)
!4321 = !DILocalVariable(name: "max", arg: 3, scope: !4315, file: !3, line: 2090, type: !143)
!4322 = !DILocation(line: 2090, column: 44, scope: !4315)
!4323 = !DILocation(line: 2090, column: 68, scope: !4315)
!4324 = !DILocation(line: 2090, column: 92, scope: !4315)
!4325 = !DILocation(line: 2091, column: 12, scope: !4315)
!4326 = !DILocation(line: 2091, column: 5, scope: !4315)
!4327 = distinct !DISubprogram(name: "RM_ZsetLastInLexRange", scope: !3, file: !3, line: 2096, type: !4316, isLocal: false, isDefinition: true, scopeLine: 2096, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4328)
!4328 = !{!4329, !4330, !4331}
!4329 = !DILocalVariable(name: "key", arg: 1, scope: !4327, file: !3, line: 2096, type: !986)
!4330 = !DILocalVariable(name: "min", arg: 2, scope: !4327, file: !3, line: 2096, type: !143)
!4331 = !DILocalVariable(name: "max", arg: 3, scope: !4327, file: !3, line: 2096, type: !143)
!4332 = !DILocation(line: 2096, column: 43, scope: !4327)
!4333 = !DILocation(line: 2096, column: 67, scope: !4327)
!4334 = !DILocation(line: 2096, column: 91, scope: !4327)
!4335 = !DILocation(line: 2097, column: 12, scope: !4327)
!4336 = !DILocation(line: 2097, column: 5, scope: !4327)
!4337 = distinct !DISubprogram(name: "RM_ZsetRangeCurrentElement", scope: !3, file: !3, line: 2103, type: !4338, isLocal: false, isDefinition: true, scopeLine: 2103, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4340)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{!143, !986, !2399}
!4340 = !{!4341, !4342, !4343, !4344, !4347, !4348, !4349}
!4341 = !DILocalVariable(name: "key", arg: 1, scope: !4337, file: !3, line: 2103, type: !986)
!4342 = !DILocalVariable(name: "score", arg: 2, scope: !4337, file: !3, line: 2103, type: !2399)
!4343 = !DILocalVariable(name: "str", scope: !4337, file: !3, line: 2104, type: !143)
!4344 = !DILocalVariable(name: "eptr", scope: !4345, file: !3, line: 2108, type: !346)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 2107, column: 55)
!4346 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 2107, column: 9)
!4347 = !DILocalVariable(name: "sptr", scope: !4345, file: !3, line: 2108, type: !346)
!4348 = !DILocalVariable(name: "ele", scope: !4345, file: !3, line: 2110, type: !154)
!4349 = !DILocalVariable(name: "ln", scope: !4350, file: !3, line: 2117, type: !4352)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 2116, column: 63)
!4351 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 2116, column: 16)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplistNode", file: !13, line: 818, baseType: !4125)
!4354 = !DILocation(line: 2103, column: 63, scope: !4337)
!4355 = !DILocation(line: 2103, column: 76, scope: !4337)
!4356 = !DILocation(line: 2106, column: 14, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 2106, column: 9)
!4358 = !DILocation(line: 2106, column: 23, scope: !4357)
!4359 = !DILocation(line: 2106, column: 9, scope: !4337)
!4360 = !DILocation(line: 2107, column: 14, scope: !4346)
!4361 = !DILocation(line: 2107, column: 21, scope: !4346)
!4362 = !DILocation(line: 2107, column: 9, scope: !4337)
!4363 = !DILocation(line: 2108, column: 24, scope: !4345)
!4364 = !DILocation(line: 2110, column: 19, scope: !4345)
!4365 = !DILocation(line: 2110, column: 13, scope: !4345)
!4366 = !DILocation(line: 2111, column: 13, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 2111, column: 13)
!4368 = !DILocation(line: 2111, column: 13, scope: !4345)
!4369 = !DILocation(line: 2112, column: 37, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 2111, column: 20)
!4371 = !DILocation(line: 2112, column: 44, scope: !4370)
!4372 = !DILocation(line: 2112, column: 20, scope: !4370)
!4373 = !DILocation(line: 2108, column: 31, scope: !4345)
!4374 = !DILocation(line: 2113, column: 22, scope: !4370)
!4375 = !DILocation(line: 2113, column: 20, scope: !4370)
!4376 = !{!1028, !1028, i64 0}
!4377 = !DILocation(line: 2114, column: 9, scope: !4370)
!4378 = !DILocation(line: 2115, column: 15, scope: !4345)
!4379 = !DILocation(line: 2104, column: 24, scope: !4337)
!4380 = !DILocation(line: 2116, column: 5, scope: !4345)
!4381 = !DILocation(line: 2118, column: 13, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 2118, column: 13)
!4383 = !DILocation(line: 2118, column: 13, scope: !4350)
!4384 = !DILocation(line: 2117, column: 24, scope: !4350)
!4385 = !DILocation(line: 2118, column: 33, scope: !4382)
!4386 = !DILocation(line: 2118, column: 27, scope: !4382)
!4387 = !DILocation(line: 2118, column: 20, scope: !4382)
!4388 = !DILocation(line: 2119, column: 38, scope: !4350)
!4389 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !4390)
!4390 = distinct !DILocation(line: 2119, column: 42, scope: !4350)
!4391 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !4390)
!4392 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !4390)
!4393 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !4390)
!4394 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !4390)
!4395 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !4390)
!4396 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !4390)
!4397 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !4390)
!4398 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !4390)
!4399 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !4390)
!4400 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !4390)
!4401 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !4390)
!4402 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !4390)
!4403 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !4390)
!4404 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !4390)
!4405 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !4390)
!4406 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !4390)
!4407 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !4390)
!4408 = !DILocation(line: 0, scope: !2343, inlinedAt: !4390)
!4409 = !DILocation(line: 2119, column: 15, scope: !4350)
!4410 = !DILocation(line: 2121, column: 9, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 2120, column: 12)
!4412 = !DILocation(line: 0, scope: !4350)
!4413 = !DILocation(line: 2123, column: 24, scope: !4337)
!4414 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !4415)
!4415 = distinct !DILocation(line: 2123, column: 5, scope: !4337)
!4416 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !4415)
!4417 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !4415)
!4418 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !4415)
!4419 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !4415)
!4420 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !4415)
!4421 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !4415)
!4422 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !4415)
!4423 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !4415)
!4424 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !4415)
!4425 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !4415)
!4426 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !4415)
!4427 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !4415)
!4428 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !4415)
!4429 = !DILocation(line: 0, scope: !1724, inlinedAt: !4415)
!4430 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !4415)
!4431 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !4415)
!4432 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !4415)
!4433 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !4415)
!4434 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !4415)
!4435 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !4415)
!4436 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !4415)
!4437 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !4415)
!4438 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !4415)
!4439 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !4415)
!4440 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !4415)
!4441 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !4415)
!4442 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !4415)
!4443 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !4415)
!4444 = !DILocation(line: 0, scope: !4337)
!4445 = !DILocation(line: 2125, column: 1, scope: !4337)
!4446 = distinct !DISubprogram(name: "RM_ZsetRangeNext", scope: !3, file: !3, line: 2130, type: !1070, isLocal: false, isDefinition: true, scopeLine: 2130, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4447)
!4447 = !{!4448, !4449, !4452, !4453, !4454, !4459, !4460, !4463}
!4448 = !DILocalVariable(name: "key", arg: 1, scope: !4446, file: !3, line: 2130, type: !986)
!4449 = !DILocalVariable(name: "zl", scope: !4450, file: !3, line: 2134, type: !346)
!4450 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 2133, column: 55)
!4451 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 2133, column: 9)
!4452 = !DILocalVariable(name: "eptr", scope: !4450, file: !3, line: 2135, type: !346)
!4453 = !DILocalVariable(name: "next", scope: !4450, file: !3, line: 2136, type: !346)
!4454 = !DILocalVariable(name: "saved_next", scope: !4455, file: !3, line: 2147, type: !346)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 2144, column: 61)
!4456 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 2144, column: 17)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 2142, column: 16)
!4458 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 2139, column: 13)
!4459 = !DILocalVariable(name: "score", scope: !4455, file: !3, line: 2149, type: !96)
!4460 = !DILocalVariable(name: "ln", scope: !4461, file: !3, line: 2165, type: !4352)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 2164, column: 63)
!4462 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 2164, column: 16)
!4463 = !DILocalVariable(name: "next", scope: !4461, file: !3, line: 2165, type: !4352)
!4464 = !DILocation(line: 2130, column: 38, scope: !4446)
!4465 = !DILocation(line: 2131, column: 15, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 2131, column: 9)
!4467 = !DILocation(line: 2131, column: 10, scope: !4466)
!4468 = !DILocation(line: 2131, column: 21, scope: !4466)
!4469 = !DILocation(line: 2131, column: 30, scope: !4466)
!4470 = !DILocation(line: 2131, column: 25, scope: !4466)
!4471 = !DILocation(line: 2131, column: 9, scope: !4446)
!4472 = !DILocation(line: 2133, column: 14, scope: !4451)
!4473 = !DILocation(line: 2133, column: 21, scope: !4451)
!4474 = !DILocation(line: 2133, column: 9, scope: !4446)
!4475 = !DILocation(line: 2134, column: 41, scope: !4450)
!4476 = !DILocation(line: 2134, column: 24, scope: !4450)
!4477 = !DILocation(line: 2135, column: 24, scope: !4450)
!4478 = !DILocation(line: 2137, column: 16, scope: !4450)
!4479 = !DILocation(line: 2136, column: 24, scope: !4450)
!4480 = !DILocation(line: 2138, column: 13, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 2138, column: 13)
!4482 = !DILocation(line: 2138, column: 13, scope: !4450)
!4483 = !DILocation(line: 2138, column: 26, scope: !4481)
!4484 = !DILocation(line: 2139, column: 18, scope: !4458)
!4485 = !DILocation(line: 2139, column: 13, scope: !4450)
!4486 = !DILocation(line: 2140, column: 18, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 2139, column: 27)
!4488 = !DILocation(line: 2140, column: 22, scope: !4487)
!4489 = !DILocation(line: 2141, column: 13, scope: !4487)
!4490 = !DILocation(line: 2144, column: 22, scope: !4456)
!4491 = !DILocation(line: 2144, column: 17, scope: !4457)
!4492 = !DILocation(line: 2147, column: 32, scope: !4455)
!4493 = !DILocation(line: 2148, column: 24, scope: !4455)
!4494 = !DILocation(line: 2149, column: 32, scope: !4455)
!4495 = !DILocation(line: 2149, column: 24, scope: !4455)
!4496 = !DILocation(line: 2150, column: 49, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 2150, column: 21)
!4498 = !DILocation(line: 2150, column: 22, scope: !4497)
!4499 = !DILocation(line: 2150, column: 21, scope: !4455)
!4500 = !DILocation(line: 2151, column: 26, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 2150, column: 55)
!4502 = !DILocation(line: 2151, column: 30, scope: !4501)
!4503 = !DILocation(line: 2156, column: 51, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !3, line: 2156, column: 21)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 2155, column: 66)
!4506 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 2155, column: 24)
!4507 = !DILocation(line: 2156, column: 22, scope: !4504)
!4508 = !DILocation(line: 2156, column: 21, scope: !4505)
!4509 = !DILocation(line: 2157, column: 26, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 2156, column: 58)
!4511 = !DILocation(line: 2157, column: 30, scope: !4510)
!4512 = !DILocation(line: 2158, column: 21, scope: !4510)
!4513 = !DILocation(line: 2161, column: 27, scope: !4457)
!4514 = !DILocation(line: 2162, column: 13, scope: !4457)
!4515 = !DILocation(line: 2165, column: 24, scope: !4461)
!4516 = !DILocation(line: 2165, column: 56, scope: !4461)
!4517 = !DILocation(line: 2165, column: 65, scope: !4461)
!4518 = !{!4519, !892, i64 0}
!4519 = !{!"zskiplistLevel", !892, i64 0, !1046, i64 8}
!4520 = !DILocation(line: 2165, column: 45, scope: !4461)
!4521 = !DILocation(line: 2166, column: 18, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 2166, column: 13)
!4523 = !DILocation(line: 2166, column: 13, scope: !4461)
!4524 = !DILocation(line: 2167, column: 18, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 2166, column: 27)
!4526 = !DILocation(line: 2167, column: 22, scope: !4525)
!4527 = !DILocation(line: 2168, column: 13, scope: !4525)
!4528 = !DILocation(line: 2171, column: 28, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 2171, column: 17)
!4530 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 2169, column: 16)
!4531 = !DILocation(line: 2171, column: 60, scope: !4529)
!4532 = !DILocation(line: 2172, column: 39, scope: !4529)
!4533 = !DILocation(line: 2172, column: 51, scope: !4529)
!4534 = !DILocation(line: 2172, column: 18, scope: !4529)
!4535 = !DILocation(line: 2171, column: 17, scope: !4530)
!4536 = !DILocation(line: 2176, column: 29, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 2176, column: 24)
!4538 = !DILocation(line: 2174, column: 22, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 2173, column: 13)
!4540 = !DILocation(line: 2174, column: 26, scope: !4539)
!4541 = !DILocation(line: 2175, column: 17, scope: !4539)
!4542 = !DILocation(line: 2176, column: 35, scope: !4537)
!4543 = !DILocation(line: 2176, column: 24, scope: !4529)
!4544 = !DILocation(line: 2177, column: 46, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 2177, column: 21)
!4546 = distinct !DILexicalBlock(scope: !4537, file: !3, line: 2176, column: 66)
!4547 = !DILocation(line: 2177, column: 56, scope: !4545)
!4548 = !DILocation(line: 2177, column: 22, scope: !4545)
!4549 = !DILocation(line: 2177, column: 21, scope: !4546)
!4550 = !DILocation(line: 2178, column: 26, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 2177, column: 63)
!4552 = !DILocation(line: 2178, column: 30, scope: !4551)
!4553 = !DILocation(line: 2179, column: 21, scope: !4551)
!4554 = !DILocation(line: 2182, column: 27, scope: !4530)
!4555 = !DILocation(line: 2183, column: 13, scope: !4530)
!4556 = !DILocation(line: 2186, column: 9, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 2185, column: 12)
!4558 = !DILocation(line: 0, scope: !4466)
!4559 = !DILocation(line: 2188, column: 1, scope: !4446)
!4560 = distinct !DISubprogram(name: "RM_ZsetRangePrev", scope: !3, file: !3, line: 2193, type: !1070, isLocal: false, isDefinition: true, scopeLine: 2193, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4561)
!4561 = !{!4562, !4563, !4566, !4567, !4568, !4573, !4574, !4577}
!4562 = !DILocalVariable(name: "key", arg: 1, scope: !4560, file: !3, line: 2193, type: !986)
!4563 = !DILocalVariable(name: "zl", scope: !4564, file: !3, line: 2197, type: !346)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !3, line: 2196, column: 55)
!4565 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 2196, column: 9)
!4566 = !DILocalVariable(name: "eptr", scope: !4564, file: !3, line: 2198, type: !346)
!4567 = !DILocalVariable(name: "prev", scope: !4564, file: !3, line: 2199, type: !346)
!4568 = !DILocalVariable(name: "saved_prev", scope: !4569, file: !3, line: 2210, type: !346)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 2207, column: 61)
!4570 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 2207, column: 17)
!4571 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 2205, column: 16)
!4572 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 2202, column: 13)
!4573 = !DILocalVariable(name: "score", scope: !4569, file: !3, line: 2212, type: !96)
!4574 = !DILocalVariable(name: "ln", scope: !4575, file: !3, line: 2228, type: !4352)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2227, column: 63)
!4576 = distinct !DILexicalBlock(scope: !4565, file: !3, line: 2227, column: 16)
!4577 = !DILocalVariable(name: "prev", scope: !4575, file: !3, line: 2228, type: !4352)
!4578 = !DILocation(line: 2193, column: 38, scope: !4560)
!4579 = !DILocation(line: 2194, column: 15, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 2194, column: 9)
!4581 = !DILocation(line: 2194, column: 10, scope: !4580)
!4582 = !DILocation(line: 2194, column: 21, scope: !4580)
!4583 = !DILocation(line: 2194, column: 30, scope: !4580)
!4584 = !DILocation(line: 2194, column: 25, scope: !4580)
!4585 = !DILocation(line: 2194, column: 9, scope: !4560)
!4586 = !DILocation(line: 2196, column: 14, scope: !4565)
!4587 = !DILocation(line: 2196, column: 21, scope: !4565)
!4588 = !DILocation(line: 2196, column: 9, scope: !4560)
!4589 = !DILocation(line: 2197, column: 41, scope: !4564)
!4590 = !DILocation(line: 2197, column: 24, scope: !4564)
!4591 = !DILocation(line: 2198, column: 24, scope: !4564)
!4592 = !DILocation(line: 2200, column: 16, scope: !4564)
!4593 = !DILocation(line: 2199, column: 24, scope: !4564)
!4594 = !DILocation(line: 2201, column: 13, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 2201, column: 13)
!4596 = !DILocation(line: 2201, column: 13, scope: !4564)
!4597 = !DILocation(line: 2201, column: 26, scope: !4595)
!4598 = !DILocation(line: 2202, column: 18, scope: !4572)
!4599 = !DILocation(line: 2202, column: 13, scope: !4564)
!4600 = !DILocation(line: 2203, column: 18, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 2202, column: 27)
!4602 = !DILocation(line: 2203, column: 22, scope: !4601)
!4603 = !DILocation(line: 2204, column: 13, scope: !4601)
!4604 = !DILocation(line: 2207, column: 22, scope: !4570)
!4605 = !DILocation(line: 2207, column: 17, scope: !4571)
!4606 = !DILocation(line: 2210, column: 32, scope: !4569)
!4607 = !DILocation(line: 2211, column: 24, scope: !4569)
!4608 = !DILocation(line: 2212, column: 32, scope: !4569)
!4609 = !DILocation(line: 2212, column: 24, scope: !4569)
!4610 = !DILocation(line: 2213, column: 49, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 2213, column: 21)
!4612 = !DILocation(line: 2213, column: 22, scope: !4611)
!4613 = !DILocation(line: 2213, column: 21, scope: !4569)
!4614 = !DILocation(line: 2214, column: 26, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 2213, column: 55)
!4616 = !DILocation(line: 2214, column: 30, scope: !4615)
!4617 = !DILocation(line: 2219, column: 51, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 2219, column: 21)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 2218, column: 66)
!4620 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 2218, column: 24)
!4621 = !DILocation(line: 2219, column: 22, scope: !4618)
!4622 = !DILocation(line: 2219, column: 21, scope: !4619)
!4623 = !DILocation(line: 2220, column: 26, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 2219, column: 58)
!4625 = !DILocation(line: 2220, column: 30, scope: !4624)
!4626 = !DILocation(line: 2221, column: 21, scope: !4624)
!4627 = !DILocation(line: 2224, column: 27, scope: !4571)
!4628 = !DILocation(line: 2225, column: 13, scope: !4571)
!4629 = !DILocation(line: 2228, column: 24, scope: !4575)
!4630 = !DILocation(line: 2228, column: 56, scope: !4575)
!4631 = !DILocation(line: 2228, column: 45, scope: !4575)
!4632 = !DILocation(line: 2229, column: 18, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 2229, column: 13)
!4634 = !DILocation(line: 2229, column: 13, scope: !4575)
!4635 = !DILocation(line: 2230, column: 18, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 2229, column: 27)
!4637 = !DILocation(line: 2230, column: 22, scope: !4636)
!4638 = !DILocation(line: 2231, column: 13, scope: !4636)
!4639 = !DILocation(line: 2234, column: 28, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 2234, column: 17)
!4641 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 2232, column: 16)
!4642 = !DILocation(line: 2234, column: 60, scope: !4640)
!4643 = !DILocation(line: 2235, column: 39, scope: !4640)
!4644 = !DILocation(line: 2235, column: 51, scope: !4640)
!4645 = !DILocation(line: 2235, column: 18, scope: !4640)
!4646 = !DILocation(line: 2234, column: 17, scope: !4641)
!4647 = !DILocation(line: 2239, column: 29, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 2239, column: 24)
!4649 = !DILocation(line: 2237, column: 22, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 2236, column: 13)
!4651 = !DILocation(line: 2237, column: 26, scope: !4650)
!4652 = !DILocation(line: 2238, column: 17, scope: !4650)
!4653 = !DILocation(line: 2239, column: 35, scope: !4648)
!4654 = !DILocation(line: 2239, column: 24, scope: !4640)
!4655 = !DILocation(line: 2240, column: 46, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 2240, column: 21)
!4657 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 2239, column: 66)
!4658 = !DILocation(line: 2240, column: 56, scope: !4656)
!4659 = !DILocation(line: 2240, column: 22, scope: !4656)
!4660 = !DILocation(line: 2240, column: 21, scope: !4657)
!4661 = !DILocation(line: 2241, column: 26, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 2240, column: 63)
!4663 = !DILocation(line: 2241, column: 30, scope: !4662)
!4664 = !DILocation(line: 2242, column: 21, scope: !4662)
!4665 = !DILocation(line: 2245, column: 27, scope: !4641)
!4666 = !DILocation(line: 2246, column: 13, scope: !4641)
!4667 = !DILocation(line: 2249, column: 9, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2248, column: 12)
!4669 = !DILocation(line: 0, scope: !4580)
!4670 = !DILocation(line: 2251, column: 1, scope: !4560)
!4671 = distinct !DISubprogram(name: "RM_HashSet", scope: !3, file: !3, line: 2309, type: !4672, isLocal: false, isDefinition: true, scopeLine: 2309, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4674)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!17, !986, !17, null}
!4674 = !{!4675, !4676, !4677, !4678, !4679, !4681, !4682, !4685, !4688, !4689}
!4675 = !DILocalVariable(name: "key", arg: 1, scope: !4671, file: !3, line: 2309, type: !986)
!4676 = !DILocalVariable(name: "flags", arg: 2, scope: !4671, file: !3, line: 2309, type: !17)
!4677 = !DILocalVariable(name: "ap", scope: !4671, file: !3, line: 2310, type: !2048)
!4678 = !DILocalVariable(name: "updated", scope: !4671, file: !3, line: 2315, type: !17)
!4679 = !DILocalVariable(name: "field", scope: !4680, file: !3, line: 2318, type: !143)
!4680 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2317, column: 14)
!4681 = !DILocalVariable(name: "value", scope: !4680, file: !3, line: 2318, type: !143)
!4682 = !DILocalVariable(name: "cfield", scope: !4683, file: !3, line: 2321, type: !9)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 2320, column: 47)
!4684 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 2320, column: 13)
!4685 = !DILocalVariable(name: "exists", scope: !4686, file: !3, line: 2332, type: !17)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 2331, column: 64)
!4687 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 2331, column: 13)
!4688 = !DILocalVariable(name: "low_flags", scope: !4680, file: !3, line: 2348, type: !17)
!4689 = !DILocalVariable(name: "argv", scope: !4680, file: !3, line: 2355, type: !4690)
!4690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 128, elements: !102)
!4691 = !DILocation(line: 2309, column: 32, scope: !4671)
!4692 = !DILocation(line: 2309, column: 41, scope: !4671)
!4693 = !DILocation(line: 2310, column: 5, scope: !4671)
!4694 = !DILocation(line: 2310, column: 13, scope: !4671)
!4695 = !DILocation(line: 2311, column: 16, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2311, column: 9)
!4697 = !DILocation(line: 2311, column: 21, scope: !4696)
!4698 = !DILocation(line: 2311, column: 9, scope: !4671)
!4699 = !DILocation(line: 2312, column: 14, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2312, column: 9)
!4701 = !DILocation(line: 2312, column: 9, scope: !4700)
!4702 = !DILocation(line: 2312, column: 20, scope: !4700)
!4703 = !DILocation(line: 2312, column: 35, scope: !4700)
!4704 = !DILocation(line: 2312, column: 40, scope: !4700)
!4705 = !DILocation(line: 2312, column: 9, scope: !4671)
!4706 = !DILocation(line: 419, column: 42, scope: !983, inlinedAt: !4707)
!4707 = distinct !DILocation(line: 2313, column: 29, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2313, column: 9)
!4709 = !DILocation(line: 419, column: 51, scope: !983, inlinedAt: !4707)
!4710 = !DILocation(line: 436, column: 15, scope: !1038, inlinedAt: !4707)
!4711 = !DILocation(line: 420, column: 11, scope: !983, inlinedAt: !4707)
!4712 = !DILocation(line: 440, column: 16, scope: !983, inlinedAt: !4707)
!4713 = !DILocation(line: 440, column: 24, scope: !983, inlinedAt: !4707)
!4714 = !DILocation(line: 440, column: 5, scope: !983, inlinedAt: !4707)
!4715 = !DILocation(line: 441, column: 16, scope: !983, inlinedAt: !4707)
!4716 = !DILocation(line: 2313, column: 29, scope: !4708)
!4717 = !DILocation(line: 2315, column: 9, scope: !4671)
!4718 = !DILocation(line: 2316, column: 5, scope: !4671)
!4719 = !DILocation(line: 2317, column: 5, scope: !4671)
!4720 = !DILocation(line: 0, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 2324, column: 16)
!4722 = !DILocation(line: 2320, column: 13, scope: !4680)
!4723 = !DILocation(line: 2321, column: 28, scope: !4683)
!4724 = !DILocation(line: 2321, column: 19, scope: !4683)
!4725 = !DILocation(line: 2322, column: 24, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2322, column: 17)
!4727 = !DILocation(line: 2322, column: 17, scope: !4683)
!4728 = !DILocation(line: 2323, column: 50, scope: !4683)
!4729 = !DILocation(line: 2323, column: 21, scope: !4683)
!4730 = !DILocation(line: 2318, column: 28, scope: !4680)
!4731 = !DILocation(line: 2328, column: 17, scope: !4680)
!4732 = !DILocation(line: 2325, column: 21, scope: !4721)
!4733 = !DILocation(line: 2326, column: 23, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 2326, column: 17)
!4735 = !DILocation(line: 2326, column: 17, scope: !4721)
!4736 = !DILocation(line: 2318, column: 36, scope: !4680)
!4737 = !DILocation(line: 2331, column: 13, scope: !4680)
!4738 = !DILocation(line: 2332, column: 46, scope: !4686)
!4739 = !DILocation(line: 2332, column: 60, scope: !4686)
!4740 = !DILocation(line: 2332, column: 26, scope: !4686)
!4741 = !DILocation(line: 2332, column: 17, scope: !4686)
!4742 = !DILocation(line: 2333, column: 52, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 2333, column: 17)
!4744 = !DILocation(line: 2333, column: 48, scope: !4743)
!4745 = !DILocation(line: 2334, column: 48, scope: !4743)
!4746 = !DILocation(line: 2336, column: 21, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 2335, column: 13)
!4748 = !DILocation(line: 2336, column: 55, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 2336, column: 21)
!4750 = distinct !{!4750, !4719, !4751}
!4751 = !DILocation(line: 2365, column: 5, scope: !4671)
!4752 = !DILocation(line: 2342, column: 19, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 2342, column: 13)
!4754 = !DILocation(line: 2342, column: 13, scope: !4680)
!4755 = !DILocation(line: 2343, column: 44, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 2342, column: 47)
!4757 = !DILocation(line: 2343, column: 58, scope: !4756)
!4758 = !DILocation(line: 2343, column: 24, scope: !4756)
!4759 = !DILocation(line: 2343, column: 21, scope: !4756)
!4760 = !DILocation(line: 2344, column: 17, scope: !4756)
!4761 = !DILocation(line: 2344, column: 51, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2344, column: 17)
!4763 = !DILocation(line: 2348, column: 13, scope: !4680)
!4764 = !DILocation(line: 2355, column: 9, scope: !4680)
!4765 = !DILocation(line: 2355, column: 15, scope: !4680)
!4766 = !DILocation(line: 2355, column: 25, scope: !4680)
!4767 = !DILocation(line: 2356, column: 36, scope: !4680)
!4768 = !DILocation(line: 2356, column: 9, scope: !4680)
!4769 = !DILocation(line: 2357, column: 37, scope: !4680)
!4770 = !DILocation(line: 2357, column: 51, scope: !4680)
!4771 = !DILocation(line: 2357, column: 63, scope: !4680)
!4772 = !DILocation(line: 2357, column: 20, scope: !4680)
!4773 = !DILocation(line: 2357, column: 17, scope: !4680)
!4774 = !DILocation(line: 2361, column: 13, scope: !4680)
!4775 = !DILocation(line: 2362, column: 23, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2361, column: 47)
!4777 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 2361, column: 13)
!4778 = !DILocation(line: 2363, column: 12, scope: !4776)
!4779 = !DILocation(line: 2364, column: 9, scope: !4776)
!4780 = !DILocation(line: 2366, column: 5, scope: !4671)
!4781 = !DILocation(line: 2367, column: 5, scope: !4671)
!4782 = !DILocation(line: 0, scope: !4696)
!4783 = !DILocation(line: 2369, column: 1, scope: !4671)
!4784 = distinct !DISubprogram(name: "RM_HashGet", scope: !3, file: !3, line: 2412, type: !4672, isLocal: false, isDefinition: true, scopeLine: 2412, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4785)
!4785 = !{!4786, !4787, !4788, !4789, !4791, !4792, !4793, !4796}
!4786 = !DILocalVariable(name: "key", arg: 1, scope: !4784, file: !3, line: 2412, type: !986)
!4787 = !DILocalVariable(name: "flags", arg: 2, scope: !4784, file: !3, line: 2412, type: !17)
!4788 = !DILocalVariable(name: "ap", scope: !4784, file: !3, line: 2413, type: !2048)
!4789 = !DILocalVariable(name: "field", scope: !4790, file: !3, line: 2418, type: !143)
!4790 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 2417, column: 14)
!4791 = !DILocalVariable(name: "valueptr", scope: !4790, file: !3, line: 2418, type: !165)
!4792 = !DILocalVariable(name: "existsptr", scope: !4790, file: !3, line: 2419, type: !16)
!4793 = !DILocalVariable(name: "cfield", scope: !4794, file: !3, line: 2422, type: !9)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2421, column: 47)
!4795 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 2421, column: 13)
!4796 = !DILocalVariable(name: "decoded", scope: !4797, file: !3, line: 2442, type: !143)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 2441, column: 32)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2441, column: 21)
!4799 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 2439, column: 29)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 2439, column: 17)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 2437, column: 16)
!4802 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 2431, column: 13)
!4803 = !DILocation(line: 2412, column: 32, scope: !4784)
!4804 = !DILocation(line: 2412, column: 41, scope: !4784)
!4805 = !DILocation(line: 2413, column: 5, scope: !4784)
!4806 = !DILocation(line: 2413, column: 13, scope: !4784)
!4807 = !DILocation(line: 2414, column: 14, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 2414, column: 9)
!4809 = !DILocation(line: 2414, column: 9, scope: !4808)
!4810 = !DILocation(line: 2414, column: 20, scope: !4808)
!4811 = !DILocation(line: 2414, column: 35, scope: !4808)
!4812 = !DILocation(line: 2414, column: 40, scope: !4808)
!4813 = !DILocation(line: 2414, column: 9, scope: !4784)
!4814 = !DILocation(line: 2416, column: 5, scope: !4784)
!4815 = !DILocation(line: 2417, column: 5, scope: !4784)
!4816 = !DILocation(line: 0, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2425, column: 16)
!4818 = !DILocation(line: 2421, column: 13, scope: !4790)
!4819 = !DILocation(line: 2422, column: 28, scope: !4794)
!4820 = !DILocation(line: 2422, column: 19, scope: !4794)
!4821 = !DILocation(line: 2423, column: 24, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 2423, column: 17)
!4823 = !DILocation(line: 2423, column: 17, scope: !4794)
!4824 = !DILocation(line: 2424, column: 50, scope: !4794)
!4825 = !DILocation(line: 2424, column: 21, scope: !4794)
!4826 = !DILocation(line: 2418, column: 28, scope: !4790)
!4827 = !DILocation(line: 0, scope: !4801)
!4828 = !DILocation(line: 2426, column: 21, scope: !4817)
!4829 = !DILocation(line: 2427, column: 23, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 2427, column: 17)
!4831 = !DILocation(line: 2427, column: 17, scope: !4817)
!4832 = !DILocation(line: 2431, column: 13, scope: !4790)
!4833 = !DILocation(line: 2432, column: 25, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 2431, column: 46)
!4835 = !DILocation(line: 2419, column: 14, scope: !4790)
!4836 = !DILocation(line: 2433, column: 22, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 2433, column: 17)
!4838 = !DILocation(line: 2433, column: 17, scope: !4837)
!4839 = !DILocation(line: 2433, column: 17, scope: !4834)
!4840 = !DILocation(line: 2434, column: 63, scope: !4837)
!4841 = !DILocation(line: 2434, column: 30, scope: !4837)
!4842 = !DILocation(line: 2434, column: 28, scope: !4837)
!4843 = !DILocation(line: 2434, column: 17, scope: !4837)
!4844 = !DILocation(line: 2436, column: 28, scope: !4837)
!4845 = !DILocation(line: 2438, column: 24, scope: !4801)
!4846 = !DILocation(line: 2418, column: 37, scope: !4790)
!4847 = !DILocation(line: 2439, column: 22, scope: !4800)
!4848 = !DILocation(line: 2439, column: 17, scope: !4800)
!4849 = !DILocation(line: 2439, column: 17, scope: !4801)
!4850 = !DILocation(line: 2440, column: 70, scope: !4799)
!4851 = !DILocation(line: 2440, column: 29, scope: !4799)
!4852 = !DILocation(line: 2440, column: 27, scope: !4799)
!4853 = !DILocation(line: 2441, column: 21, scope: !4798)
!4854 = !DILocation(line: 2441, column: 21, scope: !4799)
!4855 = !DILocation(line: 2442, column: 37, scope: !4797)
!4856 = !DILocation(line: 2442, column: 27, scope: !4797)
!4857 = !DILocation(line: 2443, column: 34, scope: !4797)
!4858 = !DILocation(line: 2443, column: 21, scope: !4797)
!4859 = !DILocation(line: 2444, column: 31, scope: !4797)
!4860 = !DILocation(line: 2446, column: 21, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2446, column: 21)
!4862 = !DILocation(line: 2446, column: 21, scope: !4799)
!4863 = !DILocation(line: 2447, column: 40, scope: !4861)
!4864 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !4865)
!4865 = distinct !DILocation(line: 2447, column: 21, scope: !4861)
!4866 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !4865)
!4867 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !4865)
!4868 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !4865)
!4869 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !4865)
!4870 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !4865)
!4871 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !4865)
!4872 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !4865)
!4873 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !4865)
!4874 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !4865)
!4875 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !4865)
!4876 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !4865)
!4877 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !4865)
!4878 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !4865)
!4879 = !DILocation(line: 0, scope: !1724, inlinedAt: !4865)
!4880 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !4865)
!4881 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !4865)
!4882 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !4865)
!4883 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !4865)
!4884 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !4865)
!4885 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !4865)
!4886 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !4865)
!4887 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !4865)
!4888 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !4865)
!4889 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !4865)
!4890 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !4865)
!4891 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !4865)
!4892 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !4865)
!4893 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !4865)
!4894 = !DILocation(line: 2449, column: 27, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 2448, column: 20)
!4896 = !DILocation(line: 2454, column: 13, scope: !4790)
!4897 = !DILocation(line: 2454, column: 47, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 2454, column: 13)
!4899 = !DILocation(line: 2456, column: 5, scope: !4784)
!4900 = !DILocation(line: 2457, column: 5, scope: !4784)
!4901 = !DILocation(line: 0, scope: !4784)
!4902 = !DILocation(line: 2458, column: 1, scope: !4784)
!4903 = distinct !DISubprogram(name: "moduleCreateCallReplyFromProto", scope: !3, file: !3, line: 2468, type: !4904, isLocal: false, isDefinition: true, scopeLine: 2468, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4906)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!1806, !584, !154}
!4906 = !{!4907, !4908, !4909}
!4907 = !DILocalVariable(name: "ctx", arg: 1, scope: !4903, file: !3, line: 2468, type: !584)
!4908 = !DILocalVariable(name: "proto", arg: 2, scope: !4903, file: !3, line: 2468, type: !154)
!4909 = !DILocalVariable(name: "reply", scope: !4903, file: !3, line: 2469, type: !1806)
!4910 = !DILocation(line: 2468, column: 70, scope: !4903)
!4911 = !DILocation(line: 2468, column: 79, scope: !4903)
!4912 = !DILocation(line: 2469, column: 35, scope: !4903)
!4913 = !DILocation(line: 2469, column: 27, scope: !4903)
!4914 = !DILocation(line: 2470, column: 12, scope: !4903)
!4915 = !DILocation(line: 2470, column: 16, scope: !4903)
!4916 = !DILocation(line: 2471, column: 12, scope: !4903)
!4917 = !DILocation(line: 2471, column: 18, scope: !4903)
!4918 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !4919)
!4919 = distinct !DILocation(line: 2472, column: 23, scope: !4903)
!4920 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !4919)
!4921 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !4919)
!4922 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !4919)
!4923 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !4919)
!4924 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !4919)
!4925 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !4919)
!4926 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !4919)
!4927 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !4919)
!4928 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !4919)
!4929 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !4919)
!4930 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !4919)
!4931 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !4919)
!4932 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !4919)
!4933 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !4919)
!4934 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !4919)
!4935 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !4919)
!4936 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !4919)
!4937 = !DILocation(line: 0, scope: !2343, inlinedAt: !4919)
!4938 = !DILocation(line: 2472, column: 12, scope: !4903)
!4939 = !DILocation(line: 2472, column: 21, scope: !4903)
!4940 = !DILocation(line: 2473, column: 12, scope: !4903)
!4941 = !DILocation(line: 2473, column: 18, scope: !4903)
!4942 = !{!1829, !895, i64 12}
!4943 = !DILocation(line: 2474, column: 12, scope: !4903)
!4944 = !DILocation(line: 2474, column: 5, scope: !4903)
!4945 = !DILocation(line: 2477, column: 54, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2474, column: 22)
!4947 = !DILocation(line: 2478, column: 56, scope: !4946)
!4948 = !DILocation(line: 2479, column: 54, scope: !4946)
!4949 = !DILocation(line: 2480, column: 55, scope: !4946)
!4950 = !DILocation(line: 0, scope: !4946)
!4951 = !{!1829, !895, i64 8}
!4952 = !DILocation(line: 2482, column: 10, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2482, column: 9)
!4954 = !DILocation(line: 2482, column: 26, scope: !4953)
!4955 = !DILocation(line: 2482, column: 49, scope: !4953)
!4956 = !DILocation(line: 2482, column: 58, scope: !4953)
!4957 = !DILocation(line: 2482, column: 9, scope: !4903)
!4958 = !DILocation(line: 2483, column: 16, scope: !4953)
!4959 = !DILocation(line: 2483, column: 21, scope: !4953)
!4960 = !DILocation(line: 2483, column: 9, scope: !4953)
!4961 = !DILocation(line: 2484, column: 5, scope: !4903)
!4962 = distinct !DISubprogram(name: "moduleParseCallReply", scope: !3, file: !3, line: 2495, type: !1804, isLocal: false, isDefinition: true, scopeLine: 2495, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4963)
!4963 = !{!4964}
!4964 = !DILocalVariable(name: "reply", arg: 1, scope: !4962, file: !3, line: 2495, type: !1806)
!4965 = !DILocation(line: 2495, column: 49, scope: !4962)
!4966 = !DILocation(line: 2496, column: 18, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 2496, column: 9)
!4968 = !DILocation(line: 2496, column: 24, scope: !4967)
!4969 = !DILocation(line: 2496, column: 9, scope: !4962)
!4970 = !DILocation(line: 2497, column: 18, scope: !4962)
!4971 = !DILocation(line: 2499, column: 19, scope: !4962)
!4972 = !DILocation(line: 2499, column: 12, scope: !4962)
!4973 = !DILocation(line: 2499, column: 5, scope: !4962)
!4974 = !DILocalVariable(name: "reply", arg: 1, scope: !4975, file: !3, line: 2508, type: !1806)
!4975 = distinct !DISubprogram(name: "moduleParseCallReply_Int", scope: !3, file: !3, line: 2508, type: !1804, isLocal: false, isDefinition: true, scopeLine: 2508, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4976)
!4976 = !{!4974, !4977, !4978}
!4977 = !DILocalVariable(name: "proto", scope: !4975, file: !3, line: 2509, type: !9)
!4978 = !DILocalVariable(name: "p", scope: !4975, file: !3, line: 2510, type: !9)
!4979 = !DILocation(line: 2508, column: 53, scope: !4975, inlinedAt: !4980)
!4980 = distinct !DILocation(line: 2500, column: 15, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 2499, column: 29)
!4982 = !DILocation(line: 2509, column: 11, scope: !4975, inlinedAt: !4980)
!4983 = !DILocation(line: 2510, column: 27, scope: !4975, inlinedAt: !4980)
!4984 = !DILocation(line: 2510, column: 15, scope: !4975, inlinedAt: !4980)
!4985 = !DILocation(line: 2510, column: 11, scope: !4975, inlinedAt: !4980)
!4986 = !DILocation(line: 2512, column: 24, scope: !4975, inlinedAt: !4980)
!4987 = !DILocation(line: 2512, column: 30, scope: !4975, inlinedAt: !4980)
!4988 = !DILocation(line: 2512, column: 41, scope: !4975, inlinedAt: !4980)
!4989 = !DILocation(line: 2512, column: 45, scope: !4975, inlinedAt: !4980)
!4990 = !DILocation(line: 2512, column: 5, scope: !4975, inlinedAt: !4980)
!4991 = !DILocation(line: 2513, column: 30, scope: !4975, inlinedAt: !4980)
!4992 = !DILocation(line: 2513, column: 12, scope: !4975, inlinedAt: !4980)
!4993 = !DILocation(line: 2513, column: 21, scope: !4975, inlinedAt: !4980)
!4994 = !DILocation(line: 2514, column: 12, scope: !4975, inlinedAt: !4980)
!4995 = !DILocation(line: 2514, column: 17, scope: !4975, inlinedAt: !4980)
!4996 = !DILocation(line: 2500, column: 48, scope: !4981)
!4997 = !DILocalVariable(name: "reply", arg: 1, scope: !4998, file: !3, line: 2517, type: !1806)
!4998 = distinct !DISubprogram(name: "moduleParseCallReply_BulkString", scope: !3, file: !3, line: 2517, type: !1804, isLocal: false, isDefinition: true, scopeLine: 2517, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4999)
!4999 = !{!4997, !5000, !5001, !5002}
!5000 = !DILocalVariable(name: "proto", scope: !4998, file: !3, line: 2518, type: !9)
!5001 = !DILocalVariable(name: "p", scope: !4998, file: !3, line: 2519, type: !9)
!5002 = !DILocalVariable(name: "bulklen", scope: !4998, file: !3, line: 2520, type: !112)
!5003 = !DILocation(line: 2517, column: 60, scope: !4998, inlinedAt: !5004)
!5004 = distinct !DILocation(line: 2501, column: 15, scope: !4981)
!5005 = !DILocation(line: 2518, column: 11, scope: !4998, inlinedAt: !5004)
!5006 = !DILocation(line: 2519, column: 27, scope: !4998, inlinedAt: !5004)
!5007 = !DILocation(line: 2519, column: 15, scope: !4998, inlinedAt: !5004)
!5008 = !DILocation(line: 2519, column: 11, scope: !4998, inlinedAt: !5004)
!5009 = !DILocation(line: 2520, column: 5, scope: !4998, inlinedAt: !5004)
!5010 = !DILocation(line: 2522, column: 24, scope: !4998, inlinedAt: !5004)
!5011 = !DILocation(line: 2522, column: 30, scope: !4998, inlinedAt: !5004)
!5012 = !DILocation(line: 2520, column: 15, scope: !4998, inlinedAt: !5004)
!5013 = !DILocation(line: 2522, column: 5, scope: !4998, inlinedAt: !5004)
!5014 = !DILocation(line: 2523, column: 9, scope: !5015, inlinedAt: !5004)
!5015 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 2523, column: 9)
!5016 = !DILocation(line: 2523, column: 17, scope: !5015, inlinedAt: !5004)
!5017 = !DILocation(line: 2523, column: 9, scope: !4998, inlinedAt: !5004)
!5018 = !DILocation(line: 2524, column: 34, scope: !5019, inlinedAt: !5004)
!5019 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 2523, column: 24)
!5020 = !DILocation(line: 2526, column: 5, scope: !5019, inlinedAt: !5004)
!5021 = !DILocation(line: 2527, column: 27, scope: !5022, inlinedAt: !5004)
!5022 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 2526, column: 12)
!5023 = !DILocation(line: 2527, column: 20, scope: !5022, inlinedAt: !5004)
!5024 = !DILocation(line: 2527, column: 24, scope: !5022, inlinedAt: !5004)
!5025 = !DILocation(line: 2528, column: 16, scope: !5022, inlinedAt: !5004)
!5026 = !DILocation(line: 2528, column: 20, scope: !5022, inlinedAt: !5004)
!5027 = !{!1829, !1046, i64 16}
!5028 = !DILocation(line: 2529, column: 36, scope: !5022, inlinedAt: !5004)
!5029 = !DILocation(line: 2529, column: 44, scope: !5022, inlinedAt: !5004)
!5030 = !DILocation(line: 2529, column: 16, scope: !5022, inlinedAt: !5004)
!5031 = !DILocation(line: 2529, column: 25, scope: !5022, inlinedAt: !5004)
!5032 = !DILocation(line: 2530, column: 16, scope: !5022, inlinedAt: !5004)
!5033 = !DILocation(line: 2530, column: 21, scope: !5022, inlinedAt: !5004)
!5034 = !DILocation(line: 2532, column: 1, scope: !4998, inlinedAt: !5004)
!5035 = !DILocation(line: 2501, column: 55, scope: !4981)
!5036 = !DILocalVariable(name: "reply", arg: 1, scope: !5037, file: !3, line: 2534, type: !1806)
!5037 = distinct !DISubprogram(name: "moduleParseCallReply_SimpleString", scope: !3, file: !3, line: 2534, type: !1804, isLocal: false, isDefinition: true, scopeLine: 2534, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5038)
!5038 = !{!5036, !5039, !5040}
!5039 = !DILocalVariable(name: "proto", scope: !5037, file: !3, line: 2535, type: !9)
!5040 = !DILocalVariable(name: "p", scope: !5037, file: !3, line: 2536, type: !9)
!5041 = !DILocation(line: 2534, column: 62, scope: !5037, inlinedAt: !5042)
!5042 = distinct !DILocation(line: 2503, column: 15, scope: !4981)
!5043 = !DILocation(line: 2535, column: 11, scope: !5037, inlinedAt: !5042)
!5044 = !DILocation(line: 2536, column: 27, scope: !5037, inlinedAt: !5042)
!5045 = !DILocation(line: 2536, column: 15, scope: !5037, inlinedAt: !5042)
!5046 = !DILocation(line: 2536, column: 11, scope: !5037, inlinedAt: !5042)
!5047 = !DILocation(line: 2538, column: 16, scope: !5037, inlinedAt: !5042)
!5048 = !DILocation(line: 2538, column: 20, scope: !5037, inlinedAt: !5042)
!5049 = !DILocation(line: 2539, column: 19, scope: !5037, inlinedAt: !5042)
!5050 = !DILocation(line: 2539, column: 25, scope: !5037, inlinedAt: !5042)
!5051 = !DILocation(line: 2539, column: 12, scope: !5037, inlinedAt: !5042)
!5052 = !DILocation(line: 2539, column: 16, scope: !5037, inlinedAt: !5042)
!5053 = !DILocation(line: 2540, column: 30, scope: !5037, inlinedAt: !5042)
!5054 = !DILocation(line: 2540, column: 12, scope: !5037, inlinedAt: !5042)
!5055 = !DILocation(line: 2540, column: 21, scope: !5037, inlinedAt: !5042)
!5056 = !DILocation(line: 2541, column: 19, scope: !5037, inlinedAt: !5042)
!5057 = !DILocation(line: 2541, column: 28, scope: !5037, inlinedAt: !5042)
!5058 = !DILocation(line: 2541, column: 12, scope: !5037, inlinedAt: !5042)
!5059 = !DILocation(line: 2541, column: 17, scope: !5037, inlinedAt: !5042)
!5060 = !DILocation(line: 2503, column: 57, scope: !4981)
!5061 = !DILocation(line: 2504, column: 15, scope: !4981)
!5062 = !DILocation(line: 2504, column: 50, scope: !4981)
!5063 = !DILocation(line: 2506, column: 1, scope: !4962)
!5064 = !DILocation(line: 2508, column: 53, scope: !4975)
!5065 = !DILocation(line: 2509, column: 26, scope: !4975)
!5066 = !DILocation(line: 2509, column: 11, scope: !4975)
!5067 = !DILocation(line: 2510, column: 27, scope: !4975)
!5068 = !DILocation(line: 2510, column: 15, scope: !4975)
!5069 = !DILocation(line: 2510, column: 11, scope: !4975)
!5070 = !DILocation(line: 2512, column: 24, scope: !4975)
!5071 = !DILocation(line: 2512, column: 30, scope: !4975)
!5072 = !DILocation(line: 2512, column: 41, scope: !4975)
!5073 = !DILocation(line: 2512, column: 45, scope: !4975)
!5074 = !DILocation(line: 2512, column: 5, scope: !4975)
!5075 = !DILocation(line: 2513, column: 30, scope: !4975)
!5076 = !DILocation(line: 2513, column: 12, scope: !4975)
!5077 = !DILocation(line: 2513, column: 21, scope: !4975)
!5078 = !DILocation(line: 2514, column: 12, scope: !4975)
!5079 = !DILocation(line: 2514, column: 17, scope: !4975)
!5080 = !DILocation(line: 2515, column: 1, scope: !4975)
!5081 = !DILocation(line: 2517, column: 60, scope: !4998)
!5082 = !DILocation(line: 2518, column: 26, scope: !4998)
!5083 = !DILocation(line: 2518, column: 11, scope: !4998)
!5084 = !DILocation(line: 2519, column: 27, scope: !4998)
!5085 = !DILocation(line: 2519, column: 15, scope: !4998)
!5086 = !DILocation(line: 2519, column: 11, scope: !4998)
!5087 = !DILocation(line: 2520, column: 5, scope: !4998)
!5088 = !DILocation(line: 2522, column: 24, scope: !4998)
!5089 = !DILocation(line: 2522, column: 30, scope: !4998)
!5090 = !DILocation(line: 2520, column: 15, scope: !4998)
!5091 = !DILocation(line: 2522, column: 5, scope: !4998)
!5092 = !DILocation(line: 2523, column: 9, scope: !5015)
!5093 = !DILocation(line: 2523, column: 17, scope: !5015)
!5094 = !DILocation(line: 2523, column: 9, scope: !4998)
!5095 = !DILocation(line: 2524, column: 34, scope: !5019)
!5096 = !DILocation(line: 2526, column: 5, scope: !5019)
!5097 = !DILocation(line: 2527, column: 27, scope: !5022)
!5098 = !DILocation(line: 2527, column: 20, scope: !5022)
!5099 = !DILocation(line: 2527, column: 24, scope: !5022)
!5100 = !DILocation(line: 2528, column: 16, scope: !5022)
!5101 = !DILocation(line: 2528, column: 20, scope: !5022)
!5102 = !DILocation(line: 2529, column: 36, scope: !5022)
!5103 = !DILocation(line: 2529, column: 44, scope: !5022)
!5104 = !DILocation(line: 2529, column: 16, scope: !5022)
!5105 = !DILocation(line: 2529, column: 25, scope: !5022)
!5106 = !DILocation(line: 2530, column: 16, scope: !5022)
!5107 = !DILocation(line: 2530, column: 21, scope: !5022)
!5108 = !DILocation(line: 2532, column: 1, scope: !4998)
!5109 = !DILocation(line: 2534, column: 62, scope: !5037)
!5110 = !DILocation(line: 2535, column: 26, scope: !5037)
!5111 = !DILocation(line: 2535, column: 11, scope: !5037)
!5112 = !DILocation(line: 2536, column: 27, scope: !5037)
!5113 = !DILocation(line: 2536, column: 15, scope: !5037)
!5114 = !DILocation(line: 2536, column: 11, scope: !5037)
!5115 = !DILocation(line: 2538, column: 16, scope: !5037)
!5116 = !DILocation(line: 2538, column: 20, scope: !5037)
!5117 = !DILocation(line: 2539, column: 19, scope: !5037)
!5118 = !DILocation(line: 2539, column: 25, scope: !5037)
!5119 = !DILocation(line: 2539, column: 12, scope: !5037)
!5120 = !DILocation(line: 2539, column: 16, scope: !5037)
!5121 = !DILocation(line: 2540, column: 30, scope: !5037)
!5122 = !DILocation(line: 2540, column: 12, scope: !5037)
!5123 = !DILocation(line: 2540, column: 21, scope: !5037)
!5124 = !DILocation(line: 2541, column: 19, scope: !5037)
!5125 = !DILocation(line: 2541, column: 28, scope: !5037)
!5126 = !DILocation(line: 2541, column: 12, scope: !5037)
!5127 = !DILocation(line: 2541, column: 17, scope: !5037)
!5128 = !DILocation(line: 2543, column: 1, scope: !5037)
!5129 = distinct !DISubprogram(name: "moduleParseCallReply_Array", scope: !3, file: !3, line: 2545, type: !1804, isLocal: false, isDefinition: true, scopeLine: 2545, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5130)
!5130 = !{!5131, !5132, !5133, !5134, !5135, !5136}
!5131 = !DILocalVariable(name: "reply", arg: 1, scope: !5129, file: !3, line: 2545, type: !1806)
!5132 = !DILocalVariable(name: "proto", scope: !5129, file: !3, line: 2546, type: !9)
!5133 = !DILocalVariable(name: "p", scope: !5129, file: !3, line: 2547, type: !9)
!5134 = !DILocalVariable(name: "arraylen", scope: !5129, file: !3, line: 2548, type: !112)
!5135 = !DILocalVariable(name: "j", scope: !5129, file: !3, line: 2548, type: !112)
!5136 = !DILocalVariable(name: "ele", scope: !5137, file: !3, line: 2562, type: !1806)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 2561, column: 36)
!5138 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2561, column: 5)
!5139 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 2561, column: 5)
!5140 = !DILocation(line: 2545, column: 55, scope: !5129)
!5141 = !DILocation(line: 2546, column: 26, scope: !5129)
!5142 = !DILocation(line: 2546, column: 11, scope: !5129)
!5143 = !DILocation(line: 2547, column: 27, scope: !5129)
!5144 = !DILocation(line: 2547, column: 15, scope: !5129)
!5145 = !DILocation(line: 2547, column: 11, scope: !5129)
!5146 = !DILocation(line: 2548, column: 5, scope: !5129)
!5147 = !DILocation(line: 2550, column: 24, scope: !5129)
!5148 = !DILocation(line: 2550, column: 30, scope: !5129)
!5149 = !DILocation(line: 2548, column: 15, scope: !5129)
!5150 = !DILocation(line: 2550, column: 5, scope: !5129)
!5151 = !DILocation(line: 2551, column: 7, scope: !5129)
!5152 = !DILocation(line: 2553, column: 9, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 2553, column: 9)
!5154 = !DILocation(line: 2553, column: 18, scope: !5153)
!5155 = !DILocation(line: 2553, column: 9, scope: !5129)
!5156 = !DILocation(line: 2559, column: 60, scope: !5129)
!5157 = !DILocation(line: 2559, column: 24, scope: !5129)
!5158 = !DILocation(line: 2559, column: 12, scope: !5129)
!5159 = !DILocation(line: 2559, column: 16, scope: !5129)
!5160 = !DILocation(line: 2559, column: 22, scope: !5129)
!5161 = !DILocation(line: 2560, column: 18, scope: !5129)
!5162 = !DILocation(line: 2560, column: 12, scope: !5129)
!5163 = !DILocation(line: 2560, column: 16, scope: !5129)
!5164 = !DILocation(line: 2548, column: 25, scope: !5129)
!5165 = !DILocation(line: 2561, column: 19, scope: !5138)
!5166 = !DILocation(line: 2561, column: 5, scope: !5139)
!5167 = !DILocation(line: 2562, column: 48, scope: !5137)
!5168 = !DILocation(line: 2562, column: 53, scope: !5137)
!5169 = !DILocation(line: 2562, column: 31, scope: !5137)
!5170 = !DILocation(line: 2563, column: 14, scope: !5137)
!5171 = !DILocation(line: 2563, column: 20, scope: !5137)
!5172 = !DILocation(line: 2565, column: 14, scope: !5137)
!5173 = !DILocation(line: 2565, column: 20, scope: !5137)
!5174 = !DILocation(line: 2566, column: 27, scope: !5137)
!5175 = !DILocation(line: 2566, column: 18, scope: !5137)
!5176 = !DILocation(line: 2567, column: 9, scope: !5137)
!5177 = !DILocation(line: 2568, column: 19, scope: !5137)
!5178 = !DILocation(line: 2568, column: 11, scope: !5137)
!5179 = !DILocation(line: 2561, column: 32, scope: !5138)
!5180 = !DILocation(line: 2561, column: 21, scope: !5138)
!5181 = distinct !{!5181, !5166, !5182}
!5182 = !DILocation(line: 2569, column: 5, scope: !5139)
!5183 = !DILocation(line: 0, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 2553, column: 25)
!5185 = !DILocation(line: 2572, column: 1, scope: !5129)
!5186 = distinct !DISubprogram(name: "RM_FreeCallReply_Rec", scope: !3, file: !3, line: 2576, type: !5187, isLocal: false, isDefinition: true, scopeLine: 2576, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5189)
!5187 = !DISubroutineType(types: !5188)
!5188 = !{null, !1806, !17}
!5189 = !{!5190, !5191, !5192}
!5190 = !DILocalVariable(name: "reply", arg: 1, scope: !5186, file: !3, line: 2576, type: !1806)
!5191 = !DILocalVariable(name: "freenested", arg: 2, scope: !5186, file: !3, line: 2576, type: !17)
!5192 = !DILocalVariable(name: "j", scope: !5193, file: !3, line: 2584, type: !157)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 2583, column: 53)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 2583, column: 13)
!5195 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 2582, column: 58)
!5196 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 2582, column: 9)
!5197 = !DILocation(line: 2576, column: 49, scope: !5186)
!5198 = !DILocation(line: 2576, column: 60, scope: !5186)
!5199 = !DILocation(line: 2580, column: 10, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 2580, column: 9)
!5201 = !DILocation(line: 0, scope: !5196)
!5202 = !DILocation(line: 2580, column: 37, scope: !5200)
!5203 = !DILocation(line: 2580, column: 21, scope: !5200)
!5204 = !DILocation(line: 2582, column: 24, scope: !5196)
!5205 = !DILocation(line: 2582, column: 9, scope: !5186)
!5206 = !DILocation(line: 2583, column: 20, scope: !5194)
!5207 = !DILocation(line: 2583, column: 25, scope: !5194)
!5208 = !DILocation(line: 2583, column: 13, scope: !5195)
!5209 = !DILocation(line: 2584, column: 20, scope: !5193)
!5210 = !DILocation(line: 2585, column: 36, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 2585, column: 13)
!5212 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 2585, column: 13)
!5213 = !DILocation(line: 2585, column: 27, scope: !5211)
!5214 = !DILocation(line: 0, scope: !5193)
!5215 = !DILocation(line: 2585, column: 13, scope: !5212)
!5216 = !DILocation(line: 2586, column: 54, scope: !5211)
!5217 = !DILocation(line: 2586, column: 17, scope: !5211)
!5218 = !DILocation(line: 2585, column: 42, scope: !5211)
!5219 = distinct !{!5219, !5215, !5220}
!5220 = !DILocation(line: 2586, column: 58, scope: !5212)
!5221 = !DILocation(line: 2587, column: 19, scope: !5193)
!5222 = !DILocation(line: 2587, column: 13, scope: !5193)
!5223 = !DILocation(line: 2595, column: 18, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 2595, column: 9)
!5225 = !DILocation(line: 2588, column: 9, scope: !5193)
!5226 = !DILocation(line: 2595, column: 24, scope: !5224)
!5227 = !DILocation(line: 2595, column: 9, scope: !5186)
!5228 = !DILocation(line: 2596, column: 20, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 2596, column: 13)
!5230 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 2595, column: 57)
!5231 = !DILocation(line: 2596, column: 13, scope: !5229)
!5232 = !DILocation(line: 2596, column: 13, scope: !5230)
!5233 = !DILocation(line: 2596, column: 27, scope: !5229)
!5234 = !DILocation(line: 2597, column: 15, scope: !5230)
!5235 = !DILocation(line: 2597, column: 9, scope: !5230)
!5236 = !DILocation(line: 2598, column: 5, scope: !5230)
!5237 = !DILocation(line: 2599, column: 1, scope: !5186)
!5238 = distinct !DISubprogram(name: "RM_CallReplyType", scope: !3, file: !3, line: 2612, type: !5239, isLocal: false, isDefinition: true, scopeLine: 2612, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5241)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!17, !1806}
!5241 = !{!5242}
!5242 = !DILocalVariable(name: "reply", arg: 1, scope: !5238, file: !3, line: 2612, type: !1806)
!5243 = !DILocation(line: 2612, column: 44, scope: !5238)
!5244 = !DILocation(line: 2613, column: 10, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2613, column: 9)
!5246 = !DILocation(line: 2613, column: 9, scope: !5238)
!5247 = !DILocation(line: 2614, column: 19, scope: !5238)
!5248 = !DILocation(line: 2614, column: 5, scope: !5238)
!5249 = !DILocation(line: 0, scope: !5245)
!5250 = !DILocation(line: 2615, column: 1, scope: !5238)
!5251 = distinct !DISubprogram(name: "RM_CallReplyLength", scope: !3, file: !3, line: 2618, type: !5252, isLocal: false, isDefinition: true, scopeLine: 2618, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5254)
!5252 = !DISubroutineType(types: !5253)
!5253 = !{!157, !1806}
!5254 = !{!5255}
!5255 = !DILocalVariable(name: "reply", arg: 1, scope: !5251, file: !3, line: 2618, type: !1806)
!5256 = !DILocation(line: 2618, column: 49, scope: !5251)
!5257 = !DILocation(line: 2619, column: 5, scope: !5251)
!5258 = !DILocation(line: 2620, column: 19, scope: !5251)
!5259 = !DILocation(line: 2620, column: 5, scope: !5251)
!5260 = !DILocation(line: 2624, column: 23, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 2620, column: 25)
!5262 = !DILocation(line: 2624, column: 9, scope: !5261)
!5263 = !DILocation(line: 0, scope: !5261)
!5264 = !DILocation(line: 2628, column: 1, scope: !5251)
!5265 = distinct !DISubprogram(name: "RM_CallReplyArrayElement", scope: !3, file: !3, line: 2632, type: !5266, isLocal: false, isDefinition: true, scopeLine: 2632, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5268)
!5266 = !DISubroutineType(types: !5267)
!5267 = !{!1806, !1806, !157}
!5268 = !{!5269, !5270}
!5269 = !DILocalVariable(name: "reply", arg: 1, scope: !5265, file: !3, line: 2632, type: !1806)
!5270 = !DILocalVariable(name: "idx", arg: 2, scope: !5265, file: !3, line: 2632, type: !157)
!5271 = !DILocation(line: 2632, column: 70, scope: !5265)
!5272 = !DILocation(line: 2632, column: 84, scope: !5265)
!5273 = !DILocation(line: 2633, column: 5, scope: !5265)
!5274 = !DILocation(line: 2634, column: 16, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 2634, column: 9)
!5276 = !DILocation(line: 2634, column: 21, scope: !5275)
!5277 = !DILocation(line: 2634, column: 9, scope: !5265)
!5278 = !DILocation(line: 2635, column: 23, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 2635, column: 9)
!5280 = !DILocation(line: 2635, column: 13, scope: !5279)
!5281 = !DILocation(line: 2635, column: 9, scope: !5265)
!5282 = !DILocation(line: 2636, column: 19, scope: !5265)
!5283 = !DILocation(line: 2636, column: 23, scope: !5265)
!5284 = !DILocation(line: 2636, column: 28, scope: !5265)
!5285 = !DILocation(line: 2636, column: 5, scope: !5265)
!5286 = !DILocation(line: 0, scope: !5265)
!5287 = !DILocation(line: 2637, column: 1, scope: !5265)
!5288 = distinct !DISubprogram(name: "RM_CallReplyInteger", scope: !3, file: !3, line: 2640, type: !5289, isLocal: false, isDefinition: true, scopeLine: 2640, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5291)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{!112, !1806}
!5291 = !{!5292}
!5292 = !DILocalVariable(name: "reply", arg: 1, scope: !5288, file: !3, line: 2640, type: !1806)
!5293 = !DILocation(line: 2640, column: 53, scope: !5288)
!5294 = !DILocation(line: 2641, column: 5, scope: !5288)
!5295 = !DILocation(line: 2642, column: 16, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 2642, column: 9)
!5297 = !DILocation(line: 2642, column: 21, scope: !5296)
!5298 = !DILocation(line: 2642, column: 9, scope: !5288)
!5299 = !DILocation(line: 2643, column: 19, scope: !5288)
!5300 = !DILocation(line: 2643, column: 23, scope: !5288)
!5301 = !DILocation(line: 2643, column: 5, scope: !5288)
!5302 = !DILocation(line: 0, scope: !5288)
!5303 = !DILocation(line: 2644, column: 1, scope: !5288)
!5304 = distinct !DISubprogram(name: "RM_CallReplyStringPtr", scope: !3, file: !3, line: 2647, type: !5305, isLocal: false, isDefinition: true, scopeLine: 2647, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5307)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!523, !1806, !2310}
!5307 = !{!5308, !5309}
!5308 = !DILocalVariable(name: "reply", arg: 1, scope: !5304, file: !3, line: 2647, type: !1806)
!5309 = !DILocalVariable(name: "len", arg: 2, scope: !5304, file: !3, line: 2647, type: !2310)
!5310 = !DILocation(line: 2647, column: 57, scope: !5304)
!5311 = !DILocation(line: 2647, column: 72, scope: !5304)
!5312 = !DILocation(line: 2648, column: 5, scope: !5304)
!5313 = !DILocation(line: 2649, column: 16, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 2649, column: 9)
!5315 = !DILocation(line: 2649, column: 49, scope: !5314)
!5316 = !DILocation(line: 2651, column: 9, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 2651, column: 9)
!5318 = !DILocation(line: 2651, column: 9, scope: !5304)
!5319 = !DILocation(line: 2651, column: 28, scope: !5317)
!5320 = !DILocation(line: 2651, column: 19, scope: !5317)
!5321 = !DILocation(line: 2651, column: 14, scope: !5317)
!5322 = !DILocation(line: 2652, column: 23, scope: !5304)
!5323 = !DILocation(line: 2652, column: 5, scope: !5304)
!5324 = !DILocation(line: 0, scope: !5304)
!5325 = !DILocation(line: 2653, column: 1, scope: !5304)
!5326 = distinct !DISubprogram(name: "RM_CreateStringFromCallReply", scope: !3, file: !3, line: 2657, type: !5327, isLocal: false, isDefinition: true, scopeLine: 2657, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5329)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{!143, !1806}
!5329 = !{!5330, !5331, !5337}
!5330 = !DILocalVariable(name: "reply", arg: 1, scope: !5326, file: !3, line: 2657, type: !1806)
!5331 = !DILocalVariable(name: "buf", scope: !5332, file: !3, line: 2664, type: !5334)
!5332 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 2663, column: 37)
!5333 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 2659, column: 25)
!5334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 512, elements: !5335)
!5335 = !{!5336}
!5336 = !DISubrange(count: 64)
!5337 = !DILocalVariable(name: "len", scope: !5332, file: !3, line: 2665, type: !17)
!5338 = !DILocation(line: 2657, column: 71, scope: !5326)
!5339 = !DILocation(line: 2658, column: 5, scope: !5326)
!5340 = !DILocation(line: 2659, column: 19, scope: !5326)
!5341 = !DILocation(line: 2659, column: 5, scope: !5326)
!5342 = !DILocation(line: 2662, column: 39, scope: !5333)
!5343 = !DILocation(line: 2662, column: 54, scope: !5333)
!5344 = !DILocation(line: 2662, column: 65, scope: !5333)
!5345 = !DILocation(line: 872, column: 52, scope: !1993, inlinedAt: !5346)
!5346 = distinct !DILocation(line: 2662, column: 16, scope: !5333)
!5347 = !DILocation(line: 872, column: 69, scope: !1993, inlinedAt: !5346)
!5348 = !DILocation(line: 872, column: 81, scope: !1993, inlinedAt: !5346)
!5349 = !DILocation(line: 873, column: 28, scope: !1993, inlinedAt: !5346)
!5350 = !DILocation(line: 873, column: 24, scope: !1993, inlinedAt: !5346)
!5351 = !DILocation(line: 874, column: 13, scope: !2007, inlinedAt: !5346)
!5352 = !DILocation(line: 874, column: 9, scope: !1993, inlinedAt: !5346)
!5353 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !5354)
!5354 = distinct !DILocation(line: 874, column: 22, scope: !2007, inlinedAt: !5346)
!5355 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !5354)
!5356 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !5354)
!5357 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !5354)
!5358 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !5354)
!5359 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !5354)
!5360 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !5354)
!5361 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !5354)
!5362 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !5354)
!5363 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !5354)
!5364 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !5354)
!5365 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !5354)
!5366 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !5354)
!5367 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !5354)
!5368 = !DILocation(line: 0, scope: !1724, inlinedAt: !5354)
!5369 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !5354)
!5370 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !5354)
!5371 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !5354)
!5372 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !5354)
!5373 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !5354)
!5374 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !5354)
!5375 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !5354)
!5376 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !5354)
!5377 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !5354)
!5378 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !5354)
!5379 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !5354)
!5380 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !5354)
!5381 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !5354)
!5382 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !5354)
!5383 = !DILocation(line: 2664, column: 9, scope: !5332)
!5384 = !DILocation(line: 2664, column: 14, scope: !5332)
!5385 = !DILocation(line: 2665, column: 52, scope: !5332)
!5386 = !DILocation(line: 2665, column: 56, scope: !5332)
!5387 = !DILocation(line: 2665, column: 19, scope: !5332)
!5388 = !DILocation(line: 2665, column: 13, scope: !5332)
!5389 = !DILocation(line: 2666, column: 39, scope: !5332)
!5390 = !DILocation(line: 2666, column: 47, scope: !5332)
!5391 = !DILocation(line: 872, column: 52, scope: !1993, inlinedAt: !5392)
!5392 = distinct !DILocation(line: 2666, column: 16, scope: !5332)
!5393 = !DILocation(line: 872, column: 69, scope: !1993, inlinedAt: !5392)
!5394 = !DILocation(line: 872, column: 81, scope: !1993, inlinedAt: !5392)
!5395 = !DILocation(line: 873, column: 28, scope: !1993, inlinedAt: !5392)
!5396 = !DILocation(line: 873, column: 24, scope: !1993, inlinedAt: !5392)
!5397 = !DILocation(line: 874, column: 13, scope: !2007, inlinedAt: !5392)
!5398 = !DILocation(line: 874, column: 9, scope: !1993, inlinedAt: !5392)
!5399 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !5400)
!5400 = distinct !DILocation(line: 874, column: 22, scope: !2007, inlinedAt: !5392)
!5401 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !5400)
!5402 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !5400)
!5403 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !5400)
!5404 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !5400)
!5405 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !5400)
!5406 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !5400)
!5407 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !5400)
!5408 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !5400)
!5409 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !5400)
!5410 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !5400)
!5411 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !5400)
!5412 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !5400)
!5413 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !5400)
!5414 = !DILocation(line: 0, scope: !1724, inlinedAt: !5400)
!5415 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !5400)
!5416 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !5400)
!5417 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !5400)
!5418 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !5400)
!5419 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !5400)
!5420 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !5400)
!5421 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !5400)
!5422 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !5400)
!5423 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !5400)
!5424 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !5400)
!5425 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !5400)
!5426 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !5400)
!5427 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !5400)
!5428 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !5400)
!5429 = !DILocation(line: 2667, column: 9, scope: !5333)
!5430 = !DILocation(line: 0, scope: !5333)
!5431 = !DILocation(line: 2670, column: 1, scope: !5326)
!5432 = distinct !DISubprogram(name: "RM_Call", scope: !3, file: !3, line: 2755, type: !5433, isLocal: false, isDefinition: true, scopeLine: 2755, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5435)
!5433 = !DISubroutineType(types: !5434)
!5434 = !{!1806, !584, !523, !523, null}
!5435 = !{!5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449}
!5436 = !DILocalVariable(name: "ctx", arg: 1, scope: !5432, file: !3, line: 2755, type: !584)
!5437 = !DILocalVariable(name: "cmdname", arg: 2, scope: !5432, file: !3, line: 2755, type: !523)
!5438 = !DILocalVariable(name: "fmt", arg: 3, scope: !5432, file: !3, line: 2755, type: !523)
!5439 = !DILocalVariable(name: "cmd", scope: !5432, file: !3, line: 2756, type: !18)
!5440 = !DILocalVariable(name: "c", scope: !5432, file: !3, line: 2757, type: !27)
!5441 = !DILocalVariable(name: "argv", scope: !5432, file: !3, line: 2758, type: !165)
!5442 = !DILocalVariable(name: "argc", scope: !5432, file: !3, line: 2759, type: !17)
!5443 = !DILocalVariable(name: "flags", scope: !5432, file: !3, line: 2759, type: !17)
!5444 = !DILocalVariable(name: "ap", scope: !5432, file: !3, line: 2760, type: !2048)
!5445 = !DILocalVariable(name: "reply", scope: !5432, file: !3, line: 2761, type: !1806)
!5446 = !DILocalVariable(name: "replicate", scope: !5432, file: !3, line: 2762, type: !17)
!5447 = !DILocalVariable(name: "call_flags", scope: !5432, file: !3, line: 2822, type: !17)
!5448 = !DILocalVariable(name: "proto", scope: !5432, file: !3, line: 2832, type: !154)
!5449 = !DILocalVariable(name: "o", scope: !5450, file: !3, line: 2835, type: !5451)
!5450 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 2834, column: 33)
!5451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5452, size: 64)
!5452 = !DIDerivedType(tag: DW_TAG_typedef, name: "clientReplyBlock", file: !13, line: 642, baseType: !5453)
!5453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clientReplyBlock", file: !13, line: 639, size: 128, elements: !5454)
!5454 = !{!5455, !5456, !5457}
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5453, file: !13, line: 640, baseType: !157, size: 64)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !5453, file: !13, line: 640, baseType: !157, size: 64, offset: 64)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5453, file: !13, line: 641, baseType: !623, offset: 128)
!5458 = !DILocation(line: 2755, column: 47, scope: !5432)
!5459 = !DILocation(line: 2755, column: 64, scope: !5432)
!5460 = !DILocation(line: 2755, column: 85, scope: !5432)
!5461 = !DILocation(line: 2757, column: 13, scope: !5432)
!5462 = !DILocation(line: 2758, column: 12, scope: !5432)
!5463 = !DILocation(line: 2759, column: 5, scope: !5432)
!5464 = !DILocation(line: 2759, column: 9, scope: !5432)
!5465 = !DILocation(line: 2759, column: 19, scope: !5432)
!5466 = !DILocation(line: 2760, column: 5, scope: !5432)
!5467 = !DILocation(line: 2760, column: 13, scope: !5432)
!5468 = !DILocation(line: 2761, column: 27, scope: !5432)
!5469 = !DILocation(line: 2762, column: 9, scope: !5432)
!5470 = !DILocation(line: 2765, column: 5, scope: !5432)
!5471 = !DILocation(line: 2766, column: 9, scope: !5432)
!5472 = !DILocation(line: 2767, column: 12, scope: !5432)
!5473 = !DILocation(line: 2768, column: 17, scope: !5432)
!5474 = !DILocation(line: 2768, column: 23, scope: !5432)
!5475 = !DILocation(line: 2769, column: 5, scope: !5432)
!5476 = !DILocation(line: 2772, column: 8, scope: !5432)
!5477 = !DILocation(line: 2772, column: 14, scope: !5432)
!5478 = !DILocation(line: 2773, column: 18, scope: !5432)
!5479 = !DILocation(line: 2773, column: 26, scope: !5432)
!5480 = !DILocation(line: 2773, column: 8, scope: !5432)
!5481 = !DILocation(line: 2773, column: 11, scope: !5432)
!5482 = !DILocation(line: 2774, column: 8, scope: !5432)
!5483 = !DILocation(line: 2774, column: 13, scope: !5432)
!5484 = !DILocation(line: 2775, column: 15, scope: !5432)
!5485 = !DILocation(line: 2775, column: 8, scope: !5432)
!5486 = !DILocation(line: 2775, column: 13, scope: !5432)
!5487 = !DILocation(line: 2776, column: 14, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 2776, column: 9)
!5489 = !DILocation(line: 2776, column: 9, scope: !5488)
!5490 = !DILocation(line: 2776, column: 9, scope: !5432)
!5491 = !DILocation(line: 2776, column: 35, scope: !5488)
!5492 = !DILocation(line: 2776, column: 42, scope: !5488)
!5493 = !DILocation(line: 2776, column: 22, scope: !5488)
!5494 = !DILocation(line: 2780, column: 14, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 2780, column: 9)
!5496 = !DILocation(line: 2780, column: 9, scope: !5432)
!5497 = !DILocation(line: 2783, column: 5, scope: !5432)
!5498 = !DILocation(line: 2788, column: 28, scope: !5432)
!5499 = !DILocation(line: 2788, column: 25, scope: !5432)
!5500 = !DILocation(line: 2788, column: 37, scope: !5432)
!5501 = !DILocation(line: 2788, column: 11, scope: !5432)
!5502 = !DILocation(line: 2756, column: 26, scope: !5432)
!5503 = !DILocation(line: 2789, column: 10, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 2789, column: 9)
!5505 = !DILocation(line: 2789, column: 9, scope: !5432)
!5506 = !DILocation(line: 2790, column: 9, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 2789, column: 15)
!5508 = !DILocation(line: 2790, column: 15, scope: !5507)
!5509 = !DILocation(line: 2791, column: 9, scope: !5507)
!5510 = !DILocation(line: 2793, column: 17, scope: !5432)
!5511 = !DILocation(line: 2793, column: 25, scope: !5432)
!5512 = !{!1255, !892, i64 88}
!5513 = !DILocation(line: 2793, column: 8, scope: !5432)
!5514 = !DILocation(line: 2793, column: 12, scope: !5432)
!5515 = !DILocation(line: 2796, column: 15, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 2796, column: 9)
!5517 = !DILocation(line: 2796, column: 21, scope: !5516)
!5518 = !DILocation(line: 2796, column: 39, scope: !5516)
!5519 = !DILocation(line: 2796, column: 25, scope: !5516)
!5520 = !DILocation(line: 2796, column: 59, scope: !5516)
!5521 = !DILocation(line: 2796, column: 57, scope: !5516)
!5522 = !DILocation(line: 2797, column: 9, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 2796, column: 73)
!5524 = !DILocation(line: 2797, column: 15, scope: !5523)
!5525 = !DILocation(line: 2798, column: 9, scope: !5523)
!5526 = !DILocation(line: 2804, column: 16, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 2804, column: 9)
!5528 = !DILocation(line: 2804, column: 9, scope: !5527)
!5529 = !DILocation(line: 2804, column: 32, scope: !5527)
!5530 = !DILocation(line: 2804, column: 42, scope: !5527)
!5531 = !DILocation(line: 2804, column: 50, scope: !5527)
!5532 = !DILocation(line: 2804, column: 56, scope: !5527)
!5533 = !DILocation(line: 2804, column: 9, scope: !5432)
!5534 = !DILocation(line: 2806, column: 18, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 2804, column: 74)
!5536 = !DILocation(line: 2807, column: 34, scope: !5535)
!5537 = !DILocation(line: 2807, column: 40, scope: !5535)
!5538 = !DILocation(line: 2807, column: 18, scope: !5535)
!5539 = !DILocation(line: 2808, column: 40, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 2808, column: 13)
!5541 = !DILocation(line: 2808, column: 48, scope: !5540)
!5542 = !DILocation(line: 2808, column: 13, scope: !5540)
!5543 = !DILocation(line: 2809, column: 35, scope: !5540)
!5544 = !{!1045, !892, i64 2944}
!5545 = !DILocation(line: 2809, column: 44, scope: !5540)
!5546 = !{!5547, !892, i64 0}
!5547 = !{!"clusterState", !892, i64 0, !1046, i64 8, !895, i64 16, !895, i64 20, !892, i64 24, !892, i64 32, !893, i64 40, !893, i64 131112, !893, i64 262184, !893, i64 393256, !892, i64 524328, !1047, i64 524336, !895, i64 524344, !895, i64 524348, !895, i64 524352, !1046, i64 524360, !895, i64 524368, !1047, i64 524376, !892, i64 524384, !1047, i64 524392, !895, i64 524400, !1046, i64 524408, !895, i64 524416, !893, i64 524424, !893, i64 524504, !1047, i64 524584}
!5548 = !DILocation(line: 2808, column: 64, scope: !5540)
!5549 = !DILocation(line: 2808, column: 13, scope: !5535)
!5550 = !DILocation(line: 2811, column: 13, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 2810, column: 9)
!5552 = !DILocation(line: 2811, column: 19, scope: !5551)
!5553 = !DILocation(line: 2812, column: 13, scope: !5551)
!5554 = !DILocation(line: 2819, column: 9, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 2819, column: 9)
!5556 = !DILocation(line: 2819, column: 9, scope: !5432)
!5557 = !DILocation(line: 1311, column: 51, scope: !2933, inlinedAt: !5558)
!5558 = distinct !DILocation(line: 2819, column: 20, scope: !5555)
!5559 = !DILocation(line: 1314, column: 14, scope: !2938, inlinedAt: !5558)
!5560 = !DILocation(line: 1314, column: 22, scope: !2938, inlinedAt: !5558)
!5561 = !DILocation(line: 1314, column: 28, scope: !2938, inlinedAt: !5558)
!5562 = !DILocation(line: 1314, column: 9, scope: !2933, inlinedAt: !5558)
!5563 = !DILocation(line: 1316, column: 14, scope: !2943, inlinedAt: !5558)
!5564 = !DILocation(line: 1316, column: 9, scope: !2933, inlinedAt: !5558)
!5565 = !DILocation(line: 1321, column: 5, scope: !2933, inlinedAt: !5558)
!5566 = !DILocation(line: 1322, column: 16, scope: !2933, inlinedAt: !5558)
!5567 = !DILocation(line: 1323, column: 1, scope: !2933, inlinedAt: !5558)
!5568 = !DILocation(line: 2822, column: 9, scope: !5432)
!5569 = !DILocation(line: 2823, column: 9, scope: !5432)
!5570 = !DILocation(line: 2827, column: 5, scope: !5432)
!5571 = !DILocation(line: 2832, column: 27, scope: !5432)
!5572 = !DILocation(line: 2832, column: 37, scope: !5432)
!5573 = !{!1255, !895, i64 528}
!5574 = !DILocation(line: 2832, column: 34, scope: !5432)
!5575 = !DILocation(line: 2832, column: 17, scope: !5432)
!5576 = !DILocation(line: 2832, column: 9, scope: !5432)
!5577 = !DILocation(line: 2833, column: 15, scope: !5432)
!5578 = !DILocation(line: 2834, column: 11, scope: !5432)
!5579 = !{!1255, !892, i64 112}
!5580 = !{!5581, !1046, i64 40}
!5581 = !{!"list", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !1046, i64 40}
!5582 = !DILocation(line: 2834, column: 5, scope: !5432)
!5583 = !DILocation(line: 2835, column: 31, scope: !5450)
!5584 = !{!5581, !892, i64 0}
!5585 = !{!5586, !892, i64 16}
!5586 = !{!"listNode", !892, i64 0, !892, i64 8, !892, i64 16}
!5587 = !DILocation(line: 2835, column: 27, scope: !5450)
!5588 = !DILocation(line: 2837, column: 33, scope: !5450)
!5589 = !DILocation(line: 2837, column: 43, scope: !5450)
!5590 = !DILocation(line: 2837, column: 17, scope: !5450)
!5591 = !DILocation(line: 2838, column: 24, scope: !5450)
!5592 = !DILocation(line: 2838, column: 30, scope: !5450)
!5593 = !DILocation(line: 2838, column: 9, scope: !5450)
!5594 = distinct !{!5594, !5582, !5595}
!5595 = !DILocation(line: 2839, column: 5, scope: !5432)
!5596 = !DILocation(line: 0, scope: !5450)
!5597 = !DILocation(line: 2840, column: 13, scope: !5432)
!5598 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !5599)
!5599 = distinct !DILocation(line: 2841, column: 5, scope: !5432)
!5600 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !5599)
!5601 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !5599)
!5602 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !5599)
!5603 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !5599)
!5604 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !5599)
!5605 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !5599)
!5606 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !5599)
!5607 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !5599)
!5608 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !5599)
!5609 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !5599)
!5610 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !5599)
!5611 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !5599)
!5612 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !5599)
!5613 = !DILocation(line: 0, scope: !1724, inlinedAt: !5599)
!5614 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !5599)
!5615 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !5599)
!5616 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !5599)
!5617 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !5599)
!5618 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !5599)
!5619 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !5599)
!5620 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !5599)
!5621 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !5599)
!5622 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !5599)
!5623 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !5599)
!5624 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !5599)
!5625 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !5599)
!5626 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !5599)
!5627 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !5599)
!5628 = !DILocation(line: 0, scope: !5432)
!5629 = !DILocation(line: 2844, column: 14, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 2844, column: 9)
!5631 = !DILocation(line: 2844, column: 9, scope: !5630)
!5632 = !DILocation(line: 2844, column: 9, scope: !5432)
!5633 = !DILocation(line: 2844, column: 35, scope: !5630)
!5634 = !DILocation(line: 2844, column: 42, scope: !5630)
!5635 = !DILocation(line: 2844, column: 22, scope: !5630)
!5636 = !DILocation(line: 2845, column: 5, scope: !5432)
!5637 = !DILocation(line: 2847, column: 1, scope: !5432)
!5638 = !DILocation(line: 2846, column: 5, scope: !5432)
!5639 = distinct !DISubprogram(name: "moduleCallCommandFilters", scope: !3, file: !3, line: 4972, type: !25, isLocal: false, isDefinition: true, scopeLine: 4972, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5640)
!5640 = !{!5641, !5642, !5643, !5644, !5650}
!5641 = !DILocalVariable(name: "c", arg: 1, scope: !5639, file: !3, line: 4972, type: !27)
!5642 = !DILocalVariable(name: "li", scope: !5639, file: !3, line: 4975, type: !759)
!5643 = !DILocalVariable(name: "ln", scope: !5639, file: !3, line: 4976, type: !120)
!5644 = !DILocalVariable(name: "filter", scope: !5639, file: !3, line: 4979, type: !5645)
!5645 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCommandFilterCtx", file: !3, line: 279, baseType: !5646)
!5646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCommandFilterCtx", file: !3, line: 276, size: 128, elements: !5647)
!5647 = !{!5648, !5649}
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !5646, file: !3, line: 277, baseType: !165, size: 64)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !5646, file: !3, line: 278, baseType: !17, size: 32, offset: 64)
!5650 = !DILocalVariable(name: "f", scope: !5651, file: !3, line: 4985, type: !5652)
!5651 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 4984, column: 33)
!5652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5653, size: 64)
!5653 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCommandFilter", file: !3, line: 290, baseType: !5654)
!5654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCommandFilter", file: !3, line: 283, size: 192, elements: !5655)
!5655 = !{!5656, !5657, !5663}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5654, file: !3, line: 285, baseType: !577, size: 64)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !5654, file: !3, line: 287, baseType: !5658, size: 64, offset: 64)
!5658 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCommandFilterFunc", file: !3, line: 281, baseType: !5659)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{null, !5662}
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5654, file: !3, line: 289, baseType: !17, size: 32, offset: 128)
!5664 = !DILocation(line: 4972, column: 39, scope: !5639)
!5665 = !DILocation(line: 4973, column: 9, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 4973, column: 9)
!5667 = !DILocation(line: 4973, column: 42, scope: !5666)
!5668 = !DILocation(line: 4973, column: 9, scope: !5639)
!5669 = !DILocation(line: 4975, column: 5, scope: !5639)
!5670 = !DILocation(line: 4975, column: 14, scope: !5639)
!5671 = !DILocation(line: 4977, column: 5, scope: !5639)
!5672 = !DILocation(line: 4979, column: 5, scope: !5639)
!5673 = !DILocation(line: 4980, column: 20, scope: !5639)
!5674 = !DILocation(line: 4979, column: 42, scope: !5639)
!5675 = !{!5676, !892, i64 0}
!5676 = !{!"RedisModuleCommandFilterCtx", !892, i64 0, !895, i64 8}
!5677 = !DILocation(line: 4981, column: 20, scope: !5639)
!5678 = !{!5676, !895, i64 8}
!5679 = !DILocation(line: 4984, column: 17, scope: !5639)
!5680 = !DILocation(line: 4976, column: 15, scope: !5639)
!5681 = !DILocation(line: 4984, column: 5, scope: !5639)
!5682 = !DILocation(line: 4985, column: 43, scope: !5651)
!5683 = !DILocation(line: 4985, column: 35, scope: !5651)
!5684 = !DILocation(line: 4990, column: 17, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 4990, column: 13)
!5686 = !{!5687, !895, i64 16}
!5687 = !{!"RedisModuleCommandFilter", !892, i64 0, !892, i64 8, !895, i64 16}
!5688 = !DILocation(line: 4990, column: 23, scope: !5685)
!5689 = !DILocation(line: 4990, column: 55, scope: !5685)
!5690 = !DILocation(line: 4990, column: 61, scope: !5685)
!5691 = !{!5687, !892, i64 0}
!5692 = !DILocation(line: 4990, column: 69, scope: !5685)
!5693 = !DILocation(line: 4990, column: 58, scope: !5685)
!5694 = !DILocation(line: 4990, column: 13, scope: !5651)
!5695 = distinct !{!5695, !5681, !5696}
!5696 = !DILocation(line: 4994, column: 5, scope: !5639)
!5697 = !DILocation(line: 4993, column: 12, scope: !5651)
!5698 = !{!5687, !892, i64 8}
!5699 = !DILocation(line: 4979, column: 33, scope: !5639)
!5700 = !DILocation(line: 4993, column: 9, scope: !5651)
!5701 = !DILocation(line: 4996, column: 22, scope: !5639)
!5702 = !DILocation(line: 4997, column: 22, scope: !5639)
!5703 = !DILocation(line: 4996, column: 13, scope: !5639)
!5704 = !DILocation(line: 4997, column: 13, scope: !5639)
!5705 = !DILocation(line: 4998, column: 1, scope: !5639)
!5706 = distinct !DISubprogram(name: "RM_CallReplyProto", scope: !3, file: !3, line: 2851, type: !5305, isLocal: false, isDefinition: true, scopeLine: 2851, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5707)
!5707 = !{!5708, !5709}
!5708 = !DILocalVariable(name: "reply", arg: 1, scope: !5706, file: !3, line: 2851, type: !1806)
!5709 = !DILocalVariable(name: "len", arg: 2, scope: !5706, file: !3, line: 2851, type: !2310)
!5710 = !DILocation(line: 2851, column: 53, scope: !5706)
!5711 = !DILocation(line: 2851, column: 68, scope: !5706)
!5712 = !DILocation(line: 2852, column: 16, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 2852, column: 9)
!5714 = !DILocation(line: 2852, column: 9, scope: !5713)
!5715 = !DILocation(line: 2852, column: 9, scope: !5706)
!5716 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !5717)
!5717 = distinct !DILocation(line: 2852, column: 30, scope: !5713)
!5718 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !5717)
!5719 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !5717)
!5720 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !5717)
!5721 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !5717)
!5722 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !5717)
!5723 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !5717)
!5724 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !5717)
!5725 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !5717)
!5726 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !5717)
!5727 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !5717)
!5728 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !5717)
!5729 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !5717)
!5730 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !5717)
!5731 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !5717)
!5732 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !5717)
!5733 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !5717)
!5734 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !5717)
!5735 = !DILocation(line: 0, scope: !2343, inlinedAt: !5717)
!5736 = !DILocation(line: 2852, column: 28, scope: !5713)
!5737 = !DILocation(line: 2852, column: 23, scope: !5713)
!5738 = !DILocation(line: 2853, column: 5, scope: !5706)
!5739 = distinct !DISubprogram(name: "moduleTypeEncodeId", scope: !3, file: !3, line: 2894, type: !5740, isLocal: false, isDefinition: true, scopeLine: 2894, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5742)
!5740 = !DISubroutineType(types: !5741)
!5741 = !{!32, !523, !17}
!5742 = !{!5743, !5744, !5745, !5746, !5747, !5749, !5752}
!5743 = !DILocalVariable(name: "name", arg: 1, scope: !5739, file: !3, line: 2894, type: !523)
!5744 = !DILocalVariable(name: "encver", arg: 2, scope: !5739, file: !3, line: 2894, type: !17)
!5745 = !DILocalVariable(name: "cset", scope: !5739, file: !3, line: 2897, type: !523)
!5746 = !DILocalVariable(name: "id", scope: !5739, file: !3, line: 2901, type: !32)
!5747 = !DILocalVariable(name: "j", scope: !5748, file: !3, line: 2902, type: !17)
!5748 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 2902, column: 5)
!5749 = !DILocalVariable(name: "p", scope: !5750, file: !3, line: 2903, type: !9)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 2902, column: 33)
!5751 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 2902, column: 5)
!5752 = !DILocalVariable(name: "pos", scope: !5750, file: !3, line: 2905, type: !7)
!5753 = !DILocation(line: 2894, column: 41, scope: !5739)
!5754 = !DILocation(line: 2894, column: 51, scope: !5739)
!5755 = !DILocation(line: 2897, column: 24, scope: !5739)
!5756 = !DILocation(line: 2897, column: 17, scope: !5739)
!5757 = !DILocation(line: 2898, column: 9, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 2898, column: 9)
!5759 = !DILocation(line: 2898, column: 22, scope: !5758)
!5760 = !DILocation(line: 2899, column: 20, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 2899, column: 9)
!5762 = !DILocation(line: 2898, column: 9, scope: !5739)
!5763 = !DILocation(line: 2902, column: 14, scope: !5748)
!5764 = !DILocation(line: 2901, column: 14, scope: !5739)
!5765 = !DILocation(line: 2903, column: 31, scope: !5750)
!5766 = !DILocation(line: 2903, column: 19, scope: !5750)
!5767 = !DILocation(line: 2903, column: 15, scope: !5750)
!5768 = !DILocation(line: 2904, column: 14, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 2904, column: 13)
!5770 = !DILocation(line: 2904, column: 13, scope: !5750)
!5771 = !DILocation(line: 0, scope: !5739)
!5772 = !DILocation(line: 2910, column: 1, scope: !5739)
!5773 = !DILocation(line: 2905, column: 30, scope: !5750)
!5774 = !DILocation(line: 2905, column: 23, scope: !5750)
!5775 = !DILocation(line: 2906, column: 18, scope: !5750)
!5776 = !DILocation(line: 2906, column: 24, scope: !5750)
!5777 = !DILocation(line: 2908, column: 14, scope: !5739)
!5778 = !DILocation(line: 2908, column: 23, scope: !5739)
!5779 = !DILocation(line: 2908, column: 21, scope: !5739)
!5780 = !DILocation(line: 2909, column: 5, scope: !5739)
!5781 = distinct !DISubprogram(name: "moduleTypeLookupModuleByName", scope: !3, file: !3, line: 2915, type: !5782, isLocal: false, isDefinition: true, scopeLine: 2915, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5784)
!5782 = !DISubroutineType(types: !5783)
!5783 = !{!267, !523}
!5784 = !{!5785, !5786, !5787, !5788, !5790, !5791, !5792}
!5785 = !DILocalVariable(name: "name", arg: 1, scope: !5781, file: !3, line: 2915, type: !523)
!5786 = !DILocalVariable(name: "di", scope: !5781, file: !3, line: 2916, type: !744)
!5787 = !DILocalVariable(name: "de", scope: !5781, file: !3, line: 2917, type: !81)
!5788 = !DILocalVariable(name: "module", scope: !5789, file: !3, line: 2920, type: !273)
!5789 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 2919, column: 41)
!5790 = !DILocalVariable(name: "li", scope: !5789, file: !3, line: 2921, type: !759)
!5791 = !DILocalVariable(name: "ln", scope: !5789, file: !3, line: 2922, type: !120)
!5792 = !DILocalVariable(name: "mt", scope: !5793, file: !3, line: 2926, type: !267)
!5793 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 2925, column: 37)
!5794 = !DILocation(line: 2915, column: 54, scope: !5781)
!5795 = !DILocation(line: 2916, column: 40, scope: !5781)
!5796 = !DILocation(line: 2916, column: 24, scope: !5781)
!5797 = !DILocation(line: 2916, column: 19, scope: !5781)
!5798 = !DILocation(line: 2919, column: 18, scope: !5781)
!5799 = !DILocation(line: 2917, column: 16, scope: !5781)
!5800 = !DILocation(line: 2919, column: 32, scope: !5781)
!5801 = !DILocation(line: 2919, column: 5, scope: !5781)
!5802 = !DILocation(line: 2920, column: 38, scope: !5789)
!5803 = !DILocation(line: 2920, column: 29, scope: !5789)
!5804 = !DILocation(line: 2921, column: 9, scope: !5789)
!5805 = !DILocation(line: 2924, column: 28, scope: !5789)
!5806 = !DILocation(line: 2921, column: 18, scope: !5789)
!5807 = !DILocation(line: 2924, column: 9, scope: !5789)
!5808 = !DILocation(line: 2925, column: 9, scope: !5789)
!5809 = !DILocation(line: 2925, column: 21, scope: !5789)
!5810 = !DILocation(line: 2922, column: 19, scope: !5789)
!5811 = !DILocation(line: 2926, column: 34, scope: !5793)
!5812 = !DILocation(line: 2926, column: 25, scope: !5793)
!5813 = !DILocation(line: 2927, column: 29, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 2927, column: 17)
!5815 = !DILocation(line: 2927, column: 17, scope: !5814)
!5816 = !DILocation(line: 2927, column: 56, scope: !5814)
!5817 = !DILocation(line: 2927, column: 17, scope: !5793)
!5818 = !DILocation(line: 2928, column: 17, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 2927, column: 62)
!5820 = !DILocation(line: 2932, column: 5, scope: !5781)
!5821 = !DILocation(line: 2933, column: 5, scope: !5781)
!5822 = !DILocation(line: 2934, column: 5, scope: !5781)
!5823 = !DILocation(line: 0, scope: !5781)
!5824 = !DILocation(line: 2935, column: 1, scope: !5781)
!5825 = !DILocation(line: 2942, column: 49, scope: !736)
!5826 = !DILocation(line: 2949, column: 9, scope: !736)
!5827 = !DILocation(line: 2950, column: 58, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 2950, column: 5)
!5829 = distinct !DILexicalBlock(scope: !736, file: !3, line: 2950, column: 5)
!5830 = !{!5831, !892, i64 8}
!5831 = !{!"", !1046, i64 0, !892, i64 8}
!5832 = !DILocation(line: 2950, column: 61, scope: !5828)
!5833 = !DILocation(line: 2950, column: 5, scope: !5829)
!5834 = !DILocation(line: 2951, column: 22, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 2951, column: 13)
!5836 = !{!5831, !1046, i64 0}
!5837 = !DILocation(line: 2951, column: 25, scope: !5835)
!5838 = !DILocation(line: 2951, column: 13, scope: !5828)
!5839 = !DILocation(line: 2950, column: 19, scope: !5828)
!5840 = !DILocation(line: 2954, column: 17, scope: !736)
!5841 = !DILocation(line: 2955, column: 40, scope: !736)
!5842 = !DILocation(line: 2955, column: 24, scope: !736)
!5843 = !DILocation(line: 2955, column: 19, scope: !736)
!5844 = !DILocation(line: 2958, column: 18, scope: !736)
!5845 = !DILocation(line: 2956, column: 16, scope: !736)
!5846 = !DILocation(line: 2958, column: 32, scope: !736)
!5847 = !DILocation(line: 2958, column: 5, scope: !736)
!5848 = !DILocation(line: 2974, column: 5, scope: !736)
!5849 = !DILocation(line: 2977, column: 12, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !736, file: !3, line: 2977, column: 9)
!5851 = !DILocation(line: 2959, column: 38, scope: !757)
!5852 = !DILocation(line: 2959, column: 29, scope: !757)
!5853 = !DILocation(line: 2960, column: 9, scope: !757)
!5854 = !DILocation(line: 2963, column: 28, scope: !757)
!5855 = !DILocation(line: 2960, column: 18, scope: !757)
!5856 = !DILocation(line: 2963, column: 9, scope: !757)
!5857 = !DILocation(line: 2964, column: 9, scope: !757)
!5858 = !DILocation(line: 2964, column: 21, scope: !757)
!5859 = !DILocation(line: 2961, column: 19, scope: !757)
!5860 = !DILocation(line: 2965, column: 39, scope: !766)
!5861 = !DILocation(line: 2965, column: 25, scope: !766)
!5862 = !DILocation(line: 2968, column: 26, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !766, file: !3, line: 2968, column: 17)
!5864 = !{!5865, !1046, i64 0}
!5865 = !{!"RedisModuleType", !1046, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !892, i64 56, !892, i64 64, !892, i64 72, !895, i64 80, !893, i64 84}
!5866 = !DILocation(line: 2968, column: 35, scope: !5863)
!5867 = distinct !{!5867, !5857, !5868}
!5868 = !DILocation(line: 2972, column: 9, scope: !757)
!5869 = !DILocation(line: 0, scope: !736)
!5870 = !DILocation(line: 2973, column: 5, scope: !736)
!5871 = !DILocation(line: 2958, column: 46, scope: !736)
!5872 = !DILocation(line: 2958, column: 40, scope: !736)
!5873 = distinct !{!5873, !5847, !5870}
!5874 = !DILocation(line: 2977, column: 9, scope: !5850)
!5875 = !DILocation(line: 2978, column: 18, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 2977, column: 45)
!5877 = !DILocation(line: 2978, column: 21, scope: !5876)
!5878 = !DILocation(line: 2979, column: 18, scope: !5876)
!5879 = !DILocation(line: 2979, column: 21, scope: !5876)
!5880 = !DILocation(line: 2980, column: 5, scope: !5876)
!5881 = !DILocation(line: 2982, column: 1, scope: !736)
!5882 = distinct !DISubprogram(name: "moduleTypeNameByID", scope: !3, file: !3, line: 2988, type: !5883, isLocal: false, isDefinition: true, scopeLine: 2988, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5885)
!5883 = !DISubroutineType(types: !5884)
!5884 = !{null, !9, !32}
!5885 = !{!5886, !5887, !5888, !5889, !5890}
!5886 = !DILocalVariable(name: "name", arg: 1, scope: !5882, file: !3, line: 2988, type: !9)
!5887 = !DILocalVariable(name: "moduleid", arg: 2, scope: !5882, file: !3, line: 2988, type: !32)
!5888 = !DILocalVariable(name: "cset", scope: !5882, file: !3, line: 2989, type: !523)
!5889 = !DILocalVariable(name: "p", scope: !5882, file: !3, line: 2992, type: !9)
!5890 = !DILocalVariable(name: "j", scope: !5891, file: !3, line: 2994, type: !17)
!5891 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 2994, column: 5)
!5892 = !DILocation(line: 2988, column: 31, scope: !5882)
!5893 = !DILocation(line: 2988, column: 46, scope: !5882)
!5894 = !DILocation(line: 2989, column: 24, scope: !5882)
!5895 = !DILocation(line: 2989, column: 17, scope: !5882)
!5896 = !DILocation(line: 2991, column: 5, scope: !5882)
!5897 = !DILocation(line: 2991, column: 13, scope: !5882)
!5898 = !DILocation(line: 2992, column: 19, scope: !5882)
!5899 = !DILocation(line: 2992, column: 11, scope: !5882)
!5900 = !DILocation(line: 2993, column: 14, scope: !5882)
!5901 = !DILocation(line: 2994, column: 14, scope: !5891)
!5902 = !DILocation(line: 2995, column: 30, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 2994, column: 33)
!5904 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 2994, column: 5)
!5905 = !DILocation(line: 2995, column: 16, scope: !5903)
!5906 = !DILocation(line: 2995, column: 11, scope: !5903)
!5907 = !DILocation(line: 2995, column: 14, scope: !5903)
!5908 = !DILocation(line: 2996, column: 18, scope: !5903)
!5909 = !DILocation(line: 2998, column: 1, scope: !5882)
!5910 = !DILocation(line: 3064, column: 47, scope: !264)
!5911 = !DILocation(line: 3064, column: 64, scope: !264)
!5912 = !DILocation(line: 3064, column: 74, scope: !264)
!5913 = !DILocation(line: 3064, column: 88, scope: !264)
!5914 = !DILocation(line: 3065, column: 19, scope: !264)
!5915 = !DILocation(line: 3065, column: 14, scope: !264)
!5916 = !DILocation(line: 3066, column: 12, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !264, file: !3, line: 3066, column: 9)
!5918 = !DILocation(line: 3066, column: 9, scope: !264)
!5919 = !DILocation(line: 3067, column: 9, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !264, file: !3, line: 3067, column: 9)
!5921 = !DILocation(line: 3067, column: 44, scope: !5920)
!5922 = !DILocation(line: 3067, column: 9, scope: !264)
!5923 = !DILocation(line: 3069, column: 33, scope: !264)
!5924 = !DILocation(line: 3069, column: 32, scope: !264)
!5925 = !DILocation(line: 3069, column: 10, scope: !264)
!5926 = !DILocation(line: 3070, column: 29, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !264, file: !3, line: 3070, column: 9)
!5928 = !DILocation(line: 3070, column: 9, scope: !264)
!5929 = !DILocation(line: 3087, column: 22, scope: !264)
!5930 = !DILocation(line: 3087, column: 17, scope: !264)
!5931 = !DILocation(line: 3088, column: 9, scope: !264)
!5932 = !DILocation(line: 3088, column: 12, scope: !264)
!5933 = !DILocation(line: 3089, column: 23, scope: !264)
!5934 = !DILocation(line: 3089, column: 9, scope: !264)
!5935 = !DILocation(line: 3089, column: 16, scope: !264)
!5936 = !{!5865, !892, i64 8}
!5937 = !DILocation(line: 3090, column: 25, scope: !264)
!5938 = !DILocation(line: 3090, column: 9, scope: !264)
!5939 = !DILocation(line: 3090, column: 18, scope: !264)
!5940 = !DILocation(line: 3092, column: 28, scope: !264)
!5941 = !DILocation(line: 3092, column: 9, scope: !264)
!5942 = !DILocation(line: 3092, column: 21, scope: !264)
!5943 = !DILocation(line: 3094, column: 23, scope: !264)
!5944 = !DILocation(line: 3094, column: 9, scope: !264)
!5945 = !DILocation(line: 3094, column: 16, scope: !264)
!5946 = !DILocation(line: 3096, column: 14, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !264, file: !3, line: 3096, column: 9)
!5948 = !{!5949, !1046, i64 0}
!5949 = !{!"typemethods", !1046, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !5950, i64 56}
!5950 = !{!"", !892, i64 0, !892, i64 8, !895, i64 16}
!5951 = !DILocation(line: 3096, column: 22, scope: !5947)
!5952 = !DILocation(line: 3096, column: 9, scope: !264)
!5953 = !DILocation(line: 3085, column: 8, scope: !264)
!5954 = !DILocation(line: 3097, column: 29, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3096, column: 28)
!5956 = !DILocation(line: 3097, column: 13, scope: !5955)
!5957 = !DILocation(line: 3097, column: 32, scope: !5955)
!5958 = !DILocation(line: 3097, column: 22, scope: !5955)
!5959 = !DILocation(line: 3099, column: 41, scope: !5955)
!5960 = !{!5949, !895, i64 72}
!5961 = !DILocation(line: 3099, column: 13, scope: !5955)
!5962 = !DILocation(line: 3099, column: 31, scope: !5955)
!5963 = !{!5865, !895, i64 80}
!5964 = !DILocation(line: 3100, column: 5, scope: !5955)
!5965 = !DILocation(line: 3101, column: 16, scope: !264)
!5966 = !DILocation(line: 3101, column: 5, scope: !264)
!5967 = !DILocation(line: 3102, column: 26, scope: !264)
!5968 = !DILocation(line: 3102, column: 34, scope: !264)
!5969 = !DILocation(line: 3102, column: 5, scope: !264)
!5970 = !DILocation(line: 0, scope: !5927)
!5971 = !DILocation(line: 3104, column: 1, scope: !264)
!5972 = distinct !DISubprogram(name: "RM_ModuleTypeSetValue", scope: !3, file: !3, line: 3110, type: !5973, isLocal: false, isDefinition: true, scopeLine: 3110, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5975)
!5973 = !DISubroutineType(types: !5974)
!5974 = !{!17, !986, !267, !6}
!5975 = !{!5976, !5977, !5978, !5979}
!5976 = !DILocalVariable(name: "key", arg: 1, scope: !5972, file: !3, line: 3110, type: !986)
!5977 = !DILocalVariable(name: "mt", arg: 2, scope: !5972, file: !3, line: 3110, type: !267)
!5978 = !DILocalVariable(name: "value", arg: 3, scope: !5972, file: !3, line: 3110, type: !6)
!5979 = !DILocalVariable(name: "o", scope: !5972, file: !3, line: 3113, type: !143)
!5980 = !DILocation(line: 3110, column: 43, scope: !5972)
!5981 = !DILocation(line: 3110, column: 60, scope: !5972)
!5982 = !DILocation(line: 3110, column: 70, scope: !5972)
!5983 = !DILocation(line: 3111, column: 16, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 3111, column: 9)
!5985 = !DILocation(line: 3111, column: 21, scope: !5984)
!5986 = !DILocation(line: 3111, column: 42, scope: !5984)
!5987 = !DILocation(line: 3111, column: 50, scope: !5984)
!5988 = !DILocation(line: 3111, column: 45, scope: !5984)
!5989 = !DILocation(line: 3111, column: 9, scope: !5972)
!5990 = !DILocation(line: 1609, column: 34, scope: !3427, inlinedAt: !5991)
!5991 = distinct !DILocation(line: 3112, column: 5, scope: !5972)
!5992 = !DILocation(line: 1611, column: 14, scope: !3436, inlinedAt: !5991)
!5993 = !DILocation(line: 1611, column: 9, scope: !3436, inlinedAt: !5991)
!5994 = !DILocation(line: 0, scope: !5972)
!5995 = !DILocation(line: 1611, column: 9, scope: !3427, inlinedAt: !5991)
!5996 = !DILocation(line: 3114, column: 25, scope: !5972)
!5997 = !DILocation(line: 1612, column: 23, scope: !3440, inlinedAt: !5991)
!5998 = !DILocation(line: 1612, column: 31, scope: !3440, inlinedAt: !5991)
!5999 = !DILocation(line: 1612, column: 9, scope: !3440, inlinedAt: !5991)
!6000 = !DILocation(line: 1613, column: 20, scope: !3440, inlinedAt: !5991)
!6001 = !DILocation(line: 1614, column: 5, scope: !3440, inlinedAt: !5991)
!6002 = !DILocation(line: 3113, column: 15, scope: !5972)
!6003 = !DILocation(line: 3113, column: 11, scope: !5972)
!6004 = !DILocation(line: 3114, column: 17, scope: !5972)
!6005 = !DILocation(line: 3114, column: 5, scope: !5972)
!6006 = !DILocation(line: 3115, column: 5, scope: !5972)
!6007 = !DILocation(line: 3116, column: 16, scope: !5972)
!6008 = !DILocation(line: 3118, column: 1, scope: !5972)
!6009 = distinct !DISubprogram(name: "RM_ModuleTypeGetType", scope: !3, file: !3, line: 3125, type: !6010, isLocal: false, isDefinition: true, scopeLine: 3125, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6012)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{!267, !986}
!6012 = !{!6013, !6014}
!6013 = !DILocalVariable(name: "key", arg: 1, scope: !6009, file: !3, line: 3125, type: !986)
!6014 = !DILocalVariable(name: "mv", scope: !6009, file: !3, line: 3129, type: !6015)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleValue", file: !13, line: 550, baseType: !6017)
!6017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moduleValue", file: !13, line: 547, size: 128, elements: !6018)
!6018 = !{!6019, !6020}
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6017, file: !13, line: 548, baseType: !267, size: 64)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6017, file: !13, line: 549, baseType: !6, size: 64, offset: 64)
!6021 = !DILocation(line: 3125, column: 50, scope: !6009)
!6022 = !DILocation(line: 3126, column: 13, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 3126, column: 9)
!6024 = !DILocation(line: 3126, column: 21, scope: !6023)
!6025 = !DILocation(line: 3127, column: 14, scope: !6023)
!6026 = !DILocation(line: 3127, column: 20, scope: !6023)
!6027 = !DILocation(line: 3127, column: 28, scope: !6023)
!6028 = !DILocation(line: 1573, column: 32, scope: !3387, inlinedAt: !6029)
!6029 = distinct !DILocation(line: 3128, column: 9, scope: !6023)
!6030 = !DILocation(line: 1577, column: 24, scope: !3387, inlinedAt: !6029)
!6031 = !DILocation(line: 1577, column: 5, scope: !3387, inlinedAt: !6029)
!6032 = !DILocation(line: 3129, column: 35, scope: !6009)
!6033 = !DILocation(line: 3129, column: 18, scope: !6009)
!6034 = !DILocation(line: 3130, column: 16, scope: !6009)
!6035 = !{!6036, !892, i64 0}
!6036 = !{!"moduleValue", !892, i64 0, !892, i64 8}
!6037 = !DILocation(line: 0, scope: !6009)
!6038 = !DILocation(line: 3131, column: 1, scope: !6009)
!6039 = distinct !DISubprogram(name: "RM_ModuleTypeGetValue", scope: !3, file: !3, line: 3139, type: !6040, isLocal: false, isDefinition: true, scopeLine: 3139, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6042)
!6040 = !DISubroutineType(types: !6041)
!6041 = !{!6, !986}
!6042 = !{!6043, !6044}
!6043 = !DILocalVariable(name: "key", arg: 1, scope: !6039, file: !3, line: 3139, type: !986)
!6044 = !DILocalVariable(name: "mv", scope: !6039, file: !3, line: 3143, type: !6015)
!6045 = !DILocation(line: 3139, column: 45, scope: !6039)
!6046 = !DILocation(line: 3140, column: 13, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 3140, column: 9)
!6048 = !DILocation(line: 3140, column: 21, scope: !6047)
!6049 = !DILocation(line: 3141, column: 14, scope: !6047)
!6050 = !DILocation(line: 3141, column: 20, scope: !6047)
!6051 = !DILocation(line: 3141, column: 28, scope: !6047)
!6052 = !DILocation(line: 1573, column: 32, scope: !3387, inlinedAt: !6053)
!6053 = distinct !DILocation(line: 3142, column: 9, scope: !6047)
!6054 = !DILocation(line: 1577, column: 24, scope: !3387, inlinedAt: !6053)
!6055 = !DILocation(line: 1577, column: 5, scope: !3387, inlinedAt: !6053)
!6056 = !DILocation(line: 3143, column: 35, scope: !6039)
!6057 = !DILocation(line: 3143, column: 18, scope: !6039)
!6058 = !DILocation(line: 3144, column: 16, scope: !6039)
!6059 = !{!6036, !892, i64 8}
!6060 = !DILocation(line: 0, scope: !6039)
!6061 = !DILocation(line: 3145, column: 1, scope: !6039)
!6062 = distinct !DISubprogram(name: "moduleRDBLoadError", scope: !3, file: !3, line: 3153, type: !6063, isLocal: false, isDefinition: true, scopeLine: 3153, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6067)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{null, !6065}
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleIO", file: !13, line: 564, baseType: !291)
!6067 = !{!6068}
!6068 = !DILocalVariable(name: "io", arg: 1, scope: !6062, file: !3, line: 3153, type: !6065)
!6069 = !DILocation(line: 3153, column: 40, scope: !6062)
!6070 = !DILocation(line: 3158, column: 13, scope: !6062)
!6071 = !{!6072, !892, i64 16}
!6072 = !{!"RedisModuleIO", !1046, i64 0, !892, i64 8, !892, i64 16, !895, i64 24, !895, i64 28, !892, i64 32, !892, i64 40}
!6073 = !DILocation(line: 3158, column: 19, scope: !6062)
!6074 = !DILocation(line: 3158, column: 27, scope: !6062)
!6075 = !DILocation(line: 3159, column: 9, scope: !6062)
!6076 = !DILocation(line: 3160, column: 33, scope: !6062)
!6077 = !{!6072, !1046, i64 0}
!6078 = !DILocation(line: 3154, column: 5, scope: !6062)
!6079 = !DILocation(line: 3161, column: 5, scope: !6062)
!6080 = distinct !DISubprogram(name: "RM_SaveUnsigned", scope: !3, file: !3, line: 3167, type: !6081, isLocal: false, isDefinition: true, scopeLine: 3167, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6083)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{null, !6065, !32}
!6083 = !{!6084, !6085, !6086}
!6084 = !DILocalVariable(name: "io", arg: 1, scope: !6080, file: !3, line: 3167, type: !6065)
!6085 = !DILocalVariable(name: "value", arg: 2, scope: !6080, file: !3, line: 3167, type: !32)
!6086 = !DILocalVariable(name: "retval", scope: !6080, file: !3, line: 3170, type: !17)
!6087 = !DILocation(line: 3167, column: 37, scope: !6080)
!6088 = !DILocation(line: 3167, column: 50, scope: !6080)
!6089 = !DILocation(line: 3168, column: 13, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 3168, column: 9)
!6091 = !{!6072, !895, i64 24}
!6092 = !DILocation(line: 3168, column: 9, scope: !6090)
!6093 = !DILocation(line: 3168, column: 9, scope: !6080)
!6094 = !DILocation(line: 3170, column: 33, scope: !6080)
!6095 = !{!6072, !892, i64 8}
!6096 = !DILocation(line: 3170, column: 18, scope: !6080)
!6097 = !DILocation(line: 3170, column: 9, scope: !6080)
!6098 = !DILocation(line: 3171, column: 16, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 3171, column: 9)
!6100 = !DILocation(line: 3171, column: 9, scope: !6080)
!6101 = !DILocation(line: 3172, column: 18, scope: !6080)
!6102 = !DILocation(line: 3172, column: 9, scope: !6080)
!6103 = !DILocation(line: 3172, column: 15, scope: !6080)
!6104 = !DILocation(line: 3174, column: 29, scope: !6080)
!6105 = !DILocation(line: 3174, column: 14, scope: !6080)
!6106 = !DILocation(line: 3175, column: 16, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 3175, column: 9)
!6108 = !DILocation(line: 3175, column: 9, scope: !6080)
!6109 = !DILocation(line: 3176, column: 18, scope: !6080)
!6110 = !DILocation(line: 3176, column: 15, scope: !6080)
!6111 = !DILocation(line: 3177, column: 5, scope: !6080)
!6112 = !DILocation(line: 3180, column: 15, scope: !6080)
!6113 = !DILocation(line: 3181, column: 1, scope: !6080)
!6114 = distinct !DISubprogram(name: "RM_LoadUnsigned", scope: !3, file: !3, line: 3186, type: !6115, isLocal: false, isDefinition: true, scopeLine: 3186, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6117)
!6115 = !DISubroutineType(types: !6116)
!6116 = !{!32, !6065}
!6117 = !{!6118, !6119, !6122, !6123}
!6118 = !DILocalVariable(name: "io", arg: 1, scope: !6114, file: !3, line: 3186, type: !6065)
!6119 = !DILocalVariable(name: "opcode", scope: !6120, file: !3, line: 3188, type: !32)
!6120 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 3187, column: 23)
!6121 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 3187, column: 9)
!6122 = !DILocalVariable(name: "value", scope: !6114, file: !3, line: 3191, type: !32)
!6123 = !DILocalVariable(name: "retval", scope: !6114, file: !3, line: 3192, type: !17)
!6124 = !DILocation(line: 3186, column: 41, scope: !6114)
!6125 = !DILocation(line: 3187, column: 13, scope: !6121)
!6126 = !{!6072, !895, i64 28}
!6127 = !DILocation(line: 3187, column: 17, scope: !6121)
!6128 = !DILocation(line: 0, scope: !6114)
!6129 = !DILocation(line: 3187, column: 9, scope: !6114)
!6130 = !DILocation(line: 3188, column: 42, scope: !6120)
!6131 = !DILocation(line: 3188, column: 27, scope: !6120)
!6132 = !DILocation(line: 3188, column: 18, scope: !6120)
!6133 = !DILocation(line: 3189, column: 20, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 3189, column: 13)
!6135 = !DILocation(line: 3192, column: 38, scope: !6114)
!6136 = !DILocation(line: 3191, column: 14, scope: !6114)
!6137 = !DILocation(line: 3192, column: 18, scope: !6114)
!6138 = !DILocation(line: 3192, column: 9, scope: !6114)
!6139 = !DILocation(line: 3193, column: 16, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 3193, column: 9)
!6141 = !DILocation(line: 3193, column: 9, scope: !6114)
!6142 = !DILocation(line: 3197, column: 5, scope: !6114)
!6143 = !DILocation(line: 3194, column: 12, scope: !6114)
!6144 = !DILocation(line: 3199, column: 1, scope: !6114)
!6145 = distinct !DISubprogram(name: "RM_SaveSigned", scope: !3, file: !3, line: 3202, type: !6146, isLocal: false, isDefinition: true, scopeLine: 3202, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6148)
!6146 = !DISubroutineType(types: !6147)
!6147 = !{null, !6065, !92}
!6148 = !{!6149, !6150, !6151}
!6149 = !DILocalVariable(name: "io", arg: 1, scope: !6145, file: !3, line: 3202, type: !6065)
!6150 = !DILocalVariable(name: "value", arg: 2, scope: !6145, file: !3, line: 3202, type: !92)
!6151 = !DILocalVariable(name: "conv", scope: !6145, file: !3, line: 3203, type: !6152)
!6152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !3, line: 3203, size: 64, elements: !6153)
!6153 = !{!6154, !6155}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !6152, file: !3, line: 3203, baseType: !32, size: 64)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6152, file: !3, line: 3203, baseType: !92, size: 64)
!6156 = !DILocation(line: 3202, column: 35, scope: !6145)
!6157 = !DILocation(line: 3202, column: 47, scope: !6145)
!6158 = !DILocation(line: 3203, column: 36, scope: !6145)
!6159 = !DILocation(line: 3167, column: 37, scope: !6080, inlinedAt: !6160)
!6160 = distinct !DILocation(line: 3205, column: 5, scope: !6145)
!6161 = !DILocation(line: 3167, column: 50, scope: !6080, inlinedAt: !6160)
!6162 = !DILocation(line: 3168, column: 13, scope: !6090, inlinedAt: !6160)
!6163 = !DILocation(line: 3168, column: 9, scope: !6090, inlinedAt: !6160)
!6164 = !DILocation(line: 3168, column: 9, scope: !6080, inlinedAt: !6160)
!6165 = !DILocation(line: 3170, column: 33, scope: !6080, inlinedAt: !6160)
!6166 = !DILocation(line: 3170, column: 18, scope: !6080, inlinedAt: !6160)
!6167 = !DILocation(line: 3170, column: 9, scope: !6080, inlinedAt: !6160)
!6168 = !DILocation(line: 3171, column: 16, scope: !6099, inlinedAt: !6160)
!6169 = !DILocation(line: 3171, column: 9, scope: !6080, inlinedAt: !6160)
!6170 = !DILocation(line: 3172, column: 18, scope: !6080, inlinedAt: !6160)
!6171 = !DILocation(line: 3172, column: 9, scope: !6080, inlinedAt: !6160)
!6172 = !DILocation(line: 3172, column: 15, scope: !6080, inlinedAt: !6160)
!6173 = !DILocation(line: 3174, column: 29, scope: !6080, inlinedAt: !6160)
!6174 = !DILocation(line: 3174, column: 14, scope: !6080, inlinedAt: !6160)
!6175 = !DILocation(line: 3175, column: 16, scope: !6107, inlinedAt: !6160)
!6176 = !DILocation(line: 3175, column: 9, scope: !6080, inlinedAt: !6160)
!6177 = !DILocation(line: 3176, column: 18, scope: !6080, inlinedAt: !6160)
!6178 = !DILocation(line: 3176, column: 15, scope: !6080, inlinedAt: !6160)
!6179 = !DILocation(line: 3177, column: 5, scope: !6080, inlinedAt: !6160)
!6180 = !DILocation(line: 3180, column: 15, scope: !6080, inlinedAt: !6160)
!6181 = !DILocation(line: 3181, column: 1, scope: !6080, inlinedAt: !6160)
!6182 = !DILocation(line: 3206, column: 1, scope: !6145)
!6183 = distinct !DISubprogram(name: "RM_LoadSigned", scope: !3, file: !3, line: 3209, type: !6184, isLocal: false, isDefinition: true, scopeLine: 3209, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6186)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{!92, !6065}
!6186 = !{!6187, !6188}
!6187 = !DILocalVariable(name: "io", arg: 1, scope: !6183, file: !3, line: 3209, type: !6065)
!6188 = !DILocalVariable(name: "conv", scope: !6183, file: !3, line: 3210, type: !6189)
!6189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6183, file: !3, line: 3210, size: 64, elements: !6190)
!6190 = !{!6191, !6192}
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !6189, file: !3, line: 3210, baseType: !32, size: 64)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6189, file: !3, line: 3210, baseType: !92, size: 64)
!6193 = !DILocation(line: 3209, column: 38, scope: !6183)
!6194 = !DILocation(line: 3186, column: 41, scope: !6114, inlinedAt: !6195)
!6195 = distinct !DILocation(line: 3211, column: 14, scope: !6183)
!6196 = !DILocation(line: 3187, column: 13, scope: !6121, inlinedAt: !6195)
!6197 = !DILocation(line: 3187, column: 17, scope: !6121, inlinedAt: !6195)
!6198 = !DILocation(line: 0, scope: !6114, inlinedAt: !6195)
!6199 = !DILocation(line: 3187, column: 9, scope: !6114, inlinedAt: !6195)
!6200 = !DILocation(line: 3188, column: 42, scope: !6120, inlinedAt: !6195)
!6201 = !DILocation(line: 3188, column: 27, scope: !6120, inlinedAt: !6195)
!6202 = !DILocation(line: 3188, column: 18, scope: !6120, inlinedAt: !6195)
!6203 = !DILocation(line: 3189, column: 20, scope: !6134, inlinedAt: !6195)
!6204 = !DILocation(line: 3192, column: 38, scope: !6114, inlinedAt: !6195)
!6205 = !DILocation(line: 3191, column: 14, scope: !6114, inlinedAt: !6195)
!6206 = !DILocation(line: 3192, column: 18, scope: !6114, inlinedAt: !6195)
!6207 = !DILocation(line: 3192, column: 9, scope: !6114, inlinedAt: !6195)
!6208 = !DILocation(line: 3193, column: 16, scope: !6140, inlinedAt: !6195)
!6209 = !DILocation(line: 3193, column: 9, scope: !6114, inlinedAt: !6195)
!6210 = !DILocation(line: 3197, column: 5, scope: !6114, inlinedAt: !6195)
!6211 = !DILocation(line: 3194, column: 12, scope: !6114, inlinedAt: !6195)
!6212 = !DILocation(line: 3199, column: 1, scope: !6114, inlinedAt: !6195)
!6213 = !DILocation(line: 3210, column: 36, scope: !6183)
!6214 = !DILocation(line: 3212, column: 5, scope: !6183)
!6215 = distinct !DISubprogram(name: "RM_SaveString", scope: !3, file: !3, line: 3221, type: !6216, isLocal: false, isDefinition: true, scopeLine: 3221, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6218)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{null, !6065, !143}
!6218 = !{!6219, !6220, !6221}
!6219 = !DILocalVariable(name: "io", arg: 1, scope: !6215, file: !3, line: 3221, type: !6065)
!6220 = !DILocalVariable(name: "s", arg: 2, scope: !6215, file: !3, line: 3221, type: !143)
!6221 = !DILocalVariable(name: "retval", scope: !6215, file: !3, line: 3224, type: !6222)
!6222 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !187, line: 200, baseType: !364)
!6223 = !DILocation(line: 3221, column: 35, scope: !6215)
!6224 = !DILocation(line: 3221, column: 58, scope: !6215)
!6225 = !DILocation(line: 3222, column: 13, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 3222, column: 9)
!6227 = !DILocation(line: 3222, column: 9, scope: !6226)
!6228 = !DILocation(line: 3222, column: 9, scope: !6215)
!6229 = !DILocation(line: 3224, column: 37, scope: !6215)
!6230 = !DILocation(line: 3224, column: 22, scope: !6215)
!6231 = !DILocation(line: 3225, column: 16, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 3225, column: 9)
!6233 = !DILocation(line: 3225, column: 9, scope: !6215)
!6234 = !DILocation(line: 3224, column: 13, scope: !6215)
!6235 = !DILocation(line: 3226, column: 9, scope: !6215)
!6236 = !DILocation(line: 3226, column: 15, scope: !6215)
!6237 = !DILocation(line: 3228, column: 38, scope: !6215)
!6238 = !DILocation(line: 3228, column: 14, scope: !6215)
!6239 = !DILocation(line: 3229, column: 16, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 3229, column: 9)
!6241 = !DILocation(line: 3229, column: 9, scope: !6215)
!6242 = !DILocation(line: 3230, column: 15, scope: !6215)
!6243 = !DILocation(line: 3231, column: 5, scope: !6215)
!6244 = !DILocation(line: 3234, column: 15, scope: !6215)
!6245 = !DILocation(line: 3235, column: 1, scope: !6215)
!6246 = distinct !DISubprogram(name: "RM_SaveStringBuffer", scope: !3, file: !3, line: 3239, type: !6247, isLocal: false, isDefinition: true, scopeLine: 3239, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6249)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{null, !6065, !523, !157}
!6249 = !{!6250, !6251, !6252, !6253}
!6250 = !DILocalVariable(name: "io", arg: 1, scope: !6246, file: !3, line: 3239, type: !6065)
!6251 = !DILocalVariable(name: "str", arg: 2, scope: !6246, file: !3, line: 3239, type: !523)
!6252 = !DILocalVariable(name: "len", arg: 3, scope: !6246, file: !3, line: 3239, type: !157)
!6253 = !DILocalVariable(name: "retval", scope: !6246, file: !3, line: 3242, type: !6222)
!6254 = !DILocation(line: 3239, column: 41, scope: !6246)
!6255 = !DILocation(line: 3239, column: 57, scope: !6246)
!6256 = !DILocation(line: 3239, column: 69, scope: !6246)
!6257 = !DILocation(line: 3240, column: 13, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 3240, column: 9)
!6259 = !DILocation(line: 3240, column: 9, scope: !6258)
!6260 = !DILocation(line: 3240, column: 9, scope: !6246)
!6261 = !DILocation(line: 3242, column: 37, scope: !6246)
!6262 = !DILocation(line: 3242, column: 22, scope: !6246)
!6263 = !DILocation(line: 3243, column: 16, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 3243, column: 9)
!6265 = !DILocation(line: 3243, column: 9, scope: !6246)
!6266 = !DILocation(line: 3242, column: 13, scope: !6246)
!6267 = !DILocation(line: 3244, column: 9, scope: !6246)
!6268 = !DILocation(line: 3244, column: 15, scope: !6246)
!6269 = !DILocation(line: 3246, column: 35, scope: !6246)
!6270 = !DILocation(line: 3246, column: 14, scope: !6246)
!6271 = !DILocation(line: 3247, column: 16, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 3247, column: 9)
!6273 = !DILocation(line: 3247, column: 9, scope: !6246)
!6274 = !DILocation(line: 3248, column: 15, scope: !6246)
!6275 = !DILocation(line: 3249, column: 5, scope: !6246)
!6276 = !DILocation(line: 3252, column: 15, scope: !6246)
!6277 = !DILocation(line: 3253, column: 1, scope: !6246)
!6278 = distinct !DISubprogram(name: "moduleLoadString", scope: !3, file: !3, line: 3256, type: !6279, isLocal: false, isDefinition: true, scopeLine: 3256, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6281)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!6, !6065, !17, !2310}
!6281 = !{!6282, !6283, !6284, !6285, !6288}
!6282 = !DILocalVariable(name: "io", arg: 1, scope: !6278, file: !3, line: 3256, type: !6065)
!6283 = !DILocalVariable(name: "plain", arg: 2, scope: !6278, file: !3, line: 3256, type: !17)
!6284 = !DILocalVariable(name: "lenptr", arg: 3, scope: !6278, file: !3, line: 3256, type: !2310)
!6285 = !DILocalVariable(name: "opcode", scope: !6286, file: !3, line: 3258, type: !32)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 3257, column: 23)
!6287 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 3257, column: 9)
!6288 = !DILocalVariable(name: "s", scope: !6278, file: !3, line: 3261, type: !6)
!6289 = !DILocation(line: 3256, column: 39, scope: !6278)
!6290 = !DILocation(line: 3256, column: 47, scope: !6278)
!6291 = !DILocation(line: 3256, column: 62, scope: !6278)
!6292 = !DILocation(line: 3257, column: 13, scope: !6287)
!6293 = !DILocation(line: 3257, column: 17, scope: !6287)
!6294 = !DILocation(line: 0, scope: !6278)
!6295 = !DILocation(line: 3257, column: 9, scope: !6278)
!6296 = !DILocation(line: 3258, column: 42, scope: !6286)
!6297 = !DILocation(line: 3258, column: 27, scope: !6286)
!6298 = !DILocation(line: 3258, column: 18, scope: !6286)
!6299 = !DILocation(line: 3259, column: 20, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 3259, column: 13)
!6301 = !DILocation(line: 3261, column: 46, scope: !6278)
!6302 = !DILocation(line: 3262, column: 15, scope: !6278)
!6303 = !DILocation(line: 3261, column: 15, scope: !6278)
!6304 = !DILocation(line: 3261, column: 11, scope: !6278)
!6305 = !DILocation(line: 3263, column: 11, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 3263, column: 9)
!6307 = !DILocation(line: 3263, column: 9, scope: !6278)
!6308 = !DILocation(line: 3267, column: 5, scope: !6278)
!6309 = !DILocation(line: 3269, column: 1, scope: !6278)
!6310 = distinct !DISubprogram(name: "RM_LoadString", scope: !3, file: !3, line: 3280, type: !6311, isLocal: false, isDefinition: true, scopeLine: 3280, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6313)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!143, !6065}
!6313 = !{!6314}
!6314 = !DILocalVariable(name: "io", arg: 1, scope: !6310, file: !3, line: 3280, type: !6065)
!6315 = !DILocation(line: 3280, column: 49, scope: !6310)
!6316 = !DILocation(line: 3256, column: 39, scope: !6278, inlinedAt: !6317)
!6317 = distinct !DILocation(line: 3281, column: 12, scope: !6310)
!6318 = !DILocation(line: 3256, column: 47, scope: !6278, inlinedAt: !6317)
!6319 = !DILocation(line: 3256, column: 62, scope: !6278, inlinedAt: !6317)
!6320 = !DILocation(line: 3257, column: 13, scope: !6287, inlinedAt: !6317)
!6321 = !DILocation(line: 3257, column: 17, scope: !6287, inlinedAt: !6317)
!6322 = !DILocation(line: 0, scope: !6278, inlinedAt: !6317)
!6323 = !DILocation(line: 3257, column: 9, scope: !6278, inlinedAt: !6317)
!6324 = !DILocation(line: 3258, column: 42, scope: !6286, inlinedAt: !6317)
!6325 = !DILocation(line: 3258, column: 27, scope: !6286, inlinedAt: !6317)
!6326 = !DILocation(line: 3258, column: 18, scope: !6286, inlinedAt: !6317)
!6327 = !DILocation(line: 3259, column: 20, scope: !6300, inlinedAt: !6317)
!6328 = !DILocation(line: 3261, column: 46, scope: !6278, inlinedAt: !6317)
!6329 = !DILocation(line: 3261, column: 15, scope: !6278, inlinedAt: !6317)
!6330 = !DILocation(line: 3261, column: 11, scope: !6278, inlinedAt: !6317)
!6331 = !DILocation(line: 3263, column: 11, scope: !6306, inlinedAt: !6317)
!6332 = !DILocation(line: 3263, column: 9, scope: !6278, inlinedAt: !6317)
!6333 = !DILocation(line: 3267, column: 5, scope: !6278, inlinedAt: !6317)
!6334 = !DILocation(line: 3281, column: 12, scope: !6310)
!6335 = !DILocation(line: 3281, column: 5, scope: !6310)
!6336 = distinct !DISubprogram(name: "RM_LoadStringBuffer", scope: !3, file: !3, line: 3291, type: !6337, isLocal: false, isDefinition: true, scopeLine: 3291, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6339)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{!9, !6065, !2310}
!6339 = !{!6340, !6341}
!6340 = !DILocalVariable(name: "io", arg: 1, scope: !6336, file: !3, line: 3291, type: !6065)
!6341 = !DILocalVariable(name: "lenptr", arg: 2, scope: !6336, file: !3, line: 3291, type: !2310)
!6342 = !DILocation(line: 3291, column: 42, scope: !6336)
!6343 = !DILocation(line: 3291, column: 54, scope: !6336)
!6344 = !DILocation(line: 3256, column: 39, scope: !6278, inlinedAt: !6345)
!6345 = distinct !DILocation(line: 3292, column: 12, scope: !6336)
!6346 = !DILocation(line: 3256, column: 47, scope: !6278, inlinedAt: !6345)
!6347 = !DILocation(line: 3256, column: 62, scope: !6278, inlinedAt: !6345)
!6348 = !DILocation(line: 3257, column: 13, scope: !6287, inlinedAt: !6345)
!6349 = !DILocation(line: 3257, column: 17, scope: !6287, inlinedAt: !6345)
!6350 = !DILocation(line: 0, scope: !6278, inlinedAt: !6345)
!6351 = !DILocation(line: 3257, column: 9, scope: !6278, inlinedAt: !6345)
!6352 = !DILocation(line: 3258, column: 42, scope: !6286, inlinedAt: !6345)
!6353 = !DILocation(line: 3258, column: 27, scope: !6286, inlinedAt: !6345)
!6354 = !DILocation(line: 3258, column: 18, scope: !6286, inlinedAt: !6345)
!6355 = !DILocation(line: 3259, column: 20, scope: !6300, inlinedAt: !6345)
!6356 = !DILocation(line: 3261, column: 46, scope: !6278, inlinedAt: !6345)
!6357 = !DILocation(line: 3261, column: 15, scope: !6278, inlinedAt: !6345)
!6358 = !DILocation(line: 3261, column: 11, scope: !6278, inlinedAt: !6345)
!6359 = !DILocation(line: 3263, column: 11, scope: !6306, inlinedAt: !6345)
!6360 = !DILocation(line: 3263, column: 9, scope: !6278, inlinedAt: !6345)
!6361 = !DILocation(line: 3267, column: 5, scope: !6278, inlinedAt: !6345)
!6362 = !DILocation(line: 3292, column: 5, scope: !6336)
!6363 = distinct !DISubprogram(name: "RM_SaveDouble", scope: !3, file: !3, line: 3298, type: !6364, isLocal: false, isDefinition: true, scopeLine: 3298, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6366)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{null, !6065, !96}
!6366 = !{!6367, !6368, !6369}
!6367 = !DILocalVariable(name: "io", arg: 1, scope: !6363, file: !3, line: 3298, type: !6065)
!6368 = !DILocalVariable(name: "value", arg: 2, scope: !6363, file: !3, line: 3298, type: !96)
!6369 = !DILocalVariable(name: "retval", scope: !6363, file: !3, line: 3301, type: !17)
!6370 = !DILocation(line: 3298, column: 35, scope: !6363)
!6371 = !DILocation(line: 3298, column: 46, scope: !6363)
!6372 = !DILocation(line: 3299, column: 13, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 3299, column: 9)
!6374 = !DILocation(line: 3299, column: 9, scope: !6373)
!6375 = !DILocation(line: 3299, column: 9, scope: !6363)
!6376 = !DILocation(line: 3301, column: 33, scope: !6363)
!6377 = !DILocation(line: 3301, column: 18, scope: !6363)
!6378 = !DILocation(line: 3301, column: 9, scope: !6363)
!6379 = !DILocation(line: 3302, column: 16, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 3302, column: 9)
!6381 = !DILocation(line: 3302, column: 9, scope: !6363)
!6382 = !DILocation(line: 3303, column: 18, scope: !6363)
!6383 = !DILocation(line: 3303, column: 9, scope: !6363)
!6384 = !DILocation(line: 3303, column: 15, scope: !6363)
!6385 = !DILocation(line: 3305, column: 43, scope: !6363)
!6386 = !DILocation(line: 3305, column: 14, scope: !6363)
!6387 = !DILocation(line: 3306, column: 16, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 3306, column: 9)
!6389 = !DILocation(line: 3306, column: 9, scope: !6363)
!6390 = !DILocation(line: 3307, column: 18, scope: !6363)
!6391 = !DILocation(line: 3307, column: 15, scope: !6363)
!6392 = !DILocation(line: 3308, column: 5, scope: !6363)
!6393 = !DILocation(line: 3311, column: 15, scope: !6363)
!6394 = !DILocation(line: 3312, column: 1, scope: !6363)
!6395 = distinct !DISubprogram(name: "RM_LoadDouble", scope: !3, file: !3, line: 3316, type: !6396, isLocal: false, isDefinition: true, scopeLine: 3316, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6398)
!6396 = !DISubroutineType(types: !6397)
!6397 = !{!96, !6065}
!6398 = !{!6399, !6400, !6403, !6404}
!6399 = !DILocalVariable(name: "io", arg: 1, scope: !6395, file: !3, line: 3316, type: !6065)
!6400 = !DILocalVariable(name: "opcode", scope: !6401, file: !3, line: 3318, type: !32)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 3317, column: 23)
!6402 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 3317, column: 9)
!6403 = !DILocalVariable(name: "value", scope: !6395, file: !3, line: 3321, type: !96)
!6404 = !DILocalVariable(name: "retval", scope: !6395, file: !3, line: 3322, type: !17)
!6405 = !DILocation(line: 3316, column: 37, scope: !6395)
!6406 = !DILocation(line: 3317, column: 13, scope: !6402)
!6407 = !DILocation(line: 3317, column: 17, scope: !6402)
!6408 = !DILocation(line: 0, scope: !6395)
!6409 = !DILocation(line: 3317, column: 9, scope: !6395)
!6410 = !DILocation(line: 3318, column: 42, scope: !6401)
!6411 = !DILocation(line: 3318, column: 27, scope: !6401)
!6412 = !DILocation(line: 3318, column: 18, scope: !6401)
!6413 = !DILocation(line: 3319, column: 20, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 3319, column: 13)
!6415 = !DILocation(line: 3322, column: 47, scope: !6395)
!6416 = !DILocation(line: 3321, column: 12, scope: !6395)
!6417 = !DILocation(line: 3322, column: 18, scope: !6395)
!6418 = !DILocation(line: 3322, column: 9, scope: !6395)
!6419 = !DILocation(line: 3323, column: 16, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 3323, column: 9)
!6421 = !DILocation(line: 3323, column: 9, scope: !6395)
!6422 = !DILocation(line: 3327, column: 5, scope: !6395)
!6423 = !DILocation(line: 3324, column: 12, scope: !6395)
!6424 = !DILocation(line: 3329, column: 1, scope: !6395)
!6425 = distinct !DISubprogram(name: "RM_SaveFloat", scope: !3, file: !3, line: 3334, type: !6426, isLocal: false, isDefinition: true, scopeLine: 3334, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6428)
!6426 = !DISubroutineType(types: !6427)
!6427 = !{null, !6065, !3191}
!6428 = !{!6429, !6430, !6431}
!6429 = !DILocalVariable(name: "io", arg: 1, scope: !6425, file: !3, line: 3334, type: !6065)
!6430 = !DILocalVariable(name: "value", arg: 2, scope: !6425, file: !3, line: 3334, type: !3191)
!6431 = !DILocalVariable(name: "retval", scope: !6425, file: !3, line: 3337, type: !17)
!6432 = !DILocation(line: 3334, column: 34, scope: !6425)
!6433 = !DILocation(line: 3334, column: 44, scope: !6425)
!6434 = !DILocation(line: 3335, column: 13, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 3335, column: 9)
!6436 = !DILocation(line: 3335, column: 9, scope: !6435)
!6437 = !DILocation(line: 3335, column: 9, scope: !6425)
!6438 = !DILocation(line: 3337, column: 33, scope: !6425)
!6439 = !DILocation(line: 3337, column: 18, scope: !6425)
!6440 = !DILocation(line: 3337, column: 9, scope: !6425)
!6441 = !DILocation(line: 3338, column: 16, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 3338, column: 9)
!6443 = !DILocation(line: 3338, column: 9, scope: !6425)
!6444 = !DILocation(line: 3339, column: 18, scope: !6425)
!6445 = !DILocation(line: 3339, column: 9, scope: !6425)
!6446 = !DILocation(line: 3339, column: 15, scope: !6425)
!6447 = !DILocation(line: 3341, column: 42, scope: !6425)
!6448 = !DILocation(line: 3341, column: 14, scope: !6425)
!6449 = !DILocation(line: 3342, column: 16, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 3342, column: 9)
!6451 = !DILocation(line: 3342, column: 9, scope: !6425)
!6452 = !DILocation(line: 3343, column: 18, scope: !6425)
!6453 = !DILocation(line: 3343, column: 15, scope: !6425)
!6454 = !DILocation(line: 3344, column: 5, scope: !6425)
!6455 = !DILocation(line: 3347, column: 15, scope: !6425)
!6456 = !DILocation(line: 3348, column: 1, scope: !6425)
!6457 = distinct !DISubprogram(name: "RM_LoadFloat", scope: !3, file: !3, line: 3352, type: !6458, isLocal: false, isDefinition: true, scopeLine: 3352, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6460)
!6458 = !DISubroutineType(types: !6459)
!6459 = !{!3191, !6065}
!6460 = !{!6461, !6462, !6465, !6466}
!6461 = !DILocalVariable(name: "io", arg: 1, scope: !6457, file: !3, line: 3352, type: !6065)
!6462 = !DILocalVariable(name: "opcode", scope: !6463, file: !3, line: 3354, type: !32)
!6463 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 3353, column: 23)
!6464 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 3353, column: 9)
!6465 = !DILocalVariable(name: "value", scope: !6457, file: !3, line: 3357, type: !3191)
!6466 = !DILocalVariable(name: "retval", scope: !6457, file: !3, line: 3358, type: !17)
!6467 = !DILocation(line: 3352, column: 35, scope: !6457)
!6468 = !DILocation(line: 3353, column: 13, scope: !6464)
!6469 = !DILocation(line: 3353, column: 17, scope: !6464)
!6470 = !DILocation(line: 0, scope: !6457)
!6471 = !DILocation(line: 3353, column: 9, scope: !6457)
!6472 = !DILocation(line: 3354, column: 42, scope: !6463)
!6473 = !DILocation(line: 3354, column: 27, scope: !6463)
!6474 = !DILocation(line: 3354, column: 18, scope: !6463)
!6475 = !DILocation(line: 3355, column: 20, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 3355, column: 13)
!6477 = !DILocation(line: 3358, column: 46, scope: !6457)
!6478 = !DILocation(line: 3357, column: 11, scope: !6457)
!6479 = !DILocation(line: 3358, column: 18, scope: !6457)
!6480 = !DILocation(line: 3358, column: 9, scope: !6457)
!6481 = !DILocation(line: 3359, column: 16, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 3359, column: 9)
!6483 = !DILocation(line: 3359, column: 9, scope: !6457)
!6484 = !DILocation(line: 3363, column: 5, scope: !6457)
!6485 = !DILocation(line: 3360, column: 12, scope: !6457)
!6486 = !DILocation(line: 3365, column: 1, scope: !6457)
!6487 = distinct !DISubprogram(name: "rdbSaveModulesAux", scope: !3, file: !3, line: 3369, type: !6488, isLocal: false, isDefinition: true, scopeLine: 3369, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6490)
!6488 = !DISubroutineType(types: !6489)
!6489 = !{!6222, !295, !17}
!6490 = !{!6491, !6492, !6493, !6494, !6495, !6496, !6498, !6499, !6500, !6502}
!6491 = !DILocalVariable(name: "rdb", arg: 1, scope: !6487, file: !3, line: 3369, type: !295)
!6492 = !DILocalVariable(name: "when", arg: 2, scope: !6487, file: !3, line: 3369, type: !17)
!6493 = !DILocalVariable(name: "total_written", scope: !6487, file: !3, line: 3370, type: !157)
!6494 = !DILocalVariable(name: "di", scope: !6487, file: !3, line: 3371, type: !744)
!6495 = !DILocalVariable(name: "de", scope: !6487, file: !3, line: 3372, type: !81)
!6496 = !DILocalVariable(name: "module", scope: !6497, file: !3, line: 3375, type: !273)
!6497 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 3374, column: 41)
!6498 = !DILocalVariable(name: "li", scope: !6497, file: !3, line: 3376, type: !759)
!6499 = !DILocalVariable(name: "ln", scope: !6497, file: !3, line: 3377, type: !120)
!6500 = !DILocalVariable(name: "mt", scope: !6501, file: !3, line: 3381, type: !267)
!6501 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 3380, column: 37)
!6502 = !DILocalVariable(name: "ret", scope: !6501, file: !3, line: 3384, type: !6222)
!6503 = !DILocation(line: 3369, column: 32, scope: !6487)
!6504 = !DILocation(line: 3369, column: 41, scope: !6487)
!6505 = !DILocation(line: 3370, column: 12, scope: !6487)
!6506 = !DILocation(line: 3371, column: 40, scope: !6487)
!6507 = !DILocation(line: 3371, column: 24, scope: !6487)
!6508 = !DILocation(line: 3371, column: 19, scope: !6487)
!6509 = !DILocation(line: 3374, column: 18, scope: !6487)
!6510 = !DILocation(line: 3372, column: 16, scope: !6487)
!6511 = !DILocation(line: 3374, column: 32, scope: !6487)
!6512 = !DILocation(line: 3374, column: 5, scope: !6487)
!6513 = !DILocation(line: 3375, column: 38, scope: !6497)
!6514 = !DILocation(line: 3375, column: 29, scope: !6497)
!6515 = !DILocation(line: 3376, column: 9, scope: !6497)
!6516 = !DILocation(line: 3379, column: 28, scope: !6497)
!6517 = !DILocation(line: 3376, column: 18, scope: !6497)
!6518 = !DILocation(line: 3379, column: 9, scope: !6497)
!6519 = !DILocation(line: 3380, column: 21, scope: !6497)
!6520 = !DILocation(line: 3377, column: 19, scope: !6497)
!6521 = !DILocation(line: 3380, column: 9, scope: !6497)
!6522 = !DILocation(line: 3381, column: 34, scope: !6501)
!6523 = !DILocation(line: 3381, column: 25, scope: !6501)
!6524 = !DILocation(line: 3382, column: 22, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 3382, column: 17)
!6526 = !{!5865, !892, i64 72}
!6527 = !DILocation(line: 3382, column: 18, scope: !6525)
!6528 = !DILocation(line: 3382, column: 31, scope: !6525)
!6529 = distinct !{!6529, !6521, !6530}
!6530 = !DILocation(line: 3390, column: 9, scope: !6497)
!6531 = !DILocation(line: 3382, column: 40, scope: !6525)
!6532 = !DILocation(line: 3382, column: 58, scope: !6525)
!6533 = !DILocation(line: 3382, column: 17, scope: !6501)
!6534 = !DILocation(line: 3384, column: 27, scope: !6501)
!6535 = !DILocation(line: 3384, column: 21, scope: !6501)
!6536 = !DILocation(line: 3385, column: 20, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 3385, column: 17)
!6538 = !DILocation(line: 3385, column: 17, scope: !6501)
!6539 = !DILocation(line: 3386, column: 17, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 3385, column: 26)
!6541 = !DILocation(line: 3391, column: 5, scope: !6487)
!6542 = !DILocation(line: 3389, column: 27, scope: !6501)
!6543 = !DILocation(line: 3393, column: 5, scope: !6487)
!6544 = !DILocation(line: 3394, column: 5, scope: !6487)
!6545 = !DILocation(line: 0, scope: !6487)
!6546 = !DILocation(line: 3395, column: 1, scope: !6487)
!6547 = distinct !DISubprogram(name: "RM_DigestAddStringBuffer", scope: !3, file: !3, line: 3439, type: !6548, isLocal: false, isDefinition: true, scopeLine: 3439, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6552)
!6548 = !DISubroutineType(types: !6549)
!6549 = !{null, !6550, !346, !157}
!6550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 64)
!6551 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleDigest", file: !13, line: 586, baseType: !649)
!6552 = !{!6553, !6554, !6555}
!6553 = !DILocalVariable(name: "md", arg: 1, scope: !6547, file: !3, line: 3439, type: !6550)
!6554 = !DILocalVariable(name: "ele", arg: 2, scope: !6547, file: !3, line: 3439, type: !346)
!6555 = !DILocalVariable(name: "len", arg: 3, scope: !6547, file: !3, line: 3439, type: !157)
!6556 = !DILocation(line: 3439, column: 50, scope: !6547)
!6557 = !DILocation(line: 3439, column: 69, scope: !6547)
!6558 = !DILocation(line: 3439, column: 81, scope: !6547)
!6559 = !DILocation(line: 3440, column: 15, scope: !6547)
!6560 = !DILocation(line: 3440, column: 5, scope: !6547)
!6561 = !DILocation(line: 3441, column: 1, scope: !6547)
!6562 = distinct !DISubprogram(name: "RM_DigestAddLongLong", scope: !3, file: !3, line: 3445, type: !6563, isLocal: false, isDefinition: true, scopeLine: 3445, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6565)
!6563 = !DISubroutineType(types: !6564)
!6564 = !{null, !6550, !112}
!6565 = !{!6566, !6567, !6568, !6569}
!6566 = !DILocalVariable(name: "md", arg: 1, scope: !6562, file: !3, line: 3445, type: !6550)
!6567 = !DILocalVariable(name: "ll", arg: 2, scope: !6562, file: !3, line: 3445, type: !112)
!6568 = !DILocalVariable(name: "buf", scope: !6562, file: !3, line: 3446, type: !2113)
!6569 = !DILocalVariable(name: "len", scope: !6562, file: !3, line: 3447, type: !157)
!6570 = !DILocation(line: 3445, column: 46, scope: !6562)
!6571 = !DILocation(line: 3445, column: 60, scope: !6562)
!6572 = !DILocation(line: 3446, column: 5, scope: !6562)
!6573 = !DILocation(line: 3446, column: 10, scope: !6562)
!6574 = !DILocation(line: 3447, column: 18, scope: !6562)
!6575 = !DILocation(line: 3447, column: 12, scope: !6562)
!6576 = !DILocation(line: 3448, column: 15, scope: !6562)
!6577 = !DILocation(line: 3448, column: 5, scope: !6562)
!6578 = !DILocation(line: 3449, column: 1, scope: !6562)
!6579 = distinct !DISubprogram(name: "RM_DigestEndSequence", scope: !3, file: !3, line: 3452, type: !6580, isLocal: false, isDefinition: true, scopeLine: 3452, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6582)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{null, !6550}
!6582 = !{!6583}
!6583 = !DILocalVariable(name: "md", arg: 1, scope: !6579, file: !3, line: 3452, type: !6550)
!6584 = !DILocation(line: 3452, column: 46, scope: !6579)
!6585 = !DILocation(line: 3453, column: 15, scope: !6579)
!6586 = !DILocation(line: 3453, column: 21, scope: !6579)
!6587 = !DILocation(line: 3453, column: 5, scope: !6579)
!6588 = !DILocation(line: 3454, column: 5, scope: !6579)
!6589 = !DILocation(line: 3455, column: 1, scope: !6579)
!6590 = distinct !DISubprogram(name: "RM_EmitAOF", scope: !3, file: !3, line: 3466, type: !6591, isLocal: false, isDefinition: true, scopeLine: 3466, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6593)
!6591 = !DISubroutineType(types: !6592)
!6592 = !{null, !6065, !523, !523, null}
!6593 = !{!6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601, !6602}
!6594 = !DILocalVariable(name: "io", arg: 1, scope: !6590, file: !3, line: 3466, type: !6065)
!6595 = !DILocalVariable(name: "cmdname", arg: 2, scope: !6590, file: !3, line: 3466, type: !523)
!6596 = !DILocalVariable(name: "fmt", arg: 3, scope: !6590, file: !3, line: 3466, type: !523)
!6597 = !DILocalVariable(name: "cmd", scope: !6590, file: !3, line: 3468, type: !18)
!6598 = !DILocalVariable(name: "argv", scope: !6590, file: !3, line: 3469, type: !165)
!6599 = !DILocalVariable(name: "argc", scope: !6590, file: !3, line: 3470, type: !17)
!6600 = !DILocalVariable(name: "flags", scope: !6590, file: !3, line: 3470, type: !17)
!6601 = !DILocalVariable(name: "j", scope: !6590, file: !3, line: 3470, type: !17)
!6602 = !DILocalVariable(name: "ap", scope: !6590, file: !3, line: 3471, type: !2048)
!6603 = !DILocation(line: 3466, column: 32, scope: !6590)
!6604 = !DILocation(line: 3466, column: 48, scope: !6590)
!6605 = !DILocation(line: 3466, column: 69, scope: !6590)
!6606 = !DILocation(line: 3467, column: 13, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3467, column: 9)
!6608 = !DILocation(line: 3467, column: 9, scope: !6607)
!6609 = !DILocation(line: 3467, column: 9, scope: !6590)
!6610 = !DILocation(line: 3469, column: 12, scope: !6590)
!6611 = !DILocation(line: 3470, column: 5, scope: !6590)
!6612 = !DILocation(line: 3470, column: 9, scope: !6590)
!6613 = !DILocation(line: 3470, column: 19, scope: !6590)
!6614 = !DILocation(line: 3471, column: 5, scope: !6590)
!6615 = !DILocation(line: 3471, column: 13, scope: !6590)
!6616 = !DILocation(line: 3473, column: 11, scope: !6590)
!6617 = !DILocation(line: 3468, column: 26, scope: !6590)
!6618 = !DILocation(line: 3474, column: 10, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3474, column: 9)
!6620 = !DILocation(line: 3474, column: 9, scope: !6590)
!6621 = !DILocation(line: 3478, column: 17, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 3474, column: 15)
!6623 = !DILocation(line: 3478, column: 13, scope: !6622)
!6624 = !DILocation(line: 3475, column: 9, scope: !6622)
!6625 = !DILocation(line: 3479, column: 19, scope: !6622)
!6626 = !DILocation(line: 3480, column: 9, scope: !6622)
!6627 = !DILocation(line: 3480, column: 15, scope: !6622)
!6628 = !DILocation(line: 3481, column: 9, scope: !6622)
!6629 = !DILocation(line: 3485, column: 5, scope: !6590)
!6630 = !DILocation(line: 3486, column: 12, scope: !6590)
!6631 = !DILocation(line: 3487, column: 5, scope: !6590)
!6632 = !DILocation(line: 3488, column: 14, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3488, column: 9)
!6634 = !DILocation(line: 3488, column: 9, scope: !6590)
!6635 = !DILocation(line: 3492, column: 17, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 3488, column: 23)
!6637 = !DILocation(line: 3492, column: 13, scope: !6636)
!6638 = !DILocation(line: 3489, column: 9, scope: !6636)
!6639 = !DILocation(line: 3493, column: 19, scope: !6636)
!6640 = !DILocation(line: 3494, column: 9, scope: !6636)
!6641 = !DILocation(line: 3494, column: 15, scope: !6636)
!6642 = !DILocation(line: 3495, column: 9, scope: !6636)
!6643 = !DILocation(line: 3499, column: 14, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3499, column: 9)
!6645 = !DILocation(line: 3499, column: 10, scope: !6644)
!6646 = !DILocation(line: 3499, column: 20, scope: !6644)
!6647 = !DILocation(line: 3503, column: 21, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 3503, column: 5)
!6649 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3503, column: 5)
!6650 = !DILocation(line: 3499, column: 45, scope: !6644)
!6651 = !DILocation(line: 3499, column: 53, scope: !6644)
!6652 = !DILocation(line: 3499, column: 23, scope: !6644)
!6653 = !DILocation(line: 3499, column: 59, scope: !6644)
!6654 = !DILocation(line: 3499, column: 9, scope: !6590)
!6655 = !DILocation(line: 3500, column: 19, scope: !6644)
!6656 = !DILocation(line: 3500, column: 9, scope: !6644)
!6657 = !DILocation(line: 3470, column: 30, scope: !6590)
!6658 = !DILocation(line: 3503, column: 19, scope: !6648)
!6659 = !DILocation(line: 3503, column: 5, scope: !6649)
!6660 = !DILocation(line: 3504, column: 18, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 3504, column: 13)
!6662 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 3503, column: 32)
!6663 = !DILocation(line: 3504, column: 14, scope: !6661)
!6664 = !DILocation(line: 3504, column: 24, scope: !6661)
!6665 = !DILocation(line: 3506, column: 22, scope: !6662)
!6666 = !DILocation(line: 3504, column: 50, scope: !6661)
!6667 = !DILocation(line: 3504, column: 54, scope: !6661)
!6668 = !DILocation(line: 3504, column: 27, scope: !6661)
!6669 = !DILocation(line: 3504, column: 63, scope: !6661)
!6670 = !DILocation(line: 3504, column: 13, scope: !6662)
!6671 = !DILocation(line: 3505, column: 23, scope: !6661)
!6672 = !DILocation(line: 3505, column: 13, scope: !6661)
!6673 = !DILocation(line: 3506, column: 9, scope: !6662)
!6674 = !DILocation(line: 3503, column: 28, scope: !6648)
!6675 = distinct !{!6675, !6659, !6676}
!6676 = !DILocation(line: 3507, column: 5, scope: !6649)
!6677 = !DILocation(line: 3508, column: 11, scope: !6590)
!6678 = !DILocation(line: 3508, column: 5, scope: !6590)
!6679 = !DILocation(line: 3509, column: 5, scope: !6590)
!6680 = !DILocation(line: 3510, column: 1, scope: !6590)
!6681 = distinct !DISubprogram(name: "RM_GetContextFromIO", scope: !3, file: !3, line: 3516, type: !6682, isLocal: false, isDefinition: true, scopeLine: 3516, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6684)
!6682 = !DISubroutineType(types: !6683)
!6683 = !{!584, !6065}
!6684 = !{!6685, !6686}
!6685 = !DILocalVariable(name: "io", arg: 1, scope: !6681, file: !3, line: 3516, type: !6065)
!6686 = !DILocalVariable(name: "ctxtemplate", scope: !6681, file: !3, line: 3518, type: !585)
!6687 = !DILocation(line: 3516, column: 52, scope: !6681)
!6688 = !DILocation(line: 3517, column: 13, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6681, file: !3, line: 3517, column: 9)
!6690 = !{!6072, !892, i64 32}
!6691 = !DILocation(line: 3517, column: 9, scope: !6689)
!6692 = !DILocation(line: 3517, column: 9, scope: !6681)
!6693 = !DILocation(line: 3518, column: 5, scope: !6681)
!6694 = !DILocation(line: 3518, column: 20, scope: !6681)
!6695 = !DILocation(line: 3519, column: 15, scope: !6681)
!6696 = !DILocation(line: 3519, column: 13, scope: !6681)
!6697 = !DILocation(line: 3520, column: 18, scope: !6681)
!6698 = !DILocation(line: 3521, column: 27, scope: !6681)
!6699 = !DILocation(line: 3521, column: 33, scope: !6681)
!6700 = !DILocation(line: 3521, column: 9, scope: !6681)
!6701 = !DILocation(line: 3521, column: 14, scope: !6681)
!6702 = !DILocation(line: 3521, column: 21, scope: !6681)
!6703 = !DILocation(line: 3522, column: 14, scope: !6681)
!6704 = !DILocation(line: 3522, column: 21, scope: !6681)
!6705 = !DILocation(line: 3524, column: 1, scope: !6681)
!6706 = !DILocation(line: 0, scope: !6681)
!6707 = distinct !DISubprogram(name: "RM_GetKeyNameFromIO", scope: !3, file: !3, line: 3530, type: !6708, isLocal: false, isDefinition: true, scopeLine: 3530, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6710)
!6708 = !DISubroutineType(types: !6709)
!6709 = !{!2166, !6065}
!6710 = !{!6711}
!6711 = !DILocalVariable(name: "io", arg: 1, scope: !6707, file: !3, line: 3530, type: !6065)
!6712 = !DILocation(line: 3530, column: 61, scope: !6707)
!6713 = !DILocation(line: 3531, column: 16, scope: !6707)
!6714 = !{!6072, !892, i64 40}
!6715 = !DILocation(line: 3531, column: 5, scope: !6707)
!6716 = distinct !DISubprogram(name: "RM_LogRaw", scope: !3, file: !3, line: 3544, type: !6717, isLocal: false, isDefinition: true, scopeLine: 3544, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6719)
!6717 = !DISubroutineType(types: !6718)
!6718 = !{null, !577, !523, !523, !3017}
!6719 = !{!6720, !6721, !6722, !6723, !6724, !6728, !6729}
!6720 = !DILocalVariable(name: "module", arg: 1, scope: !6716, file: !3, line: 3544, type: !577)
!6721 = !DILocalVariable(name: "levelstr", arg: 2, scope: !6716, file: !3, line: 3544, type: !523)
!6722 = !DILocalVariable(name: "fmt", arg: 3, scope: !6716, file: !3, line: 3544, type: !523)
!6723 = !DILocalVariable(name: "ap", arg: 4, scope: !6716, file: !3, line: 3544, type: !3017)
!6724 = !DILocalVariable(name: "msg", scope: !6716, file: !3, line: 3545, type: !6725)
!6725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8192, elements: !6726)
!6726 = !{!6727}
!6727 = !DISubrange(count: 1024)
!6728 = !DILocalVariable(name: "name_len", scope: !6716, file: !3, line: 3546, type: !157)
!6729 = !DILocalVariable(name: "level", scope: !6716, file: !3, line: 3547, type: !17)
!6730 = !DILocation(line: 3544, column: 29, scope: !6716)
!6731 = !DILocation(line: 3544, column: 49, scope: !6716)
!6732 = !DILocation(line: 3544, column: 71, scope: !6716)
!6733 = !DILocation(line: 3544, column: 84, scope: !6716)
!6734 = !DILocation(line: 3545, column: 5, scope: !6716)
!6735 = !DILocation(line: 3545, column: 10, scope: !6716)
!6736 = !DILocation(line: 3549, column: 10, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 3549, column: 9)
!6738 = !DILocation(line: 3549, column: 9, scope: !6716)
!6739 = !DILocation(line: 3550, column: 15, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 3550, column: 14)
!6741 = !DILocation(line: 3550, column: 14, scope: !6737)
!6742 = !DILocation(line: 3551, column: 15, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 3551, column: 14)
!6744 = !DILocation(line: 3551, column: 14, scope: !6740)
!6745 = !DILocation(line: 3552, column: 15, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 3552, column: 14)
!6747 = !DILocation(line: 3552, column: 47, scope: !6746)
!6748 = !DILocation(line: 0, scope: !6737)
!6749 = !DILocation(line: 3547, column: 9, scope: !6716)
!6750 = !DILocation(line: 3555, column: 24, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 3555, column: 9)
!6752 = !{!1045, !895, i64 1728}
!6753 = !DILocation(line: 3555, column: 15, scope: !6751)
!6754 = !DILocation(line: 3555, column: 9, scope: !6716)
!6755 = !DILocation(line: 3557, column: 51, scope: !6716)
!6756 = !DILocation(line: 3557, column: 67, scope: !6716)
!6757 = !DILocation(line: 3557, column: 16, scope: !6716)
!6758 = !DILocation(line: 3546, column: 12, scope: !6716)
!6759 = !DILocation(line: 3558, column: 19, scope: !6716)
!6760 = !DILocation(line: 3558, column: 43, scope: !6716)
!6761 = !DILocation(line: 3558, column: 5, scope: !6716)
!6762 = !DILocation(line: 3559, column: 5, scope: !6716)
!6763 = !DILocation(line: 3560, column: 1, scope: !6716)
!6764 = distinct !DISubprogram(name: "RM_Log", scope: !3, file: !3, line: 3580, type: !6765, isLocal: false, isDefinition: true, scopeLine: 3580, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6767)
!6765 = !DISubroutineType(types: !6766)
!6766 = !{null, !584, !523, !523, null}
!6767 = !{!6768, !6769, !6770, !6771}
!6768 = !DILocalVariable(name: "ctx", arg: 1, scope: !6764, file: !3, line: 3580, type: !584)
!6769 = !DILocalVariable(name: "levelstr", arg: 2, scope: !6764, file: !3, line: 3580, type: !523)
!6770 = !DILocalVariable(name: "fmt", arg: 3, scope: !6764, file: !3, line: 3580, type: !523)
!6771 = !DILocalVariable(name: "ap", scope: !6764, file: !3, line: 3581, type: !2048)
!6772 = !DILocation(line: 3580, column: 29, scope: !6764)
!6773 = !DILocation(line: 3580, column: 46, scope: !6764)
!6774 = !DILocation(line: 3580, column: 68, scope: !6764)
!6775 = !DILocation(line: 3581, column: 5, scope: !6764)
!6776 = !DILocation(line: 3581, column: 13, scope: !6764)
!6777 = !DILocation(line: 3582, column: 5, scope: !6764)
!6778 = !DILocation(line: 3583, column: 15, scope: !6764)
!6779 = !DILocation(line: 3583, column: 25, scope: !6764)
!6780 = !DILocation(line: 3583, column: 5, scope: !6764)
!6781 = !DILocation(line: 3584, column: 5, scope: !6764)
!6782 = !DILocation(line: 3585, column: 1, scope: !6764)
!6783 = distinct !DISubprogram(name: "RM_LogIOError", scope: !3, file: !3, line: 3592, type: !6591, isLocal: false, isDefinition: true, scopeLine: 3592, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6784)
!6784 = !{!6785, !6786, !6787, !6788}
!6785 = !DILocalVariable(name: "io", arg: 1, scope: !6783, file: !3, line: 3592, type: !6065)
!6786 = !DILocalVariable(name: "levelstr", arg: 2, scope: !6783, file: !3, line: 3592, type: !523)
!6787 = !DILocalVariable(name: "fmt", arg: 3, scope: !6783, file: !3, line: 3592, type: !523)
!6788 = !DILocalVariable(name: "ap", scope: !6783, file: !3, line: 3593, type: !2048)
!6789 = !DILocation(line: 3592, column: 35, scope: !6783)
!6790 = !DILocation(line: 3592, column: 51, scope: !6783)
!6791 = !DILocation(line: 3592, column: 73, scope: !6783)
!6792 = !DILocation(line: 3593, column: 5, scope: !6783)
!6793 = !DILocation(line: 3593, column: 13, scope: !6783)
!6794 = !DILocation(line: 3594, column: 5, scope: !6783)
!6795 = !DILocation(line: 3595, column: 19, scope: !6783)
!6796 = !DILocation(line: 3595, column: 25, scope: !6783)
!6797 = !DILocation(line: 3595, column: 5, scope: !6783)
!6798 = !DILocation(line: 3596, column: 5, scope: !6783)
!6799 = !DILocation(line: 3597, column: 1, scope: !6783)
!6800 = distinct !DISubprogram(name: "moduleBlockedClientPipeReadable", scope: !3, file: !3, line: 3607, type: !6801, isLocal: false, isDefinition: true, scopeLine: 3607, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6863)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{null, !6803, !17, !6, !17}
!6803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6804, size: 64)
!6804 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventLoop", file: !6805, line: 109, baseType: !6806)
!6805 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/ae.h", directory: "/root/.unikraft/apps/redis/build")
!6806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeEventLoop", file: !6805, line: 97, size: 640, elements: !6807)
!6807 = !{!6808, !6809, !6810, !6811, !6812, !6826, !6833, !6855, !6856, !6857, !6862}
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "maxfd", scope: !6806, file: !6805, line: 98, baseType: !17, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "setsize", scope: !6806, file: !6805, line: 99, baseType: !17, size: 32, offset: 32)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventNextId", scope: !6806, file: !6805, line: 100, baseType: !112, size: 64, offset: 64)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "lastTime", scope: !6806, file: !6805, line: 101, baseType: !176, size: 64, offset: 128)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !6806, file: !6805, line: 102, baseType: !6813, size: 64, offset: 192)
!6813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6814, size: 64)
!6814 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileEvent", file: !6805, line: 76, baseType: !6815)
!6815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFileEvent", file: !6805, line: 71, size: 256, elements: !6816)
!6816 = !{!6817, !6818, !6824, !6825}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6815, file: !6805, line: 72, baseType: !17, size: 32)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "rfileProc", scope: !6815, file: !6805, line: 73, baseType: !6819, size: 64, offset: 64)
!6819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6820, size: 64)
!6820 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileProc", file: !6805, line: 65, baseType: !6821)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{null, !6823, !17, !6, !17}
!6823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6806, size: 64)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "wfileProc", scope: !6815, file: !6805, line: 74, baseType: !6819, size: 64, offset: 128)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !6815, file: !6805, line: 75, baseType: !6, size: 64, offset: 192)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "fired", scope: !6806, file: !6805, line: 103, baseType: !6827, size: 64, offset: 256)
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6828, size: 64)
!6828 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFiredEvent", file: !6805, line: 94, baseType: !6829)
!6829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFiredEvent", file: !6805, line: 91, size: 64, elements: !6830)
!6830 = !{!6831, !6832}
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !6829, file: !6805, line: 92, baseType: !17, size: 32)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6829, file: !6805, line: 93, baseType: !17, size: 32, offset: 32)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventHead", scope: !6806, file: !6805, line: 104, baseType: !6834, size: 64, offset: 320)
!6834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 64)
!6835 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeEvent", file: !6805, line: 88, baseType: !6836)
!6836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeTimeEvent", file: !6805, line: 79, size: 512, elements: !6837)
!6837 = !{!6838, !6839, !6840, !6841, !6846, !6851, !6852, !6854}
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6836, file: !6805, line: 80, baseType: !112, size: 64)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "when_sec", scope: !6836, file: !6805, line: 81, baseType: !94, size: 64, offset: 64)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "when_ms", scope: !6836, file: !6805, line: 82, baseType: !94, size: 64, offset: 128)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "timeProc", scope: !6836, file: !6805, line: 83, baseType: !6842, size: 64, offset: 192)
!6842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6843, size: 64)
!6843 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeProc", file: !6805, line: 66, baseType: !6844)
!6844 = !DISubroutineType(types: !6845)
!6845 = !{!17, !6823, !112, !6}
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "finalizerProc", scope: !6836, file: !6805, line: 84, baseType: !6847, size: 64, offset: 256)
!6847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6848, size: 64)
!6848 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventFinalizerProc", file: !6805, line: 67, baseType: !6849)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{null, !6823, !6}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !6836, file: !6805, line: 85, baseType: !6, size: 64, offset: 320)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6836, file: !6805, line: 86, baseType: !6853, size: 64, offset: 384)
!6853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6836, size: 64)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6836, file: !6805, line: 87, baseType: !6853, size: 64, offset: 448)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !6806, file: !6805, line: 105, baseType: !17, size: 32, offset: 384)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "apidata", scope: !6806, file: !6805, line: 106, baseType: !6, size: 64, offset: 448)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "beforesleep", scope: !6806, file: !6805, line: 107, baseType: !6858, size: 64, offset: 512)
!6858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6859, size: 64)
!6859 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeBeforeSleepProc", file: !6805, line: 68, baseType: !6860)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{null, !6823}
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "aftersleep", scope: !6806, file: !6805, line: 108, baseType: !6858, size: 64, offset: 576)
!6863 = !{!6864, !6865, !6866, !6867}
!6864 = !DILocalVariable(name: "el", arg: 1, scope: !6800, file: !3, line: 3607, type: !6803)
!6865 = !DILocalVariable(name: "fd", arg: 2, scope: !6800, file: !3, line: 3607, type: !17)
!6866 = !DILocalVariable(name: "privdata", arg: 3, scope: !6800, file: !3, line: 3607, type: !6)
!6867 = !DILocalVariable(name: "mask", arg: 4, scope: !6800, file: !3, line: 3607, type: !17)
!6868 = !DILocation(line: 3607, column: 51, scope: !6800)
!6869 = !DILocation(line: 3607, column: 59, scope: !6800)
!6870 = !DILocation(line: 3607, column: 69, scope: !6800)
!6871 = !DILocation(line: 3607, column: 83, scope: !6800)
!6872 = !DILocation(line: 3612, column: 1, scope: !6800)
!6873 = distinct !DISubprogram(name: "unblockClientFromModule", scope: !3, file: !3, line: 3626, type: !25, isLocal: false, isDefinition: true, scopeLine: 3626, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6874)
!6874 = !{!6875, !6876, !6879}
!6875 = !DILocalVariable(name: "c", arg: 1, scope: !6873, file: !3, line: 3626, type: !27)
!6876 = !DILocalVariable(name: "bc", scope: !6873, file: !3, line: 3627, type: !6877)
!6877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6878, size: 64)
!6878 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleBlockedClient", file: !3, line: 230, baseType: !573)
!6879 = !DILocalVariable(name: "ctx", scope: !6880, file: !3, line: 3631, type: !585)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 3630, column: 34)
!6881 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 3630, column: 9)
!6882 = !DILocation(line: 3626, column: 38, scope: !6873)
!6883 = !DILocation(line: 3627, column: 44, scope: !6873)
!6884 = !{!1255, !892, i64 472}
!6885 = !DILocation(line: 3627, column: 31, scope: !6873)
!6886 = !DILocation(line: 3630, column: 13, scope: !6881)
!6887 = !{!6888, !892, i64 32}
!6888 = !{!"RedisModuleBlockedClient", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !892, i64 56, !895, i64 64}
!6889 = !DILocation(line: 3630, column: 9, scope: !6881)
!6890 = !DILocation(line: 3630, column: 9, scope: !6873)
!6891 = !DILocation(line: 3631, column: 9, scope: !6880)
!6892 = !DILocation(line: 3631, column: 24, scope: !6880)
!6893 = !DILocation(line: 3632, column: 36, scope: !6880)
!6894 = !{!6888, !892, i64 48}
!6895 = !DILocation(line: 3632, column: 13, scope: !6880)
!6896 = !DILocation(line: 3632, column: 30, scope: !6880)
!6897 = !{!891, !892, i64 72}
!6898 = !DILocation(line: 3633, column: 13, scope: !6880)
!6899 = !DILocation(line: 3634, column: 26, scope: !6880)
!6900 = !DILocation(line: 3633, column: 20, scope: !6880)
!6901 = !DILocation(line: 3635, column: 13, scope: !6880)
!6902 = !DILocation(line: 3635, column: 9, scope: !6880)
!6903 = !DILocation(line: 3636, column: 9, scope: !6880)
!6904 = !DILocation(line: 3637, column: 5, scope: !6881)
!6905 = !DILocation(line: 3637, column: 5, scope: !6880)
!6906 = !DILocation(line: 3639, column: 9, scope: !6873)
!6907 = !DILocation(line: 3639, column: 16, scope: !6873)
!6908 = !{!6888, !892, i64 0}
!6909 = !DILocation(line: 3644, column: 5, scope: !6873)
!6910 = !DILocation(line: 3645, column: 1, scope: !6873)
!6911 = distinct !DISubprogram(name: "RM_BlockClient", scope: !3, file: !3, line: 3663, type: !6912, isLocal: false, isDefinition: true, scopeLine: 3663, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6914)
!6912 = !DISubroutineType(types: !6913)
!6913 = !{!6877, !584, !580, !580, !593, !112}
!6914 = !{!6915, !6916, !6917, !6918, !6919, !6920, !6921, !6922, !6923}
!6915 = !DILocalVariable(name: "ctx", arg: 1, scope: !6911, file: !3, line: 3663, type: !584)
!6916 = !DILocalVariable(name: "reply_callback", arg: 2, scope: !6911, file: !3, line: 3663, type: !580)
!6917 = !DILocalVariable(name: "timeout_callback", arg: 3, scope: !6911, file: !3, line: 3663, type: !580)
!6918 = !DILocalVariable(name: "free_privdata", arg: 4, scope: !6911, file: !3, line: 3663, type: !593)
!6919 = !DILocalVariable(name: "timeout_ms", arg: 5, scope: !6911, file: !3, line: 3663, type: !112)
!6920 = !DILocalVariable(name: "c", scope: !6911, file: !3, line: 3664, type: !27)
!6921 = !DILocalVariable(name: "islua", scope: !6911, file: !3, line: 3665, type: !17)
!6922 = !DILocalVariable(name: "ismulti", scope: !6911, file: !3, line: 3666, type: !17)
!6923 = !DILocalVariable(name: "bc", scope: !6911, file: !3, line: 3669, type: !6877)
!6924 = !DILocation(line: 3663, column: 58, scope: !6911)
!6925 = !DILocation(line: 3663, column: 82, scope: !6911)
!6926 = !DILocation(line: 3663, column: 117, scope: !6911)
!6927 = !DILocation(line: 3663, column: 142, scope: !6911)
!6928 = !DILocation(line: 3663, column: 191, scope: !6911)
!6929 = !DILocation(line: 3664, column: 22, scope: !6911)
!6930 = !DILocation(line: 3664, column: 13, scope: !6911)
!6931 = !DILocation(line: 3665, column: 20, scope: !6911)
!6932 = !DILocation(line: 3665, column: 26, scope: !6911)
!6933 = !DILocation(line: 3665, column: 9, scope: !6911)
!6934 = !DILocation(line: 3666, column: 9, scope: !6911)
!6935 = !DILocation(line: 3668, column: 37, scope: !6911)
!6936 = !DILocation(line: 3668, column: 13, scope: !6911)
!6937 = !DILocation(line: 3668, column: 35, scope: !6911)
!6938 = !DILocation(line: 3669, column: 36, scope: !6911)
!6939 = !DILocation(line: 3669, column: 31, scope: !6911)
!6940 = !DILocation(line: 3675, column: 19, scope: !6911)
!6941 = !DILocation(line: 3675, column: 25, scope: !6911)
!6942 = !DILocation(line: 3675, column: 9, scope: !6911)
!6943 = !DILocation(line: 3675, column: 16, scope: !6911)
!6944 = !DILocation(line: 3676, column: 23, scope: !6911)
!6945 = !DILocation(line: 3676, column: 9, scope: !6911)
!6946 = !DILocation(line: 3676, column: 16, scope: !6911)
!6947 = !{!6888, !892, i64 8}
!6948 = !DILocation(line: 3677, column: 9, scope: !6911)
!6949 = !DILocation(line: 3677, column: 24, scope: !6911)
!6950 = !{!6888, !892, i64 16}
!6951 = !DILocation(line: 3678, column: 9, scope: !6911)
!6952 = !DILocation(line: 3678, column: 26, scope: !6911)
!6953 = !{!6888, !892, i64 24}
!6954 = !DILocation(line: 3679, column: 9, scope: !6911)
!6955 = !DILocation(line: 3679, column: 29, scope: !6911)
!6956 = !DILocation(line: 3680, column: 9, scope: !6911)
!6957 = !DILocation(line: 3680, column: 23, scope: !6911)
!6958 = !{!6888, !892, i64 40}
!6959 = !DILocation(line: 3681, column: 9, scope: !6911)
!6960 = !DILocation(line: 3681, column: 18, scope: !6911)
!6961 = !DILocation(line: 3682, column: 24, scope: !6911)
!6962 = !DILocation(line: 3682, column: 9, scope: !6911)
!6963 = !DILocation(line: 3682, column: 22, scope: !6911)
!6964 = !{!6888, !892, i64 56}
!6965 = !DILocation(line: 3683, column: 23, scope: !6911)
!6966 = !DILocation(line: 3683, column: 29, scope: !6911)
!6967 = !DILocation(line: 3684, column: 19, scope: !6911)
!6968 = !DILocation(line: 3684, column: 23, scope: !6911)
!6969 = !DILocation(line: 3684, column: 9, scope: !6911)
!6970 = !DILocation(line: 3684, column: 14, scope: !6911)
!6971 = !{!6888, !895, i64 64}
!6972 = !DILocation(line: 3685, column: 23, scope: !6911)
!6973 = !DILocation(line: 3685, column: 37, scope: !6911)
!6974 = !DILocation(line: 3685, column: 45, scope: !6911)
!6975 = !DILocation(line: 3685, column: 13, scope: !6911)
!6976 = !DILocation(line: 3685, column: 21, scope: !6911)
!6977 = !{!1255, !1047, i64 392}
!6978 = !DILocation(line: 3687, column: 15, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 3687, column: 9)
!6980 = !DILocation(line: 3688, column: 39, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 3687, column: 27)
!6982 = !DILocation(line: 3689, column: 26, scope: !6981)
!6983 = !DILocation(line: 3689, column: 9, scope: !6981)
!6984 = !DILocation(line: 3692, column: 5, scope: !6981)
!6985 = !DILocation(line: 3693, column: 9, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 3692, column: 12)
!6987 = !DILocation(line: 3695, column: 5, scope: !6911)
!6988 = distinct !DISubprogram(name: "RM_UnblockClient", scope: !3, file: !3, line: 3709, type: !6989, isLocal: false, isDefinition: true, scopeLine: 3709, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6991)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{!17, !6877, !6}
!6991 = !{!6992, !6993}
!6992 = !DILocalVariable(name: "bc", arg: 1, scope: !6988, file: !3, line: 3709, type: !6877)
!6993 = !DILocalVariable(name: "privdata", arg: 2, scope: !6988, file: !3, line: 3709, type: !6)
!6994 = !DILocation(line: 3709, column: 48, scope: !6988)
!6995 = !DILocation(line: 3709, column: 58, scope: !6988)
!6996 = !DILocation(line: 3710, column: 5, scope: !6988)
!6997 = !DILocation(line: 3711, column: 9, scope: !6988)
!6998 = !DILocation(line: 3711, column: 18, scope: !6988)
!6999 = !DILocation(line: 3712, column: 21, scope: !6988)
!7000 = !DILocation(line: 3712, column: 44, scope: !6988)
!7001 = !DILocation(line: 3712, column: 5, scope: !6988)
!7002 = !DILocation(line: 3713, column: 15, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 3713, column: 9)
!7004 = !DILocation(line: 3713, column: 9, scope: !7003)
!7005 = !DILocation(line: 3716, column: 5, scope: !6988)
!7006 = !DILocation(line: 3717, column: 5, scope: !6988)
!7007 = distinct !DISubprogram(name: "RM_AbortBlock", scope: !3, file: !3, line: 3722, type: !7008, isLocal: false, isDefinition: true, scopeLine: 3722, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7010)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{!17, !6877}
!7010 = !{!7011}
!7011 = !DILocalVariable(name: "bc", arg: 1, scope: !7007, file: !3, line: 3722, type: !6877)
!7012 = !DILocation(line: 3722, column: 45, scope: !7007)
!7013 = !DILocation(line: 3723, column: 9, scope: !7007)
!7014 = !DILocation(line: 3723, column: 24, scope: !7007)
!7015 = !DILocation(line: 3724, column: 9, scope: !7007)
!7016 = !DILocation(line: 3724, column: 29, scope: !7007)
!7017 = !DILocation(line: 3709, column: 48, scope: !6988, inlinedAt: !7018)
!7018 = distinct !DILocation(line: 3725, column: 12, scope: !7007)
!7019 = !DILocation(line: 3709, column: 58, scope: !6988, inlinedAt: !7018)
!7020 = !DILocation(line: 3710, column: 5, scope: !6988, inlinedAt: !7018)
!7021 = !DILocation(line: 3711, column: 9, scope: !6988, inlinedAt: !7018)
!7022 = !DILocation(line: 3711, column: 18, scope: !6988, inlinedAt: !7018)
!7023 = !DILocation(line: 3712, column: 21, scope: !6988, inlinedAt: !7018)
!7024 = !DILocation(line: 3712, column: 44, scope: !6988, inlinedAt: !7018)
!7025 = !DILocation(line: 3712, column: 5, scope: !6988, inlinedAt: !7018)
!7026 = !DILocation(line: 3713, column: 15, scope: !7003, inlinedAt: !7018)
!7027 = !DILocation(line: 3713, column: 9, scope: !7003, inlinedAt: !7018)
!7028 = !DILocation(line: 3716, column: 5, scope: !6988, inlinedAt: !7018)
!7029 = !DILocation(line: 3725, column: 5, scope: !7007)
!7030 = distinct !DISubprogram(name: "RM_SetDisconnectCallback", scope: !3, file: !3, line: 3744, type: !7031, isLocal: false, isDefinition: true, scopeLine: 3744, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7033)
!7031 = !DISubroutineType(types: !7032)
!7032 = !{null, !6877, !588}
!7033 = !{!7034, !7035}
!7034 = !DILocalVariable(name: "bc", arg: 1, scope: !7030, file: !3, line: 3744, type: !6877)
!7035 = !DILocalVariable(name: "callback", arg: 2, scope: !7030, file: !3, line: 3744, type: !588)
!7036 = !DILocation(line: 3744, column: 57, scope: !7030)
!7037 = !DILocation(line: 3744, column: 87, scope: !7030)
!7038 = !DILocation(line: 3745, column: 9, scope: !7030)
!7039 = !DILocation(line: 3745, column: 29, scope: !7030)
!7040 = !DILocation(line: 3746, column: 1, scope: !7030)
!7041 = distinct !DISubprogram(name: "moduleHandleBlockedClients", scope: !3, file: !3, line: 3756, type: !492, isLocal: false, isDefinition: true, scopeLine: 3756, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7042)
!7042 = !{!7043, !7044, !7045, !7047, !7049, !7052}
!7043 = !DILocalVariable(name: "ln", scope: !7041, file: !3, line: 3757, type: !120)
!7044 = !DILocalVariable(name: "bc", scope: !7041, file: !3, line: 3758, type: !6877)
!7045 = !DILocalVariable(name: "buf", scope: !7041, file: !3, line: 3763, type: !7046)
!7046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, elements: !399)
!7047 = !DILocalVariable(name: "c", scope: !7048, file: !3, line: 3768, type: !27)
!7048 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 3765, column: 48)
!7049 = !DILocalVariable(name: "ctx", scope: !7050, file: !3, line: 3778, type: !585)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 3777, column: 38)
!7051 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 3777, column: 13)
!7052 = !DILocalVariable(name: "ctx", scope: !7053, file: !3, line: 3791, type: !585)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 3790, column: 48)
!7054 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 3790, column: 13)
!7055 = !DILocation(line: 527, column: 15, scope: !1246, inlinedAt: !7056)
!7056 = distinct !DILocation(line: 3785, column: 13, scope: !7050)
!7057 = !DILocation(line: 3760, column: 5, scope: !7041)
!7058 = !DILocation(line: 3763, column: 5, scope: !7041)
!7059 = !DILocation(line: 3763, column: 10, scope: !7041)
!7060 = !DILocation(line: 3764, column: 5, scope: !7041)
!7061 = !DILocation(line: 3764, column: 17, scope: !7041)
!7062 = !DILocation(line: 3764, column: 12, scope: !7041)
!7063 = !DILocation(line: 3764, column: 54, scope: !7041)
!7064 = distinct !{!7064, !7060, !7065}
!7065 = !DILocation(line: 3764, column: 59, scope: !7041)
!7066 = !DILocation(line: 3765, column: 12, scope: !7041)
!7067 = !DILocation(line: 3765, column: 5, scope: !7041)
!7068 = !DILocation(line: 3766, column: 14, scope: !7048)
!7069 = !DILocation(line: 3757, column: 15, scope: !7041)
!7070 = !DILocation(line: 3767, column: 18, scope: !7048)
!7071 = !DILocation(line: 3758, column: 31, scope: !7041)
!7072 = !DILocation(line: 3768, column: 25, scope: !7048)
!7073 = !DILocation(line: 3768, column: 17, scope: !7048)
!7074 = !DILocation(line: 3769, column: 9, scope: !7048)
!7075 = !DILocation(line: 3770, column: 9, scope: !7048)
!7076 = !DILocation(line: 3777, column: 13, scope: !7051)
!7077 = !DILocation(line: 3777, column: 15, scope: !7051)
!7078 = !DILocation(line: 3777, column: 22, scope: !7051)
!7079 = !DILocation(line: 3777, column: 18, scope: !7051)
!7080 = !DILocation(line: 3777, column: 13, scope: !7048)
!7081 = !DILocation(line: 3778, column: 13, scope: !7050)
!7082 = !DILocation(line: 3778, column: 28, scope: !7050)
!7083 = !DILocation(line: 3779, column: 23, scope: !7050)
!7084 = !DILocation(line: 3780, column: 40, scope: !7050)
!7085 = !DILocation(line: 3780, column: 34, scope: !7050)
!7086 = !DILocation(line: 3782, column: 30, scope: !7050)
!7087 = !DILocation(line: 3781, column: 24, scope: !7050)
!7088 = !DILocation(line: 3783, column: 32, scope: !7050)
!7089 = !DILocation(line: 3784, column: 17, scope: !7050)
!7090 = !DILocation(line: 3784, column: 48, scope: !7050)
!7091 = !DILocation(line: 3784, column: 56, scope: !7050)
!7092 = !DILocation(line: 3784, column: 13, scope: !7050)
!7093 = !DILocation(line: 519, column: 66, scope: !1241, inlinedAt: !7056)
!7094 = !DILocation(line: 520, column: 22, scope: !1241, inlinedAt: !7056)
!7095 = !DILocation(line: 520, column: 13, scope: !1241, inlinedAt: !7056)
!7096 = !DILocation(line: 522, column: 12, scope: !1253, inlinedAt: !7056)
!7097 = !DILocation(line: 522, column: 18, scope: !1253, inlinedAt: !7056)
!7098 = !DILocation(line: 522, column: 9, scope: !1241, inlinedAt: !7056)
!7099 = !DILocation(line: 526, column: 14, scope: !1247, inlinedAt: !7056)
!7100 = !DILocation(line: 526, column: 20, scope: !1247, inlinedAt: !7056)
!7101 = !DILocation(line: 526, column: 9, scope: !1241, inlinedAt: !7056)
!7102 = !DILocation(line: 527, column: 9, scope: !1246, inlinedAt: !7056)
!7103 = !DILocation(line: 528, column: 23, scope: !1246, inlinedAt: !7056)
!7104 = !DILocation(line: 528, column: 21, scope: !1246, inlinedAt: !7056)
!7105 = !DILocation(line: 529, column: 30, scope: !1246, inlinedAt: !7056)
!7106 = !DILocation(line: 529, column: 45, scope: !1246, inlinedAt: !7056)
!7107 = !DILocation(line: 529, column: 49, scope: !1246, inlinedAt: !7056)
!7108 = !DILocation(line: 529, column: 9, scope: !1246, inlinedAt: !7056)
!7109 = !DILocation(line: 531, column: 22, scope: !1246, inlinedAt: !7056)
!7110 = !DILocation(line: 531, column: 9, scope: !1246, inlinedAt: !7056)
!7111 = !DILocation(line: 532, column: 5, scope: !1247, inlinedAt: !7056)
!7112 = !DILocation(line: 532, column: 5, scope: !1246, inlinedAt: !7056)
!7113 = !DILocation(line: 3786, column: 13, scope: !7050)
!7114 = !DILocation(line: 3787, column: 9, scope: !7051)
!7115 = !DILocation(line: 3787, column: 9, scope: !7050)
!7116 = !DILocation(line: 3790, column: 17, scope: !7054)
!7117 = !DILocation(line: 3790, column: 13, scope: !7054)
!7118 = !DILocation(line: 3790, column: 26, scope: !7054)
!7119 = !DILocation(line: 3790, column: 33, scope: !7054)
!7120 = !DILocation(line: 3790, column: 29, scope: !7054)
!7121 = !DILocation(line: 3790, column: 13, scope: !7048)
!7122 = !DILocation(line: 3791, column: 13, scope: !7053)
!7123 = !DILocation(line: 3791, column: 28, scope: !7053)
!7124 = !DILocation(line: 3792, column: 19, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 3792, column: 17)
!7126 = !DILocation(line: 3792, column: 17, scope: !7053)
!7127 = !DILocation(line: 3793, column: 27, scope: !7125)
!7128 = !DILocation(line: 3793, column: 17, scope: !7125)
!7129 = !DILocation(line: 3794, column: 40, scope: !7053)
!7130 = !DILocation(line: 3794, column: 34, scope: !7053)
!7131 = !DILocation(line: 3796, column: 30, scope: !7053)
!7132 = !DILocation(line: 3795, column: 24, scope: !7053)
!7133 = !DILocation(line: 3797, column: 17, scope: !7053)
!7134 = !DILocation(line: 3797, column: 40, scope: !7053)
!7135 = !DILocation(line: 3797, column: 13, scope: !7053)
!7136 = !DILocation(line: 3798, column: 13, scope: !7053)
!7137 = !DILocation(line: 3799, column: 9, scope: !7054)
!7138 = !DILocation(line: 3799, column: 9, scope: !7053)
!7139 = !DILocation(line: 0, scope: !7048)
!7140 = !DILocation(line: 3805, column: 13, scope: !7048)
!7141 = !DILocation(line: 3805, column: 16, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 3805, column: 13)
!7143 = !DILocation(line: 3806, column: 24, scope: !7048)
!7144 = !DILocation(line: 3806, column: 9, scope: !7048)
!7145 = !DILocation(line: 3812, column: 17, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 3808, column: 24)
!7147 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 3808, column: 13)
!7148 = !DILocation(line: 3812, column: 37, scope: !7146)
!7149 = !DILocation(line: 3813, column: 13, scope: !7146)
!7150 = !DILocation(line: 3817, column: 17, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 3817, column: 17)
!7152 = !DILocation(line: 3817, column: 44, scope: !7151)
!7153 = !DILocation(line: 3818, column: 22, scope: !7151)
!7154 = !DILocation(line: 3818, column: 28, scope: !7151)
!7155 = !DILocation(line: 3817, column: 17, scope: !7146)
!7156 = !DILocation(line: 3820, column: 26, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 3819, column: 13)
!7158 = !DILocation(line: 3821, column: 40, scope: !7157)
!7159 = !{!1045, !892, i64 528}
!7160 = !DILocation(line: 3821, column: 62, scope: !7157)
!7161 = !DILocation(line: 3821, column: 17, scope: !7157)
!7162 = !DILocation(line: 3822, column: 13, scope: !7157)
!7163 = !DILocation(line: 3828, column: 9, scope: !7048)
!7164 = !DILocation(line: 3831, column: 9, scope: !7048)
!7165 = distinct !{!7165, !7067, !7166}
!7166 = !DILocation(line: 3832, column: 5, scope: !7041)
!7167 = !DILocation(line: 3833, column: 5, scope: !7041)
!7168 = !DILocation(line: 3834, column: 1, scope: !7041)
!7169 = distinct !DISubprogram(name: "moduleBlockedClientTimedOut", scope: !3, file: !3, line: 3840, type: !25, isLocal: false, isDefinition: true, scopeLine: 3840, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7170)
!7170 = !{!7171, !7172, !7173}
!7171 = !DILocalVariable(name: "c", arg: 1, scope: !7169, file: !3, line: 3840, type: !27)
!7172 = !DILocalVariable(name: "bc", scope: !7169, file: !3, line: 3841, type: !6877)
!7173 = !DILocalVariable(name: "ctx", scope: !7169, file: !3, line: 3842, type: !585)
!7174 = !DILocation(line: 3840, column: 42, scope: !7169)
!7175 = !DILocation(line: 3841, column: 44, scope: !7169)
!7176 = !DILocation(line: 3841, column: 31, scope: !7169)
!7177 = !DILocation(line: 3842, column: 5, scope: !7169)
!7178 = !DILocation(line: 3842, column: 20, scope: !7169)
!7179 = !DILocation(line: 3843, column: 9, scope: !7169)
!7180 = !DILocation(line: 3843, column: 15, scope: !7169)
!7181 = !DILocation(line: 3844, column: 9, scope: !7169)
!7182 = !DILocation(line: 3845, column: 22, scope: !7169)
!7183 = !DILocation(line: 3844, column: 16, scope: !7169)
!7184 = !DILocation(line: 3846, column: 9, scope: !7169)
!7185 = !DILocation(line: 3846, column: 24, scope: !7169)
!7186 = !DILocation(line: 3847, column: 9, scope: !7169)
!7187 = !DILocation(line: 3847, column: 42, scope: !7169)
!7188 = !DILocation(line: 3847, column: 50, scope: !7169)
!7189 = !DILocation(line: 3847, column: 5, scope: !7169)
!7190 = !DILocation(line: 3848, column: 5, scope: !7169)
!7191 = !DILocation(line: 3852, column: 9, scope: !7169)
!7192 = !DILocation(line: 3852, column: 29, scope: !7169)
!7193 = !DILocation(line: 3853, column: 1, scope: !7169)
!7194 = distinct !DISubprogram(name: "RM_IsBlockedReplyRequest", scope: !3, file: !3, line: 3857, type: !1401, isLocal: false, isDefinition: true, scopeLine: 3857, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7195)
!7195 = !{!7196}
!7196 = !DILocalVariable(name: "ctx", arg: 1, scope: !7194, file: !3, line: 3857, type: !584)
!7197 = !DILocation(line: 3857, column: 46, scope: !7194)
!7198 = !DILocation(line: 3858, column: 18, scope: !7194)
!7199 = !DILocation(line: 3858, column: 57, scope: !7194)
!7200 = !DILocation(line: 3858, column: 5, scope: !7194)
!7201 = distinct !DISubprogram(name: "RM_IsBlockedTimeoutRequest", scope: !3, file: !3, line: 3863, type: !1401, isLocal: false, isDefinition: true, scopeLine: 3863, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7202)
!7202 = !{!7203}
!7203 = !DILocalVariable(name: "ctx", arg: 1, scope: !7201, file: !3, line: 3863, type: !584)
!7204 = !DILocation(line: 3863, column: 48, scope: !7201)
!7205 = !DILocation(line: 3864, column: 18, scope: !7201)
!7206 = !DILocation(line: 3864, column: 59, scope: !7201)
!7207 = !DILocation(line: 3864, column: 5, scope: !7201)
!7208 = distinct !DISubprogram(name: "RM_GetBlockedClientPrivateData", scope: !3, file: !3, line: 3868, type: !7209, isLocal: false, isDefinition: true, scopeLine: 3868, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7211)
!7209 = !DISubroutineType(types: !7210)
!7210 = !{!6, !584}
!7211 = !{!7212}
!7212 = !DILocalVariable(name: "ctx", arg: 1, scope: !7208, file: !3, line: 3868, type: !584)
!7213 = !DILocation(line: 3868, column: 54, scope: !7208)
!7214 = !DILocation(line: 3869, column: 17, scope: !7208)
!7215 = !DILocation(line: 3869, column: 5, scope: !7208)
!7216 = distinct !DISubprogram(name: "RM_GetBlockedClientHandle", scope: !3, file: !3, line: 3876, type: !7217, isLocal: false, isDefinition: true, scopeLine: 3876, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7219)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{!6877, !584}
!7219 = !{!7220}
!7220 = !DILocalVariable(name: "ctx", arg: 1, scope: !7216, file: !3, line: 3876, type: !584)
!7221 = !DILocation(line: 3876, column: 69, scope: !7216)
!7222 = !DILocation(line: 3877, column: 17, scope: !7216)
!7223 = !DILocation(line: 3877, column: 5, scope: !7216)
!7224 = distinct !DISubprogram(name: "RM_BlockedClientDisconnected", scope: !3, file: !3, line: 3883, type: !1401, isLocal: false, isDefinition: true, scopeLine: 3883, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7225)
!7225 = !{!7226}
!7226 = !DILocalVariable(name: "ctx", arg: 1, scope: !7224, file: !3, line: 3883, type: !584)
!7227 = !DILocation(line: 3883, column: 50, scope: !7224)
!7228 = !DILocation(line: 3884, column: 18, scope: !7224)
!7229 = !DILocation(line: 3884, column: 64, scope: !7224)
!7230 = !DILocation(line: 3884, column: 5, scope: !7224)
!7231 = distinct !DISubprogram(name: "RM_GetThreadSafeContext", scope: !3, file: !3, line: 3910, type: !7232, isLocal: false, isDefinition: true, scopeLine: 3910, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7234)
!7232 = !DISubroutineType(types: !7233)
!7233 = !{!584, !6877}
!7234 = !{!7235, !7236, !7237}
!7235 = !DILocalVariable(name: "bc", arg: 1, scope: !7231, file: !3, line: 3910, type: !6877)
!7236 = !DILocalVariable(name: "ctx", scope: !7231, file: !3, line: 3911, type: !584)
!7237 = !DILocalVariable(name: "empty", scope: !7231, file: !3, line: 3912, type: !585)
!7238 = !DILocation(line: 3910, column: 67, scope: !7231)
!7239 = !DILocation(line: 3911, column: 27, scope: !7231)
!7240 = !DILocation(line: 3911, column: 21, scope: !7231)
!7241 = !DILocation(line: 3912, column: 5, scope: !7231)
!7242 = !DILocation(line: 3912, column: 20, scope: !7231)
!7243 = !DILocation(line: 3913, column: 5, scope: !7231)
!7244 = !DILocation(line: 3914, column: 9, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 3914, column: 9)
!7246 = !DILocation(line: 3914, column: 9, scope: !7231)
!7247 = !DILocation(line: 3915, column: 14, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 3914, column: 13)
!7249 = !DILocation(line: 3915, column: 29, scope: !7248)
!7250 = !DILocation(line: 3916, column: 27, scope: !7248)
!7251 = !DILocation(line: 3916, column: 14, scope: !7248)
!7252 = !DILocation(line: 3916, column: 21, scope: !7248)
!7253 = !DILocation(line: 3917, column: 5, scope: !7248)
!7254 = !DILocation(line: 3918, column: 10, scope: !7231)
!7255 = !DILocation(line: 3918, column: 16, scope: !7231)
!7256 = !DILocation(line: 3923, column: 19, scope: !7231)
!7257 = !DILocation(line: 3923, column: 10, scope: !7231)
!7258 = !DILocation(line: 3923, column: 17, scope: !7231)
!7259 = !DILocation(line: 3924, column: 9, scope: !7231)
!7260 = !DILocation(line: 3925, column: 34, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 3924, column: 13)
!7262 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 3924, column: 9)
!7263 = !DILocation(line: 3925, column: 9, scope: !7261)
!7264 = !DILocation(line: 3926, column: 31, scope: !7261)
!7265 = !DILocation(line: 3926, column: 39, scope: !7261)
!7266 = !DILocation(line: 3926, column: 14, scope: !7261)
!7267 = !DILocation(line: 3926, column: 22, scope: !7261)
!7268 = !DILocation(line: 3926, column: 25, scope: !7261)
!7269 = !DILocation(line: 3927, column: 5, scope: !7261)
!7270 = !DILocation(line: 3929, column: 1, scope: !7231)
!7271 = !DILocation(line: 3928, column: 5, scope: !7231)
!7272 = distinct !DISubprogram(name: "RM_FreeThreadSafeContext", scope: !3, file: !3, line: 3932, type: !880, isLocal: false, isDefinition: true, scopeLine: 3932, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7273)
!7273 = !{!7274}
!7274 = !DILocalVariable(name: "ctx", arg: 1, scope: !7272, file: !3, line: 3932, type: !584)
!7275 = !DILocation(line: 3932, column: 47, scope: !7272)
!7276 = !DILocation(line: 3933, column: 5, scope: !7272)
!7277 = !DILocation(line: 3934, column: 11, scope: !7272)
!7278 = !DILocation(line: 3934, column: 5, scope: !7272)
!7279 = !DILocation(line: 3935, column: 1, scope: !7272)
!7280 = distinct !DISubprogram(name: "RM_ThreadSafeContextLock", scope: !3, file: !3, line: 3940, type: !880, isLocal: false, isDefinition: true, scopeLine: 3940, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7281)
!7281 = !{!7282}
!7282 = !DILocalVariable(name: "ctx", arg: 1, scope: !7280, file: !3, line: 3940, type: !584)
!7283 = !DILocation(line: 3940, column: 47, scope: !7280)
!7284 = !DILocation(line: 3952, column: 5, scope: !7285, inlinedAt: !7286)
!7285 = distinct !DISubprogram(name: "moduleAcquireGIL", scope: !3, file: !3, line: 3951, type: !492, isLocal: false, isDefinition: true, scopeLine: 3951, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7286 = distinct !DILocation(line: 3942, column: 5, scope: !7280)
!7287 = !DILocation(line: 3943, column: 1, scope: !7280)
!7288 = !DILocation(line: 3952, column: 5, scope: !7285)
!7289 = !DILocation(line: 3953, column: 1, scope: !7285)
!7290 = distinct !DISubprogram(name: "RM_ThreadSafeContextUnlock", scope: !3, file: !3, line: 3946, type: !880, isLocal: false, isDefinition: true, scopeLine: 3946, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7291)
!7291 = !{!7292}
!7292 = !DILocalVariable(name: "ctx", arg: 1, scope: !7290, file: !3, line: 3946, type: !584)
!7293 = !DILocation(line: 3946, column: 49, scope: !7290)
!7294 = !DILocation(line: 3956, column: 5, scope: !7295, inlinedAt: !7296)
!7295 = distinct !DISubprogram(name: "moduleReleaseGIL", scope: !3, file: !3, line: 3955, type: !492, isLocal: false, isDefinition: true, scopeLine: 3955, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7296 = distinct !DILocation(line: 3948, column: 5, scope: !7290)
!7297 = !DILocation(line: 3949, column: 1, scope: !7290)
!7298 = !DILocation(line: 3956, column: 5, scope: !7295)
!7299 = !DILocation(line: 3957, column: 1, scope: !7295)
!7300 = distinct !DISubprogram(name: "RM_SubscribeToKeyspaceEvents", scope: !3, file: !3, line: 4013, type: !7301, isLocal: false, isDefinition: true, scopeLine: 4013, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7307)
!7301 = !DISubroutineType(types: !7302)
!7302 = !{!17, !584, !17, !7303}
!7303 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleNotificationFunc", file: !3, line: 241, baseType: !7304)
!7304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7305, size: 64)
!7305 = !DISubroutineType(types: !7306)
!7306 = !{!17, !584, !17, !523, !143}
!7307 = !{!7308, !7309, !7310, !7311}
!7308 = !DILocalVariable(name: "ctx", arg: 1, scope: !7300, file: !3, line: 4013, type: !584)
!7309 = !DILocalVariable(name: "types", arg: 2, scope: !7300, file: !3, line: 4013, type: !17)
!7310 = !DILocalVariable(name: "callback", arg: 3, scope: !7300, file: !3, line: 4013, type: !7303)
!7311 = !DILocalVariable(name: "sub", scope: !7300, file: !3, line: 4014, type: !7312)
!7312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7313, size: 64)
!7313 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleKeyspaceSubscriber", file: !3, line: 255, baseType: !7314)
!7314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleKeyspaceSubscriber", file: !3, line: 245, size: 192, elements: !7315)
!7315 = !{!7316, !7317, !7318, !7319}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7314, file: !3, line: 247, baseType: !577, size: 64)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "notify_callback", scope: !7314, file: !3, line: 249, baseType: !7303, size: 64, offset: 64)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "event_mask", scope: !7314, file: !3, line: 251, baseType: !17, size: 32, offset: 128)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7314, file: !3, line: 254, baseType: !17, size: 32, offset: 160)
!7320 = !DILocation(line: 4013, column: 50, scope: !7300)
!7321 = !DILocation(line: 4013, column: 59, scope: !7300)
!7322 = !DILocation(line: 4013, column: 94, scope: !7300)
!7323 = !DILocation(line: 4014, column: 42, scope: !7300)
!7324 = !DILocation(line: 4014, column: 36, scope: !7300)
!7325 = !DILocation(line: 4015, column: 24, scope: !7300)
!7326 = !DILocation(line: 4015, column: 17, scope: !7300)
!7327 = !{!7328, !892, i64 0}
!7328 = !{!"RedisModuleKeyspaceSubscriber", !892, i64 0, !892, i64 8, !895, i64 16, !895, i64 20}
!7329 = !DILocation(line: 4016, column: 10, scope: !7300)
!7330 = !DILocation(line: 4016, column: 21, scope: !7300)
!7331 = !{!7328, !895, i64 16}
!7332 = !DILocation(line: 4017, column: 10, scope: !7300)
!7333 = !DILocation(line: 4017, column: 26, scope: !7300)
!7334 = !{!7328, !892, i64 8}
!7335 = !DILocation(line: 4018, column: 10, scope: !7300)
!7336 = !DILocation(line: 4018, column: 17, scope: !7300)
!7337 = !{!7328, !895, i64 20}
!7338 = !DILocation(line: 4020, column: 21, scope: !7300)
!7339 = !DILocation(line: 4020, column: 5, scope: !7300)
!7340 = !DILocation(line: 4021, column: 5, scope: !7300)
!7341 = distinct !DISubprogram(name: "moduleNotifyKeyspaceEvent", scope: !3, file: !3, line: 4027, type: !7342, isLocal: false, isDefinition: true, scopeLine: 4027, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7344)
!7342 = !DISubroutineType(types: !7343)
!7343 = !{null, !17, !523, !143, !17}
!7344 = !{!7345, !7346, !7347, !7348, !7349, !7350, !7351, !7353}
!7345 = !DILocalVariable(name: "type", arg: 1, scope: !7341, file: !3, line: 4027, type: !17)
!7346 = !DILocalVariable(name: "event", arg: 2, scope: !7341, file: !3, line: 4027, type: !523)
!7347 = !DILocalVariable(name: "key", arg: 3, scope: !7341, file: !3, line: 4027, type: !143)
!7348 = !DILocalVariable(name: "dbid", arg: 4, scope: !7341, file: !3, line: 4027, type: !17)
!7349 = !DILocalVariable(name: "li", scope: !7341, file: !3, line: 4031, type: !759)
!7350 = !DILocalVariable(name: "ln", scope: !7341, file: !3, line: 4032, type: !120)
!7351 = !DILocalVariable(name: "sub", scope: !7352, file: !3, line: 4039, type: !7312)
!7352 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 4038, column: 33)
!7353 = !DILocalVariable(name: "ctx", scope: !7354, file: !3, line: 4043, type: !585)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 4042, column: 59)
!7355 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 4042, column: 13)
!7356 = !DILocation(line: 4027, column: 36, scope: !7341)
!7357 = !DILocation(line: 4027, column: 54, scope: !7341)
!7358 = !DILocation(line: 4027, column: 67, scope: !7341)
!7359 = !DILocation(line: 4027, column: 76, scope: !7341)
!7360 = !DILocation(line: 4029, column: 9, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 4029, column: 9)
!7362 = !DILocation(line: 4029, column: 47, scope: !7361)
!7363 = !DILocation(line: 4029, column: 9, scope: !7341)
!7364 = !DILocation(line: 4031, column: 5, scope: !7341)
!7365 = !DILocation(line: 4031, column: 14, scope: !7341)
!7366 = !DILocation(line: 4033, column: 5, scope: !7341)
!7367 = !DILocation(line: 4036, column: 10, scope: !7341)
!7368 = !DILocation(line: 4038, column: 17, scope: !7341)
!7369 = !DILocation(line: 4032, column: 15, scope: !7341)
!7370 = !DILocation(line: 4038, column: 5, scope: !7341)
!7371 = !DILocation(line: 4039, column: 50, scope: !7352)
!7372 = !DILocation(line: 4039, column: 40, scope: !7352)
!7373 = !DILocation(line: 4042, column: 19, scope: !7355)
!7374 = !DILocation(line: 4042, column: 30, scope: !7355)
!7375 = !DILocation(line: 4042, column: 38, scope: !7355)
!7376 = !DILocation(line: 4042, column: 46, scope: !7355)
!7377 = !DILocation(line: 4042, column: 53, scope: !7355)
!7378 = !DILocation(line: 4042, column: 13, scope: !7352)
!7379 = !DILocation(line: 4043, column: 13, scope: !7354)
!7380 = !DILocation(line: 4043, column: 28, scope: !7354)
!7381 = !DILocation(line: 4044, column: 31, scope: !7354)
!7382 = !DILocation(line: 4044, column: 24, scope: !7354)
!7383 = !DILocation(line: 4045, column: 26, scope: !7354)
!7384 = !DILocation(line: 4045, column: 24, scope: !7354)
!7385 = !DILocation(line: 4046, column: 13, scope: !7354)
!7386 = !DILocation(line: 4051, column: 25, scope: !7354)
!7387 = !DILocation(line: 4052, column: 18, scope: !7354)
!7388 = !DILocation(line: 4052, column: 13, scope: !7354)
!7389 = !DILocation(line: 4053, column: 25, scope: !7354)
!7390 = !DILocation(line: 4054, column: 13, scope: !7354)
!7391 = !DILocation(line: 4055, column: 9, scope: !7355)
!7392 = !DILocation(line: 4055, column: 9, scope: !7354)
!7393 = distinct !{!7393, !7370, !7394}
!7394 = !DILocation(line: 4056, column: 5, scope: !7341)
!7395 = !DILocation(line: 4057, column: 1, scope: !7341)
!7396 = distinct !DISubprogram(name: "moduleUnsubscribeNotifications", scope: !3, file: !3, line: 4060, type: !7397, isLocal: false, isDefinition: true, scopeLine: 4060, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7399)
!7397 = !DISubroutineType(types: !7398)
!7398 = !{null, !577}
!7399 = !{!7400, !7401, !7402, !7403}
!7400 = !DILocalVariable(name: "module", arg: 1, scope: !7396, file: !3, line: 4060, type: !577)
!7401 = !DILocalVariable(name: "li", scope: !7396, file: !3, line: 4061, type: !759)
!7402 = !DILocalVariable(name: "ln", scope: !7396, file: !3, line: 4062, type: !120)
!7403 = !DILocalVariable(name: "sub", scope: !7404, file: !3, line: 4065, type: !7312)
!7404 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 4064, column: 33)
!7405 = !DILocation(line: 4060, column: 50, scope: !7396)
!7406 = !DILocation(line: 4061, column: 5, scope: !7396)
!7407 = !DILocation(line: 4063, column: 16, scope: !7396)
!7408 = !DILocation(line: 4061, column: 14, scope: !7396)
!7409 = !DILocation(line: 4063, column: 5, scope: !7396)
!7410 = !DILocation(line: 4064, column: 17, scope: !7396)
!7411 = !DILocation(line: 4062, column: 15, scope: !7396)
!7412 = !DILocation(line: 4064, column: 5, scope: !7396)
!7413 = !DILocation(line: 4065, column: 50, scope: !7404)
!7414 = !DILocation(line: 4065, column: 40, scope: !7404)
!7415 = !DILocation(line: 4066, column: 18, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 4066, column: 13)
!7417 = !DILocation(line: 4066, column: 25, scope: !7416)
!7418 = !DILocation(line: 4066, column: 13, scope: !7404)
!7419 = !DILocation(line: 4067, column: 25, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 4066, column: 36)
!7421 = !DILocation(line: 4067, column: 13, scope: !7420)
!7422 = !DILocation(line: 4068, column: 13, scope: !7420)
!7423 = !DILocation(line: 4069, column: 9, scope: !7420)
!7424 = distinct !{!7424, !7412, !7425}
!7425 = !DILocation(line: 4070, column: 5, scope: !7396)
!7426 = !DILocation(line: 4071, column: 1, scope: !7396)
!7427 = distinct !DISubprogram(name: "moduleCallClusterReceivers", scope: !3, file: !3, line: 4102, type: !7428, isLocal: false, isDefinition: true, scopeLine: 4102, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7430)
!7428 = !DISubroutineType(types: !7429)
!7429 = !{null, !523, !32, !703, !797, !618}
!7430 = !{!7431, !7432, !7433, !7434, !7435, !7436, !7437}
!7431 = !DILocalVariable(name: "sender_id", arg: 1, scope: !7427, file: !3, line: 4102, type: !523)
!7432 = !DILocalVariable(name: "module_id", arg: 2, scope: !7427, file: !3, line: 4102, type: !32)
!7433 = !DILocalVariable(name: "type", arg: 3, scope: !7427, file: !3, line: 4102, type: !703)
!7434 = !DILocalVariable(name: "payload", arg: 4, scope: !7427, file: !3, line: 4102, type: !797)
!7435 = !DILocalVariable(name: "len", arg: 5, scope: !7427, file: !3, line: 4102, type: !618)
!7436 = !DILocalVariable(name: "r", scope: !7427, file: !3, line: 4103, type: !787)
!7437 = !DILocalVariable(name: "ctx", scope: !7438, file: !3, line: 4106, type: !585)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 4105, column: 40)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 4105, column: 13)
!7440 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 4104, column: 14)
!7441 = !DILocation(line: 4102, column: 45, scope: !7427)
!7442 = !DILocation(line: 4102, column: 65, scope: !7427)
!7443 = !DILocation(line: 4102, column: 84, scope: !7427)
!7444 = !DILocation(line: 4102, column: 111, scope: !7427)
!7445 = !DILocation(line: 4102, column: 129, scope: !7427)
!7446 = !DILocation(line: 4103, column: 32, scope: !7427)
!7447 = !DILocation(line: 4103, column: 28, scope: !7427)
!7448 = !DILocation(line: 0, scope: !7440)
!7449 = !DILocation(line: 4104, column: 5, scope: !7427)
!7450 = !DILocation(line: 4105, column: 16, scope: !7439)
!7451 = !{!7452, !1046, i64 0}
!7452 = !{!"moduleClusterReceiver", !1046, i64 0, !892, i64 8, !892, i64 16, !892, i64 24}
!7453 = !DILocation(line: 4105, column: 26, scope: !7439)
!7454 = !DILocation(line: 4105, column: 13, scope: !7440)
!7455 = !DILocation(line: 4106, column: 13, scope: !7438)
!7456 = !DILocation(line: 4106, column: 28, scope: !7438)
!7457 = !DILocation(line: 4107, column: 29, scope: !7438)
!7458 = !{!7452, !892, i64 16}
!7459 = !DILocation(line: 4107, column: 17, scope: !7438)
!7460 = !DILocation(line: 4107, column: 24, scope: !7438)
!7461 = !DILocation(line: 4108, column: 26, scope: !7438)
!7462 = !DILocation(line: 4108, column: 17, scope: !7438)
!7463 = !DILocation(line: 4108, column: 24, scope: !7438)
!7464 = !DILocation(line: 4109, column: 13, scope: !7438)
!7465 = !DILocation(line: 4110, column: 16, scope: !7438)
!7466 = !{!7452, !892, i64 8}
!7467 = !DILocation(line: 4110, column: 13, scope: !7438)
!7468 = !DILocation(line: 4111, column: 13, scope: !7438)
!7469 = !DILocation(line: 4113, column: 9, scope: !7439)
!7470 = !DILocation(line: 4114, column: 16, scope: !7440)
!7471 = distinct !{!7471, !7449, !7472}
!7472 = !DILocation(line: 4115, column: 5, scope: !7427)
!7473 = !DILocation(line: 4116, column: 1, scope: !7427)
!7474 = distinct !DISubprogram(name: "RM_RegisterClusterMessageReceiver", scope: !3, file: !3, line: 4123, type: !7475, isLocal: false, isDefinition: true, scopeLine: 4123, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7477)
!7475 = !DISubroutineType(types: !7476)
!7476 = !{null, !584, !703, !793}
!7477 = !{!7478, !7479, !7480, !7481, !7482, !7483}
!7478 = !DILocalVariable(name: "ctx", arg: 1, scope: !7474, file: !3, line: 4123, type: !584)
!7479 = !DILocalVariable(name: "type", arg: 2, scope: !7474, file: !3, line: 4123, type: !703)
!7480 = !DILocalVariable(name: "callback", arg: 3, scope: !7474, file: !3, line: 4123, type: !793)
!7481 = !DILocalVariable(name: "module_id", scope: !7474, file: !3, line: 4126, type: !32)
!7482 = !DILocalVariable(name: "r", scope: !7474, file: !3, line: 4127, type: !787)
!7483 = !DILocalVariable(name: "prev", scope: !7474, file: !3, line: 4127, type: !787)
!7484 = !DILocation(line: 4123, column: 56, scope: !7474)
!7485 = !DILocation(line: 4123, column: 69, scope: !7474)
!7486 = !DILocation(line: 4123, column: 109, scope: !7474)
!7487 = !DILocation(line: 4124, column: 17, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 4124, column: 9)
!7489 = !DILocation(line: 4124, column: 10, scope: !7488)
!7490 = !DILocation(line: 4124, column: 9, scope: !7474)
!7491 = !DILocation(line: 4126, column: 50, scope: !7474)
!7492 = !DILocation(line: 4126, column: 58, scope: !7474)
!7493 = !DILocation(line: 4126, column: 26, scope: !7474)
!7494 = !DILocation(line: 4126, column: 14, scope: !7474)
!7495 = !DILocation(line: 4127, column: 32, scope: !7474)
!7496 = !DILocation(line: 4127, column: 28, scope: !7474)
!7497 = !DILocation(line: 4127, column: 57, scope: !7474)
!7498 = !DILocation(line: 0, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 4128, column: 14)
!7500 = !DILocation(line: 4128, column: 5, scope: !7474)
!7501 = !DILocation(line: 4129, column: 16, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 4129, column: 13)
!7503 = !DILocation(line: 4129, column: 26, scope: !7502)
!7504 = !DILocation(line: 4129, column: 13, scope: !7499)
!7505 = distinct !{!7505, !7500, !7506}
!7506 = !DILocation(line: 4147, column: 5, scope: !7474)
!7507 = !DILocation(line: 4131, column: 17, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 4131, column: 17)
!7509 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 4129, column: 40)
!7510 = !DILocation(line: 4131, column: 17, scope: !7509)
!7511 = !DILocation(line: 4132, column: 20, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 4131, column: 27)
!7513 = !DILocation(line: 4132, column: 29, scope: !7512)
!7514 = !DILocation(line: 4133, column: 13, scope: !7512)
!7515 = !DILocation(line: 4137, column: 21, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 4137, column: 21)
!7517 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 4133, column: 20)
!7518 = !DILocation(line: 0, scope: !7516)
!7519 = !{!7452, !892, i64 24}
!7520 = !DILocation(line: 4137, column: 21, scope: !7517)
!7521 = !DILocation(line: 4141, column: 23, scope: !7517)
!7522 = !DILocation(line: 4141, column: 17, scope: !7517)
!7523 = !DILocation(line: 4146, column: 16, scope: !7499)
!7524 = !DILocation(line: 4150, column: 9, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 4150, column: 9)
!7526 = !DILocation(line: 4150, column: 9, scope: !7474)
!7527 = !DILocation(line: 4151, column: 13, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 4150, column: 19)
!7529 = !DILocation(line: 4152, column: 12, scope: !7528)
!7530 = !DILocation(line: 4152, column: 22, scope: !7528)
!7531 = !DILocation(line: 4153, column: 26, scope: !7528)
!7532 = !DILocation(line: 4153, column: 12, scope: !7528)
!7533 = !DILocation(line: 4153, column: 19, scope: !7528)
!7534 = !DILocation(line: 4154, column: 12, scope: !7528)
!7535 = !DILocation(line: 4154, column: 21, scope: !7528)
!7536 = !DILocation(line: 4155, column: 19, scope: !7528)
!7537 = !DILocation(line: 4155, column: 12, scope: !7528)
!7538 = !DILocation(line: 4155, column: 17, scope: !7528)
!7539 = !DILocation(line: 4156, column: 32, scope: !7528)
!7540 = !DILocation(line: 4157, column: 5, scope: !7528)
!7541 = !DILocation(line: 4158, column: 1, scope: !7474)
!7542 = distinct !DISubprogram(name: "RM_SendClusterMessage", scope: !3, file: !3, line: 4167, type: !7543, isLocal: false, isDefinition: true, scopeLine: 4167, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7545)
!7543 = !DISubroutineType(types: !7544)
!7544 = !{!17, !584, !9, !703, !346, !618}
!7545 = !{!7546, !7547, !7548, !7549, !7550, !7551}
!7546 = !DILocalVariable(name: "ctx", arg: 1, scope: !7542, file: !3, line: 4167, type: !584)
!7547 = !DILocalVariable(name: "target_id", arg: 2, scope: !7542, file: !3, line: 4167, type: !9)
!7548 = !DILocalVariable(name: "type", arg: 3, scope: !7542, file: !3, line: 4167, type: !703)
!7549 = !DILocalVariable(name: "msg", arg: 4, scope: !7542, file: !3, line: 4167, type: !346)
!7550 = !DILocalVariable(name: "len", arg: 5, scope: !7542, file: !3, line: 4167, type: !618)
!7551 = !DILocalVariable(name: "module_id", scope: !7542, file: !3, line: 4169, type: !32)
!7552 = !DILocation(line: 4167, column: 43, scope: !7542)
!7553 = !DILocation(line: 4167, column: 54, scope: !7542)
!7554 = !DILocation(line: 4167, column: 73, scope: !7542)
!7555 = !DILocation(line: 4167, column: 94, scope: !7542)
!7556 = !DILocation(line: 4167, column: 108, scope: !7542)
!7557 = !DILocation(line: 4168, column: 17, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 4168, column: 9)
!7559 = !DILocation(line: 4168, column: 10, scope: !7558)
!7560 = !DILocation(line: 4168, column: 9, scope: !7542)
!7561 = !DILocation(line: 4169, column: 50, scope: !7542)
!7562 = !DILocation(line: 4169, column: 58, scope: !7542)
!7563 = !DILocation(line: 4169, column: 26, scope: !7542)
!7564 = !DILocation(line: 4169, column: 14, scope: !7542)
!7565 = !DILocation(line: 4170, column: 9, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 4170, column: 9)
!7567 = !DILocation(line: 4170, column: 76, scope: !7566)
!7568 = !DILocation(line: 4171, column: 9, scope: !7566)
!7569 = !DILocation(line: 0, scope: !7558)
!7570 = !DILocation(line: 4174, column: 1, scope: !7542)
!7571 = distinct !DISubprogram(name: "RM_GetClusterNodesList", scope: !3, file: !3, line: 4198, type: !7572, isLocal: false, isDefinition: true, scopeLine: 4198, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7575)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{!7574, !584, !2310}
!7574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!7575 = !{!7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583}
!7576 = !DILocalVariable(name: "ctx", arg: 1, scope: !7571, file: !3, line: 4198, type: !584)
!7577 = !DILocalVariable(name: "numnodes", arg: 2, scope: !7571, file: !3, line: 4198, type: !2310)
!7578 = !DILocalVariable(name: "count", scope: !7571, file: !3, line: 4202, type: !157)
!7579 = !DILocalVariable(name: "ids", scope: !7571, file: !3, line: 4203, type: !7574)
!7580 = !DILocalVariable(name: "di", scope: !7571, file: !3, line: 4204, type: !744)
!7581 = !DILocalVariable(name: "de", scope: !7571, file: !3, line: 4205, type: !81)
!7582 = !DILocalVariable(name: "j", scope: !7571, file: !3, line: 4206, type: !17)
!7583 = !DILocalVariable(name: "node", scope: !7584, file: !3, line: 4208, type: !7585)
!7584 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 4207, column: 40)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7586, size: 64)
!7586 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterNode", file: !7587, line: 141, baseType: !7588)
!7587 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.h", directory: "/root/.unikraft/apps/redis/build")
!7588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterNode", file: !7587, line: 116, size: 18112, elements: !7589)
!7589 = !{!7590, !7591, !7595, !7596, !7597, !7601, !7602, !7603, !7606, !7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7627}
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !7588, file: !7587, line: 117, baseType: !229, size: 64)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7588, file: !7587, line: 118, baseType: !7592, size: 320, offset: 64)
!7592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 320, elements: !7593)
!7593 = !{!7594}
!7594 = !DISubrange(count: 40)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7588, file: !7587, line: 119, baseType: !17, size: 32, offset: 384)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "configEpoch", scope: !7588, file: !7587, line: 120, baseType: !32, size: 64, offset: 448)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !7588, file: !7587, line: 121, baseType: !7598, size: 16384, offset: 512)
!7598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 16384, elements: !7599)
!7599 = !{!7600}
!7600 = !DISubrange(count: 2048)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "numslots", scope: !7588, file: !7587, line: 122, baseType: !17, size: 32, offset: 16896)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "numslaves", scope: !7588, file: !7587, line: 123, baseType: !17, size: 32, offset: 16928)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "slaves", scope: !7588, file: !7587, line: 124, baseType: !7604, size: 64, offset: 16960)
!7604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7605, size: 64)
!7605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7588, size: 64)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "slaveof", scope: !7588, file: !7587, line: 125, baseType: !7605, size: 64, offset: 17024)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "ping_sent", scope: !7588, file: !7587, line: 129, baseType: !229, size: 64, offset: 17088)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "pong_received", scope: !7588, file: !7587, line: 130, baseType: !229, size: 64, offset: 17152)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "fail_time", scope: !7588, file: !7587, line: 131, baseType: !229, size: 64, offset: 17216)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "voted_time", scope: !7588, file: !7587, line: 132, baseType: !229, size: 64, offset: 17280)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset_time", scope: !7588, file: !7587, line: 133, baseType: !229, size: 64, offset: 17344)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "orphaned_time", scope: !7588, file: !7587, line: 134, baseType: !229, size: 64, offset: 17408)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset", scope: !7588, file: !7587, line: 135, baseType: !112, size: 64, offset: 17472)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7588, file: !7587, line: 136, baseType: !203, size: 368, offset: 17536)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7588, file: !7587, line: 137, baseType: !17, size: 32, offset: 17920)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "cport", scope: !7588, file: !7587, line: 138, baseType: !17, size: 32, offset: 17952)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7588, file: !7587, line: 139, baseType: !7618, size: 64, offset: 17984)
!7618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7619, size: 64)
!7619 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterLink", file: !7587, line: 47, baseType: !7620)
!7620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterLink", file: !7587, line: 41, size: 320, elements: !7621)
!7621 = !{!7622, !7623, !7624, !7625, !7626}
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !7620, file: !7587, line: 42, baseType: !229, size: 64)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !7620, file: !7587, line: 43, baseType: !17, size: 32, offset: 64)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "sndbuf", scope: !7620, file: !7587, line: 44, baseType: !154, size: 64, offset: 128)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "rcvbuf", scope: !7620, file: !7587, line: 45, baseType: !154, size: 64, offset: 192)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7620, file: !7587, line: 46, baseType: !7605, size: 64, offset: 256)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "fail_reports", scope: !7588, file: !7587, line: 140, baseType: !114, size: 64, offset: 18048)
!7628 = !DILocation(line: 4198, column: 47, scope: !7571)
!7629 = !DILocation(line: 4198, column: 60, scope: !7571)
!7630 = !DILocation(line: 4201, column: 17, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 4201, column: 9)
!7632 = !DILocation(line: 4201, column: 10, scope: !7631)
!7633 = !DILocation(line: 4201, column: 9, scope: !7571)
!7634 = !DILocation(line: 4202, column: 20, scope: !7571)
!7635 = !{!5547, !892, i64 24}
!7636 = !{!7637, !1046, i64 24}
!7637 = !{!"dictht", !892, i64 0, !1046, i64 8, !1046, i64 16, !1046, i64 24}
!7638 = !DILocation(line: 4202, column: 12, scope: !7571)
!7639 = !DILocation(line: 4203, column: 35, scope: !7571)
!7640 = !DILocation(line: 4203, column: 18, scope: !7571)
!7641 = !DILocation(line: 4203, column: 12, scope: !7571)
!7642 = !DILocation(line: 4204, column: 47, scope: !7571)
!7643 = !DILocation(line: 4204, column: 56, scope: !7571)
!7644 = !DILocation(line: 4204, column: 24, scope: !7571)
!7645 = !DILocation(line: 4204, column: 19, scope: !7571)
!7646 = !DILocation(line: 4206, column: 9, scope: !7571)
!7647 = !DILocation(line: 4207, column: 17, scope: !7571)
!7648 = !DILocation(line: 4205, column: 16, scope: !7571)
!7649 = !DILocation(line: 4207, column: 31, scope: !7571)
!7650 = !DILocation(line: 4207, column: 5, scope: !7571)
!7651 = !DILocation(line: 4208, column: 29, scope: !7584)
!7652 = !DILocation(line: 4208, column: 22, scope: !7584)
!7653 = !DILocation(line: 4209, column: 19, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 4209, column: 13)
!7655 = !{!7656, !895, i64 48}
!7656 = !{!"clusterNode", !1047, i64 0, !893, i64 8, !895, i64 48, !1046, i64 56, !893, i64 64, !895, i64 2112, !895, i64 2116, !892, i64 2120, !892, i64 2128, !1047, i64 2136, !1047, i64 2144, !1047, i64 2152, !1047, i64 2160, !1047, i64 2168, !1047, i64 2176, !1047, i64 2184, !893, i64 2192, !895, i64 2240, !895, i64 2244, !892, i64 2248, !892, i64 2256}
!7657 = !DILocation(line: 4209, column: 25, scope: !7654)
!7658 = !DILocation(line: 4209, column: 13, scope: !7584)
!7659 = distinct !{!7659, !7650, !7660}
!7660 = !DILocation(line: 4213, column: 5, scope: !7571)
!7661 = !DILocation(line: 4210, column: 18, scope: !7584)
!7662 = !DILocation(line: 4210, column: 9, scope: !7584)
!7663 = !DILocation(line: 4210, column: 16, scope: !7584)
!7664 = !DILocation(line: 4211, column: 23, scope: !7584)
!7665 = !DILocation(line: 4211, column: 9, scope: !7584)
!7666 = !DILocation(line: 4212, column: 10, scope: !7584)
!7667 = !DILocation(line: 0, scope: !7584)
!7668 = !DILocation(line: 4214, column: 17, scope: !7571)
!7669 = !DILocation(line: 4214, column: 15, scope: !7571)
!7670 = !DILocation(line: 4215, column: 5, scope: !7571)
!7671 = !DILocation(line: 4215, column: 12, scope: !7571)
!7672 = !DILocation(line: 4217, column: 5, scope: !7571)
!7673 = !DILocation(line: 0, scope: !7631)
!7674 = !DILocation(line: 4219, column: 1, scope: !7571)
!7675 = distinct !DISubprogram(name: "RM_FreeClusterNodesList", scope: !3, file: !3, line: 4222, type: !7676, isLocal: false, isDefinition: true, scopeLine: 4222, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7678)
!7676 = !DISubroutineType(types: !7677)
!7677 = !{null, !7574}
!7678 = !{!7679, !7680}
!7679 = !DILocalVariable(name: "ids", arg: 1, scope: !7675, file: !3, line: 4222, type: !7574)
!7680 = !DILocalVariable(name: "j", scope: !7681, file: !3, line: 4224, type: !17)
!7681 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 4224, column: 5)
!7682 = !DILocation(line: 4222, column: 37, scope: !7675)
!7683 = !DILocation(line: 4223, column: 13, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 4223, column: 9)
!7685 = !DILocation(line: 4223, column: 9, scope: !7675)
!7686 = !DILocation(line: 4224, column: 14, scope: !7681)
!7687 = !DILocation(line: 4224, column: 21, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 4224, column: 5)
!7689 = !DILocation(line: 4224, column: 5, scope: !7681)
!7690 = !DILocation(line: 4225, column: 11, scope: !7675)
!7691 = !DILocation(line: 4225, column: 5, scope: !7675)
!7692 = !DILocation(line: 4226, column: 1, scope: !7675)
!7693 = !DILocation(line: 4224, column: 34, scope: !7688)
!7694 = !DILocation(line: 4224, column: 30, scope: !7688)
!7695 = distinct !{!7695, !7689, !7696}
!7696 = !DILocation(line: 4224, column: 46, scope: !7681)
!7697 = distinct !DISubprogram(name: "RM_GetMyClusterID", scope: !3, file: !3, line: 4230, type: !7698, isLocal: false, isDefinition: true, scopeLine: 4230, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!523}
!7700 = !DILocation(line: 4231, column: 17, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 4231, column: 9)
!7702 = !DILocation(line: 4231, column: 10, scope: !7701)
!7703 = !DILocation(line: 4231, column: 9, scope: !7697)
!7704 = !DILocation(line: 4232, column: 19, scope: !7697)
!7705 = !DILocation(line: 4232, column: 28, scope: !7697)
!7706 = !DILocation(line: 4232, column: 12, scope: !7697)
!7707 = !DILocation(line: 4232, column: 5, scope: !7697)
!7708 = !DILocation(line: 0, scope: !7701)
!7709 = !DILocation(line: 4233, column: 1, scope: !7697)
!7710 = distinct !DISubprogram(name: "RM_GetClusterSize", scope: !3, file: !3, line: 4239, type: !7711, isLocal: false, isDefinition: true, scopeLine: 4239, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{!157}
!7713 = !DILocation(line: 4240, column: 17, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 4240, column: 9)
!7715 = !DILocation(line: 4240, column: 10, scope: !7714)
!7716 = !DILocation(line: 4240, column: 9, scope: !7710)
!7717 = !DILocation(line: 4241, column: 12, scope: !7710)
!7718 = !DILocation(line: 4241, column: 5, scope: !7710)
!7719 = !DILocation(line: 0, scope: !7714)
!7720 = !DILocation(line: 4242, column: 1, scope: !7710)
!7721 = distinct !DISubprogram(name: "RM_GetClusterNodeInfo", scope: !3, file: !3, line: 4266, type: !7722, isLocal: false, isDefinition: true, scopeLine: 4266, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7724)
!7722 = !DISubroutineType(types: !7723)
!7723 = !{!17, !584, !523, !9, !9, !16, !16}
!7724 = !{!7725, !7726, !7727, !7728, !7729, !7730, !7731}
!7725 = !DILocalVariable(name: "ctx", arg: 1, scope: !7721, file: !3, line: 4266, type: !584)
!7726 = !DILocalVariable(name: "id", arg: 2, scope: !7721, file: !3, line: 4266, type: !523)
!7727 = !DILocalVariable(name: "ip", arg: 3, scope: !7721, file: !3, line: 4266, type: !9)
!7728 = !DILocalVariable(name: "master_id", arg: 4, scope: !7721, file: !3, line: 4266, type: !9)
!7729 = !DILocalVariable(name: "port", arg: 5, scope: !7721, file: !3, line: 4266, type: !16)
!7730 = !DILocalVariable(name: "flags", arg: 6, scope: !7721, file: !3, line: 4266, type: !16)
!7731 = !DILocalVariable(name: "node", scope: !7721, file: !3, line: 4269, type: !7585)
!7732 = !DILocation(line: 4266, column: 43, scope: !7721)
!7733 = !DILocation(line: 4266, column: 60, scope: !7721)
!7734 = !DILocation(line: 4266, column: 70, scope: !7721)
!7735 = !DILocation(line: 4266, column: 80, scope: !7721)
!7736 = !DILocation(line: 4266, column: 96, scope: !7721)
!7737 = !DILocation(line: 4266, column: 107, scope: !7721)
!7738 = !DILocation(line: 4269, column: 25, scope: !7721)
!7739 = !DILocation(line: 4269, column: 18, scope: !7721)
!7740 = !DILocation(line: 4270, column: 15, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 4270, column: 9)
!7742 = !DILocation(line: 4270, column: 21, scope: !7741)
!7743 = !DILocation(line: 4270, column: 9, scope: !7721)
!7744 = !DILocation(line: 4273, column: 9, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 4273, column: 9)
!7746 = !DILocation(line: 4273, column: 9, scope: !7721)
!7747 = !DILocation(line: 4273, column: 23, scope: !7745)
!7748 = !DILocation(line: 4273, column: 13, scope: !7745)
!7749 = !DILocation(line: 4275, column: 9, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 4275, column: 9)
!7751 = !DILocation(line: 4275, column: 9, scope: !7721)
!7752 = !DILocation(line: 4279, column: 19, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 4279, column: 13)
!7754 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 4275, column: 20)
!7755 = !DILocation(line: 4279, column: 25, scope: !7753)
!7756 = !DILocation(line: 4279, column: 47, scope: !7753)
!7757 = !DILocation(line: 4279, column: 56, scope: !7753)
!7758 = !{!7656, !892, i64 2128}
!7759 = !DILocation(line: 4279, column: 50, scope: !7753)
!7760 = !DILocation(line: 4279, column: 13, scope: !7754)
!7761 = !DILocation(line: 4280, column: 30, scope: !7753)
!7762 = !DILocation(line: 4280, column: 13, scope: !7753)
!7763 = !DILocation(line: 4282, column: 13, scope: !7753)
!7764 = !DILocation(line: 4284, column: 9, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 4284, column: 9)
!7766 = !DILocation(line: 4284, column: 9, scope: !7721)
!7767 = !DILocation(line: 4284, column: 29, scope: !7765)
!7768 = !{!7656, !895, i64 2240}
!7769 = !DILocation(line: 4284, column: 21, scope: !7765)
!7770 = !DILocation(line: 4284, column: 15, scope: !7765)
!7771 = !DILocation(line: 4288, column: 9, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 4288, column: 9)
!7773 = !DILocation(line: 4288, column: 9, scope: !7721)
!7774 = !DILocation(line: 4289, column: 16, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4288, column: 16)
!7776 = !DILocation(line: 4290, column: 19, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 4290, column: 13)
!7778 = !DILocation(line: 4290, column: 13, scope: !7775)
!7779 = !DILocation(line: 0, scope: !7777)
!7780 = !DILocation(line: 4291, column: 19, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 4291, column: 13)
!7782 = !DILocation(line: 4291, column: 25, scope: !7781)
!7783 = !DILocation(line: 4291, column: 13, scope: !7775)
!7784 = !DILocation(line: 4291, column: 55, scope: !7781)
!7785 = !DILocation(line: 4292, column: 19, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 4292, column: 13)
!7787 = !DILocation(line: 4291, column: 48, scope: !7781)
!7788 = !DILocation(line: 4292, column: 25, scope: !7786)
!7789 = !DILocation(line: 4292, column: 13, scope: !7775)
!7790 = !DILocation(line: 4292, column: 54, scope: !7786)
!7791 = !DILocation(line: 4293, column: 19, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 4293, column: 13)
!7793 = !DILocation(line: 4292, column: 47, scope: !7786)
!7794 = !DILocation(line: 4293, column: 25, scope: !7792)
!7795 = !DILocation(line: 4293, column: 13, scope: !7775)
!7796 = !DILocation(line: 4293, column: 54, scope: !7792)
!7797 = !DILocation(line: 4294, column: 19, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 4294, column: 13)
!7799 = !DILocation(line: 4293, column: 47, scope: !7792)
!7800 = !DILocation(line: 4294, column: 25, scope: !7798)
!7801 = !DILocation(line: 4294, column: 13, scope: !7775)
!7802 = !DILocation(line: 4294, column: 53, scope: !7798)
!7803 = !DILocation(line: 4295, column: 19, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 4295, column: 13)
!7805 = !DILocation(line: 4294, column: 46, scope: !7798)
!7806 = !DILocation(line: 4295, column: 25, scope: !7804)
!7807 = !DILocation(line: 4295, column: 13, scope: !7775)
!7808 = !DILocation(line: 4295, column: 59, scope: !7804)
!7809 = !DILocation(line: 4295, column: 52, scope: !7804)
!7810 = !DILocation(line: 0, scope: !7721)
!7811 = !DILocation(line: 4298, column: 1, scope: !7721)
!7812 = distinct !DISubprogram(name: "RM_SetClusterFlags", scope: !3, file: !3, line: 4318, type: !7813, isLocal: false, isDefinition: true, scopeLine: 4318, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7815)
!7813 = !DISubroutineType(types: !7814)
!7814 = !{null, !584, !32}
!7815 = !{!7816, !7817}
!7816 = !DILocalVariable(name: "ctx", arg: 1, scope: !7812, file: !3, line: 4318, type: !584)
!7817 = !DILocalVariable(name: "flags", arg: 2, scope: !7812, file: !3, line: 4318, type: !32)
!7818 = !DILocation(line: 4318, column: 41, scope: !7812)
!7819 = !DILocation(line: 4318, column: 55, scope: !7812)
!7820 = !DILocation(line: 4320, column: 15, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 4320, column: 9)
!7822 = !DILocation(line: 4320, column: 9, scope: !7812)
!7823 = !DILocation(line: 4321, column: 37, scope: !7821)
!7824 = !{!1045, !895, i64 2984}
!7825 = !DILocation(line: 4321, column: 9, scope: !7821)
!7826 = !DILocation(line: 4322, column: 15, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 4322, column: 9)
!7828 = !DILocation(line: 4322, column: 9, scope: !7812)
!7829 = !DILocation(line: 4323, column: 37, scope: !7827)
!7830 = !DILocation(line: 4323, column: 9, scope: !7827)
!7831 = !DILocation(line: 4324, column: 1, scope: !7812)
!7832 = distinct !DISubprogram(name: "moduleTimerHandler", scope: !3, file: !3, line: 4360, type: !6844, isLocal: false, isDefinition: true, scopeLine: 4360, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7833)
!7833 = !{!7834, !7835, !7836, !7837, !7867, !7868, !7869, !7871, !7883}
!7834 = !DILocalVariable(name: "eventLoop", arg: 1, scope: !7832, file: !3, line: 4360, type: !6823)
!7835 = !DILocalVariable(name: "id", arg: 2, scope: !7832, file: !3, line: 4360, type: !112)
!7836 = !DILocalVariable(name: "clientData", arg: 3, scope: !7832, file: !3, line: 4360, type: !6)
!7837 = !DILocalVariable(name: "ri", scope: !7832, file: !3, line: 4366, type: !7838)
!7838 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxIterator", file: !808, line: 186, baseType: !7839)
!7839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxIterator", file: !808, line: 175, size: 3840, elements: !7840)
!7840 = !{!7841, !7842, !7843, !7844, !7845, !7846, !7847, !7851, !7852, !7861}
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7839, file: !808, line: 176, baseType: !17, size: 32)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !7839, file: !808, line: 177, baseType: !806, size: 64, offset: 64)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7839, file: !808, line: 178, baseType: !346, size: 64, offset: 128)
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7839, file: !808, line: 179, baseType: !6, size: 64, offset: 192)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !7839, file: !808, line: 180, baseType: !157, size: 64, offset: 256)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "key_max", scope: !7839, file: !808, line: 181, baseType: !157, size: 64, offset: 320)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "key_static_string", scope: !7839, file: !808, line: 182, baseType: !7848, size: 1024, offset: 384)
!7848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 1024, elements: !7849)
!7849 = !{!7850}
!7850 = !DISubrange(count: 128)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7839, file: !808, line: 183, baseType: !812, size: 64, offset: 1408)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !7839, file: !808, line: 184, baseType: !7853, size: 2304, offset: 1472)
!7853 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxStack", file: !808, line: 150, baseType: !7854)
!7854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxStack", file: !808, line: 143, size: 2304, elements: !7855)
!7855 = !{!7856, !7857, !7858, !7859, !7860}
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !7854, file: !808, line: 144, baseType: !8, size: 64)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !7854, file: !808, line: 145, baseType: !157, size: 64, offset: 64)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "maxitems", scope: !7854, file: !808, line: 145, baseType: !157, size: 64, offset: 128)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "static_items", scope: !7854, file: !808, line: 148, baseType: !500, size: 2048, offset: 192)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "oom", scope: !7854, file: !808, line: 149, baseType: !17, size: 32, offset: 2240)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "node_cb", scope: !7839, file: !808, line: 185, baseType: !7862, size: 64, offset: 3776)
!7862 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxNodeCallback", file: !808, line: 165, baseType: !7863)
!7863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7864, size: 64)
!7864 = !DISubroutineType(types: !7865)
!7865 = !{!17, !7866}
!7866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!7867 = !DILocalVariable(name: "now", scope: !7832, file: !3, line: 4368, type: !32)
!7868 = !DILocalVariable(name: "next_period", scope: !7832, file: !3, line: 4369, type: !112)
!7869 = !DILocalVariable(name: "expiretime", scope: !7870, file: !3, line: 4373, type: !32)
!7870 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 4370, column: 14)
!7871 = !DILocalVariable(name: "timer", scope: !7872, file: !3, line: 4377, type: !7874)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 4376, column: 32)
!7873 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 4376, column: 13)
!7874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7875, size: 64)
!7875 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleTimer", file: !3, line: 4356, baseType: !7876)
!7876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleTimer", file: !3, line: 4351, size: 256, elements: !7877)
!7877 = !{!7878, !7879, !7881, !7882}
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7876, file: !3, line: 4352, baseType: !577, size: 64)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !7876, file: !3, line: 4353, baseType: !7880, size: 64, offset: 64)
!7880 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleTimerProc", file: !3, line: 4348, baseType: !593)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7876, file: !3, line: 4354, baseType: !6, size: 64, offset: 128)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "dbid", scope: !7876, file: !3, line: 4355, baseType: !17, size: 32, offset: 192)
!7883 = !DILocalVariable(name: "ctx", scope: !7872, file: !3, line: 4378, type: !585)
!7884 = !DILocation(line: 4360, column: 44, scope: !7832)
!7885 = !DILocation(line: 4360, column: 65, scope: !7832)
!7886 = !DILocation(line: 4360, column: 75, scope: !7832)
!7887 = !DILocation(line: 4366, column: 5, scope: !7832)
!7888 = !DILocation(line: 4367, column: 18, scope: !7832)
!7889 = !DILocation(line: 4366, column: 17, scope: !7832)
!7890 = !DILocation(line: 4367, column: 5, scope: !7832)
!7891 = !DILocation(line: 4368, column: 20, scope: !7832)
!7892 = !DILocation(line: 4368, column: 14, scope: !7832)
!7893 = !DILocation(line: 4369, column: 15, scope: !7832)
!7894 = !DILocation(line: 4371, column: 9, scope: !7870)
!7895 = !DILocation(line: 4372, column: 14, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 4372, column: 13)
!7897 = !DILocation(line: 4372, column: 13, scope: !7870)
!7898 = !DILocation(line: 4373, column: 9, scope: !7870)
!7899 = !DILocation(line: 4374, column: 31, scope: !7870)
!7900 = !{!7901, !892, i64 16}
!7901 = !{!"raxIterator", !895, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !1046, i64 32, !1046, i64 40, !893, i64 48, !892, i64 176, !7902, i64 184, !892, i64 472}
!7902 = !{!"raxStack", !892, i64 0, !1046, i64 8, !1046, i64 16, !893, i64 24, !895, i64 280}
!7903 = !DILocation(line: 4374, column: 9, scope: !7870)
!7904 = !DILocation(line: 4375, column: 22, scope: !7870)
!7905 = !DILocation(line: 4373, column: 18, scope: !7870)
!7906 = !DILocation(line: 4375, column: 20, scope: !7870)
!7907 = !DILocation(line: 4376, column: 17, scope: !7873)
!7908 = !DILocation(line: 4376, column: 13, scope: !7870)
!7909 = !DILocation(line: 4377, column: 42, scope: !7872)
!7910 = !{!7901, !892, i64 24}
!7911 = !DILocation(line: 4377, column: 31, scope: !7872)
!7912 = !DILocation(line: 4378, column: 13, scope: !7872)
!7913 = !DILocation(line: 4378, column: 28, scope: !7872)
!7914 = !DILocation(line: 4380, column: 33, scope: !7872)
!7915 = !{!7916, !892, i64 0}
!7916 = !{!"RedisModuleTimer", !892, i64 0, !892, i64 8, !892, i64 16, !895, i64 24}
!7917 = !DILocation(line: 4380, column: 24, scope: !7872)
!7918 = !DILocation(line: 4381, column: 26, scope: !7872)
!7919 = !DILocation(line: 4381, column: 24, scope: !7872)
!7920 = !DILocation(line: 4382, column: 41, scope: !7872)
!7921 = !{!7916, !895, i64 24}
!7922 = !DILocation(line: 4382, column: 13, scope: !7872)
!7923 = !DILocation(line: 4383, column: 20, scope: !7872)
!7924 = !{!7916, !892, i64 8}
!7925 = !DILocation(line: 4383, column: 41, scope: !7872)
!7926 = !{!7916, !892, i64 16}
!7927 = !DILocation(line: 4383, column: 13, scope: !7872)
!7928 = !DILocation(line: 4384, column: 13, scope: !7872)
!7929 = !DILocation(line: 4385, column: 23, scope: !7872)
!7930 = !DILocation(line: 4385, column: 49, scope: !7872)
!7931 = !DILocation(line: 4385, column: 56, scope: !7872)
!7932 = !{!7901, !1046, i64 32}
!7933 = !DILocation(line: 4385, column: 13, scope: !7872)
!7934 = !DILocation(line: 4386, column: 13, scope: !7872)
!7935 = !DILocation(line: 4387, column: 9, scope: !7873)
!7936 = !DILocation(line: 4391, column: 5, scope: !7832)
!7937 = !DILocation(line: 4392, column: 5, scope: !7832)
!7938 = !DILocation(line: 4395, column: 9, scope: !7832)
!7939 = !DILocation(line: 4388, column: 38, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 4387, column: 16)
!7941 = !DILocation(line: 4388, column: 43, scope: !7940)
!7942 = !DILocation(line: 4395, column: 21, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 4395, column: 9)
!7944 = !DILocation(line: 4396, column: 21, scope: !7832)
!7945 = !DILocation(line: 4396, column: 13, scope: !7832)
!7946 = !DILocation(line: 4396, column: 29, scope: !7832)
!7947 = !DILocation(line: 4396, column: 12, scope: !7832)
!7948 = !DILocation(line: 4397, column: 1, scope: !7832)
!7949 = !DILocation(line: 4396, column: 5, scope: !7832)
!7950 = distinct !DISubprogram(name: "RM_CreateTimer", scope: !3, file: !3, line: 4402, type: !7951, isLocal: false, isDefinition: true, scopeLine: 4402, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7955)
!7951 = !DISubroutineType(types: !7952)
!7952 = !{!7953, !584, !229, !7880, !6}
!7953 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleTimerID", file: !7954, line: 139, baseType: !32)
!7954 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/redismodule.h", directory: "/root/.unikraft/apps/redis/build")
!7955 = !{!7956, !7957, !7958, !7959, !7960, !7961, !7962, !7963}
!7956 = !DILocalVariable(name: "ctx", arg: 1, scope: !7950, file: !3, line: 4402, type: !584)
!7957 = !DILocalVariable(name: "period", arg: 2, scope: !7950, file: !3, line: 4402, type: !229)
!7958 = !DILocalVariable(name: "callback", arg: 3, scope: !7950, file: !3, line: 4402, type: !7880)
!7959 = !DILocalVariable(name: "data", arg: 4, scope: !7950, file: !3, line: 4402, type: !6)
!7960 = !DILocalVariable(name: "timer", scope: !7950, file: !3, line: 4403, type: !7874)
!7961 = !DILocalVariable(name: "expiretime", scope: !7950, file: !3, line: 4408, type: !32)
!7962 = !DILocalVariable(name: "key", scope: !7950, file: !3, line: 4409, type: !32)
!7963 = !DILocalVariable(name: "ri", scope: !7964, file: !3, line: 4425, type: !7838)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 4424, column: 24)
!7965 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 4424, column: 9)
!7966 = !DILocation(line: 4402, column: 51, scope: !7950)
!7967 = !DILocation(line: 4402, column: 65, scope: !7950)
!7968 = !DILocation(line: 4402, column: 94, scope: !7950)
!7969 = !DILocation(line: 4402, column: 110, scope: !7950)
!7970 = !DILocation(line: 4403, column: 31, scope: !7950)
!7971 = !DILocation(line: 4403, column: 23, scope: !7950)
!7972 = !DILocation(line: 4404, column: 26, scope: !7950)
!7973 = !DILocation(line: 4404, column: 19, scope: !7950)
!7974 = !DILocation(line: 4405, column: 12, scope: !7950)
!7975 = !DILocation(line: 4405, column: 21, scope: !7950)
!7976 = !DILocation(line: 4406, column: 12, scope: !7950)
!7977 = !DILocation(line: 4406, column: 17, scope: !7950)
!7978 = !DILocation(line: 4407, column: 24, scope: !7950)
!7979 = !DILocation(line: 4407, column: 32, scope: !7950)
!7980 = !DILocation(line: 4407, column: 36, scope: !7950)
!7981 = !DILocation(line: 4407, column: 12, scope: !7950)
!7982 = !DILocation(line: 4407, column: 17, scope: !7950)
!7983 = !DILocation(line: 4408, column: 27, scope: !7950)
!7984 = !DILocation(line: 4408, column: 42, scope: !7950)
!7985 = !DILocation(line: 4408, column: 35, scope: !7950)
!7986 = !DILocation(line: 4408, column: 14, scope: !7950)
!7987 = !DILocation(line: 4409, column: 5, scope: !7950)
!7988 = !DILocation(line: 4411, column: 5, scope: !7950)
!7989 = !DILocation(line: 0, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 4416, column: 16)
!7991 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 4413, column: 13)
!7992 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 4411, column: 14)
!7993 = !DILocation(line: 4412, column: 15, scope: !7992)
!7994 = !DILocation(line: 4409, column: 14, scope: !7950)
!7995 = !DILocation(line: 4412, column: 13, scope: !7992)
!7996 = !DILocation(line: 4413, column: 21, scope: !7991)
!7997 = !DILocation(line: 4413, column: 13, scope: !7991)
!7998 = !DILocation(line: 4413, column: 66, scope: !7991)
!7999 = !DILocation(line: 4413, column: 63, scope: !7991)
!8000 = !DILocation(line: 4417, column: 23, scope: !7990)
!8001 = !DILocation(line: 4413, column: 13, scope: !7992)
!8002 = distinct !{!8002, !7988, !8003}
!8003 = !DILocation(line: 4419, column: 5, scope: !7950)
!8004 = !DILocation(line: 4414, column: 23, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 4413, column: 79)
!8006 = !DILocation(line: 4414, column: 13, scope: !8005)
!8007 = !DILocation(line: 4424, column: 9, scope: !7965)
!8008 = !DILocation(line: 4424, column: 17, scope: !7965)
!8009 = !DILocation(line: 4424, column: 9, scope: !7950)
!8010 = !DILocation(line: 4425, column: 9, scope: !7964)
!8011 = !DILocation(line: 4426, column: 22, scope: !7964)
!8012 = !DILocation(line: 4425, column: 21, scope: !7964)
!8013 = !DILocation(line: 4426, column: 9, scope: !7964)
!8014 = !DILocation(line: 4427, column: 9, scope: !7964)
!8015 = !DILocation(line: 4428, column: 9, scope: !7964)
!8016 = !DILocation(line: 4429, column: 23, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 4429, column: 13)
!8018 = !DILocation(line: 4429, column: 13, scope: !8017)
!8019 = !DILocation(line: 4429, column: 45, scope: !8017)
!8020 = !DILocation(line: 4429, column: 13, scope: !7964)
!8021 = !DILocation(line: 4432, column: 38, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 4429, column: 51)
!8023 = !{!1045, !892, i64 72}
!8024 = !DILocation(line: 4432, column: 41, scope: !8022)
!8025 = !DILocation(line: 4432, column: 13, scope: !8022)
!8026 = !DILocation(line: 4433, column: 21, scope: !8022)
!8027 = !DILocation(line: 4434, column: 9, scope: !8022)
!8028 = !DILocation(line: 4435, column: 9, scope: !7964)
!8029 = !DILocation(line: 4436, column: 5, scope: !7965)
!8030 = !DILocation(line: 4440, column: 9, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 4440, column: 9)
!8032 = !DILocation(line: 4440, column: 17, scope: !8031)
!8033 = !DILocation(line: 4440, column: 9, scope: !7950)
!8034 = !DILocation(line: 4441, column: 44, scope: !8031)
!8035 = !DILocation(line: 4441, column: 19, scope: !8031)
!8036 = !DILocation(line: 4441, column: 17, scope: !8031)
!8037 = !DILocation(line: 4441, column: 9, scope: !8031)
!8038 = !DILocation(line: 4443, column: 12, scope: !7950)
!8039 = !DILocation(line: 4444, column: 1, scope: !7950)
!8040 = !DILocation(line: 4443, column: 5, scope: !7950)
!8041 = distinct !DISubprogram(name: "RM_StopTimer", scope: !3, file: !3, line: 4450, type: !8042, isLocal: false, isDefinition: true, scopeLine: 4450, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8044)
!8042 = !DISubroutineType(types: !8043)
!8043 = !{!17, !584, !7953, !8}
!8044 = !{!8045, !8046, !8047, !8048}
!8045 = !DILocalVariable(name: "ctx", arg: 1, scope: !8041, file: !3, line: 4450, type: !584)
!8046 = !DILocalVariable(name: "id", arg: 2, scope: !8041, file: !3, line: 4450, type: !7953)
!8047 = !DILocalVariable(name: "data", arg: 3, scope: !8041, file: !3, line: 4450, type: !8)
!8048 = !DILocalVariable(name: "timer", scope: !8041, file: !3, line: 4451, type: !7874)
!8049 = !DILocation(line: 4450, column: 34, scope: !8041)
!8050 = !DILocation(line: 4450, column: 58, scope: !8041)
!8051 = !DILocation(line: 4450, column: 69, scope: !8041)
!8052 = !DILocation(line: 4451, column: 39, scope: !8041)
!8053 = !DILocation(line: 4451, column: 46, scope: !8041)
!8054 = !DILocation(line: 4451, column: 31, scope: !8041)
!8055 = !DILocation(line: 4451, column: 23, scope: !8041)
!8056 = !DILocation(line: 4452, column: 18, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 4452, column: 9)
!8058 = !DILocation(line: 4452, column: 15, scope: !8057)
!8059 = !DILocation(line: 4452, column: 30, scope: !8057)
!8060 = !DILocation(line: 4452, column: 40, scope: !8057)
!8061 = !DILocation(line: 4452, column: 55, scope: !8057)
!8062 = !DILocation(line: 4452, column: 47, scope: !8057)
!8063 = !DILocation(line: 4452, column: 9, scope: !8041)
!8064 = !DILocation(line: 4454, column: 9, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 4454, column: 9)
!8066 = !DILocation(line: 4454, column: 9, scope: !8041)
!8067 = !DILocation(line: 4454, column: 30, scope: !8065)
!8068 = !DILocation(line: 4454, column: 21, scope: !8065)
!8069 = !DILocation(line: 4454, column: 15, scope: !8065)
!8070 = !DILocation(line: 4455, column: 15, scope: !8041)
!8071 = !DILocation(line: 4455, column: 5, scope: !8041)
!8072 = !DILocation(line: 4456, column: 5, scope: !8041)
!8073 = !DILocation(line: 4457, column: 5, scope: !8041)
!8074 = !DILocation(line: 0, scope: !8041)
!8075 = !DILocation(line: 4458, column: 1, scope: !8041)
!8076 = distinct !DISubprogram(name: "RM_GetTimerInfo", scope: !3, file: !3, line: 4466, type: !8077, isLocal: false, isDefinition: true, scopeLine: 4466, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8080)
!8077 = !DISubroutineType(types: !8078)
!8078 = !{!17, !584, !7953, !8079, !8}
!8079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!8080 = !{!8081, !8082, !8083, !8084, !8085, !8086}
!8081 = !DILocalVariable(name: "ctx", arg: 1, scope: !8076, file: !3, line: 4466, type: !584)
!8082 = !DILocalVariable(name: "id", arg: 2, scope: !8076, file: !3, line: 4466, type: !7953)
!8083 = !DILocalVariable(name: "remaining", arg: 3, scope: !8076, file: !3, line: 4466, type: !8079)
!8084 = !DILocalVariable(name: "data", arg: 4, scope: !8076, file: !3, line: 4466, type: !8)
!8085 = !DILocalVariable(name: "timer", scope: !8076, file: !3, line: 4467, type: !7874)
!8086 = !DILocalVariable(name: "rem", scope: !8087, file: !3, line: 4471, type: !92)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 4470, column: 20)
!8088 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 4470, column: 9)
!8089 = !DILocation(line: 4466, column: 37, scope: !8076)
!8090 = !DILocation(line: 4466, column: 61, scope: !8076)
!8091 = !DILocation(line: 4466, column: 75, scope: !8076)
!8092 = !DILocation(line: 4466, column: 93, scope: !8076)
!8093 = !DILocation(line: 4467, column: 39, scope: !8076)
!8094 = !DILocation(line: 4467, column: 46, scope: !8076)
!8095 = !DILocation(line: 4467, column: 31, scope: !8076)
!8096 = !DILocation(line: 4467, column: 23, scope: !8076)
!8097 = !DILocation(line: 4468, column: 18, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 4468, column: 9)
!8099 = !DILocation(line: 4468, column: 15, scope: !8098)
!8100 = !DILocation(line: 4468, column: 30, scope: !8098)
!8101 = !DILocation(line: 4468, column: 40, scope: !8098)
!8102 = !DILocation(line: 4468, column: 55, scope: !8098)
!8103 = !DILocation(line: 4468, column: 47, scope: !8098)
!8104 = !DILocation(line: 4468, column: 9, scope: !8076)
!8105 = !DILocation(line: 4470, column: 9, scope: !8088)
!8106 = !DILocation(line: 4470, column: 9, scope: !8076)
!8107 = !DILocation(line: 4471, column: 23, scope: !8087)
!8108 = !DILocation(line: 4471, column: 35, scope: !8087)
!8109 = !DILocation(line: 4471, column: 34, scope: !8087)
!8110 = !DILocation(line: 4471, column: 17, scope: !8087)
!8111 = !DILocation(line: 4472, column: 13, scope: !8087)
!8112 = !DILocation(line: 4473, column: 25, scope: !8087)
!8113 = !DILocation(line: 4473, column: 20, scope: !8087)
!8114 = !DILocation(line: 4474, column: 5, scope: !8087)
!8115 = !DILocation(line: 4475, column: 9, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 4475, column: 9)
!8117 = !DILocation(line: 4475, column: 9, scope: !8076)
!8118 = !DILocation(line: 4475, column: 30, scope: !8116)
!8119 = !DILocation(line: 4475, column: 21, scope: !8116)
!8120 = !DILocation(line: 4475, column: 15, scope: !8116)
!8121 = !DILocation(line: 0, scope: !8076)
!8122 = !DILocation(line: 4477, column: 1, scope: !8076)
!8123 = distinct !DISubprogram(name: "RM_CreateDict", scope: !3, file: !3, line: 4500, type: !8124, isLocal: false, isDefinition: true, scopeLine: 4500, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8126)
!8124 = !DISubroutineType(types: !8125)
!8125 = !{!1213, !584}
!8126 = !{!8127, !8128}
!8127 = !DILocalVariable(name: "ctx", arg: 1, scope: !8123, file: !3, line: 4500, type: !584)
!8128 = !DILocalVariable(name: "d", scope: !8123, file: !3, line: 4501, type: !8129)
!8129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!8130 = !DILocation(line: 4500, column: 48, scope: !8123)
!8131 = !DILocation(line: 4501, column: 33, scope: !8123)
!8132 = !DILocation(line: 4501, column: 29, scope: !8123)
!8133 = !DILocation(line: 4502, column: 14, scope: !8123)
!8134 = !DILocation(line: 4502, column: 8, scope: !8123)
!8135 = !DILocation(line: 4502, column: 12, scope: !8123)
!8136 = !DILocation(line: 4503, column: 13, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 4503, column: 9)
!8138 = !DILocation(line: 4503, column: 9, scope: !8123)
!8139 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !8140)
!8140 = distinct !DILocation(line: 4503, column: 22, scope: !8137)
!8141 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !8140)
!8142 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !8140)
!8143 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !8140)
!8144 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !8140)
!8145 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !8140)
!8146 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !8140)
!8147 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !8140)
!8148 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !8140)
!8149 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !8140)
!8150 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !8140)
!8151 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !8140)
!8152 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !8140)
!8153 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !8140)
!8154 = !DILocation(line: 0, scope: !1724, inlinedAt: !8140)
!8155 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !8140)
!8156 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !8140)
!8157 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !8140)
!8158 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !8140)
!8159 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !8140)
!8160 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !8140)
!8161 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !8140)
!8162 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !8140)
!8163 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !8140)
!8164 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !8140)
!8165 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !8140)
!8166 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !8140)
!8167 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !8140)
!8168 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !8140)
!8169 = !DILocation(line: 4504, column: 5, scope: !8123)
!8170 = distinct !DISubprogram(name: "RM_DictSize", scope: !3, file: !3, line: 4517, type: !8171, isLocal: false, isDefinition: true, scopeLine: 4517, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8173)
!8171 = !DISubroutineType(types: !8172)
!8172 = !{!32, !1213}
!8173 = !{!8174}
!8174 = !DILocalVariable(name: "d", arg: 1, scope: !8170, file: !3, line: 4517, type: !1213)
!8175 = !DILocation(line: 4517, column: 39, scope: !8170)
!8176 = !DILocation(line: 4518, column: 23, scope: !8170)
!8177 = !DILocation(line: 4518, column: 12, scope: !8170)
!8178 = !DILocation(line: 4518, column: 5, scope: !8170)
!8179 = distinct !DISubprogram(name: "RM_DictSetC", scope: !3, file: !3, line: 4525, type: !8180, isLocal: false, isDefinition: true, scopeLine: 4525, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8182)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{!17, !1213, !6, !157, !6}
!8182 = !{!8183, !8184, !8185, !8186, !8187}
!8183 = !DILocalVariable(name: "d", arg: 1, scope: !8179, file: !3, line: 4525, type: !1213)
!8184 = !DILocalVariable(name: "key", arg: 2, scope: !8179, file: !3, line: 4525, type: !6)
!8185 = !DILocalVariable(name: "keylen", arg: 3, scope: !8179, file: !3, line: 4525, type: !157)
!8186 = !DILocalVariable(name: "ptr", arg: 4, scope: !8179, file: !3, line: 4525, type: !6)
!8187 = !DILocalVariable(name: "retval", scope: !8179, file: !3, line: 4526, type: !17)
!8188 = !DILocation(line: 4525, column: 34, scope: !8179)
!8189 = !DILocation(line: 4525, column: 43, scope: !8179)
!8190 = !DILocation(line: 4525, column: 55, scope: !8179)
!8191 = !DILocation(line: 4525, column: 69, scope: !8179)
!8192 = !DILocation(line: 4526, column: 34, scope: !8179)
!8193 = !DILocation(line: 4526, column: 18, scope: !8179)
!8194 = !DILocation(line: 4526, column: 9, scope: !8179)
!8195 = !DILocation(line: 4527, column: 20, scope: !8179)
!8196 = !DILocation(line: 4527, column: 12, scope: !8179)
!8197 = !DILocation(line: 4527, column: 5, scope: !8179)
!8198 = distinct !DISubprogram(name: "RM_DictReplaceC", scope: !3, file: !3, line: 4532, type: !8180, isLocal: false, isDefinition: true, scopeLine: 4532, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8199)
!8199 = !{!8200, !8201, !8202, !8203, !8204}
!8200 = !DILocalVariable(name: "d", arg: 1, scope: !8198, file: !3, line: 4532, type: !1213)
!8201 = !DILocalVariable(name: "key", arg: 2, scope: !8198, file: !3, line: 4532, type: !6)
!8202 = !DILocalVariable(name: "keylen", arg: 3, scope: !8198, file: !3, line: 4532, type: !157)
!8203 = !DILocalVariable(name: "ptr", arg: 4, scope: !8198, file: !3, line: 4532, type: !6)
!8204 = !DILocalVariable(name: "retval", scope: !8198, file: !3, line: 4533, type: !17)
!8205 = !DILocation(line: 4532, column: 38, scope: !8198)
!8206 = !DILocation(line: 4532, column: 47, scope: !8198)
!8207 = !DILocation(line: 4532, column: 59, scope: !8198)
!8208 = !DILocation(line: 4532, column: 73, scope: !8198)
!8209 = !DILocation(line: 4533, column: 31, scope: !8198)
!8210 = !DILocation(line: 4533, column: 18, scope: !8198)
!8211 = !DILocation(line: 4533, column: 9, scope: !8198)
!8212 = !DILocation(line: 4534, column: 20, scope: !8198)
!8213 = !DILocation(line: 4534, column: 12, scope: !8198)
!8214 = !DILocation(line: 4534, column: 5, scope: !8198)
!8215 = distinct !DISubprogram(name: "RM_DictSet", scope: !3, file: !3, line: 4538, type: !8216, isLocal: false, isDefinition: true, scopeLine: 4538, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8218)
!8216 = !DISubroutineType(types: !8217)
!8217 = !{!17, !1213, !143, !6}
!8218 = !{!8219, !8220, !8221}
!8219 = !DILocalVariable(name: "d", arg: 1, scope: !8215, file: !3, line: 4538, type: !1213)
!8220 = !DILocalVariable(name: "key", arg: 2, scope: !8215, file: !3, line: 4538, type: !143)
!8221 = !DILocalVariable(name: "ptr", arg: 3, scope: !8215, file: !3, line: 4538, type: !6)
!8222 = !DILocation(line: 4538, column: 33, scope: !8215)
!8223 = !DILocation(line: 4538, column: 55, scope: !8215)
!8224 = !DILocation(line: 4538, column: 66, scope: !8215)
!8225 = !DILocation(line: 4539, column: 31, scope: !8215)
!8226 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !8227)
!8227 = distinct !DILocation(line: 4539, column: 35, scope: !8215)
!8228 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !8227)
!8229 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !8227)
!8230 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !8227)
!8231 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !8227)
!8232 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !8227)
!8233 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !8227)
!8234 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !8227)
!8235 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !8227)
!8236 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !8227)
!8237 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !8227)
!8238 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !8227)
!8239 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !8227)
!8240 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !8227)
!8241 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !8227)
!8242 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !8227)
!8243 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !8227)
!8244 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !8227)
!8245 = !DILocation(line: 0, scope: !2343, inlinedAt: !8227)
!8246 = !DILocation(line: 4525, column: 34, scope: !8179, inlinedAt: !8247)
!8247 = distinct !DILocation(line: 4539, column: 12, scope: !8215)
!8248 = !DILocation(line: 4525, column: 43, scope: !8179, inlinedAt: !8247)
!8249 = !DILocation(line: 4525, column: 55, scope: !8179, inlinedAt: !8247)
!8250 = !DILocation(line: 4525, column: 69, scope: !8179, inlinedAt: !8247)
!8251 = !DILocation(line: 4526, column: 34, scope: !8179, inlinedAt: !8247)
!8252 = !DILocation(line: 4526, column: 18, scope: !8179, inlinedAt: !8247)
!8253 = !DILocation(line: 4526, column: 9, scope: !8179, inlinedAt: !8247)
!8254 = !DILocation(line: 4527, column: 20, scope: !8179, inlinedAt: !8247)
!8255 = !DILocation(line: 4527, column: 12, scope: !8179, inlinedAt: !8247)
!8256 = !DILocation(line: 4539, column: 5, scope: !8215)
!8257 = distinct !DISubprogram(name: "RM_DictReplace", scope: !3, file: !3, line: 4543, type: !8216, isLocal: false, isDefinition: true, scopeLine: 4543, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8258)
!8258 = !{!8259, !8260, !8261}
!8259 = !DILocalVariable(name: "d", arg: 1, scope: !8257, file: !3, line: 4543, type: !1213)
!8260 = !DILocalVariable(name: "key", arg: 2, scope: !8257, file: !3, line: 4543, type: !143)
!8261 = !DILocalVariable(name: "ptr", arg: 3, scope: !8257, file: !3, line: 4543, type: !6)
!8262 = !DILocation(line: 4543, column: 37, scope: !8257)
!8263 = !DILocation(line: 4543, column: 59, scope: !8257)
!8264 = !DILocation(line: 4543, column: 70, scope: !8257)
!8265 = !DILocation(line: 4544, column: 35, scope: !8257)
!8266 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !8267)
!8267 = distinct !DILocation(line: 4544, column: 39, scope: !8257)
!8268 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !8267)
!8269 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !8267)
!8270 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !8267)
!8271 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !8267)
!8272 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !8267)
!8273 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !8267)
!8274 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !8267)
!8275 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !8267)
!8276 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !8267)
!8277 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !8267)
!8278 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !8267)
!8279 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !8267)
!8280 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !8267)
!8281 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !8267)
!8282 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !8267)
!8283 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !8267)
!8284 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !8267)
!8285 = !DILocation(line: 0, scope: !2343, inlinedAt: !8267)
!8286 = !DILocation(line: 4532, column: 38, scope: !8198, inlinedAt: !8287)
!8287 = distinct !DILocation(line: 4544, column: 12, scope: !8257)
!8288 = !DILocation(line: 4532, column: 47, scope: !8198, inlinedAt: !8287)
!8289 = !DILocation(line: 4532, column: 59, scope: !8198, inlinedAt: !8287)
!8290 = !DILocation(line: 4532, column: 73, scope: !8198, inlinedAt: !8287)
!8291 = !DILocation(line: 4533, column: 31, scope: !8198, inlinedAt: !8287)
!8292 = !DILocation(line: 4533, column: 18, scope: !8198, inlinedAt: !8287)
!8293 = !DILocation(line: 4533, column: 9, scope: !8198, inlinedAt: !8287)
!8294 = !DILocation(line: 4534, column: 20, scope: !8198, inlinedAt: !8287)
!8295 = !DILocation(line: 4534, column: 12, scope: !8198, inlinedAt: !8287)
!8296 = !DILocation(line: 4544, column: 5, scope: !8257)
!8297 = distinct !DISubprogram(name: "RM_DictGetC", scope: !3, file: !3, line: 4552, type: !8298, isLocal: false, isDefinition: true, scopeLine: 4552, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8300)
!8298 = !DISubroutineType(types: !8299)
!8299 = !{!6, !1213, !6, !157, !16}
!8300 = !{!8301, !8302, !8303, !8304, !8305}
!8301 = !DILocalVariable(name: "d", arg: 1, scope: !8297, file: !3, line: 4552, type: !1213)
!8302 = !DILocalVariable(name: "key", arg: 2, scope: !8297, file: !3, line: 4552, type: !6)
!8303 = !DILocalVariable(name: "keylen", arg: 3, scope: !8297, file: !3, line: 4552, type: !157)
!8304 = !DILocalVariable(name: "nokey", arg: 4, scope: !8297, file: !3, line: 4552, type: !16)
!8305 = !DILocalVariable(name: "res", scope: !8297, file: !3, line: 4553, type: !6)
!8306 = !DILocation(line: 4552, column: 36, scope: !8297)
!8307 = !DILocation(line: 4552, column: 45, scope: !8297)
!8308 = !DILocation(line: 4552, column: 57, scope: !8297)
!8309 = !DILocation(line: 4552, column: 70, scope: !8297)
!8310 = !DILocation(line: 4553, column: 28, scope: !8297)
!8311 = !DILocation(line: 4553, column: 17, scope: !8297)
!8312 = !DILocation(line: 4553, column: 11, scope: !8297)
!8313 = !DILocation(line: 4554, column: 9, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8297, file: !3, line: 4554, column: 9)
!8315 = !DILocation(line: 0, scope: !8314)
!8316 = !DILocation(line: 4554, column: 9, scope: !8297)
!8317 = !DILocation(line: 4554, column: 30, scope: !8314)
!8318 = !DILocation(line: 4554, column: 23, scope: !8314)
!8319 = !DILocation(line: 4554, column: 16, scope: !8314)
!8320 = !DILocation(line: 4555, column: 17, scope: !8297)
!8321 = !DILocation(line: 4555, column: 12, scope: !8297)
!8322 = !DILocation(line: 4555, column: 5, scope: !8297)
!8323 = distinct !DISubprogram(name: "RM_DictGet", scope: !3, file: !3, line: 4559, type: !8324, isLocal: false, isDefinition: true, scopeLine: 4559, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8326)
!8324 = !DISubroutineType(types: !8325)
!8325 = !{!6, !1213, !143, !16}
!8326 = !{!8327, !8328, !8329}
!8327 = !DILocalVariable(name: "d", arg: 1, scope: !8323, file: !3, line: 4559, type: !1213)
!8328 = !DILocalVariable(name: "key", arg: 2, scope: !8323, file: !3, line: 4559, type: !143)
!8329 = !DILocalVariable(name: "nokey", arg: 3, scope: !8323, file: !3, line: 4559, type: !16)
!8330 = !DILocation(line: 4559, column: 35, scope: !8323)
!8331 = !DILocation(line: 4559, column: 57, scope: !8323)
!8332 = !DILocation(line: 4559, column: 67, scope: !8323)
!8333 = !DILocation(line: 4560, column: 31, scope: !8323)
!8334 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !8335)
!8335 = distinct !DILocation(line: 4560, column: 35, scope: !8323)
!8336 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !8335)
!8337 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !8335)
!8338 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !8335)
!8339 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !8335)
!8340 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !8335)
!8341 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !8335)
!8342 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !8335)
!8343 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !8335)
!8344 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !8335)
!8345 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !8335)
!8346 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !8335)
!8347 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !8335)
!8348 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !8335)
!8349 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !8335)
!8350 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !8335)
!8351 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !8335)
!8352 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !8335)
!8353 = !DILocation(line: 0, scope: !2343, inlinedAt: !8335)
!8354 = !DILocation(line: 4552, column: 36, scope: !8297, inlinedAt: !8355)
!8355 = distinct !DILocation(line: 4560, column: 12, scope: !8323)
!8356 = !DILocation(line: 4552, column: 45, scope: !8297, inlinedAt: !8355)
!8357 = !DILocation(line: 4552, column: 57, scope: !8297, inlinedAt: !8355)
!8358 = !DILocation(line: 4552, column: 70, scope: !8297, inlinedAt: !8355)
!8359 = !DILocation(line: 4553, column: 28, scope: !8297, inlinedAt: !8355)
!8360 = !DILocation(line: 4553, column: 17, scope: !8297, inlinedAt: !8355)
!8361 = !DILocation(line: 4553, column: 11, scope: !8297, inlinedAt: !8355)
!8362 = !DILocation(line: 4554, column: 9, scope: !8314, inlinedAt: !8355)
!8363 = !DILocation(line: 0, scope: !8314, inlinedAt: !8355)
!8364 = !DILocation(line: 4554, column: 9, scope: !8297, inlinedAt: !8355)
!8365 = !DILocation(line: 4554, column: 30, scope: !8314, inlinedAt: !8355)
!8366 = !DILocation(line: 4554, column: 23, scope: !8314, inlinedAt: !8355)
!8367 = !DILocation(line: 4554, column: 16, scope: !8314, inlinedAt: !8355)
!8368 = !DILocation(line: 4555, column: 17, scope: !8297, inlinedAt: !8355)
!8369 = !DILocation(line: 4555, column: 12, scope: !8297, inlinedAt: !8355)
!8370 = !DILocation(line: 4560, column: 5, scope: !8323)
!8371 = distinct !DISubprogram(name: "RM_DictDelC", scope: !3, file: !3, line: 4570, type: !8180, isLocal: false, isDefinition: true, scopeLine: 4570, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8372)
!8372 = !{!8373, !8374, !8375, !8376, !8377}
!8373 = !DILocalVariable(name: "d", arg: 1, scope: !8371, file: !3, line: 4570, type: !1213)
!8374 = !DILocalVariable(name: "key", arg: 2, scope: !8371, file: !3, line: 4570, type: !6)
!8375 = !DILocalVariable(name: "keylen", arg: 3, scope: !8371, file: !3, line: 4570, type: !157)
!8376 = !DILocalVariable(name: "oldval", arg: 4, scope: !8371, file: !3, line: 4570, type: !6)
!8377 = !DILocalVariable(name: "retval", scope: !8371, file: !3, line: 4571, type: !17)
!8378 = !DILocation(line: 4570, column: 34, scope: !8371)
!8379 = !DILocation(line: 4570, column: 43, scope: !8371)
!8380 = !DILocation(line: 4570, column: 55, scope: !8371)
!8381 = !DILocation(line: 4570, column: 69, scope: !8371)
!8382 = !DILocation(line: 4571, column: 31, scope: !8371)
!8383 = !DILocation(line: 4571, column: 46, scope: !8371)
!8384 = !DILocation(line: 4571, column: 18, scope: !8371)
!8385 = !DILocation(line: 4571, column: 9, scope: !8371)
!8386 = !DILocation(line: 4572, column: 12, scope: !8371)
!8387 = !DILocation(line: 4572, column: 5, scope: !8371)
!8388 = distinct !DISubprogram(name: "RM_DictDel", scope: !3, file: !3, line: 4576, type: !8216, isLocal: false, isDefinition: true, scopeLine: 4576, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8389)
!8389 = !{!8390, !8391, !8392}
!8390 = !DILocalVariable(name: "d", arg: 1, scope: !8388, file: !3, line: 4576, type: !1213)
!8391 = !DILocalVariable(name: "key", arg: 2, scope: !8388, file: !3, line: 4576, type: !143)
!8392 = !DILocalVariable(name: "oldval", arg: 3, scope: !8388, file: !3, line: 4576, type: !6)
!8393 = !DILocation(line: 4576, column: 33, scope: !8388)
!8394 = !DILocation(line: 4576, column: 55, scope: !8388)
!8395 = !DILocation(line: 4576, column: 66, scope: !8388)
!8396 = !DILocation(line: 4577, column: 31, scope: !8388)
!8397 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !8398)
!8398 = distinct !DILocation(line: 4577, column: 35, scope: !8388)
!8399 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !8398)
!8400 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !8398)
!8401 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !8398)
!8402 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !8398)
!8403 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !8398)
!8404 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !8398)
!8405 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !8398)
!8406 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !8398)
!8407 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !8398)
!8408 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !8398)
!8409 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !8398)
!8410 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !8398)
!8411 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !8398)
!8412 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !8398)
!8413 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !8398)
!8414 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !8398)
!8415 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !8398)
!8416 = !DILocation(line: 0, scope: !2343, inlinedAt: !8398)
!8417 = !DILocation(line: 4570, column: 34, scope: !8371, inlinedAt: !8418)
!8418 = distinct !DILocation(line: 4577, column: 12, scope: !8388)
!8419 = !DILocation(line: 4570, column: 43, scope: !8371, inlinedAt: !8418)
!8420 = !DILocation(line: 4570, column: 55, scope: !8371, inlinedAt: !8418)
!8421 = !DILocation(line: 4570, column: 69, scope: !8371, inlinedAt: !8418)
!8422 = !DILocation(line: 4571, column: 31, scope: !8371, inlinedAt: !8418)
!8423 = !DILocation(line: 4571, column: 46, scope: !8371, inlinedAt: !8418)
!8424 = !DILocation(line: 4571, column: 18, scope: !8371, inlinedAt: !8418)
!8425 = !DILocation(line: 4571, column: 9, scope: !8371, inlinedAt: !8418)
!8426 = !DILocation(line: 4572, column: 12, scope: !8371, inlinedAt: !8418)
!8427 = !DILocation(line: 4577, column: 5, scope: !8388)
!8428 = distinct !DISubprogram(name: "RM_DictIteratorStartC", scope: !3, file: !3, line: 4600, type: !8429, isLocal: false, isDefinition: true, scopeLine: 4600, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8437)
!8429 = !DISubroutineType(types: !8430)
!8430 = !{!8431, !1213, !523, !6, !157}
!8431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8432, size: 64)
!8432 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleDictIter", file: !3, line: 274, baseType: !8433)
!8433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleDictIter", file: !3, line: 271, size: 3904, elements: !8434)
!8434 = !{!8435, !8436}
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !8433, file: !3, line: 272, baseType: !1213, size: 64)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "ri", scope: !8433, file: !3, line: 273, baseType: !7838, size: 3840, offset: 64)
!8437 = !{!8438, !8439, !8440, !8441, !8442}
!8438 = !DILocalVariable(name: "d", arg: 1, scope: !8428, file: !3, line: 4600, type: !1213)
!8439 = !DILocalVariable(name: "op", arg: 2, scope: !8428, file: !3, line: 4600, type: !523)
!8440 = !DILocalVariable(name: "key", arg: 3, scope: !8428, file: !3, line: 4600, type: !6)
!8441 = !DILocalVariable(name: "keylen", arg: 4, scope: !8428, file: !3, line: 4600, type: !157)
!8442 = !DILocalVariable(name: "di", scope: !8428, file: !3, line: 4601, type: !8431)
!8443 = !DILocation(line: 4600, column: 61, scope: !8428)
!8444 = !DILocation(line: 4600, column: 76, scope: !8428)
!8445 = !DILocation(line: 4600, column: 86, scope: !8428)
!8446 = !DILocation(line: 4600, column: 98, scope: !8428)
!8447 = !DILocation(line: 4601, column: 31, scope: !8428)
!8448 = !DILocation(line: 4601, column: 26, scope: !8428)
!8449 = !DILocation(line: 4602, column: 9, scope: !8428)
!8450 = !DILocation(line: 4602, column: 14, scope: !8428)
!8451 = !{!8452, !892, i64 0}
!8452 = !{!"RedisModuleDictIter", !892, i64 0, !7901, i64 8}
!8453 = !DILocation(line: 4603, column: 19, scope: !8428)
!8454 = !DILocation(line: 4603, column: 25, scope: !8428)
!8455 = !DILocation(line: 4603, column: 5, scope: !8428)
!8456 = !DILocation(line: 4604, column: 5, scope: !8428)
!8457 = !DILocation(line: 4605, column: 5, scope: !8428)
!8458 = distinct !DISubprogram(name: "RM_DictIteratorStart", scope: !3, file: !3, line: 4610, type: !8459, isLocal: false, isDefinition: true, scopeLine: 4610, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8461)
!8459 = !DISubroutineType(types: !8460)
!8460 = !{!8431, !1213, !523, !143}
!8461 = !{!8462, !8463, !8464}
!8462 = !DILocalVariable(name: "d", arg: 1, scope: !8458, file: !3, line: 4610, type: !1213)
!8463 = !DILocalVariable(name: "op", arg: 2, scope: !8458, file: !3, line: 4610, type: !523)
!8464 = !DILocalVariable(name: "key", arg: 3, scope: !8458, file: !3, line: 4610, type: !143)
!8465 = !DILocation(line: 4610, column: 60, scope: !8458)
!8466 = !DILocation(line: 4610, column: 75, scope: !8458)
!8467 = !DILocation(line: 4610, column: 98, scope: !8458)
!8468 = !DILocation(line: 4611, column: 44, scope: !8458)
!8469 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !8470)
!8470 = distinct !DILocation(line: 4611, column: 48, scope: !8458)
!8471 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !8470)
!8472 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !8470)
!8473 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !8470)
!8474 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !8470)
!8475 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !8470)
!8476 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !8470)
!8477 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !8470)
!8478 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !8470)
!8479 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !8470)
!8480 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !8470)
!8481 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !8470)
!8482 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !8470)
!8483 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !8470)
!8484 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !8470)
!8485 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !8470)
!8486 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !8470)
!8487 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !8470)
!8488 = !DILocation(line: 0, scope: !2343, inlinedAt: !8470)
!8489 = !DILocation(line: 4600, column: 61, scope: !8428, inlinedAt: !8490)
!8490 = distinct !DILocation(line: 4611, column: 12, scope: !8458)
!8491 = !DILocation(line: 4600, column: 76, scope: !8428, inlinedAt: !8490)
!8492 = !DILocation(line: 4600, column: 86, scope: !8428, inlinedAt: !8490)
!8493 = !DILocation(line: 4600, column: 98, scope: !8428, inlinedAt: !8490)
!8494 = !DILocation(line: 4601, column: 31, scope: !8428, inlinedAt: !8490)
!8495 = !DILocation(line: 4601, column: 26, scope: !8428, inlinedAt: !8490)
!8496 = !DILocation(line: 4602, column: 9, scope: !8428, inlinedAt: !8490)
!8497 = !DILocation(line: 4602, column: 14, scope: !8428, inlinedAt: !8490)
!8498 = !DILocation(line: 4603, column: 19, scope: !8428, inlinedAt: !8490)
!8499 = !DILocation(line: 4603, column: 25, scope: !8428, inlinedAt: !8490)
!8500 = !DILocation(line: 4603, column: 5, scope: !8428, inlinedAt: !8490)
!8501 = !DILocation(line: 4604, column: 5, scope: !8428, inlinedAt: !8490)
!8502 = !DILocation(line: 4611, column: 5, scope: !8458)
!8503 = distinct !DISubprogram(name: "RM_DictIteratorStop", scope: !3, file: !3, line: 4616, type: !8504, isLocal: false, isDefinition: true, scopeLine: 4616, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8506)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{null, !8431}
!8506 = !{!8507}
!8507 = !DILocalVariable(name: "di", arg: 1, scope: !8503, file: !3, line: 4616, type: !8431)
!8508 = !DILocation(line: 4616, column: 47, scope: !8503)
!8509 = !DILocation(line: 4617, column: 18, scope: !8503)
!8510 = !DILocation(line: 4617, column: 5, scope: !8503)
!8511 = !DILocation(line: 4618, column: 11, scope: !8503)
!8512 = !DILocation(line: 4618, column: 5, scope: !8503)
!8513 = !DILocation(line: 4619, column: 1, scope: !8503)
!8514 = distinct !DISubprogram(name: "RM_DictIteratorReseekC", scope: !3, file: !3, line: 4628, type: !8515, isLocal: false, isDefinition: true, scopeLine: 4628, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8517)
!8515 = !DISubroutineType(types: !8516)
!8516 = !{!17, !8431, !523, !6, !157}
!8517 = !{!8518, !8519, !8520, !8521}
!8518 = !DILocalVariable(name: "di", arg: 1, scope: !8514, file: !3, line: 4628, type: !8431)
!8519 = !DILocalVariable(name: "op", arg: 2, scope: !8514, file: !3, line: 4628, type: !523)
!8520 = !DILocalVariable(name: "key", arg: 3, scope: !8514, file: !3, line: 4628, type: !6)
!8521 = !DILocalVariable(name: "keylen", arg: 4, scope: !8514, file: !3, line: 4628, type: !157)
!8522 = !DILocation(line: 4628, column: 49, scope: !8514)
!8523 = !DILocation(line: 4628, column: 65, scope: !8514)
!8524 = !DILocation(line: 4628, column: 75, scope: !8514)
!8525 = !DILocation(line: 4628, column: 87, scope: !8514)
!8526 = !DILocation(line: 4629, column: 25, scope: !8514)
!8527 = !DILocation(line: 4629, column: 12, scope: !8514)
!8528 = !DILocation(line: 4629, column: 5, scope: !8514)
!8529 = distinct !DISubprogram(name: "RM_DictIteratorReseek", scope: !3, file: !3, line: 4634, type: !8530, isLocal: false, isDefinition: true, scopeLine: 4634, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8532)
!8530 = !DISubroutineType(types: !8531)
!8531 = !{!17, !8431, !523, !143}
!8532 = !{!8533, !8534, !8535}
!8533 = !DILocalVariable(name: "di", arg: 1, scope: !8529, file: !3, line: 4634, type: !8431)
!8534 = !DILocalVariable(name: "op", arg: 2, scope: !8529, file: !3, line: 4634, type: !523)
!8535 = !DILocalVariable(name: "key", arg: 3, scope: !8529, file: !3, line: 4634, type: !143)
!8536 = !DILocation(line: 4634, column: 48, scope: !8529)
!8537 = !DILocation(line: 4634, column: 64, scope: !8529)
!8538 = !DILocation(line: 4634, column: 87, scope: !8529)
!8539 = !DILocation(line: 4635, column: 46, scope: !8529)
!8540 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !8541)
!8541 = distinct !DILocation(line: 4635, column: 50, scope: !8529)
!8542 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !8541)
!8543 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !8541)
!8544 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !8541)
!8545 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !8541)
!8546 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !8541)
!8547 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !8541)
!8548 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !8541)
!8549 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !8541)
!8550 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !8541)
!8551 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !8541)
!8552 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !8541)
!8553 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !8541)
!8554 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !8541)
!8555 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !8541)
!8556 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !8541)
!8557 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !8541)
!8558 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !8541)
!8559 = !DILocation(line: 0, scope: !2343, inlinedAt: !8541)
!8560 = !DILocation(line: 4628, column: 49, scope: !8514, inlinedAt: !8561)
!8561 = distinct !DILocation(line: 4635, column: 12, scope: !8529)
!8562 = !DILocation(line: 4628, column: 65, scope: !8514, inlinedAt: !8561)
!8563 = !DILocation(line: 4628, column: 75, scope: !8514, inlinedAt: !8561)
!8564 = !DILocation(line: 4628, column: 87, scope: !8514, inlinedAt: !8561)
!8565 = !DILocation(line: 4629, column: 25, scope: !8514, inlinedAt: !8561)
!8566 = !DILocation(line: 4629, column: 12, scope: !8514, inlinedAt: !8561)
!8567 = !DILocation(line: 4635, column: 5, scope: !8529)
!8568 = distinct !DISubprogram(name: "RM_DictNextC", scope: !3, file: !3, line: 4663, type: !8569, isLocal: false, isDefinition: true, scopeLine: 4663, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8571)
!8569 = !DISubroutineType(types: !8570)
!8570 = !{!6, !8431, !2310, !8}
!8571 = !{!8572, !8573, !8574}
!8572 = !DILocalVariable(name: "di", arg: 1, scope: !8568, file: !3, line: 4663, type: !8431)
!8573 = !DILocalVariable(name: "keylen", arg: 2, scope: !8568, file: !3, line: 4663, type: !2310)
!8574 = !DILocalVariable(name: "dataptr", arg: 3, scope: !8568, file: !3, line: 4663, type: !8)
!8575 = !DILocation(line: 4663, column: 41, scope: !8568)
!8576 = !DILocation(line: 4663, column: 53, scope: !8568)
!8577 = !DILocation(line: 4663, column: 68, scope: !8568)
!8578 = !DILocation(line: 4664, column: 23, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 4664, column: 9)
!8580 = !DILocation(line: 4664, column: 10, scope: !8579)
!8581 = !DILocation(line: 4664, column: 9, scope: !8568)
!8582 = !DILocation(line: 4665, column: 9, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 4665, column: 9)
!8584 = !DILocation(line: 4665, column: 9, scope: !8568)
!8585 = !DILocation(line: 4665, column: 34, scope: !8583)
!8586 = !{!8452, !1046, i64 40}
!8587 = !DILocation(line: 4665, column: 25, scope: !8583)
!8588 = !DILocation(line: 4665, column: 17, scope: !8583)
!8589 = !DILocation(line: 4666, column: 9, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 4666, column: 9)
!8591 = !DILocation(line: 4666, column: 9, scope: !8568)
!8592 = !DILocation(line: 4666, column: 36, scope: !8590)
!8593 = !{!8452, !892, i64 32}
!8594 = !DILocation(line: 4666, column: 27, scope: !8590)
!8595 = !DILocation(line: 4666, column: 18, scope: !8590)
!8596 = !DILocation(line: 4667, column: 19, scope: !8568)
!8597 = !{!8452, !892, i64 24}
!8598 = !DILocation(line: 4667, column: 5, scope: !8568)
!8599 = !DILocation(line: 0, scope: !8579)
!8600 = !DILocation(line: 4668, column: 1, scope: !8568)
!8601 = distinct !DISubprogram(name: "RM_DictPrevC", scope: !3, file: !3, line: 4673, type: !8569, isLocal: false, isDefinition: true, scopeLine: 4673, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8602)
!8602 = !{!8603, !8604, !8605}
!8603 = !DILocalVariable(name: "di", arg: 1, scope: !8601, file: !3, line: 4673, type: !8431)
!8604 = !DILocalVariable(name: "keylen", arg: 2, scope: !8601, file: !3, line: 4673, type: !2310)
!8605 = !DILocalVariable(name: "dataptr", arg: 3, scope: !8601, file: !3, line: 4673, type: !8)
!8606 = !DILocation(line: 4673, column: 41, scope: !8601)
!8607 = !DILocation(line: 4673, column: 53, scope: !8601)
!8608 = !DILocation(line: 4673, column: 68, scope: !8601)
!8609 = !DILocation(line: 4674, column: 23, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 4674, column: 9)
!8611 = !DILocation(line: 4674, column: 10, scope: !8610)
!8612 = !DILocation(line: 4674, column: 9, scope: !8601)
!8613 = !DILocation(line: 4675, column: 9, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 4675, column: 9)
!8615 = !DILocation(line: 4675, column: 9, scope: !8601)
!8616 = !DILocation(line: 4675, column: 34, scope: !8614)
!8617 = !DILocation(line: 4675, column: 25, scope: !8614)
!8618 = !DILocation(line: 4675, column: 17, scope: !8614)
!8619 = !DILocation(line: 4676, column: 9, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 4676, column: 9)
!8621 = !DILocation(line: 4676, column: 9, scope: !8601)
!8622 = !DILocation(line: 4676, column: 36, scope: !8620)
!8623 = !DILocation(line: 4676, column: 27, scope: !8620)
!8624 = !DILocation(line: 4676, column: 18, scope: !8620)
!8625 = !DILocation(line: 4677, column: 19, scope: !8601)
!8626 = !DILocation(line: 4677, column: 5, scope: !8601)
!8627 = !DILocation(line: 0, scope: !8610)
!8628 = !DILocation(line: 4678, column: 1, scope: !8601)
!8629 = distinct !DISubprogram(name: "RM_DictNext", scope: !3, file: !3, line: 4687, type: !8630, isLocal: false, isDefinition: true, scopeLine: 4687, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8632)
!8630 = !DISubroutineType(types: !8631)
!8631 = !{!143, !584, !8431, !8}
!8632 = !{!8633, !8634, !8635, !8636, !8637}
!8633 = !DILocalVariable(name: "ctx", arg: 1, scope: !8629, file: !3, line: 4687, type: !584)
!8634 = !DILocalVariable(name: "di", arg: 2, scope: !8629, file: !3, line: 4687, type: !8431)
!8635 = !DILocalVariable(name: "dataptr", arg: 3, scope: !8629, file: !3, line: 4687, type: !8)
!8636 = !DILocalVariable(name: "keylen", scope: !8629, file: !3, line: 4688, type: !157)
!8637 = !DILocalVariable(name: "key", scope: !8629, file: !3, line: 4689, type: !6)
!8638 = !DILocation(line: 4687, column: 48, scope: !8629)
!8639 = !DILocation(line: 4687, column: 74, scope: !8629)
!8640 = !DILocation(line: 4687, column: 85, scope: !8629)
!8641 = !DILocation(line: 4663, column: 41, scope: !8568, inlinedAt: !8642)
!8642 = distinct !DILocation(line: 4689, column: 17, scope: !8629)
!8643 = !DILocation(line: 4663, column: 68, scope: !8568, inlinedAt: !8642)
!8644 = !DILocation(line: 4664, column: 23, scope: !8579, inlinedAt: !8642)
!8645 = !DILocation(line: 4664, column: 10, scope: !8579, inlinedAt: !8642)
!8646 = !DILocation(line: 4664, column: 9, scope: !8568, inlinedAt: !8642)
!8647 = !DILocation(line: 4665, column: 34, scope: !8583, inlinedAt: !8642)
!8648 = !DILocation(line: 4666, column: 9, scope: !8590, inlinedAt: !8642)
!8649 = !DILocation(line: 4666, column: 9, scope: !8568, inlinedAt: !8642)
!8650 = !DILocation(line: 4666, column: 36, scope: !8590, inlinedAt: !8642)
!8651 = !DILocation(line: 4666, column: 27, scope: !8590, inlinedAt: !8642)
!8652 = !DILocation(line: 4666, column: 18, scope: !8590, inlinedAt: !8642)
!8653 = !DILocation(line: 4667, column: 19, scope: !8568, inlinedAt: !8642)
!8654 = !DILocation(line: 4689, column: 11, scope: !8629)
!8655 = !DILocation(line: 4690, column: 13, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 4690, column: 9)
!8657 = !DILocation(line: 4690, column: 9, scope: !8629)
!8658 = !DILocation(line: 4688, column: 12, scope: !8629)
!8659 = !DILocation(line: 872, column: 52, scope: !1993, inlinedAt: !8660)
!8660 = distinct !DILocation(line: 4691, column: 12, scope: !8629)
!8661 = !DILocation(line: 872, column: 69, scope: !1993, inlinedAt: !8660)
!8662 = !DILocation(line: 872, column: 81, scope: !1993, inlinedAt: !8660)
!8663 = !DILocation(line: 873, column: 28, scope: !1993, inlinedAt: !8660)
!8664 = !DILocation(line: 873, column: 24, scope: !1993, inlinedAt: !8660)
!8665 = !DILocation(line: 874, column: 13, scope: !2007, inlinedAt: !8660)
!8666 = !DILocation(line: 874, column: 9, scope: !1993, inlinedAt: !8660)
!8667 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !8668)
!8668 = distinct !DILocation(line: 874, column: 22, scope: !2007, inlinedAt: !8660)
!8669 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !8668)
!8670 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !8668)
!8671 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !8668)
!8672 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !8668)
!8673 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !8668)
!8674 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !8668)
!8675 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !8668)
!8676 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !8668)
!8677 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !8668)
!8678 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !8668)
!8679 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !8668)
!8680 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !8668)
!8681 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !8668)
!8682 = !DILocation(line: 0, scope: !1724, inlinedAt: !8668)
!8683 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !8668)
!8684 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !8668)
!8685 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !8668)
!8686 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !8668)
!8687 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !8668)
!8688 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !8668)
!8689 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !8668)
!8690 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !8668)
!8691 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !8668)
!8692 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !8668)
!8693 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !8668)
!8694 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !8668)
!8695 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !8668)
!8696 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !8668)
!8697 = !DILocation(line: 0, scope: !8629)
!8698 = !DILocation(line: 4692, column: 1, scope: !8629)
!8699 = distinct !DISubprogram(name: "RM_DictPrev", scope: !3, file: !3, line: 4697, type: !8630, isLocal: false, isDefinition: true, scopeLine: 4697, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8700)
!8700 = !{!8701, !8702, !8703, !8704, !8705}
!8701 = !DILocalVariable(name: "ctx", arg: 1, scope: !8699, file: !3, line: 4697, type: !584)
!8702 = !DILocalVariable(name: "di", arg: 2, scope: !8699, file: !3, line: 4697, type: !8431)
!8703 = !DILocalVariable(name: "dataptr", arg: 3, scope: !8699, file: !3, line: 4697, type: !8)
!8704 = !DILocalVariable(name: "keylen", scope: !8699, file: !3, line: 4698, type: !157)
!8705 = !DILocalVariable(name: "key", scope: !8699, file: !3, line: 4699, type: !6)
!8706 = !DILocation(line: 4697, column: 48, scope: !8699)
!8707 = !DILocation(line: 4697, column: 74, scope: !8699)
!8708 = !DILocation(line: 4697, column: 85, scope: !8699)
!8709 = !DILocation(line: 4673, column: 41, scope: !8601, inlinedAt: !8710)
!8710 = distinct !DILocation(line: 4699, column: 17, scope: !8699)
!8711 = !DILocation(line: 4673, column: 68, scope: !8601, inlinedAt: !8710)
!8712 = !DILocation(line: 4674, column: 23, scope: !8610, inlinedAt: !8710)
!8713 = !DILocation(line: 4674, column: 10, scope: !8610, inlinedAt: !8710)
!8714 = !DILocation(line: 4674, column: 9, scope: !8601, inlinedAt: !8710)
!8715 = !DILocation(line: 4675, column: 34, scope: !8614, inlinedAt: !8710)
!8716 = !DILocation(line: 4676, column: 9, scope: !8620, inlinedAt: !8710)
!8717 = !DILocation(line: 4676, column: 9, scope: !8601, inlinedAt: !8710)
!8718 = !DILocation(line: 4676, column: 36, scope: !8620, inlinedAt: !8710)
!8719 = !DILocation(line: 4676, column: 27, scope: !8620, inlinedAt: !8710)
!8720 = !DILocation(line: 4676, column: 18, scope: !8620, inlinedAt: !8710)
!8721 = !DILocation(line: 4677, column: 19, scope: !8601, inlinedAt: !8710)
!8722 = !DILocation(line: 4699, column: 11, scope: !8699)
!8723 = !DILocation(line: 4700, column: 13, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 4700, column: 9)
!8725 = !DILocation(line: 4700, column: 9, scope: !8699)
!8726 = !DILocation(line: 4698, column: 12, scope: !8699)
!8727 = !DILocation(line: 872, column: 52, scope: !1993, inlinedAt: !8728)
!8728 = distinct !DILocation(line: 4701, column: 12, scope: !8699)
!8729 = !DILocation(line: 872, column: 69, scope: !1993, inlinedAt: !8728)
!8730 = !DILocation(line: 872, column: 81, scope: !1993, inlinedAt: !8728)
!8731 = !DILocation(line: 873, column: 28, scope: !1993, inlinedAt: !8728)
!8732 = !DILocation(line: 873, column: 24, scope: !1993, inlinedAt: !8728)
!8733 = !DILocation(line: 874, column: 13, scope: !2007, inlinedAt: !8728)
!8734 = !DILocation(line: 874, column: 9, scope: !1993, inlinedAt: !8728)
!8735 = !DILocation(line: 787, column: 36, scope: !1703, inlinedAt: !8736)
!8736 = distinct !DILocation(line: 874, column: 22, scope: !2007, inlinedAt: !8728)
!8737 = !DILocation(line: 787, column: 45, scope: !1703, inlinedAt: !8736)
!8738 = !DILocation(line: 787, column: 57, scope: !1703, inlinedAt: !8736)
!8739 = !DILocation(line: 788, column: 16, scope: !1714, inlinedAt: !8736)
!8740 = !DILocation(line: 788, column: 22, scope: !1714, inlinedAt: !8736)
!8741 = !DILocation(line: 788, column: 9, scope: !1703, inlinedAt: !8736)
!8742 = !DILocation(line: 789, column: 14, scope: !1718, inlinedAt: !8736)
!8743 = !DILocation(line: 789, column: 35, scope: !1718, inlinedAt: !8736)
!8744 = !DILocation(line: 789, column: 27, scope: !1718, inlinedAt: !8736)
!8745 = !DILocation(line: 789, column: 9, scope: !1703, inlinedAt: !8736)
!8746 = !DILocation(line: 794, column: 10, scope: !1703, inlinedAt: !8736)
!8747 = !DILocation(line: 790, column: 26, scope: !1724, inlinedAt: !8736)
!8748 = !DILocation(line: 791, column: 30, scope: !1726, inlinedAt: !8736)
!8749 = !DILocation(line: 791, column: 13, scope: !1724, inlinedAt: !8736)
!8750 = !DILocation(line: 0, scope: !1724, inlinedAt: !8736)
!8751 = !DILocation(line: 792, column: 38, scope: !1724, inlinedAt: !8736)
!8752 = !DILocation(line: 792, column: 74, scope: !1724, inlinedAt: !8736)
!8753 = !DILocation(line: 792, column: 73, scope: !1724, inlinedAt: !8736)
!8754 = !DILocation(line: 792, column: 24, scope: !1724, inlinedAt: !8736)
!8755 = !DILocation(line: 792, column: 22, scope: !1724, inlinedAt: !8736)
!8756 = !DILocation(line: 793, column: 5, scope: !1724, inlinedAt: !8736)
!8757 = !DILocation(line: 794, column: 23, scope: !1703, inlinedAt: !8736)
!8758 = !DILocation(line: 794, column: 5, scope: !1703, inlinedAt: !8736)
!8759 = !DILocation(line: 794, column: 37, scope: !1703, inlinedAt: !8736)
!8760 = !DILocation(line: 794, column: 42, scope: !1703, inlinedAt: !8736)
!8761 = !DILocation(line: 795, column: 37, scope: !1703, inlinedAt: !8736)
!8762 = !DILocation(line: 795, column: 41, scope: !1703, inlinedAt: !8736)
!8763 = !DILocation(line: 796, column: 22, scope: !1703, inlinedAt: !8736)
!8764 = !DILocation(line: 797, column: 1, scope: !1703, inlinedAt: !8736)
!8765 = !DILocation(line: 0, scope: !8699)
!8766 = !DILocation(line: 4702, column: 1, scope: !8699)
!8767 = distinct !DISubprogram(name: "RM_DictCompareC", scope: !3, file: !3, line: 4716, type: !8515, isLocal: false, isDefinition: true, scopeLine: 4716, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8768)
!8768 = !{!8769, !8770, !8771, !8772, !8773}
!8769 = !DILocalVariable(name: "di", arg: 1, scope: !8767, file: !3, line: 4716, type: !8431)
!8770 = !DILocalVariable(name: "op", arg: 2, scope: !8767, file: !3, line: 4716, type: !523)
!8771 = !DILocalVariable(name: "key", arg: 3, scope: !8767, file: !3, line: 4716, type: !6)
!8772 = !DILocalVariable(name: "keylen", arg: 4, scope: !8767, file: !3, line: 4716, type: !157)
!8773 = !DILocalVariable(name: "res", scope: !8767, file: !3, line: 4718, type: !17)
!8774 = !DILocation(line: 4716, column: 42, scope: !8767)
!8775 = !DILocation(line: 4716, column: 58, scope: !8767)
!8776 = !DILocation(line: 4716, column: 68, scope: !8767)
!8777 = !DILocation(line: 4716, column: 80, scope: !8767)
!8778 = !DILocation(line: 4717, column: 21, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8767, file: !3, line: 4717, column: 9)
!8780 = !DILocation(line: 4717, column: 9, scope: !8779)
!8781 = !DILocation(line: 4717, column: 9, scope: !8767)
!8782 = !DILocation(line: 4718, column: 15, scope: !8767)
!8783 = !DILocation(line: 4718, column: 9, scope: !8767)
!8784 = !DILocation(line: 4719, column: 12, scope: !8767)
!8785 = !DILocation(line: 0, scope: !8767)
!8786 = !DILocation(line: 4720, column: 1, scope: !8767)
!8787 = distinct !DISubprogram(name: "RM_DictCompare", scope: !3, file: !3, line: 4724, type: !8530, isLocal: false, isDefinition: true, scopeLine: 4724, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8788)
!8788 = !{!8789, !8790, !8791, !8792}
!8789 = !DILocalVariable(name: "di", arg: 1, scope: !8787, file: !3, line: 4724, type: !8431)
!8790 = !DILocalVariable(name: "op", arg: 2, scope: !8787, file: !3, line: 4724, type: !523)
!8791 = !DILocalVariable(name: "key", arg: 3, scope: !8787, file: !3, line: 4724, type: !143)
!8792 = !DILocalVariable(name: "res", scope: !8787, file: !3, line: 4726, type: !17)
!8793 = !DILocation(line: 4724, column: 41, scope: !8787)
!8794 = !DILocation(line: 4724, column: 57, scope: !8787)
!8795 = !DILocation(line: 4724, column: 80, scope: !8787)
!8796 = !DILocation(line: 4725, column: 21, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 4725, column: 9)
!8798 = !DILocation(line: 4725, column: 9, scope: !8797)
!8799 = !DILocation(line: 4725, column: 9, scope: !8787)
!8800 = !DILocation(line: 4726, column: 42, scope: !8787)
!8801 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !8802)
!8802 = distinct !DILocation(line: 4726, column: 46, scope: !8787)
!8803 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !8802)
!8804 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !8802)
!8805 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !8802)
!8806 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !8802)
!8807 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !8802)
!8808 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !8802)
!8809 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !8802)
!8810 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !8802)
!8811 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !8802)
!8812 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !8802)
!8813 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !8802)
!8814 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !8802)
!8815 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !8802)
!8816 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !8802)
!8817 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !8802)
!8818 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !8802)
!8819 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !8802)
!8820 = !DILocation(line: 0, scope: !2343, inlinedAt: !8802)
!8821 = !DILocation(line: 4726, column: 15, scope: !8787)
!8822 = !DILocation(line: 4726, column: 9, scope: !8787)
!8823 = !DILocation(line: 4727, column: 12, scope: !8787)
!8824 = !DILocation(line: 0, scope: !8787)
!8825 = !DILocation(line: 4728, column: 1, scope: !8787)
!8826 = distinct !DISubprogram(name: "RM_GetRandomBytes", scope: !3, file: !3, line: 4738, type: !8827, isLocal: false, isDefinition: true, scopeLine: 4738, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8829)
!8827 = !DISubroutineType(types: !8828)
!8828 = !{null, !346, !157}
!8829 = !{!8830, !8831}
!8830 = !DILocalVariable(name: "dst", arg: 1, scope: !8826, file: !3, line: 4738, type: !346)
!8831 = !DILocalVariable(name: "len", arg: 2, scope: !8826, file: !3, line: 4738, type: !157)
!8832 = !DILocation(line: 4738, column: 39, scope: !8826)
!8833 = !DILocation(line: 4738, column: 51, scope: !8826)
!8834 = !DILocation(line: 4739, column: 5, scope: !8826)
!8835 = !DILocation(line: 4740, column: 1, scope: !8826)
!8836 = distinct !DISubprogram(name: "RM_GetRandomHexChars", scope: !3, file: !3, line: 4745, type: !8837, isLocal: false, isDefinition: true, scopeLine: 4745, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8839)
!8837 = !DISubroutineType(types: !8838)
!8838 = !{null, !9, !157}
!8839 = !{!8840, !8841}
!8840 = !DILocalVariable(name: "dst", arg: 1, scope: !8836, file: !3, line: 4745, type: !9)
!8841 = !DILocalVariable(name: "len", arg: 2, scope: !8836, file: !3, line: 4745, type: !157)
!8842 = !DILocation(line: 4745, column: 33, scope: !8836)
!8843 = !DILocation(line: 4745, column: 45, scope: !8836)
!8844 = !DILocation(line: 4746, column: 5, scope: !8836)
!8845 = !DILocation(line: 4747, column: 1, scope: !8836)
!8846 = distinct !DISubprogram(name: "RM_ExportSharedAPI", scope: !3, file: !3, line: 4765, type: !8847, isLocal: false, isDefinition: true, scopeLine: 4765, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8849)
!8847 = !DISubroutineType(types: !8848)
!8848 = !{!17, !584, !523, !6}
!8849 = !{!8850, !8851, !8852, !8853}
!8850 = !DILocalVariable(name: "ctx", arg: 1, scope: !8846, file: !3, line: 4765, type: !584)
!8851 = !DILocalVariable(name: "apiname", arg: 2, scope: !8846, file: !3, line: 4765, type: !523)
!8852 = !DILocalVariable(name: "func", arg: 3, scope: !8846, file: !3, line: 4765, type: !6)
!8853 = !DILocalVariable(name: "sapi", scope: !8846, file: !3, line: 4766, type: !8854)
!8854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8855, size: 64)
!8855 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleSharedAPI", file: !3, line: 66, baseType: !8856)
!8856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleSharedAPI", file: !3, line: 62, size: 128, elements: !8857)
!8857 = !{!8858, !8859}
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !8856, file: !3, line: 63, baseType: !6, size: 64)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !8856, file: !3, line: 64, baseType: !577, size: 64, offset: 64)
!8860 = !DILocation(line: 4765, column: 40, scope: !8846)
!8861 = !DILocation(line: 4765, column: 57, scope: !8846)
!8862 = !DILocation(line: 4765, column: 72, scope: !8846)
!8863 = !DILocation(line: 4766, column: 34, scope: !8846)
!8864 = !DILocation(line: 4766, column: 27, scope: !8846)
!8865 = !DILocation(line: 4767, column: 25, scope: !8846)
!8866 = !DILocation(line: 4767, column: 11, scope: !8846)
!8867 = !DILocation(line: 4767, column: 18, scope: !8846)
!8868 = !{!8869, !892, i64 8}
!8869 = !{!"RedisModuleSharedAPI", !892, i64 0, !892, i64 8}
!8870 = !DILocation(line: 4768, column: 11, scope: !8846)
!8871 = !DILocation(line: 4768, column: 16, scope: !8846)
!8872 = !{!8869, !892, i64 0}
!8873 = !DILocation(line: 4769, column: 24, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 4769, column: 9)
!8875 = !{!1045, !892, i64 192}
!8876 = !DILocation(line: 4769, column: 9, scope: !8874)
!8877 = !DILocation(line: 4769, column: 57, scope: !8874)
!8878 = !DILocation(line: 4769, column: 9, scope: !8846)
!8879 = !DILocation(line: 4770, column: 9, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 4769, column: 69)
!8881 = !DILocation(line: 4771, column: 9, scope: !8880)
!8882 = !DILocation(line: 0, scope: !8846)
!8883 = !DILocation(line: 4774, column: 1, scope: !8846)
!8884 = distinct !DISubprogram(name: "RM_GetSharedAPI", scope: !3, file: !3, line: 4809, type: !8885, isLocal: false, isDefinition: true, scopeLine: 4809, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8887)
!8885 = !DISubroutineType(types: !8886)
!8886 = !{!6, !584, !523}
!8887 = !{!8888, !8889, !8890, !8891}
!8888 = !DILocalVariable(name: "ctx", arg: 1, scope: !8884, file: !3, line: 4809, type: !584)
!8889 = !DILocalVariable(name: "apiname", arg: 2, scope: !8884, file: !3, line: 4809, type: !523)
!8890 = !DILocalVariable(name: "de", scope: !8884, file: !3, line: 4810, type: !81)
!8891 = !DILocalVariable(name: "sapi", scope: !8884, file: !3, line: 4812, type: !8854)
!8892 = !DILocation(line: 4809, column: 39, scope: !8884)
!8893 = !DILocation(line: 4809, column: 56, scope: !8884)
!8894 = !DILocation(line: 4810, column: 37, scope: !8884)
!8895 = !DILocation(line: 4810, column: 21, scope: !8884)
!8896 = !DILocation(line: 4810, column: 16, scope: !8884)
!8897 = !DILocation(line: 4811, column: 12, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8884, file: !3, line: 4811, column: 9)
!8899 = !DILocation(line: 4811, column: 9, scope: !8884)
!8900 = !DILocation(line: 4812, column: 34, scope: !8884)
!8901 = !DILocation(line: 4812, column: 27, scope: !8884)
!8902 = !DILocation(line: 4813, column: 29, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8884, file: !3, line: 4813, column: 9)
!8904 = !DILocation(line: 4813, column: 37, scope: !8903)
!8905 = !DILocation(line: 4813, column: 49, scope: !8903)
!8906 = !DILocation(line: 4813, column: 9, scope: !8903)
!8907 = !DILocation(line: 4813, column: 57, scope: !8903)
!8908 = !DILocation(line: 4813, column: 9, scope: !8884)
!8909 = !DILocation(line: 4814, column: 31, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8903, file: !3, line: 4813, column: 66)
!8911 = !DILocation(line: 4814, column: 39, scope: !8910)
!8912 = !DILocation(line: 4814, column: 51, scope: !8910)
!8913 = !DILocation(line: 4814, column: 9, scope: !8910)
!8914 = !DILocation(line: 4815, column: 30, scope: !8910)
!8915 = !DILocation(line: 4815, column: 38, scope: !8910)
!8916 = !DILocation(line: 4815, column: 50, scope: !8910)
!8917 = !DILocation(line: 4815, column: 9, scope: !8910)
!8918 = !DILocation(line: 4816, column: 5, scope: !8910)
!8919 = !DILocation(line: 4817, column: 18, scope: !8884)
!8920 = !DILocation(line: 0, scope: !8884)
!8921 = !DILocation(line: 4818, column: 1, scope: !8884)
!8922 = distinct !DISubprogram(name: "moduleUnregisterSharedAPI", scope: !3, file: !3, line: 4826, type: !8923, isLocal: false, isDefinition: true, scopeLine: 4826, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8925)
!8923 = !DISubroutineType(types: !8924)
!8924 = !{!17, !577}
!8925 = !{!8926, !8927, !8928, !8929, !8930, !8932}
!8926 = !DILocalVariable(name: "module", arg: 1, scope: !8922, file: !3, line: 4826, type: !577)
!8927 = !DILocalVariable(name: "count", scope: !8922, file: !3, line: 4827, type: !17)
!8928 = !DILocalVariable(name: "di", scope: !8922, file: !3, line: 4828, type: !744)
!8929 = !DILocalVariable(name: "de", scope: !8922, file: !3, line: 4829, type: !81)
!8930 = !DILocalVariable(name: "apiname", scope: !8931, file: !3, line: 4831, type: !523)
!8931 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 4830, column: 41)
!8932 = !DILocalVariable(name: "sapi", scope: !8931, file: !3, line: 4832, type: !8854)
!8933 = !DILocation(line: 4826, column: 44, scope: !8922)
!8934 = !DILocation(line: 4827, column: 9, scope: !8922)
!8935 = !DILocation(line: 4828, column: 51, scope: !8922)
!8936 = !DILocation(line: 4828, column: 24, scope: !8922)
!8937 = !DILocation(line: 4828, column: 19, scope: !8922)
!8938 = !DILocation(line: 4830, column: 18, scope: !8922)
!8939 = !DILocation(line: 4829, column: 16, scope: !8922)
!8940 = !DILocation(line: 4830, column: 32, scope: !8922)
!8941 = !DILocation(line: 4830, column: 5, scope: !8922)
!8942 = !DILocation(line: 4832, column: 38, scope: !8931)
!8943 = !DILocation(line: 4832, column: 31, scope: !8931)
!8944 = !DILocation(line: 4833, column: 19, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 4833, column: 13)
!8946 = !DILocation(line: 4833, column: 26, scope: !8945)
!8947 = !DILocation(line: 4833, column: 13, scope: !8931)
!8948 = !DILocation(line: 4831, column: 31, scope: !8931)
!8949 = !{!8950, !892, i64 0}
!8950 = !{!"dictEntry", !892, i64 0, !893, i64 8, !892, i64 16}
!8951 = !DILocation(line: 4831, column: 21, scope: !8931)
!8952 = !DILocation(line: 4834, column: 31, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 4833, column: 37)
!8954 = !DILocation(line: 4834, column: 13, scope: !8953)
!8955 = !DILocation(line: 4835, column: 13, scope: !8953)
!8956 = !DILocation(line: 4836, column: 18, scope: !8953)
!8957 = !DILocation(line: 4837, column: 9, scope: !8953)
!8958 = !DILocation(line: 0, scope: !8922)
!8959 = distinct !{!8959, !8941, !8960}
!8960 = !DILocation(line: 4838, column: 5, scope: !8922)
!8961 = !DILocation(line: 0, scope: !8953)
!8962 = !DILocation(line: 4839, column: 5, scope: !8922)
!8963 = !DILocation(line: 4840, column: 5, scope: !8922)
!8964 = distinct !DISubprogram(name: "moduleUnregisterUsedAPI", scope: !3, file: !3, line: 4847, type: !8923, isLocal: false, isDefinition: true, scopeLine: 4847, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8965)
!8965 = !{!8966, !8967, !8968, !8969, !8970, !8972}
!8966 = !DILocalVariable(name: "module", arg: 1, scope: !8964, file: !3, line: 4847, type: !577)
!8967 = !DILocalVariable(name: "li", scope: !8964, file: !3, line: 4848, type: !759)
!8968 = !DILocalVariable(name: "ln", scope: !8964, file: !3, line: 4849, type: !120)
!8969 = !DILocalVariable(name: "count", scope: !8964, file: !3, line: 4850, type: !17)
!8970 = !DILocalVariable(name: "used", scope: !8971, file: !3, line: 4854, type: !577)
!8971 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 4853, column: 33)
!8972 = !DILocalVariable(name: "ln", scope: !8971, file: !3, line: 4855, type: !120)
!8973 = !DILocation(line: 4847, column: 42, scope: !8964)
!8974 = !DILocation(line: 4848, column: 5, scope: !8964)
!8975 = !DILocation(line: 4850, column: 9, scope: !8964)
!8976 = !DILocation(line: 4852, column: 24, scope: !8964)
!8977 = !DILocation(line: 4848, column: 14, scope: !8964)
!8978 = !DILocation(line: 4852, column: 5, scope: !8964)
!8979 = !DILocation(line: 4853, column: 17, scope: !8964)
!8980 = !DILocation(line: 4849, column: 15, scope: !8964)
!8981 = !DILocation(line: 4853, column: 5, scope: !8964)
!8982 = !DILocation(line: 4854, column: 33, scope: !8971)
!8983 = !DILocation(line: 4854, column: 22, scope: !8971)
!8984 = !DILocation(line: 4855, column: 44, scope: !8971)
!8985 = !DILocation(line: 4855, column: 24, scope: !8971)
!8986 = !DILocation(line: 4855, column: 19, scope: !8971)
!8987 = !DILocation(line: 4856, column: 13, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 4856, column: 13)
!8989 = !DILocation(line: 4856, column: 13, scope: !8971)
!8990 = !DILocation(line: 4857, column: 33, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 4856, column: 17)
!8992 = !DILocation(line: 4857, column: 13, scope: !8991)
!8993 = !DILocation(line: 4858, column: 18, scope: !8991)
!8994 = !DILocation(line: 4859, column: 9, scope: !8991)
!8995 = !DILocation(line: 0, scope: !8964)
!8996 = distinct !{!8996, !8981, !8997}
!8997 = !DILocation(line: 4860, column: 5, scope: !8964)
!8998 = !DILocation(line: 0, scope: !8991)
!8999 = !DILocation(line: 4862, column: 1, scope: !8964)
!9000 = !DILocation(line: 4861, column: 5, scope: !8964)
!9001 = distinct !DISubprogram(name: "moduleUnregisterFilters", scope: !3, file: !3, line: 4868, type: !8923, isLocal: false, isDefinition: true, scopeLine: 4868, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9002)
!9002 = !{!9003, !9004, !9005, !9006, !9007, !9009}
!9003 = !DILocalVariable(name: "module", arg: 1, scope: !9001, file: !3, line: 4868, type: !577)
!9004 = !DILocalVariable(name: "li", scope: !9001, file: !3, line: 4869, type: !759)
!9005 = !DILocalVariable(name: "ln", scope: !9001, file: !3, line: 4870, type: !120)
!9006 = !DILocalVariable(name: "count", scope: !9001, file: !3, line: 4871, type: !17)
!9007 = !DILocalVariable(name: "filter", scope: !9008, file: !3, line: 4875, type: !5652)
!9008 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 4874, column: 33)
!9009 = !DILocalVariable(name: "ln", scope: !9008, file: !3, line: 4876, type: !120)
!9010 = !DILocation(line: 4868, column: 42, scope: !9001)
!9011 = !DILocation(line: 4869, column: 5, scope: !9001)
!9012 = !DILocation(line: 4871, column: 9, scope: !9001)
!9013 = !DILocation(line: 4873, column: 24, scope: !9001)
!9014 = !DILocation(line: 4869, column: 14, scope: !9001)
!9015 = !DILocation(line: 4873, column: 5, scope: !9001)
!9016 = !DILocation(line: 4874, column: 17, scope: !9001)
!9017 = !DILocation(line: 4870, column: 15, scope: !9001)
!9018 = !DILocation(line: 4874, column: 5, scope: !9001)
!9019 = !DILocation(line: 4875, column: 48, scope: !9008)
!9020 = !DILocation(line: 4875, column: 35, scope: !9008)
!9021 = !DILocation(line: 4876, column: 38, scope: !9008)
!9022 = !DILocation(line: 4876, column: 24, scope: !9008)
!9023 = !DILocation(line: 4876, column: 19, scope: !9008)
!9024 = !DILocation(line: 4877, column: 13, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 4877, column: 13)
!9026 = !DILocation(line: 4877, column: 13, scope: !9008)
!9027 = !DILocation(line: 4878, column: 25, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9025, file: !3, line: 4877, column: 17)
!9029 = !DILocation(line: 4878, column: 13, scope: !9028)
!9030 = !DILocation(line: 4879, column: 18, scope: !9028)
!9031 = !DILocation(line: 4880, column: 9, scope: !9028)
!9032 = !DILocation(line: 0, scope: !9001)
!9033 = !DILocation(line: 4881, column: 9, scope: !9008)
!9034 = distinct !{!9034, !9018, !9035}
!9035 = !DILocation(line: 4882, column: 5, scope: !9001)
!9036 = !DILocation(line: 0, scope: !9028)
!9037 = !DILocation(line: 4884, column: 1, scope: !9001)
!9038 = !DILocation(line: 4883, column: 5, scope: !9001)
!9039 = distinct !DISubprogram(name: "RM_RegisterCommandFilter", scope: !3, file: !3, line: 4942, type: !9040, isLocal: false, isDefinition: true, scopeLine: 4942, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9042)
!9040 = !DISubroutineType(types: !9041)
!9041 = !{!5652, !584, !5658, !17}
!9042 = !{!9043, !9044, !9045, !9046}
!9043 = !DILocalVariable(name: "ctx", arg: 1, scope: !9039, file: !3, line: 4942, type: !584)
!9044 = !DILocalVariable(name: "callback", arg: 2, scope: !9039, file: !3, line: 4942, type: !5658)
!9045 = !DILocalVariable(name: "flags", arg: 3, scope: !9039, file: !3, line: 4942, type: !17)
!9046 = !DILocalVariable(name: "filter", scope: !9039, file: !3, line: 4943, type: !5652)
!9047 = !DILocation(line: 4942, column: 68, scope: !9039)
!9048 = !DILocation(line: 4942, column: 102, scope: !9039)
!9049 = !DILocation(line: 4942, column: 116, scope: !9039)
!9050 = !DILocation(line: 4943, column: 40, scope: !9039)
!9051 = !DILocation(line: 4943, column: 31, scope: !9039)
!9052 = !DILocation(line: 4944, column: 27, scope: !9039)
!9053 = !DILocation(line: 4944, column: 20, scope: !9039)
!9054 = !DILocation(line: 4945, column: 13, scope: !9039)
!9055 = !DILocation(line: 4945, column: 22, scope: !9039)
!9056 = !DILocation(line: 4946, column: 13, scope: !9039)
!9057 = !DILocation(line: 4946, column: 19, scope: !9039)
!9058 = !DILocation(line: 4948, column: 21, scope: !9039)
!9059 = !DILocation(line: 4948, column: 5, scope: !9039)
!9060 = !DILocation(line: 4949, column: 26, scope: !9039)
!9061 = !DILocation(line: 4949, column: 34, scope: !9039)
!9062 = !DILocation(line: 4949, column: 5, scope: !9039)
!9063 = !DILocation(line: 4950, column: 5, scope: !9039)
!9064 = distinct !DISubprogram(name: "RM_UnregisterCommandFilter", scope: !3, file: !3, line: 4955, type: !9065, isLocal: false, isDefinition: true, scopeLine: 4955, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9067)
!9065 = !DISubroutineType(types: !9066)
!9066 = !{!17, !584, !5652}
!9067 = !{!9068, !9069, !9070}
!9068 = !DILocalVariable(name: "ctx", arg: 1, scope: !9064, file: !3, line: 4955, type: !584)
!9069 = !DILocalVariable(name: "filter", arg: 2, scope: !9064, file: !3, line: 4955, type: !5652)
!9070 = !DILocalVariable(name: "ln", scope: !9064, file: !3, line: 4956, type: !120)
!9071 = !DILocation(line: 4955, column: 48, scope: !9064)
!9072 = !DILocation(line: 4955, column: 79, scope: !9064)
!9073 = !DILocation(line: 4959, column: 17, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 4959, column: 9)
!9075 = !DILocation(line: 4959, column: 32, scope: !9074)
!9076 = !DILocation(line: 4959, column: 24, scope: !9074)
!9077 = !DILocation(line: 4959, column: 9, scope: !9064)
!9078 = !DILocation(line: 4961, column: 24, scope: !9064)
!9079 = !DILocation(line: 4961, column: 45, scope: !9064)
!9080 = !DILocation(line: 4961, column: 10, scope: !9064)
!9081 = !DILocation(line: 4956, column: 15, scope: !9064)
!9082 = !DILocation(line: 4962, column: 10, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 4962, column: 9)
!9084 = !DILocation(line: 4962, column: 9, scope: !9064)
!9085 = !DILocation(line: 4963, column: 17, scope: !9064)
!9086 = !DILocation(line: 4963, column: 5, scope: !9064)
!9087 = !DILocation(line: 4965, column: 29, scope: !9064)
!9088 = !DILocation(line: 4965, column: 37, scope: !9064)
!9089 = !DILocation(line: 4965, column: 10, scope: !9064)
!9090 = !DILocation(line: 4966, column: 10, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 4966, column: 9)
!9092 = !DILocation(line: 4966, column: 9, scope: !9064)
!9093 = !DILocation(line: 4967, column: 22, scope: !9064)
!9094 = !DILocation(line: 4967, column: 30, scope: !9064)
!9095 = !DILocation(line: 4967, column: 5, scope: !9064)
!9096 = !DILocation(line: 4969, column: 5, scope: !9064)
!9097 = !DILocation(line: 0, scope: !9083)
!9098 = !DILocation(line: 4970, column: 1, scope: !9064)
!9099 = distinct !DISubprogram(name: "RM_CommandFilterArgsCount", scope: !3, file: !3, line: 5003, type: !9100, isLocal: false, isDefinition: true, scopeLine: 5004, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9102)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{!17, !5662}
!9102 = !{!9103}
!9103 = !DILocalVariable(name: "fctx", arg: 1, scope: !9099, file: !3, line: 5003, type: !5662)
!9104 = !DILocation(line: 5003, column: 60, scope: !9099)
!9105 = !DILocation(line: 5005, column: 18, scope: !9099)
!9106 = !DILocation(line: 5005, column: 5, scope: !9099)
!9107 = distinct !DISubprogram(name: "RM_CommandFilterArgGet", scope: !3, file: !3, line: 5011, type: !9108, isLocal: false, isDefinition: true, scopeLine: 5012, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9110)
!9108 = !DISubroutineType(types: !9109)
!9109 = !{!2166, !5662, !17}
!9110 = !{!9111, !9112}
!9111 = !DILocalVariable(name: "fctx", arg: 1, scope: !9107, file: !3, line: 5011, type: !5662)
!9112 = !DILocalVariable(name: "pos", arg: 2, scope: !9107, file: !3, line: 5011, type: !17)
!9113 = !DILocation(line: 5011, column: 78, scope: !9107)
!9114 = !DILocation(line: 5011, column: 88, scope: !9107)
!9115 = !DILocation(line: 5013, column: 13, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9107, file: !3, line: 5013, column: 9)
!9117 = !DILocation(line: 5013, column: 17, scope: !9116)
!9118 = !DILocation(line: 5013, column: 33, scope: !9116)
!9119 = !DILocation(line: 5013, column: 24, scope: !9116)
!9120 = !DILocation(line: 5013, column: 9, scope: !9107)
!9121 = !DILocation(line: 5014, column: 18, scope: !9107)
!9122 = !DILocation(line: 5014, column: 12, scope: !9107)
!9123 = !DILocation(line: 5014, column: 5, scope: !9107)
!9124 = !DILocation(line: 0, scope: !9107)
!9125 = !DILocation(line: 5015, column: 1, scope: !9107)
!9126 = distinct !DISubprogram(name: "RM_CommandFilterArgInsert", scope: !3, file: !3, line: 5023, type: !9127, isLocal: false, isDefinition: true, scopeLine: 5024, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9129)
!9127 = !DISubroutineType(types: !9128)
!9128 = !{!17, !5662, !17, !143}
!9129 = !{!9130, !9131, !9132, !9133}
!9130 = !DILocalVariable(name: "fctx", arg: 1, scope: !9126, file: !3, line: 5023, type: !5662)
!9131 = !DILocalVariable(name: "pos", arg: 2, scope: !9126, file: !3, line: 5023, type: !17)
!9132 = !DILocalVariable(name: "arg", arg: 3, scope: !9126, file: !3, line: 5023, type: !143)
!9133 = !DILocalVariable(name: "i", scope: !9126, file: !3, line: 5025, type: !17)
!9134 = !DILocation(line: 5023, column: 60, scope: !9126)
!9135 = !DILocation(line: 5023, column: 70, scope: !9126)
!9136 = !DILocation(line: 5023, column: 94, scope: !9126)
!9137 = !DILocation(line: 5027, column: 13, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 5027, column: 9)
!9139 = !DILocation(line: 5027, column: 17, scope: !9138)
!9140 = !DILocation(line: 5027, column: 32, scope: !9138)
!9141 = !DILocation(line: 5027, column: 24, scope: !9138)
!9142 = !DILocation(line: 5027, column: 9, scope: !9126)
!9143 = !DILocation(line: 5029, column: 33, scope: !9126)
!9144 = !DILocation(line: 5029, column: 50, scope: !9126)
!9145 = !DILocation(line: 5029, column: 39, scope: !9126)
!9146 = !DILocation(line: 5029, column: 53, scope: !9126)
!9147 = !DILocation(line: 5029, column: 18, scope: !9126)
!9148 = !DILocation(line: 5029, column: 16, scope: !9126)
!9149 = !DILocation(line: 5030, column: 20, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 5030, column: 5)
!9151 = !DILocation(line: 5025, column: 9, scope: !9126)
!9152 = !DILocation(line: 5030, column: 28, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 5030, column: 5)
!9154 = !DILocation(line: 0, scope: !9126)
!9155 = !DILocation(line: 5030, column: 5, scope: !9150)
!9156 = !DILocation(line: 5033, column: 5, scope: !9126)
!9157 = !DILocation(line: 5031, column: 37, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 5030, column: 40)
!9159 = !DILocation(line: 5031, column: 25, scope: !9158)
!9160 = !DILocation(line: 5031, column: 9, scope: !9158)
!9161 = !DILocation(line: 5031, column: 23, scope: !9158)
!9162 = distinct !{!9162, !9163}
!9163 = !{!"llvm.loop.unroll.disable"}
!9164 = distinct !{!9164, !9155, !9165}
!9165 = !DILocation(line: 5032, column: 5, scope: !9150)
!9166 = !DILocation(line: 5033, column: 21, scope: !9126)
!9167 = !DILocation(line: 5034, column: 15, scope: !9126)
!9168 = !DILocation(line: 5036, column: 5, scope: !9126)
!9169 = !DILocation(line: 5037, column: 1, scope: !9126)
!9170 = distinct !DISubprogram(name: "RM_CommandFilterArgReplace", scope: !3, file: !3, line: 5045, type: !9127, isLocal: false, isDefinition: true, scopeLine: 5046, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9171)
!9171 = !{!9172, !9173, !9174}
!9172 = !DILocalVariable(name: "fctx", arg: 1, scope: !9170, file: !3, line: 5045, type: !5662)
!9173 = !DILocalVariable(name: "pos", arg: 2, scope: !9170, file: !3, line: 5045, type: !17)
!9174 = !DILocalVariable(name: "arg", arg: 3, scope: !9170, file: !3, line: 5045, type: !143)
!9175 = !DILocation(line: 5045, column: 61, scope: !9170)
!9176 = !DILocation(line: 5045, column: 71, scope: !9170)
!9177 = !DILocation(line: 5045, column: 95, scope: !9170)
!9178 = !DILocation(line: 5047, column: 13, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 5047, column: 9)
!9180 = !DILocation(line: 5047, column: 17, scope: !9179)
!9181 = !DILocation(line: 5047, column: 33, scope: !9179)
!9182 = !DILocation(line: 5047, column: 24, scope: !9179)
!9183 = !DILocation(line: 5047, column: 9, scope: !9170)
!9184 = !DILocation(line: 5049, column: 24, scope: !9170)
!9185 = !DILocation(line: 5049, column: 18, scope: !9170)
!9186 = !DILocation(line: 5049, column: 5, scope: !9170)
!9187 = !DILocation(line: 5050, column: 11, scope: !9170)
!9188 = !DILocation(line: 5050, column: 5, scope: !9170)
!9189 = !DILocation(line: 5050, column: 21, scope: !9170)
!9190 = !DILocation(line: 5052, column: 5, scope: !9170)
!9191 = !DILocation(line: 0, scope: !9170)
!9192 = !DILocation(line: 5053, column: 1, scope: !9170)
!9193 = distinct !DISubprogram(name: "RM_CommandFilterArgDelete", scope: !3, file: !3, line: 5058, type: !9194, isLocal: false, isDefinition: true, scopeLine: 5059, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9196)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!17, !5662, !17}
!9196 = !{!9197, !9198, !9199}
!9197 = !DILocalVariable(name: "fctx", arg: 1, scope: !9193, file: !3, line: 5058, type: !5662)
!9198 = !DILocalVariable(name: "pos", arg: 2, scope: !9193, file: !3, line: 5058, type: !17)
!9199 = !DILocalVariable(name: "i", scope: !9193, file: !3, line: 5060, type: !17)
!9200 = !DILocation(line: 5058, column: 60, scope: !9193)
!9201 = !DILocation(line: 5058, column: 70, scope: !9193)
!9202 = !DILocation(line: 5061, column: 13, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 5061, column: 9)
!9204 = !DILocation(line: 5061, column: 17, scope: !9203)
!9205 = !DILocation(line: 5061, column: 33, scope: !9203)
!9206 = !DILocation(line: 5061, column: 24, scope: !9203)
!9207 = !DILocation(line: 5061, column: 9, scope: !9193)
!9208 = !DILocation(line: 5063, column: 24, scope: !9193)
!9209 = !DILocation(line: 5063, column: 18, scope: !9193)
!9210 = !DILocation(line: 5063, column: 5, scope: !9193)
!9211 = !DILocation(line: 5060, column: 9, scope: !9193)
!9212 = !DILocation(line: 5064, column: 29, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 5064, column: 5)
!9214 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 5064, column: 5)
!9215 = !DILocation(line: 5064, column: 33, scope: !9213)
!9216 = !DILocation(line: 5064, column: 21, scope: !9213)
!9217 = !DILocation(line: 5064, column: 5, scope: !9214)
!9218 = !DILocation(line: 5065, column: 31, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 5064, column: 42)
!9220 = !DILocation(line: 5065, column: 37, scope: !9219)
!9221 = !DILocation(line: 5065, column: 25, scope: !9219)
!9222 = !DILocation(line: 5065, column: 9, scope: !9219)
!9223 = !DILocation(line: 5065, column: 23, scope: !9219)
!9224 = distinct !{!9224, !9163}
!9225 = distinct !{!9225, !9217, !9226}
!9226 = !DILocation(line: 5066, column: 5, scope: !9214)
!9227 = !DILocation(line: 5067, column: 15, scope: !9193)
!9228 = !DILocation(line: 5069, column: 5, scope: !9193)
!9229 = !DILocation(line: 0, scope: !9193)
!9230 = !DILocation(line: 5070, column: 1, scope: !9193)
!9231 = distinct !DISubprogram(name: "dictCStringKeyHash", scope: !3, file: !3, line: 5079, type: !55, isLocal: false, isDefinition: true, scopeLine: 5079, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9232)
!9232 = !{!9233}
!9233 = !DILocalVariable(name: "key", arg: 1, scope: !9231, file: !3, line: 5079, type: !57)
!9234 = !DILocation(line: 5079, column: 41, scope: !9231)
!9235 = !DILocation(line: 5080, column: 53, scope: !9231)
!9236 = !DILocation(line: 5080, column: 12, scope: !9231)
!9237 = !DILocation(line: 5080, column: 5, scope: !9231)
!9238 = distinct !DISubprogram(name: "dictCStringKeyCompare", scope: !3, file: !3, line: 5083, type: !66, isLocal: false, isDefinition: true, scopeLine: 5083, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9239)
!9239 = !{!9240, !9241, !9242}
!9240 = !DILocalVariable(name: "privdata", arg: 1, scope: !9238, file: !3, line: 5083, type: !6)
!9241 = !DILocalVariable(name: "key1", arg: 2, scope: !9238, file: !3, line: 5083, type: !57)
!9242 = !DILocalVariable(name: "key2", arg: 3, scope: !9238, file: !3, line: 5083, type: !57)
!9243 = !DILocation(line: 5083, column: 33, scope: !9238)
!9244 = !DILocation(line: 5083, column: 55, scope: !9238)
!9245 = !DILocation(line: 5083, column: 73, scope: !9238)
!9246 = !DILocation(line: 5085, column: 12, scope: !9238)
!9247 = !DILocation(line: 5085, column: 30, scope: !9238)
!9248 = !DILocation(line: 5085, column: 5, scope: !9238)
!9249 = distinct !DISubprogram(name: "moduleRegisterApi", scope: !3, file: !3, line: 5097, type: !9250, isLocal: false, isDefinition: true, scopeLine: 5097, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9252)
!9250 = !DISubroutineType(types: !9251)
!9251 = !{!17, !523, !6}
!9252 = !{!9253, !9254}
!9253 = !DILocalVariable(name: "funcname", arg: 1, scope: !9249, file: !3, line: 5097, type: !523)
!9254 = !DILocalVariable(name: "funcptr", arg: 2, scope: !9249, file: !3, line: 5097, type: !6)
!9255 = !DILocation(line: 5097, column: 35, scope: !9249)
!9256 = !DILocation(line: 5097, column: 51, scope: !9249)
!9257 = !DILocation(line: 5098, column: 27, scope: !9249)
!9258 = !DILocation(line: 5098, column: 12, scope: !9249)
!9259 = !DILocation(line: 5098, column: 5, scope: !9249)
!9260 = distinct !DISubprogram(name: "moduleInitModulesSystem", scope: !3, file: !3, line: 5107, type: !492, isLocal: false, isDefinition: true, scopeLine: 5107, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!9261 = !DILocation(line: 5108, column: 30, scope: !9260)
!9262 = !DILocation(line: 5108, column: 28, scope: !9260)
!9263 = !DILocation(line: 5109, column: 31, scope: !9260)
!9264 = !DILocation(line: 5109, column: 29, scope: !9260)
!9265 = !{!1045, !892, i64 200}
!9266 = !DILocation(line: 5110, column: 15, scope: !9260)
!9267 = !DILocation(line: 5110, column: 13, scope: !9260)
!9268 = !DILocation(line: 5113, column: 33, scope: !9260)
!9269 = !DILocation(line: 5113, column: 31, scope: !9260)
!9270 = !DILocation(line: 5114, column: 37, scope: !9260)
!9271 = !DILocation(line: 5114, column: 35, scope: !9260)
!9272 = !DILocation(line: 5115, column: 36, scope: !9260)
!9273 = !DILocation(line: 5115, column: 42, scope: !9260)
!9274 = !DILocation(line: 5118, column: 28, scope: !9260)
!9275 = !DILocation(line: 5118, column: 26, scope: !9260)
!9276 = !DILocation(line: 5120, column: 5, scope: !9260)
!9277 = !DILocation(line: 5121, column: 9, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 5121, column: 9)
!9279 = !DILocation(line: 5121, column: 42, scope: !9278)
!9280 = !DILocation(line: 5121, column: 9, scope: !9260)
!9281 = !DILocation(line: 5124, column: 22, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 5121, column: 49)
!9283 = !DILocation(line: 5124, column: 13, scope: !9282)
!9284 = !DILocation(line: 5122, column: 9, scope: !9282)
!9285 = !DILocation(line: 5125, column: 9, scope: !9282)
!9286 = !DILocation(line: 5129, column: 23, scope: !9260)
!9287 = !DILocation(line: 5129, column: 5, scope: !9260)
!9288 = !DILocation(line: 5130, column: 23, scope: !9260)
!9289 = !DILocation(line: 5130, column: 5, scope: !9260)
!9290 = !DILocation(line: 5133, column: 14, scope: !9260)
!9291 = !DILocation(line: 5133, column: 12, scope: !9260)
!9292 = !DILocation(line: 5137, column: 5, scope: !9260)
!9293 = !DILocation(line: 5138, column: 1, scope: !9260)
!9294 = distinct !DISubprogram(name: "moduleRegisterCoreAPI", scope: !3, file: !3, line: 5364, type: !492, isLocal: false, isDefinition: true, scopeLine: 5364, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!9295 = !DILocation(line: 5365, column: 24, scope: !9294)
!9296 = !DILocation(line: 5365, column: 22, scope: !9294)
!9297 = !DILocation(line: 5366, column: 24, scope: !9294)
!9298 = !DILocation(line: 5366, column: 22, scope: !9294)
!9299 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9300)
!9300 = distinct !DILocation(line: 5367, column: 5, scope: !9294)
!9301 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9300)
!9302 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9300)
!9303 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9300)
!9304 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9305)
!9305 = distinct !DILocation(line: 5368, column: 5, scope: !9294)
!9306 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9305)
!9307 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9305)
!9308 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9305)
!9309 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9310)
!9310 = distinct !DILocation(line: 5369, column: 5, scope: !9294)
!9311 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9310)
!9312 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9310)
!9313 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9310)
!9314 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9315)
!9315 = distinct !DILocation(line: 5370, column: 5, scope: !9294)
!9316 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9315)
!9317 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9315)
!9318 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9315)
!9319 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9320)
!9320 = distinct !DILocation(line: 5371, column: 5, scope: !9294)
!9321 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9320)
!9322 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9320)
!9323 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9320)
!9324 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9325)
!9325 = distinct !DILocation(line: 5372, column: 5, scope: !9294)
!9326 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9325)
!9327 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9325)
!9328 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9325)
!9329 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9330)
!9330 = distinct !DILocation(line: 5373, column: 5, scope: !9294)
!9331 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9330)
!9332 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9330)
!9333 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9330)
!9334 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9335)
!9335 = distinct !DILocation(line: 5374, column: 5, scope: !9294)
!9336 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9335)
!9337 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9335)
!9338 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9335)
!9339 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9340)
!9340 = distinct !DILocation(line: 5375, column: 5, scope: !9294)
!9341 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9340)
!9342 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9340)
!9343 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9340)
!9344 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9345)
!9345 = distinct !DILocation(line: 5376, column: 5, scope: !9294)
!9346 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9345)
!9347 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9345)
!9348 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9345)
!9349 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9350)
!9350 = distinct !DILocation(line: 5377, column: 5, scope: !9294)
!9351 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9350)
!9352 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9350)
!9353 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9350)
!9354 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9355)
!9355 = distinct !DILocation(line: 5378, column: 5, scope: !9294)
!9356 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9355)
!9357 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9355)
!9358 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9355)
!9359 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9360)
!9360 = distinct !DILocation(line: 5379, column: 5, scope: !9294)
!9361 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9360)
!9362 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9360)
!9363 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9360)
!9364 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9365)
!9365 = distinct !DILocation(line: 5380, column: 5, scope: !9294)
!9366 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9365)
!9367 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9365)
!9368 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9365)
!9369 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9370)
!9370 = distinct !DILocation(line: 5381, column: 5, scope: !9294)
!9371 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9370)
!9372 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9370)
!9373 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9370)
!9374 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9375)
!9375 = distinct !DILocation(line: 5382, column: 5, scope: !9294)
!9376 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9375)
!9377 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9375)
!9378 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9375)
!9379 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9380)
!9380 = distinct !DILocation(line: 5383, column: 5, scope: !9294)
!9381 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9380)
!9382 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9380)
!9383 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9380)
!9384 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9385)
!9385 = distinct !DILocation(line: 5384, column: 5, scope: !9294)
!9386 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9385)
!9387 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9385)
!9388 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9385)
!9389 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9390)
!9390 = distinct !DILocation(line: 5385, column: 5, scope: !9294)
!9391 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9390)
!9392 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9390)
!9393 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9390)
!9394 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9395)
!9395 = distinct !DILocation(line: 5386, column: 5, scope: !9294)
!9396 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9395)
!9397 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9395)
!9398 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9395)
!9399 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9400)
!9400 = distinct !DILocation(line: 5387, column: 5, scope: !9294)
!9401 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9400)
!9402 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9400)
!9403 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9400)
!9404 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9405)
!9405 = distinct !DILocation(line: 5388, column: 5, scope: !9294)
!9406 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9405)
!9407 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9405)
!9408 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9405)
!9409 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9410)
!9410 = distinct !DILocation(line: 5389, column: 5, scope: !9294)
!9411 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9410)
!9412 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9410)
!9413 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9410)
!9414 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9415)
!9415 = distinct !DILocation(line: 5390, column: 5, scope: !9294)
!9416 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9415)
!9417 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9415)
!9418 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9415)
!9419 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9420)
!9420 = distinct !DILocation(line: 5391, column: 5, scope: !9294)
!9421 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9420)
!9422 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9420)
!9423 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9420)
!9424 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9425)
!9425 = distinct !DILocation(line: 5392, column: 5, scope: !9294)
!9426 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9425)
!9427 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9425)
!9428 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9425)
!9429 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9430)
!9430 = distinct !DILocation(line: 5393, column: 5, scope: !9294)
!9431 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9430)
!9432 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9430)
!9433 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9430)
!9434 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9435)
!9435 = distinct !DILocation(line: 5394, column: 5, scope: !9294)
!9436 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9435)
!9437 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9435)
!9438 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9435)
!9439 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9440)
!9440 = distinct !DILocation(line: 5395, column: 5, scope: !9294)
!9441 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9440)
!9442 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9440)
!9443 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9440)
!9444 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9445)
!9445 = distinct !DILocation(line: 5396, column: 5, scope: !9294)
!9446 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9445)
!9447 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9445)
!9448 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9445)
!9449 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 5397, column: 5, scope: !9294)
!9451 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9450)
!9452 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9450)
!9453 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9450)
!9454 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9455)
!9455 = distinct !DILocation(line: 5398, column: 5, scope: !9294)
!9456 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9455)
!9457 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9455)
!9458 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9455)
!9459 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9460)
!9460 = distinct !DILocation(line: 5399, column: 5, scope: !9294)
!9461 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9460)
!9462 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9460)
!9463 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9460)
!9464 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9465)
!9465 = distinct !DILocation(line: 5400, column: 5, scope: !9294)
!9466 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9465)
!9467 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9465)
!9468 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9465)
!9469 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9470)
!9470 = distinct !DILocation(line: 5401, column: 5, scope: !9294)
!9471 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9470)
!9472 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9470)
!9473 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9470)
!9474 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9475)
!9475 = distinct !DILocation(line: 5402, column: 5, scope: !9294)
!9476 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9475)
!9477 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9475)
!9478 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9475)
!9479 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9480)
!9480 = distinct !DILocation(line: 5403, column: 5, scope: !9294)
!9481 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9480)
!9482 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9480)
!9483 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9480)
!9484 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9485)
!9485 = distinct !DILocation(line: 5404, column: 5, scope: !9294)
!9486 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9485)
!9487 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9485)
!9488 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9485)
!9489 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9490)
!9490 = distinct !DILocation(line: 5405, column: 5, scope: !9294)
!9491 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9490)
!9492 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9490)
!9493 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9490)
!9494 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9495)
!9495 = distinct !DILocation(line: 5406, column: 5, scope: !9294)
!9496 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9495)
!9497 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9495)
!9498 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9495)
!9499 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9500)
!9500 = distinct !DILocation(line: 5407, column: 5, scope: !9294)
!9501 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9500)
!9502 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9500)
!9503 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9500)
!9504 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9505)
!9505 = distinct !DILocation(line: 5408, column: 5, scope: !9294)
!9506 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9505)
!9507 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9505)
!9508 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9505)
!9509 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9510)
!9510 = distinct !DILocation(line: 5409, column: 5, scope: !9294)
!9511 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9510)
!9512 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9510)
!9513 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9510)
!9514 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9515)
!9515 = distinct !DILocation(line: 5410, column: 5, scope: !9294)
!9516 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9515)
!9517 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9515)
!9518 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9515)
!9519 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9520)
!9520 = distinct !DILocation(line: 5411, column: 5, scope: !9294)
!9521 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9520)
!9522 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9520)
!9523 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9520)
!9524 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9525)
!9525 = distinct !DILocation(line: 5412, column: 5, scope: !9294)
!9526 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9525)
!9527 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9525)
!9528 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9525)
!9529 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9530)
!9530 = distinct !DILocation(line: 5413, column: 5, scope: !9294)
!9531 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9530)
!9532 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9530)
!9533 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9530)
!9534 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9535)
!9535 = distinct !DILocation(line: 5414, column: 5, scope: !9294)
!9536 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9535)
!9537 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9535)
!9538 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9535)
!9539 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9540)
!9540 = distinct !DILocation(line: 5415, column: 5, scope: !9294)
!9541 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9540)
!9542 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9540)
!9543 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9540)
!9544 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9545)
!9545 = distinct !DILocation(line: 5416, column: 5, scope: !9294)
!9546 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9545)
!9547 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9545)
!9548 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9545)
!9549 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9550)
!9550 = distinct !DILocation(line: 5417, column: 5, scope: !9294)
!9551 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9550)
!9552 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9550)
!9553 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9550)
!9554 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9555)
!9555 = distinct !DILocation(line: 5418, column: 5, scope: !9294)
!9556 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9555)
!9557 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9555)
!9558 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9555)
!9559 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9560)
!9560 = distinct !DILocation(line: 5419, column: 5, scope: !9294)
!9561 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9560)
!9562 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9560)
!9563 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9560)
!9564 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9565)
!9565 = distinct !DILocation(line: 5420, column: 5, scope: !9294)
!9566 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9565)
!9567 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9565)
!9568 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9565)
!9569 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9570)
!9570 = distinct !DILocation(line: 5421, column: 5, scope: !9294)
!9571 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9570)
!9572 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9570)
!9573 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9570)
!9574 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9575)
!9575 = distinct !DILocation(line: 5422, column: 5, scope: !9294)
!9576 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9575)
!9577 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9575)
!9578 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9575)
!9579 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9580)
!9580 = distinct !DILocation(line: 5423, column: 5, scope: !9294)
!9581 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9580)
!9582 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9580)
!9583 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9580)
!9584 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9585)
!9585 = distinct !DILocation(line: 5424, column: 5, scope: !9294)
!9586 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9585)
!9587 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9585)
!9588 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9585)
!9589 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9590)
!9590 = distinct !DILocation(line: 5425, column: 5, scope: !9294)
!9591 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9590)
!9592 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9590)
!9593 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9590)
!9594 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9595)
!9595 = distinct !DILocation(line: 5426, column: 5, scope: !9294)
!9596 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9595)
!9597 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9595)
!9598 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9595)
!9599 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9600)
!9600 = distinct !DILocation(line: 5427, column: 5, scope: !9294)
!9601 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9600)
!9602 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9600)
!9603 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9600)
!9604 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9605)
!9605 = distinct !DILocation(line: 5428, column: 5, scope: !9294)
!9606 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9605)
!9607 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9605)
!9608 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9605)
!9609 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9610)
!9610 = distinct !DILocation(line: 5429, column: 5, scope: !9294)
!9611 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9610)
!9612 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9610)
!9613 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9610)
!9614 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9615)
!9615 = distinct !DILocation(line: 5430, column: 5, scope: !9294)
!9616 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9615)
!9617 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9615)
!9618 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9615)
!9619 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9620)
!9620 = distinct !DILocation(line: 5431, column: 5, scope: !9294)
!9621 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9620)
!9622 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9620)
!9623 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9620)
!9624 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9625)
!9625 = distinct !DILocation(line: 5432, column: 5, scope: !9294)
!9626 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9625)
!9627 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9625)
!9628 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9625)
!9629 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9630)
!9630 = distinct !DILocation(line: 5433, column: 5, scope: !9294)
!9631 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9630)
!9632 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9630)
!9633 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9630)
!9634 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9635)
!9635 = distinct !DILocation(line: 5434, column: 5, scope: !9294)
!9636 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9635)
!9637 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9635)
!9638 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9635)
!9639 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9640)
!9640 = distinct !DILocation(line: 5435, column: 5, scope: !9294)
!9641 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9640)
!9642 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9640)
!9643 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9640)
!9644 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9645)
!9645 = distinct !DILocation(line: 5436, column: 5, scope: !9294)
!9646 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9645)
!9647 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9645)
!9648 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9645)
!9649 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9650)
!9650 = distinct !DILocation(line: 5437, column: 5, scope: !9294)
!9651 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9650)
!9652 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9650)
!9653 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9650)
!9654 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9655)
!9655 = distinct !DILocation(line: 5438, column: 5, scope: !9294)
!9656 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9655)
!9657 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9655)
!9658 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9655)
!9659 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9660)
!9660 = distinct !DILocation(line: 5439, column: 5, scope: !9294)
!9661 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9660)
!9662 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9660)
!9663 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9660)
!9664 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9665)
!9665 = distinct !DILocation(line: 5440, column: 5, scope: !9294)
!9666 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9665)
!9667 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9665)
!9668 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9665)
!9669 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 5441, column: 5, scope: !9294)
!9671 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9670)
!9672 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9670)
!9673 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9670)
!9674 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9675)
!9675 = distinct !DILocation(line: 5442, column: 5, scope: !9294)
!9676 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9675)
!9677 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9675)
!9678 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9675)
!9679 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9680)
!9680 = distinct !DILocation(line: 5443, column: 5, scope: !9294)
!9681 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9680)
!9682 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9680)
!9683 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9680)
!9684 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9685)
!9685 = distinct !DILocation(line: 5444, column: 5, scope: !9294)
!9686 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9685)
!9687 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9685)
!9688 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9685)
!9689 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9690)
!9690 = distinct !DILocation(line: 5445, column: 5, scope: !9294)
!9691 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9690)
!9692 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9690)
!9693 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9690)
!9694 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9695)
!9695 = distinct !DILocation(line: 5446, column: 5, scope: !9294)
!9696 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9695)
!9697 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9695)
!9698 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9695)
!9699 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9700)
!9700 = distinct !DILocation(line: 5447, column: 5, scope: !9294)
!9701 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9700)
!9702 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9700)
!9703 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9700)
!9704 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9705)
!9705 = distinct !DILocation(line: 5448, column: 5, scope: !9294)
!9706 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9705)
!9707 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9705)
!9708 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9705)
!9709 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9710)
!9710 = distinct !DILocation(line: 5449, column: 5, scope: !9294)
!9711 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9710)
!9712 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9710)
!9713 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9710)
!9714 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9715)
!9715 = distinct !DILocation(line: 5450, column: 5, scope: !9294)
!9716 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9715)
!9717 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9715)
!9718 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9715)
!9719 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9720)
!9720 = distinct !DILocation(line: 5451, column: 5, scope: !9294)
!9721 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9720)
!9722 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9720)
!9723 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9720)
!9724 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9725)
!9725 = distinct !DILocation(line: 5452, column: 5, scope: !9294)
!9726 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9725)
!9727 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9725)
!9728 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9725)
!9729 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9730)
!9730 = distinct !DILocation(line: 5453, column: 5, scope: !9294)
!9731 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9730)
!9732 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9730)
!9733 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9730)
!9734 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9735)
!9735 = distinct !DILocation(line: 5454, column: 5, scope: !9294)
!9736 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9735)
!9737 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9735)
!9738 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9735)
!9739 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9740)
!9740 = distinct !DILocation(line: 5455, column: 5, scope: !9294)
!9741 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9740)
!9742 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9740)
!9743 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9740)
!9744 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9745)
!9745 = distinct !DILocation(line: 5456, column: 5, scope: !9294)
!9746 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9745)
!9747 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9745)
!9748 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9745)
!9749 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9750)
!9750 = distinct !DILocation(line: 5457, column: 5, scope: !9294)
!9751 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9750)
!9752 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9750)
!9753 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9750)
!9754 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9755)
!9755 = distinct !DILocation(line: 5458, column: 5, scope: !9294)
!9756 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9755)
!9757 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9755)
!9758 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9755)
!9759 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9760)
!9760 = distinct !DILocation(line: 5459, column: 5, scope: !9294)
!9761 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9760)
!9762 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9760)
!9763 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9760)
!9764 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9765)
!9765 = distinct !DILocation(line: 5460, column: 5, scope: !9294)
!9766 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9765)
!9767 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9765)
!9768 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9765)
!9769 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9770)
!9770 = distinct !DILocation(line: 5461, column: 5, scope: !9294)
!9771 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9770)
!9772 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9770)
!9773 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9770)
!9774 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9775)
!9775 = distinct !DILocation(line: 5462, column: 5, scope: !9294)
!9776 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9775)
!9777 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9775)
!9778 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9775)
!9779 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9780)
!9780 = distinct !DILocation(line: 5463, column: 5, scope: !9294)
!9781 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9780)
!9782 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9780)
!9783 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9780)
!9784 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9785)
!9785 = distinct !DILocation(line: 5464, column: 5, scope: !9294)
!9786 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9785)
!9787 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9785)
!9788 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9785)
!9789 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9790)
!9790 = distinct !DILocation(line: 5465, column: 5, scope: !9294)
!9791 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9790)
!9792 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9790)
!9793 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9790)
!9794 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9795)
!9795 = distinct !DILocation(line: 5466, column: 5, scope: !9294)
!9796 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9795)
!9797 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9795)
!9798 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9795)
!9799 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9800)
!9800 = distinct !DILocation(line: 5467, column: 5, scope: !9294)
!9801 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9800)
!9802 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9800)
!9803 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9800)
!9804 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9805)
!9805 = distinct !DILocation(line: 5468, column: 5, scope: !9294)
!9806 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9805)
!9807 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9805)
!9808 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9805)
!9809 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9810)
!9810 = distinct !DILocation(line: 5469, column: 5, scope: !9294)
!9811 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9810)
!9812 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9810)
!9813 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9810)
!9814 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9815)
!9815 = distinct !DILocation(line: 5470, column: 5, scope: !9294)
!9816 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9815)
!9817 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9815)
!9818 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9815)
!9819 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9820)
!9820 = distinct !DILocation(line: 5471, column: 5, scope: !9294)
!9821 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9820)
!9822 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9820)
!9823 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9820)
!9824 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9825)
!9825 = distinct !DILocation(line: 5472, column: 5, scope: !9294)
!9826 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9825)
!9827 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9825)
!9828 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9825)
!9829 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9830)
!9830 = distinct !DILocation(line: 5473, column: 5, scope: !9294)
!9831 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9830)
!9832 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9830)
!9833 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9830)
!9834 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9835)
!9835 = distinct !DILocation(line: 5474, column: 5, scope: !9294)
!9836 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9835)
!9837 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9835)
!9838 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9835)
!9839 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9840)
!9840 = distinct !DILocation(line: 5475, column: 5, scope: !9294)
!9841 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9840)
!9842 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9840)
!9843 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9840)
!9844 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9845)
!9845 = distinct !DILocation(line: 5476, column: 5, scope: !9294)
!9846 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9845)
!9847 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9845)
!9848 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9845)
!9849 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9850)
!9850 = distinct !DILocation(line: 5477, column: 5, scope: !9294)
!9851 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9850)
!9852 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9850)
!9853 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9850)
!9854 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9855)
!9855 = distinct !DILocation(line: 5478, column: 5, scope: !9294)
!9856 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9855)
!9857 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9855)
!9858 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9855)
!9859 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9860)
!9860 = distinct !DILocation(line: 5479, column: 5, scope: !9294)
!9861 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9860)
!9862 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9860)
!9863 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9860)
!9864 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9865)
!9865 = distinct !DILocation(line: 5480, column: 5, scope: !9294)
!9866 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9865)
!9867 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9865)
!9868 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9865)
!9869 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9870)
!9870 = distinct !DILocation(line: 5481, column: 5, scope: !9294)
!9871 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9870)
!9872 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9870)
!9873 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9870)
!9874 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9875)
!9875 = distinct !DILocation(line: 5482, column: 5, scope: !9294)
!9876 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9875)
!9877 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9875)
!9878 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9875)
!9879 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9880)
!9880 = distinct !DILocation(line: 5483, column: 5, scope: !9294)
!9881 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9880)
!9882 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9880)
!9883 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9880)
!9884 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9885)
!9885 = distinct !DILocation(line: 5484, column: 5, scope: !9294)
!9886 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9885)
!9887 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9885)
!9888 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9885)
!9889 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9890)
!9890 = distinct !DILocation(line: 5485, column: 5, scope: !9294)
!9891 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9890)
!9892 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9890)
!9893 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9890)
!9894 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9895)
!9895 = distinct !DILocation(line: 5486, column: 5, scope: !9294)
!9896 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9895)
!9897 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9895)
!9898 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9895)
!9899 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9900)
!9900 = distinct !DILocation(line: 5487, column: 5, scope: !9294)
!9901 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9900)
!9902 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9900)
!9903 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9900)
!9904 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9905)
!9905 = distinct !DILocation(line: 5488, column: 5, scope: !9294)
!9906 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9905)
!9907 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9905)
!9908 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9905)
!9909 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9910)
!9910 = distinct !DILocation(line: 5489, column: 5, scope: !9294)
!9911 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9910)
!9912 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9910)
!9913 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9910)
!9914 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9915)
!9915 = distinct !DILocation(line: 5490, column: 5, scope: !9294)
!9916 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9915)
!9917 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9915)
!9918 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9915)
!9919 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9920)
!9920 = distinct !DILocation(line: 5491, column: 5, scope: !9294)
!9921 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9920)
!9922 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9920)
!9923 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9920)
!9924 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9925)
!9925 = distinct !DILocation(line: 5492, column: 5, scope: !9294)
!9926 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9925)
!9927 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9925)
!9928 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9925)
!9929 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9930)
!9930 = distinct !DILocation(line: 5493, column: 5, scope: !9294)
!9931 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9930)
!9932 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9930)
!9933 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9930)
!9934 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9935)
!9935 = distinct !DILocation(line: 5494, column: 5, scope: !9294)
!9936 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9935)
!9937 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9935)
!9938 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9935)
!9939 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9940)
!9940 = distinct !DILocation(line: 5495, column: 5, scope: !9294)
!9941 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9940)
!9942 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9940)
!9943 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9940)
!9944 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9945)
!9945 = distinct !DILocation(line: 5496, column: 5, scope: !9294)
!9946 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9945)
!9947 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9945)
!9948 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9945)
!9949 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9950)
!9950 = distinct !DILocation(line: 5497, column: 5, scope: !9294)
!9951 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9950)
!9952 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9950)
!9953 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9950)
!9954 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9955)
!9955 = distinct !DILocation(line: 5498, column: 5, scope: !9294)
!9956 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9955)
!9957 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9955)
!9958 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9955)
!9959 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9960)
!9960 = distinct !DILocation(line: 5499, column: 5, scope: !9294)
!9961 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9960)
!9962 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9960)
!9963 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9960)
!9964 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9965)
!9965 = distinct !DILocation(line: 5500, column: 5, scope: !9294)
!9966 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9965)
!9967 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9965)
!9968 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9965)
!9969 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9970)
!9970 = distinct !DILocation(line: 5501, column: 5, scope: !9294)
!9971 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9970)
!9972 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9970)
!9973 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9970)
!9974 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9975)
!9975 = distinct !DILocation(line: 5502, column: 5, scope: !9294)
!9976 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9975)
!9977 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9975)
!9978 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9975)
!9979 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9980)
!9980 = distinct !DILocation(line: 5503, column: 5, scope: !9294)
!9981 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9980)
!9982 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9980)
!9983 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9980)
!9984 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9985)
!9985 = distinct !DILocation(line: 5504, column: 5, scope: !9294)
!9986 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9985)
!9987 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9985)
!9988 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9985)
!9989 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9990)
!9990 = distinct !DILocation(line: 5505, column: 5, scope: !9294)
!9991 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9990)
!9992 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9990)
!9993 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9990)
!9994 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !9995)
!9995 = distinct !DILocation(line: 5506, column: 5, scope: !9294)
!9996 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !9995)
!9997 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !9995)
!9998 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !9995)
!9999 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10000)
!10000 = distinct !DILocation(line: 5507, column: 5, scope: !9294)
!10001 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10000)
!10002 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10000)
!10003 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10000)
!10004 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10005)
!10005 = distinct !DILocation(line: 5508, column: 5, scope: !9294)
!10006 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10005)
!10007 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10005)
!10008 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10005)
!10009 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10010)
!10010 = distinct !DILocation(line: 5509, column: 5, scope: !9294)
!10011 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10010)
!10012 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10010)
!10013 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10010)
!10014 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10015)
!10015 = distinct !DILocation(line: 5510, column: 5, scope: !9294)
!10016 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10015)
!10017 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10015)
!10018 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10015)
!10019 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10020)
!10020 = distinct !DILocation(line: 5511, column: 5, scope: !9294)
!10021 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10020)
!10022 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10020)
!10023 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10020)
!10024 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10025)
!10025 = distinct !DILocation(line: 5512, column: 5, scope: !9294)
!10026 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10025)
!10027 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10025)
!10028 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10025)
!10029 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10030)
!10030 = distinct !DILocation(line: 5513, column: 5, scope: !9294)
!10031 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10030)
!10032 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10030)
!10033 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10030)
!10034 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10035)
!10035 = distinct !DILocation(line: 5514, column: 5, scope: !9294)
!10036 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10035)
!10037 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10035)
!10038 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10035)
!10039 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10040)
!10040 = distinct !DILocation(line: 5515, column: 5, scope: !9294)
!10041 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10040)
!10042 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10040)
!10043 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10040)
!10044 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10045)
!10045 = distinct !DILocation(line: 5516, column: 5, scope: !9294)
!10046 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10045)
!10047 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10045)
!10048 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10045)
!10049 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10050)
!10050 = distinct !DILocation(line: 5517, column: 5, scope: !9294)
!10051 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10050)
!10052 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10050)
!10053 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10050)
!10054 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10055)
!10055 = distinct !DILocation(line: 5518, column: 5, scope: !9294)
!10056 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10055)
!10057 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10055)
!10058 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10055)
!10059 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10060)
!10060 = distinct !DILocation(line: 5519, column: 5, scope: !9294)
!10061 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10060)
!10062 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10060)
!10063 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10060)
!10064 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10065)
!10065 = distinct !DILocation(line: 5520, column: 5, scope: !9294)
!10066 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10065)
!10067 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10065)
!10068 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10065)
!10069 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10070)
!10070 = distinct !DILocation(line: 5521, column: 5, scope: !9294)
!10071 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10070)
!10072 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10070)
!10073 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10070)
!10074 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10075)
!10075 = distinct !DILocation(line: 5522, column: 5, scope: !9294)
!10076 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10075)
!10077 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10075)
!10078 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10075)
!10079 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10080)
!10080 = distinct !DILocation(line: 5523, column: 5, scope: !9294)
!10081 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10080)
!10082 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10080)
!10083 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10080)
!10084 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10085)
!10085 = distinct !DILocation(line: 5524, column: 5, scope: !9294)
!10086 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10085)
!10087 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10085)
!10088 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10085)
!10089 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10090)
!10090 = distinct !DILocation(line: 5525, column: 5, scope: !9294)
!10091 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10090)
!10092 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10090)
!10093 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10090)
!10094 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10095)
!10095 = distinct !DILocation(line: 5526, column: 5, scope: !9294)
!10096 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10095)
!10097 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10095)
!10098 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10095)
!10099 = !DILocation(line: 5097, column: 35, scope: !9249, inlinedAt: !10100)
!10100 = distinct !DILocation(line: 5527, column: 5, scope: !9294)
!10101 = !DILocation(line: 5097, column: 51, scope: !9249, inlinedAt: !10100)
!10102 = !DILocation(line: 5098, column: 27, scope: !9249, inlinedAt: !10100)
!10103 = !DILocation(line: 5098, column: 12, scope: !9249, inlinedAt: !10100)
!10104 = !DILocation(line: 5528, column: 1, scope: !9294)
!10105 = distinct !DISubprogram(name: "moduleLoadFromQueue", scope: !3, file: !3, line: 5149, type: !492, isLocal: false, isDefinition: true, scopeLine: 5149, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10106)
!10106 = !{!10107, !10108, !10109}
!10107 = !DILocalVariable(name: "li", scope: !10105, file: !3, line: 5150, type: !759)
!10108 = !DILocalVariable(name: "ln", scope: !10105, file: !3, line: 5151, type: !120)
!10109 = !DILocalVariable(name: "loadmod", scope: !10110, file: !3, line: 5155, type: !10111)
!10110 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 5154, column: 33)
!10111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10112, size: 64)
!10112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moduleLoadQueueEntry", file: !13, line: 787, size: 192, elements: !10113)
!10113 = !{!10114, !10115, !10116}
!10114 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !10112, file: !13, line: 788, baseType: !154, size: 64)
!10115 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !10112, file: !13, line: 789, baseType: !17, size: 32, offset: 64)
!10116 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !10112, file: !13, line: 790, baseType: !165, size: 64, offset: 128)
!10117 = !DILocation(line: 5150, column: 5, scope: !10105)
!10118 = !DILocation(line: 5153, column: 23, scope: !10105)
!10119 = !DILocation(line: 5150, column: 14, scope: !10105)
!10120 = !DILocation(line: 5153, column: 5, scope: !10105)
!10121 = !DILocation(line: 5154, column: 5, scope: !10105)
!10122 = !DILocation(line: 5154, column: 17, scope: !10105)
!10123 = !DILocation(line: 5151, column: 15, scope: !10105)
!10124 = !DILocation(line: 5155, column: 52, scope: !10110)
!10125 = !DILocation(line: 5155, column: 38, scope: !10110)
!10126 = !DILocation(line: 5156, column: 33, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 5156, column: 13)
!10128 = !{!10129, !892, i64 0}
!10129 = !{!"moduleLoadQueueEntry", !892, i64 0, !895, i64 8, !892, i64 16}
!10130 = !DILocation(line: 5156, column: 56, scope: !10127)
!10131 = !{!10129, !892, i64 16}
!10132 = !DILocation(line: 5156, column: 70, scope: !10127)
!10133 = !{!10129, !895, i64 8}
!10134 = !DILocation(line: 5156, column: 13, scope: !10127)
!10135 = !DILocation(line: 5157, column: 13, scope: !10127)
!10136 = !DILocation(line: 5156, column: 13, scope: !10110)
!10137 = distinct !{!10137, !10121, !10138}
!10138 = !DILocation(line: 5164, column: 5, scope: !10105)
!10139 = !DILocation(line: 5161, column: 26, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 5158, column: 9)
!10141 = !DILocation(line: 5159, column: 13, scope: !10140)
!10142 = !DILocation(line: 5162, column: 13, scope: !10140)
!10143 = !DILocation(line: 5165, column: 1, scope: !10105)
!10144 = distinct !DISubprogram(name: "moduleLoad", scope: !3, file: !3, line: 5198, type: !10145, isLocal: false, isDefinition: true, scopeLine: 5198, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10147)
!10145 = !DISubroutineType(types: !10146)
!10146 = !{!17, !523, !8, !17}
!10147 = !{!10148, !10149, !10150, !10151, !10152, !10153}
!10148 = !DILocalVariable(name: "path", arg: 1, scope: !10144, file: !3, line: 5198, type: !523)
!10149 = !DILocalVariable(name: "module_argv", arg: 2, scope: !10144, file: !3, line: 5198, type: !8)
!10150 = !DILocalVariable(name: "module_argc", arg: 3, scope: !10144, file: !3, line: 5198, type: !17)
!10151 = !DILocalVariable(name: "onload", scope: !10144, file: !3, line: 5199, type: !696)
!10152 = !DILocalVariable(name: "handle", scope: !10144, file: !3, line: 5200, type: !6)
!10153 = !DILocalVariable(name: "ctx", scope: !10144, file: !3, line: 5201, type: !585)
!10154 = !DILocation(line: 5198, column: 28, scope: !10144)
!10155 = !DILocation(line: 5198, column: 41, scope: !10144)
!10156 = !DILocation(line: 5198, column: 58, scope: !10144)
!10157 = !DILocation(line: 5201, column: 5, scope: !10144)
!10158 = !DILocation(line: 5201, column: 20, scope: !10144)
!10159 = !DILocation(line: 5203, column: 14, scope: !10144)
!10160 = !DILocation(line: 5200, column: 11, scope: !10144)
!10161 = !DILocation(line: 5204, column: 16, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 5204, column: 9)
!10163 = !DILocation(line: 5204, column: 9, scope: !10144)
!10164 = !DILocation(line: 5205, column: 69, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10162, file: !3, line: 5204, column: 25)
!10166 = !DILocation(line: 5205, column: 9, scope: !10165)
!10167 = !DILocation(line: 5206, column: 9, scope: !10165)
!10168 = !DILocation(line: 5208, column: 61, scope: !10144)
!10169 = !DILocation(line: 5209, column: 16, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 5209, column: 9)
!10171 = !DILocation(line: 5209, column: 9, scope: !10144)
!10172 = !DILocation(line: 5210, column: 9, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 5209, column: 25)
!10174 = !DILocation(line: 5211, column: 9, scope: !10173)
!10175 = !DILocation(line: 5214, column: 9, scope: !10173)
!10176 = !DILocation(line: 5208, column: 14, scope: !10144)
!10177 = !DILocation(line: 5199, column: 11, scope: !10144)
!10178 = !DILocation(line: 5216, column: 9, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 5216, column: 9)
!10180 = !DILocation(line: 5216, column: 53, scope: !10179)
!10181 = !DILocation(line: 5216, column: 9, scope: !10144)
!10182 = !DILocation(line: 5217, column: 17, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 5217, column: 13)
!10184 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 5216, column: 73)
!10185 = !DILocation(line: 5217, column: 13, scope: !10183)
!10186 = !DILocation(line: 5217, column: 13, scope: !10184)
!10187 = !DILocation(line: 5218, column: 13, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10183, file: !3, line: 5217, column: 25)
!10189 = !DILocation(line: 5219, column: 43, scope: !10188)
!10190 = !DILocation(line: 5219, column: 13, scope: !10188)
!10191 = !DILocation(line: 5220, column: 41, scope: !10188)
!10192 = !DILocation(line: 4847, column: 42, scope: !8964, inlinedAt: !10193)
!10193 = distinct !DILocation(line: 5220, column: 13, scope: !10188)
!10194 = !DILocation(line: 4848, column: 5, scope: !8964, inlinedAt: !10193)
!10195 = !DILocation(line: 4850, column: 9, scope: !8964, inlinedAt: !10193)
!10196 = !DILocation(line: 4852, column: 24, scope: !8964, inlinedAt: !10193)
!10197 = !DILocation(line: 4848, column: 14, scope: !8964, inlinedAt: !10193)
!10198 = !DILocation(line: 4852, column: 5, scope: !8964, inlinedAt: !10193)
!10199 = !DILocation(line: 4853, column: 17, scope: !8964, inlinedAt: !10193)
!10200 = !DILocation(line: 4849, column: 15, scope: !8964, inlinedAt: !10193)
!10201 = !DILocation(line: 4853, column: 5, scope: !8964, inlinedAt: !10193)
!10202 = !DILocation(line: 4854, column: 33, scope: !8971, inlinedAt: !10193)
!10203 = !DILocation(line: 4854, column: 22, scope: !8971, inlinedAt: !10193)
!10204 = !DILocation(line: 4855, column: 44, scope: !8971, inlinedAt: !10193)
!10205 = !DILocation(line: 4855, column: 24, scope: !8971, inlinedAt: !10193)
!10206 = !DILocation(line: 4855, column: 19, scope: !8971, inlinedAt: !10193)
!10207 = !DILocation(line: 4856, column: 13, scope: !8988, inlinedAt: !10193)
!10208 = !DILocation(line: 4856, column: 13, scope: !8971, inlinedAt: !10193)
!10209 = !DILocation(line: 4857, column: 33, scope: !8991, inlinedAt: !10193)
!10210 = !DILocation(line: 4857, column: 13, scope: !8991, inlinedAt: !10193)
!10211 = !DILocation(line: 4859, column: 9, scope: !8991, inlinedAt: !10193)
!10212 = !DILocation(line: 4862, column: 1, scope: !8964, inlinedAt: !10193)
!10213 = !DILocation(line: 5221, column: 43, scope: !10188)
!10214 = !DILocalVariable(name: "module", arg: 1, scope: !10215, file: !3, line: 5167, type: !273)
!10215 = distinct !DISubprogram(name: "moduleFreeModuleStructure", scope: !3, file: !3, line: 5167, type: !10216, isLocal: false, isDefinition: true, scopeLine: 5167, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10218)
!10216 = !DISubroutineType(types: !10217)
!10217 = !{null, !273}
!10218 = !{!10214}
!10219 = !DILocation(line: 5167, column: 52, scope: !10215, inlinedAt: !10220)
!10220 = distinct !DILocation(line: 5221, column: 13, scope: !10188)
!10221 = !DILocation(line: 5168, column: 25, scope: !10215, inlinedAt: !10220)
!10222 = !DILocation(line: 5168, column: 5, scope: !10215, inlinedAt: !10220)
!10223 = !DILocation(line: 5169, column: 25, scope: !10215, inlinedAt: !10220)
!10224 = !DILocation(line: 5169, column: 5, scope: !10215, inlinedAt: !10220)
!10225 = !DILocation(line: 5170, column: 21, scope: !10215, inlinedAt: !10220)
!10226 = !DILocation(line: 5170, column: 5, scope: !10215, inlinedAt: !10220)
!10227 = !DILocation(line: 5171, column: 11, scope: !10215, inlinedAt: !10220)
!10228 = !DILocation(line: 5171, column: 5, scope: !10215, inlinedAt: !10220)
!10229 = !DILocation(line: 5222, column: 9, scope: !10188)
!10230 = !DILocation(line: 5223, column: 9, scope: !10184)
!10231 = !DILocation(line: 5224, column: 9, scope: !10184)
!10232 = !DILocation(line: 5226, column: 9, scope: !10184)
!10233 = !DILocation(line: 5230, column: 13, scope: !10144)
!10234 = !DILocation(line: 5230, column: 25, scope: !10144)
!10235 = !DILocation(line: 5230, column: 33, scope: !10144)
!10236 = !DILocation(line: 5230, column: 38, scope: !10144)
!10237 = !DILocation(line: 5230, column: 5, scope: !10144)
!10238 = !DILocation(line: 5231, column: 9, scope: !10144)
!10239 = !DILocation(line: 5231, column: 17, scope: !10144)
!10240 = !DILocation(line: 5231, column: 24, scope: !10144)
!10241 = !{!1159, !892, i64 0}
!10242 = !DILocation(line: 5232, column: 66, scope: !10144)
!10243 = !DILocation(line: 5232, column: 5, scope: !10144)
!10244 = !DILocation(line: 5233, column: 5, scope: !10144)
!10245 = !DILocation(line: 5234, column: 5, scope: !10144)
!10246 = !DILocation(line: 0, scope: !10144)
!10247 = !DILocation(line: 5235, column: 1, scope: !10144)
!10248 = !DILocation(line: 5167, column: 52, scope: !10215)
!10249 = !DILocation(line: 5168, column: 25, scope: !10215)
!10250 = !DILocation(line: 5168, column: 5, scope: !10215)
!10251 = !DILocation(line: 5169, column: 25, scope: !10215)
!10252 = !DILocation(line: 5169, column: 5, scope: !10215)
!10253 = !DILocation(line: 5170, column: 21, scope: !10215)
!10254 = !DILocation(line: 5170, column: 5, scope: !10215)
!10255 = !DILocation(line: 5171, column: 11, scope: !10215)
!10256 = !DILocation(line: 5171, column: 5, scope: !10215)
!10257 = !DILocation(line: 5172, column: 1, scope: !10215)
!10258 = distinct !DISubprogram(name: "moduleUnregisterCommands", scope: !3, file: !3, line: 5174, type: !10216, isLocal: false, isDefinition: true, scopeLine: 5174, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10259)
!10259 = !{!10260, !10261, !10262, !10263, !10265, !10268}
!10260 = !DILocalVariable(name: "module", arg: 1, scope: !10258, file: !3, line: 5174, type: !273)
!10261 = !DILocalVariable(name: "di", scope: !10258, file: !3, line: 5176, type: !744)
!10262 = !DILocalVariable(name: "de", scope: !10258, file: !3, line: 5177, type: !81)
!10263 = !DILocalVariable(name: "cmd", scope: !10264, file: !3, line: 5179, type: !18)
!10264 = distinct !DILexicalBlock(scope: !10258, file: !3, line: 5178, column: 41)
!10265 = !DILocalVariable(name: "cp", scope: !10266, file: !3, line: 5181, type: !1285)
!10266 = distinct !DILexicalBlock(scope: !10267, file: !3, line: 5180, column: 56)
!10267 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 5180, column: 13)
!10268 = !DILocalVariable(name: "cmdname", scope: !10266, file: !3, line: 5183, type: !154)
!10269 = !DILocation(line: 5174, column: 51, scope: !10258)
!10270 = !DILocation(line: 5176, column: 51, scope: !10258)
!10271 = !DILocation(line: 5176, column: 24, scope: !10258)
!10272 = !DILocation(line: 5176, column: 19, scope: !10258)
!10273 = !DILocation(line: 5178, column: 18, scope: !10258)
!10274 = !DILocation(line: 5177, column: 16, scope: !10258)
!10275 = !DILocation(line: 5178, column: 32, scope: !10258)
!10276 = !DILocation(line: 5178, column: 5, scope: !10258)
!10277 = !DILocation(line: 5179, column: 36, scope: !10264)
!10278 = !DILocation(line: 5179, column: 30, scope: !10264)
!10279 = !DILocation(line: 5180, column: 18, scope: !10267)
!10280 = !DILocation(line: 5180, column: 23, scope: !10267)
!10281 = !DILocation(line: 5180, column: 13, scope: !10264)
!10282 = !DILocation(line: 5182, column: 44, scope: !10266)
!10283 = !DILocation(line: 5181, column: 38, scope: !10266)
!10284 = !DILocation(line: 5183, column: 31, scope: !10266)
!10285 = !DILocation(line: 5183, column: 41, scope: !10266)
!10286 = !DILocation(line: 5183, column: 17, scope: !10266)
!10287 = !DILocation(line: 5184, column: 21, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 5184, column: 17)
!10289 = !DILocation(line: 5184, column: 28, scope: !10288)
!10290 = !DILocation(line: 5184, column: 17, scope: !10266)
!10291 = !DILocation(line: 5185, column: 35, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 5184, column: 39)
!10293 = !DILocation(line: 5185, column: 17, scope: !10292)
!10294 = !DILocation(line: 5186, column: 35, scope: !10292)
!10295 = !DILocation(line: 5186, column: 17, scope: !10292)
!10296 = !DILocation(line: 5187, column: 17, scope: !10292)
!10297 = !DILocation(line: 5188, column: 27, scope: !10292)
!10298 = !DILocation(line: 5188, column: 17, scope: !10292)
!10299 = !DILocation(line: 5189, column: 17, scope: !10292)
!10300 = !DILocation(line: 5190, column: 13, scope: !10292)
!10301 = distinct !{!10301, !10276, !10302}
!10302 = !DILocation(line: 5192, column: 5, scope: !10258)
!10303 = !DILocation(line: 5193, column: 5, scope: !10258)
!10304 = !DILocation(line: 5194, column: 1, scope: !10258)
!10305 = distinct !DISubprogram(name: "moduleUnload", scope: !3, file: !3, line: 5244, type: !10306, isLocal: false, isDefinition: true, scopeLine: 5244, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10308)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{!17, !154}
!10308 = !{!10309, !10310, !10311}
!10309 = !DILocalVariable(name: "name", arg: 1, scope: !10305, file: !3, line: 5244, type: !154)
!10310 = !DILocalVariable(name: "module", scope: !10305, file: !3, line: 5245, type: !273)
!10311 = !DILocalVariable(name: "error", scope: !10312, file: !3, line: 5270, type: !9)
!10312 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 5269, column: 40)
!10313 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 5269, column: 9)
!10314 = !DILocation(line: 5244, column: 22, scope: !10305)
!10315 = !DILocation(line: 5245, column: 49, scope: !10305)
!10316 = !DILocation(line: 5245, column: 34, scope: !10305)
!10317 = !DILocation(line: 5245, column: 25, scope: !10305)
!10318 = !DILocation(line: 5247, column: 16, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 5247, column: 9)
!10320 = !DILocation(line: 5247, column: 9, scope: !10305)
!10321 = !DILocation(line: 5248, column: 9, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 5247, column: 25)
!10323 = !DILocation(line: 5248, column: 15, scope: !10322)
!10324 = !DILocation(line: 5249, column: 9, scope: !10322)
!10325 = !DILocation(line: 5250, column: 16, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 5250, column: 16)
!10327 = !DILocation(line: 5250, column: 16, scope: !10319)
!10328 = !DILocation(line: 5251, column: 9, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 5250, column: 43)
!10330 = !DILocation(line: 5251, column: 15, scope: !10329)
!10331 = !DILocation(line: 5252, column: 9, scope: !10329)
!10332 = !DILocation(line: 5253, column: 16, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 5253, column: 16)
!10334 = !DILocation(line: 5253, column: 16, scope: !10326)
!10335 = !DILocation(line: 5254, column: 9, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 5253, column: 44)
!10337 = !DILocation(line: 5254, column: 15, scope: !10336)
!10338 = !DILocation(line: 5255, column: 9, scope: !10336)
!10339 = !DILocation(line: 5258, column: 5, scope: !10305)
!10340 = !DILocation(line: 5259, column: 5, scope: !10305)
!10341 = !DILocation(line: 4847, column: 42, scope: !8964, inlinedAt: !10342)
!10342 = distinct !DILocation(line: 5260, column: 5, scope: !10305)
!10343 = !DILocation(line: 4848, column: 5, scope: !8964, inlinedAt: !10342)
!10344 = !DILocation(line: 4850, column: 9, scope: !8964, inlinedAt: !10342)
!10345 = !DILocation(line: 4852, column: 24, scope: !8964, inlinedAt: !10342)
!10346 = !DILocation(line: 4848, column: 14, scope: !8964, inlinedAt: !10342)
!10347 = !DILocation(line: 4852, column: 5, scope: !8964, inlinedAt: !10342)
!10348 = !DILocation(line: 4853, column: 17, scope: !8964, inlinedAt: !10342)
!10349 = !DILocation(line: 4849, column: 15, scope: !8964, inlinedAt: !10342)
!10350 = !DILocation(line: 4853, column: 5, scope: !8964, inlinedAt: !10342)
!10351 = !DILocation(line: 4854, column: 33, scope: !8971, inlinedAt: !10342)
!10352 = !DILocation(line: 4854, column: 22, scope: !8971, inlinedAt: !10342)
!10353 = !DILocation(line: 4855, column: 44, scope: !8971, inlinedAt: !10342)
!10354 = !DILocation(line: 4855, column: 24, scope: !8971, inlinedAt: !10342)
!10355 = !DILocation(line: 4855, column: 19, scope: !8971, inlinedAt: !10342)
!10356 = !DILocation(line: 4856, column: 13, scope: !8988, inlinedAt: !10342)
!10357 = !DILocation(line: 4856, column: 13, scope: !8971, inlinedAt: !10342)
!10358 = !DILocation(line: 4857, column: 33, scope: !8991, inlinedAt: !10342)
!10359 = !DILocation(line: 4857, column: 13, scope: !8991, inlinedAt: !10342)
!10360 = !DILocation(line: 4859, column: 9, scope: !8991, inlinedAt: !10342)
!10361 = !DILocation(line: 4862, column: 1, scope: !8964, inlinedAt: !10342)
!10362 = !DILocation(line: 5261, column: 5, scope: !10305)
!10363 = !DILocation(line: 4060, column: 50, scope: !7396, inlinedAt: !10364)
!10364 = distinct !DILocation(line: 5264, column: 5, scope: !10305)
!10365 = !DILocation(line: 4061, column: 5, scope: !7396, inlinedAt: !10364)
!10366 = !DILocation(line: 4063, column: 16, scope: !7396, inlinedAt: !10364)
!10367 = !DILocation(line: 4061, column: 14, scope: !7396, inlinedAt: !10364)
!10368 = !DILocation(line: 4063, column: 5, scope: !7396, inlinedAt: !10364)
!10369 = !DILocation(line: 4064, column: 17, scope: !7396, inlinedAt: !10364)
!10370 = !DILocation(line: 4062, column: 15, scope: !7396, inlinedAt: !10364)
!10371 = !DILocation(line: 4064, column: 5, scope: !7396, inlinedAt: !10364)
!10372 = !DILocation(line: 4065, column: 50, scope: !7404, inlinedAt: !10364)
!10373 = !DILocation(line: 4065, column: 40, scope: !7404, inlinedAt: !10364)
!10374 = !DILocation(line: 4066, column: 18, scope: !7416, inlinedAt: !10364)
!10375 = !DILocation(line: 4066, column: 25, scope: !7416, inlinedAt: !10364)
!10376 = !DILocation(line: 4066, column: 13, scope: !7404, inlinedAt: !10364)
!10377 = !DILocation(line: 4067, column: 25, scope: !7420, inlinedAt: !10364)
!10378 = !DILocation(line: 4067, column: 13, scope: !7420, inlinedAt: !10364)
!10379 = !DILocation(line: 4068, column: 13, scope: !7420, inlinedAt: !10364)
!10380 = !DILocation(line: 4069, column: 9, scope: !7420, inlinedAt: !10364)
!10381 = !DILocation(line: 4071, column: 1, scope: !7396, inlinedAt: !10364)
!10382 = !DILocation(line: 5269, column: 25, scope: !10313)
!10383 = !DILocation(line: 5269, column: 9, scope: !10313)
!10384 = !DILocation(line: 5269, column: 33, scope: !10313)
!10385 = !DILocation(line: 5269, column: 9, scope: !10305)
!10386 = !DILocation(line: 5277, column: 54, scope: !10305)
!10387 = !DILocation(line: 5270, column: 23, scope: !10312)
!10388 = !DILocation(line: 5270, column: 15, scope: !10312)
!10389 = !DILocation(line: 5271, column: 19, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 5271, column: 13)
!10391 = !DILocation(line: 5271, column: 13, scope: !10312)
!10392 = !DILocation(line: 5273, column: 21, scope: !10312)
!10393 = !DILocation(line: 5272, column: 9, scope: !10312)
!10394 = !DILocation(line: 5274, column: 5, scope: !10312)
!10395 = !DILocation(line: 5277, column: 5, scope: !10305)
!10396 = !DILocation(line: 5278, column: 16, scope: !10305)
!10397 = !DILocation(line: 5278, column: 32, scope: !10305)
!10398 = !DILocation(line: 5278, column: 5, scope: !10305)
!10399 = !DILocation(line: 5279, column: 18, scope: !10305)
!10400 = !DILocation(line: 5167, column: 52, scope: !10215, inlinedAt: !10401)
!10401 = distinct !DILocation(line: 5280, column: 5, scope: !10305)
!10402 = !DILocation(line: 5168, column: 25, scope: !10215, inlinedAt: !10401)
!10403 = !DILocation(line: 5168, column: 5, scope: !10215, inlinedAt: !10401)
!10404 = !DILocation(line: 5169, column: 25, scope: !10215, inlinedAt: !10401)
!10405 = !DILocation(line: 5169, column: 5, scope: !10215, inlinedAt: !10401)
!10406 = !DILocation(line: 5170, column: 21, scope: !10215, inlinedAt: !10401)
!10407 = !DILocation(line: 5170, column: 5, scope: !10215, inlinedAt: !10401)
!10408 = !DILocation(line: 5171, column: 5, scope: !10215, inlinedAt: !10401)
!10409 = !DILocation(line: 5282, column: 5, scope: !10305)
!10410 = !DILocation(line: 0, scope: !10305)
!10411 = !DILocation(line: 5283, column: 1, scope: !10305)
!10412 = distinct !DISubprogram(name: "moduleCommand", scope: !3, file: !3, line: 5288, type: !25, isLocal: false, isDefinition: true, scopeLine: 5288, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10413)
!10413 = !{!10414, !10415, !10416, !10420, !10423, !10424, !10429, !10432, !10433, !10435}
!10414 = !DILocalVariable(name: "c", arg: 1, scope: !10412, file: !3, line: 5288, type: !27)
!10415 = !DILocalVariable(name: "subcmd", scope: !10412, file: !3, line: 5289, type: !9)
!10416 = !DILocalVariable(name: "help", scope: !10417, file: !3, line: 5291, type: !10419)
!10417 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 5290, column: 53)
!10418 = distinct !DILexicalBlock(scope: !10412, file: !3, line: 5290, column: 9)
!10419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 256, elements: !455)
!10420 = !DILocalVariable(name: "argv", scope: !10421, file: !3, line: 5300, type: !165)
!10421 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 5299, column: 53)
!10422 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 5299, column: 9)
!10423 = !DILocalVariable(name: "argc", scope: !10421, file: !3, line: 5301, type: !17)
!10424 = !DILocalVariable(name: "errmsg", scope: !10425, file: !3, line: 5317, type: !9)
!10425 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 5316, column: 14)
!10426 = distinct !DILexicalBlock(scope: !10427, file: !3, line: 5314, column: 13)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 5313, column: 62)
!10428 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 5313, column: 16)
!10429 = !DILocalVariable(name: "di", scope: !10430, file: !3, line: 5337, type: !744)
!10430 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 5336, column: 60)
!10431 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 5336, column: 16)
!10432 = !DILocalVariable(name: "de", scope: !10430, file: !3, line: 5338, type: !81)
!10433 = !DILocalVariable(name: "name", scope: !10434, file: !3, line: 5342, type: !154)
!10434 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 5341, column: 45)
!10435 = !DILocalVariable(name: "module", scope: !10434, file: !3, line: 5343, type: !273)
!10436 = !DILocation(line: 5288, column: 28, scope: !10412)
!10437 = !DILocation(line: 5289, column: 23, scope: !10412)
!10438 = !DILocation(line: 5289, column: 20, scope: !10412)
!10439 = !DILocation(line: 5289, column: 32, scope: !10412)
!10440 = !DILocation(line: 5289, column: 11, scope: !10412)
!10441 = !DILocation(line: 5290, column: 12, scope: !10418)
!10442 = !DILocation(line: 5290, column: 17, scope: !10418)
!10443 = !DILocation(line: 5290, column: 22, scope: !10418)
!10444 = !DILocation(line: 5290, column: 26, scope: !10418)
!10445 = !DILocation(line: 5290, column: 9, scope: !10412)
!10446 = !DILocation(line: 5291, column: 9, scope: !10417)
!10447 = !DILocation(line: 5291, column: 21, scope: !10417)
!10448 = !DILocation(line: 5297, column: 25, scope: !10417)
!10449 = !DILocation(line: 5297, column: 9, scope: !10417)
!10450 = !DILocation(line: 5298, column: 5, scope: !10418)
!10451 = !DILocation(line: 5298, column: 5, scope: !10417)
!10452 = !DILocation(line: 5299, column: 10, scope: !10422)
!10453 = !DILocation(line: 5299, column: 47, scope: !10422)
!10454 = !DILocation(line: 5299, column: 36, scope: !10422)
!10455 = !DILocation(line: 5300, column: 16, scope: !10421)
!10456 = !DILocation(line: 5301, column: 13, scope: !10421)
!10457 = !DILocation(line: 5303, column: 21, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 5303, column: 13)
!10459 = !DILocation(line: 5304, column: 28, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 5303, column: 26)
!10461 = !DILocation(line: 5305, column: 21, scope: !10460)
!10462 = !DILocation(line: 5306, column: 9, scope: !10460)
!10463 = !DILocation(line: 5303, column: 13, scope: !10421)
!10464 = !DILocation(line: 5308, column: 24, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 5308, column: 13)
!10466 = !DILocation(line: 5308, column: 36, scope: !10465)
!10467 = !DILocation(line: 5308, column: 13, scope: !10465)
!10468 = !DILocation(line: 5308, column: 60, scope: !10465)
!10469 = !DILocation(line: 5308, column: 13, scope: !10421)
!10470 = !DILocation(line: 5309, column: 31, scope: !10465)
!10471 = !{!2865, !892, i64 8}
!10472 = !DILocation(line: 5309, column: 13, scope: !10465)
!10473 = !DILocation(line: 5311, column: 13, scope: !10465)
!10474 = !DILocation(line: 5313, column: 17, scope: !10428)
!10475 = !DILocation(line: 5313, column: 56, scope: !10428)
!10476 = !DILocation(line: 5313, column: 45, scope: !10428)
!10477 = !DILocation(line: 5314, column: 26, scope: !10426)
!10478 = !DILocation(line: 5314, column: 38, scope: !10426)
!10479 = !DILocation(line: 5314, column: 13, scope: !10426)
!10480 = !DILocation(line: 5314, column: 43, scope: !10426)
!10481 = !DILocation(line: 5314, column: 13, scope: !10427)
!10482 = !DILocation(line: 5315, column: 31, scope: !10426)
!10483 = !DILocation(line: 5315, column: 13, scope: !10426)
!10484 = !DILocation(line: 5318, column: 20, scope: !10425)
!10485 = !DILocation(line: 5318, column: 13, scope: !10425)
!10486 = !DILocation(line: 5325, column: 17, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 5318, column: 27)
!10488 = !DILocation(line: 5329, column: 17, scope: !10487)
!10489 = !DILocation(line: 5332, column: 17, scope: !10487)
!10490 = !DILocation(line: 0, scope: !10487)
!10491 = !DILocation(line: 5317, column: 19, scope: !10425)
!10492 = !DILocation(line: 5334, column: 13, scope: !10425)
!10493 = !DILocation(line: 5336, column: 17, scope: !10431)
!10494 = !DILocation(line: 5336, column: 43, scope: !10431)
!10495 = !DILocation(line: 5337, column: 44, scope: !10430)
!10496 = !DILocation(line: 5337, column: 28, scope: !10430)
!10497 = !DILocation(line: 5337, column: 23, scope: !10430)
!10498 = !DILocation(line: 5340, column: 32, scope: !10430)
!10499 = !DILocation(line: 5340, column: 9, scope: !10430)
!10500 = !DILocation(line: 5341, column: 22, scope: !10430)
!10501 = !DILocation(line: 5338, column: 20, scope: !10430)
!10502 = !DILocation(line: 5341, column: 36, scope: !10430)
!10503 = !DILocation(line: 5341, column: 9, scope: !10430)
!10504 = !DILocation(line: 5342, column: 24, scope: !10434)
!10505 = !DILocation(line: 5342, column: 17, scope: !10434)
!10506 = !DILocation(line: 5343, column: 42, scope: !10434)
!10507 = !DILocation(line: 5343, column: 33, scope: !10434)
!10508 = !DILocation(line: 5344, column: 13, scope: !10434)
!10509 = !DILocation(line: 5345, column: 13, scope: !10434)
!10510 = !DILocation(line: 87, column: 39, scope: !2331, inlinedAt: !10511)
!10511 = distinct !DILocation(line: 5346, column: 40, scope: !10434)
!10512 = !DILocation(line: 88, column: 27, scope: !2331, inlinedAt: !10511)
!10513 = !DILocation(line: 88, column: 19, scope: !2331, inlinedAt: !10511)
!10514 = !DILocation(line: 89, column: 5, scope: !2331, inlinedAt: !10511)
!10515 = !DILocation(line: 91, column: 20, scope: !2343, inlinedAt: !10511)
!10516 = !DILocation(line: 91, column: 13, scope: !2343, inlinedAt: !10511)
!10517 = !DILocation(line: 93, column: 20, scope: !2343, inlinedAt: !10511)
!10518 = !DILocation(line: 93, column: 34, scope: !2343, inlinedAt: !10511)
!10519 = !DILocation(line: 93, column: 13, scope: !2343, inlinedAt: !10511)
!10520 = !DILocation(line: 95, column: 20, scope: !2343, inlinedAt: !10511)
!10521 = !DILocation(line: 95, column: 35, scope: !2343, inlinedAt: !10511)
!10522 = !DILocation(line: 95, column: 13, scope: !2343, inlinedAt: !10511)
!10523 = !DILocation(line: 97, column: 20, scope: !2343, inlinedAt: !10511)
!10524 = !DILocation(line: 97, column: 35, scope: !2343, inlinedAt: !10511)
!10525 = !DILocation(line: 97, column: 13, scope: !2343, inlinedAt: !10511)
!10526 = !DILocation(line: 99, column: 20, scope: !2343, inlinedAt: !10511)
!10527 = !DILocation(line: 99, column: 35, scope: !2343, inlinedAt: !10511)
!10528 = !DILocation(line: 99, column: 13, scope: !2343, inlinedAt: !10511)
!10529 = !DILocation(line: 0, scope: !2343, inlinedAt: !10511)
!10530 = !DILocation(line: 5346, column: 13, scope: !10434)
!10531 = !DILocation(line: 5347, column: 13, scope: !10434)
!10532 = !DILocation(line: 5348, column: 40, scope: !10434)
!10533 = !DILocation(line: 5348, column: 32, scope: !10434)
!10534 = !DILocation(line: 5348, column: 13, scope: !10434)
!10535 = distinct !{!10535, !10503, !10536}
!10536 = !DILocation(line: 5349, column: 9, scope: !10430)
!10537 = !DILocation(line: 5350, column: 9, scope: !10430)
!10538 = !DILocation(line: 5352, column: 9, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 5351, column: 12)
!10540 = !DILocation(line: 5353, column: 9, scope: !10539)
!10541 = !DILocation(line: 5355, column: 1, scope: !10412)
!10542 = distinct !DISubprogram(name: "moduleCount", scope: !3, file: !3, line: 5358, type: !7711, isLocal: false, isDefinition: true, scopeLine: 5358, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!10543 = !DILocation(line: 5359, column: 12, scope: !10542)
!10544 = !DILocation(line: 5359, column: 5, scope: !10542)
