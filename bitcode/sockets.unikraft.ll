; ModuleID = '/root/.unikraft/libs/lwip/sockets.c'
source_filename = "/root/.unikraft/libs/lwip/sockets.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.uk_alloc = type { i8* (%struct.uk_alloc*, i64)*, {}*, i8* (%struct.uk_alloc*, i8*, i64)*, i32 (%struct.uk_alloc*, i8**, i64, i64)*, {}*, void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)*, i8* (%struct.uk_alloc*, i64)*, i8* (%struct.uk_alloc*, i64)*, void (%struct.uk_alloc*, i8*, i64)*, i32 (%struct.uk_alloc*, i8*, i64)*, i64, %struct.uk_alloc*, [0 x i8] }
%struct.uk_thread_status_block = type { i64, i64 }
%struct.lwip_sock = type { %struct.netconn*, %union.lwip_sock_lastdata, i16, i16, i16, i8 }
%struct.netconn = type { i32, i32, %union.anon.4, i8, %struct.sys_sem_t, %struct.sys_mbox_t, %struct.sys_mbox_t, i32, i8, %struct.api_msg*, void (%struct.netconn*, i32, i16)* }
%union.anon.4 = type { %struct.ip_pcb* }
%struct.ip_pcb = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8 }
%struct.ip_addr = type { %union.anon.5, i8 }
%union.anon.5 = type { %struct.ip6_addr }
%struct.ip6_addr = type { [4 x i32], i8 }
%struct.sys_sem_t = type { %struct.uk_semaphore, i32 }
%struct.uk_semaphore = type { i64, %struct.uk_waitq }
%struct.uk_waitq = type { %struct.uk_waitq_entry*, %struct.uk_waitq_entry** }
%struct.uk_waitq_entry = type { i32, %struct.uk_thread*, %struct.anon.0 }
%struct.uk_thread = type { i8*, i8*, i8*, i8*, %struct.anon, i32, i64, i8, %struct.uk_waitq, %struct.uk_sched*, i8*, i32, %struct._reent*, %struct.uk_thread_sig* }
%struct.anon = type { %struct.uk_thread*, %struct.uk_thread** }
%struct.uk_sched = type { void (%struct.uk_sched*)*, i32 (%struct.uk_sched*, %struct.uk_thread*, %struct.uk_thread_attr*)*, void (%struct.uk_sched*, %struct.uk_thread*)*, void (%struct.uk_sched*, %struct.uk_thread*)*, void (%struct.uk_sched*, %struct.uk_thread*)*, i32 (%struct.uk_sched*, %struct.uk_thread*, i32)*, i32 (%struct.uk_sched*, %struct.uk_thread*, i32*)*, i32 (%struct.uk_sched*, %struct.uk_thread*, i32)*, i32 (%struct.uk_sched*, %struct.uk_thread*, i32*)*, i8, %struct.uk_thread, %struct.uk_thread_list, %struct.ukplat_ctx_callbacks, %struct.uk_alloc*, %struct.uk_sched*, i8* }
%struct.uk_thread_attr = type { i8, i32, i64 }
%struct.uk_thread_list = type { %struct.uk_thread*, %struct.uk_thread** }
%struct.ukplat_ctx_callbacks = type { i8* (%struct.uk_alloc*, i64, i64)*, void (i8*)*, void (i8*, i8*)* }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, [25 x i8], i32, %struct.__locale_t*, i32, void (%struct._reent*)*, %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint**, i32, i8*, %union.anon.1, %struct._atexit*, %struct._atexit, void (i32)**, %struct._glue, [3 x %struct.__sFILE] }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i64, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64, %struct._reent*, i32, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct._mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__locale_t = type opaque
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%union.anon.1 = type { %struct.anon.3 }
%struct.anon.3 = type { [30 x i8*], [30 x i32] }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.uk_thread_sig = type { i64, i64, %struct.uk_list_head, %struct.uk_thread_sig_wait, %struct.uk_list_head }
%struct.uk_thread_sig_wait = type { i32, i64, %struct.siginfo_t }
%struct.siginfo_t = type { i32, i32, i32 }
%struct.uk_list_head = type { %struct.uk_list_head*, %struct.uk_list_head* }
%struct.anon.0 = type { %struct.uk_waitq_entry* }
%struct.sys_mbox_t = type { %struct.uk_alloc*, %struct.uk_mbox*, i32 }
%struct.uk_mbox = type opaque
%struct.api_msg = type opaque
%union.lwip_sock_lastdata = type { %struct.netbuf* }
%struct.netbuf = type { %struct.pbuf*, %struct.pbuf*, %struct.ip_addr, i16 }
%struct.pbuf = type { %struct.pbuf*, i8*, i16, i16, i8, i8, i8, i8 }
%struct.sys_mutex_t = type { %struct.uk_mutex, i32 }
%struct.uk_mutex = type { i32, %struct.uk_thread*, %struct.uk_waitq }
%struct.mount = type { %struct.vfsops*, i32, i32, [1024 x i8], [1024 x i8], %struct.device*, %struct.dentry*, %struct.dentry*, i8*, %struct.uk_list_head, %struct.__fsid_t }
%struct.vfsops = type { i32 (%struct.mount*, i8*, i32, i8*)*, i32 (%struct.mount*, i32)*, i32 (%struct.mount*)*, i32 (%struct.mount*, %struct.vnode*)*, i32 (%struct.mount*, %struct.statfs*)*, %struct.vnops* }
%struct.vnode = type { i64, %struct.uk_list_head, %struct.mount*, %struct.vnops*, i32, i32, i32, i32, i64, %struct.uk_mutex, %struct.uk_list_head, i8* }
%struct.statfs = type { i64, i64, i64, i64, i64, i32, i32, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.vnops = type { i32 (%struct.vfscore_file*)*, {}*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i64)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)*, {}*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.dirent*)*, i32 (%struct.vnode*, i8*, %struct.vnode**)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vnode*, i8*, %struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*)*, i32 (%struct.vnode*, i64)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*)*, i32 (%struct.vnode*, i32, i64, i64)*, i32 (%struct.vnode*, %struct.uio*)*, i32 (%struct.vnode*, i8*, i8*)* }
%struct.vfscore_file = type { i32, i32, i32, i64, i8*, i32, %struct.dentry*, %struct.uk_mutex }
%struct.uio = type { %struct.iovec*, i32, i64, i64, i32 }
%struct.iovec = type { i8*, i64 }
%struct.dirent = type { i16, i64, i16, i8, [256 x i8] }
%struct.vattr = type { i32, i32, i32, i16, i16, i16, i16, i16, %struct.timespec, %struct.timespec, %struct.timespec, i16, i64, i64 }
%struct.timespec = type { i64, i64 }
%struct.device = type opaque
%struct.dentry = type { %struct.uk_hlist_node, i32, i8*, %struct.vnode*, %struct.mount*, %struct.dentry*, %struct.uk_list_head, %struct.uk_mutex, %struct.uk_list_head, %struct.uk_list_head }
%struct.uk_hlist_node = type { %struct.uk_hlist_node*, %struct.uk_hlist_node** }
%struct.__fsid_t = type { [2 x i32] }
%struct.lwip_select_cb = type { %struct.lwip_select_cb*, %struct.lwip_select_cb*, %struct._types_fd_set*, %struct._types_fd_set*, %struct._types_fd_set*, %struct.pollfd*, i32, i32, %struct.sys_sem_t }
%struct._types_fd_set = type { [1 x i64] }
%struct.pollfd = type { i32, i16, i16 }
%struct.lwip_socket_multicast_mld6_pair = type { %struct.lwip_sock*, i8, %struct.ip6_addr }
%struct.sock_net_file = type { %struct.vfscore_file*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i32, i8*, i32, i32 }
%struct.sockaddr = type { i8, i8, [14 x i8] }
%union.sockaddr_aligned = type { %struct.sockaddr_in6 }
%struct.sockaddr_in6 = type { i8, i8, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.6 }
%union.anon.6 = type { [4 x i32] }
%struct.timeval = type { i64, i64 }
%struct.tcp_pcb = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8, %struct.tcp_pcb*, i8*, i32, i8, i16, i16, i16, i8, i8, i8, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, %struct.tcp_seg*, %struct.tcp_seg*, %struct.tcp_seg*, %struct.pbuf*, %struct.tcp_pcb_listen*, i8 (i8*, %struct.tcp_pcb*, i16)*, i8 (i8*, %struct.tcp_pcb*, %struct.pbuf*, i8)*, i8 (i8*, %struct.tcp_pcb*, i8)*, i8 (i8*, %struct.tcp_pcb*)*, void (i8*, i8)*, i32, i8, i8, i8, i8, i8, i8 }
%struct.tcp_seg = type opaque
%struct.tcp_pcb_listen = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8, %struct.tcp_pcb_listen*, i8*, i32, i8, i16, i8 (i8*, %struct.tcp_pcb*, i8)* }
%struct.udp_pcb = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8, %struct.udp_pcb*, i8, i16, i16, %struct.ip4_addr, i8, i8, void (i8*, %struct.udp_pcb*, %struct.pbuf*, %struct.ip_addr*, i16)*, i8* }
%struct.ip4_addr = type { i32 }
%struct.netif = type { %struct.netif*, %struct.ip_addr, %struct.ip_addr, %struct.ip_addr, [3 x %struct.ip_addr], [3 x i8], [3 x i32], [3 x i32], i8 (%struct.pbuf*, %struct.netif*)*, i8 (%struct.netif*, %struct.pbuf*, %struct.ip4_addr*)*, i8 (%struct.netif*, %struct.pbuf*)*, i8 (%struct.netif*, %struct.pbuf*, %struct.ip6_addr*)*, void (%struct.netif*)*, void (%struct.netif*)*, i8*, [1 x i8*], i16, i16, i16, [6 x i8], i8, i8, [2 x i8], i8, i8, i8, i8 (%struct.netif*, %struct.ip6_addr*, i32)* }
%struct.netvector = type { i8*, i64 }

@.str = private unnamed_addr constant [23 x i8] c"Assertion failure: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"s_vnode->v_refcnt == 1\00", align 1
@flexos_shared_alloc = external dso_local local_unnamed_addr global %struct.uk_alloc*, align 8
@_intrstack_start = external dso_local global [0 x i8], align 1
@_end = external dso_local global [0 x i8], align 1
@tsb_comp1 = external dso_local global [32 x %struct.uk_thread_status_block], align 16
@tsb_comp0 = external dso_local global [32 x %struct.uk_thread_status_block], align 16
@.str.2 = private unnamed_addr constant [16 x i8] c"newconn != NULL\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"!(1)\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"invalid socket index\00", align 1
@sockets = internal global [64 x %struct.lwip_sock] zeroinitializer, align 16, !dbg !0
@lock_tcpip_core = external dso_local global %struct.sys_mutex_t, align 8
@.str.5 = private unnamed_addr constant [27 x i8] c"lwip_bind: invalid address\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"lwip_connect: invalid address\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"lwip_recvmsg: invalid message pointer\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"lwip_recvmsg: unsupported flags\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"lwip_sendmsg: invalid msghdr\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"lwip_sendmsg: invalid msghdr iov\00", align 1
@.str.13 = private unnamed_addr constant [36 x i8] c"lwip_sendmsg: maximum iovs exceeded\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"lwip_sendmsg: unsupported flags\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"lwip_sendmsg: invalid msghdr name\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"lwip_sendto: invalid address\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"sock->select_waiting > 0\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"lwip_poll: invalid fds\00", align 1
@uk_pr_crit.__str = internal global [8 x i8] c"liblwip\00", section ".data_shared", align 1, !dbg !1043
@uk_pr_crit.__str.20 = internal global [10 x i8] c"sockets.c\00", section ".data_shared", align 1, !dbg !1062
@.str.21 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@s_mount = internal global %struct.mount { %struct.vfsops* @sock_net_vfsops, i32 0, i32 0, [1024 x i8] zeroinitializer, [1024 x i8] zeroinitializer, %struct.device* null, %struct.dentry* null, %struct.dentry* null, i8* null, %struct.uk_list_head zeroinitializer, %struct.__fsid_t zeroinitializer }, section ".data_shared", align 8, !dbg !1149
@s_inode = internal unnamed_addr global i64 0, section ".data_shared", align 8, !dbg !1155
@.str.22 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@sock_fd_alloc.__str = internal global [2 x i8] c"/\00", section ".data_shared", align 1, !dbg !1067
@sock_fd_alloc.__str.23 = internal global [2 x i8] c"/\00", section ".data_shared", align 1, !dbg !1147
@.str.24 = private unnamed_addr constant [8 x i8] c"ret < 0\00", align 1
@sock_net_vfsops = internal global %struct.vfsops { i32 (%struct.mount*, i8*, i32, i8*)* null, i32 (%struct.mount*, i32)* null, i32 (%struct.mount*)* null, i32 (%struct.mount*, %struct.vnode*)* bitcast (i32 ()* @vfscore_vop_nullop to i32 (%struct.mount*, %struct.vnode*)*), i32 (%struct.mount*, %struct.statfs*)* null, %struct.vnops* bitcast ({ i32 (%struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i64)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.dirent*)*, i32 (%struct.vnode*, i8*, %struct.vnode**)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vnode*, i8*, %struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*)*, i32 (%struct.vnode*, i64)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*)*, i32 (%struct.vnode*, i32, i64, i64)*, i32 (%struct.vnode*, %struct.uio*)*, i32 (%struct.vnode*, i8*, i8*)* }* @sock_net_vnops to %struct.vnops*) }, section ".data_shared", align 8, !dbg !1151
@sock_net_vnops = internal global { i32 (%struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i64)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.dirent*)*, i32 (%struct.vnode*, i8*, %struct.vnode**)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vnode*, i8*, %struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*)*, i32 (%struct.vnode*, i64)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*)*, i32 (%struct.vnode*, i32, i64, i64)*, i32 (%struct.vnode*, %struct.uio*)*, i32 (%struct.vnode*, i8*, i8*)* } { i32 (%struct.vfscore_file*)* null, i32 (%struct.vnode*, %struct.vfscore_file*)* @sock_net_close, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)* @sock_net_read, i32 (%struct.vnode*, %struct.uio*, i32)* @sock_net_write, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i64)* null, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)* @sock_net_ioctl, i32 (%struct.vnode*, %struct.vfscore_file*)* null, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.dirent*)* null, i32 (%struct.vnode*, i8*, %struct.vnode**)* null, i32 (%struct.vnode*, i8*, i32)* null, i32 (%struct.vnode*, %struct.vnode*, i8*)* null, i32 (%struct.vnode*, %struct.vnode*, i8*, %struct.vnode*, %struct.vnode*, i8*)* null, i32 (%struct.vnode*, i8*, i32)* null, i32 (%struct.vnode*, %struct.vnode*, i8*)* null, i32 (%struct.vnode*, %struct.vattr*)* bitcast (i32 ()* @vfscore_vop_einval to i32 (%struct.vnode*, %struct.vattr*)*), i32 (%struct.vnode*, %struct.vattr*)* null, i32 (%struct.vnode*)* bitcast (i32 ()* @vfscore_vop_nullop to i32 (%struct.vnode*)*), i32 (%struct.vnode*, i64)* null, i32 (%struct.vnode*, %struct.vnode*, i8*)* null, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*)* null, i32 (%struct.vnode*, i32, i64, i64)* null, i32 (%struct.vnode*, %struct.uio*)* null, i32 (%struct.vnode*, i8*, i8*)* null }, section ".data_shared", align 8, !dbg !1153
@.str.26 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"m->lock_count > 0\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"sockets[i].select_waiting == 0\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"no socket given\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"this should be checked internally\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"p != NULL\00", align 1
@.str.32 = private unnamed_addr constant [37 x i8] c"invalid copylen, len would underflow\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"invalid copylen\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"fromaddr != NULL\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"from != NULL\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"fromlen != NULL\00", align 1
@.str.37 = private unnamed_addr constant [41 x i8] c"lwip_recvfrom_udp_raw: invalid arguments\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"buf != NULL\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"nready >= 0\00", align 1
@select_cb_list = internal unnamed_addr global %struct.lwip_select_cb* null, align 8, !dbg !1157
@.str.40 = private unnamed_addr constant [24 x i8] c"select_cb->prev == NULL\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"select_cb->prev != NULL\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"unknown event\00", align 1
@.str.44 = private unnamed_addr constant [42 x i8] c"Unhandled netconn type in SO_BINDTODEVICE\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"Invalid netif index\00", align 1
@socket_ipv6_multicast_memberships = internal unnamed_addr global [64 x %struct.lwip_socket_multicast_mld6_pair] zeroinitializer, align 16, !dbg !1159
@__A_VARIABLE = internal global i32 0

; Function Attrs: noredzone nounwind
define dso_local i32 @_sock_net_close(%struct.vnode* nocapture readonly, %struct.vfscore_file* nocapture readnone) #0 !dbg !1392 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !1401
  %5 = load i8*, i8** %4, align 8, !dbg !1401, !tbaa !1402
  %6 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 4, !dbg !1412
  %7 = load i32, i32* %6, align 8, !dbg !1412, !tbaa !1415
  %8 = icmp eq i32 %7, 1, !dbg !1412
  br i1 %8, label %10, label %9, !dbg !1416, !prof !1417

; <label>:9:                                      ; preds = %2
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #8, !dbg !1418
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1418
  unreachable, !dbg !1418

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !1420
  %12 = bitcast i8* %11 to i32*, !dbg !1420
  %13 = load i32, i32* %12, align 8, !dbg !1420, !tbaa !1421
  %14 = tail call i32 @lwip_close(i32 %13) #8, !dbg !1423
  %15 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !1425, !tbaa !1426
  %16 = icmp eq %struct.uk_alloc* %15, null, !dbg !1441
  br i1 %16, label %17, label %18, !dbg !1444, !prof !1445

; <label>:17:                                     ; preds = %10
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !1446
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1446
  unreachable, !dbg !1446

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %15, i64 0, i32 5, !dbg !1448
  %20 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %19, align 8, !dbg !1448, !tbaa !1426
  tail call void %20(%struct.uk_alloc* nonnull %15, i8* nonnull %5) #10, !dbg !1449
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1451
  %21 = icmp slt i32 %14, 0, !dbg !1452
  br i1 %21, label %22, label %43, !dbg !1454

; <label>:22:                                     ; preds = %18
  %23 = bitcast i32* %3 to i8*, !dbg !1455
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #6, !dbg !1455
  %24 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1470, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1480
  %25 = icmp ult i64 %24, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1481
  br i1 %25, label %32, label %26, !dbg !1481

; <label>:26:                                     ; preds = %22
  %27 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1482, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1485
  %28 = icmp ugt i64 %27, ptrtoint ([0 x i8]* @_end to i64), !dbg !1481
  br i1 %28, label %32, label %29, !dbg !1486

; <label>:29:                                     ; preds = %26
  %30 = tail call i32* @__errno() #10, !dbg !1487
  %31 = load i32, i32* %30, align 4, !dbg !1487, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1493
  store i32 %31, i32* %3, align 4, !dbg !1495, !tbaa !1492
  br label %41, !dbg !1495

; <label>:32:                                     ; preds = %26, %22
  %33 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1496, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1504
  %34 = and i64 %33, -65536, !dbg !1506
  %35 = or i64 %34, 4097, !dbg !1506
  %36 = add nsw i64 %35, -1, !dbg !1506
  %37 = inttoptr i64 %36 to i32*, !dbg !1507
  %38 = load i32, i32* %37, align 4096, !dbg !1508, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1509
  %39 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_GET_ERRNO\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i32 %38, i32 ()* nonnull @_SOCK_NET_GET_ERRNO) #6, !dbg !1510, !srcloc !1511
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %3, i64 %39) #6, !dbg !1512, !srcloc !1515
  %40 = load i32, i32* %3, align 4, !dbg !1516, !tbaa !1492
  br label %41

; <label>:41:                                     ; preds = %29, %32
  %42 = phi i32 [ %40, %32 ], [ %31, %29 ], !dbg !1516
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #6, !dbg !1517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1518
  br label %43, !dbg !1519

; <label>:43:                                     ; preds = %18, %41
  %44 = phi i32 [ %42, %41 ], [ %14, %18 ], !dbg !1520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1521
  ret i32 %44, !dbg !1521
}

; Function Attrs: nounwind readnone speculatable

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: inlinehint noredzone nounwind
define internal void @uk_pr_crit(i8*, ...) unnamed_addr #3 !dbg !1045 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  %3 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*, !dbg !1523
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #6, !dbg !1523
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0, !dbg !1525
  call void @llvm.va_start(i8* nonnull %3), !dbg !1525
  call void @_uk_vprintk(i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @uk_pr_crit.__str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @uk_pr_crit.__str.20, i64 0, i64 0), i32 198, i8* %0, %struct.__va_list_tag* nonnull %4) #10, !dbg !1526
  call void @llvm.va_end(i8* nonnull %3), !dbg !1529
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #6, !dbg !1530
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1530
  ret void, !dbg !1530
}

; Function Attrs: noredzone noreturn
declare dso_local void @ukplat_terminate(i32) local_unnamed_addr #4

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_close(i32) local_unnamed_addr #0 !dbg !1531 {
  %2 = alloca %struct.ip_addr, align 16
  %3 = icmp ugt i32 %0, 63, !dbg !1590
  %4 = sext i32 %0 to i64, !dbg !1592
  %5 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %4, !dbg !1592
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1593
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1594
  br i1 %3, label %10, label %6, !dbg !1595

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %5, i64 0, i32 0, !dbg !1598
  %8 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !1598, !tbaa !1602
  %9 = icmp eq %struct.netconn* %8, null, !dbg !1605
  br i1 %9, label %10, label %26, !dbg !1606

; <label>:10:                                     ; preds = %6, %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1607
  %11 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1609, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1612
  %12 = icmp ult i64 %11, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1613
  br i1 %12, label %18, label %13, !dbg !1613

; <label>:13:                                     ; preds = %10
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1614, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1617
  %15 = icmp ugt i64 %14, ptrtoint ([0 x i8]* @_end to i64), !dbg !1613
  br i1 %15, label %18, label %16, !dbg !1618

; <label>:16:                                     ; preds = %13
  %17 = tail call i32* @__errno() #10, !dbg !1625
  store i32 9, i32* %17, align 4, !dbg !1626, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1627
  br label %25, !dbg !1628

; <label>:18:                                     ; preds = %13, %10
  %19 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1629, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1633
  %20 = and i64 %19, -65536, !dbg !1635
  %21 = or i64 %20, 4097, !dbg !1635
  %22 = add nsw i64 %21, -1, !dbg !1635
  %23 = inttoptr i64 %22 to i32*, !dbg !1636
  %24 = load i32, i32* %23, align 4096, !dbg !1637, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1638
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %24, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !1639, !srcloc !1640
  br label %25

; <label>:25:                                     ; preds = %18, %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1641
  br label %107, !dbg !1643

; <label>:26:                                     ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1607
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1641
  %27 = getelementptr inbounds %struct.netconn, %struct.netconn* %8, i64 0, i32 0, !dbg !1644
  %28 = load i32, i32* %27, align 8, !dbg !1644, !tbaa !1647
  %29 = and i32 %28, 240, !dbg !1644
  %30 = icmp eq i32 %29, 16, !dbg !1652
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1676
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1677
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1680
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1682
  %31 = bitcast %struct.ip_addr* %2 to i8*
  %32 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %2, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %2, i64 0, i32 1
  %34 = bitcast %struct.ip_addr* %2 to <4 x i32>*
  br label %35, !dbg !1685

; <label>:35:                                     ; preds = %51, %26
  %36 = phi i64 [ 0, %26 ], [ %52, %51 ]
  %37 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %36, i32 0, !dbg !1686
  %38 = load %struct.lwip_sock*, %struct.lwip_sock** %37, align 16, !dbg !1686, !tbaa !1687
  %39 = icmp eq %struct.lwip_sock* %38, %5, !dbg !1690
  br i1 %39, label %40, label %51, !dbg !1691

; <label>:40:                                     ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #6, !dbg !1692
  %41 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %36, i32 2, i32 0, i64 0, !dbg !1693
  %42 = bitcast i32* %41 to <4 x i32>*, !dbg !1693
  %43 = load <4 x i32>, <4 x i32>* %42, align 4, !dbg !1693, !tbaa !1492
  store <4 x i32> %43, <4 x i32>* %34, align 16, !dbg !1693, !tbaa !1696
  %44 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %36, i32 2, i32 1, !dbg !1693
  %45 = load i8, i8* %44, align 4, !dbg !1693, !tbaa !1697
  store i8 %45, i8* %32, align 16, !dbg !1693, !tbaa !1696
  store i8 6, i8* %33, align 4, !dbg !1698, !tbaa !1700
  %46 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %36, i32 1, !dbg !1702
  %47 = load i8, i8* %46, align 8, !dbg !1702, !tbaa !1703
  store %struct.lwip_sock* null, %struct.lwip_sock** %37, align 16, !dbg !1705, !tbaa !1687
  store i8 0, i8* %46, align 8, !dbg !1706, !tbaa !1703
  %48 = bitcast i32* %41 to <4 x i32>*, !dbg !1707
  store <4 x i32> zeroinitializer, <4 x i32>* %48, align 4, !dbg !1707, !tbaa !1492
  store i8 0, i8* %44, align 4, !dbg !1707, !tbaa !1697
  %49 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !1709, !tbaa !1602
  %50 = call signext i8 @netconn_join_leave_group_netif(%struct.netconn* %49, %struct.ip_addr* nonnull %2, i8 zeroext %47, i32 1) #10, !dbg !1711
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #6, !dbg !1712
  br label %51, !dbg !1713

; <label>:51:                                     ; preds = %40, %35
  %52 = add nuw nsw i64 %36, 1, !dbg !1714
  %53 = icmp eq i64 %52, 64, !dbg !1715
  br i1 %53, label %54, label %35, !dbg !1685, !llvm.loop !1716

; <label>:54:                                     ; preds = %51
  %55 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !1719, !tbaa !1602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1720
  %56 = call signext i8 @netconn_prepare_delete(%struct.netconn* %55) #10, !dbg !1721
  %57 = icmp eq i8 %56, 0, !dbg !1723
  br i1 %57, label %76, label %58, !dbg !1724

; <label>:58:                                     ; preds = %54
  %59 = call i32 @err_to_errno(i8 signext %56) #10, !dbg !1725
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1726, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1729
  %61 = icmp ult i64 %60, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1730
  br i1 %61, label %67, label %62, !dbg !1730

; <label>:62:                                     ; preds = %58
  %63 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1731, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1734
  %64 = icmp ugt i64 %63, ptrtoint ([0 x i8]* @_end to i64), !dbg !1730
  br i1 %64, label %67, label %65, !dbg !1735

; <label>:65:                                     ; preds = %62
  %66 = call i32* @__errno() #10, !dbg !1736
  store i32 %59, i32* %66, align 4, !dbg !1739, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1740
  br label %107, !dbg !1741

; <label>:67:                                     ; preds = %62, %58
  %68 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1742, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1746
  %69 = and i64 %68, -65536, !dbg !1748
  %70 = or i64 %69, 4097, !dbg !1748
  %71 = add nsw i64 %70, -1, !dbg !1748
  %72 = inttoptr i64 %71 to i32*, !dbg !1749
  %73 = load i32, i32* %72, align 4096, !dbg !1750, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1751
  %74 = sub nsw i32 0, %59, !dbg !1752
  %75 = sext i32 %74 to i64, !dbg !1752
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %75, i32 %73, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !1752, !srcloc !1753
  br label %107

; <label>:76:                                     ; preds = %54
  %77 = call i64 @ukplat_lcpu_save_irqf() #10, !dbg !1766
  %78 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %4, i32 1, !dbg !1786
  %79 = bitcast %union.lwip_sock_lastdata* %78 to %struct.pbuf**, !dbg !1786
  %80 = load %struct.pbuf*, %struct.pbuf** %79, align 8, !dbg !1786
  store %struct.pbuf* null, %struct.pbuf** %79, align 8, !dbg !1787, !tbaa !1696
  %81 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !1788, !tbaa !1602
  store %struct.netconn* null, %struct.netconn** %7, align 8, !dbg !1789, !tbaa !1602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1790
  call void @ukplat_lcpu_restore_irqf(i64 %77) #10, !dbg !1792
  %82 = icmp eq %struct.pbuf* %80, null, !dbg !1805
  %83 = bitcast %struct.pbuf* %80 to %struct.netbuf*, !dbg !1807
  br i1 %82, label %88, label %84, !dbg !1807

; <label>:84:                                     ; preds = %76
  br i1 %30, label %85, label %87, !dbg !1808

; <label>:85:                                     ; preds = %84
  %86 = call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %80) #10, !dbg !1810
  br label %88, !dbg !1813

; <label>:87:                                     ; preds = %84
  call void @netbuf_delete(%struct.netbuf* %83) #10, !dbg !1814
  br label %88

; <label>:88:                                     ; preds = %87, %85, %76
  %89 = icmp eq %struct.netconn* %81, null, !dbg !1816
  br i1 %89, label %92, label %90, !dbg !1818

; <label>:90:                                     ; preds = %88
  %91 = call signext i8 @netconn_delete(%struct.netconn* nonnull %81) #10, !dbg !1819
  br label %92, !dbg !1821

; <label>:92:                                     ; preds = %88, %90
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1823
  %93 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1824, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1827
  %94 = icmp ult i64 %93, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1828
  br i1 %94, label %100, label %95, !dbg !1828

; <label>:95:                                     ; preds = %92
  %96 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1829, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1832
  %97 = icmp ugt i64 %96, ptrtoint ([0 x i8]* @_end to i64), !dbg !1828
  br i1 %97, label %100, label %98, !dbg !1833

; <label>:98:                                     ; preds = %95
  %99 = call i32* @__errno() #10, !dbg !1837
  store i32 0, i32* %99, align 4, !dbg !1838, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1839
  br label %107, !dbg !1840

; <label>:100:                                    ; preds = %95, %92
  %101 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1841, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1845
  %102 = and i64 %101, -65536, !dbg !1847
  %103 = or i64 %102, 4097, !dbg !1847
  %104 = add nsw i64 %103, -1, !dbg !1847
  %105 = inttoptr i64 %104 to i32*, !dbg !1848
  %106 = load i32, i32* %105, align 4096, !dbg !1849, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1850
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %106, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !1851, !srcloc !1852
  br label %107

; <label>:107:                                    ; preds = %25, %98, %100, %65, %67
  %108 = phi i32 [ -1, %67 ], [ -1, %65 ], [ 0, %100 ], [ 0, %98 ], [ -1, %25 ], !dbg !1853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1856
  ret i32 %108, !dbg !1856
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone nounwind
define dso_local i32 @_sock_net_write(%struct.vnode* nocapture readonly, %struct.uio* nocapture, i32) #0 !dbg !1857 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.msghdr, align 8
  %6 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !1869
  %7 = bitcast i8** %6 to %struct.sock_net_file**, !dbg !1869
  %8 = load %struct.sock_net_file*, %struct.sock_net_file** %7, align 8, !dbg !1869, !tbaa !1402
  %9 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %8, i64 0, i32 1, !dbg !1870
  %10 = load i32, i32* %9, align 8, !dbg !1870, !tbaa !1421
  %11 = bitcast %struct.uio* %1 to i64*, !dbg !1871
  %12 = load i64, i64* %11, align 8, !dbg !1871, !tbaa !1872
  %13 = getelementptr inbounds %struct.uio, %struct.uio* %1, i64 0, i32 1, !dbg !1874
  %14 = load i32, i32* %13, align 8, !dbg !1874, !tbaa !1875
  %15 = bitcast %struct.msghdr* %5 to i8*, !dbg !1900
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #6, !dbg !1900
  %16 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 0, !dbg !1901
  store i8* null, i8** %16, align 8, !dbg !1902, !tbaa !1903
  %17 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 1, !dbg !1905
  store i32 0, i32* %17, align 8, !dbg !1906, !tbaa !1907
  %18 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 2, !dbg !1908
  %19 = bitcast %struct.iovec** %18 to i64*, !dbg !1909
  store i64 %12, i64* %19, align 8, !dbg !1909, !tbaa !1910
  %20 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 3, !dbg !1911
  store i32 %14, i32* %20, align 8, !dbg !1912, !tbaa !1913
  %21 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 4, !dbg !1914
  store i8* null, i8** %21, align 8, !dbg !1915, !tbaa !1916
  %22 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 5, !dbg !1917
  store i32 0, i32* %22, align 8, !dbg !1918, !tbaa !1919
  %23 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 6, !dbg !1920
  store i32 0, i32* %23, align 4, !dbg !1921, !tbaa !1922
  %24 = call i64 @lwip_sendmsg(i32 %10, %struct.msghdr* nonnull %5, i32 0) #10, !dbg !1924
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #6, !dbg !1925
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1926
  %25 = trunc i64 %24 to i32, !dbg !1927
  %26 = icmp slt i32 %25, 0, !dbg !1928
  br i1 %26, label %27, label %48, !dbg !1930

; <label>:27:                                     ; preds = %3
  %28 = bitcast i32* %4 to i8*, !dbg !1931
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #6, !dbg !1931
  %29 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1934, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1937
  %30 = icmp ult i64 %29, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1938
  br i1 %30, label %37, label %31, !dbg !1938

; <label>:31:                                     ; preds = %27
  %32 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1939, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1942
  %33 = icmp ugt i64 %32, ptrtoint ([0 x i8]* @_end to i64), !dbg !1938
  br i1 %33, label %37, label %34, !dbg !1943

; <label>:34:                                     ; preds = %31
  %35 = call i32* @__errno() #10, !dbg !1944
  %36 = load i32, i32* %35, align 4, !dbg !1944, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1946
  store i32 %36, i32* %4, align 4, !dbg !1948, !tbaa !1492
  br label %46, !dbg !1948

; <label>:37:                                     ; preds = %31, %27
  %38 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1949, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1953
  %39 = and i64 %38, -65536, !dbg !1955
  %40 = or i64 %39, 4097, !dbg !1955
  %41 = add nsw i64 %40, -1, !dbg !1955
  %42 = inttoptr i64 %41 to i32*, !dbg !1956
  %43 = load i32, i32* %42, align 4096, !dbg !1957, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1958
  %44 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_GET_ERRNO\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i32 %43, i32 ()* nonnull @_SOCK_NET_GET_ERRNO) #6, !dbg !1959, !srcloc !1511
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %4, i64 %44) #6, !dbg !1960, !srcloc !1515
  %45 = load i32, i32* %4, align 4, !dbg !1961, !tbaa !1492
  br label %46

; <label>:46:                                     ; preds = %34, %37
  %47 = phi i32 [ %45, %37 ], [ %36, %34 ], !dbg !1961
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #6, !dbg !1962
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1963
  br label %54, !dbg !1964

; <label>:48:                                     ; preds = %3
  %49 = shl i64 %24, 32, !dbg !1965
  %50 = ashr exact i64 %49, 32, !dbg !1965
  %51 = getelementptr inbounds %struct.uio, %struct.uio* %1, i64 0, i32 3, !dbg !1966
  %52 = load i64, i64* %51, align 8, !dbg !1967, !tbaa !1968
  %53 = sub nsw i64 %52, %50, !dbg !1967
  store i64 %53, i64* %51, align 8, !dbg !1967, !tbaa !1968
  br label %54, !dbg !1969

; <label>:54:                                     ; preds = %48, %46
  %55 = phi i32 [ %47, %46 ], [ 0, %48 ], !dbg !1970
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1971
  ret i32 %55, !dbg !1971
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_writev(i32, %struct.iovec*, i32) local_unnamed_addr #0 !dbg !1877 {
  %4 = alloca %struct.msghdr, align 8
  %5 = bitcast %struct.msghdr* %4 to i8*, !dbg !1975
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #6, !dbg !1975
  %6 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 0, !dbg !1976
  store i8* null, i8** %6, align 8, !dbg !1977, !tbaa !1903
  %7 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 1, !dbg !1978
  store i32 0, i32* %7, align 8, !dbg !1979, !tbaa !1907
  %8 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 2, !dbg !1980
  store %struct.iovec* %1, %struct.iovec** %8, align 8, !dbg !1981, !tbaa !1910
  %9 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 3, !dbg !1982
  store i32 %2, i32* %9, align 8, !dbg !1983, !tbaa !1913
  %10 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 4, !dbg !1984
  store i8* null, i8** %10, align 8, !dbg !1985, !tbaa !1916
  %11 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 5, !dbg !1986
  store i32 0, i32* %11, align 8, !dbg !1987, !tbaa !1919
  %12 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 6, !dbg !1988
  store i32 0, i32* %12, align 4, !dbg !1989, !tbaa !1922
  %13 = call i64 @lwip_sendmsg(i32 %0, %struct.msghdr* nonnull %4, i32 0) #8, !dbg !1991
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #6, !dbg !1992
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1993
  ret i64 %13, !dbg !1993
}

; Function Attrs: noredzone nounwind
define dso_local i32 @_sock_net_read(%struct.vnode* nocapture readonly, %struct.vfscore_file* nocapture readnone, %struct.uio* nocapture, i32) #0 !dbg !1994 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.msghdr, align 8
  %7 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !2008
  %8 = bitcast i8** %7 to %struct.sock_net_file**, !dbg !2008
  %9 = load %struct.sock_net_file*, %struct.sock_net_file** %8, align 8, !dbg !2008, !tbaa !1402
  %10 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %9, i64 0, i32 1, !dbg !2009
  %11 = load i32, i32* %10, align 8, !dbg !2009, !tbaa !1421
  %12 = bitcast %struct.uio* %2 to i64*, !dbg !2010
  %13 = load i64, i64* %12, align 8, !dbg !2010, !tbaa !1872
  %14 = getelementptr inbounds %struct.uio, %struct.uio* %2, i64 0, i32 1, !dbg !2011
  %15 = load i32, i32* %14, align 8, !dbg !2011, !tbaa !1875
  %16 = bitcast %struct.msghdr* %6 to i8*, !dbg !2022
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #6, !dbg !2022
  %17 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 0, !dbg !2023
  store i8* null, i8** %17, align 8, !dbg !2024, !tbaa !1903
  %18 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 1, !dbg !2025
  store i32 0, i32* %18, align 8, !dbg !2026, !tbaa !1907
  %19 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 2, !dbg !2027
  %20 = bitcast %struct.iovec** %19 to i64*, !dbg !2028
  store i64 %13, i64* %20, align 8, !dbg !2028, !tbaa !1910
  %21 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 3, !dbg !2029
  store i32 %15, i32* %21, align 8, !dbg !2030, !tbaa !1913
  %22 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 4, !dbg !2031
  store i8* null, i8** %22, align 8, !dbg !2032, !tbaa !1916
  %23 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 5, !dbg !2033
  store i32 0, i32* %23, align 8, !dbg !2034, !tbaa !1919
  %24 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 6, !dbg !2035
  store i32 0, i32* %24, align 4, !dbg !2036, !tbaa !1922
  %25 = call i64 @lwip_recvmsg(i32 %11, %struct.msghdr* nonnull %6, i32 0) #10, !dbg !2038
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #6, !dbg !2039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2040
  %26 = trunc i64 %25 to i32, !dbg !2041
  %27 = icmp slt i32 %26, 0, !dbg !2042
  br i1 %27, label %28, label %49, !dbg !2044

; <label>:28:                                     ; preds = %4
  %29 = bitcast i32* %5 to i8*, !dbg !2045
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #6, !dbg !2045
  %30 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2048, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2051
  %31 = icmp ult i64 %30, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2052
  br i1 %31, label %38, label %32, !dbg !2052

; <label>:32:                                     ; preds = %28
  %33 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2053, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2056
  %34 = icmp ugt i64 %33, ptrtoint ([0 x i8]* @_end to i64), !dbg !2052
  br i1 %34, label %38, label %35, !dbg !2057

; <label>:35:                                     ; preds = %32
  %36 = call i32* @__errno() #10, !dbg !2058
  %37 = load i32, i32* %36, align 4, !dbg !2058, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2060
  store i32 %37, i32* %5, align 4, !dbg !2062, !tbaa !1492
  br label %47, !dbg !2062

; <label>:38:                                     ; preds = %32, %28
  %39 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2063, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2067
  %40 = and i64 %39, -65536, !dbg !2069
  %41 = or i64 %40, 4097, !dbg !2069
  %42 = add nsw i64 %41, -1, !dbg !2069
  %43 = inttoptr i64 %42 to i32*, !dbg !2070
  %44 = load i32, i32* %43, align 4096, !dbg !2071, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2072
  %45 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_GET_ERRNO\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i32 %44, i32 ()* nonnull @_SOCK_NET_GET_ERRNO) #6, !dbg !2073, !srcloc !1511
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %5, i64 %45) #6, !dbg !2074, !srcloc !1515
  %46 = load i32, i32* %5, align 4, !dbg !2075, !tbaa !1492
  br label %47

; <label>:47:                                     ; preds = %35, %38
  %48 = phi i32 [ %46, %38 ], [ %37, %35 ], !dbg !2075
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #6, !dbg !2076
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2077
  br label %55, !dbg !2078

; <label>:49:                                     ; preds = %4
  %50 = shl i64 %25, 32, !dbg !2079
  %51 = ashr exact i64 %50, 32, !dbg !2079
  %52 = getelementptr inbounds %struct.uio, %struct.uio* %2, i64 0, i32 3, !dbg !2080
  %53 = load i64, i64* %52, align 8, !dbg !2081, !tbaa !1968
  %54 = sub nsw i64 %53, %51, !dbg !2081
  store i64 %54, i64* %52, align 8, !dbg !2081, !tbaa !1968
  br label %55, !dbg !2082

; <label>:55:                                     ; preds = %49, %47
  %56 = phi i32 [ %48, %47 ], [ 0, %49 ], !dbg !2083
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2084
  ret i32 %56, !dbg !2084
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_readv(i32, %struct.iovec*, i32) local_unnamed_addr #0 !dbg !2013 {
  %4 = alloca %struct.msghdr, align 8
  %5 = bitcast %struct.msghdr* %4 to i8*, !dbg !2088
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #6, !dbg !2088
  %6 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 0, !dbg !2089
  store i8* null, i8** %6, align 8, !dbg !2090, !tbaa !1903
  %7 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 1, !dbg !2091
  store i32 0, i32* %7, align 8, !dbg !2092, !tbaa !1907
  %8 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 2, !dbg !2093
  store %struct.iovec* %1, %struct.iovec** %8, align 8, !dbg !2094, !tbaa !1910
  %9 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 3, !dbg !2095
  store i32 %2, i32* %9, align 8, !dbg !2096, !tbaa !1913
  %10 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 4, !dbg !2097
  store i8* null, i8** %10, align 8, !dbg !2098, !tbaa !1916
  %11 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 5, !dbg !2099
  store i32 0, i32* %11, align 8, !dbg !2100, !tbaa !1919
  %12 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 6, !dbg !2101
  store i32 0, i32* %12, align 4, !dbg !2102, !tbaa !1922
  %13 = call i64 @lwip_recvmsg(i32 %0, %struct.msghdr* nonnull %4, i32 0) #8, !dbg !2104
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #6, !dbg !2105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2106
  ret i64 %13, !dbg !2106
}

; Function Attrs: noredzone nounwind
define dso_local i32 @_sock_net_ioctl(%struct.vnode* nocapture readonly, %struct.vfscore_file* nocapture readnone, i64, i8* readonly) #0 !dbg !2107 {
  %5 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !2120
  %6 = bitcast i8** %5 to %struct.sock_net_file**, !dbg !2120
  %7 = load %struct.sock_net_file*, %struct.sock_net_file** %6, align 8, !dbg !2120, !tbaa !1402
  %8 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %7, i64 0, i32 1, !dbg !2121
  %9 = load i32, i32* %8, align 8, !dbg !2121, !tbaa !1421
  %10 = tail call i32 @lwip_ioctl(i32 %9, i64 %2, i8* %3) #8, !dbg !2122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2124
  ret i32 %10, !dbg !2124
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_ioctl(i32, i64, i8* readonly) local_unnamed_addr #0 !dbg !2125 {
  %4 = icmp ugt i32 %0, 63, !dbg !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2165
  br i1 %4, label %10, label %5, !dbg !2166

; <label>:5:                                      ; preds = %3
  %6 = sext i32 %0 to i64, !dbg !2167
  %7 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %6, i32 0, !dbg !2168
  %8 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !2168, !tbaa !1602
  %9 = icmp eq %struct.netconn* %8, null, !dbg !2169
  br i1 %9, label %10, label %26, !dbg !2170

; <label>:10:                                     ; preds = %5, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2171
  %11 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2172, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2175
  %12 = icmp ult i64 %11, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2176
  br i1 %12, label %18, label %13, !dbg !2176

; <label>:13:                                     ; preds = %10
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2177, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2180
  %15 = icmp ugt i64 %14, ptrtoint ([0 x i8]* @_end to i64), !dbg !2176
  br i1 %15, label %18, label %16, !dbg !2181

; <label>:16:                                     ; preds = %13
  %17 = tail call i32* @__errno() #10, !dbg !2184
  store i32 9, i32* %17, align 4, !dbg !2185, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2186
  br label %25, !dbg !2187

; <label>:18:                                     ; preds = %13, %10
  %19 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2188, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2192
  %20 = and i64 %19, -65536, !dbg !2194
  %21 = or i64 %20, 4097, !dbg !2194
  %22 = add nsw i64 %21, -1, !dbg !2194
  %23 = inttoptr i64 %22 to i32*, !dbg !2195
  %24 = load i32, i32* %23, align 4096, !dbg !2196, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2197
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %24, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2198, !srcloc !1640
  br label %25

; <label>:25:                                     ; preds = %18, %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2199
  br label %75, !dbg !2200

; <label>:26:                                     ; preds = %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2199
  %27 = icmp eq i64 %1, 21537, !dbg !2201
  br i1 %27, label %28, label %60, !dbg !2201

; <label>:28:                                     ; preds = %26
  %29 = icmp eq i8* %2, null, !dbg !2203
  br i1 %29, label %30, label %34, !dbg !2205

; <label>:30:                                     ; preds = %28
  %31 = getelementptr inbounds %struct.netconn, %struct.netconn* %8, i64 0, i32 8, !dbg !2206
  %32 = load i8, i8* %31, align 4, !dbg !2206, !tbaa !2211
  %33 = and i8 %32, -3, !dbg !2212
  br label %43, !dbg !2215

; <label>:34:                                     ; preds = %28
  %35 = bitcast i8* %2 to i32*, !dbg !2216
  %36 = load i32, i32* %35, align 4, !dbg !2217, !tbaa !1492
  %37 = icmp eq i32 %36, 0, !dbg !2217
  %38 = getelementptr inbounds %struct.netconn, %struct.netconn* %8, i64 0, i32 8, !dbg !2206
  %39 = load i8, i8* %38, align 4, !dbg !2206, !tbaa !2211
  %40 = and i8 %39, -3, !dbg !2212
  %41 = or i8 %39, 2, !dbg !2206
  %42 = select i1 %37, i8 %40, i8 %41, !dbg !2215
  br label %43, !dbg !2215

; <label>:43:                                     ; preds = %34, %30
  %44 = phi i8* [ %31, %30 ], [ %38, %34 ]
  %45 = phi i8 [ %33, %30 ], [ %42, %34 ]
  store i8 %45, i8* %44, align 4, !dbg !2212, !tbaa !2211
  %46 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2219, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2222
  %47 = icmp ult i64 %46, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2223
  br i1 %47, label %53, label %48, !dbg !2223

; <label>:48:                                     ; preds = %43
  %49 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2224, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2227
  %50 = icmp ugt i64 %49, ptrtoint ([0 x i8]* @_end to i64), !dbg !2223
  br i1 %50, label %53, label %51, !dbg !2228

; <label>:51:                                     ; preds = %48
  %52 = tail call i32* @__errno() #10, !dbg !2232
  store i32 0, i32* %52, align 4, !dbg !2233, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2234
  br label %75, !dbg !2235

; <label>:53:                                     ; preds = %48, %43
  %54 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2236, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2240
  %55 = and i64 %54, -65536, !dbg !2242
  %56 = or i64 %55, 4097, !dbg !2242
  %57 = add nsw i64 %56, -1, !dbg !2242
  %58 = inttoptr i64 %57 to i32*, !dbg !2243
  %59 = load i32, i32* %58, align 4096, !dbg !2244, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2245
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %59, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2246, !srcloc !2247
  br label %75

; <label>:60:                                     ; preds = %26
  %61 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2249, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2252
  %62 = icmp ult i64 %61, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2253
  br i1 %62, label %68, label %63, !dbg !2253

; <label>:63:                                     ; preds = %60
  %64 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2254, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2257
  %65 = icmp ugt i64 %64, ptrtoint ([0 x i8]* @_end to i64), !dbg !2253
  br i1 %65, label %68, label %66, !dbg !2258

; <label>:66:                                     ; preds = %63
  %67 = tail call i32* @__errno() #10, !dbg !2262
  store i32 88, i32* %67, align 4, !dbg !2263, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2264
  br label %75, !dbg !2265

; <label>:68:                                     ; preds = %63, %60
  %69 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2266, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2270
  %70 = and i64 %69, -65536, !dbg !2272
  %71 = or i64 %70, 4097, !dbg !2272
  %72 = add nsw i64 %71, -1, !dbg !2272
  %73 = inttoptr i64 %72 to i32*, !dbg !2273
  %74 = load i32, i32* %73, align 4096, !dbg !2274, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2275
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -88, i32 %74, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2276, !srcloc !2277
  br label %75

; <label>:75:                                     ; preds = %25, %66, %68, %51, %53
  %76 = phi i32 [ 0, %53 ], [ 0, %51 ], [ -1, %68 ], [ -1, %66 ], [ -1, %25 ], !dbg !2278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2281
  ret i32 %76, !dbg !2281
}

; Function Attrs: noredzone nounwind
define dso_local i32 @socket(i32, i32, i32) local_unnamed_addr #0 !dbg !2282 {
  %4 = tail call i32 @lwip_socket(i32 %0, i32 %1, i32 %2) #8, !dbg !2307
  %5 = icmp slt i32 %4, 0, !dbg !2308
  br i1 %5, label %26, label %6, !dbg !2310

; <label>:6:                                      ; preds = %3
  %7 = tail call fastcc i32 @sock_fd_alloc(i32 %4) #8, !dbg !2311
  %8 = icmp slt i32 %7, 0, !dbg !2312
  br i1 %8, label %9, label %26, !dbg !2313

; <label>:9:                                      ; preds = %6
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2314, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2317
  %11 = icmp ult i64 %10, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2318
  br i1 %11, label %18, label %12, !dbg !2318

; <label>:12:                                     ; preds = %9
  %13 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2319, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2322
  %14 = icmp ugt i64 %13, ptrtoint ([0 x i8]* @_end to i64), !dbg !2318
  br i1 %14, label %18, label %15, !dbg !2323

; <label>:15:                                     ; preds = %12
  %16 = sub nsw i32 0, %7, !dbg !2327
  %17 = tail call i32* @__errno() #10, !dbg !2328
  store i32 %16, i32* %17, align 4, !dbg !2329, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2330
  br label %28, !dbg !2331

; <label>:18:                                     ; preds = %12, %9
  %19 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2332, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2336
  %20 = and i64 %19, -65536, !dbg !2338
  %21 = or i64 %20, 4097, !dbg !2338
  %22 = add nsw i64 %21, -1, !dbg !2338
  %23 = inttoptr i64 %22 to i32*, !dbg !2339
  %24 = load i32, i32* %23, align 4096, !dbg !2340, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2341
  %25 = sext i32 %7 to i64, !dbg !2342
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %25, i32 %24, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2342, !srcloc !2343
  br label %28

; <label>:26:                                     ; preds = %6, %3, %28
  %27 = phi i32 [ -1, %28 ], [ -1, %3 ], [ %7, %6 ], !dbg !2344
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2345
  ret i32 %27, !dbg !2345

; <label>:28:                                     ; preds = %15, %18
  %29 = tail call i32 @lwip_close(i32 %4) #8, !dbg !2346
  br label %26, !dbg !2347
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_socket(i32, i32, i32) local_unnamed_addr #0 !dbg !2348 {
  switch i32 %1, label %20 [
    i32 3, label %4
    i32 2, label %9
    i32 1, label %16
  ], !dbg !2387

; <label>:4:                                      ; preds = %3
  %5 = icmp eq i32 %0, 2, !dbg !2388
  %6 = select i1 %5, i32 64, i32 72, !dbg !2388
  %7 = trunc i32 %2 to i8, !dbg !2389
  %8 = tail call %struct.netconn* @netconn_new_with_proto_and_callback(i32 %6, i8 zeroext %7, void (%struct.netconn*, i32, i16)* nonnull @event_callback) #10, !dbg !2390
  br label %35, !dbg !2392

; <label>:9:                                      ; preds = %3
  %10 = icmp eq i32 %0, 2, !dbg !2393
  %11 = icmp eq i32 %2, 136, !dbg !2393
  %12 = select i1 %11, i32 33, i32 32, !dbg !2393
  %13 = or i32 %12, 8, !dbg !2393
  %14 = select i1 %10, i32 %12, i32 %13, !dbg !2393
  %15 = tail call %struct.netconn* @netconn_new_with_proto_and_callback(i32 %14, i8 zeroext 0, void (%struct.netconn*, i32, i16)* nonnull @event_callback) #10, !dbg !2393
  br label %35, !dbg !2394

; <label>:16:                                     ; preds = %3
  %17 = icmp eq i32 %0, 2, !dbg !2395
  %18 = select i1 %17, i32 16, i32 24, !dbg !2395
  %19 = tail call %struct.netconn* @netconn_new_with_proto_and_callback(i32 %18, i8 zeroext 0, void (%struct.netconn*, i32, i16)* nonnull @event_callback) #10, !dbg !2395
  br label %35, !dbg !2396

; <label>:20:                                     ; preds = %3
  %21 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2397, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2400
  %22 = icmp ult i64 %21, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2401
  br i1 %22, label %28, label %23, !dbg !2401

; <label>:23:                                     ; preds = %20
  %24 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2402, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2405
  %25 = icmp ugt i64 %24, ptrtoint ([0 x i8]* @_end to i64), !dbg !2401
  br i1 %25, label %28, label %26, !dbg !2406

; <label>:26:                                     ; preds = %23
  %27 = tail call i32* @__errno() #10, !dbg !2410
  store i32 22, i32* %27, align 4, !dbg !2411, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2412
  br label %88, !dbg !2413

; <label>:28:                                     ; preds = %23, %20
  %29 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2414, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2418
  %30 = and i64 %29, -65536, !dbg !2420
  %31 = or i64 %30, 4097, !dbg !2420
  %32 = add nsw i64 %31, -1, !dbg !2420
  %33 = inttoptr i64 %32 to i32*, !dbg !2421
  %34 = load i32, i32* %33, align 4096, !dbg !2422, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2423
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -22, i32 %34, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2424, !srcloc !2425
  br label %88

; <label>:35:                                     ; preds = %16, %9, %4
  %36 = phi %struct.netconn* [ %19, %16 ], [ %15, %9 ], [ %8, %4 ], !dbg !2426
  %37 = icmp eq %struct.netconn* %36, null, !dbg !2427
  br i1 %37, label %38, label %53, !dbg !2428

; <label>:38:                                     ; preds = %35
  %39 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2429, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2432
  %40 = icmp ult i64 %39, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2433
  br i1 %40, label %46, label %41, !dbg !2433

; <label>:41:                                     ; preds = %38
  %42 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2434, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2437
  %43 = icmp ugt i64 %42, ptrtoint ([0 x i8]* @_end to i64), !dbg !2433
  br i1 %43, label %46, label %44, !dbg !2438

; <label>:44:                                     ; preds = %41
  %45 = tail call i32* @__errno() #10, !dbg !2442
  store i32 105, i32* %45, align 4, !dbg !2443, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2444
  br label %88, !dbg !2445

; <label>:46:                                     ; preds = %41, %38
  %47 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2446, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2450
  %48 = and i64 %47, -65536, !dbg !2452
  %49 = or i64 %48, 4097, !dbg !2452
  %50 = add nsw i64 %49, -1, !dbg !2452
  %51 = inttoptr i64 %50 to i32*, !dbg !2453
  %52 = load i32, i32* %51, align 4096, !dbg !2454, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2455
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -105, i32 %52, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2456, !srcloc !2457
  br label %88

; <label>:53:                                     ; preds = %35
  %54 = tail call fastcc i32 @alloc_socket(%struct.netconn* nonnull %36, i32 0) #8, !dbg !2458
  %55 = icmp eq i32 %54, -1, !dbg !2460
  br i1 %55, label %56, label %72, !dbg !2461

; <label>:56:                                     ; preds = %53
  %57 = tail call signext i8 @netconn_delete(%struct.netconn* nonnull %36) #10, !dbg !2462
  %58 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2463, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2466
  %59 = icmp ult i64 %58, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2467
  br i1 %59, label %65, label %60, !dbg !2467

; <label>:60:                                     ; preds = %56
  %61 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2468, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2471
  %62 = icmp ugt i64 %61, ptrtoint ([0 x i8]* @_end to i64), !dbg !2467
  br i1 %62, label %65, label %63, !dbg !2472

; <label>:63:                                     ; preds = %60
  %64 = tail call i32* @__errno() #10, !dbg !2476
  store i32 23, i32* %64, align 4, !dbg !2477, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2478
  br label %88, !dbg !2479

; <label>:65:                                     ; preds = %60, %56
  %66 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2480, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2484
  %67 = and i64 %66, -65536, !dbg !2486
  %68 = or i64 %67, 4097, !dbg !2486
  %69 = add nsw i64 %68, -1, !dbg !2486
  %70 = inttoptr i64 %69 to i32*, !dbg !2487
  %71 = load i32, i32* %70, align 4096, !dbg !2488, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2489
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -23, i32 %71, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2490, !srcloc !2491
  br label %88

; <label>:72:                                     ; preds = %53
  %73 = getelementptr inbounds %struct.netconn, %struct.netconn* %36, i64 0, i32 7, !dbg !2492
  store i32 %54, i32* %73, align 8, !dbg !2493, !tbaa !2494
  %74 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2495, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2498
  %75 = icmp ult i64 %74, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2499
  br i1 %75, label %81, label %76, !dbg !2499

; <label>:76:                                     ; preds = %72
  %77 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2500, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2503
  %78 = icmp ugt i64 %77, ptrtoint ([0 x i8]* @_end to i64), !dbg !2499
  br i1 %78, label %81, label %79, !dbg !2504

; <label>:79:                                     ; preds = %76
  %80 = tail call i32* @__errno() #10, !dbg !2508
  store i32 0, i32* %80, align 4, !dbg !2509, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2510
  br label %88, !dbg !2511

; <label>:81:                                     ; preds = %76, %72
  %82 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2512, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2516
  %83 = and i64 %82, -65536, !dbg !2518
  %84 = or i64 %83, 4097, !dbg !2518
  %85 = add nsw i64 %84, -1, !dbg !2518
  %86 = inttoptr i64 %85 to i32*, !dbg !2519
  %87 = load i32, i32* %86, align 4096, !dbg !2520, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2521
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %87, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2522, !srcloc !2523
  br label %88

; <label>:88:                                     ; preds = %79, %81, %63, %65, %44, %46, %26, %28
  %89 = phi i32 [ -1, %28 ], [ -1, %26 ], [ -1, %46 ], [ -1, %44 ], [ -1, %65 ], [ -1, %63 ], [ %54, %81 ], [ %54, %79 ], !dbg !2524
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2525
  ret i32 %89, !dbg !2525
}

; Function Attrs: noredzone nounwind
define internal fastcc i32 @sock_fd_alloc(i32) unnamed_addr #0 !dbg !1069 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.dentry*, align 8
  %5 = alloca %struct.vnode*, align 8
  %6 = bitcast i32* %2 to i8*, !dbg !2527
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !2527
  store i32 0, i32* %2, align 4, !dbg !2528, !tbaa !1492
  %7 = bitcast i32* %3 to i8*, !dbg !2529
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6, !dbg !2529
  %8 = bitcast %struct.dentry** %4 to i8*, !dbg !2532
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !2532
  %9 = bitcast %struct.vnode** %5 to i8*, !dbg !2533
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !2533
  %10 = ptrtoint %struct.vnode** %5 to i64, !dbg !2534
  %11 = add i64 %10, 65536, !dbg !2535
  %12 = inttoptr i64 %11 to %struct.vnode**, !dbg !2536
  %13 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2538, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2541
  %14 = icmp ult i64 %13, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2542
  br i1 %14, label %20, label %15, !dbg !2542

; <label>:15:                                     ; preds = %1
  %16 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2543, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2546
  %17 = icmp ugt i64 %16, ptrtoint ([0 x i8]* @_end to i64), !dbg !2542
  br i1 %17, label %20, label %18, !dbg !2547

; <label>:18:                                     ; preds = %15
  %19 = call i32 @vfscore_alloc_fd() #10, !dbg !2548
  store i32 %19, i32* %3, align 4, !dbg !2548, !tbaa !1492
  br label %29, !dbg !2548

; <label>:20:                                     ; preds = %15, %1
  %21 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2551, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2555
  %22 = and i64 %21, -65536, !dbg !2557
  %23 = or i64 %22, 4097, !dbg !2557
  %24 = add nsw i64 %23, -1, !dbg !2557
  %25 = inttoptr i64 %24 to i32*, !dbg !2558
  %26 = load i32, i32* %25, align 4096, !dbg !2559, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2560
  %27 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_alloc_fd\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i32 %26, i32 ()* nonnull @vfscore_alloc_fd) #6, !dbg !2561, !srcloc !2562
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %3, i64 %27) #6, !dbg !2563, !srcloc !2566
  %28 = load i32, i32* %3, align 4, !dbg !2567, !tbaa !1492
  br label %29

; <label>:29:                                     ; preds = %20, %18
  %30 = phi i32 [ %28, %20 ], [ %19, %18 ], !dbg !2567
  %31 = icmp slt i32 %30, 0, !dbg !2569
  br i1 %31, label %32, label %33, !dbg !2570

; <label>:32:                                     ; preds = %29
  store i32 -23, i32* %2, align 4, !dbg !2571, !tbaa !1492
  br label %285, !dbg !2573

; <label>:33:                                     ; preds = %29
  %34 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !2575, !tbaa !1426
  %35 = icmp eq %struct.uk_alloc* %34, null, !dbg !2585
  br i1 %35, label %36, label %38, !dbg !2587, !prof !1445

; <label>:36:                                     ; preds = %33
  %37 = call i32* @__errno() #10, !dbg !2588
  store i32 12, i32* %37, align 4, !dbg !2590, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2591
  br label %44, !dbg !2592

; <label>:38:                                     ; preds = %33
  %39 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %34, i64 0, i32 1, !dbg !2602
  %40 = bitcast {}** %39 to i8* (%struct.uk_alloc*, i64, i64)**, !dbg !2602
  %41 = load i8* (%struct.uk_alloc*, i64, i64)*, i8* (%struct.uk_alloc*, i64, i64)** %40, align 8, !dbg !2602, !tbaa !1426
  %42 = call i8* %41(%struct.uk_alloc* nonnull %34, i64 1, i64 16) #10, !dbg !2603
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2604
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2591
  %43 = icmp eq i8* %42, null, !dbg !2605
  br i1 %43, label %44, label %45, !dbg !2592

; <label>:44:                                     ; preds = %36, %38
  store i32 -12, i32* %2, align 4, !dbg !2607, !tbaa !1492
  br label %263, !dbg !2609

; <label>:45:                                     ; preds = %38
  %46 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !2610, !tbaa !1426
  %47 = icmp eq %struct.uk_alloc* %46, null, !dbg !2615
  br i1 %47, label %48, label %50, !dbg !2616, !prof !1445

; <label>:48:                                     ; preds = %45
  %49 = call i32* @__errno() #10, !dbg !2617
  store i32 12, i32* %49, align 4, !dbg !2618, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2619
  br label %56, !dbg !2620

; <label>:50:                                     ; preds = %45
  %51 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %46, i64 0, i32 1, !dbg !2625
  %52 = bitcast {}** %51 to i8* (%struct.uk_alloc*, i64, i64)**, !dbg !2625
  %53 = load i8* (%struct.uk_alloc*, i64, i64)*, i8* (%struct.uk_alloc*, i64, i64)** %52, align 8, !dbg !2625, !tbaa !1426
  %54 = call i8* %53(%struct.uk_alloc* nonnull %46, i64 1, i64 80) #10, !dbg !2626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2627
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2619
  %55 = icmp eq i8* %54, null, !dbg !2628
  br i1 %55, label %56, label %57, !dbg !2620

; <label>:56:                                     ; preds = %48, %50
  store i32 -12, i32* %2, align 4, !dbg !2630, !tbaa !1492
  br label %256, !dbg !2632

; <label>:57:                                     ; preds = %50
  %58 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2633, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2636
  %59 = icmp ult i64 %58, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2637
  br i1 %59, label %67, label %60, !dbg !2637

; <label>:60:                                     ; preds = %57
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2638, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2641
  %62 = icmp ugt i64 %61, ptrtoint ([0 x i8]* @_end to i64), !dbg !2637
  br i1 %62, label %67, label %63, !dbg !2642

; <label>:63:                                     ; preds = %60
  %64 = load i64, i64* @s_inode, align 8, !dbg !2643, !tbaa !2645
  %65 = add i64 %64, 1, !dbg !2643
  store i64 %65, i64* @s_inode, align 8, !dbg !2643, !tbaa !2645
  %66 = call i32 @vfscore_vget(%struct.mount* nonnull @s_mount, i64 %64, %struct.vnode** %12) #10, !dbg !2643
  store i32 %66, i32* %2, align 4, !dbg !2643, !tbaa !1492
  br label %78, !dbg !2643

; <label>:67:                                     ; preds = %60, %57
  %68 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2646, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2650
  %69 = and i64 %68, -65536, !dbg !2652
  %70 = or i64 %69, 4097, !dbg !2652
  %71 = add nsw i64 %70, -1, !dbg !2652
  %72 = inttoptr i64 %71 to i32*, !dbg !2653
  %73 = load i32, i32* %72, align 4096, !dbg !2654, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2655
  %74 = load i64, i64* @s_inode, align 8, !dbg !2656, !tbaa !2645
  %75 = add i64 %74, 1, !dbg !2656
  store i64 %75, i64* @s_inode, align 8, !dbg !2656, !tbaa !2645
  %76 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_vget\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 ptrtoint (%struct.mount* @s_mount to i64), i64 %74, i64 %11, i32 %73, i32 (%struct.mount*, i64, %struct.vnode**)* nonnull @vfscore_vget) #6, !dbg !2656, !srcloc !2657
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %2, i64 %76) #6, !dbg !2658, !srcloc !2661
  %77 = load i32, i32* %2, align 4, !dbg !2662, !tbaa !1492
  br label %78

; <label>:78:                                     ; preds = %63, %67
  %79 = phi i32 [ %66, %63 ], [ %77, %67 ], !dbg !2662
  %80 = icmp eq i32 %79, 0, !dbg !2662
  br i1 %80, label %82, label %81, !dbg !2665, !prof !1417

; <label>:81:                                     ; preds = %78
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0)) #8, !dbg !2666
  call void @ukplat_terminate(i32 3) #9, !dbg !2666
  unreachable, !dbg !2666

; <label>:82:                                     ; preds = %78
  %83 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2668, !tbaa !1426
  %84 = icmp eq %struct.vnode* %83, null, !dbg !2670
  br i1 %84, label %85, label %86, !dbg !2671

; <label>:85:                                     ; preds = %82
  store i32 -12, i32* %2, align 4, !dbg !2672, !tbaa !1492
  br label %249, !dbg !2674

; <label>:86:                                     ; preds = %82
  %87 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2675, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2678
  %88 = icmp ult i64 %87, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2679
  br i1 %88, label %117, label %89, !dbg !2679

; <label>:89:                                     ; preds = %86
  %90 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2680, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2683
  %91 = icmp ugt i64 %90, ptrtoint ([0 x i8]* @_end to i64), !dbg !2679
  br i1 %91, label %117, label %92, !dbg !2684

; <label>:92:                                     ; preds = %89
  %93 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2685, !tbaa !1426
  %94 = call i64 @ukplat_lcpu_save_irqf() #10, !dbg !2700
  %95 = getelementptr inbounds %struct.vnode, %struct.vnode* %93, i64 0, i32 9, i32 0, !dbg !2702
  %96 = load i32, i32* %95, align 8, !dbg !2702, !tbaa !2705
  %97 = icmp slt i32 %96, 1, !dbg !2702
  br i1 %97, label %98, label %99, !dbg !2706, !prof !1445

; <label>:98:                                     ; preds = %92
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0)) #10, !dbg !2707
  call void @ukplat_terminate(i32 3) #9, !dbg !2707
  unreachable, !dbg !2707

; <label>:99:                                     ; preds = %92
  %100 = add nsw i32 %96, -1, !dbg !2709
  store i32 %100, i32* %95, align 8, !dbg !2709, !tbaa !2705
  %101 = icmp eq i32 %100, 0, !dbg !2711
  br i1 %101, label %102, label %116, !dbg !2712

; <label>:102:                                    ; preds = %99
  %103 = getelementptr inbounds %struct.vnode, %struct.vnode* %93, i64 0, i32 9, i32 1, !dbg !2713
  store %struct.uk_thread* null, %struct.uk_thread** %103, align 8, !dbg !2715, !tbaa !2716
  %104 = call i64 @ukplat_lcpu_save_irqf() #10, !dbg !2729
  %105 = getelementptr inbounds %struct.vnode, %struct.vnode* %93, i64 0, i32 9, i32 2, i32 0, !dbg !2731
  %106 = load %struct.uk_waitq_entry*, %struct.uk_waitq_entry** %105, align 8, !dbg !2731, !tbaa !2733
  %107 = icmp eq %struct.uk_waitq_entry* %106, null, !dbg !2735
  br i1 %107, label %115, label %108, !dbg !2735

; <label>:108:                                    ; preds = %102, %108
  %109 = phi %struct.uk_waitq_entry* [ %111, %108 ], [ %106, %102 ]
  %110 = getelementptr inbounds %struct.uk_waitq_entry, %struct.uk_waitq_entry* %109, i64 0, i32 2, i32 0, !dbg !2735
  %111 = load %struct.uk_waitq_entry*, %struct.uk_waitq_entry** %110, align 8, !dbg !2735, !tbaa !2737
  %112 = getelementptr inbounds %struct.uk_waitq_entry, %struct.uk_waitq_entry* %109, i64 0, i32 1, !dbg !2741
  %113 = load %struct.uk_thread*, %struct.uk_thread** %112, align 8, !dbg !2741, !tbaa !2742
  call void @uk_thread_wake(%struct.uk_thread* %113) #10, !dbg !2743
  %114 = icmp eq %struct.uk_waitq_entry* %111, null, !dbg !2735
  br i1 %114, label %115, label %108, !dbg !2735, !llvm.loop !2744

; <label>:115:                                    ; preds = %108, %102
  call void @ukplat_lcpu_restore_irqf(i64 %104) #10, !dbg !2747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2748
  br label %116, !dbg !2749

; <label>:116:                                    ; preds = %99, %115
  call void @ukplat_lcpu_restore_irqf(i64 %94) #10, !dbg !2750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2751
  br label %127, !dbg !2685

; <label>:117:                                    ; preds = %89, %86
  %118 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2752, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2756
  %119 = and i64 %118, -65536, !dbg !2758
  %120 = or i64 %119, 4097, !dbg !2758
  %121 = add nsw i64 %120, -1, !dbg !2758
  %122 = inttoptr i64 %121 to i32*, !dbg !2759
  %123 = load i32, i32* %122, align 4096, !dbg !2760, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2761
  %124 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2762, !tbaa !1426
  %125 = getelementptr inbounds %struct.vnode, %struct.vnode* %124, i64 0, i32 9, !dbg !2762
  %126 = ptrtoint %struct.uk_mutex* %125 to i64, !dbg !2762
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call uk_mutex_unlock\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %126, i32 %123, void (%struct.uk_mutex*)* nonnull @uk_mutex_unlock) #6, !dbg !2762, !srcloc !2763
  br label %127

; <label>:127:                                    ; preds = %116, %117
  %128 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2764, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2767
  %129 = icmp ult i64 %128, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2768
  br i1 %129, label %136, label %130, !dbg !2768

; <label>:130:                                    ; preds = %127
  %131 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2769, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2772
  %132 = icmp ugt i64 %131, ptrtoint ([0 x i8]* @_end to i64), !dbg !2768
  br i1 %132, label %136, label %133, !dbg !2773

; <label>:133:                                    ; preds = %130
  %134 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2774, !tbaa !1426
  %135 = call %struct.dentry* @dentry_alloc(%struct.dentry* null, %struct.vnode* %134, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @sock_fd_alloc.__str, i64 0, i64 0)) #10, !dbg !2774
  store %struct.dentry* %135, %struct.dentry** %4, align 8, !dbg !2774, !tbaa !1426
  br label %147, !dbg !2774

; <label>:136:                                    ; preds = %130, %127
  %137 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2777, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2781
  %138 = and i64 %137, -65536, !dbg !2783
  %139 = or i64 %138, 4097, !dbg !2783
  %140 = add nsw i64 %139, -1, !dbg !2783
  %141 = inttoptr i64 %140 to i32*, !dbg !2784
  %142 = load i32, i32* %141, align 4096, !dbg !2785, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2786
  %143 = inttoptr i64 %11 to i64*, !dbg !2787
  %144 = load i64, i64* %143, align 8, !dbg !2787, !tbaa !1426
  %145 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call dentry_alloc\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i64 %144, i64 ptrtoint ([2 x i8]* @sock_fd_alloc.__str.23 to i64), i32 %142, %struct.dentry* (%struct.dentry*, %struct.vnode*, i8*)* nonnull @dentry_alloc) #6, !dbg !2787, !srcloc !2788
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.dentry** nonnull %4, i64 %145) #6, !dbg !2789, !srcloc !2793
  %146 = load %struct.dentry*, %struct.dentry** %4, align 8, !dbg !2794, !tbaa !1426
  br label %147

; <label>:147:                                    ; preds = %136, %133
  %148 = phi %struct.dentry* [ %146, %136 ], [ %135, %133 ]
  %149 = icmp eq %struct.dentry* %148, null, !dbg !2794
  br i1 %149, label %150, label %151, !dbg !2796

; <label>:150:                                    ; preds = %147
  store i32 -12, i32* %2, align 4, !dbg !2797, !tbaa !1492
  br label %232, !dbg !2799

; <label>:151:                                    ; preds = %147
  %152 = ptrtoint %struct.dentry* %148 to i64
  %153 = load i32, i32* %3, align 4, !dbg !2800, !tbaa !1492
  %154 = bitcast i8* %54 to i32*, !dbg !2801
  store i32 %153, i32* %154, align 8, !dbg !2802, !tbaa !2803
  %155 = getelementptr inbounds i8, i8* %54, i64 4, !dbg !2805
  %156 = bitcast i8* %155 to i32*, !dbg !2805
  store i32 3, i32* %156, align 4, !dbg !2806, !tbaa !2807
  %157 = getelementptr inbounds i8, i8* %54, i64 8, !dbg !2808
  %158 = bitcast i8* %157 to i32*, !dbg !2808
  store i32 1, i32* %158, align 8, !dbg !2809, !tbaa !2810
  %159 = getelementptr inbounds i8, i8* %54, i64 24, !dbg !2811
  %160 = bitcast i8* %159 to i8**, !dbg !2811
  store i8* %42, i8** %160, align 8, !dbg !2812, !tbaa !2813
  %161 = bitcast %struct.dentry** %4 to i64*, !dbg !2814
  %162 = getelementptr inbounds i8, i8* %54, i64 40, !dbg !2815
  %163 = bitcast i8* %162 to i64*, !dbg !2816
  store i64 %152, i64* %163, align 8, !dbg !2816, !tbaa !2817
  %164 = getelementptr inbounds i8, i8* %54, i64 32, !dbg !2818
  %165 = bitcast i8* %164 to i32*, !dbg !2818
  store i32 1, i32* %165, align 8, !dbg !2819, !tbaa !2820
  %166 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2821, !tbaa !1426
  %167 = getelementptr inbounds %struct.vnode, %struct.vnode* %166, i64 0, i32 11, !dbg !2822
  store i8* %42, i8** %167, align 8, !dbg !2823, !tbaa !1402
  %168 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2824, !tbaa !1426
  %169 = getelementptr inbounds %struct.vnode, %struct.vnode* %168, i64 0, i32 5, !dbg !2825
  store i32 6, i32* %169, align 4, !dbg !2826, !tbaa !2827
  %170 = bitcast i8* %42 to %struct.vfscore_file**, !dbg !2828
  %171 = bitcast i8* %42 to i8**, !dbg !2829
  store i8* %54, i8** %171, align 8, !dbg !2829, !tbaa !2830
  %172 = getelementptr inbounds i8, i8* %42, i64 8, !dbg !2831
  %173 = bitcast i8* %172 to i32*, !dbg !2831
  store i32 %0, i32* %173, align 8, !dbg !2832, !tbaa !1421
  %174 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2833, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2836
  %175 = icmp ult i64 %174, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2837
  br i1 %175, label %183, label %176, !dbg !2837

; <label>:176:                                    ; preds = %151
  %177 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2838, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2841
  %178 = icmp ugt i64 %177, ptrtoint ([0 x i8]* @_end to i64), !dbg !2837
  br i1 %178, label %183, label %179, !dbg !2842

; <label>:179:                                    ; preds = %176
  %180 = load i32, i32* %3, align 4, !dbg !2843, !tbaa !1492
  %181 = load %struct.vfscore_file*, %struct.vfscore_file** %170, align 8, !dbg !2843, !tbaa !2830
  %182 = call i32 @vfscore_install_fd(i32 %180, %struct.vfscore_file* %181) #10, !dbg !2843
  store i32 %182, i32* %2, align 4, !dbg !2843, !tbaa !1492
  br label %196, !dbg !2843

; <label>:183:                                    ; preds = %176, %151
  %184 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2845, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2849
  %185 = and i64 %184, -65536, !dbg !2851
  %186 = or i64 %185, 4097, !dbg !2851
  %187 = add nsw i64 %186, -1, !dbg !2851
  %188 = inttoptr i64 %187 to i32*, !dbg !2852
  %189 = load i32, i32* %188, align 4096, !dbg !2853, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2854
  %190 = load i32, i32* %3, align 4, !dbg !2855, !tbaa !1492
  %191 = sext i32 %190 to i64, !dbg !2855
  %192 = bitcast i8* %42 to i64*, !dbg !2855
  %193 = load i64, i64* %192, align 8, !dbg !2855, !tbaa !2830
  %194 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_install_fd\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %191, i64 %193, i32 %189, i32 (i32, %struct.vfscore_file*)* nonnull @vfscore_install_fd) #6, !dbg !2855, !srcloc !2856
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %2, i64 %194) #6, !dbg !2857, !srcloc !2860
  %195 = load i32, i32* %2, align 4, !dbg !2861, !tbaa !1492
  br label %196

; <label>:196:                                    ; preds = %183, %179
  %197 = phi i32 [ %195, %183 ], [ %182, %179 ], !dbg !2861
  %198 = icmp eq i32 %197, 0, !dbg !2861
  %199 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2863, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2866
  %200 = icmp uge i64 %199, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2867
  br i1 %198, label %201, label %218, !dbg !2868

; <label>:201:                                    ; preds = %196
  br i1 %200, label %202, label %207, !dbg !2869

; <label>:202:                                    ; preds = %201
  %203 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2870, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2873
  %204 = icmp ugt i64 %203, ptrtoint ([0 x i8]* @_end to i64), !dbg !2869
  br i1 %204, label %207, label %205, !dbg !2874

; <label>:205:                                    ; preds = %202
  %206 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2875, !tbaa !1426
  call void @vrele(%struct.vnode* %206) #10, !dbg !2875
  br label %216, !dbg !2875

; <label>:207:                                    ; preds = %202, %201
  %208 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2877, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2881
  %209 = and i64 %208, -65536, !dbg !2883
  %210 = or i64 %209, 4097, !dbg !2883
  %211 = add nsw i64 %210, -1, !dbg !2883
  %212 = inttoptr i64 %211 to i32*, !dbg !2884
  %213 = load i32, i32* %212, align 4096, !dbg !2885, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2886
  %214 = inttoptr i64 %11 to i64*, !dbg !2887
  %215 = load i64, i64* %214, align 8, !dbg !2887, !tbaa !1426
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vrele\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %215, i32 %213, void (%struct.vnode*)* nonnull @vrele) #6, !dbg !2887, !srcloc !2888
  br label %216

; <label>:216:                                    ; preds = %207, %205
  %217 = load i32, i32* %3, align 4, !dbg !2889, !tbaa !1492
  br label %285, !dbg !2890

; <label>:218:                                    ; preds = %196
  br i1 %200, label %219, label %224, !dbg !2891

; <label>:219:                                    ; preds = %218
  %220 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2892, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2895
  %221 = icmp ugt i64 %220, ptrtoint ([0 x i8]* @_end to i64), !dbg !2891
  br i1 %221, label %224, label %222, !dbg !2896

; <label>:222:                                    ; preds = %219
  %223 = load %struct.dentry*, %struct.dentry** %4, align 8, !dbg !2897, !tbaa !1426
  call void @drele(%struct.dentry* %223) #10, !dbg !2897
  br label %232, !dbg !2897

; <label>:224:                                    ; preds = %219, %218
  %225 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2899, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2903
  %226 = and i64 %225, -65536, !dbg !2905
  %227 = or i64 %226, 4097, !dbg !2905
  %228 = add nsw i64 %227, -1, !dbg !2905
  %229 = inttoptr i64 %228 to i32*, !dbg !2906
  %230 = load i32, i32* %229, align 4096, !dbg !2907, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2908
  %231 = load i64, i64* %161, align 8, !dbg !2909, !tbaa !1426
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call drele\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %231, i32 %230, void (%struct.dentry*)* nonnull @drele) #6, !dbg !2909, !srcloc !2910
  br label %232

; <label>:232:                                    ; preds = %150, %224, %222
  %233 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2911, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2914
  %234 = icmp ult i64 %233, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2915
  br i1 %234, label %240, label %235, !dbg !2915

; <label>:235:                                    ; preds = %232
  %236 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2916, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2919
  %237 = icmp ugt i64 %236, ptrtoint ([0 x i8]* @_end to i64), !dbg !2915
  br i1 %237, label %240, label %238, !dbg !2920

; <label>:238:                                    ; preds = %235
  %239 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2921, !tbaa !1426
  call void @vrele(%struct.vnode* %239) #10, !dbg !2921
  br label %249, !dbg !2921

; <label>:240:                                    ; preds = %235, %232
  %241 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2923, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2927
  %242 = and i64 %241, -65536, !dbg !2929
  %243 = or i64 %242, 4097, !dbg !2929
  %244 = add nsw i64 %243, -1, !dbg !2929
  %245 = inttoptr i64 %244 to i32*, !dbg !2930
  %246 = load i32, i32* %245, align 4096, !dbg !2931, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2932
  %247 = inttoptr i64 %11 to i64*, !dbg !2933
  %248 = load i64, i64* %247, align 8, !dbg !2933, !tbaa !1426
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vrele\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %248, i32 %246, void (%struct.vnode*)* nonnull @vrele) #6, !dbg !2933, !srcloc !2934
  br label %249

; <label>:249:                                    ; preds = %238, %240, %85
  %250 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !2935, !tbaa !1426
  %251 = icmp eq %struct.uk_alloc* %250, null, !dbg !2942
  br i1 %251, label %252, label %253, !dbg !2943, !prof !1445

; <label>:252:                                    ; preds = %249
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !2944
  call void @ukplat_terminate(i32 3) #9, !dbg !2944
  unreachable, !dbg !2944

; <label>:253:                                    ; preds = %249
  %254 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %250, i64 0, i32 5, !dbg !2945
  %255 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %254, align 8, !dbg !2945, !tbaa !1426
  call void %255(%struct.uk_alloc* nonnull %250, i8* nonnull %54) #10, !dbg !2946
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2947
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2948
  br label %256, !dbg !2949

; <label>:256:                                    ; preds = %253, %56
  %257 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !2950, !tbaa !1426
  %258 = icmp eq %struct.uk_alloc* %257, null, !dbg !2957
  br i1 %258, label %259, label %260, !dbg !2958, !prof !1445

; <label>:259:                                    ; preds = %256
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !2959
  call void @ukplat_terminate(i32 3) #9, !dbg !2959
  unreachable, !dbg !2959

; <label>:260:                                    ; preds = %256
  %261 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %257, i64 0, i32 5, !dbg !2960
  %262 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %261, align 8, !dbg !2960, !tbaa !1426
  call void %262(%struct.uk_alloc* nonnull %257, i8* nonnull %42) #10, !dbg !2961
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2962
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2963
  br label %263, !dbg !2964

; <label>:263:                                    ; preds = %44, %260
  %264 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2965, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2968
  %265 = icmp ult i64 %264, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2969
  br i1 %265, label %272, label %266, !dbg !2969

; <label>:266:                                    ; preds = %263
  %267 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2970, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2973
  %268 = icmp ugt i64 %267, ptrtoint ([0 x i8]* @_end to i64), !dbg !2969
  br i1 %268, label %272, label %269, !dbg !2974

; <label>:269:                                    ; preds = %266
  %270 = load i32, i32* %3, align 4, !dbg !2975, !tbaa !1492
  %271 = call i32 @vfscore_put_fd(i32 %270) #10, !dbg !2975
  br label %281, !dbg !2975

; <label>:272:                                    ; preds = %266, %263
  %273 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2977, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2981
  %274 = and i64 %273, -65536, !dbg !2983
  %275 = or i64 %274, 4097, !dbg !2983
  %276 = add nsw i64 %275, -1, !dbg !2983
  %277 = inttoptr i64 %276 to i32*, !dbg !2984
  %278 = load i32, i32* %277, align 4096, !dbg !2985, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2986
  %279 = load i32, i32* %3, align 4, !dbg !2987, !tbaa !1492
  %280 = sext i32 %279 to i64, !dbg !2987
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_fd\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %280, i32 %278, i32 (i32)* nonnull @vfscore_put_fd) #6, !dbg !2987, !srcloc !2988
  br label %281

; <label>:281:                                    ; preds = %272, %269
  %282 = load i32, i32* %2, align 4, !dbg !2989, !tbaa !1492
  %283 = icmp sgt i32 %282, -1, !dbg !2989
  br i1 %283, label %284, label %285, !dbg !2573, !prof !1445

; <label>:284:                                    ; preds = %281
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #8, !dbg !2991
  call void @ukplat_terminate(i32 3) #9, !dbg !2991
  unreachable, !dbg !2991

; <label>:285:                                    ; preds = %32, %281, %216
  %286 = phi i32 [ %217, %216 ], [ %282, %281 ], [ -23, %32 ], !dbg !2993
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !2994
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !2994
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6, !dbg !2994
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !2994
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2994
  ret i32 %286, !dbg !2994
}

; Function Attrs: inlinehint noredzone nounwind
define internal void @_SOCK_NET_SET_ERRNO(i32) #3 !dbg !1620 {
  %2 = sub nsw i32 0, %0, !dbg !2996
  %3 = tail call i32* @__errno() #10, !dbg !2997
  store i32 %2, i32* %3, align 4, !dbg !2998, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2999
  ret void, !dbg !2999
}

; Function Attrs: noredzone nounwind
define dso_local i32 @accept(i32, %struct.sockaddr*, i32*) local_unnamed_addr #0 !dbg !3000 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !3047
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !3047
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3048, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3051
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3052
  br i1 %7, label %30, label %8, !dbg !3052

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3053, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3056
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !3052
  br i1 %10, label %30, label %11, !dbg !3057

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !3069
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !3071
  br i1 %13, label %26, label %14, !dbg !3073

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !3074
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !3074, !tbaa !2817
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !3076
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !3076, !tbaa !3077
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !3080
  %20 = load i32, i32* %19, align 4, !dbg !3080, !tbaa !2827
  %21 = icmp eq i32 %20, 6, !dbg !3081
  br i1 %21, label %22, label %26, !dbg !3082

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !3083
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !3083
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !3083, !tbaa !2813
  br label %26, !dbg !3084

; <label>:26:                                     ; preds = %11, %14, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !3085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3087
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !3089, !tbaa !1426
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !3089
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !3090
  br label %42, !dbg !3089

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3091, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3095
  %32 = and i64 %31, -65536, !dbg !3097
  %33 = or i64 %32, 4097, !dbg !3097
  %34 = add nsw i64 %33, -1, !dbg !3097
  %35 = inttoptr i64 %34 to i32*, !dbg !3098
  %36 = load i32, i32* %35, align 4096, !dbg !3099, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3100
  %37 = sext i32 %0 to i64, !dbg !3101
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !3101, !srcloc !3102
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !3103, !srcloc !3107
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !3090, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !3090
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !3090
  %46 = add i64 %45, 512, !dbg !3090
  %47 = icmp ult i64 %46, 513, !dbg !3090
  br i1 %47, label %48, label %69, !dbg !3090

; <label>:48:                                     ; preds = %42
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3108, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3111
  %50 = icmp ult i64 %49, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3112
  br i1 %50, label %59, label %51, !dbg !3112

; <label>:51:                                     ; preds = %48
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3113, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3116
  %53 = icmp ugt i64 %52, ptrtoint ([0 x i8]* @_end to i64), !dbg !3112
  br i1 %53, label %59, label %54, !dbg !3117

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %43, align 8, !dbg !3118, !tbaa !1426
  %56 = trunc i64 %55 to i32, !dbg !3118
  %57 = sub nsw i32 0, %56, !dbg !3122
  %58 = call i32* @__errno() #10, !dbg !3123
  store i32 %57, i32* %58, align 4, !dbg !3124, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3125
  br label %115, !dbg !3118

; <label>:59:                                     ; preds = %51, %48
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3126, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3130
  %61 = and i64 %60, -65536, !dbg !3132
  %62 = or i64 %61, 4097, !dbg !3132
  %63 = add nsw i64 %62, -1, !dbg !3132
  %64 = inttoptr i64 %63 to i32*, !dbg !3133
  %65 = load i32, i32* %64, align 4096, !dbg !3134, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3135
  %66 = load i64, i64* %43, align 8, !dbg !3136, !tbaa !1426
  %67 = shl i64 %66, 32, !dbg !3136
  %68 = ashr exact i64 %67, 32, !dbg !3136
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %68, i32 %65, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3136, !srcloc !3137
  br label %115

; <label>:69:                                     ; preds = %42
  %70 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !3138
  %71 = load i32, i32* %70, align 8, !dbg !3138, !tbaa !1421
  %72 = call i32 @lwip_accept(i32 %71, %struct.sockaddr* %1, i32* %2) #8, !dbg !3139
  %73 = icmp slt i32 %72, 0, !dbg !3141
  br i1 %73, label %94, label %74, !dbg !3143

; <label>:74:                                     ; preds = %69
  %75 = call fastcc i32 @sock_fd_alloc(i32 %72) #8, !dbg !3144
  %76 = icmp slt i32 %75, 0, !dbg !3146
  br i1 %76, label %77, label %94, !dbg !3147

; <label>:77:                                     ; preds = %74
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3148, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3151
  %79 = icmp ult i64 %78, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3152
  br i1 %79, label %86, label %80, !dbg !3152

; <label>:80:                                     ; preds = %77
  %81 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3153, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3156
  %82 = icmp ugt i64 %81, ptrtoint ([0 x i8]* @_end to i64), !dbg !3152
  br i1 %82, label %86, label %83, !dbg !3157

; <label>:83:                                     ; preds = %80
  %84 = sub nsw i32 0, %75, !dbg !3161
  %85 = call i32* @__errno() #10, !dbg !3162
  store i32 %84, i32* %85, align 4, !dbg !3163, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3164
  br label %117, !dbg !3165

; <label>:86:                                     ; preds = %80, %77
  %87 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3166, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3170
  %88 = and i64 %87, -65536, !dbg !3172
  %89 = or i64 %88, 4097, !dbg !3172
  %90 = add nsw i64 %89, -1, !dbg !3172
  %91 = inttoptr i64 %90 to i32*, !dbg !3173
  %92 = load i32, i32* %91, align 4096, !dbg !3174, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3175
  %93 = sext i32 %75 to i64, !dbg !3176
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %93, i32 %92, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3176, !srcloc !3177
  br label %117

; <label>:94:                                     ; preds = %74, %69, %117
  %95 = phi i32 [ -1, %117 ], [ -1, %69 ], [ %75, %74 ], !dbg !3178
  %96 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3179, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3182
  %97 = icmp ult i64 %96, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3183
  br i1 %97, label %105, label %98, !dbg !3183

; <label>:98:                                     ; preds = %94
  %99 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3184, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3187
  %100 = icmp ugt i64 %99, ptrtoint ([0 x i8]* @_end to i64), !dbg !3183
  br i1 %100, label %105, label %101, !dbg !3188

; <label>:101:                                    ; preds = %98
  %102 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !3189, !tbaa !1426
  %103 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %102, i64 0, i32 0, !dbg !3189
  %104 = load %struct.vfscore_file*, %struct.vfscore_file** %103, align 8, !dbg !3189, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %104) #10, !dbg !3189
  br label %115, !dbg !3189

; <label>:105:                                    ; preds = %98, %94
  %106 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3191, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3195
  %107 = and i64 %106, -65536, !dbg !3197
  %108 = or i64 %107, 4097, !dbg !3197
  %109 = add nsw i64 %108, -1, !dbg !3197
  %110 = inttoptr i64 %109 to i32*, !dbg !3198
  %111 = load i32, i32* %110, align 4096, !dbg !3199, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3200
  %112 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !3201
  %113 = load i64*, i64** %112, align 8, !dbg !3201, !tbaa !1426
  %114 = load i64, i64* %113, align 8, !dbg !3201, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %114, i32 %111, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !3201, !srcloc !3202
  br label %115

; <label>:115:                                    ; preds = %101, %105, %54, %59
  %116 = phi i32 [ -1, %54 ], [ -1, %59 ], [ %95, %101 ], [ %95, %105 ], !dbg !3203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !3205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3206
  ret i32 %116, !dbg !3206

; <label>:117:                                    ; preds = %83, %86
  %118 = call i32 @lwip_close(i32 %72) #8, !dbg !3207
  br label %94, !dbg !3208
}

; Function Attrs: inlinehint noredzone nounwind
define internal %struct.sock_net_file* @sock_net_file_get(i32) #3 !dbg !3059 {
  %2 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !3211
  %3 = icmp eq %struct.vfscore_file* %2, null, !dbg !3213
  br i1 %3, label %16, label %4, !dbg !3214

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %2, i64 0, i32 6, !dbg !3215
  %6 = load %struct.dentry*, %struct.dentry** %5, align 8, !dbg !3215, !tbaa !2817
  %7 = getelementptr inbounds %struct.dentry, %struct.dentry* %6, i64 0, i32 3, !dbg !3216
  %8 = load %struct.vnode*, %struct.vnode** %7, align 8, !dbg !3216, !tbaa !3077
  %9 = getelementptr inbounds %struct.vnode, %struct.vnode* %8, i64 0, i32 5, !dbg !3217
  %10 = load i32, i32* %9, align 4, !dbg !3217, !tbaa !2827
  %11 = icmp eq i32 %10, 6, !dbg !3218
  br i1 %11, label %12, label %16, !dbg !3219

; <label>:12:                                     ; preds = %4
  %13 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %2, i64 0, i32 4, !dbg !3220
  %14 = bitcast i8** %13 to %struct.sock_net_file**, !dbg !3220
  %15 = load %struct.sock_net_file*, %struct.sock_net_file** %14, align 8, !dbg !3220, !tbaa !2813
  br label %16, !dbg !3221

; <label>:16:                                     ; preds = %4, %1, %12
  %17 = phi %struct.sock_net_file* [ %15, %12 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %1 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %4 ], !dbg !3222
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3223
  ret %struct.sock_net_file* %17, !dbg !3223
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_accept(i32, %struct.sockaddr*, i32*) local_unnamed_addr #0 !dbg !3224 {
  %4 = alloca %struct.netconn*, align 8
  %5 = alloca %struct.ip_addr, align 16
  %6 = alloca i16, align 2
  %7 = alloca %union.sockaddr_aligned, align 4
  %8 = bitcast %struct.netconn** %4 to i8*, !dbg !3308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !3308
  %9 = bitcast %struct.ip_addr* %5 to i8*, !dbg !3309
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6, !dbg !3309
  %10 = bitcast i16* %6 to i8*, !dbg !3310
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #6, !dbg !3310
  store i16 0, i16* %6, align 2, !dbg !3311, !tbaa !3312
  %11 = icmp ugt i32 %0, 63, !dbg !3322
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3324
  br i1 %11, label %17, label %12, !dbg !3325

; <label>:12:                                     ; preds = %3
  %13 = sext i32 %0 to i64, !dbg !3326
  %14 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %13, i32 0, !dbg !3327
  %15 = load %struct.netconn*, %struct.netconn** %14, align 8, !dbg !3327, !tbaa !1602
  %16 = icmp eq %struct.netconn* %15, null, !dbg !3328
  br i1 %16, label %17, label %33, !dbg !3329

; <label>:17:                                     ; preds = %12, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3330
  %18 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3331, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3334
  %19 = icmp ult i64 %18, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3335
  br i1 %19, label %25, label %20, !dbg !3335

; <label>:20:                                     ; preds = %17
  %21 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3336, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3339
  %22 = icmp ugt i64 %21, ptrtoint ([0 x i8]* @_end to i64), !dbg !3335
  br i1 %22, label %25, label %23, !dbg !3340

; <label>:23:                                     ; preds = %20
  %24 = tail call i32* @__errno() #10, !dbg !3343
  store i32 9, i32* %24, align 4, !dbg !3344, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3345
  br label %32, !dbg !3346

; <label>:25:                                     ; preds = %20, %17
  %26 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3347, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3351
  %27 = and i64 %26, -65536, !dbg !3353
  %28 = or i64 %27, 4097, !dbg !3353
  %29 = add nsw i64 %28, -1, !dbg !3353
  %30 = inttoptr i64 %29 to i32*, !dbg !3354
  %31 = load i32, i32* %30, align 4096, !dbg !3355, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3356
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %31, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3357, !srcloc !1640
  br label %32

; <label>:32:                                     ; preds = %25, %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3358
  br label %241, !dbg !3359

; <label>:33:                                     ; preds = %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3358
  %34 = call signext i8 @netconn_accept(%struct.netconn* nonnull %15, %struct.netconn** nonnull %4) #10, !dbg !3361
  %35 = icmp eq i8 %34, 0, !dbg !3363
  br i1 %35, label %92, label %36, !dbg !3364

; <label>:36:                                     ; preds = %33
  %37 = load %struct.netconn*, %struct.netconn** %14, align 8, !dbg !3365, !tbaa !1602
  %38 = getelementptr inbounds %struct.netconn, %struct.netconn* %37, i64 0, i32 0, !dbg !3365
  %39 = load i32, i32* %38, align 8, !dbg !3365, !tbaa !1647
  %40 = and i32 %39, 240, !dbg !3365
  %41 = icmp eq i32 %40, 16, !dbg !3366
  br i1 %41, label %57, label %42, !dbg !3367

; <label>:42:                                     ; preds = %36
  %43 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3369, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3372
  %44 = icmp ult i64 %43, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3373
  br i1 %44, label %50, label %45, !dbg !3373

; <label>:45:                                     ; preds = %42
  %46 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3374, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3377
  %47 = icmp ugt i64 %46, ptrtoint ([0 x i8]* @_end to i64), !dbg !3373
  br i1 %47, label %50, label %48, !dbg !3378

; <label>:48:                                     ; preds = %45
  %49 = call i32* @__errno() #10, !dbg !3382
  store i32 95, i32* %49, align 4, !dbg !3383, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3384
  br label %241, !dbg !3385

; <label>:50:                                     ; preds = %45, %42
  %51 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3386, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3390
  %52 = and i64 %51, -65536, !dbg !3392
  %53 = or i64 %52, 4097, !dbg !3392
  %54 = add nsw i64 %53, -1, !dbg !3392
  %55 = inttoptr i64 %54 to i32*, !dbg !3393
  %56 = load i32, i32* %55, align 4096, !dbg !3394, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3395
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -95, i32 %56, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3396, !srcloc !3397
  br label %241

; <label>:57:                                     ; preds = %36
  %58 = icmp eq i8 %34, -15, !dbg !3398
  br i1 %58, label %59, label %74, !dbg !3399

; <label>:59:                                     ; preds = %57
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3401, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3404
  %61 = icmp ult i64 %60, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3405
  br i1 %61, label %67, label %62, !dbg !3405

; <label>:62:                                     ; preds = %59
  %63 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3406, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3409
  %64 = icmp ugt i64 %63, ptrtoint ([0 x i8]* @_end to i64), !dbg !3405
  br i1 %64, label %67, label %65, !dbg !3410

; <label>:65:                                     ; preds = %62
  %66 = call i32* @__errno() #10, !dbg !3414
  store i32 22, i32* %66, align 4, !dbg !3415, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3416
  br label %241, !dbg !3417

; <label>:67:                                     ; preds = %62, %59
  %68 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3418, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3422
  %69 = and i64 %68, -65536, !dbg !3424
  %70 = or i64 %69, 4097, !dbg !3424
  %71 = add nsw i64 %70, -1, !dbg !3424
  %72 = inttoptr i64 %71 to i32*, !dbg !3425
  %73 = load i32, i32* %72, align 4096, !dbg !3426, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3427
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -22, i32 %73, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3428, !srcloc !3429
  br label %241

; <label>:74:                                     ; preds = %57
  %75 = call i32 @err_to_errno(i8 signext %34) #10, !dbg !3430
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3431, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3434
  %77 = icmp ult i64 %76, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3435
  br i1 %77, label %83, label %78, !dbg !3435

; <label>:78:                                     ; preds = %74
  %79 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3436, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3439
  %80 = icmp ugt i64 %79, ptrtoint ([0 x i8]* @_end to i64), !dbg !3435
  br i1 %80, label %83, label %81, !dbg !3440

; <label>:81:                                     ; preds = %78
  %82 = call i32* @__errno() #10, !dbg !3441
  store i32 %75, i32* %82, align 4, !dbg !3444, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3445
  br label %241, !dbg !3446

; <label>:83:                                     ; preds = %78, %74
  %84 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3447, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3451
  %85 = and i64 %84, -65536, !dbg !3453
  %86 = or i64 %85, 4097, !dbg !3453
  %87 = add nsw i64 %86, -1, !dbg !3453
  %88 = inttoptr i64 %87 to i32*, !dbg !3454
  %89 = load i32, i32* %88, align 4096, !dbg !3455, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3456
  %90 = sub nsw i32 0, %75, !dbg !3457
  %91 = sext i32 %90 to i64, !dbg !3457
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %91, i32 %89, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3457, !srcloc !3458
  br label %241

; <label>:92:                                     ; preds = %33
  %93 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3459, !tbaa !1426
  %94 = icmp eq %struct.netconn* %93, null, !dbg !3459
  br i1 %94, label %95, label %96, !dbg !3462

; <label>:95:                                     ; preds = %92
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !3463
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !3466
  call void @ukplat_terminate(i32 3) #9, !dbg !3466
  unreachable, !dbg !3466

; <label>:96:                                     ; preds = %92
  %97 = call fastcc i32 @alloc_socket(%struct.netconn* nonnull %93, i32 1) #8, !dbg !3470
  %98 = icmp eq i32 %97, -1, !dbg !3472
  br i1 %98, label %99, label %116, !dbg !3473

; <label>:99:                                     ; preds = %96
  %100 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3474, !tbaa !1426
  %101 = call signext i8 @netconn_delete(%struct.netconn* %100) #10, !dbg !3475
  %102 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3477, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3480
  %103 = icmp ult i64 %102, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3481
  br i1 %103, label %109, label %104, !dbg !3481

; <label>:104:                                    ; preds = %99
  %105 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3482, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3485
  %106 = icmp ugt i64 %105, ptrtoint ([0 x i8]* @_end to i64), !dbg !3481
  br i1 %106, label %109, label %107, !dbg !3486

; <label>:107:                                    ; preds = %104
  %108 = call i32* @__errno() #10, !dbg !3490
  store i32 23, i32* %108, align 4, !dbg !3491, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3492
  br label %241, !dbg !3493

; <label>:109:                                    ; preds = %104, %99
  %110 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3494, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3498
  %111 = and i64 %110, -65536, !dbg !3500
  %112 = or i64 %111, 4097, !dbg !3500
  %113 = add nsw i64 %112, -1, !dbg !3500
  %114 = inttoptr i64 %113 to i32*, !dbg !3501
  %115 = load i32, i32* %114, align 4096, !dbg !3502, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3503
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -23, i32 %115, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3504, !srcloc !3505
  br label %241

; <label>:116:                                    ; preds = %96
  %117 = icmp ult i32 %97, 64, !dbg !3506
  br i1 %117, label %119, label %118, !dbg !3506

; <label>:118:                                    ; preds = %116
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #8, !dbg !3509
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !3512
  call void @ukplat_terminate(i32 3) #9, !dbg !3512
  unreachable, !dbg !3512

; <label>:119:                                    ; preds = %116
  %120 = sext i32 %97 to i64, !dbg !3516
  %121 = call i64 @ukplat_lcpu_save_irqf() #10, !dbg !3517
  %122 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3520, !tbaa !1426
  %123 = getelementptr inbounds %struct.netconn, %struct.netconn* %122, i64 0, i32 7, !dbg !3521
  %124 = load i32, i32* %123, align 8, !dbg !3521, !tbaa !2494
  store i32 %97, i32* %123, align 8, !dbg !3522, !tbaa !2494
  call void @ukplat_lcpu_restore_irqf(i64 %121) #10, !dbg !3523
  %125 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3524, !tbaa !1426
  %126 = getelementptr inbounds %struct.netconn, %struct.netconn* %125, i64 0, i32 10, !dbg !3526
  %127 = load void (%struct.netconn*, i32, i16)*, void (%struct.netconn*, i32, i16)** %126, align 8, !dbg !3526, !tbaa !3527
  %128 = icmp eq void (%struct.netconn*, i32, i16)* %127, null, !dbg !3524
  br i1 %128, label %143, label %129, !dbg !3528

; <label>:129:                                    ; preds = %119
  %130 = shl i32 %124, 16, !dbg !3529
  %131 = xor i32 %130, -65536, !dbg !3529
  call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !3530
  %132 = icmp sgt i32 %131, 0, !dbg !3532
  br i1 %132, label %133, label %142, !dbg !3533

; <label>:133:                                    ; preds = %129
  %134 = lshr exact i32 %131, 16
  br label %135, !dbg !3535

; <label>:135:                                    ; preds = %133, %135
  %136 = phi i32 [ %137, %135 ], [ %134, %133 ]
  %137 = add nsw i32 %136, -1, !dbg !3535
  %138 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3537, !tbaa !1426
  %139 = getelementptr inbounds %struct.netconn, %struct.netconn* %138, i64 0, i32 10, !dbg !3538
  %140 = load void (%struct.netconn*, i32, i16)*, void (%struct.netconn*, i32, i16)** %139, align 8, !dbg !3538, !tbaa !3527
  call void %140(%struct.netconn* %138, i32 0, i16 zeroext 0) #10, !dbg !3537
  %141 = icmp sgt i32 %136, 1, !dbg !3532
  br i1 %141, label %135, label %142, !dbg !3533, !llvm.loop !3539

; <label>:142:                                    ; preds = %135, %129
  call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !3541
  br label %143, !dbg !3542

; <label>:143:                                    ; preds = %119, %142
  %144 = icmp ne %struct.sockaddr* %1, null, !dbg !3543
  %145 = icmp ne i32* %2, null, !dbg !3544
  %146 = and i1 %144, %145, !dbg !3545
  br i1 %146, label %147, label %226, !dbg !3545

; <label>:147:                                    ; preds = %143
  %148 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 0, !dbg !3546
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %148) #6, !dbg !3546
  %149 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3547, !tbaa !1426
  %150 = call signext i8 @netconn_getaddr(%struct.netconn* %149, %struct.ip_addr* nonnull %5, i16* nonnull %6, i8 zeroext 0) #10, !dbg !3547
  %151 = icmp eq i8 %150, 0, !dbg !3549
  br i1 %151, label %186, label %152, !dbg !3550

; <label>:152:                                    ; preds = %147
  %153 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3551, !tbaa !1426
  %154 = call signext i8 @netconn_delete(%struct.netconn* %153) #10, !dbg !3552
  %155 = call i64 @ukplat_lcpu_save_irqf() #10, !dbg !3555
  %156 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %120, i32 1, !dbg !3563
  %157 = bitcast %union.lwip_sock_lastdata* %156 to %struct.pbuf**, !dbg !3563
  %158 = load %struct.pbuf*, %struct.pbuf** %157, align 8, !dbg !3563
  store %struct.pbuf* null, %struct.pbuf** %157, align 8, !dbg !3564, !tbaa !1696
  %159 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %120, i32 0, !dbg !3565
  %160 = load %struct.netconn*, %struct.netconn** %159, align 8, !dbg !3565, !tbaa !1602
  store %struct.netconn* null, %struct.netconn** %159, align 8, !dbg !3566, !tbaa !1602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3567
  call void @ukplat_lcpu_restore_irqf(i64 %155) #10, !dbg !3569
  %161 = icmp eq %struct.pbuf* %158, null, !dbg !3574
  br i1 %161, label %164, label %162, !dbg !3575

; <label>:162:                                    ; preds = %152
  %163 = call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %158) #10, !dbg !3576
  br label %164, !dbg !3577

; <label>:164:                                    ; preds = %162, %152
  %165 = icmp eq %struct.netconn* %160, null, !dbg !3578
  br i1 %165, label %168, label %166, !dbg !3579

; <label>:166:                                    ; preds = %164
  %167 = call signext i8 @netconn_delete(%struct.netconn* nonnull %160) #10, !dbg !3580
  br label %168, !dbg !3581

; <label>:168:                                    ; preds = %164, %166
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3582
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3583
  %169 = call i32 @err_to_errno(i8 signext %150) #10, !dbg !3584
  %170 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3585, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3588
  %171 = icmp ult i64 %170, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3589
  br i1 %171, label %177, label %172, !dbg !3589

; <label>:172:                                    ; preds = %168
  %173 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3590, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3593
  %174 = icmp ugt i64 %173, ptrtoint ([0 x i8]* @_end to i64), !dbg !3589
  br i1 %174, label %177, label %175, !dbg !3594

; <label>:175:                                    ; preds = %172
  %176 = call i32* @__errno() #10, !dbg !3595
  store i32 %169, i32* %176, align 4, !dbg !3598, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3599
  br label %225, !dbg !3600

; <label>:177:                                    ; preds = %172, %168
  %178 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3601, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3605
  %179 = and i64 %178, -65536, !dbg !3607
  %180 = or i64 %179, 4097, !dbg !3607
  %181 = add nsw i64 %180, -1, !dbg !3607
  %182 = inttoptr i64 %181 to i32*, !dbg !3608
  %183 = load i32, i32* %182, align 4096, !dbg !3609, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3610
  %184 = sub nsw i32 0, %169, !dbg !3611
  %185 = sext i32 %184 to i64, !dbg !3611
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %185, i32 %183, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3611, !srcloc !3612
  br label %225

; <label>:186:                                    ; preds = %147
  %187 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %5, i64 0, i32 1, !dbg !3613
  %188 = load i8, i8* %187, align 4, !dbg !3613, !tbaa !1700
  switch i8 %188, label %203 [
    i8 46, label %189
    i8 6, label %189
  ], !dbg !3613

; <label>:189:                                    ; preds = %186, %186
  store i8 28, i8* %148, align 4, !dbg !3616, !tbaa !3619
  %190 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 1, !dbg !3616
  store i8 10, i8* %190, align 1, !dbg !3616, !tbaa !3622
  %191 = load i16, i16* %6, align 2, !dbg !3616, !tbaa !3312
  %192 = call zeroext i16 @lwip_htons(i16 zeroext %191) #10, !dbg !3616
  %193 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 2, !dbg !3616
  store i16 %192, i16* %193, align 2, !dbg !3616, !tbaa !3623
  %194 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 3, !dbg !3616
  store i32 0, i32* %194, align 4, !dbg !3616, !tbaa !3624
  %195 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 4, i32 0, i32 0, i64 0, !dbg !3625
  %196 = bitcast %struct.ip_addr* %5 to <4 x i32>*, !dbg !3625
  %197 = load <4 x i32>, <4 x i32>* %196, align 16, !dbg !3625, !tbaa !1696
  %198 = bitcast i32* %195 to <4 x i32>*, !dbg !3625
  store <4 x i32> %197, <4 x i32>* %198, align 4, !dbg !3625, !tbaa !1696
  %199 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %5, i64 0, i32 0, i32 0, i32 1, !dbg !3616
  %200 = load i8, i8* %199, align 16, !dbg !3616, !tbaa !1696
  %201 = zext i8 %200 to i32, !dbg !3616
  %202 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 5, !dbg !3616
  store i32 %201, i32* %202, align 4, !dbg !3616, !tbaa !3627
  br label %214, !dbg !3628

; <label>:203:                                    ; preds = %186
  store i8 16, i8* %148, align 4, !dbg !3629, !tbaa !3632
  %204 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 1, !dbg !3629
  store i8 2, i8* %204, align 1, !dbg !3629, !tbaa !3635
  %205 = load i16, i16* %6, align 2, !dbg !3629, !tbaa !3312
  %206 = call zeroext i16 @lwip_htons(i16 zeroext %205) #10, !dbg !3629
  %207 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 2, !dbg !3629
  store i16 %206, i16* %207, align 2, !dbg !3629, !tbaa !3636
  %208 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %5, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !3629
  %209 = load i32, i32* %208, align 16, !dbg !3629, !tbaa !1696
  %210 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 3, !dbg !3629
  store i32 %209, i32* %210, align 4, !dbg !3629, !tbaa !3637
  %211 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 4, !dbg !3629
  %212 = bitcast %struct.in6_addr* %211 to i8*, !dbg !3629
  %213 = call i8* @memset(i8* nonnull %212, i32 0, i64 8) #10, !dbg !3629
  br label %214

; <label>:214:                                    ; preds = %203, %189
  %215 = load i32, i32* %2, align 4, !dbg !3638, !tbaa !1492
  %216 = load i8, i8* %148, align 4, !dbg !3640, !tbaa !1696
  %217 = zext i8 %216 to i32, !dbg !3641
  %218 = icmp ugt i32 %215, %217, !dbg !3642
  br i1 %218, label %219, label %220, !dbg !3643

; <label>:219:                                    ; preds = %214
  store i32 %217, i32* %2, align 4, !dbg !3644, !tbaa !1492
  br label %220, !dbg !3646

; <label>:220:                                    ; preds = %219, %214
  %221 = phi i32 [ %217, %219 ], [ %215, %214 ], !dbg !3647
  %222 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0, !dbg !3647
  %223 = zext i32 %221 to i64, !dbg !3647
  %224 = call i8* @memcpy(i8* %222, i8* nonnull %148, i64 %223) #10, !dbg !3647
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %148) #6, !dbg !3648
  br label %226

; <label>:225:                                    ; preds = %175, %177
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %148) #6, !dbg !3648
  br label %241

; <label>:226:                                    ; preds = %220, %143
  %227 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3650, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3653
  %228 = icmp ult i64 %227, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3654
  br i1 %228, label %234, label %229, !dbg !3654

; <label>:229:                                    ; preds = %226
  %230 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3655, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3658
  %231 = icmp ugt i64 %230, ptrtoint ([0 x i8]* @_end to i64), !dbg !3654
  br i1 %231, label %234, label %232, !dbg !3659

; <label>:232:                                    ; preds = %229
  %233 = call i32* @__errno() #10, !dbg !3663
  store i32 0, i32* %233, align 4, !dbg !3664, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3665
  br label %241, !dbg !3666

; <label>:234:                                    ; preds = %229, %226
  %235 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3667, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3671
  %236 = and i64 %235, -65536, !dbg !3673
  %237 = or i64 %236, 4097, !dbg !3673
  %238 = add nsw i64 %237, -1, !dbg !3673
  %239 = inttoptr i64 %238 to i32*, !dbg !3674
  %240 = load i32, i32* %239, align 4096, !dbg !3675, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3676
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %240, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3677, !srcloc !3678
  br label %241

; <label>:241:                                    ; preds = %32, %232, %234, %225, %107, %109, %50, %48, %67, %65, %83, %81
  %242 = phi i32 [ -1, %225 ], [ -1, %81 ], [ -1, %83 ], [ -1, %65 ], [ -1, %67 ], [ -1, %48 ], [ -1, %50 ], [ -1, %109 ], [ -1, %107 ], [ %97, %234 ], [ %97, %232 ], [ -1, %32 ], !dbg !3679
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #6, !dbg !3682
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6, !dbg !3682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !3682
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3682
  ret i32 %242, !dbg !3682
}

; Function Attrs: noredzone
declare dso_local void @vfscore_put_file(%struct.vfscore_file*) #5

; Function Attrs: noredzone nounwind
define dso_local i32 @bind(i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !3683 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !3718
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !3718
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !3719, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3720, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3723
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3724
  br i1 %7, label %30, label %8, !dbg !3724

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3725, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3728
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !3724
  br i1 %10, label %30, label %11, !dbg !3729

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !3734
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !3736
  br i1 %13, label %26, label %14, !dbg !3737

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !3738
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !3738, !tbaa !2817
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !3739
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !3739, !tbaa !3077
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !3740
  %20 = load i32, i32* %19, align 4, !dbg !3740, !tbaa !2827
  %21 = icmp eq i32 %20, 6, !dbg !3741
  br i1 %21, label %22, label %26, !dbg !3742

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !3743
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !3743
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !3743, !tbaa !2813
  br label %26, !dbg !3744

; <label>:26:                                     ; preds = %11, %14, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !3745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3746
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !3747, !tbaa !1426
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !3747
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !3748
  br label %42, !dbg !3747

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3749, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3753
  %32 = and i64 %31, -65536, !dbg !3755
  %33 = or i64 %32, 4097, !dbg !3755
  %34 = add nsw i64 %33, -1, !dbg !3755
  %35 = inttoptr i64 %34 to i32*, !dbg !3756
  %36 = load i32, i32* %35, align 4096, !dbg !3757, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3758
  %37 = sext i32 %0 to i64, !dbg !3759
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !3759, !srcloc !3760
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !3761, !srcloc !3765
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !3748, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !3748
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !3748
  %46 = add i64 %45, 512, !dbg !3748
  %47 = icmp ult i64 %46, 513, !dbg !3748
  br i1 %47, label %48, label %69, !dbg !3748

; <label>:48:                                     ; preds = %42
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3766, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3769
  %50 = icmp ult i64 %49, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3770
  br i1 %50, label %59, label %51, !dbg !3770

; <label>:51:                                     ; preds = %48
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3771, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3774
  %53 = icmp ugt i64 %52, ptrtoint ([0 x i8]* @_end to i64), !dbg !3770
  br i1 %53, label %59, label %54, !dbg !3775

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %43, align 8, !dbg !3776, !tbaa !1426
  %56 = trunc i64 %55 to i32, !dbg !3776
  %57 = sub nsw i32 0, %56, !dbg !3780
  %58 = call i32* @__errno() #10, !dbg !3781
  store i32 %57, i32* %58, align 4, !dbg !3782, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3783
  br label %94, !dbg !3776

; <label>:59:                                     ; preds = %51, %48
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3784, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3788
  %61 = and i64 %60, -65536, !dbg !3790
  %62 = or i64 %61, 4097, !dbg !3790
  %63 = add nsw i64 %62, -1, !dbg !3790
  %64 = inttoptr i64 %63 to i32*, !dbg !3791
  %65 = load i32, i32* %64, align 4096, !dbg !3792, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3793
  %66 = load i64, i64* %43, align 8, !dbg !3794, !tbaa !1426
  %67 = shl i64 %66, 32, !dbg !3794
  %68 = ashr exact i64 %67, 32, !dbg !3794
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %68, i32 %65, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3794, !srcloc !3795
  br label %94

; <label>:69:                                     ; preds = %42
  %70 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !3796
  %71 = load i32, i32* %70, align 8, !dbg !3796, !tbaa !1421
  %72 = call i32 @lwip_bind(i32 %71, %struct.sockaddr* %1, i32 %2) #8, !dbg !3797
  %73 = icmp sgt i32 %72, -1, !dbg !3798
  %74 = select i1 %73, i32 %72, i32 -1, !dbg !3800
  %75 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3801, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3804
  %76 = icmp ult i64 %75, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3805
  br i1 %76, label %84, label %77, !dbg !3805

; <label>:77:                                     ; preds = %69
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3806, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3809
  %79 = icmp ugt i64 %78, ptrtoint ([0 x i8]* @_end to i64), !dbg !3805
  br i1 %79, label %84, label %80, !dbg !3810

; <label>:80:                                     ; preds = %77
  %81 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !3811, !tbaa !1426
  %82 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %81, i64 0, i32 0, !dbg !3811
  %83 = load %struct.vfscore_file*, %struct.vfscore_file** %82, align 8, !dbg !3811, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %83) #10, !dbg !3811
  br label %94, !dbg !3811

; <label>:84:                                     ; preds = %77, %69
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3813, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3817
  %86 = and i64 %85, -65536, !dbg !3819
  %87 = or i64 %86, 4097, !dbg !3819
  %88 = add nsw i64 %87, -1, !dbg !3819
  %89 = inttoptr i64 %88 to i32*, !dbg !3820
  %90 = load i32, i32* %89, align 4096, !dbg !3821, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3822
  %91 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !3823
  %92 = load i64*, i64** %91, align 8, !dbg !3823, !tbaa !1426
  %93 = load i64, i64* %92, align 8, !dbg !3823, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %93, i32 %90, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !3823, !srcloc !3824
  br label %94

; <label>:94:                                     ; preds = %80, %84, %54, %59
  %95 = phi i32 [ -1, %54 ], [ -1, %59 ], [ %74, %80 ], [ %74, %84 ], !dbg !3825
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !3827
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3828
  ret i32 %95, !dbg !3828
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_bind(i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !3829 {
  %4 = alloca %struct.ip_addr, align 16
  %5 = bitcast %struct.ip_addr* %4 to i8*, !dbg !3880
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6, !dbg !3880
  %6 = icmp ugt i32 %0, 63, !dbg !3890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3892
  br i1 %6, label %12, label %7, !dbg !3893

; <label>:7:                                      ; preds = %3
  %8 = sext i32 %0 to i64, !dbg !3894
  %9 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %8, i32 0, !dbg !3895
  %10 = load %struct.netconn*, %struct.netconn** %9, align 8, !dbg !3895, !tbaa !1602
  %11 = icmp eq %struct.netconn* %10, null, !dbg !3896
  br i1 %11, label %12, label %28, !dbg !3897

; <label>:12:                                     ; preds = %7, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3898
  %13 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3899, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3902
  %14 = icmp ult i64 %13, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3903
  br i1 %14, label %20, label %15, !dbg !3903

; <label>:15:                                     ; preds = %12
  %16 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3904, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3907
  %17 = icmp ugt i64 %16, ptrtoint ([0 x i8]* @_end to i64), !dbg !3903
  br i1 %17, label %20, label %18, !dbg !3908

; <label>:18:                                     ; preds = %15
  %19 = tail call i32* @__errno() #10, !dbg !3911
  store i32 9, i32* %19, align 4, !dbg !3912, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3913
  br label %27, !dbg !3914

; <label>:20:                                     ; preds = %15, %12
  %21 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3915, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3919
  %22 = and i64 %21, -65536, !dbg !3921
  %23 = or i64 %22, 4097, !dbg !3921
  %24 = add nsw i64 %23, -1, !dbg !3921
  %25 = inttoptr i64 %24 to i32*, !dbg !3922
  %26 = load i32, i32* %25, align 4096, !dbg !3923, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3924
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %26, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3925, !srcloc !1640
  br label %27

; <label>:27:                                     ; preds = %20, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3926
  br label %148, !dbg !3927

; <label>:28:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3926
  %29 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, !dbg !3928
  %30 = load i8, i8* %29, align 1, !dbg !3928, !tbaa !3929
  switch i8 %30, label %41 [
    i8 2, label %31
    i8 10, label %36
  ], !dbg !3928

; <label>:31:                                     ; preds = %28
  %32 = getelementptr inbounds %struct.netconn, %struct.netconn* %10, i64 0, i32 0, !dbg !3928
  %33 = load i32, i32* %32, align 8, !dbg !3928, !tbaa !1647
  %34 = and i32 %33, 8, !dbg !3928
  %35 = icmp eq i32 %34, 0, !dbg !3928
  br i1 %35, label %59, label %41, !dbg !3928

; <label>:36:                                     ; preds = %28
  %37 = getelementptr inbounds %struct.netconn, %struct.netconn* %10, i64 0, i32 0, !dbg !3928
  %38 = load i32, i32* %37, align 8, !dbg !3928, !tbaa !1647
  %39 = and i32 %38, 8, !dbg !3928
  %40 = icmp eq i32 %39, 0, !dbg !3928
  br i1 %40, label %41, label %59, !dbg !3931

; <label>:41:                                     ; preds = %28, %31, %36
  %42 = tail call i32 @err_to_errno(i8 signext -6) #10, !dbg !3932
  %43 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3933, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3936
  %44 = icmp ult i64 %43, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3937
  br i1 %44, label %50, label %45, !dbg !3937

; <label>:45:                                     ; preds = %41
  %46 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3938, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3941
  %47 = icmp ugt i64 %46, ptrtoint ([0 x i8]* @_end to i64), !dbg !3937
  br i1 %47, label %50, label %48, !dbg !3942

; <label>:48:                                     ; preds = %45
  %49 = tail call i32* @__errno() #10, !dbg !3943
  store i32 %42, i32* %49, align 4, !dbg !3946, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3947
  br label %148, !dbg !3948

; <label>:50:                                     ; preds = %45, %41
  %51 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3949, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3953
  %52 = and i64 %51, -65536, !dbg !3955
  %53 = or i64 %52, 4097, !dbg !3955
  %54 = add nsw i64 %53, -1, !dbg !3955
  %55 = inttoptr i64 %54 to i32*, !dbg !3956
  %56 = load i32, i32* %55, align 4096, !dbg !3957, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3958
  %57 = sub nsw i32 0, %42, !dbg !3959
  %58 = sext i32 %57 to i64, !dbg !3959
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %58, i32 %56, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3959, !srcloc !3960
  br label %148

; <label>:59:                                     ; preds = %31, %36
  switch i32 %2, label %65 [
    i32 16, label %60
    i32 28, label %60
  ], !dbg !3961

; <label>:60:                                     ; preds = %59, %59
  switch i8 %30, label %65 [
    i8 2, label %61
    i8 10, label %61
  ], !dbg !3961

; <label>:61:                                     ; preds = %60, %60
  %62 = ptrtoint %struct.sockaddr* %1 to i64, !dbg !3961
  %63 = and i64 %62, 3, !dbg !3961
  %64 = icmp eq i64 %63, 0, !dbg !3961
  br i1 %64, label %66, label %65, !dbg !3962

; <label>:65:                                     ; preds = %60, %59, %61
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #8, !dbg !3963
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !3965
  tail call void @ukplat_terminate(i32 3) #9, !dbg !3965
  unreachable, !dbg !3965

; <label>:66:                                     ; preds = %61
  %67 = icmp eq i8 %30, 10, !dbg !3982
  br i1 %67, label %68, label %85, !dbg !3984

; <label>:68:                                     ; preds = %66
  %69 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, i64 6, !dbg !3985
  %70 = bitcast i8* %69 to <4 x i32>*, !dbg !3985
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !dbg !3985, !tbaa !1696
  %72 = bitcast %struct.ip_addr* %4 to <4 x i32>*, !dbg !3985
  store <4 x i32> %71, <4 x i32>* %72, align 16, !dbg !3985, !tbaa !1696
  %73 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 1, !dbg !3985
  store i8 0, i8* %73, align 16, !dbg !3985, !tbaa !1696
  %74 = extractelement <4 x i32> %71, i32 0, !dbg !3989
  %75 = and i32 %74, 49407, !dbg !3989
  %76 = icmp eq i32 %75, 33022, !dbg !3989
  br i1 %76, label %80, label %77, !dbg !3989

; <label>:77:                                     ; preds = %68
  %78 = trunc i32 %74 to i16, !dbg !3989
  %79 = and i16 %78, -28673, !dbg !3989
  switch i16 %79, label %95 [
    i16 511, label %80
    i16 767, label %80
  ], !dbg !3989

; <label>:80:                                     ; preds = %77, %77, %68
  %81 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 1, i32 2, i64 6, !dbg !3991
  %82 = bitcast i8* %81 to i32*, !dbg !3991
  %83 = load i32, i32* %82, align 4, !dbg !3991, !tbaa !3627
  %84 = trunc i32 %83 to i8, !dbg !3991
  store i8 %84, i8* %73, align 16, !dbg !3991, !tbaa !1696
  br label %95, !dbg !3991

; <label>:85:                                     ; preds = %66
  %86 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, i64 2, !dbg !3993
  %87 = bitcast i8* %86 to i32*, !dbg !3993
  %88 = load i32, i32* %87, align 4, !dbg !3993, !tbaa !3637
  %89 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !3993
  store i32 %88, i32* %89, align 16, !dbg !3993, !tbaa !1696
  %90 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, !dbg !3993
  %91 = bitcast [14 x i8]* %90 to i16*, !dbg !3993
  %92 = load i16, i16* %91, align 2, !dbg !3993, !tbaa !3636
  %93 = tail call zeroext i16 @lwip_htons(i16 zeroext %92) #10, !dbg !3993
  %94 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 1, !dbg !3996
  store i8 0, i8* %94, align 4, !dbg !3997, !tbaa !1700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3998
  br label %110, !dbg !3999

; <label>:95:                                     ; preds = %77, %80
  %96 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, !dbg !4001
  %97 = bitcast [14 x i8]* %96 to i16*, !dbg !4001
  %98 = load i16, i16* %97, align 2, !dbg !4001, !tbaa !3623
  %99 = tail call zeroext i16 @lwip_htons(i16 zeroext %98) #10, !dbg !4001
  %100 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 1, !dbg !4002
  store i8 6, i8* %100, align 4, !dbg !4003, !tbaa !1700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3998
  %101 = extractelement <4 x i32> %71, i32 1, !dbg !4004
  %102 = or i32 %74, %101, !dbg !4004
  %103 = icmp eq i32 %102, 0, !dbg !4004
  %104 = extractelement <4 x i32> %71, i32 2, !dbg !4004
  %105 = icmp eq i32 %104, -65536, !dbg !4004
  %106 = and i1 %103, %105, !dbg !4004
  br i1 %106, label %107, label %110, !dbg !4004

; <label>:107:                                    ; preds = %95
  %108 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !4004
  %109 = extractelement <4 x i32> %71, i32 3, !dbg !4005
  store i32 %109, i32* %108, align 16, !dbg !4005, !tbaa !1696
  store i8 0, i8* %100, align 4, !dbg !4007, !tbaa !1700
  br label %110, !dbg !4009

; <label>:110:                                    ; preds = %85, %107, %95
  %111 = phi i16 [ %99, %107 ], [ %99, %95 ], [ %93, %85 ]
  %112 = load %struct.netconn*, %struct.netconn** %9, align 8, !dbg !4010, !tbaa !1602
  %113 = call signext i8 @netconn_bind(%struct.netconn* %112, %struct.ip_addr* nonnull %4, i16 zeroext %111) #10, !dbg !4012
  %114 = icmp eq i8 %113, 0, !dbg !4014
  br i1 %114, label %133, label %115, !dbg !4015

; <label>:115:                                    ; preds = %110
  %116 = call i32 @err_to_errno(i8 signext %113) #10, !dbg !4016
  %117 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4017, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4020
  %118 = icmp ult i64 %117, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4021
  br i1 %118, label %124, label %119, !dbg !4021

; <label>:119:                                    ; preds = %115
  %120 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4022, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4025
  %121 = icmp ugt i64 %120, ptrtoint ([0 x i8]* @_end to i64), !dbg !4021
  br i1 %121, label %124, label %122, !dbg !4026

; <label>:122:                                    ; preds = %119
  %123 = call i32* @__errno() #10, !dbg !4027
  store i32 %116, i32* %123, align 4, !dbg !4030, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4031
  br label %148, !dbg !4032

; <label>:124:                                    ; preds = %119, %115
  %125 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4033, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4037
  %126 = and i64 %125, -65536, !dbg !4039
  %127 = or i64 %126, 4097, !dbg !4039
  %128 = add nsw i64 %127, -1, !dbg !4039
  %129 = inttoptr i64 %128 to i32*, !dbg !4040
  %130 = load i32, i32* %129, align 4096, !dbg !4041, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4042
  %131 = sub nsw i32 0, %116, !dbg !4043
  %132 = sext i32 %131 to i64, !dbg !4043
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %132, i32 %130, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !4043, !srcloc !4044
  br label %148

; <label>:133:                                    ; preds = %110
  %134 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4046, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4049
  %135 = icmp ult i64 %134, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4050
  br i1 %135, label %141, label %136, !dbg !4050

; <label>:136:                                    ; preds = %133
  %137 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4051, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4054
  %138 = icmp ugt i64 %137, ptrtoint ([0 x i8]* @_end to i64), !dbg !4050
  br i1 %138, label %141, label %139, !dbg !4055

; <label>:139:                                    ; preds = %136
  %140 = call i32* @__errno() #10, !dbg !4059
  store i32 0, i32* %140, align 4, !dbg !4060, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4061
  br label %148, !dbg !4062

; <label>:141:                                    ; preds = %136, %133
  %142 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4063, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4067
  %143 = and i64 %142, -65536, !dbg !4069
  %144 = or i64 %143, 4097, !dbg !4069
  %145 = add nsw i64 %144, -1, !dbg !4069
  %146 = inttoptr i64 %145 to i32*, !dbg !4070
  %147 = load i32, i32* %146, align 4096, !dbg !4071, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4072
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %147, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !4073, !srcloc !4074
  br label %148

; <label>:148:                                    ; preds = %27, %139, %141, %122, %124, %48, %50
  %149 = phi i32 [ -1, %50 ], [ -1, %48 ], [ -1, %124 ], [ -1, %122 ], [ 0, %141 ], [ 0, %139 ], [ -1, %27 ], !dbg !4075
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6, !dbg !4078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4078
  ret i32 %149, !dbg !4078
}

; Function Attrs: noredzone nounwind
define dso_local i32 @poll(%struct.pollfd* nocapture, i32, i32) local_unnamed_addr #0 !dbg !4079 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !4118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !4118
  %6 = zext i32 %1 to i64, !dbg !4119
  %7 = tail call i8* @llvm.stacksave(), !dbg !4119
  %8 = alloca %struct.pollfd, i64 %6, align 16, !dbg !4119
  %9 = icmp eq i32 %1, 0, !dbg !4123
  br i1 %9, label %94, label %10, !dbg !4124

; <label>:10:                                     ; preds = %3
  %11 = bitcast %struct.sock_net_file** %4 to i64*
  br label %12, !dbg !4124

; <label>:12:                                     ; preds = %10, %91
  %13 = phi i64 [ 0, %10 ], [ %92, %91 ]
  %14 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %13, i32 0, !dbg !4125
  %15 = load i32, i32* %14, align 4, !dbg !4125, !tbaa !4126
  %16 = icmp slt i32 %15, 0, !dbg !4128
  br i1 %16, label %17, label %19, !dbg !4129

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %13, i32 0, !dbg !4130
  store i32 %15, i32* %18, align 8, !dbg !4131, !tbaa !4126
  br label %91, !dbg !4132

; <label>:19:                                     ; preds = %12
  %20 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4133, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4136
  %21 = icmp ult i64 %20, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4137
  br i1 %21, label %44, label %22, !dbg !4137

; <label>:22:                                     ; preds = %19
  %23 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4138, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4141
  %24 = icmp ugt i64 %23, ptrtoint ([0 x i8]* @_end to i64), !dbg !4137
  br i1 %24, label %44, label %25, !dbg !4142

; <label>:25:                                     ; preds = %22
  %26 = load i32, i32* %14, align 4, !dbg !4143, !tbaa !4126
  %27 = call %struct.vfscore_file* @vfscore_get_file(i32 %26) #10, !dbg !4148
  %28 = icmp eq %struct.vfscore_file* %27, null, !dbg !4150
  br i1 %28, label %41, label %29, !dbg !4151

; <label>:29:                                     ; preds = %25
  %30 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %27, i64 0, i32 6, !dbg !4152
  %31 = load %struct.dentry*, %struct.dentry** %30, align 8, !dbg !4152, !tbaa !2817
  %32 = getelementptr inbounds %struct.dentry, %struct.dentry* %31, i64 0, i32 3, !dbg !4153
  %33 = load %struct.vnode*, %struct.vnode** %32, align 8, !dbg !4153, !tbaa !3077
  %34 = getelementptr inbounds %struct.vnode, %struct.vnode* %33, i64 0, i32 5, !dbg !4154
  %35 = load i32, i32* %34, align 4, !dbg !4154, !tbaa !2827
  %36 = icmp eq i32 %35, 6, !dbg !4155
  br i1 %36, label %37, label %41, !dbg !4156

; <label>:37:                                     ; preds = %29
  %38 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %27, i64 0, i32 4, !dbg !4157
  %39 = bitcast i8** %38 to %struct.sock_net_file**, !dbg !4157
  %40 = load %struct.sock_net_file*, %struct.sock_net_file** %39, align 8, !dbg !4157, !tbaa !2813
  br label %41, !dbg !4158

; <label>:41:                                     ; preds = %25, %29, %37
  %42 = phi %struct.sock_net_file* [ %40, %37 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %25 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %29 ], !dbg !4159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4160
  store %struct.sock_net_file* %42, %struct.sock_net_file** %4, align 8, !dbg !4143, !tbaa !1426
  %43 = ptrtoint %struct.sock_net_file* %42 to i64, !dbg !4143
  br label %56, !dbg !4143

; <label>:44:                                     ; preds = %22, %19
  %45 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4162, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4166
  %46 = and i64 %45, -65536, !dbg !4168
  %47 = or i64 %46, 4097, !dbg !4168
  %48 = add nsw i64 %47, -1, !dbg !4168
  %49 = inttoptr i64 %48 to i32*, !dbg !4169
  %50 = load i32, i32* %49, align 4096, !dbg !4170, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4171
  %51 = load i32, i32* %14, align 4, !dbg !4172, !tbaa !4126
  %52 = sext i32 %51 to i64, !dbg !4172
  %53 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %52, i32 %50, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4172, !srcloc !4173
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %53) #6, !dbg !4174, !srcloc !4178
  %54 = load i64, i64* %11, align 8, !dbg !4179, !tbaa !1426
  %55 = inttoptr i64 %54 to %struct.sock_net_file*
  br label %56

; <label>:56:                                     ; preds = %44, %41
  %57 = phi %struct.sock_net_file* [ %55, %44 ], [ %42, %41 ]
  %58 = phi i64 [ %54, %44 ], [ %43, %41 ], !dbg !4179
  %59 = add i64 %58, 512, !dbg !4179
  %60 = icmp ult i64 %59, 513, !dbg !4179
  br i1 %60, label %61, label %82, !dbg !4179

; <label>:61:                                     ; preds = %56
  %62 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4181, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4184
  %63 = icmp ult i64 %62, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4185
  br i1 %63, label %72, label %64, !dbg !4185

; <label>:64:                                     ; preds = %61
  %65 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4186, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4189
  %66 = icmp ugt i64 %65, ptrtoint ([0 x i8]* @_end to i64), !dbg !4185
  br i1 %66, label %72, label %67, !dbg !4190

; <label>:67:                                     ; preds = %64
  %68 = load i64, i64* %11, align 8, !dbg !4191, !tbaa !1426
  %69 = trunc i64 %68 to i32, !dbg !4191
  %70 = sub nsw i32 0, %69, !dbg !4195
  %71 = call i32* @__errno() #10, !dbg !4196
  store i32 %70, i32* %71, align 4, !dbg !4197, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4198
  br label %133, !dbg !4191

; <label>:72:                                     ; preds = %64, %61
  %73 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4199, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4203
  %74 = and i64 %73, -65536, !dbg !4205
  %75 = or i64 %74, 4097, !dbg !4205
  %76 = add nsw i64 %75, -1, !dbg !4205
  %77 = inttoptr i64 %76 to i32*, !dbg !4206
  %78 = load i32, i32* %77, align 4096, !dbg !4207, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4208
  %79 = load i64, i64* %11, align 8, !dbg !4209, !tbaa !1426
  %80 = shl i64 %79, 32, !dbg !4209
  %81 = ashr exact i64 %80, 32, !dbg !4209
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %81, i32 %78, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !4209, !srcloc !4210
  br label %133

; <label>:82:                                     ; preds = %56
  %83 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %57, i64 0, i32 1, !dbg !4211
  %84 = load i32, i32* %83, align 8, !dbg !4211, !tbaa !1421
  %85 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %13, i32 0, !dbg !4212
  store i32 %84, i32* %85, align 8, !dbg !4213, !tbaa !4126
  %86 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %13, i32 1, !dbg !4214
  %87 = load i16, i16* %86, align 4, !dbg !4214, !tbaa !4215
  %88 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %13, i32 1, !dbg !4216
  store i16 %87, i16* %88, align 4, !dbg !4217, !tbaa !4215
  %89 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %57, i64 0, i32 0, !dbg !4218
  %90 = load %struct.vfscore_file*, %struct.vfscore_file** %89, align 8, !dbg !4218, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %90) #10, !dbg !4219
  br label %91

; <label>:91:                                     ; preds = %17, %82
  %92 = add nuw nsw i64 %13, 1, !dbg !4220
  %93 = icmp ult i64 %92, %6, !dbg !4123
  br i1 %93, label %12, label %94, !dbg !4124, !llvm.loop !4221

; <label>:94:                                     ; preds = %91, %3
  %95 = call i32 @lwip_poll(%struct.pollfd* nonnull %8, i32 %1, i32 %2) #8, !dbg !4223
  %96 = icmp sgt i32 %95, -1, !dbg !4224
  %97 = icmp ne i32 %1, 0, !dbg !4226
  %98 = and i1 %96, %97, !dbg !4229
  br i1 %98, label %99, label %133, !dbg !4229

; <label>:99:                                     ; preds = %94
  %100 = and i64 %6, 1, !dbg !4230
  %101 = icmp eq i32 %1, 1, !dbg !4230
  br i1 %101, label %120, label %102, !dbg !4230

; <label>:102:                                    ; preds = %99
  %103 = sub nsw i64 %6, %100, !dbg !4230
  br label %104, !dbg !4230

; <label>:104:                                    ; preds = %138, %102
  %105 = phi i64 [ 0, %102 ], [ %141, %138 ]
  %106 = phi i64 [ %103, %102 ], [ %142, %138 ]
  %107 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %105, i32 0, !dbg !4230
  %108 = load i32, i32* %107, align 4, !dbg !4230, !tbaa !4126
  %109 = icmp slt i32 %108, 0, !dbg !4233
  br i1 %109, label %113, label %110, !dbg !4234

; <label>:110:                                    ; preds = %104
  %111 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %105, i32 2, !dbg !4235
  %112 = load i16, i16* %111, align 2, !dbg !4235, !tbaa !4236
  br label %113

; <label>:113:                                    ; preds = %104, %110
  %114 = phi i16 [ %112, %110 ], [ 0, %104 ]
  %115 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %105, i32 2, !dbg !4237
  store i16 %114, i16* %115, align 2, !dbg !4238
  %116 = or i64 %105, 1, !dbg !4239
  %117 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %116, i32 0, !dbg !4230
  %118 = load i32, i32* %117, align 4, !dbg !4230, !tbaa !4126
  %119 = icmp slt i32 %118, 0, !dbg !4233
  br i1 %119, label %138, label %135, !dbg !4234

; <label>:120:                                    ; preds = %138, %99
  %121 = phi i64 [ 0, %99 ], [ %141, %138 ]
  %122 = icmp eq i64 %100, 0, !dbg !4234
  br i1 %122, label %133, label %123, !dbg !4234

; <label>:123:                                    ; preds = %120
  %124 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %121, i32 0, !dbg !4230
  %125 = load i32, i32* %124, align 4, !dbg !4230, !tbaa !4126
  %126 = icmp slt i32 %125, 0, !dbg !4233
  br i1 %126, label %130, label %127, !dbg !4234

; <label>:127:                                    ; preds = %123
  %128 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %121, i32 2, !dbg !4235
  %129 = load i16, i16* %128, align 2, !dbg !4235, !tbaa !4236
  br label %130

; <label>:130:                                    ; preds = %127, %123
  %131 = phi i16 [ %129, %127 ], [ 0, %123 ]
  %132 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %121, i32 2, !dbg !4237
  store i16 %131, i16* %132, align 2, !dbg !4238
  br label %133, !dbg !4240

; <label>:133:                                    ; preds = %130, %120, %94, %67, %72
  %134 = phi i32 [ -1, %67 ], [ -1, %72 ], [ %95, %94 ], [ %95, %120 ], [ %95, %130 ], !dbg !4120
  call void @llvm.stackrestore(i8* %7), !dbg !4240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !4240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4240
  ret i32 %134, !dbg !4240

; <label>:135:                                    ; preds = %113
  %136 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %116, i32 2, !dbg !4235
  %137 = load i16, i16* %136, align 2, !dbg !4235, !tbaa !4236
  br label %138

; <label>:138:                                    ; preds = %135, %113
  %139 = phi i16 [ %137, %135 ], [ 0, %113 ]
  %140 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %116, i32 2, !dbg !4237
  store i16 %139, i16* %140, align 2, !dbg !4238
  %141 = add nuw nsw i64 %105, 2, !dbg !4239
  %142 = add i64 %106, -2, !dbg !4241
  %143 = icmp eq i64 %142, 0, !dbg !4241
  br i1 %143, label %120, label %104, !dbg !4241, !llvm.loop !4242
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #6

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_poll(%struct.pollfd*, i32, i32) local_unnamed_addr #0 !dbg !4244 {
  %4 = icmp ne %struct.pollfd* %0, null, !dbg !4295
  %5 = icmp ne i32 %1, 0, !dbg !4295
  %6 = and i1 %4, %5, !dbg !4295
  br i1 %6, label %12, label %7, !dbg !4295

; <label>:7:                                      ; preds = %3
  %8 = icmp eq %struct.pollfd* %0, null, !dbg !4295
  %9 = icmp eq i32 %1, 0, !dbg !4295
  %10 = and i1 %8, %9, !dbg !4295
  br i1 %10, label %12, label %11, !dbg !4295

; <label>:11:                                     ; preds = %7
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0)) #8, !dbg !4296
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !4298
  tail call void @ukplat_terminate(i32 3) #9, !dbg !4298
  unreachable, !dbg !4298

; <label>:12:                                     ; preds = %7, %3
  %13 = tail call fastcc i32 @lwip_pollscan(%struct.pollfd* %0, i32 %1, i32 1) #8, !dbg !4302
  %14 = icmp slt i32 %13, 0, !dbg !4304
  br i1 %14, label %117, label %15, !dbg !4306

; <label>:15:                                     ; preds = %12
  %16 = icmp eq i32 %13, 0, !dbg !4307
  br i1 %16, label %17, label %101, !dbg !4308

; <label>:17:                                     ; preds = %15
  %18 = icmp eq i32 %2, 0, !dbg !4309
  br i1 %18, label %101, label %19, !dbg !4311

; <label>:19:                                     ; preds = %17
  %20 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !4312, !tbaa !1426
  %21 = icmp eq %struct.uk_alloc* %20, null, !dbg !4320
  br i1 %21, label %22, label %24, !dbg !4322, !prof !1445

; <label>:22:                                     ; preds = %19
  %23 = tail call i32* @__errno() #10, !dbg !4323
  store i32 12, i32* %23, align 4, !dbg !4325, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4326
  br label %30, !dbg !4312

; <label>:24:                                     ; preds = %19
  %25 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %20, i64 0, i32 0, !dbg !4335
  %26 = load i8* (%struct.uk_alloc*, i64)*, i8* (%struct.uk_alloc*, i64)** %25, align 8, !dbg !4335, !tbaa !1426
  %27 = tail call i8* %26(%struct.uk_alloc* nonnull %20, i64 88) #10, !dbg !4336
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4337
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4326
  %28 = bitcast i8* %27 to %struct.lwip_select_cb*, !dbg !4312
  %29 = icmp eq i8* %27, null, !dbg !4338
  br i1 %29, label %30, label %45, !dbg !4312

; <label>:30:                                     ; preds = %22, %24
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4340, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4343
  %32 = icmp ult i64 %31, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4344
  br i1 %32, label %38, label %33, !dbg !4344

; <label>:33:                                     ; preds = %30
  %34 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4345, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4348
  %35 = icmp ugt i64 %34, ptrtoint ([0 x i8]* @_end to i64), !dbg !4344
  br i1 %35, label %38, label %36, !dbg !4349

; <label>:36:                                     ; preds = %33
  %37 = tail call i32* @__errno() #10, !dbg !4353
  store i32 11, i32* %37, align 4, !dbg !4354, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4355
  br label %117, !dbg !4356

; <label>:38:                                     ; preds = %33, %30
  %39 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4357, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4361
  %40 = and i64 %39, -65536, !dbg !4363
  %41 = or i64 %40, 4097, !dbg !4363
  %42 = add nsw i64 %41, -1, !dbg !4363
  %43 = inttoptr i64 %42 to i32*, !dbg !4364
  %44 = load i32, i32* %43, align 4096, !dbg !4365, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4366
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -11, i32 %44, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !4367, !srcloc !4368
  br label %117

; <label>:45:                                     ; preds = %24
  %46 = tail call i8* @memset(i8* nonnull %27, i32 0, i64 88) #10, !dbg !4369
  %47 = getelementptr inbounds i8, i8* %27, i64 40, !dbg !4370
  %48 = bitcast i8* %47 to %struct.pollfd**, !dbg !4370
  store %struct.pollfd* %0, %struct.pollfd** %48, align 8, !dbg !4371, !tbaa !4372
  %49 = getelementptr inbounds i8, i8* %27, i64 48, !dbg !4374
  %50 = bitcast i8* %49 to i32*, !dbg !4374
  store i32 %1, i32* %50, align 8, !dbg !4375, !tbaa !4376
  %51 = getelementptr inbounds i8, i8* %27, i64 56, !dbg !4377
  %52 = bitcast i8* %51 to %struct.sys_sem_t*, !dbg !4377
  %53 = tail call signext i8 @sys_sem_new(%struct.sys_sem_t* nonnull %52, i8 zeroext 0) #10, !dbg !4378
  %54 = icmp eq i8 %53, 0, !dbg !4379
  br i1 %54, label %77, label %55, !dbg !4380

; <label>:55:                                     ; preds = %45
  %56 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4381, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4384
  %57 = icmp ult i64 %56, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4385
  br i1 %57, label %63, label %58, !dbg !4385

; <label>:58:                                     ; preds = %55
  %59 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4386, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4389
  %60 = icmp ugt i64 %59, ptrtoint ([0 x i8]* @_end to i64), !dbg !4385
  br i1 %60, label %63, label %61, !dbg !4390

; <label>:61:                                     ; preds = %58
  %62 = tail call i32* @__errno() #10, !dbg !4394
  store i32 11, i32* %62, align 4, !dbg !4395, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4396
  br label %70, !dbg !4397

; <label>:63:                                     ; preds = %58, %55
  %64 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4398, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4402
  %65 = and i64 %64, -65536, !dbg !4404
  %66 = or i64 %65, 4097, !dbg !4404
  %67 = add nsw i64 %66, -1, !dbg !4404
  %68 = inttoptr i64 %67 to i32*, !dbg !4405
  %69 = load i32, i32* %68, align 4096, !dbg !4406, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4407
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -11, i32 %69, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !4408, !srcloc !4409
  br label %70

; <label>:70:                                     ; preds = %63, %61
  %71 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !4410, !tbaa !1426
  %72 = icmp eq %struct.uk_alloc* %71, null, !dbg !4417
  br i1 %72, label %73, label %74, !dbg !4418, !prof !1445

; <label>:73:                                     ; preds = %70
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !4419
  tail call void @ukplat_terminate(i32 3) #9, !dbg !4419
  unreachable, !dbg !4419

; <label>:74:                                     ; preds = %70
  %75 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %71, i64 0, i32 5, !dbg !4420
  %76 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %75, align 8, !dbg !4420, !tbaa !1426
  tail call void %76(%struct.uk_alloc* nonnull %71, i8* nonnull %27) #10, !dbg !4421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4423
  br label %117, !dbg !4424

; <label>:77:                                     ; preds = %45
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !4432
  %78 = load i64, i64* bitcast (%struct.lwip_select_cb** @select_cb_list to i64*), align 8, !dbg !4433, !tbaa !1426
  %79 = bitcast i8* %27 to i64*, !dbg !4434
  store i64 %78, i64* %79, align 8, !dbg !4434, !tbaa !4435
  %80 = icmp eq i64 %78, 0, !dbg !4436
  br i1 %80, label %85, label %81, !dbg !4438

; <label>:81:                                     ; preds = %77
  %82 = inttoptr i64 %78 to %struct.lwip_select_cb*, !dbg !4439
  %83 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %82, i64 0, i32 1, !dbg !4440
  %84 = bitcast %struct.lwip_select_cb** %83 to i8**, !dbg !4442
  store i8* %27, i8** %84, align 8, !dbg !4442, !tbaa !4443
  br label %85, !dbg !4444

; <label>:85:                                     ; preds = %77, %81
  store i8* %27, i8** bitcast (%struct.lwip_select_cb** @select_cb_list to i8**), align 8, !dbg !4445, !tbaa !1426
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !4446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4447
  %86 = tail call fastcc i32 @lwip_pollscan(%struct.pollfd* %0, i32 %1, i32 2) #8, !dbg !4448
  %87 = icmp eq i32 %86, 0, !dbg !4449
  br i1 %87, label %88, label %92, !dbg !4451

; <label>:88:                                     ; preds = %85
  %89 = icmp sgt i32 %2, 0, !dbg !4452
  %90 = select i1 %89, i32 %2, i32 0, !dbg !4452
  %91 = tail call i32 @sys_arch_sem_wait(%struct.sys_sem_t* nonnull %52, i32 %90) #10, !dbg !4455
  br label %92, !dbg !4456

; <label>:92:                                     ; preds = %85, %88
  %93 = tail call fastcc i32 @lwip_pollscan(%struct.pollfd* %0, i32 %1, i32 4) #8, !dbg !4457
  tail call fastcc void @lwip_unlink_select_cb(%struct.lwip_select_cb* nonnull %28) #8, !dbg !4458
  tail call void @sys_sem_free(%struct.sys_sem_t* nonnull %52) #10, !dbg !4459
  %94 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !4460, !tbaa !1426
  %95 = icmp eq %struct.uk_alloc* %94, null, !dbg !4467
  br i1 %95, label %96, label %97, !dbg !4468, !prof !1445

; <label>:96:                                     ; preds = %92
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !4469
  tail call void @ukplat_terminate(i32 3) #9, !dbg !4469
  unreachable, !dbg !4469

; <label>:97:                                     ; preds = %92
  %98 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %94, i64 0, i32 5, !dbg !4470
  %99 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %98, align 8, !dbg !4470, !tbaa !1426
  tail call void %99(%struct.uk_alloc* nonnull %94, i8* nonnull %27) #10, !dbg !4471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4473
  %100 = icmp slt i32 %93, 0, !dbg !4474
  br i1 %100, label %117, label %101, !dbg !4476

; <label>:101:                                    ; preds = %97, %17, %15
  %102 = phi i32 [ %13, %15 ], [ 0, %17 ], [ %93, %97 ], !dbg !4477
  %103 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4478, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4481
  %104 = icmp ult i64 %103, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4482
  br i1 %104, label %110, label %105, !dbg !4482

; <label>:105:                                    ; preds = %101
  %106 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4483, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4486
  %107 = icmp ugt i64 %106, ptrtoint ([0 x i8]* @_end to i64), !dbg !4482
  br i1 %107, label %110, label %108, !dbg !4487

; <label>:108:                                    ; preds = %105
  %109 = tail call i32* @__errno() #10, !dbg !4491
  store i32 0, i32* %109, align 4, !dbg !4492, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4493
  br label %117, !dbg !4494

; <label>:110:                                    ; preds = %105, %101
  %111 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4495, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4499
  %112 = and i64 %111, -65536, !dbg !4501
  %113 = or i64 %112, 4097, !dbg !4501
  %114 = add nsw i64 %113, -1, !dbg !4501
  %115 = inttoptr i64 %114 to i32*, !dbg !4502
  %116 = load i32, i32* %115, align 4096, !dbg !4503, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4504
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %116, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !4505, !srcloc !4506
  br label %117

; <label>:117:                                    ; preds = %97, %36, %38, %74, %108, %110, %12
  %118 = phi i32 [ -1, %12 ], [ %102, %110 ], [ %102, %108 ], [ -1, %74 ], [ -1, %38 ], [ -1, %36 ], [ -1, %97 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4507
  ret i32 %118, !dbg !4507
}

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #6

; Function Attrs: noredzone nounwind
define dso_local i32 @ppoll(%struct.pollfd*, i32, %struct.timespec* readonly, i64*) local_unnamed_addr #0 !dbg !4508 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*, !dbg !4528
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !4528
  %7 = icmp eq %struct.pollfd* %0, null, !dbg !4529
  br i1 %7, label %8, label %10, !dbg !4531

; <label>:8:                                      ; preds = %4
  %9 = tail call i32* @__errno() #10, !dbg !4532
  store i32 14, i32* %9, align 4, !dbg !4534, !tbaa !1492
  br label %32, !dbg !4536

; <label>:10:                                     ; preds = %4
  %11 = icmp eq %struct.timespec* %2, null, !dbg !4537
  br i1 %11, label %21, label %12, !dbg !4538

; <label>:12:                                     ; preds = %10
  %13 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, i32 0, !dbg !4539
  %14 = load i64, i64* %13, align 8, !dbg !4539, !tbaa !4540
  %15 = mul nsw i64 %14, 1000, !dbg !4542
  %16 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, i32 1, !dbg !4543
  %17 = load i64, i64* %16, align 8, !dbg !4543, !tbaa !4544
  %18 = sdiv i64 %17, 1000000, !dbg !4545
  %19 = add nsw i64 %18, %15, !dbg !4546
  %20 = trunc i64 %19 to i32, !dbg !4538
  br label %21, !dbg !4538

; <label>:21:                                     ; preds = %10, %12
  %22 = phi i32 [ %20, %12 ], [ -1, %10 ]
  %23 = call i32 @pthread_sigmask(i32 2, i64* %3, i64* nonnull %5) #10, !dbg !4548
  %24 = icmp eq i32 %23, 0, !dbg !4549
  br i1 %24, label %25, label %32, !dbg !4551

; <label>:25:                                     ; preds = %21
  %26 = call i32 @poll(%struct.pollfd* nonnull %0, i32 %1, i32 %22) #8, !dbg !4553
  %27 = call i32 @pthread_sigmask(i32 2, i64* nonnull %5, i64* null) #10, !dbg !4554
  %28 = icmp eq i32 %26, 0, !dbg !4556
  %29 = icmp ne i32 %27, 0, !dbg !4558
  %30 = and i1 %28, %29, !dbg !4559
  %31 = select i1 %30, i32 %27, i32 %26, !dbg !4559
  br label %32, !dbg !4559

; <label>:32:                                     ; preds = %25, %21, %8
  %33 = phi i32 [ %23, %21 ], [ -1, %8 ], [ %31, %25 ], !dbg !4560
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !4561
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4562
  ret i32 %33, !dbg !4562
}

; Function Attrs: noredzone
declare dso_local i32* @__errno() local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @pthread_sigmask(i32, i64*, i64*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local i32 @select(i32, %struct._types_fd_set*, %struct._types_fd_set*, %struct._types_fd_set*, %struct.timeval* readonly) local_unnamed_addr #0 !dbg !4563 {
  %6 = alloca %struct._types_fd_set, align 8
  %7 = alloca %struct._types_fd_set, align 8
  %8 = alloca %struct._types_fd_set, align 8
  %9 = alloca %struct.sock_net_file*, align 8
  %10 = bitcast %struct._types_fd_set* %6 to i8*, !dbg !4668
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6, !dbg !4668
  %11 = bitcast %struct._types_fd_set* %7 to i8*, !dbg !4668
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !4668
  %12 = bitcast %struct._types_fd_set* %8 to i8*, !dbg !4668
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6, !dbg !4668
  %13 = bitcast %struct.sock_net_file** %9 to i8*, !dbg !4669
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6, !dbg !4669
  %14 = icmp eq i32 %0, 0, !dbg !4670
  %15 = icmp ne %struct.timeval* %4, null, !dbg !4671
  %16 = and i1 %14, %15, !dbg !4672
  br i1 %16, label %40, label %17, !dbg !4672

; <label>:17:                                     ; preds = %5
  %18 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !4674
  store i8 0, i8* %10, align 8, !dbg !4674, !tbaa !1696
  %19 = getelementptr inbounds i8, i8* %10, i64 2, !dbg !4674
  store i8 0, i8* %18, align 1, !dbg !4674, !tbaa !1696
  %20 = getelementptr inbounds i8, i8* %10, i64 3, !dbg !4674
  store i8 0, i8* %19, align 2, !dbg !4674, !tbaa !1696
  %21 = getelementptr inbounds i8, i8* %10, i64 4, !dbg !4674
  store i8 0, i8* %20, align 1, !dbg !4674, !tbaa !1696
  %22 = getelementptr inbounds i8, i8* %10, i64 5, !dbg !4674
  store i8 0, i8* %21, align 4, !dbg !4674, !tbaa !1696
  %23 = getelementptr inbounds i8, i8* %10, i64 6, !dbg !4674
  store i8 0, i8* %22, align 1, !dbg !4674, !tbaa !1696
  %24 = getelementptr inbounds i8, i8* %10, i64 7, !dbg !4674
  store i8 0, i8* %23, align 2, !dbg !4674, !tbaa !1696
  store i8 0, i8* %24, align 1, !dbg !4674, !tbaa !1696
  %25 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !4678
  store i8 0, i8* %11, align 8, !dbg !4678, !tbaa !1696
  %26 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !4678
  store i8 0, i8* %25, align 1, !dbg !4678, !tbaa !1696
  %27 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !4678
  store i8 0, i8* %26, align 2, !dbg !4678, !tbaa !1696
  %28 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !4678
  store i8 0, i8* %27, align 1, !dbg !4678, !tbaa !1696
  %29 = getelementptr inbounds i8, i8* %11, i64 5, !dbg !4678
  store i8 0, i8* %28, align 4, !dbg !4678, !tbaa !1696
  %30 = getelementptr inbounds i8, i8* %11, i64 6, !dbg !4678
  store i8 0, i8* %29, align 1, !dbg !4678, !tbaa !1696
  %31 = getelementptr inbounds i8, i8* %11, i64 7, !dbg !4678
  store i8 0, i8* %30, align 2, !dbg !4678, !tbaa !1696
  store i8 0, i8* %31, align 1, !dbg !4678, !tbaa !1696
  %32 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !4682
  store i8 0, i8* %12, align 8, !dbg !4682, !tbaa !1696
  %33 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !4682
  store i8 0, i8* %32, align 1, !dbg !4682, !tbaa !1696
  %34 = getelementptr inbounds i8, i8* %12, i64 3, !dbg !4682
  store i8 0, i8* %33, align 2, !dbg !4682, !tbaa !1696
  %35 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !4682
  store i8 0, i8* %34, align 1, !dbg !4682, !tbaa !1696
  %36 = getelementptr inbounds i8, i8* %12, i64 5, !dbg !4682
  store i8 0, i8* %35, align 4, !dbg !4682, !tbaa !1696
  %37 = getelementptr inbounds i8, i8* %12, i64 6, !dbg !4682
  store i8 0, i8* %36, align 1, !dbg !4682, !tbaa !1696
  %38 = getelementptr inbounds i8, i8* %12, i64 7, !dbg !4682
  store i8 0, i8* %37, align 2, !dbg !4682, !tbaa !1696
  store i8 0, i8* %38, align 1, !dbg !4682, !tbaa !1696
  %39 = icmp sgt i32 %0, 0, !dbg !4687
  br i1 %39, label %61, label %282, !dbg !4688

; <label>:40:                                     ; preds = %5
  %41 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0, !dbg !4689
  %42 = load i64, i64* %41, align 8, !dbg !4689, !tbaa !4690
  %43 = mul nsw i64 %42, 1000000000, !dbg !4692
  %44 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1, !dbg !4694
  %45 = load i64, i64* %44, align 8, !dbg !4694, !tbaa !4695
  %46 = mul nsw i64 %45, 1000, !dbg !4696
  %47 = add i64 %46, %43, !dbg !4697
  %48 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4698, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4701
  %49 = icmp ult i64 %48, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4702
  br i1 %49, label %54, label %50, !dbg !4702

; <label>:50:                                     ; preds = %40
  %51 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4703, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4706
  %52 = icmp ugt i64 %51, ptrtoint ([0 x i8]* @_end to i64), !dbg !4702
  br i1 %52, label %54, label %53, !dbg !4707

; <label>:53:                                     ; preds = %50
  tail call void @uk_sched_thread_sleep(i64 %47) #10, !dbg !4708
  br label %477, !dbg !4708

; <label>:54:                                     ; preds = %50, %40
  %55 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4710, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4714
  %56 = and i64 %55, -65536, !dbg !4716
  %57 = or i64 %56, 4097, !dbg !4716
  %58 = add nsw i64 %57, -1, !dbg !4716
  %59 = inttoptr i64 %58 to i32*, !dbg !4717
  %60 = load i32, i32* %59, align 4096, !dbg !4718, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4719
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call uk_sched_thread_sleep\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %47, i32 %60, void (i64)* nonnull @uk_sched_thread_sleep) #6, !dbg !4720, !srcloc !4721
  br label %477

; <label>:61:                                     ; preds = %17
  %62 = icmp eq %struct._types_fd_set* %1, null
  %63 = icmp eq %struct._types_fd_set* %2, null
  %64 = icmp eq %struct._types_fd_set* %3, null
  %65 = bitcast %struct.sock_net_file** %9 to i64*
  %66 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %6, i64 0, i32 0, i64 0
  %67 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %7, i64 0, i32 0, i64 0
  %68 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0
  %69 = zext i32 %0 to i64
  br label %70, !dbg !4688

; <label>:70:                                     ; preds = %278, %61
  %71 = phi i64 [ 0, %61 ], [ %280, %278 ]
  %72 = phi i32 [ 0, %61 ], [ %279, %278 ]
  br i1 %62, label %140, label %73, !dbg !4722

; <label>:73:                                     ; preds = %70
  %74 = lshr i64 %71, 6, !dbg !4723
  %75 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %74, !dbg !4723
  %76 = load i64, i64* %75, align 8, !dbg !4723, !tbaa !2645
  %77 = and i64 %71, 63, !dbg !4723
  %78 = shl i64 1, %77, !dbg !4723
  %79 = and i64 %76, %78, !dbg !4723
  %80 = icmp eq i64 %79, 0, !dbg !4723
  br i1 %80, label %140, label %81, !dbg !4724

; <label>:81:                                     ; preds = %73
  %82 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4725, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4728
  %83 = icmp ult i64 %82, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4729
  br i1 %83, label %106, label %84, !dbg !4729

; <label>:84:                                     ; preds = %81
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4730, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4733
  %86 = icmp ugt i64 %85, ptrtoint ([0 x i8]* @_end to i64), !dbg !4729
  br i1 %86, label %106, label %87, !dbg !4734

; <label>:87:                                     ; preds = %84
  %88 = trunc i64 %71 to i32, !dbg !4739
  %89 = call %struct.vfscore_file* @vfscore_get_file(i32 %88) #10, !dbg !4739
  %90 = icmp eq %struct.vfscore_file* %89, null, !dbg !4741
  br i1 %90, label %103, label %91, !dbg !4742

; <label>:91:                                     ; preds = %87
  %92 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %89, i64 0, i32 6, !dbg !4743
  %93 = load %struct.dentry*, %struct.dentry** %92, align 8, !dbg !4743, !tbaa !2817
  %94 = getelementptr inbounds %struct.dentry, %struct.dentry* %93, i64 0, i32 3, !dbg !4744
  %95 = load %struct.vnode*, %struct.vnode** %94, align 8, !dbg !4744, !tbaa !3077
  %96 = getelementptr inbounds %struct.vnode, %struct.vnode* %95, i64 0, i32 5, !dbg !4745
  %97 = load i32, i32* %96, align 4, !dbg !4745, !tbaa !2827
  %98 = icmp eq i32 %97, 6, !dbg !4746
  br i1 %98, label %99, label %103, !dbg !4747

; <label>:99:                                     ; preds = %91
  %100 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %89, i64 0, i32 4, !dbg !4748
  %101 = bitcast i8** %100 to %struct.sock_net_file**, !dbg !4748
  %102 = load %struct.sock_net_file*, %struct.sock_net_file** %101, align 8, !dbg !4748, !tbaa !2813
  br label %103, !dbg !4749

; <label>:103:                                    ; preds = %87, %91, %99
  %104 = phi %struct.sock_net_file* [ %102, %99 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %87 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %91 ], !dbg !4750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4751
  store %struct.sock_net_file* %104, %struct.sock_net_file** %9, align 8, !dbg !4753, !tbaa !1426
  %105 = ptrtoint %struct.sock_net_file* %104 to i64, !dbg !4753
  br label %116, !dbg !4753

; <label>:106:                                    ; preds = %84, %81
  %107 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4754, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4758
  %108 = and i64 %107, -65536, !dbg !4760
  %109 = or i64 %108, 4097, !dbg !4760
  %110 = add nsw i64 %109, -1, !dbg !4760
  %111 = inttoptr i64 %110 to i32*, !dbg !4761
  %112 = load i32, i32* %111, align 4096, !dbg !4762, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4763
  %113 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %71, i32 %112, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4764, !srcloc !4765
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %113) #6, !dbg !4766, !srcloc !4770
  %114 = load i64, i64* %65, align 8, !dbg !4771, !tbaa !1426
  %115 = inttoptr i64 %114 to %struct.sock_net_file*
  br label %116

; <label>:116:                                    ; preds = %106, %103
  %117 = phi %struct.sock_net_file* [ %115, %106 ], [ %104, %103 ]
  %118 = phi i64 [ %114, %106 ], [ %105, %103 ], !dbg !4771
  %119 = add i64 %118, 512, !dbg !4771
  %120 = icmp ult i64 %119, 513, !dbg !4771
  %121 = trunc i64 %118 to i32, !dbg !4773
  %122 = icmp eq i32 %121, -9, !dbg !4776
  %123 = and i1 %120, %122, !dbg !4771
  br i1 %123, label %124, label %128, !dbg !4771

; <label>:124:                                    ; preds = %116
  %125 = xor i64 %78, -1, !dbg !4777
  %126 = load i64, i64* %75, align 8, !dbg !4777, !tbaa !2645
  %127 = and i64 %126, %125, !dbg !4777
  store i64 %127, i64* %75, align 8, !dbg !4777, !tbaa !2645
  br label %278, !dbg !4779

; <label>:128:                                    ; preds = %116
  %129 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %117, i64 0, i32 1, !dbg !4780
  %130 = load i32, i32* %129, align 8, !dbg !4780, !tbaa !1421
  %131 = icmp slt i32 %72, %130, !dbg !4782
  %132 = select i1 %131, i32 %130, i32 %72, !dbg !4783
  %133 = and i32 %130, 63, !dbg !4784
  %134 = zext i32 %133 to i64, !dbg !4784
  %135 = shl i64 1, %134, !dbg !4784
  %136 = load i64, i64* %66, align 8, !dbg !4784, !tbaa !2645
  %137 = or i64 %135, %136, !dbg !4784
  store i64 %137, i64* %66, align 8, !dbg !4784, !tbaa !2645
  %138 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %117, i64 0, i32 0, !dbg !4785
  %139 = load %struct.vfscore_file*, %struct.vfscore_file** %138, align 8, !dbg !4785, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %139) #10, !dbg !4786
  br label %140, !dbg !4787

; <label>:140:                                    ; preds = %73, %70, %128
  %141 = phi i32 [ %132, %128 ], [ %72, %73 ], [ %72, %70 ], !dbg !4788
  br i1 %63, label %209, label %142, !dbg !4789

; <label>:142:                                    ; preds = %140
  %143 = lshr i64 %71, 6, !dbg !4790
  %144 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %143, !dbg !4790
  %145 = load i64, i64* %144, align 8, !dbg !4790, !tbaa !2645
  %146 = and i64 %71, 63, !dbg !4790
  %147 = shl i64 1, %146, !dbg !4790
  %148 = and i64 %145, %147, !dbg !4790
  %149 = icmp eq i64 %148, 0, !dbg !4790
  br i1 %149, label %209, label %150, !dbg !4791

; <label>:150:                                    ; preds = %142
  %151 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4792, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4795
  %152 = icmp ult i64 %151, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4796
  br i1 %152, label %175, label %153, !dbg !4796

; <label>:153:                                    ; preds = %150
  %154 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4797, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4800
  %155 = icmp ugt i64 %154, ptrtoint ([0 x i8]* @_end to i64), !dbg !4796
  br i1 %155, label %175, label %156, !dbg !4801

; <label>:156:                                    ; preds = %153
  %157 = trunc i64 %71 to i32, !dbg !4806
  %158 = call %struct.vfscore_file* @vfscore_get_file(i32 %157) #10, !dbg !4806
  %159 = icmp eq %struct.vfscore_file* %158, null, !dbg !4808
  br i1 %159, label %172, label %160, !dbg !4809

; <label>:160:                                    ; preds = %156
  %161 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %158, i64 0, i32 6, !dbg !4810
  %162 = load %struct.dentry*, %struct.dentry** %161, align 8, !dbg !4810, !tbaa !2817
  %163 = getelementptr inbounds %struct.dentry, %struct.dentry* %162, i64 0, i32 3, !dbg !4811
  %164 = load %struct.vnode*, %struct.vnode** %163, align 8, !dbg !4811, !tbaa !3077
  %165 = getelementptr inbounds %struct.vnode, %struct.vnode* %164, i64 0, i32 5, !dbg !4812
  %166 = load i32, i32* %165, align 4, !dbg !4812, !tbaa !2827
  %167 = icmp eq i32 %166, 6, !dbg !4813
  br i1 %167, label %168, label %172, !dbg !4814

; <label>:168:                                    ; preds = %160
  %169 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %158, i64 0, i32 4, !dbg !4815
  %170 = bitcast i8** %169 to %struct.sock_net_file**, !dbg !4815
  %171 = load %struct.sock_net_file*, %struct.sock_net_file** %170, align 8, !dbg !4815, !tbaa !2813
  br label %172, !dbg !4816

; <label>:172:                                    ; preds = %156, %160, %168
  %173 = phi %struct.sock_net_file* [ %171, %168 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %156 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %160 ], !dbg !4817
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4818
  store %struct.sock_net_file* %173, %struct.sock_net_file** %9, align 8, !dbg !4819, !tbaa !1426
  %174 = ptrtoint %struct.sock_net_file* %173 to i64, !dbg !4819
  br label %185, !dbg !4819

; <label>:175:                                    ; preds = %153, %150
  %176 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4820, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4824
  %177 = and i64 %176, -65536, !dbg !4826
  %178 = or i64 %177, 4097, !dbg !4826
  %179 = add nsw i64 %178, -1, !dbg !4826
  %180 = inttoptr i64 %179 to i32*, !dbg !4827
  %181 = load i32, i32* %180, align 4096, !dbg !4828, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4829
  %182 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %71, i32 %181, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4830, !srcloc !4831
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %182) #6, !dbg !4832, !srcloc !4836
  %183 = load i64, i64* %65, align 8, !dbg !4837, !tbaa !1426
  %184 = inttoptr i64 %183 to %struct.sock_net_file*
  br label %185

; <label>:185:                                    ; preds = %175, %172
  %186 = phi %struct.sock_net_file* [ %184, %175 ], [ %173, %172 ]
  %187 = phi i64 [ %183, %175 ], [ %174, %172 ], !dbg !4837
  %188 = add i64 %187, 512, !dbg !4837
  %189 = icmp ult i64 %188, 513, !dbg !4837
  %190 = trunc i64 %187 to i32, !dbg !4839
  %191 = icmp eq i32 %190, -9, !dbg !4842
  %192 = and i1 %189, %191, !dbg !4837
  br i1 %192, label %193, label %197, !dbg !4837

; <label>:193:                                    ; preds = %185
  %194 = xor i64 %147, -1, !dbg !4843
  %195 = load i64, i64* %144, align 8, !dbg !4843, !tbaa !2645
  %196 = and i64 %195, %194, !dbg !4843
  store i64 %196, i64* %144, align 8, !dbg !4843, !tbaa !2645
  br label %278, !dbg !4845

; <label>:197:                                    ; preds = %185
  %198 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %186, i64 0, i32 1, !dbg !4846
  %199 = load i32, i32* %198, align 8, !dbg !4846, !tbaa !1421
  %200 = icmp slt i32 %141, %199, !dbg !4848
  %201 = select i1 %200, i32 %199, i32 %141, !dbg !4849
  %202 = and i32 %199, 63, !dbg !4850
  %203 = zext i32 %202 to i64, !dbg !4850
  %204 = shl i64 1, %203, !dbg !4850
  %205 = load i64, i64* %67, align 8, !dbg !4850, !tbaa !2645
  %206 = or i64 %204, %205, !dbg !4850
  store i64 %206, i64* %67, align 8, !dbg !4850, !tbaa !2645
  %207 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %186, i64 0, i32 0, !dbg !4851
  %208 = load %struct.vfscore_file*, %struct.vfscore_file** %207, align 8, !dbg !4851, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %208) #10, !dbg !4852
  br label %209, !dbg !4853

; <label>:209:                                    ; preds = %142, %140, %197
  %210 = phi i32 [ %201, %197 ], [ %141, %142 ], [ %141, %140 ], !dbg !4854
  br i1 %64, label %278, label %211, !dbg !4855

; <label>:211:                                    ; preds = %209
  %212 = lshr i64 %71, 6, !dbg !4856
  %213 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %212, !dbg !4856
  %214 = load i64, i64* %213, align 8, !dbg !4856, !tbaa !2645
  %215 = and i64 %71, 63, !dbg !4856
  %216 = shl i64 1, %215, !dbg !4856
  %217 = and i64 %214, %216, !dbg !4856
  %218 = icmp eq i64 %217, 0, !dbg !4856
  br i1 %218, label %278, label %219, !dbg !4857

; <label>:219:                                    ; preds = %211
  %220 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4858, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4861
  %221 = icmp ult i64 %220, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4862
  br i1 %221, label %244, label %222, !dbg !4862

; <label>:222:                                    ; preds = %219
  %223 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4863, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4866
  %224 = icmp ugt i64 %223, ptrtoint ([0 x i8]* @_end to i64), !dbg !4862
  br i1 %224, label %244, label %225, !dbg !4867

; <label>:225:                                    ; preds = %222
  %226 = trunc i64 %71 to i32, !dbg !4872
  %227 = call %struct.vfscore_file* @vfscore_get_file(i32 %226) #10, !dbg !4872
  %228 = icmp eq %struct.vfscore_file* %227, null, !dbg !4874
  br i1 %228, label %241, label %229, !dbg !4875

; <label>:229:                                    ; preds = %225
  %230 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %227, i64 0, i32 6, !dbg !4876
  %231 = load %struct.dentry*, %struct.dentry** %230, align 8, !dbg !4876, !tbaa !2817
  %232 = getelementptr inbounds %struct.dentry, %struct.dentry* %231, i64 0, i32 3, !dbg !4877
  %233 = load %struct.vnode*, %struct.vnode** %232, align 8, !dbg !4877, !tbaa !3077
  %234 = getelementptr inbounds %struct.vnode, %struct.vnode* %233, i64 0, i32 5, !dbg !4878
  %235 = load i32, i32* %234, align 4, !dbg !4878, !tbaa !2827
  %236 = icmp eq i32 %235, 6, !dbg !4879
  br i1 %236, label %237, label %241, !dbg !4880

; <label>:237:                                    ; preds = %229
  %238 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %227, i64 0, i32 4, !dbg !4881
  %239 = bitcast i8** %238 to %struct.sock_net_file**, !dbg !4881
  %240 = load %struct.sock_net_file*, %struct.sock_net_file** %239, align 8, !dbg !4881, !tbaa !2813
  br label %241, !dbg !4882

; <label>:241:                                    ; preds = %225, %229, %237
  %242 = phi %struct.sock_net_file* [ %240, %237 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %225 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %229 ], !dbg !4883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4884
  store %struct.sock_net_file* %242, %struct.sock_net_file** %9, align 8, !dbg !4885, !tbaa !1426
  %243 = ptrtoint %struct.sock_net_file* %242 to i64, !dbg !4885
  br label %254, !dbg !4885

; <label>:244:                                    ; preds = %222, %219
  %245 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4886, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4890
  %246 = and i64 %245, -65536, !dbg !4892
  %247 = or i64 %246, 4097, !dbg !4892
  %248 = add nsw i64 %247, -1, !dbg !4892
  %249 = inttoptr i64 %248 to i32*, !dbg !4893
  %250 = load i32, i32* %249, align 4096, !dbg !4894, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4895
  %251 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %71, i32 %250, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4896, !srcloc !4897
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %251) #6, !dbg !4898, !srcloc !4902
  %252 = load i64, i64* %65, align 8, !dbg !4903, !tbaa !1426
  %253 = inttoptr i64 %252 to %struct.sock_net_file*
  br label %254

; <label>:254:                                    ; preds = %244, %241
  %255 = phi %struct.sock_net_file* [ %253, %244 ], [ %242, %241 ]
  %256 = phi i64 [ %252, %244 ], [ %243, %241 ], !dbg !4903
  %257 = add i64 %256, 512, !dbg !4903
  %258 = icmp ult i64 %257, 513, !dbg !4903
  %259 = trunc i64 %256 to i32, !dbg !4905
  %260 = icmp eq i32 %259, -9, !dbg !4908
  %261 = and i1 %258, %260, !dbg !4903
  br i1 %261, label %262, label %266, !dbg !4903

; <label>:262:                                    ; preds = %254
  %263 = xor i64 %216, -1, !dbg !4909
  %264 = load i64, i64* %213, align 8, !dbg !4909, !tbaa !2645
  %265 = and i64 %264, %263, !dbg !4909
  store i64 %265, i64* %213, align 8, !dbg !4909, !tbaa !2645
  br label %278, !dbg !4911

; <label>:266:                                    ; preds = %254
  %267 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %255, i64 0, i32 1, !dbg !4912
  %268 = load i32, i32* %267, align 8, !dbg !4912, !tbaa !1421
  %269 = icmp slt i32 %210, %268, !dbg !4914
  %270 = select i1 %269, i32 %268, i32 %210, !dbg !4915
  %271 = and i32 %268, 63, !dbg !4916
  %272 = zext i32 %271 to i64, !dbg !4916
  %273 = shl i64 1, %272, !dbg !4916
  %274 = load i64, i64* %68, align 8, !dbg !4916, !tbaa !2645
  %275 = or i64 %273, %274, !dbg !4916
  store i64 %275, i64* %68, align 8, !dbg !4916, !tbaa !2645
  %276 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %255, i64 0, i32 0, !dbg !4917
  %277 = load %struct.vfscore_file*, %struct.vfscore_file** %276, align 8, !dbg !4917, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %277) #10, !dbg !4918
  br label %278, !dbg !4919

; <label>:278:                                    ; preds = %211, %209, %266, %262, %193, %124
  %279 = phi i32 [ %72, %124 ], [ %141, %193 ], [ %210, %262 ], [ %270, %266 ], [ %210, %211 ], [ %210, %209 ], !dbg !4920
  %280 = add nuw nsw i64 %71, 1, !dbg !4921
  %281 = icmp eq i64 %280, %69, !dbg !4687
  br i1 %281, label %282, label %70, !dbg !4688, !llvm.loop !4922

; <label>:282:                                    ; preds = %278, %17
  %283 = phi i32 [ 0, %17 ], [ %279, %278 ], !dbg !4924
  %284 = add nsw i32 %283, 1, !dbg !4925
  %285 = call i32 @lwip_select(i32 %284, %struct._types_fd_set* nonnull %6, %struct._types_fd_set* nonnull %7, %struct._types_fd_set* nonnull %8, %struct.timeval* %4) #8, !dbg !4929
  %286 = icmp sgt i32 %285, -1, !dbg !4931
  %287 = and i1 %286, %39, !dbg !4933
  br i1 %287, label %288, label %477, !dbg !4933

; <label>:288:                                    ; preds = %282
  %289 = icmp eq %struct._types_fd_set* %1, null
  %290 = icmp eq %struct._types_fd_set* %2, null
  %291 = icmp eq %struct._types_fd_set* %3, null
  %292 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %6, i64 0, i32 0, i64 0
  %293 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %7, i64 0, i32 0, i64 0
  %294 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0
  %295 = zext i32 %0 to i64
  br label %296, !dbg !4934

; <label>:296:                                    ; preds = %474, %288
  %297 = phi i64 [ 0, %288 ], [ %475, %474 ]
  br i1 %289, label %356, label %298, !dbg !4935

; <label>:298:                                    ; preds = %296
  %299 = lshr i64 %297, 6, !dbg !4936
  %300 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %299, !dbg !4936
  %301 = load i64, i64* %300, align 8, !dbg !4936, !tbaa !2645
  %302 = and i64 %297, 63, !dbg !4936
  %303 = shl i64 1, %302, !dbg !4936
  %304 = and i64 %301, %303, !dbg !4936
  %305 = icmp eq i64 %304, 0, !dbg !4936
  br i1 %305, label %356, label %306, !dbg !4937

; <label>:306:                                    ; preds = %298
  %307 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4938, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4941
  %308 = icmp ult i64 %307, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4942
  br i1 %308, label %330, label %309, !dbg !4942

; <label>:309:                                    ; preds = %306
  %310 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4943, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4946
  %311 = icmp ugt i64 %310, ptrtoint ([0 x i8]* @_end to i64), !dbg !4942
  br i1 %311, label %330, label %312, !dbg !4947

; <label>:312:                                    ; preds = %309
  %313 = trunc i64 %297 to i32, !dbg !4952
  %314 = call %struct.vfscore_file* @vfscore_get_file(i32 %313) #10, !dbg !4952
  %315 = icmp eq %struct.vfscore_file* %314, null, !dbg !4954
  br i1 %315, label %328, label %316, !dbg !4955

; <label>:316:                                    ; preds = %312
  %317 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %314, i64 0, i32 6, !dbg !4956
  %318 = load %struct.dentry*, %struct.dentry** %317, align 8, !dbg !4956, !tbaa !2817
  %319 = getelementptr inbounds %struct.dentry, %struct.dentry* %318, i64 0, i32 3, !dbg !4957
  %320 = load %struct.vnode*, %struct.vnode** %319, align 8, !dbg !4957, !tbaa !3077
  %321 = getelementptr inbounds %struct.vnode, %struct.vnode* %320, i64 0, i32 5, !dbg !4958
  %322 = load i32, i32* %321, align 4, !dbg !4958, !tbaa !2827
  %323 = icmp eq i32 %322, 6, !dbg !4959
  br i1 %323, label %324, label %328, !dbg !4960

; <label>:324:                                    ; preds = %316
  %325 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %314, i64 0, i32 4, !dbg !4961
  %326 = bitcast i8** %325 to %struct.sock_net_file**, !dbg !4961
  %327 = load %struct.sock_net_file*, %struct.sock_net_file** %326, align 8, !dbg !4961, !tbaa !2813
  br label %328, !dbg !4962

; <label>:328:                                    ; preds = %312, %316, %324
  %329 = phi %struct.sock_net_file* [ %327, %324 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %312 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %316 ], !dbg !4963
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4964
  store %struct.sock_net_file* %329, %struct.sock_net_file** %9, align 8, !dbg !4965, !tbaa !1426
  br label %339, !dbg !4965

; <label>:330:                                    ; preds = %309, %306
  %331 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4966, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4970
  %332 = and i64 %331, -65536, !dbg !4972
  %333 = or i64 %332, 4097, !dbg !4972
  %334 = add nsw i64 %333, -1, !dbg !4972
  %335 = inttoptr i64 %334 to i32*, !dbg !4973
  %336 = load i32, i32* %335, align 4096, !dbg !4974, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4975
  %337 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %297, i32 %336, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4976, !srcloc !4977
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %337) #6, !dbg !4978, !srcloc !4982
  %338 = load %struct.sock_net_file*, %struct.sock_net_file** %9, align 8, !dbg !4983, !tbaa !1426
  br label %339

; <label>:339:                                    ; preds = %330, %328
  %340 = phi %struct.sock_net_file* [ %338, %330 ], [ %329, %328 ], !dbg !4983
  %341 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %340, i64 0, i32 1, !dbg !4983
  %342 = load i32, i32* %341, align 8, !dbg !4983, !tbaa !1421
  %343 = load i64, i64* %292, align 8, !dbg !4983, !tbaa !2645
  %344 = and i32 %342, 63, !dbg !4983
  %345 = zext i32 %344 to i64, !dbg !4983
  %346 = shl i64 1, %345, !dbg !4983
  %347 = and i64 %346, %343, !dbg !4983
  %348 = icmp eq i64 %347, 0, !dbg !4983
  br i1 %348, label %349, label %353, !dbg !4985

; <label>:349:                                    ; preds = %339
  %350 = xor i64 %303, -1, !dbg !4986
  %351 = load i64, i64* %300, align 8, !dbg !4986, !tbaa !2645
  %352 = and i64 %351, %350, !dbg !4986
  store i64 %352, i64* %300, align 8, !dbg !4986, !tbaa !2645
  br label %353, !dbg !4986

; <label>:353:                                    ; preds = %339, %349
  %354 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %340, i64 0, i32 0, !dbg !4987
  %355 = load %struct.vfscore_file*, %struct.vfscore_file** %354, align 8, !dbg !4987, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %355) #10, !dbg !4988
  br label %356, !dbg !4989

; <label>:356:                                    ; preds = %298, %296, %353
  br i1 %290, label %415, label %357, !dbg !4990

; <label>:357:                                    ; preds = %356
  %358 = lshr i64 %297, 6, !dbg !4991
  %359 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %358, !dbg !4991
  %360 = load i64, i64* %359, align 8, !dbg !4991, !tbaa !2645
  %361 = and i64 %297, 63, !dbg !4991
  %362 = shl i64 1, %361, !dbg !4991
  %363 = and i64 %360, %362, !dbg !4991
  %364 = icmp eq i64 %363, 0, !dbg !4991
  br i1 %364, label %415, label %365, !dbg !4992

; <label>:365:                                    ; preds = %357
  %366 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4993, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4996
  %367 = icmp ult i64 %366, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4997
  br i1 %367, label %389, label %368, !dbg !4997

; <label>:368:                                    ; preds = %365
  %369 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4998, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5001
  %370 = icmp ugt i64 %369, ptrtoint ([0 x i8]* @_end to i64), !dbg !4997
  br i1 %370, label %389, label %371, !dbg !5002

; <label>:371:                                    ; preds = %368
  %372 = trunc i64 %297 to i32, !dbg !5007
  %373 = call %struct.vfscore_file* @vfscore_get_file(i32 %372) #10, !dbg !5007
  %374 = icmp eq %struct.vfscore_file* %373, null, !dbg !5009
  br i1 %374, label %387, label %375, !dbg !5010

; <label>:375:                                    ; preds = %371
  %376 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %373, i64 0, i32 6, !dbg !5011
  %377 = load %struct.dentry*, %struct.dentry** %376, align 8, !dbg !5011, !tbaa !2817
  %378 = getelementptr inbounds %struct.dentry, %struct.dentry* %377, i64 0, i32 3, !dbg !5012
  %379 = load %struct.vnode*, %struct.vnode** %378, align 8, !dbg !5012, !tbaa !3077
  %380 = getelementptr inbounds %struct.vnode, %struct.vnode* %379, i64 0, i32 5, !dbg !5013
  %381 = load i32, i32* %380, align 4, !dbg !5013, !tbaa !2827
  %382 = icmp eq i32 %381, 6, !dbg !5014
  br i1 %382, label %383, label %387, !dbg !5015

; <label>:383:                                    ; preds = %375
  %384 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %373, i64 0, i32 4, !dbg !5016
  %385 = bitcast i8** %384 to %struct.sock_net_file**, !dbg !5016
  %386 = load %struct.sock_net_file*, %struct.sock_net_file** %385, align 8, !dbg !5016, !tbaa !2813
  br label %387, !dbg !5017

; <label>:387:                                    ; preds = %371, %375, %383
  %388 = phi %struct.sock_net_file* [ %386, %383 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %371 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %375 ], !dbg !5018
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5019
  store %struct.sock_net_file* %388, %struct.sock_net_file** %9, align 8, !dbg !5020, !tbaa !1426
  br label %398, !dbg !5020

; <label>:389:                                    ; preds = %368, %365
  %390 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5021, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5025
  %391 = and i64 %390, -65536, !dbg !5027
  %392 = or i64 %391, 4097, !dbg !5027
  %393 = add nsw i64 %392, -1, !dbg !5027
  %394 = inttoptr i64 %393 to i32*, !dbg !5028
  %395 = load i32, i32* %394, align 4096, !dbg !5029, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5030
  %396 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %297, i32 %395, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !5031, !srcloc !5032
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %396) #6, !dbg !5033, !srcloc !5037
  %397 = load %struct.sock_net_file*, %struct.sock_net_file** %9, align 8, !dbg !5038, !tbaa !1426
  br label %398

; <label>:398:                                    ; preds = %389, %387
  %399 = phi %struct.sock_net_file* [ %397, %389 ], [ %388, %387 ], !dbg !5038
  %400 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %399, i64 0, i32 1, !dbg !5038
  %401 = load i32, i32* %400, align 8, !dbg !5038, !tbaa !1421
  %402 = load i64, i64* %293, align 8, !dbg !5038, !tbaa !2645
  %403 = and i32 %401, 63, !dbg !5038
  %404 = zext i32 %403 to i64, !dbg !5038
  %405 = shl i64 1, %404, !dbg !5038
  %406 = and i64 %405, %402, !dbg !5038
  %407 = icmp eq i64 %406, 0, !dbg !5038
  br i1 %407, label %408, label %412, !dbg !5040

; <label>:408:                                    ; preds = %398
  %409 = xor i64 %362, -1, !dbg !5041
  %410 = load i64, i64* %359, align 8, !dbg !5041, !tbaa !2645
  %411 = and i64 %410, %409, !dbg !5041
  store i64 %411, i64* %359, align 8, !dbg !5041, !tbaa !2645
  br label %412, !dbg !5041

; <label>:412:                                    ; preds = %398, %408
  %413 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %399, i64 0, i32 0, !dbg !5042
  %414 = load %struct.vfscore_file*, %struct.vfscore_file** %413, align 8, !dbg !5042, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %414) #10, !dbg !5043
  br label %415, !dbg !5044

; <label>:415:                                    ; preds = %357, %356, %412
  br i1 %291, label %474, label %416, !dbg !5045

; <label>:416:                                    ; preds = %415
  %417 = lshr i64 %297, 6, !dbg !5046
  %418 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %417, !dbg !5046
  %419 = load i64, i64* %418, align 8, !dbg !5046, !tbaa !2645
  %420 = and i64 %297, 63, !dbg !5046
  %421 = shl i64 1, %420, !dbg !5046
  %422 = and i64 %419, %421, !dbg !5046
  %423 = icmp eq i64 %422, 0, !dbg !5046
  br i1 %423, label %474, label %424, !dbg !5047

; <label>:424:                                    ; preds = %416
  %425 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5048, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5051
  %426 = icmp ult i64 %425, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5052
  br i1 %426, label %448, label %427, !dbg !5052

; <label>:427:                                    ; preds = %424
  %428 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5053, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5056
  %429 = icmp ugt i64 %428, ptrtoint ([0 x i8]* @_end to i64), !dbg !5052
  br i1 %429, label %448, label %430, !dbg !5057

; <label>:430:                                    ; preds = %427
  %431 = trunc i64 %297 to i32, !dbg !5062
  %432 = call %struct.vfscore_file* @vfscore_get_file(i32 %431) #10, !dbg !5062
  %433 = icmp eq %struct.vfscore_file* %432, null, !dbg !5064
  br i1 %433, label %446, label %434, !dbg !5065

; <label>:434:                                    ; preds = %430
  %435 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %432, i64 0, i32 6, !dbg !5066
  %436 = load %struct.dentry*, %struct.dentry** %435, align 8, !dbg !5066, !tbaa !2817
  %437 = getelementptr inbounds %struct.dentry, %struct.dentry* %436, i64 0, i32 3, !dbg !5067
  %438 = load %struct.vnode*, %struct.vnode** %437, align 8, !dbg !5067, !tbaa !3077
  %439 = getelementptr inbounds %struct.vnode, %struct.vnode* %438, i64 0, i32 5, !dbg !5068
  %440 = load i32, i32* %439, align 4, !dbg !5068, !tbaa !2827
  %441 = icmp eq i32 %440, 6, !dbg !5069
  br i1 %441, label %442, label %446, !dbg !5070

; <label>:442:                                    ; preds = %434
  %443 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %432, i64 0, i32 4, !dbg !5071
  %444 = bitcast i8** %443 to %struct.sock_net_file**, !dbg !5071
  %445 = load %struct.sock_net_file*, %struct.sock_net_file** %444, align 8, !dbg !5071, !tbaa !2813
  br label %446, !dbg !5072

; <label>:446:                                    ; preds = %430, %434, %442
  %447 = phi %struct.sock_net_file* [ %445, %442 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %430 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %434 ], !dbg !5073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5074
  store %struct.sock_net_file* %447, %struct.sock_net_file** %9, align 8, !dbg !5075, !tbaa !1426
  br label %457, !dbg !5075

; <label>:448:                                    ; preds = %427, %424
  %449 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5076, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5080
  %450 = and i64 %449, -65536, !dbg !5082
  %451 = or i64 %450, 4097, !dbg !5082
  %452 = add nsw i64 %451, -1, !dbg !5082
  %453 = inttoptr i64 %452 to i32*, !dbg !5083
  %454 = load i32, i32* %453, align 4096, !dbg !5084, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5085
  %455 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %297, i32 %454, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !5086, !srcloc !5087
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %455) #6, !dbg !5088, !srcloc !5092
  %456 = load %struct.sock_net_file*, %struct.sock_net_file** %9, align 8, !dbg !5093, !tbaa !1426
  br label %457

; <label>:457:                                    ; preds = %448, %446
  %458 = phi %struct.sock_net_file* [ %456, %448 ], [ %447, %446 ], !dbg !5093
  %459 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %458, i64 0, i32 1, !dbg !5093
  %460 = load i32, i32* %459, align 8, !dbg !5093, !tbaa !1421
  %461 = load i64, i64* %294, align 8, !dbg !5093, !tbaa !2645
  %462 = and i32 %460, 63, !dbg !5093
  %463 = zext i32 %462 to i64, !dbg !5093
  %464 = shl i64 1, %463, !dbg !5093
  %465 = and i64 %464, %461, !dbg !5093
  %466 = icmp eq i64 %465, 0, !dbg !5093
  br i1 %466, label %467, label %471, !dbg !5095

; <label>:467:                                    ; preds = %457
  %468 = xor i64 %421, -1, !dbg !5096
  %469 = load i64, i64* %418, align 8, !dbg !5096, !tbaa !2645
  %470 = and i64 %469, %468, !dbg !5096
  store i64 %470, i64* %418, align 8, !dbg !5096, !tbaa !2645
  br label %471, !dbg !5096

; <label>:471:                                    ; preds = %457, %467
  %472 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %458, i64 0, i32 0, !dbg !5097
  %473 = load %struct.vfscore_file*, %struct.vfscore_file** %472, align 8, !dbg !5097, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %473) #10, !dbg !5098
  br label %474, !dbg !5099

; <label>:474:                                    ; preds = %416, %415, %471
  %475 = add nuw nsw i64 %297, 1, !dbg !5100
  %476 = icmp eq i64 %475, %295, !dbg !5101
  br i1 %476, label %477, label %296, !dbg !4934, !llvm.loop !5102

; <label>:477:                                    ; preds = %474, %282, %53, %54
  %478 = phi i32 [ 0, %54 ], [ 0, %53 ], [ %285, %282 ], [ %285, %474 ], !dbg !4788
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6, !dbg !5104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6, !dbg !5104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !5104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6, !dbg !5104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5104
  ret i32 %478, !dbg !5104
}

; Function Attrs: noredzone
declare dso_local void @uk_sched_thread_sleep(i64) #5

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_select(i32, %struct._types_fd_set*, %struct._types_fd_set*, %struct._types_fd_set*, %struct.timeval* readonly) local_unnamed_addr #0 !dbg !5105 {
  %6 = alloca %struct._types_fd_set, align 8
  %7 = alloca %struct._types_fd_set, align 8
  %8 = alloca %struct._types_fd_set, align 8
  %9 = bitcast %struct._types_fd_set* %6 to i8*, !dbg !5217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !5217
  %10 = bitcast %struct._types_fd_set* %7 to i8*, !dbg !5217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6, !dbg !5217
  %11 = bitcast %struct._types_fd_set* %8 to i8*, !dbg !5217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !5217
  %12 = icmp ugt i32 %0, 64, !dbg !5218
  br i1 %12, label %13, label %28, !dbg !5218

; <label>:13:                                     ; preds = %5
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5219, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5222
  %15 = icmp ult i64 %14, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5223
  br i1 %15, label %21, label %16, !dbg !5223

; <label>:16:                                     ; preds = %13
  %17 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5224, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5227
  %18 = icmp ugt i64 %17, ptrtoint ([0 x i8]* @_end to i64), !dbg !5223
  br i1 %18, label %21, label %19, !dbg !5228

; <label>:19:                                     ; preds = %16
  %20 = tail call i32* @__errno() #10, !dbg !5232
  store i32 22, i32* %20, align 4, !dbg !5233, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5234
  br label %340, !dbg !5235

; <label>:21:                                     ; preds = %16, %13
  %22 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5236, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5240
  %23 = and i64 %22, -65536, !dbg !5242
  %24 = or i64 %23, 4097, !dbg !5242
  %25 = add nsw i64 %24, -1, !dbg !5242
  %26 = inttoptr i64 %25 to i32*, !dbg !5243
  %27 = load i32, i32* %26, align 4096, !dbg !5244, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5245
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -22, i32 %27, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5246, !srcloc !5247
  br label %340

; <label>:28:                                     ; preds = %5
  %29 = call fastcc i32 @lwip_selscan(i32 %0, %struct._types_fd_set* %1, %struct._types_fd_set* %2, %struct._types_fd_set* %3, %struct._types_fd_set* nonnull %6, %struct._types_fd_set* nonnull %7, %struct._types_fd_set* nonnull %8) #8, !dbg !5251
  %30 = icmp slt i32 %29, 0, !dbg !5253
  br i1 %30, label %31, label %46, !dbg !5254

; <label>:31:                                     ; preds = %28
  %32 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5255, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5258
  %33 = icmp ult i64 %32, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5259
  br i1 %33, label %39, label %34, !dbg !5259

; <label>:34:                                     ; preds = %31
  %35 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5260, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5263
  %36 = icmp ugt i64 %35, ptrtoint ([0 x i8]* @_end to i64), !dbg !5259
  br i1 %36, label %39, label %37, !dbg !5264

; <label>:37:                                     ; preds = %34
  %38 = tail call i32* @__errno() #10, !dbg !5268
  store i32 9, i32* %38, align 4, !dbg !5269, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5270
  br label %340, !dbg !5271

; <label>:39:                                     ; preds = %34, %31
  %40 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5272, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5276
  %41 = and i64 %40, -65536, !dbg !5278
  %42 = or i64 %41, 4097, !dbg !5278
  %43 = add nsw i64 %42, -1, !dbg !5278
  %44 = inttoptr i64 %43 to i32*, !dbg !5279
  %45 = load i32, i32* %44, align 4096, !dbg !5280, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5281
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %45, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5282, !srcloc !5283
  br label %340

; <label>:46:                                     ; preds = %28
  %47 = icmp eq i32 %29, 0, !dbg !5284
  br i1 %47, label %48, label %306, !dbg !5285

; <label>:48:                                     ; preds = %46
  %49 = icmp eq %struct.timeval* %4, null, !dbg !5286
  br i1 %49, label %58, label %50, !dbg !5287

; <label>:50:                                     ; preds = %48
  %51 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0, !dbg !5288
  %52 = load i64, i64* %51, align 8, !dbg !5288, !tbaa !4690
  %53 = icmp eq i64 %52, 0, !dbg !5289
  br i1 %53, label %54, label %58, !dbg !5290

; <label>:54:                                     ; preds = %50
  %55 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1, !dbg !5291
  %56 = load i64, i64* %55, align 8, !dbg !5291, !tbaa !4695
  %57 = icmp eq i64 %56, 0, !dbg !5292
  br i1 %57, label %306, label %58, !dbg !5293

; <label>:58:                                     ; preds = %48, %54, %50
  %59 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !5294, !tbaa !1426
  %60 = icmp eq %struct.uk_alloc* %59, null, !dbg !5298
  br i1 %60, label %61, label %63, !dbg !5299, !prof !1445

; <label>:61:                                     ; preds = %58
  %62 = tail call i32* @__errno() #10, !dbg !5300
  store i32 12, i32* %62, align 4, !dbg !5301, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5302
  br label %69, !dbg !5294

; <label>:63:                                     ; preds = %58
  %64 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %59, i64 0, i32 0, !dbg !5307
  %65 = load i8* (%struct.uk_alloc*, i64)*, i8* (%struct.uk_alloc*, i64)** %64, align 8, !dbg !5307, !tbaa !1426
  %66 = tail call i8* %65(%struct.uk_alloc* nonnull %59, i64 88) #10, !dbg !5308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5309
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5302
  %67 = bitcast i8* %66 to %struct.lwip_select_cb*, !dbg !5294
  %68 = icmp eq i8* %66, null, !dbg !5310
  br i1 %68, label %69, label %84, !dbg !5294

; <label>:69:                                     ; preds = %61, %63
  %70 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5312, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5315
  %71 = icmp ult i64 %70, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5316
  br i1 %71, label %77, label %72, !dbg !5316

; <label>:72:                                     ; preds = %69
  %73 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5317, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5320
  %74 = icmp ugt i64 %73, ptrtoint ([0 x i8]* @_end to i64), !dbg !5316
  br i1 %74, label %77, label %75, !dbg !5321

; <label>:75:                                     ; preds = %72
  %76 = tail call i32* @__errno() #10, !dbg !5325
  store i32 12, i32* %76, align 4, !dbg !5326, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5327
  br label %340, !dbg !5328

; <label>:77:                                     ; preds = %72, %69
  %78 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5329, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5333
  %79 = and i64 %78, -65536, !dbg !5335
  %80 = or i64 %79, 4097, !dbg !5335
  %81 = add nsw i64 %80, -1, !dbg !5335
  %82 = inttoptr i64 %81 to i32*, !dbg !5336
  %83 = load i32, i32* %82, align 4096, !dbg !5337, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5338
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -12, i32 %83, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5339, !srcloc !5340
  br label %340

; <label>:84:                                     ; preds = %63
  %85 = tail call i8* @memset(i8* nonnull %66, i32 0, i64 88) #10, !dbg !5341
  %86 = getelementptr inbounds i8, i8* %66, i64 16, !dbg !5342
  %87 = bitcast i8* %86 to %struct._types_fd_set**, !dbg !5342
  store %struct._types_fd_set* %1, %struct._types_fd_set** %87, align 8, !dbg !5343, !tbaa !5344
  %88 = getelementptr inbounds i8, i8* %66, i64 24, !dbg !5345
  %89 = bitcast i8* %88 to %struct._types_fd_set**, !dbg !5345
  store %struct._types_fd_set* %2, %struct._types_fd_set** %89, align 8, !dbg !5346, !tbaa !5347
  %90 = getelementptr inbounds i8, i8* %66, i64 32, !dbg !5348
  %91 = bitcast i8* %90 to %struct._types_fd_set**, !dbg !5348
  store %struct._types_fd_set* %3, %struct._types_fd_set** %91, align 8, !dbg !5349, !tbaa !5350
  %92 = getelementptr inbounds i8, i8* %66, i64 56, !dbg !5351
  %93 = bitcast i8* %92 to %struct.sys_sem_t*, !dbg !5351
  %94 = tail call signext i8 @sys_sem_new(%struct.sys_sem_t* nonnull %93, i8 zeroext 0) #10, !dbg !5352
  %95 = icmp eq i8 %94, 0, !dbg !5353
  br i1 %95, label %118, label %96, !dbg !5354

; <label>:96:                                     ; preds = %84
  %97 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5355, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5358
  %98 = icmp ult i64 %97, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5359
  br i1 %98, label %104, label %99, !dbg !5359

; <label>:99:                                     ; preds = %96
  %100 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5360, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5363
  %101 = icmp ugt i64 %100, ptrtoint ([0 x i8]* @_end to i64), !dbg !5359
  br i1 %101, label %104, label %102, !dbg !5364

; <label>:102:                                    ; preds = %99
  %103 = tail call i32* @__errno() #10, !dbg !5368
  store i32 12, i32* %103, align 4, !dbg !5369, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5370
  br label %111, !dbg !5371

; <label>:104:                                    ; preds = %99, %96
  %105 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5372, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5376
  %106 = and i64 %105, -65536, !dbg !5378
  %107 = or i64 %106, 4097, !dbg !5378
  %108 = add nsw i64 %107, -1, !dbg !5378
  %109 = inttoptr i64 %108 to i32*, !dbg !5379
  %110 = load i32, i32* %109, align 4096, !dbg !5380, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5381
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -12, i32 %110, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5382, !srcloc !5383
  br label %111

; <label>:111:                                    ; preds = %104, %102
  %112 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !5384, !tbaa !1426
  %113 = icmp eq %struct.uk_alloc* %112, null, !dbg !5391
  br i1 %113, label %114, label %115, !dbg !5392, !prof !1445

; <label>:114:                                    ; preds = %111
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !5393
  tail call void @ukplat_terminate(i32 3) #9, !dbg !5393
  unreachable, !dbg !5393

; <label>:115:                                    ; preds = %111
  %116 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %112, i64 0, i32 5, !dbg !5394
  %117 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %116, align 8, !dbg !5394, !tbaa !1426
  tail call void %117(%struct.uk_alloc* nonnull %112, i8* nonnull %66) #10, !dbg !5395
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5396
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5397
  br label %340, !dbg !5398

; <label>:118:                                    ; preds = %84
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !5401
  %119 = load i64, i64* bitcast (%struct.lwip_select_cb** @select_cb_list to i64*), align 8, !dbg !5402, !tbaa !1426
  %120 = bitcast i8* %66 to i64*, !dbg !5403
  store i64 %119, i64* %120, align 8, !dbg !5403, !tbaa !4435
  %121 = icmp eq i64 %119, 0, !dbg !5404
  br i1 %121, label %126, label %122, !dbg !5405

; <label>:122:                                    ; preds = %118
  %123 = inttoptr i64 %119 to %struct.lwip_select_cb*, !dbg !5406
  %124 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %123, i64 0, i32 1, !dbg !5407
  %125 = bitcast %struct.lwip_select_cb** %124 to i8**, !dbg !5408
  store i8* %66, i8** %125, align 8, !dbg !5408, !tbaa !4443
  br label %126, !dbg !5409

; <label>:126:                                    ; preds = %118, %122
  store i8* %66, i8** bitcast (%struct.lwip_select_cb** @select_cb_list to i8**), align 8, !dbg !5410, !tbaa !1426
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !5411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5412
  %127 = icmp sgt i32 %0, 0, !dbg !5415
  br i1 %127, label %128, label %205, !dbg !5416

; <label>:128:                                    ; preds = %126
  %129 = icmp eq %struct._types_fd_set* %1, null
  %130 = icmp eq %struct._types_fd_set* %2, null
  %131 = icmp eq %struct._types_fd_set* %3, null
  %132 = sext i32 %0 to i64, !dbg !5416
  br label %133, !dbg !5416

; <label>:133:                                    ; preds = %128, %202
  %134 = phi i64 [ 0, %128 ], [ %203, %202 ]
  br i1 %129, label %143, label %135, !dbg !5417

; <label>:135:                                    ; preds = %133
  %136 = lshr i64 %134, 6, !dbg !5418
  %137 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %136, !dbg !5418
  %138 = load i64, i64* %137, align 8, !dbg !5418, !tbaa !2645
  %139 = and i64 %134, 63, !dbg !5418
  %140 = shl i64 1, %139, !dbg !5418
  %141 = and i64 %138, %140, !dbg !5418
  %142 = icmp eq i64 %141, 0, !dbg !5418
  br i1 %142, label %143, label %161, !dbg !5419

; <label>:143:                                    ; preds = %135, %133
  br i1 %130, label %152, label %144, !dbg !5420

; <label>:144:                                    ; preds = %143
  %145 = lshr i64 %134, 6, !dbg !5421
  %146 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %145, !dbg !5421
  %147 = load i64, i64* %146, align 8, !dbg !5421, !tbaa !2645
  %148 = and i64 %134, 63, !dbg !5421
  %149 = shl i64 1, %148, !dbg !5421
  %150 = and i64 %147, %149, !dbg !5421
  %151 = icmp eq i64 %150, 0, !dbg !5421
  br i1 %151, label %152, label %161, !dbg !5422

; <label>:152:                                    ; preds = %144, %143
  br i1 %131, label %202, label %153, !dbg !5423

; <label>:153:                                    ; preds = %152
  %154 = lshr i64 %134, 6, !dbg !5424
  %155 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %154, !dbg !5424
  %156 = load i64, i64* %155, align 8, !dbg !5424, !tbaa !2645
  %157 = and i64 %134, 63, !dbg !5424
  %158 = shl i64 1, %157, !dbg !5424
  %159 = and i64 %156, %158, !dbg !5424
  %160 = icmp eq i64 %159, 0, !dbg !5424
  br i1 %160, label %202, label %161, !dbg !5425

; <label>:161:                                    ; preds = %135, %144, %153
  %162 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !5426
  %163 = icmp ugt i64 %134, 63, !dbg !5438
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5439
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5440
  br i1 %163, label %185, label %164, !dbg !5441

; <label>:164:                                    ; preds = %161
  %165 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %134, i32 5, !dbg !5442
  %166 = load i8, i8* %165, align 2, !dbg !5443, !tbaa !5444
  %167 = add i8 %166, 1, !dbg !5443
  store i8 %167, i8* %165, align 2, !dbg !5443, !tbaa !5444
  %168 = icmp eq i8 %167, 0, !dbg !5445
  br i1 %168, label %169, label %201, !dbg !5446

; <label>:169:                                    ; preds = %164
  %170 = trunc i64 %134 to i32, !dbg !5414
  store i8 %166, i8* %165, align 2, !dbg !5447, !tbaa !5444
  tail call void @ukplat_lcpu_restore_irqf(i64 %162) #10, !dbg !5448
  %171 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5449, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5452
  %172 = icmp ult i64 %171, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5453
  br i1 %172, label %178, label %173, !dbg !5453

; <label>:173:                                    ; preds = %169
  %174 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5454, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5457
  %175 = icmp ugt i64 %174, ptrtoint ([0 x i8]* @_end to i64), !dbg !5453
  br i1 %175, label %178, label %176, !dbg !5458

; <label>:176:                                    ; preds = %173
  %177 = tail call i32* @__errno() #10, !dbg !5462
  store i32 16, i32* %177, align 4, !dbg !5463, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5464
  br label %225, !dbg !5465

; <label>:178:                                    ; preds = %173, %169
  %179 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5466, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5470
  %180 = and i64 %179, -65536, !dbg !5472
  %181 = or i64 %180, 4097, !dbg !5472
  %182 = add nsw i64 %181, -1, !dbg !5472
  %183 = inttoptr i64 %182 to i32*, !dbg !5473
  %184 = load i32, i32* %183, align 4096, !dbg !5474, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5475
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -16, i32 %184, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5476, !srcloc !5477
  br label %225

; <label>:185:                                    ; preds = %161
  %186 = trunc i64 %134 to i32, !dbg !5414
  tail call void @ukplat_lcpu_restore_irqf(i64 %162) #10, !dbg !5478
  %187 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5479, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5482
  %188 = icmp ult i64 %187, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5483
  br i1 %188, label %194, label %189, !dbg !5483

; <label>:189:                                    ; preds = %185
  %190 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5484, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5487
  %191 = icmp ugt i64 %190, ptrtoint ([0 x i8]* @_end to i64), !dbg !5483
  br i1 %191, label %194, label %192, !dbg !5488

; <label>:192:                                    ; preds = %189
  %193 = tail call i32* @__errno() #10, !dbg !5492
  store i32 9, i32* %193, align 4, !dbg !5493, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5494
  br label %225, !dbg !5495

; <label>:194:                                    ; preds = %189, %185
  %195 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5496, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5500
  %196 = and i64 %195, -65536, !dbg !5502
  %197 = or i64 %196, 4097, !dbg !5502
  %198 = add nsw i64 %197, -1, !dbg !5502
  %199 = inttoptr i64 %198 to i32*, !dbg !5503
  %200 = load i32, i32* %199, align 4096, !dbg !5504, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5505
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %200, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5506, !srcloc !5507
  br label %225

; <label>:201:                                    ; preds = %164
  tail call void @ukplat_lcpu_restore_irqf(i64 %162) #10, !dbg !5508
  br label %202

; <label>:202:                                    ; preds = %201, %153, %152
  %203 = add nuw nsw i64 %134, 1, !dbg !5509
  %204 = icmp slt i64 %203, %132, !dbg !5415
  br i1 %204, label %133, label %205, !dbg !5416, !llvm.loop !5510

; <label>:205:                                    ; preds = %202, %126
  %206 = call fastcc i32 @lwip_selscan(i32 %0, %struct._types_fd_set* %1, %struct._types_fd_set* %2, %struct._types_fd_set* %3, %struct._types_fd_set* nonnull %6, %struct._types_fd_set* nonnull %7, %struct._types_fd_set* nonnull %8) #8, !dbg !5512
  %207 = icmp eq i32 %206, 0, !dbg !5513
  br i1 %207, label %208, label %225, !dbg !5514

; <label>:208:                                    ; preds = %205
  br i1 %49, label %221, label %209, !dbg !5515

; <label>:209:                                    ; preds = %208
  %210 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0, !dbg !5516
  %211 = load i64, i64* %210, align 8, !dbg !5516, !tbaa !4690
  %212 = mul nsw i64 %211, 1000, !dbg !5517
  %213 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1, !dbg !5518
  %214 = load i64, i64* %213, align 8, !dbg !5518, !tbaa !4695
  %215 = add nsw i64 %214, 500, !dbg !5519
  %216 = sdiv i64 %215, 1000, !dbg !5520
  %217 = add nsw i64 %216, %212, !dbg !5521
  %218 = icmp sgt i64 %217, 1, !dbg !5523
  %219 = select i1 %218, i64 %217, i64 1, !dbg !5523
  %220 = trunc i64 %219 to i32, !dbg !5523
  br label %221, !dbg !5523

; <label>:221:                                    ; preds = %209, %208
  %222 = phi i32 [ 0, %208 ], [ %220, %209 ], !dbg !5524
  %223 = tail call i32 @sys_arch_sem_wait(%struct.sys_sem_t* nonnull %93, i32 %222) #10, !dbg !5528
  %224 = zext i32 %223 to i64, !dbg !5529
  br label %225, !dbg !5529

; <label>:225:                                    ; preds = %178, %176, %194, %192, %205, %221
  %226 = phi i32 [ %0, %205 ], [ %0, %221 ], [ %186, %192 ], [ %186, %194 ], [ %170, %176 ], [ %170, %178 ]
  %227 = phi i32 [ %206, %205 ], [ 0, %221 ], [ -1, %192 ], [ -1, %194 ], [ -1, %176 ], [ -1, %178 ], !dbg !5530
  %228 = phi i64 [ 0, %205 ], [ %224, %221 ], [ 0, %192 ], [ 0, %194 ], [ 0, %176 ], [ 0, %178 ]
  %229 = icmp sgt i32 %226, 0, !dbg !5531
  br i1 %229, label %230, label %293, !dbg !5532

; <label>:230:                                    ; preds = %225
  %231 = icmp eq %struct._types_fd_set* %1, null
  %232 = icmp eq %struct._types_fd_set* %2, null
  %233 = icmp eq %struct._types_fd_set* %3, null
  %234 = sext i32 %226 to i64, !dbg !5532
  br label %235, !dbg !5532

; <label>:235:                                    ; preds = %230, %289
  %236 = phi i64 [ 0, %230 ], [ %291, %289 ]
  %237 = phi i32 [ %227, %230 ], [ %290, %289 ]
  br i1 %231, label %246, label %238, !dbg !5533

; <label>:238:                                    ; preds = %235
  %239 = lshr i64 %236, 6, !dbg !5534
  %240 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %239, !dbg !5534
  %241 = load i64, i64* %240, align 8, !dbg !5534, !tbaa !2645
  %242 = and i64 %236, 63, !dbg !5534
  %243 = shl i64 1, %242, !dbg !5534
  %244 = and i64 %241, %243, !dbg !5534
  %245 = icmp eq i64 %244, 0, !dbg !5534
  br i1 %245, label %246, label %264, !dbg !5535

; <label>:246:                                    ; preds = %238, %235
  br i1 %232, label %255, label %247, !dbg !5536

; <label>:247:                                    ; preds = %246
  %248 = lshr i64 %236, 6, !dbg !5537
  %249 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %248, !dbg !5537
  %250 = load i64, i64* %249, align 8, !dbg !5537, !tbaa !2645
  %251 = and i64 %236, 63, !dbg !5537
  %252 = shl i64 1, %251, !dbg !5537
  %253 = and i64 %250, %252, !dbg !5537
  %254 = icmp eq i64 %253, 0, !dbg !5537
  br i1 %254, label %255, label %264, !dbg !5538

; <label>:255:                                    ; preds = %247, %246
  br i1 %233, label %289, label %256, !dbg !5539

; <label>:256:                                    ; preds = %255
  %257 = lshr i64 %236, 6, !dbg !5540
  %258 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %257, !dbg !5540
  %259 = load i64, i64* %258, align 8, !dbg !5540, !tbaa !2645
  %260 = and i64 %236, 63, !dbg !5540
  %261 = shl i64 1, %260, !dbg !5540
  %262 = and i64 %259, %261, !dbg !5540
  %263 = icmp eq i64 %262, 0, !dbg !5540
  br i1 %263, label %289, label %264, !dbg !5541

; <label>:264:                                    ; preds = %238, %247, %256
  %265 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !5542
  %266 = icmp ugt i64 %236, 63, !dbg !5549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5550
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5551
  br i1 %266, label %274, label %267, !dbg !5552

; <label>:267:                                    ; preds = %264
  %268 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %236, i32 5, !dbg !5553
  %269 = load i8, i8* %268, align 2, !dbg !5553, !tbaa !5444
  %270 = icmp eq i8 %269, 0, !dbg !5553
  br i1 %270, label %271, label %272, !dbg !5557

; <label>:271:                                    ; preds = %267
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0)) #8, !dbg !5558
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !5561
  tail call void @ukplat_terminate(i32 3) #9, !dbg !5561
  unreachable, !dbg !5561

; <label>:272:                                    ; preds = %267
  %273 = add i8 %269, -1, !dbg !5565
  store i8 %273, i8* %268, align 2, !dbg !5565, !tbaa !5444
  tail call void @ukplat_lcpu_restore_irqf(i64 %265) #10, !dbg !5568
  br label %289, !dbg !5569

; <label>:274:                                    ; preds = %264
  tail call void @ukplat_lcpu_restore_irqf(i64 %265) #10, !dbg !5570
  %275 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5571, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5574
  %276 = icmp ult i64 %275, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5575
  br i1 %276, label %282, label %277, !dbg !5575

; <label>:277:                                    ; preds = %274
  %278 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5576, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5579
  %279 = icmp ugt i64 %278, ptrtoint ([0 x i8]* @_end to i64), !dbg !5575
  br i1 %279, label %282, label %280, !dbg !5580

; <label>:280:                                    ; preds = %277
  %281 = tail call i32* @__errno() #10, !dbg !5584
  store i32 9, i32* %281, align 4, !dbg !5585, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5586
  br label %289, !dbg !5587

; <label>:282:                                    ; preds = %277, %274
  %283 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5588, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5592
  %284 = and i64 %283, -65536, !dbg !5594
  %285 = or i64 %284, 4097, !dbg !5594
  %286 = add nsw i64 %285, -1, !dbg !5594
  %287 = inttoptr i64 %286 to i32*, !dbg !5595
  %288 = load i32, i32* %287, align 4096, !dbg !5596, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5597
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %288, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5598, !srcloc !5599
  br label %289

; <label>:289:                                    ; preds = %272, %282, %280, %256, %255
  %290 = phi i32 [ %237, %256 ], [ %237, %255 ], [ %237, %272 ], [ -1, %280 ], [ -1, %282 ], !dbg !5600
  %291 = add nuw nsw i64 %236, 1, !dbg !5601
  %292 = icmp slt i64 %291, %234, !dbg !5531
  br i1 %292, label %235, label %293, !dbg !5532, !llvm.loop !5602

; <label>:293:                                    ; preds = %289, %225
  %294 = phi i32 [ %227, %225 ], [ %290, %289 ], !dbg !5600
  tail call fastcc void @lwip_unlink_select_cb(%struct.lwip_select_cb* %67) #8, !dbg !5604
  tail call void @sys_sem_free(%struct.sys_sem_t* nonnull %93) #10, !dbg !5605
  %295 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !5606, !tbaa !1426
  %296 = icmp eq %struct.uk_alloc* %295, null, !dbg !5613
  br i1 %296, label %297, label %298, !dbg !5614, !prof !1445

; <label>:297:                                    ; preds = %293
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !5615
  tail call void @ukplat_terminate(i32 3) #9, !dbg !5615
  unreachable, !dbg !5615

; <label>:298:                                    ; preds = %293
  %299 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %295, i64 0, i32 5, !dbg !5616
  %300 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %299, align 8, !dbg !5616, !tbaa !1426
  tail call void %300(%struct.uk_alloc* nonnull %295, i8* nonnull %66) #10, !dbg !5617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5618
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5619
  %301 = icmp slt i32 %294, 0, !dbg !5620
  br i1 %301, label %340, label %302, !dbg !5622

; <label>:302:                                    ; preds = %298
  %303 = icmp eq i64 %228, 4294967295, !dbg !5623
  br i1 %303, label %306, label %304, !dbg !5625

; <label>:304:                                    ; preds = %302
  %305 = call fastcc i32 @lwip_selscan(i32 %0, %struct._types_fd_set* %1, %struct._types_fd_set* %2, %struct._types_fd_set* %3, %struct._types_fd_set* nonnull %6, %struct._types_fd_set* nonnull %7, %struct._types_fd_set* nonnull %8) #8, !dbg !5626
  br label %306

; <label>:306:                                    ; preds = %302, %304, %46, %54
  %307 = phi i32 [ %29, %46 ], [ 0, %54 ], [ %294, %302 ], [ %305, %304 ], !dbg !5628
  %308 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5629, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5632
  %309 = icmp ult i64 %308, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5633
  br i1 %309, label %315, label %310, !dbg !5633

; <label>:310:                                    ; preds = %306
  %311 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5634, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5637
  %312 = icmp ugt i64 %311, ptrtoint ([0 x i8]* @_end to i64), !dbg !5633
  br i1 %312, label %315, label %313, !dbg !5638

; <label>:313:                                    ; preds = %310
  %314 = tail call i32* @__errno() #10, !dbg !5642
  store i32 0, i32* %314, align 4, !dbg !5643, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5644
  br label %322, !dbg !5645

; <label>:315:                                    ; preds = %310, %306
  %316 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5646, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5650
  %317 = and i64 %316, -65536, !dbg !5652
  %318 = or i64 %317, 4097, !dbg !5652
  %319 = add nsw i64 %318, -1, !dbg !5652
  %320 = inttoptr i64 %319 to i32*, !dbg !5653
  %321 = load i32, i32* %320, align 4096, !dbg !5654, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5655
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %321, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5656, !srcloc !5657
  br label %322

; <label>:322:                                    ; preds = %315, %313
  %323 = icmp eq %struct._types_fd_set* %1, null, !dbg !5658
  br i1 %323, label %328, label %324, !dbg !5660

; <label>:324:                                    ; preds = %322
  %325 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %6, i64 0, i32 0, i64 0, !dbg !5661
  %326 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 0, !dbg !5661
  %327 = load i64, i64* %325, align 8, !dbg !5661, !tbaa !1696
  store i64 %327, i64* %326, align 8, !dbg !5661, !tbaa !1696
  br label %328, !dbg !5663

; <label>:328:                                    ; preds = %322, %324
  %329 = icmp eq %struct._types_fd_set* %2, null, !dbg !5664
  br i1 %329, label %334, label %330, !dbg !5666

; <label>:330:                                    ; preds = %328
  %331 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %7, i64 0, i32 0, i64 0, !dbg !5667
  %332 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 0, !dbg !5667
  %333 = load i64, i64* %331, align 8, !dbg !5667, !tbaa !1696
  store i64 %333, i64* %332, align 8, !dbg !5667, !tbaa !1696
  br label %334, !dbg !5669

; <label>:334:                                    ; preds = %328, %330
  %335 = icmp eq %struct._types_fd_set* %3, null, !dbg !5670
  br i1 %335, label %340, label %336, !dbg !5672

; <label>:336:                                    ; preds = %334
  %337 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0, !dbg !5673
  %338 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 0, !dbg !5673
  %339 = load i64, i64* %337, align 8, !dbg !5673, !tbaa !1696
  store i64 %339, i64* %338, align 8, !dbg !5673, !tbaa !1696
  br label %340, !dbg !5675

; <label>:340:                                    ; preds = %298, %75, %77, %115, %336, %334, %37, %39, %19, %21
  %341 = phi i32 [ -1, %21 ], [ -1, %19 ], [ -1, %39 ], [ -1, %37 ], [ %307, %334 ], [ %307, %336 ], [ -1, %115 ], [ -1, %77 ], [ -1, %75 ], [ -1, %298 ], !dbg !5676
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !5677
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6, !dbg !5677
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !5677
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5677
  ret i32 %341, !dbg !5677
}

; Function Attrs: noredzone nounwind
define dso_local i32 @shutdown(i32, i32) local_unnamed_addr #0 !dbg !5678 {
  %3 = alloca %struct.sock_net_file*, align 8
  %4 = bitcast %struct.sock_net_file** %3 to i8*, !dbg !5711
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !5711
  store %struct.sock_net_file* null, %struct.sock_net_file** %3, align 8, !dbg !5712, !tbaa !1426
  %5 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5713, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5716
  %6 = icmp ult i64 %5, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5717
  br i1 %6, label %29, label %7, !dbg !5717

; <label>:7:                                      ; preds = %2
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5718, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5721
  %9 = icmp ugt i64 %8, ptrtoint ([0 x i8]* @_end to i64), !dbg !5717
  br i1 %9, label %29, label %10, !dbg !5722

; <label>:10:                                     ; preds = %7
  %11 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !5727
  %12 = icmp eq %struct.vfscore_file* %11, null, !dbg !5729
  br i1 %12, label %25, label %13, !dbg !5730

; <label>:13:                                     ; preds = %10
  %14 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %11, i64 0, i32 6, !dbg !5731
  %15 = load %struct.dentry*, %struct.dentry** %14, align 8, !dbg !5731, !tbaa !2817
  %16 = getelementptr inbounds %struct.dentry, %struct.dentry* %15, i64 0, i32 3, !dbg !5732
  %17 = load %struct.vnode*, %struct.vnode** %16, align 8, !dbg !5732, !tbaa !3077
  %18 = getelementptr inbounds %struct.vnode, %struct.vnode* %17, i64 0, i32 5, !dbg !5733
  %19 = load i32, i32* %18, align 4, !dbg !5733, !tbaa !2827
  %20 = icmp eq i32 %19, 6, !dbg !5734
  br i1 %20, label %21, label %25, !dbg !5735

; <label>:21:                                     ; preds = %13
  %22 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %11, i64 0, i32 4, !dbg !5736
  %23 = bitcast i8** %22 to %struct.sock_net_file**, !dbg !5736
  %24 = load %struct.sock_net_file*, %struct.sock_net_file** %23, align 8, !dbg !5736, !tbaa !2813
  br label %25, !dbg !5737

; <label>:25:                                     ; preds = %10, %13, %21
  %26 = phi %struct.sock_net_file* [ %24, %21 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %10 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %13 ], !dbg !5738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5739
  store %struct.sock_net_file* %26, %struct.sock_net_file** %3, align 8, !dbg !5740, !tbaa !1426
  %27 = ptrtoint %struct.sock_net_file* %26 to i64, !dbg !5740
  %28 = bitcast %struct.sock_net_file** %3 to i64*, !dbg !5741
  br label %41, !dbg !5740

; <label>:29:                                     ; preds = %7, %2
  %30 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5742, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5746
  %31 = and i64 %30, -65536, !dbg !5748
  %32 = or i64 %31, 4097, !dbg !5748
  %33 = add nsw i64 %32, -1, !dbg !5748
  %34 = inttoptr i64 %33 to i32*, !dbg !5749
  %35 = load i32, i32* %34, align 4096, !dbg !5750, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5751
  %36 = sext i32 %0 to i64, !dbg !5752
  %37 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %36, i32 %35, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !5752, !srcloc !5753
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %3, i64 %37) #6, !dbg !5754, !srcloc !5758
  %38 = bitcast %struct.sock_net_file** %3 to i64*
  %39 = load i64, i64* %38, align 8, !dbg !5741, !tbaa !1426
  %40 = inttoptr i64 %39 to %struct.sock_net_file*
  br label %41

; <label>:41:                                     ; preds = %29, %25
  %42 = phi i64* [ %38, %29 ], [ %28, %25 ], !dbg !5741
  %43 = phi %struct.sock_net_file* [ %40, %29 ], [ %26, %25 ]
  %44 = phi i64 [ %39, %29 ], [ %27, %25 ], !dbg !5741
  %45 = add i64 %44, 512, !dbg !5741
  %46 = icmp ult i64 %45, 513, !dbg !5741
  br i1 %46, label %47, label %68, !dbg !5741

; <label>:47:                                     ; preds = %41
  %48 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5759, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5762
  %49 = icmp ult i64 %48, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5763
  br i1 %49, label %58, label %50, !dbg !5763

; <label>:50:                                     ; preds = %47
  %51 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5764, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5767
  %52 = icmp ugt i64 %51, ptrtoint ([0 x i8]* @_end to i64), !dbg !5763
  br i1 %52, label %58, label %53, !dbg !5768

; <label>:53:                                     ; preds = %50
  %54 = load i64, i64* %42, align 8, !dbg !5769, !tbaa !1426
  %55 = trunc i64 %54 to i32, !dbg !5769
  %56 = sub nsw i32 0, %55, !dbg !5773
  %57 = call i32* @__errno() #10, !dbg !5774
  store i32 %56, i32* %57, align 4, !dbg !5775, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5776
  br label %91, !dbg !5769

; <label>:58:                                     ; preds = %50, %47
  %59 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5777, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5781
  %60 = and i64 %59, -65536, !dbg !5783
  %61 = or i64 %60, 4097, !dbg !5783
  %62 = add nsw i64 %61, -1, !dbg !5783
  %63 = inttoptr i64 %62 to i32*, !dbg !5784
  %64 = load i32, i32* %63, align 4096, !dbg !5785, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5786
  %65 = load i64, i64* %42, align 8, !dbg !5787, !tbaa !1426
  %66 = shl i64 %65, 32, !dbg !5787
  %67 = ashr exact i64 %66, 32, !dbg !5787
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %67, i32 %64, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5787, !srcloc !5788
  br label %91

; <label>:68:                                     ; preds = %41
  %69 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %43, i64 0, i32 1, !dbg !5789
  %70 = load i32, i32* %69, align 8, !dbg !5789, !tbaa !1421
  %71 = call i32 @lwip_shutdown(i32 %70, i32 %1) #8, !dbg !5790
  %72 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5791, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5794
  %73 = icmp ult i64 %72, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5795
  br i1 %73, label %81, label %74, !dbg !5795

; <label>:74:                                     ; preds = %68
  %75 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5796, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5799
  %76 = icmp ugt i64 %75, ptrtoint ([0 x i8]* @_end to i64), !dbg !5795
  br i1 %76, label %81, label %77, !dbg !5800

; <label>:77:                                     ; preds = %74
  %78 = load %struct.sock_net_file*, %struct.sock_net_file** %3, align 8, !dbg !5801, !tbaa !1426
  %79 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %78, i64 0, i32 0, !dbg !5801
  %80 = load %struct.vfscore_file*, %struct.vfscore_file** %79, align 8, !dbg !5801, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %80) #10, !dbg !5801
  br label %91, !dbg !5801

; <label>:81:                                     ; preds = %74, %68
  %82 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5803, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5807
  %83 = and i64 %82, -65536, !dbg !5809
  %84 = or i64 %83, 4097, !dbg !5809
  %85 = add nsw i64 %84, -1, !dbg !5809
  %86 = inttoptr i64 %85 to i32*, !dbg !5810
  %87 = load i32, i32* %86, align 4096, !dbg !5811, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5812
  %88 = bitcast %struct.sock_net_file** %3 to i64**, !dbg !5813
  %89 = load i64*, i64** %88, align 8, !dbg !5813, !tbaa !1426
  %90 = load i64, i64* %89, align 8, !dbg !5813, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %90, i32 %87, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !5813, !srcloc !5814
  br label %91

; <label>:91:                                     ; preds = %77, %81, %53, %58
  %92 = phi i32 [ -1, %53 ], [ -1, %58 ], [ %71, %77 ], [ %71, %81 ], !dbg !5815
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !5816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5817
  ret i32 %92, !dbg !5817
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_shutdown(i32, i32) local_unnamed_addr #0 !dbg !5818 {
  %3 = icmp ugt i32 %0, 63, !dbg !5880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5881
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5882
  br i1 %3, label %9, label %4, !dbg !5883

; <label>:4:                                      ; preds = %2
  %5 = sext i32 %0 to i64, !dbg !5884
  %6 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %5, i32 0, !dbg !5885
  %7 = load %struct.netconn*, %struct.netconn** %6, align 8, !dbg !5885, !tbaa !1602
  %8 = icmp eq %struct.netconn* %7, null, !dbg !5886
  br i1 %8, label %9, label %25, !dbg !5887

; <label>:9:                                      ; preds = %4, %2
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5888
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5889, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5892
  %11 = icmp ult i64 %10, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5893
  br i1 %11, label %17, label %12, !dbg !5893

; <label>:12:                                     ; preds = %9
  %13 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5894, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5897
  %14 = icmp ugt i64 %13, ptrtoint ([0 x i8]* @_end to i64), !dbg !5893
  br i1 %14, label %17, label %15, !dbg !5898

; <label>:15:                                     ; preds = %12
  %16 = tail call i32* @__errno() #10, !dbg !5901
  store i32 9, i32* %16, align 4, !dbg !5902, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5903
  br label %24, !dbg !5904

; <label>:17:                                     ; preds = %12, %9
  %18 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5905, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5909
  %19 = and i64 %18, -65536, !dbg !5911
  %20 = or i64 %19, 4097, !dbg !5911
  %21 = add nsw i64 %20, -1, !dbg !5911
  %22 = inttoptr i64 %21 to i32*, !dbg !5912
  %23 = load i32, i32* %22, align 4096, !dbg !5913, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5914
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %23, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5915, !srcloc !1640
  br label %24

; <label>:24:                                     ; preds = %17, %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5916
  br label %92, !dbg !5917

; <label>:25:                                     ; preds = %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5888
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5916
  %26 = getelementptr inbounds %struct.netconn, %struct.netconn* %7, i64 0, i32 0, !dbg !5918
  %27 = load i32, i32* %26, align 8, !dbg !5918, !tbaa !1647
  %28 = and i32 %27, 240, !dbg !5918
  %29 = icmp eq i32 %28, 16, !dbg !5919
  br i1 %29, label %45, label %30, !dbg !5920

; <label>:30:                                     ; preds = %25
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5922, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5925
  %32 = icmp ult i64 %31, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5926
  br i1 %32, label %38, label %33, !dbg !5926

; <label>:33:                                     ; preds = %30
  %34 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5927, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5930
  %35 = icmp ugt i64 %34, ptrtoint ([0 x i8]* @_end to i64), !dbg !5926
  br i1 %35, label %38, label %36, !dbg !5931

; <label>:36:                                     ; preds = %33
  %37 = tail call i32* @__errno() #10, !dbg !5935
  store i32 95, i32* %37, align 4, !dbg !5936, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5937
  br label %92, !dbg !5938

; <label>:38:                                     ; preds = %33, %30
  %39 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5939, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5943
  %40 = and i64 %39, -65536, !dbg !5945
  %41 = or i64 %40, 4097, !dbg !5945
  %42 = add nsw i64 %41, -1, !dbg !5945
  %43 = inttoptr i64 %42 to i32*, !dbg !5946
  %44 = load i32, i32* %43, align 4096, !dbg !5947, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5948
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -95, i32 %44, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5949, !srcloc !5950
  br label %92

; <label>:45:                                     ; preds = %25
  %46 = icmp ult i32 %1, 3, !dbg !5951
  br i1 %46, label %62, label %47, !dbg !5951

; <label>:47:                                     ; preds = %45
  %48 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5953, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5956
  %49 = icmp ult i64 %48, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5957
  br i1 %49, label %55, label %50, !dbg !5957

; <label>:50:                                     ; preds = %47
  %51 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5958, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5961
  %52 = icmp ugt i64 %51, ptrtoint ([0 x i8]* @_end to i64), !dbg !5957
  br i1 %52, label %55, label %53, !dbg !5962

; <label>:53:                                     ; preds = %50
  %54 = tail call i32* @__errno() #10, !dbg !5966
  store i32 22, i32* %54, align 4, !dbg !5967, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5968
  br label %92, !dbg !5969

; <label>:55:                                     ; preds = %50, %47
  %56 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5970, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5974
  %57 = and i64 %56, -65536, !dbg !5976
  %58 = or i64 %57, 4097, !dbg !5976
  %59 = add nsw i64 %58, -1, !dbg !5976
  %60 = inttoptr i64 %59 to i32*, !dbg !5977
  %61 = load i32, i32* %60, align 4096, !dbg !5978, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5979
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -22, i32 %61, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5980, !srcloc !5981
  br label %92

; <label>:62:                                     ; preds = %45
  %63 = trunc i32 %1 to i24, !dbg !5951
  %64 = shl i24 %63, 3, !dbg !5951
  %65 = lshr i24 65792, %64, !dbg !5951
  %66 = trunc i24 %65 to i8, !dbg !5951
  %67 = trunc i32 %1 to i24, !dbg !5951
  %68 = shl i24 %67, 3, !dbg !5951
  %69 = lshr i24 65537, %68, !dbg !5951
  %70 = trunc i24 %69 to i8, !dbg !5951
  %71 = tail call signext i8 @netconn_shutdown(%struct.netconn* nonnull %7, i8 zeroext %70, i8 zeroext %66) #10, !dbg !5982
  %72 = tail call i32 @err_to_errno(i8 signext %71) #10, !dbg !5984
  %73 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5985, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5988
  %74 = icmp ult i64 %73, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5989
  br i1 %74, label %80, label %75, !dbg !5989

; <label>:75:                                     ; preds = %62
  %76 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5990, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5993
  %77 = icmp ugt i64 %76, ptrtoint ([0 x i8]* @_end to i64), !dbg !5989
  br i1 %77, label %80, label %78, !dbg !5994

; <label>:78:                                     ; preds = %75
  %79 = tail call i32* @__errno() #10, !dbg !5995
  store i32 %72, i32* %79, align 4, !dbg !5998, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5999
  br label %89, !dbg !6000

; <label>:80:                                     ; preds = %75, %62
  %81 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6001, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6005
  %82 = and i64 %81, -65536, !dbg !6007
  %83 = or i64 %82, 4097, !dbg !6007
  %84 = add nsw i64 %83, -1, !dbg !6007
  %85 = inttoptr i64 %84 to i32*, !dbg !6008
  %86 = load i32, i32* %85, align 4096, !dbg !6009, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6010
  %87 = sub nsw i32 0, %72, !dbg !6011
  %88 = sext i32 %87 to i64, !dbg !6011
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %88, i32 %86, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6011, !srcloc !6012
  br label %89

; <label>:89:                                     ; preds = %80, %78
  %90 = icmp ne i8 %71, 0, !dbg !6013
  %91 = sext i1 %90 to i32, !dbg !6014
  br label %92, !dbg !6015

; <label>:92:                                     ; preds = %24, %53, %55, %36, %38, %89
  %93 = phi i32 [ %91, %89 ], [ -1, %38 ], [ -1, %36 ], [ -1, %55 ], [ -1, %53 ], [ -1, %24 ], !dbg !6016
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6019
  ret i32 %93, !dbg !6019
}

; Function Attrs: noredzone nounwind
define dso_local i32 @getpeername(i32, %struct.sockaddr*, i32* nocapture) local_unnamed_addr #0 !dbg !6020 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !6053
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !6053
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !6054, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6055, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6058
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6059
  br i1 %7, label %30, label %8, !dbg !6059

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6060, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6063
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !6059
  br i1 %10, label %30, label %11, !dbg !6064

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !6069
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !6071
  br i1 %13, label %26, label %14, !dbg !6072

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !6073
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !6073, !tbaa !2817
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !6074
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !6074, !tbaa !3077
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !6075
  %20 = load i32, i32* %19, align 4, !dbg !6075, !tbaa !2827
  %21 = icmp eq i32 %20, 6, !dbg !6076
  br i1 %21, label %22, label %26, !dbg !6077

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !6078
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !6078
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !6078, !tbaa !2813
  br label %26, !dbg !6079

; <label>:26:                                     ; preds = %11, %14, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !6080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6081
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !6082, !tbaa !1426
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !6082
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !6083
  br label %42, !dbg !6082

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6084, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6088
  %32 = and i64 %31, -65536, !dbg !6090
  %33 = or i64 %32, 4097, !dbg !6090
  %34 = add nsw i64 %33, -1, !dbg !6090
  %35 = inttoptr i64 %34 to i32*, !dbg !6091
  %36 = load i32, i32* %35, align 4096, !dbg !6092, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6093
  %37 = sext i32 %0 to i64, !dbg !6094
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !6094, !srcloc !6095
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !6096, !srcloc !6100
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !6083, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !6083
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !6083
  %46 = add i64 %45, 512, !dbg !6083
  %47 = icmp ult i64 %46, 513, !dbg !6083
  br i1 %47, label %48, label %69, !dbg !6083

; <label>:48:                                     ; preds = %42
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6101, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6104
  %50 = icmp ult i64 %49, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6105
  br i1 %50, label %59, label %51, !dbg !6105

; <label>:51:                                     ; preds = %48
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6106, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6109
  %53 = icmp ugt i64 %52, ptrtoint ([0 x i8]* @_end to i64), !dbg !6105
  br i1 %53, label %59, label %54, !dbg !6110

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %43, align 8, !dbg !6111, !tbaa !1426
  %56 = trunc i64 %55 to i32, !dbg !6111
  %57 = sub nsw i32 0, %56, !dbg !6115
  %58 = call i32* @__errno() #10, !dbg !6116
  store i32 %57, i32* %58, align 4, !dbg !6117, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6118
  br label %92, !dbg !6111

; <label>:59:                                     ; preds = %51, %48
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6119, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6123
  %61 = and i64 %60, -65536, !dbg !6125
  %62 = or i64 %61, 4097, !dbg !6125
  %63 = add nsw i64 %62, -1, !dbg !6125
  %64 = inttoptr i64 %63 to i32*, !dbg !6126
  %65 = load i32, i32* %64, align 4096, !dbg !6127, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6128
  %66 = load i64, i64* %43, align 8, !dbg !6129, !tbaa !1426
  %67 = shl i64 %66, 32, !dbg !6129
  %68 = ashr exact i64 %67, 32, !dbg !6129
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %68, i32 %65, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6129, !srcloc !6130
  br label %92

; <label>:69:                                     ; preds = %42
  %70 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !6131
  %71 = load i32, i32* %70, align 8, !dbg !6131, !tbaa !1421
  %72 = call fastcc i32 @lwip_getaddrname(i32 %71, %struct.sockaddr* %1, i32* %2, i8 zeroext 0) #10, !dbg !6141
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6142
  %73 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6143, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6146
  %74 = icmp ult i64 %73, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6147
  br i1 %74, label %82, label %75, !dbg !6147

; <label>:75:                                     ; preds = %69
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6148, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6151
  %77 = icmp ugt i64 %76, ptrtoint ([0 x i8]* @_end to i64), !dbg !6147
  br i1 %77, label %82, label %78, !dbg !6152

; <label>:78:                                     ; preds = %75
  %79 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !6153, !tbaa !1426
  %80 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %79, i64 0, i32 0, !dbg !6153
  %81 = load %struct.vfscore_file*, %struct.vfscore_file** %80, align 8, !dbg !6153, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %81) #10, !dbg !6153
  br label %92, !dbg !6153

; <label>:82:                                     ; preds = %75, %69
  %83 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6155, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6159
  %84 = and i64 %83, -65536, !dbg !6161
  %85 = or i64 %84, 4097, !dbg !6161
  %86 = add nsw i64 %85, -1, !dbg !6161
  %87 = inttoptr i64 %86 to i32*, !dbg !6162
  %88 = load i32, i32* %87, align 4096, !dbg !6163, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6164
  %89 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !6165
  %90 = load i64*, i64** %89, align 8, !dbg !6165, !tbaa !1426
  %91 = load i64, i64* %90, align 8, !dbg !6165, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %91, i32 %88, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !6165, !srcloc !6166
  br label %92

; <label>:92:                                     ; preds = %78, %82, %54, %59
  %93 = phi i32 [ -1, %54 ], [ -1, %59 ], [ %72, %78 ], [ %72, %82 ], !dbg !6167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !6168
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6169
  ret i32 %93, !dbg !6169
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_getpeername(i32, %struct.sockaddr*, i32* nocapture) local_unnamed_addr #0 !dbg !6133 {
  %4 = tail call fastcc i32 @lwip_getaddrname(i32 %0, %struct.sockaddr* %1, i32* %2, i8 zeroext 0) #8, !dbg !6173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6174
  ret i32 %4, !dbg !6174
}

; Function Attrs: noredzone nounwind
define dso_local i32 @getsockname(i32, %struct.sockaddr*, i32* nocapture) local_unnamed_addr #0 !dbg !6175 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !6208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !6208
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !6209, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6210, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6213
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6214
  br i1 %7, label %30, label %8, !dbg !6214

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6215, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6218
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !6214
  br i1 %10, label %30, label %11, !dbg !6219

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !6224
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !6226
  br i1 %13, label %26, label %14, !dbg !6227

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !6228
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !6228, !tbaa !2817
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !6229
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !6229, !tbaa !3077
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !6230
  %20 = load i32, i32* %19, align 4, !dbg !6230, !tbaa !2827
  %21 = icmp eq i32 %20, 6, !dbg !6231
  br i1 %21, label %22, label %26, !dbg !6232

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !6233
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !6233
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !6233, !tbaa !2813
  br label %26, !dbg !6234

; <label>:26:                                     ; preds = %11, %14, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !6235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6236
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !6237, !tbaa !1426
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !6237
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !6238
  br label %42, !dbg !6237

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6239, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6243
  %32 = and i64 %31, -65536, !dbg !6245
  %33 = or i64 %32, 4097, !dbg !6245
  %34 = add nsw i64 %33, -1, !dbg !6245
  %35 = inttoptr i64 %34 to i32*, !dbg !6246
  %36 = load i32, i32* %35, align 4096, !dbg !6247, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6248
  %37 = sext i32 %0 to i64, !dbg !6249
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !6249, !srcloc !6250
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !6251, !srcloc !6255
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !6238, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !6238
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !6238
  %46 = add i64 %45, 512, !dbg !6238
  %47 = icmp ult i64 %46, 513, !dbg !6238
  br i1 %47, label %48, label %69, !dbg !6238

; <label>:48:                                     ; preds = %42
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6256, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6259
  %50 = icmp ult i64 %49, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6260
  br i1 %50, label %59, label %51, !dbg !6260

; <label>:51:                                     ; preds = %48
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6261, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6264
  %53 = icmp ugt i64 %52, ptrtoint ([0 x i8]* @_end to i64), !dbg !6260
  br i1 %53, label %59, label %54, !dbg !6265

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %43, align 8, !dbg !6266, !tbaa !1426
  %56 = trunc i64 %55 to i32, !dbg !6266
  %57 = sub nsw i32 0, %56, !dbg !6270
  %58 = call i32* @__errno() #10, !dbg !6271
  store i32 %57, i32* %58, align 4, !dbg !6272, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6273
  br label %92, !dbg !6266

; <label>:59:                                     ; preds = %51, %48
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6274, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6278
  %61 = and i64 %60, -65536, !dbg !6280
  %62 = or i64 %61, 4097, !dbg !6280
  %63 = add nsw i64 %62, -1, !dbg !6280
  %64 = inttoptr i64 %63 to i32*, !dbg !6281
  %65 = load i32, i32* %64, align 4096, !dbg !6282, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6283
  %66 = load i64, i64* %43, align 8, !dbg !6284, !tbaa !1426
  %67 = shl i64 %66, 32, !dbg !6284
  %68 = ashr exact i64 %67, 32, !dbg !6284
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %68, i32 %65, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6284, !srcloc !6285
  br label %92

; <label>:69:                                     ; preds = %42
  %70 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !6286
  %71 = load i32, i32* %70, align 8, !dbg !6286, !tbaa !1421
  %72 = call fastcc i32 @lwip_getaddrname(i32 %71, %struct.sockaddr* %1, i32* %2, i8 zeroext 1) #10, !dbg !6296
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6297
  %73 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6298, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6301
  %74 = icmp ult i64 %73, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6302
  br i1 %74, label %82, label %75, !dbg !6302

; <label>:75:                                     ; preds = %69
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6303, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6306
  %77 = icmp ugt i64 %76, ptrtoint ([0 x i8]* @_end to i64), !dbg !6302
  br i1 %77, label %82, label %78, !dbg !6307

; <label>:78:                                     ; preds = %75
  %79 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !6308, !tbaa !1426
  %80 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %79, i64 0, i32 0, !dbg !6308
  %81 = load %struct.vfscore_file*, %struct.vfscore_file** %80, align 8, !dbg !6308, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %81) #10, !dbg !6308
  br label %92, !dbg !6308

; <label>:82:                                     ; preds = %75, %69
  %83 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6310, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6314
  %84 = and i64 %83, -65536, !dbg !6316
  %85 = or i64 %84, 4097, !dbg !6316
  %86 = add nsw i64 %85, -1, !dbg !6316
  %87 = inttoptr i64 %86 to i32*, !dbg !6317
  %88 = load i32, i32* %87, align 4096, !dbg !6318, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6319
  %89 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !6320
  %90 = load i64*, i64** %89, align 8, !dbg !6320, !tbaa !1426
  %91 = load i64, i64* %90, align 8, !dbg !6320, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %91, i32 %88, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !6320, !srcloc !6321
  br label %92

; <label>:92:                                     ; preds = %78, %82, %54, %59
  %93 = phi i32 [ -1, %54 ], [ -1, %59 ], [ %72, %78 ], [ %72, %82 ], !dbg !6322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !6323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6324
  ret i32 %93, !dbg !6324
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_getsockname(i32, %struct.sockaddr*, i32* nocapture) local_unnamed_addr #0 !dbg !6288 {
  %4 = tail call fastcc i32 @lwip_getaddrname(i32 %0, %struct.sockaddr* %1, i32* %2, i8 zeroext 1) #8, !dbg !6328
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6329
  ret i32 %4, !dbg !6329
}

; Function Attrs: noredzone nounwind
define dso_local i32 @getsockopt(i32, i32, i32, i8*, i32* readonly) local_unnamed_addr #0 !dbg !6330 {
  %6 = alloca %struct.sock_net_file*, align 8
  %7 = bitcast %struct.sock_net_file** %6 to i8*, !dbg !6369
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !6369
  store %struct.sock_net_file* null, %struct.sock_net_file** %6, align 8, !dbg !6370, !tbaa !1426
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6371, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6374
  %9 = icmp ult i64 %8, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6375
  br i1 %9, label %32, label %10, !dbg !6375

; <label>:10:                                     ; preds = %5
  %11 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6376, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6379
  %12 = icmp ugt i64 %11, ptrtoint ([0 x i8]* @_end to i64), !dbg !6375
  br i1 %12, label %32, label %13, !dbg !6380

; <label>:13:                                     ; preds = %10
  %14 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !6385
  %15 = icmp eq %struct.vfscore_file* %14, null, !dbg !6387
  br i1 %15, label %28, label %16, !dbg !6388

; <label>:16:                                     ; preds = %13
  %17 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %14, i64 0, i32 6, !dbg !6389
  %18 = load %struct.dentry*, %struct.dentry** %17, align 8, !dbg !6389, !tbaa !2817
  %19 = getelementptr inbounds %struct.dentry, %struct.dentry* %18, i64 0, i32 3, !dbg !6390
  %20 = load %struct.vnode*, %struct.vnode** %19, align 8, !dbg !6390, !tbaa !3077
  %21 = getelementptr inbounds %struct.vnode, %struct.vnode* %20, i64 0, i32 5, !dbg !6391
  %22 = load i32, i32* %21, align 4, !dbg !6391, !tbaa !2827
  %23 = icmp eq i32 %22, 6, !dbg !6392
  br i1 %23, label %24, label %28, !dbg !6393

; <label>:24:                                     ; preds = %16
  %25 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %14, i64 0, i32 4, !dbg !6394
  %26 = bitcast i8** %25 to %struct.sock_net_file**, !dbg !6394
  %27 = load %struct.sock_net_file*, %struct.sock_net_file** %26, align 8, !dbg !6394, !tbaa !2813
  br label %28, !dbg !6395

; <label>:28:                                     ; preds = %13, %16, %24
  %29 = phi %struct.sock_net_file* [ %27, %24 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %13 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %16 ], !dbg !6396
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6397
  store %struct.sock_net_file* %29, %struct.sock_net_file** %6, align 8, !dbg !6398, !tbaa !1426
  %30 = ptrtoint %struct.sock_net_file* %29 to i64, !dbg !6398
  %31 = bitcast %struct.sock_net_file** %6 to i64*, !dbg !6399
  br label %44, !dbg !6398

; <label>:32:                                     ; preds = %10, %5
  %33 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6400, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6404
  %34 = and i64 %33, -65536, !dbg !6406
  %35 = or i64 %34, 4097, !dbg !6406
  %36 = add nsw i64 %35, -1, !dbg !6406
  %37 = inttoptr i64 %36 to i32*, !dbg !6407
  %38 = load i32, i32* %37, align 4096, !dbg !6408, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6409
  %39 = sext i32 %0 to i64, !dbg !6410
  %40 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %39, i32 %38, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !6410, !srcloc !6411
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %6, i64 %40) #6, !dbg !6412, !srcloc !6416
  %41 = bitcast %struct.sock_net_file** %6 to i64*
  %42 = load i64, i64* %41, align 8, !dbg !6399, !tbaa !1426
  %43 = inttoptr i64 %42 to %struct.sock_net_file*
  br label %44

; <label>:44:                                     ; preds = %32, %28
  %45 = phi i64* [ %41, %32 ], [ %31, %28 ], !dbg !6399
  %46 = phi %struct.sock_net_file* [ %43, %32 ], [ %29, %28 ]
  %47 = phi i64 [ %42, %32 ], [ %30, %28 ], !dbg !6399
  %48 = add i64 %47, 512, !dbg !6399
  %49 = icmp ult i64 %48, 513, !dbg !6399
  br i1 %49, label %50, label %71, !dbg !6399

; <label>:50:                                     ; preds = %44
  %51 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6417, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6420
  %52 = icmp ult i64 %51, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6421
  br i1 %52, label %61, label %53, !dbg !6421

; <label>:53:                                     ; preds = %50
  %54 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6422, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6425
  %55 = icmp ugt i64 %54, ptrtoint ([0 x i8]* @_end to i64), !dbg !6421
  br i1 %55, label %61, label %56, !dbg !6426

; <label>:56:                                     ; preds = %53
  %57 = load i64, i64* %45, align 8, !dbg !6427, !tbaa !1426
  %58 = trunc i64 %57 to i32, !dbg !6427
  %59 = sub nsw i32 0, %58, !dbg !6431
  %60 = call i32* @__errno() #10, !dbg !6432
  store i32 %59, i32* %60, align 4, !dbg !6433, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6434
  br label %94, !dbg !6427

; <label>:61:                                     ; preds = %53, %50
  %62 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6435, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6439
  %63 = and i64 %62, -65536, !dbg !6441
  %64 = or i64 %63, 4097, !dbg !6441
  %65 = add nsw i64 %64, -1, !dbg !6441
  %66 = inttoptr i64 %65 to i32*, !dbg !6442
  %67 = load i32, i32* %66, align 4096, !dbg !6443, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6444
  %68 = load i64, i64* %45, align 8, !dbg !6445, !tbaa !1426
  %69 = shl i64 %68, 32, !dbg !6445
  %70 = ashr exact i64 %69, 32, !dbg !6445
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %70, i32 %67, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6445, !srcloc !6446
  br label %94

; <label>:71:                                     ; preds = %44
  %72 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %46, i64 0, i32 1, !dbg !6447
  %73 = load i32, i32* %72, align 8, !dbg !6447, !tbaa !1421
  %74 = call i32 @lwip_getsockopt(i32 %73, i32 %1, i32 %2, i8* %3, i32* %4) #8, !dbg !6448
  %75 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6449, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6452
  %76 = icmp ult i64 %75, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6453
  br i1 %76, label %84, label %77, !dbg !6453

; <label>:77:                                     ; preds = %71
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6454, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6457
  %79 = icmp ugt i64 %78, ptrtoint ([0 x i8]* @_end to i64), !dbg !6453
  br i1 %79, label %84, label %80, !dbg !6458

; <label>:80:                                     ; preds = %77
  %81 = load %struct.sock_net_file*, %struct.sock_net_file** %6, align 8, !dbg !6459, !tbaa !1426
  %82 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %81, i64 0, i32 0, !dbg !6459
  %83 = load %struct.vfscore_file*, %struct.vfscore_file** %82, align 8, !dbg !6459, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %83) #10, !dbg !6459
  br label %94, !dbg !6459

; <label>:84:                                     ; preds = %77, %71
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6461, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6465
  %86 = and i64 %85, -65536, !dbg !6467
  %87 = or i64 %86, 4097, !dbg !6467
  %88 = add nsw i64 %87, -1, !dbg !6467
  %89 = inttoptr i64 %88 to i32*, !dbg !6468
  %90 = load i32, i32* %89, align 4096, !dbg !6469, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6470
  %91 = bitcast %struct.sock_net_file** %6 to i64**, !dbg !6471
  %92 = load i64*, i64** %91, align 8, !dbg !6471, !tbaa !1426
  %93 = load i64, i64* %92, align 8, !dbg !6471, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %93, i32 %90, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !6471, !srcloc !6472
  br label %94

; <label>:94:                                     ; preds = %80, %84, %56, %61
  %95 = phi i32 [ -1, %56 ], [ -1, %61 ], [ %74, %80 ], [ %74, %84 ], !dbg !6473
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !6474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6475
  ret i32 %95, !dbg !6475
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_getsockopt(i32, i32, i32, i8*, i32* readonly) local_unnamed_addr #0 !dbg !6476 {
  %6 = icmp ugt i32 %0, 63, !dbg !6517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6519
  br i1 %6, label %12, label %7, !dbg !6520

; <label>:7:                                      ; preds = %5
  %8 = sext i32 %0 to i64, !dbg !6521
  %9 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %8, i32 0, !dbg !6522
  %10 = load %struct.netconn*, %struct.netconn** %9, align 8, !dbg !6522, !tbaa !1602
  %11 = icmp eq %struct.netconn* %10, null, !dbg !6523
  br i1 %11, label %12, label %28, !dbg !6524

; <label>:12:                                     ; preds = %7, %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6525
  %13 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6526, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6529
  %14 = icmp ult i64 %13, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6530
  br i1 %14, label %20, label %15, !dbg !6530

; <label>:15:                                     ; preds = %12
  %16 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6531, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6534
  %17 = icmp ugt i64 %16, ptrtoint ([0 x i8]* @_end to i64), !dbg !6530
  br i1 %17, label %20, label %18, !dbg !6535

; <label>:18:                                     ; preds = %15
  %19 = tail call i32* @__errno() #10, !dbg !6538
  store i32 9, i32* %19, align 4, !dbg !6539, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6540
  br label %27, !dbg !6541

; <label>:20:                                     ; preds = %15, %12
  %21 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6542, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6546
  %22 = and i64 %21, -65536, !dbg !6548
  %23 = or i64 %22, 4097, !dbg !6548
  %24 = add nsw i64 %23, -1, !dbg !6548
  %25 = inttoptr i64 %24 to i32*, !dbg !6549
  %26 = load i32, i32* %25, align 4096, !dbg !6550, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6551
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %26, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6552, !srcloc !1640
  br label %27

; <label>:27:                                     ; preds = %20, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6553
  br label %275, !dbg !6554

; <label>:28:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6553
  %29 = icmp eq i8* %3, null, !dbg !6555
  %30 = icmp eq i32* %4, null, !dbg !6556
  %31 = or i1 %29, %30, !dbg !6557
  br i1 %31, label %32, label %47, !dbg !6557

; <label>:32:                                     ; preds = %28
  %33 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6559, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6562
  %34 = icmp ult i64 %33, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6563
  br i1 %34, label %40, label %35, !dbg !6563

; <label>:35:                                     ; preds = %32
  %36 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6564, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6567
  %37 = icmp ugt i64 %36, ptrtoint ([0 x i8]* @_end to i64), !dbg !6563
  br i1 %37, label %40, label %38, !dbg !6568

; <label>:38:                                     ; preds = %35
  %39 = tail call i32* @__errno() #10, !dbg !6572
  store i32 14, i32* %39, align 4, !dbg !6573, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6574
  br label %275, !dbg !6575

; <label>:40:                                     ; preds = %35, %32
  %41 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6576, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6580
  %42 = and i64 %41, -65536, !dbg !6582
  %43 = or i64 %42, 4097, !dbg !6582
  %44 = add nsw i64 %43, -1, !dbg !6582
  %45 = inttoptr i64 %44 to i32*, !dbg !6583
  %46 = load i32, i32* %45, align 4096, !dbg !6584, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6585
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -14, i32 %46, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6586, !srcloc !6587
  br label %275

; <label>:47:                                     ; preds = %28
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !6588
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6612
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6613
  %48 = load %struct.netconn*, %struct.netconn** %9, align 8, !dbg !6614, !tbaa !1602
  %49 = icmp eq %struct.netconn* %48, null, !dbg !6615
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6616
  br i1 %49, label %254, label %50, !dbg !6617

; <label>:50:                                     ; preds = %47
  switch i32 %1, label %254 [
    i32 4095, label %51
    i32 0, label %136
    i32 6, label %213
    i32 41, label %242
  ], !dbg !6618

; <label>:51:                                     ; preds = %50
  switch i32 %2, label %254 [
    i32 2, label %52
    i32 4106, label %116
    i32 4103, label %109
    i32 4104, label %93
    i32 32, label %72
    i32 4, label %77
    i32 8, label %78
  ], !dbg !6619

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* %4, align 4, !dbg !6621, !tbaa !1492
  %54 = icmp ult i32 %53, 4, !dbg !6621
  br i1 %54, label %254, label %55, !dbg !6626

; <label>:55:                                     ; preds = %52
  %56 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !6627
  %57 = bitcast %union.anon.4* %56 to %struct.tcp_pcb**, !dbg !6627
  %58 = load %struct.tcp_pcb*, %struct.tcp_pcb** %57, align 8, !dbg !6627, !tbaa !1696
  %59 = icmp eq %struct.tcp_pcb* %58, null, !dbg !6627
  br i1 %59, label %254, label %60, !dbg !6629

; <label>:60:                                     ; preds = %55
  %61 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !6630
  %62 = load i32, i32* %61, align 8, !dbg !6630, !tbaa !1647
  %63 = and i32 %62, 240, !dbg !6630
  %64 = icmp eq i32 %63, 16, !dbg !6632
  br i1 %64, label %65, label %254, !dbg !6633

; <label>:65:                                     ; preds = %60
  %66 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %58, i64 0, i32 8, !dbg !6634
  %67 = load i32, i32* %66, align 8, !dbg !6634, !tbaa !6636
  %68 = icmp eq i32 %67, 1, !dbg !6638
  %69 = bitcast i8* %3 to i32*, !dbg !6639
  br i1 %68, label %70, label %71, !dbg !6641

; <label>:70:                                     ; preds = %65
  store i32 1, i32* %69, align 4, !dbg !6642, !tbaa !1492
  br label %254, !dbg !6644

; <label>:71:                                     ; preds = %65
  store i32 0, i32* %69, align 4, !dbg !6645, !tbaa !1492
  br label %254

; <label>:72:                                     ; preds = %51
  %73 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !6646
  %74 = load i32, i32* %73, align 8, !dbg !6646, !tbaa !1647
  %75 = and i32 %74, 240, !dbg !6646
  %76 = icmp eq i32 %75, 32, !dbg !6648
  br i1 %76, label %78, label %254, !dbg !6649

; <label>:77:                                     ; preds = %51
  br label %78, !dbg !6650

; <label>:78:                                     ; preds = %77, %72, %51
  %79 = phi i32 [ 4, %77 ], [ 32, %72 ], [ %2, %51 ], !dbg !6656
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6657
  %80 = load i32, i32* %4, align 4, !dbg !6658, !tbaa !1492
  %81 = icmp ult i32 %80, 4, !dbg !6658
  br i1 %81, label %254, label %82, !dbg !6662

; <label>:82:                                     ; preds = %78
  %83 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !6663
  %84 = bitcast %union.anon.4* %83 to %struct.tcp_pcb**, !dbg !6663
  %85 = load %struct.tcp_pcb*, %struct.tcp_pcb** %84, align 8, !dbg !6663, !tbaa !1696
  %86 = icmp eq %struct.tcp_pcb* %85, null, !dbg !6663
  br i1 %86, label %254, label %87, !dbg !6665

; <label>:87:                                     ; preds = %82
  %88 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %85, i64 0, i32 3, !dbg !6666
  %89 = load i8, i8* %88, align 1, !dbg !6666, !tbaa !6667
  %90 = zext i8 %89 to i32, !dbg !6666
  %91 = and i32 %79, %90, !dbg !6666
  %92 = bitcast i8* %3 to i32*, !dbg !6669
  store i32 %91, i32* %92, align 4, !dbg !6670, !tbaa !1492
  br label %254, !dbg !6671

; <label>:93:                                     ; preds = %51
  %94 = load i32, i32* %4, align 4, !dbg !6672, !tbaa !1492
  %95 = icmp ult i32 %94, 4, !dbg !6672
  br i1 %95, label %254, label %96, !dbg !6676

; <label>:96:                                     ; preds = %93
  %97 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !6677
  %98 = load i32, i32* %97, align 8, !dbg !6677, !tbaa !1647
  %99 = trunc i32 %98 to i8, !dbg !6678
  %100 = and i8 %99, -16, !dbg !6678
  switch i8 %100, label %107 [
    i8 64, label %101
    i8 16, label %103
    i8 32, label %105
  ], !dbg !6678

; <label>:101:                                    ; preds = %96
  %102 = bitcast i8* %3 to i32*, !dbg !6679
  store i32 3, i32* %102, align 4, !dbg !6681, !tbaa !1492
  br label %254, !dbg !6682

; <label>:103:                                    ; preds = %96
  %104 = bitcast i8* %3 to i32*, !dbg !6683
  store i32 1, i32* %104, align 4, !dbg !6684, !tbaa !1492
  br label %254, !dbg !6685

; <label>:105:                                    ; preds = %96
  %106 = bitcast i8* %3 to i32*, !dbg !6686
  store i32 2, i32* %106, align 4, !dbg !6687, !tbaa !1492
  br label %254, !dbg !6688

; <label>:107:                                    ; preds = %96
  %108 = bitcast i8* %3 to i32*, !dbg !6689
  store i32 %98, i32* %108, align 4, !dbg !6690, !tbaa !1492
  br label %254, !dbg !6691

; <label>:109:                                    ; preds = %51
  %110 = load i32, i32* %4, align 4, !dbg !6692, !tbaa !1492
  %111 = icmp ult i32 %110, 4, !dbg !6692
  br i1 %111, label %254, label %112, !dbg !6695

; <label>:112:                                    ; preds = %109
  %113 = tail call signext i8 @netconn_err(%struct.netconn* nonnull %48) #10, !dbg !6696
  %114 = tail call i32 @err_to_errno(i8 signext %113) #10, !dbg !6697
  %115 = bitcast i8* %3 to i32*, !dbg !6698
  store i32 %114, i32* %115, align 4, !dbg !6699, !tbaa !1492
  br label %254, !dbg !6700

; <label>:116:                                    ; preds = %51
  %117 = load i32, i32* %4, align 4, !dbg !6701, !tbaa !1492
  %118 = icmp ult i32 %117, 4, !dbg !6701
  br i1 %118, label %254, label %119, !dbg !6706

; <label>:119:                                    ; preds = %116
  %120 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !6707
  %121 = bitcast %union.anon.4* %120 to %struct.tcp_pcb**, !dbg !6707
  %122 = load %struct.tcp_pcb*, %struct.tcp_pcb** %121, align 8, !dbg !6707, !tbaa !1696
  %123 = icmp eq %struct.tcp_pcb* %122, null, !dbg !6707
  br i1 %123, label %254, label %124, !dbg !6709

; <label>:124:                                    ; preds = %119
  %125 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !6710
  %126 = load i32, i32* %125, align 8, !dbg !6710, !tbaa !1647
  %127 = and i32 %126, 240, !dbg !6710
  %128 = icmp eq i32 %127, 32, !dbg !6710
  br i1 %128, label %129, label %254, !dbg !6712

; <label>:129:                                    ; preds = %124
  %130 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %122, i64 0, i32 7, !dbg !6713
  %131 = bitcast i8** %130 to i8*, !dbg !6713
  %132 = load i8, i8* %131, align 8, !dbg !6713, !tbaa !6714
  %133 = and i8 %132, 1, !dbg !6713
  %134 = zext i8 %133 to i32, !dbg !6713
  %135 = bitcast i8* %3 to i32*, !dbg !6717
  store i32 %134, i32* %135, align 4, !dbg !6718, !tbaa !1492
  br label %254, !dbg !6719

; <label>:136:                                    ; preds = %50
  switch i32 %2, label %254 [
    i32 2, label %137
    i32 1, label %150
    i32 5, label %163
    i32 6, label %180
    i32 7, label %197
  ], !dbg !6720

; <label>:137:                                    ; preds = %136
  %138 = load i32, i32* %4, align 4, !dbg !6721, !tbaa !1492
  %139 = icmp ult i32 %138, 4, !dbg !6721
  br i1 %139, label %254, label %140, !dbg !6726

; <label>:140:                                    ; preds = %137
  %141 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !6727
  %142 = bitcast %union.anon.4* %141 to %struct.tcp_pcb**, !dbg !6727
  %143 = load %struct.tcp_pcb*, %struct.tcp_pcb** %142, align 8, !dbg !6727, !tbaa !1696
  %144 = icmp eq %struct.tcp_pcb* %143, null, !dbg !6727
  br i1 %144, label %254, label %145, !dbg !6729

; <label>:145:                                    ; preds = %140
  %146 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %143, i64 0, i32 5, !dbg !6730
  %147 = load i8, i8* %146, align 1, !dbg !6730, !tbaa !6731
  %148 = zext i8 %147 to i32, !dbg !6732
  %149 = bitcast i8* %3 to i32*, !dbg !6733
  store i32 %148, i32* %149, align 4, !dbg !6734, !tbaa !1492
  br label %254, !dbg !6735

; <label>:150:                                    ; preds = %136
  %151 = load i32, i32* %4, align 4, !dbg !6736, !tbaa !1492
  %152 = icmp ult i32 %151, 4, !dbg !6736
  br i1 %152, label %254, label %153, !dbg !6740

; <label>:153:                                    ; preds = %150
  %154 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !6741
  %155 = bitcast %union.anon.4* %154 to %struct.tcp_pcb**, !dbg !6741
  %156 = load %struct.tcp_pcb*, %struct.tcp_pcb** %155, align 8, !dbg !6741, !tbaa !1696
  %157 = icmp eq %struct.tcp_pcb* %156, null, !dbg !6741
  br i1 %157, label %254, label %158, !dbg !6743

; <label>:158:                                    ; preds = %153
  %159 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %156, i64 0, i32 4, !dbg !6744
  %160 = load i8, i8* %159, align 2, !dbg !6744, !tbaa !6745
  %161 = zext i8 %160 to i32, !dbg !6746
  %162 = bitcast i8* %3 to i32*, !dbg !6747
  store i32 %161, i32* %162, align 4, !dbg !6748, !tbaa !1492
  br label %254, !dbg !6749

; <label>:163:                                    ; preds = %136
  %164 = load i32, i32* %4, align 4, !dbg !6750, !tbaa !1492
  %165 = icmp eq i32 %164, 0, !dbg !6750
  br i1 %165, label %254, label %166, !dbg !6754

; <label>:166:                                    ; preds = %163
  %167 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !6755
  %168 = bitcast %union.anon.4* %167 to %struct.tcp_pcb**, !dbg !6755
  %169 = load %struct.tcp_pcb*, %struct.tcp_pcb** %168, align 8, !dbg !6755, !tbaa !1696
  %170 = icmp eq %struct.tcp_pcb* %169, null, !dbg !6755
  %171 = bitcast %struct.tcp_pcb* %169 to %struct.udp_pcb*, !dbg !6757
  br i1 %170, label %254, label %172, !dbg !6757

; <label>:172:                                    ; preds = %166
  %173 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !6758
  %174 = load i32, i32* %173, align 8, !dbg !6758, !tbaa !1647
  %175 = and i32 %174, 240, !dbg !6758
  %176 = icmp eq i32 %175, 32, !dbg !6760
  br i1 %176, label %177, label %254, !dbg !6761

; <label>:177:                                    ; preds = %172
  %178 = getelementptr inbounds %struct.udp_pcb, %struct.udp_pcb* %171, i64 0, i32 12, !dbg !6762
  %179 = load i8, i8* %178, align 1, !dbg !6762, !tbaa !6763
  store i8 %179, i8* %3, align 1, !dbg !6764, !tbaa !1696
  br label %254, !dbg !6765

; <label>:180:                                    ; preds = %136
  %181 = load i32, i32* %4, align 4, !dbg !6766, !tbaa !1492
  %182 = icmp ult i32 %181, 4, !dbg !6766
  br i1 %182, label %254, label %183, !dbg !6770

; <label>:183:                                    ; preds = %180
  %184 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !6771
  %185 = bitcast %union.anon.4* %184 to %struct.tcp_pcb**, !dbg !6771
  %186 = load %struct.tcp_pcb*, %struct.tcp_pcb** %185, align 8, !dbg !6771, !tbaa !1696
  %187 = icmp eq %struct.tcp_pcb* %186, null, !dbg !6771
  br i1 %187, label %254, label %188, !dbg !6773

; <label>:188:                                    ; preds = %183
  %189 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !6774
  %190 = load i32, i32* %189, align 8, !dbg !6774, !tbaa !1647
  %191 = and i32 %190, 240, !dbg !6774
  %192 = icmp eq i32 %191, 32, !dbg !6776
  br i1 %192, label %193, label %254, !dbg !6777

; <label>:193:                                    ; preds = %188
  %194 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 8, !dbg !6778
  %195 = load i32, i32* %194, align 8, !dbg !6778, !tbaa !6779
  %196 = bitcast i8* %3 to i32*, !dbg !6778
  store i32 %195, i32* %196, align 4, !dbg !6778, !tbaa !6780
  br label %254, !dbg !6781

; <label>:197:                                    ; preds = %136
  %198 = load i32, i32* %4, align 4, !dbg !6782, !tbaa !1492
  %199 = icmp eq i32 %198, 0, !dbg !6782
  br i1 %199, label %254, label %200, !dbg !6786

; <label>:200:                                    ; preds = %197
  %201 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !6787
  %202 = bitcast %union.anon.4* %201 to %struct.tcp_pcb**, !dbg !6787
  %203 = load %struct.tcp_pcb*, %struct.tcp_pcb** %202, align 8, !dbg !6787, !tbaa !1696
  %204 = icmp eq %struct.tcp_pcb* %203, null, !dbg !6787
  br i1 %204, label %254, label %205, !dbg !6789

; <label>:205:                                    ; preds = %200
  %206 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %203, i64 0, i32 7, !dbg !6790
  %207 = bitcast i8** %206 to i8*, !dbg !6790
  %208 = load i8, i8* %207, align 8, !dbg !6790, !tbaa !6714
  %209 = and i8 %208, 8, !dbg !6792
  %210 = icmp eq i8 %209, 0, !dbg !6793
  br i1 %210, label %212, label %211, !dbg !6794

; <label>:211:                                    ; preds = %205
  store i8 1, i8* %3, align 1, !dbg !6795, !tbaa !1696
  br label %254, !dbg !6797

; <label>:212:                                    ; preds = %205
  store i8 0, i8* %3, align 1, !dbg !6798, !tbaa !1696
  br label %254

; <label>:213:                                    ; preds = %50
  %214 = load i32, i32* %4, align 4, !dbg !6800, !tbaa !1492
  %215 = icmp ult i32 %214, 4, !dbg !6800
  br i1 %215, label %254, label %216, !dbg !6805

; <label>:216:                                    ; preds = %213
  %217 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !6806
  %218 = bitcast %union.anon.4* %217 to %struct.tcp_pcb**, !dbg !6806
  %219 = load %struct.tcp_pcb*, %struct.tcp_pcb** %218, align 8, !dbg !6806, !tbaa !1696
  %220 = icmp eq %struct.tcp_pcb* %219, null, !dbg !6806
  br i1 %220, label %254, label %221, !dbg !6808

; <label>:221:                                    ; preds = %216
  %222 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !6809
  %223 = load i32, i32* %222, align 8, !dbg !6809, !tbaa !1647
  %224 = and i32 %223, 240, !dbg !6809
  %225 = icmp eq i32 %224, 16, !dbg !6809
  br i1 %225, label %226, label %254, !dbg !6811

; <label>:226:                                    ; preds = %221
  %227 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %219, i64 0, i32 8, !dbg !6812
  %228 = load i32, i32* %227, align 8, !dbg !6812, !tbaa !6636
  %229 = icmp eq i32 %228, 1, !dbg !6814
  br i1 %229, label %254, label %230, !dbg !6815

; <label>:230:                                    ; preds = %226
  switch i32 %2, label %254 [
    i32 1, label %231
    i32 2, label %238
  ], !dbg !6816

; <label>:231:                                    ; preds = %230
  %232 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %219, i64 0, i32 12, !dbg !6817
  %233 = load i16, i16* %232, align 2, !dbg !6817, !tbaa !6819
  %234 = lshr i16 %233, 6, !dbg !6817
  %235 = and i16 %234, 1, !dbg !6817
  %236 = zext i16 %235 to i32, !dbg !6817
  %237 = bitcast i8* %3 to i32*, !dbg !6820
  store i32 %236, i32* %237, align 4, !dbg !6821, !tbaa !1492
  br label %254, !dbg !6822

; <label>:238:                                    ; preds = %230
  %239 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %219, i64 0, i32 54, !dbg !6823
  %240 = load i32, i32* %239, align 8, !dbg !6823, !tbaa !6824
  %241 = bitcast i8* %3 to i32*, !dbg !6825
  store i32 %240, i32* %241, align 4, !dbg !6826, !tbaa !1492
  br label %254, !dbg !6827

; <label>:242:                                    ; preds = %50
  %243 = icmp eq i32 %2, 27, !dbg !6828
  br i1 %243, label %244, label %254, !dbg !6828

; <label>:244:                                    ; preds = %242
  %245 = load i32, i32* %4, align 4, !dbg !6829, !tbaa !1492
  %246 = icmp ult i32 %245, 4, !dbg !6829
  br i1 %246, label %254, label %247, !dbg !6834

; <label>:247:                                    ; preds = %244
  %248 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 8, !dbg !6835
  %249 = load i8, i8* %248, align 4, !dbg !6835, !tbaa !2211
  %250 = lshr i8 %249, 5, !dbg !6835
  %251 = and i8 %250, 1, !dbg !6835
  %252 = zext i8 %251 to i32, !dbg !6835
  %253 = bitcast i8* %3 to i32*, !dbg !6836
  store i32 %252, i32* %253, align 4, !dbg !6837, !tbaa !1492
  br label %254, !dbg !6838

; <label>:254:                                    ; preds = %47, %50, %51, %52, %55, %60, %70, %71, %72, %78, %82, %87, %93, %101, %103, %105, %107, %109, %112, %116, %119, %124, %129, %136, %137, %140, %145, %150, %153, %158, %163, %166, %172, %177, %180, %183, %188, %193, %197, %200, %211, %212, %213, %216, %221, %226, %230, %231, %238, %242, %244, %247
  %255 = phi i32 [ 22, %52 ], [ 22, %55 ], [ 109, %60 ], [ 109, %72 ], [ 22, %78 ], [ 22, %82 ], [ 22, %93 ], [ 22, %109 ], [ 22, %116 ], [ 22, %119 ], [ 109, %124 ], [ 22, %137 ], [ 22, %140 ], [ 22, %150 ], [ 22, %153 ], [ 22, %163 ], [ 22, %166 ], [ 109, %172 ], [ 22, %180 ], [ 22, %183 ], [ 109, %188 ], [ 22, %197 ], [ 22, %200 ], [ 22, %213 ], [ 22, %216 ], [ 109, %221 ], [ 22, %226 ], [ 22, %244 ], [ 0, %247 ], [ 0, %238 ], [ 0, %231 ], [ 0, %211 ], [ 0, %212 ], [ 0, %193 ], [ 0, %177 ], [ 0, %158 ], [ 0, %145 ], [ 0, %129 ], [ 0, %112 ], [ 0, %107 ], [ 0, %105 ], [ 0, %103 ], [ 0, %101 ], [ 0, %87 ], [ 0, %70 ], [ 0, %71 ], [ 109, %51 ], [ 109, %136 ], [ 109, %230 ], [ 109, %242 ], [ 109, %50 ], [ 9, %47 ], !dbg !6839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6842
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !6844
  %256 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6846, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6849
  %257 = icmp ult i64 %256, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6850
  br i1 %257, label %263, label %258, !dbg !6850

; <label>:258:                                    ; preds = %254
  %259 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6851, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6854
  %260 = icmp ugt i64 %259, ptrtoint ([0 x i8]* @_end to i64), !dbg !6850
  br i1 %260, label %263, label %261, !dbg !6855

; <label>:261:                                    ; preds = %258
  %262 = tail call i32* @__errno() #10, !dbg !6856
  store i32 %255, i32* %262, align 4, !dbg !6859, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6860
  br label %272, !dbg !6861

; <label>:263:                                    ; preds = %258, %254
  %264 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6862, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6866
  %265 = and i64 %264, -65536, !dbg !6868
  %266 = or i64 %265, 4097, !dbg !6868
  %267 = add nsw i64 %266, -1, !dbg !6868
  %268 = inttoptr i64 %267 to i32*, !dbg !6869
  %269 = load i32, i32* %268, align 4096, !dbg !6870, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6871
  %270 = sub nsw i32 0, %255, !dbg !6872
  %271 = sext i32 %270 to i64, !dbg !6872
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %271, i32 %269, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6872, !srcloc !6873
  br label %272

; <label>:272:                                    ; preds = %263, %261
  %273 = icmp ne i32 %255, 0, !dbg !6874
  %274 = sext i1 %273 to i32, !dbg !6874
  br label %275, !dbg !6875

; <label>:275:                                    ; preds = %27, %38, %40, %272
  %276 = phi i32 [ %274, %272 ], [ -1, %40 ], [ -1, %38 ], [ -1, %27 ], !dbg !6876
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6879
  ret i32 %276, !dbg !6879
}

; Function Attrs: noredzone nounwind
define dso_local i32 @setsockopt(i32, i32, i32, i8*, i32) local_unnamed_addr #0 !dbg !6880 {
  %6 = alloca %struct.sock_net_file*, align 8
  %7 = bitcast %struct.sock_net_file** %6 to i8*, !dbg !6919
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !6919
  store %struct.sock_net_file* null, %struct.sock_net_file** %6, align 8, !dbg !6920, !tbaa !1426
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6921, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6924
  %9 = icmp ult i64 %8, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6925
  br i1 %9, label %32, label %10, !dbg !6925

; <label>:10:                                     ; preds = %5
  %11 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6926, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6929
  %12 = icmp ugt i64 %11, ptrtoint ([0 x i8]* @_end to i64), !dbg !6925
  br i1 %12, label %32, label %13, !dbg !6930

; <label>:13:                                     ; preds = %10
  %14 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !6935
  %15 = icmp eq %struct.vfscore_file* %14, null, !dbg !6937
  br i1 %15, label %28, label %16, !dbg !6938

; <label>:16:                                     ; preds = %13
  %17 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %14, i64 0, i32 6, !dbg !6939
  %18 = load %struct.dentry*, %struct.dentry** %17, align 8, !dbg !6939, !tbaa !2817
  %19 = getelementptr inbounds %struct.dentry, %struct.dentry* %18, i64 0, i32 3, !dbg !6940
  %20 = load %struct.vnode*, %struct.vnode** %19, align 8, !dbg !6940, !tbaa !3077
  %21 = getelementptr inbounds %struct.vnode, %struct.vnode* %20, i64 0, i32 5, !dbg !6941
  %22 = load i32, i32* %21, align 4, !dbg !6941, !tbaa !2827
  %23 = icmp eq i32 %22, 6, !dbg !6942
  br i1 %23, label %24, label %28, !dbg !6943

; <label>:24:                                     ; preds = %16
  %25 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %14, i64 0, i32 4, !dbg !6944
  %26 = bitcast i8** %25 to %struct.sock_net_file**, !dbg !6944
  %27 = load %struct.sock_net_file*, %struct.sock_net_file** %26, align 8, !dbg !6944, !tbaa !2813
  br label %28, !dbg !6945

; <label>:28:                                     ; preds = %13, %16, %24
  %29 = phi %struct.sock_net_file* [ %27, %24 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %13 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %16 ], !dbg !6946
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6947
  store %struct.sock_net_file* %29, %struct.sock_net_file** %6, align 8, !dbg !6948, !tbaa !1426
  %30 = ptrtoint %struct.sock_net_file* %29 to i64, !dbg !6948
  %31 = bitcast %struct.sock_net_file** %6 to i64*, !dbg !6949
  br label %44, !dbg !6948

; <label>:32:                                     ; preds = %10, %5
  %33 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6950, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6954
  %34 = and i64 %33, -65536, !dbg !6956
  %35 = or i64 %34, 4097, !dbg !6956
  %36 = add nsw i64 %35, -1, !dbg !6956
  %37 = inttoptr i64 %36 to i32*, !dbg !6957
  %38 = load i32, i32* %37, align 4096, !dbg !6958, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6959
  %39 = sext i32 %0 to i64, !dbg !6960
  %40 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %39, i32 %38, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !6960, !srcloc !6961
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %6, i64 %40) #6, !dbg !6962, !srcloc !6966
  %41 = bitcast %struct.sock_net_file** %6 to i64*
  %42 = load i64, i64* %41, align 8, !dbg !6949, !tbaa !1426
  %43 = inttoptr i64 %42 to %struct.sock_net_file*
  br label %44

; <label>:44:                                     ; preds = %32, %28
  %45 = phi i64* [ %41, %32 ], [ %31, %28 ], !dbg !6949
  %46 = phi %struct.sock_net_file* [ %43, %32 ], [ %29, %28 ]
  %47 = phi i64 [ %42, %32 ], [ %30, %28 ], !dbg !6949
  %48 = add i64 %47, 512, !dbg !6949
  %49 = icmp ult i64 %48, 513, !dbg !6949
  br i1 %49, label %50, label %71, !dbg !6949

; <label>:50:                                     ; preds = %44
  %51 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6967, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6970
  %52 = icmp ult i64 %51, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6971
  br i1 %52, label %61, label %53, !dbg !6971

; <label>:53:                                     ; preds = %50
  %54 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6972, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6975
  %55 = icmp ugt i64 %54, ptrtoint ([0 x i8]* @_end to i64), !dbg !6971
  br i1 %55, label %61, label %56, !dbg !6976

; <label>:56:                                     ; preds = %53
  %57 = load i64, i64* %45, align 8, !dbg !6977, !tbaa !1426
  %58 = trunc i64 %57 to i32, !dbg !6977
  %59 = sub nsw i32 0, %58, !dbg !6981
  %60 = call i32* @__errno() #10, !dbg !6982
  store i32 %59, i32* %60, align 4, !dbg !6983, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6984
  br label %94, !dbg !6977

; <label>:61:                                     ; preds = %53, %50
  %62 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6985, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6989
  %63 = and i64 %62, -65536, !dbg !6991
  %64 = or i64 %63, 4097, !dbg !6991
  %65 = add nsw i64 %64, -1, !dbg !6991
  %66 = inttoptr i64 %65 to i32*, !dbg !6992
  %67 = load i32, i32* %66, align 4096, !dbg !6993, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6994
  %68 = load i64, i64* %45, align 8, !dbg !6995, !tbaa !1426
  %69 = shl i64 %68, 32, !dbg !6995
  %70 = ashr exact i64 %69, 32, !dbg !6995
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %70, i32 %67, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6995, !srcloc !6996
  br label %94

; <label>:71:                                     ; preds = %44
  %72 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %46, i64 0, i32 1, !dbg !6997
  %73 = load i32, i32* %72, align 8, !dbg !6997, !tbaa !1421
  %74 = call i32 @lwip_setsockopt(i32 %73, i32 %1, i32 %2, i8* %3, i32 %4) #8, !dbg !6998
  %75 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6999, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7002
  %76 = icmp ult i64 %75, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7003
  br i1 %76, label %84, label %77, !dbg !7003

; <label>:77:                                     ; preds = %71
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7004, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7007
  %79 = icmp ugt i64 %78, ptrtoint ([0 x i8]* @_end to i64), !dbg !7003
  br i1 %79, label %84, label %80, !dbg !7008

; <label>:80:                                     ; preds = %77
  %81 = load %struct.sock_net_file*, %struct.sock_net_file** %6, align 8, !dbg !7009, !tbaa !1426
  %82 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %81, i64 0, i32 0, !dbg !7009
  %83 = load %struct.vfscore_file*, %struct.vfscore_file** %82, align 8, !dbg !7009, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %83) #10, !dbg !7009
  br label %94, !dbg !7009

; <label>:84:                                     ; preds = %77, %71
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7011, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7015
  %86 = and i64 %85, -65536, !dbg !7017
  %87 = or i64 %86, 4097, !dbg !7017
  %88 = add nsw i64 %87, -1, !dbg !7017
  %89 = inttoptr i64 %88 to i32*, !dbg !7018
  %90 = load i32, i32* %89, align 4096, !dbg !7019, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7020
  %91 = bitcast %struct.sock_net_file** %6 to i64**, !dbg !7021
  %92 = load i64*, i64** %91, align 8, !dbg !7021, !tbaa !1426
  %93 = load i64, i64* %92, align 8, !dbg !7021, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %93, i32 %90, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !7021, !srcloc !7022
  br label %94

; <label>:94:                                     ; preds = %80, %84, %56, %61
  %95 = phi i32 [ -1, %56 ], [ -1, %61 ], [ %74, %80 ], [ %74, %84 ], !dbg !7023
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !7024
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7025
  ret i32 %95, !dbg !7025
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_setsockopt(i32, i32, i32, i8*, i32) local_unnamed_addr #0 !dbg !7026 {
  %6 = alloca %struct.ip6_addr, align 16
  %7 = icmp ugt i32 %0, 63, !dbg !7068
  %8 = sext i32 %0 to i64, !dbg !7069
  %9 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %8, !dbg !7069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7071
  br i1 %7, label %14, label %10, !dbg !7072

; <label>:10:                                     ; preds = %5
  %11 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %9, i64 0, i32 0, !dbg !7075
  %12 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !7075, !tbaa !1602
  %13 = icmp eq %struct.netconn* %12, null, !dbg !7076
  br i1 %13, label %14, label %30, !dbg !7077

; <label>:14:                                     ; preds = %10, %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7078
  %15 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7080, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7083
  %16 = icmp ult i64 %15, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7084
  br i1 %16, label %22, label %17, !dbg !7084

; <label>:17:                                     ; preds = %14
  %18 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7085, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7088
  %19 = icmp ugt i64 %18, ptrtoint ([0 x i8]* @_end to i64), !dbg !7084
  br i1 %19, label %22, label %20, !dbg !7089

; <label>:20:                                     ; preds = %17
  %21 = tail call i32* @__errno() #10, !dbg !7092
  store i32 9, i32* %21, align 4, !dbg !7093, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7094
  br label %29, !dbg !7095

; <label>:22:                                     ; preds = %17, %14
  %23 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7096, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7100
  %24 = and i64 %23, -65536, !dbg !7102
  %25 = or i64 %24, 4097, !dbg !7102
  %26 = add nsw i64 %25, -1, !dbg !7102
  %27 = inttoptr i64 %26 to i32*, !dbg !7103
  %28 = load i32, i32* %27, align 4096, !dbg !7104, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7105
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %28, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7106, !srcloc !1640
  br label %29

; <label>:29:                                     ; preds = %22, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7107
  br label %423, !dbg !7109

; <label>:30:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7107
  %31 = icmp eq i8* %3, null, !dbg !7110
  br i1 %31, label %32, label %47, !dbg !7111

; <label>:32:                                     ; preds = %30
  %33 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7113, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7116
  %34 = icmp ult i64 %33, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7117
  br i1 %34, label %40, label %35, !dbg !7117

; <label>:35:                                     ; preds = %32
  %36 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7118, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7121
  %37 = icmp ugt i64 %36, ptrtoint ([0 x i8]* @_end to i64), !dbg !7117
  br i1 %37, label %40, label %38, !dbg !7122

; <label>:38:                                     ; preds = %35
  %39 = tail call i32* @__errno() #10, !dbg !7126
  store i32 14, i32* %39, align 4, !dbg !7127, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7128
  br label %423, !dbg !7129

; <label>:40:                                     ; preds = %35, %32
  %41 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7130, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7134
  %42 = and i64 %41, -65536, !dbg !7136
  %43 = or i64 %42, 4097, !dbg !7136
  %44 = add nsw i64 %43, -1, !dbg !7136
  %45 = inttoptr i64 %44 to i32*, !dbg !7137
  %46 = load i32, i32* %45, align 4096, !dbg !7138, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7139
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -14, i32 %46, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7140, !srcloc !7141
  br label %423

; <label>:47:                                     ; preds = %30
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !7142
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7239
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7240
  %48 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !7243, !tbaa !1602
  %49 = icmp eq %struct.netconn* %48, null, !dbg !7244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7245
  br i1 %49, label %402, label %50, !dbg !7247

; <label>:50:                                     ; preds = %47
  switch i32 %1, label %402 [
    i32 4095, label %51
    i32 0, label %126
    i32 6, label %205
    i32 41, label %236
  ], !dbg !7248

; <label>:51:                                     ; preds = %50
  switch i32 %2, label %402 [
    i32 4107, label %100
    i32 4106, label %77
    i32 32, label %52
    i32 4, label %57
    i32 8, label %58
  ], !dbg !7249

; <label>:52:                                     ; preds = %51
  %53 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !7250
  %54 = load i32, i32* %53, align 8, !dbg !7250, !tbaa !1647
  %55 = and i32 %54, 240, !dbg !7250
  %56 = icmp eq i32 %55, 32, !dbg !7252
  br i1 %56, label %58, label %402, !dbg !7253

; <label>:57:                                     ; preds = %51
  br label %58, !dbg !7254

; <label>:58:                                     ; preds = %57, %52, %51
  %59 = phi i8 [ 4, %57 ], [ 32, %52 ], [ 8, %51 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7256
  %60 = icmp ult i32 %4, 4, !dbg !7257
  br i1 %60, label %402, label %61, !dbg !7261

; <label>:61:                                     ; preds = %58
  %62 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7262
  %63 = bitcast %union.anon.4* %62 to %struct.tcp_pcb**, !dbg !7262
  %64 = load %struct.tcp_pcb*, %struct.tcp_pcb** %63, align 8, !dbg !7262, !tbaa !1696
  %65 = icmp eq %struct.tcp_pcb* %64, null, !dbg !7262
  br i1 %65, label %402, label %66, !dbg !7264

; <label>:66:                                     ; preds = %61
  %67 = bitcast i8* %3 to i32*, !dbg !7265
  %68 = load i32, i32* %67, align 4, !dbg !7267, !tbaa !1492
  %69 = icmp eq i32 %68, 0, !dbg !7267
  %70 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %64, i64 0, i32 3, !dbg !7268
  %71 = load i8, i8* %70, align 1, !dbg !7268, !tbaa !6667
  br i1 %69, label %74, label %72, !dbg !7270

; <label>:72:                                     ; preds = %66
  %73 = or i8 %71, %59, !dbg !7271
  store i8 %73, i8* %70, align 1, !dbg !7271, !tbaa !6667
  br label %402, !dbg !7273

; <label>:74:                                     ; preds = %66
  %75 = xor i8 %59, -1, !dbg !7274
  %76 = and i8 %71, %75, !dbg !7274
  store i8 %76, i8* %70, align 1, !dbg !7274, !tbaa !6667
  br label %402

; <label>:77:                                     ; preds = %51
  %78 = icmp ult i32 %4, 4, !dbg !7275
  br i1 %78, label %402, label %79, !dbg !7280

; <label>:79:                                     ; preds = %77
  %80 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7281
  %81 = bitcast %union.anon.4* %80 to %struct.tcp_pcb**, !dbg !7281
  %82 = load %struct.tcp_pcb*, %struct.tcp_pcb** %81, align 8, !dbg !7281, !tbaa !1696
  %83 = icmp eq %struct.tcp_pcb* %82, null, !dbg !7281
  br i1 %83, label %402, label %84, !dbg !7283

; <label>:84:                                     ; preds = %79
  %85 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !7284
  %86 = load i32, i32* %85, align 8, !dbg !7284, !tbaa !1647
  %87 = and i32 %86, 240, !dbg !7284
  %88 = icmp eq i32 %87, 32, !dbg !7284
  br i1 %88, label %89, label %402, !dbg !7286

; <label>:89:                                     ; preds = %84
  %90 = bitcast i8* %3 to i32*, !dbg !7287
  %91 = load i32, i32* %90, align 4, !dbg !7289, !tbaa !1492
  %92 = icmp eq i32 %91, 0, !dbg !7289
  %93 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %82, i64 0, i32 7, !dbg !7290
  %94 = bitcast i8** %93 to i8*, !dbg !7290
  %95 = load i8, i8* %94, align 8, !dbg !7290, !tbaa !6714
  br i1 %92, label %98, label %96, !dbg !7293

; <label>:96:                                     ; preds = %89
  %97 = or i8 %95, 1, !dbg !7294
  store i8 %97, i8* %94, align 8, !dbg !7294, !tbaa !6714
  br label %402, !dbg !7297

; <label>:98:                                     ; preds = %89
  %99 = and i8 %95, -2, !dbg !7298
  store i8 %99, i8* %94, align 8, !dbg !7298, !tbaa !6714
  br label %402

; <label>:100:                                    ; preds = %51
  %101 = icmp ult i32 %4, 24, !dbg !7300
  br i1 %101, label %402, label %102, !dbg !7304

; <label>:102:                                    ; preds = %100
  %103 = load i8, i8* %3, align 8, !dbg !7306, !tbaa !1696
  %104 = icmp eq i8 %103, 0, !dbg !7308
  br i1 %104, label %110, label %105, !dbg !7309

; <label>:105:                                    ; preds = %102
  %106 = tail call %struct.netif* @netif_find(i8* nonnull %3) #10, !dbg !7310
  %107 = icmp eq %struct.netif* %106, null, !dbg !7312
  br i1 %107, label %402, label %108, !dbg !7314

; <label>:108:                                    ; preds = %105
  %109 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !7315, !tbaa !1602
  br label %110, !dbg !7314

; <label>:110:                                    ; preds = %108, %102
  %111 = phi %struct.netconn* [ %109, %108 ], [ %48, %102 ], !dbg !7315
  %112 = phi %struct.netif* [ %106, %108 ], [ null, %102 ], !dbg !7316
  %113 = getelementptr inbounds %struct.netconn, %struct.netconn* %111, i64 0, i32 0, !dbg !7315
  %114 = load i32, i32* %113, align 8, !dbg !7315, !tbaa !1647
  %115 = trunc i32 %114 to i8, !dbg !7317
  %116 = and i8 %115, -16, !dbg !7317
  switch i8 %116, label %125 [
    i8 16, label %117
    i8 32, label %121
  ], !dbg !7317

; <label>:117:                                    ; preds = %110
  %118 = getelementptr inbounds %struct.netconn, %struct.netconn* %111, i64 0, i32 2, !dbg !7318
  %119 = bitcast %union.anon.4* %118 to %struct.tcp_pcb**, !dbg !7320
  %120 = load %struct.tcp_pcb*, %struct.tcp_pcb** %119, align 8, !dbg !7320, !tbaa !1696
  tail call void @tcp_bind_netif(%struct.tcp_pcb* %120, %struct.netif* %112) #10, !dbg !7321
  br label %402, !dbg !7322

; <label>:121:                                    ; preds = %110
  %122 = getelementptr inbounds %struct.netconn, %struct.netconn* %111, i64 0, i32 2, !dbg !7323
  %123 = bitcast %union.anon.4* %122 to %struct.udp_pcb**, !dbg !7324
  %124 = load %struct.udp_pcb*, %struct.udp_pcb** %123, align 8, !dbg !7324, !tbaa !1696
  tail call void @udp_bind_netif(%struct.udp_pcb* %124, %struct.netif* %112) #10, !dbg !7325
  br label %402, !dbg !7326

; <label>:125:                                    ; preds = %110
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.44, i64 0, i64 0)) #10, !dbg !7327
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !7332
  tail call void @ukplat_terminate(i32 3) #9, !dbg !7332
  unreachable, !dbg !7332

; <label>:126:                                    ; preds = %50
  switch i32 %2, label %402 [
    i32 2, label %127
    i32 1, label %139
    i32 5, label %151
    i32 6, label %167
    i32 7, label %183
  ], !dbg !7336

; <label>:127:                                    ; preds = %126
  %128 = icmp ult i32 %4, 4, !dbg !7337
  br i1 %128, label %402, label %129, !dbg !7341

; <label>:129:                                    ; preds = %127
  %130 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7342
  %131 = bitcast %union.anon.4* %130 to %struct.tcp_pcb**, !dbg !7342
  %132 = load %struct.tcp_pcb*, %struct.tcp_pcb** %131, align 8, !dbg !7342, !tbaa !1696
  %133 = icmp eq %struct.tcp_pcb* %132, null, !dbg !7342
  br i1 %133, label %402, label %134, !dbg !7344

; <label>:134:                                    ; preds = %129
  %135 = bitcast i8* %3 to i32*, !dbg !7345
  %136 = load i32, i32* %135, align 4, !dbg !7346, !tbaa !1492
  %137 = trunc i32 %136 to i8, !dbg !7347
  %138 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %132, i64 0, i32 5, !dbg !7348
  store i8 %137, i8* %138, align 1, !dbg !7349, !tbaa !6731
  br label %402, !dbg !7350

; <label>:139:                                    ; preds = %126
  %140 = icmp ult i32 %4, 4, !dbg !7351
  br i1 %140, label %402, label %141, !dbg !7355

; <label>:141:                                    ; preds = %139
  %142 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7356
  %143 = bitcast %union.anon.4* %142 to %struct.tcp_pcb**, !dbg !7356
  %144 = load %struct.tcp_pcb*, %struct.tcp_pcb** %143, align 8, !dbg !7356, !tbaa !1696
  %145 = icmp eq %struct.tcp_pcb* %144, null, !dbg !7356
  br i1 %145, label %402, label %146, !dbg !7358

; <label>:146:                                    ; preds = %141
  %147 = bitcast i8* %3 to i32*, !dbg !7359
  %148 = load i32, i32* %147, align 4, !dbg !7360, !tbaa !1492
  %149 = trunc i32 %148 to i8, !dbg !7361
  %150 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %144, i64 0, i32 4, !dbg !7362
  store i8 %149, i8* %150, align 2, !dbg !7363, !tbaa !6745
  br label %402, !dbg !7364

; <label>:151:                                    ; preds = %126
  %152 = icmp eq i32 %4, 0, !dbg !7365
  br i1 %152, label %402, label %153, !dbg !7370

; <label>:153:                                    ; preds = %151
  %154 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7371
  %155 = bitcast %union.anon.4* %154 to %struct.tcp_pcb**, !dbg !7371
  %156 = load %struct.tcp_pcb*, %struct.tcp_pcb** %155, align 8, !dbg !7371, !tbaa !1696
  %157 = icmp eq %struct.tcp_pcb* %156, null, !dbg !7371
  %158 = bitcast %struct.tcp_pcb* %156 to %struct.udp_pcb*, !dbg !7373
  br i1 %157, label %402, label %159, !dbg !7373

; <label>:159:                                    ; preds = %153
  %160 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !7374
  %161 = load i32, i32* %160, align 8, !dbg !7374, !tbaa !1647
  %162 = and i32 %161, 240, !dbg !7374
  %163 = icmp eq i32 %162, 32, !dbg !7374
  br i1 %163, label %164, label %402, !dbg !7376

; <label>:164:                                    ; preds = %159
  %165 = load i8, i8* %3, align 1, !dbg !7377, !tbaa !1696
  %166 = getelementptr inbounds %struct.udp_pcb, %struct.udp_pcb* %158, i64 0, i32 12, !dbg !7377
  store i8 %165, i8* %166, align 1, !dbg !7377, !tbaa !6763
  br label %402, !dbg !7378

; <label>:167:                                    ; preds = %126
  %168 = icmp ult i32 %4, 4, !dbg !7379
  br i1 %168, label %402, label %169, !dbg !7384

; <label>:169:                                    ; preds = %167
  %170 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7385
  %171 = bitcast %union.anon.4* %170 to %struct.tcp_pcb**, !dbg !7385
  %172 = load %struct.tcp_pcb*, %struct.tcp_pcb** %171, align 8, !dbg !7385, !tbaa !1696
  %173 = icmp eq %struct.tcp_pcb* %172, null, !dbg !7385
  br i1 %173, label %402, label %174, !dbg !7387

; <label>:174:                                    ; preds = %169
  %175 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !7388
  %176 = load i32, i32* %175, align 8, !dbg !7388, !tbaa !1647
  %177 = and i32 %176, 240, !dbg !7388
  %178 = icmp eq i32 %177, 32, !dbg !7388
  br i1 %178, label %179, label %402, !dbg !7390

; <label>:179:                                    ; preds = %174
  %180 = bitcast i8* %3 to i32*, !dbg !7391
  %181 = load i32, i32* %180, align 4, !dbg !7391, !tbaa !6780
  %182 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %172, i64 0, i32 8, !dbg !7393
  store i32 %181, i32* %182, align 8, !dbg !7393, !tbaa !6779
  br label %402

; <label>:183:                                    ; preds = %126
  %184 = icmp eq i32 %4, 0, !dbg !7394
  br i1 %184, label %402, label %185, !dbg !7399

; <label>:185:                                    ; preds = %183
  %186 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7400
  %187 = bitcast %union.anon.4* %186 to %struct.tcp_pcb**, !dbg !7400
  %188 = load %struct.tcp_pcb*, %struct.tcp_pcb** %187, align 8, !dbg !7400, !tbaa !1696
  %189 = icmp eq %struct.tcp_pcb* %188, null, !dbg !7400
  br i1 %189, label %402, label %190, !dbg !7402

; <label>:190:                                    ; preds = %185
  %191 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !7403
  %192 = load i32, i32* %191, align 8, !dbg !7403, !tbaa !1647
  %193 = and i32 %192, 240, !dbg !7403
  %194 = icmp eq i32 %193, 32, !dbg !7403
  br i1 %194, label %195, label %402, !dbg !7405

; <label>:195:                                    ; preds = %190
  %196 = load i8, i8* %3, align 1, !dbg !7406, !tbaa !1696
  %197 = icmp eq i8 %196, 0, !dbg !7406
  %198 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %188, i64 0, i32 7, !dbg !7408
  %199 = bitcast i8** %198 to i8*, !dbg !7408
  %200 = load i8, i8* %199, align 8, !dbg !7408, !tbaa !6714
  br i1 %197, label %203, label %201, !dbg !7411

; <label>:201:                                    ; preds = %195
  %202 = or i8 %200, 8, !dbg !7412
  store i8 %202, i8* %199, align 8, !dbg !7412, !tbaa !6714
  br label %402, !dbg !7415

; <label>:203:                                    ; preds = %195
  %204 = and i8 %200, -9, !dbg !7416
  store i8 %204, i8* %199, align 8, !dbg !7416, !tbaa !6714
  br label %402

; <label>:205:                                    ; preds = %50
  %206 = icmp ult i32 %4, 4, !dbg !7417
  br i1 %206, label %402, label %207, !dbg !7422

; <label>:207:                                    ; preds = %205
  %208 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7423
  %209 = bitcast %union.anon.4* %208 to %struct.tcp_pcb**, !dbg !7423
  %210 = load %struct.tcp_pcb*, %struct.tcp_pcb** %209, align 8, !dbg !7423, !tbaa !1696
  %211 = icmp eq %struct.tcp_pcb* %210, null, !dbg !7423
  br i1 %211, label %402, label %212, !dbg !7425

; <label>:212:                                    ; preds = %207
  %213 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !7426
  %214 = load i32, i32* %213, align 8, !dbg !7426, !tbaa !1647
  %215 = and i32 %214, 240, !dbg !7426
  %216 = icmp eq i32 %215, 16, !dbg !7426
  br i1 %216, label %217, label %402, !dbg !7428

; <label>:217:                                    ; preds = %212
  %218 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %210, i64 0, i32 8, !dbg !7429
  %219 = load i32, i32* %218, align 8, !dbg !7429, !tbaa !6636
  %220 = icmp eq i32 %219, 1, !dbg !7431
  br i1 %220, label %402, label %221, !dbg !7432

; <label>:221:                                    ; preds = %217
  switch i32 %2, label %402 [
    i32 1, label %222
    i32 2, label %232
  ], !dbg !7433

; <label>:222:                                    ; preds = %221
  %223 = bitcast i8* %3 to i32*, !dbg !7434
  %224 = load i32, i32* %223, align 4, !dbg !7437, !tbaa !1492
  %225 = icmp eq i32 %224, 0, !dbg !7437
  %226 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %210, i64 0, i32 12, !dbg !7438
  %227 = load i16, i16* %226, align 2, !dbg !7438, !tbaa !6819
  br i1 %225, label %230, label %228, !dbg !7441

; <label>:228:                                    ; preds = %222
  %229 = or i16 %227, 64, !dbg !7442
  store i16 %229, i16* %226, align 2, !dbg !7442, !tbaa !6819
  br label %402, !dbg !7445

; <label>:230:                                    ; preds = %222
  %231 = and i16 %227, -65, !dbg !7446
  store i16 %231, i16* %226, align 2, !dbg !7446, !tbaa !6819
  br label %402

; <label>:232:                                    ; preds = %221
  %233 = bitcast i8* %3 to i32*, !dbg !7447
  %234 = load i32, i32* %233, align 4, !dbg !7448, !tbaa !1492
  %235 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %210, i64 0, i32 54, !dbg !7449
  store i32 %234, i32* %235, align 8, !dbg !7450, !tbaa !6824
  br label %402, !dbg !7451

; <label>:236:                                    ; preds = %50
  switch i32 %2, label %402 [
    i32 27, label %237
    i32 12, label %254
    i32 13, label %254
  ], !dbg !7452

; <label>:237:                                    ; preds = %236
  %238 = icmp ult i32 %4, 4, !dbg !7453
  br i1 %238, label %402, label %239, !dbg !7457

; <label>:239:                                    ; preds = %237
  %240 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7458
  %241 = bitcast %union.anon.4* %240 to %struct.tcp_pcb**, !dbg !7458
  %242 = load %struct.tcp_pcb*, %struct.tcp_pcb** %241, align 8, !dbg !7458, !tbaa !1696
  %243 = icmp eq %struct.tcp_pcb* %242, null, !dbg !7458
  br i1 %243, label %402, label %244, !dbg !7460

; <label>:244:                                    ; preds = %239
  %245 = bitcast i8* %3 to i32*, !dbg !7461
  %246 = load i32, i32* %245, align 4, !dbg !7463, !tbaa !1492
  %247 = icmp eq i32 %246, 0, !dbg !7463
  %248 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 8, !dbg !7464
  %249 = load i8, i8* %248, align 4, !dbg !7464, !tbaa !2211
  br i1 %247, label %252, label %250, !dbg !7470

; <label>:250:                                    ; preds = %244
  %251 = or i8 %249, 32, !dbg !7471
  store i8 %251, i8* %248, align 4, !dbg !7471, !tbaa !2211
  br label %402, !dbg !7477

; <label>:252:                                    ; preds = %244
  %253 = and i8 %249, -33, !dbg !7478
  store i8 %253, i8* %248, align 4, !dbg !7478, !tbaa !2211
  br label %402

; <label>:254:                                    ; preds = %236, %236
  %255 = bitcast %struct.ip6_addr* %6 to i8*, !dbg !7479
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %255) #6, !dbg !7479
  %256 = icmp ult i32 %4, 20, !dbg !7481
  br i1 %256, label %398, label %257, !dbg !7486

; <label>:257:                                    ; preds = %254
  %258 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 2, !dbg !7487
  %259 = bitcast %union.anon.4* %258 to %struct.tcp_pcb**, !dbg !7487
  %260 = load %struct.tcp_pcb*, %struct.tcp_pcb** %259, align 8, !dbg !7487, !tbaa !1696
  %261 = icmp eq %struct.tcp_pcb* %260, null, !dbg !7487
  br i1 %261, label %398, label %262, !dbg !7489

; <label>:262:                                    ; preds = %257
  %263 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !7490
  %264 = load i32, i32* %263, align 8, !dbg !7490, !tbaa !1647
  %265 = and i32 %264, 240, !dbg !7490
  %266 = icmp eq i32 %265, 32, !dbg !7490
  br i1 %266, label %267, label %398, !dbg !7492

; <label>:267:                                    ; preds = %262
  %268 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 0, i64 0, !dbg !7493
  %269 = bitcast i8* %3 to <4 x i32>*, !dbg !7493
  %270 = load <4 x i32>, <4 x i32>* %269, align 4, !dbg !7493, !tbaa !1696
  %271 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 0, i64 1, !dbg !7493
  %272 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 0, i64 2, !dbg !7493
  %273 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 0, i64 3, !dbg !7493
  %274 = bitcast %struct.ip6_addr* %6 to <4 x i32>*, !dbg !7493
  store <4 x i32> %270, <4 x i32>* %274, align 16, !dbg !7493, !tbaa !1492
  %275 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 1, !dbg !7493
  store i8 0, i8* %275, align 16, !dbg !7493, !tbaa !7495
  %276 = getelementptr inbounds i8, i8* %3, i64 16, !dbg !7496
  %277 = bitcast i8* %276 to i32*, !dbg !7496
  %278 = load i32, i32* %277, align 4, !dbg !7496, !tbaa !7499
  %279 = icmp ult i32 %278, 256, !dbg !7496
  br i1 %279, label %281, label %280, !dbg !7501

; <label>:280:                                    ; preds = %267
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i64 0, i64 0)) #10, !dbg !7502
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !7505
  tail call void @ukplat_terminate(i32 3) #9, !dbg !7505
  unreachable, !dbg !7505

; <label>:281:                                    ; preds = %267
  %282 = trunc i32 %278 to i8, !dbg !7509
  %283 = tail call %struct.netif* @netif_get_by_index(i8 zeroext %282) #10, !dbg !7510
  %284 = icmp eq %struct.netif* %283, null, !dbg !7512
  br i1 %284, label %400, label %285, !dbg !7514

; <label>:285:                                    ; preds = %281
  %286 = icmp eq i32 %2, 12, !dbg !7515
  br i1 %286, label %287, label %330, !dbg !7517

; <label>:287:                                    ; preds = %285
  %288 = load i32, i32* %277, align 4, !dbg !7518, !tbaa !7499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7544
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7545
  %289 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !7548, !tbaa !1602
  %290 = icmp eq %struct.netconn* %289, null, !dbg !7549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7550
  br i1 %290, label %291, label %307, !dbg !7552

; <label>:291:                                    ; preds = %287
  %292 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7553, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7556
  %293 = icmp ult i64 %292, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7557
  br i1 %293, label %299, label %294, !dbg !7557

; <label>:294:                                    ; preds = %291
  %295 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7558, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7561
  %296 = icmp ugt i64 %295, ptrtoint ([0 x i8]* @_end to i64), !dbg !7557
  br i1 %296, label %299, label %297, !dbg !7562

; <label>:297:                                    ; preds = %294
  %298 = tail call i32* @__errno() #10, !dbg !7565
  store i32 9, i32* %298, align 4, !dbg !7566, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7567
  br label %306, !dbg !7568

; <label>:299:                                    ; preds = %294, %291
  %300 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7569, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7573
  %301 = and i64 %300, -65536, !dbg !7575
  %302 = or i64 %301, 4097, !dbg !7575
  %303 = add nsw i64 %302, -1, !dbg !7575
  %304 = inttoptr i64 %303 to i32*, !dbg !7576
  %305 = load i32, i32* %304, align 4096, !dbg !7577, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7578
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %305, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7579, !srcloc !1640
  br label %306

; <label>:306:                                    ; preds = %299, %297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7580
  br label %319, !dbg !7582

; <label>:307:                                    ; preds = %287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7580
  br label %313, !dbg !7584

; <label>:308:                                    ; preds = %313
  %309 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %318, i32 0, !dbg !7586
  %310 = load %struct.lwip_sock*, %struct.lwip_sock** %309, align 16, !dbg !7586, !tbaa !1687
  %311 = icmp eq %struct.lwip_sock* %310, null, !dbg !7590
  %312 = or i64 %314, 2, !dbg !7591
  br i1 %311, label %320, label %425, !dbg !7592

; <label>:313:                                    ; preds = %435, %307
  %314 = phi i64 [ 0, %307 ], [ %434, %435 ]
  %315 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %314, i32 0, !dbg !7586
  %316 = load %struct.lwip_sock*, %struct.lwip_sock** %315, align 16, !dbg !7586, !tbaa !1687
  %317 = icmp eq %struct.lwip_sock* %316, null, !dbg !7590
  %318 = or i64 %314, 1, !dbg !7591
  br i1 %317, label %320, label %308, !dbg !7592

; <label>:319:                                    ; preds = %435, %306
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7593
  br label %396, !dbg !7595

; <label>:320:                                    ; preds = %430, %425, %308, %313
  %321 = phi i64 [ %314, %313 ], [ %318, %308 ], [ %312, %425 ], [ %429, %430 ]
  %322 = phi %struct.lwip_sock** [ %315, %313 ], [ %309, %308 ], [ %426, %425 ], [ %431, %430 ], !dbg !7586
  %323 = and i64 %321, 4294967295, !dbg !7596
  store %struct.lwip_sock* %9, %struct.lwip_sock** %322, align 16, !dbg !7597, !tbaa !1687
  %324 = trunc i32 %288 to i8, !dbg !7599
  %325 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %323, i32 1, !dbg !7600
  store i8 %324, i8* %325, align 8, !dbg !7601, !tbaa !1703
  %326 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %323, i32 2, i32 0, i64 0, !dbg !7602
  %327 = bitcast i32* %326 to <4 x i32>*, !dbg !7602
  store <4 x i32> %270, <4 x i32>* %327, align 4, !dbg !7602, !tbaa !1492
  %328 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %323, i32 2, i32 1, !dbg !7602
  store i8 0, i8* %328, align 4, !dbg !7602, !tbaa !1697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7593
  %329 = call signext i8 @mld6_joingroup_netif(%struct.netif* nonnull %283, %struct.ip6_addr* nonnull %6) #10, !dbg !7604
  br label %393

; <label>:330:                                    ; preds = %285
  %331 = call signext i8 @mld6_leavegroup_netif(%struct.netif* nonnull %283, %struct.ip6_addr* nonnull %6) #10, !dbg !7606
  %332 = load i32, i32* %277, align 4, !dbg !7608, !tbaa !7499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7632
  %333 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !7635, !tbaa !1602
  %334 = icmp eq %struct.netconn* %333, null, !dbg !7636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7637
  br i1 %334, label %335, label %351, !dbg !7639

; <label>:335:                                    ; preds = %330
  %336 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7640, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7643
  %337 = icmp ult i64 %336, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7644
  br i1 %337, label %343, label %338, !dbg !7644

; <label>:338:                                    ; preds = %335
  %339 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7645, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7648
  %340 = icmp ugt i64 %339, ptrtoint ([0 x i8]* @_end to i64), !dbg !7644
  br i1 %340, label %343, label %341, !dbg !7649

; <label>:341:                                    ; preds = %338
  %342 = call i32* @__errno() #10, !dbg !7652
  store i32 9, i32* %342, align 4, !dbg !7653, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7654
  br label %350, !dbg !7655

; <label>:343:                                    ; preds = %338, %335
  %344 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7656, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7660
  %345 = and i64 %344, -65536, !dbg !7662
  %346 = or i64 %345, 4097, !dbg !7662
  %347 = add nsw i64 %346, -1, !dbg !7662
  %348 = inttoptr i64 %347 to i32*, !dbg !7663
  %349 = load i32, i32* %348, align 4096, !dbg !7664, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7665
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %349, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7666, !srcloc !1640
  br label %350

; <label>:350:                                    ; preds = %343, %341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7667
  br label %392, !dbg !7669

; <label>:351:                                    ; preds = %330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7667
  %352 = load i32, i32* %268, align 16
  %353 = load i32, i32* %271, align 4
  %354 = load i32, i32* %272, align 8
  %355 = load i32, i32* %273, align 4
  %356 = load i8, i8* %275, align 16
  br label %357, !dbg !7671

; <label>:357:                                    ; preds = %389, %351
  %358 = phi i64 [ 0, %351 ], [ %390, %389 ]
  %359 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %358, i32 0, !dbg !7673
  %360 = load %struct.lwip_sock*, %struct.lwip_sock** %359, align 16, !dbg !7673, !tbaa !1687
  %361 = icmp eq %struct.lwip_sock* %360, %9, !dbg !7677
  br i1 %361, label %362, label %389, !dbg !7678

; <label>:362:                                    ; preds = %357
  %363 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %358, i32 1, !dbg !7679
  %364 = load i8, i8* %363, align 8, !dbg !7679, !tbaa !1703
  %365 = zext i8 %364 to i32, !dbg !7680
  %366 = icmp eq i32 %332, %365, !dbg !7681
  br i1 %366, label %367, label %389, !dbg !7682

; <label>:367:                                    ; preds = %362
  %368 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %358, i32 2, i32 0, i64 0, !dbg !7683
  %369 = load i32, i32* %368, align 4, !dbg !7683, !tbaa !1492
  %370 = icmp eq i32 %369, %352, !dbg !7683
  br i1 %370, label %371, label %389, !dbg !7683

; <label>:371:                                    ; preds = %367
  %372 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %358, i32 2, i32 0, i64 1, !dbg !7683
  %373 = load i32, i32* %372, align 4, !dbg !7683, !tbaa !1492
  %374 = icmp eq i32 %373, %353, !dbg !7683
  br i1 %374, label %375, label %389, !dbg !7683

; <label>:375:                                    ; preds = %371
  %376 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %358, i32 2, i32 0, i64 2, !dbg !7683
  %377 = load i32, i32* %376, align 4, !dbg !7683, !tbaa !1492
  %378 = icmp eq i32 %377, %354, !dbg !7683
  br i1 %378, label %379, label %389, !dbg !7683

; <label>:379:                                    ; preds = %375
  %380 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %358, i32 2, i32 0, i64 3, !dbg !7683
  %381 = load i32, i32* %380, align 4, !dbg !7683, !tbaa !1492
  %382 = icmp eq i32 %381, %355, !dbg !7683
  br i1 %382, label %383, label %389, !dbg !7683

; <label>:383:                                    ; preds = %379
  %384 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %358, i32 2, i32 1, !dbg !7683
  %385 = load i8, i8* %384, align 4, !dbg !7683, !tbaa !1697
  %386 = icmp eq i8 %385, %356, !dbg !7683
  br i1 %386, label %387, label %389, !dbg !7684

; <label>:387:                                    ; preds = %383
  store %struct.lwip_sock* null, %struct.lwip_sock** %359, align 16, !dbg !7685, !tbaa !1687
  store i8 0, i8* %363, align 8, !dbg !7687, !tbaa !1703
  %388 = bitcast i32* %368 to <4 x i32>*, !dbg !7688
  store <4 x i32> zeroinitializer, <4 x i32>* %388, align 4, !dbg !7688, !tbaa !1492
  store i8 0, i8* %384, align 4, !dbg !7688, !tbaa !1697
  br label %392, !dbg !7690

; <label>:389:                                    ; preds = %383, %379, %375, %371, %367, %362, %357
  %390 = add nuw nsw i64 %358, 1, !dbg !7691
  %391 = icmp ult i64 %390, 64, !dbg !7692
  br i1 %391, label %357, label %392, !dbg !7671, !llvm.loop !7693

; <label>:392:                                    ; preds = %389, %387, %350
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7696
  br label %393

; <label>:393:                                    ; preds = %392, %320
  %394 = phi i8 [ %329, %320 ], [ %331, %392 ], !dbg !7697
  %395 = icmp eq i8 %394, 0, !dbg !7698
  br i1 %395, label %396, label %400, !dbg !7595

; <label>:396:                                    ; preds = %393, %319
  %397 = phi i32 [ 12, %319 ], [ 0, %393 ]
  br label %400, !dbg !7595

; <label>:398:                                    ; preds = %262, %257, %254
  %399 = phi i32 [ 109, %262 ], [ 22, %257 ], [ 22, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %255) #6, !dbg !7700
  br label %402

; <label>:400:                                    ; preds = %396, %393, %281
  %401 = phi i32 [ 125, %281 ], [ %397, %396 ], [ 125, %393 ], !dbg !7701
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %255) #6, !dbg !7700
  br label %402

; <label>:402:                                    ; preds = %47, %50, %51, %52, %58, %61, %72, %74, %77, %79, %84, %96, %98, %100, %105, %117, %121, %126, %127, %129, %134, %139, %141, %146, %151, %153, %159, %164, %167, %169, %174, %179, %183, %185, %190, %201, %203, %205, %207, %212, %217, %221, %228, %230, %232, %236, %237, %239, %250, %252, %398, %400
  %403 = phi i32 [ 109, %52 ], [ 22, %58 ], [ 22, %61 ], [ 22, %77 ], [ 22, %79 ], [ 109, %84 ], [ 22, %127 ], [ 22, %129 ], [ 22, %139 ], [ 22, %141 ], [ 22, %151 ], [ 22, %153 ], [ 109, %159 ], [ 22, %183 ], [ 22, %185 ], [ 109, %190 ], [ 22, %205 ], [ 22, %207 ], [ 109, %212 ], [ 22, %217 ], [ 22, %237 ], [ 22, %239 ], [ %399, %398 ], [ %401, %400 ], [ 0, %250 ], [ 0, %252 ], [ 0, %232 ], [ 0, %228 ], [ 0, %230 ], [ 0, %201 ], [ 0, %203 ], [ 0, %179 ], [ 0, %164 ], [ 0, %146 ], [ 0, %134 ], [ 0, %96 ], [ 0, %98 ], [ 0, %72 ], [ 0, %74 ], [ 109, %51 ], [ 109, %126 ], [ 109, %221 ], [ 109, %236 ], [ 109, %50 ], [ 0, %117 ], [ 0, %121 ], [ 19, %105 ], [ 22, %100 ], [ 109, %174 ], [ 22, %169 ], [ 22, %167 ], [ 9, %47 ], !dbg !7703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7706
  call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !7707
  %404 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7709, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7712
  %405 = icmp ult i64 %404, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7713
  br i1 %405, label %411, label %406, !dbg !7713

; <label>:406:                                    ; preds = %402
  %407 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7714, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7717
  %408 = icmp ugt i64 %407, ptrtoint ([0 x i8]* @_end to i64), !dbg !7713
  br i1 %408, label %411, label %409, !dbg !7718

; <label>:409:                                    ; preds = %406
  %410 = call i32* @__errno() #10, !dbg !7719
  store i32 %403, i32* %410, align 4, !dbg !7722, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7723
  br label %420, !dbg !7724

; <label>:411:                                    ; preds = %406, %402
  %412 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7725, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7729
  %413 = and i64 %412, -65536, !dbg !7731
  %414 = or i64 %413, 4097, !dbg !7731
  %415 = add nsw i64 %414, -1, !dbg !7731
  %416 = inttoptr i64 %415 to i32*, !dbg !7732
  %417 = load i32, i32* %416, align 4096, !dbg !7733, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7734
  %418 = sub nsw i32 0, %403, !dbg !7735
  %419 = sext i32 %418 to i64, !dbg !7735
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %419, i32 %417, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7735, !srcloc !7736
  br label %420

; <label>:420:                                    ; preds = %411, %409
  %421 = icmp ne i32 %403, 0, !dbg !7737
  %422 = sext i1 %421 to i32, !dbg !7737
  br label %423, !dbg !7738

; <label>:423:                                    ; preds = %29, %38, %40, %420
  %424 = phi i32 [ %422, %420 ], [ -1, %40 ], [ -1, %38 ], [ -1, %29 ], !dbg !7739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7742
  ret i32 %424, !dbg !7742

; <label>:425:                                    ; preds = %308
  %426 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %312, i32 0, !dbg !7586
  %427 = load %struct.lwip_sock*, %struct.lwip_sock** %426, align 16, !dbg !7586, !tbaa !1687
  %428 = icmp eq %struct.lwip_sock* %427, null, !dbg !7590
  %429 = or i64 %314, 3, !dbg !7591
  br i1 %428, label %320, label %430, !dbg !7592

; <label>:430:                                    ; preds = %425
  %431 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %429, i32 0, !dbg !7586
  %432 = load %struct.lwip_sock*, %struct.lwip_sock** %431, align 16, !dbg !7586, !tbaa !1687
  %433 = icmp eq %struct.lwip_sock* %432, null, !dbg !7590
  %434 = add nuw nsw i64 %314, 4, !dbg !7591
  br i1 %433, label %320, label %435, !dbg !7592

; <label>:435:                                    ; preds = %430
  %436 = icmp ult i64 %434, 64, !dbg !7743
  br i1 %436, label %313, label %319, !dbg !7584, !llvm.loop !7744
}

; Function Attrs: noredzone nounwind
define dso_local i32 @connect(i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !7747 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !7780
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !7780
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !7781, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7782, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7785
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7786
  br i1 %7, label %30, label %8, !dbg !7786

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7787, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7790
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !7786
  br i1 %10, label %30, label %11, !dbg !7791

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !7796
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !7798
  br i1 %13, label %26, label %14, !dbg !7799

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !7800
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !7800, !tbaa !2817
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !7801
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !7801, !tbaa !3077
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !7802
  %20 = load i32, i32* %19, align 4, !dbg !7802, !tbaa !2827
  %21 = icmp eq i32 %20, 6, !dbg !7803
  br i1 %21, label %22, label %26, !dbg !7804

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !7805
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !7805
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !7805, !tbaa !2813
  br label %26, !dbg !7806

; <label>:26:                                     ; preds = %11, %14, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !7807
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7808
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !7809, !tbaa !1426
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !7809
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !7810
  br label %42, !dbg !7809

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7811, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7815
  %32 = and i64 %31, -65536, !dbg !7817
  %33 = or i64 %32, 4097, !dbg !7817
  %34 = add nsw i64 %33, -1, !dbg !7817
  %35 = inttoptr i64 %34 to i32*, !dbg !7818
  %36 = load i32, i32* %35, align 4096, !dbg !7819, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7820
  %37 = sext i32 %0 to i64, !dbg !7821
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !7821, !srcloc !7822
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !7823, !srcloc !7827
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !7810, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !7810
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !7810
  %46 = add i64 %45, 512, !dbg !7810
  %47 = icmp ult i64 %46, 513, !dbg !7810
  br i1 %47, label %48, label %69, !dbg !7810

; <label>:48:                                     ; preds = %42
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7828, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7831
  %50 = icmp ult i64 %49, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7832
  br i1 %50, label %59, label %51, !dbg !7832

; <label>:51:                                     ; preds = %48
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7833, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7836
  %53 = icmp ugt i64 %52, ptrtoint ([0 x i8]* @_end to i64), !dbg !7832
  br i1 %53, label %59, label %54, !dbg !7837

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %43, align 8, !dbg !7838, !tbaa !1426
  %56 = trunc i64 %55 to i32, !dbg !7838
  %57 = sub nsw i32 0, %56, !dbg !7842
  %58 = call i32* @__errno() #10, !dbg !7843
  store i32 %57, i32* %58, align 4, !dbg !7844, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7845
  br label %92, !dbg !7838

; <label>:59:                                     ; preds = %51, %48
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7846, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7850
  %61 = and i64 %60, -65536, !dbg !7852
  %62 = or i64 %61, 4097, !dbg !7852
  %63 = add nsw i64 %62, -1, !dbg !7852
  %64 = inttoptr i64 %63 to i32*, !dbg !7853
  %65 = load i32, i32* %64, align 4096, !dbg !7854, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7855
  %66 = load i64, i64* %43, align 8, !dbg !7856, !tbaa !1426
  %67 = shl i64 %66, 32, !dbg !7856
  %68 = ashr exact i64 %67, 32, !dbg !7856
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %68, i32 %65, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7856, !srcloc !7857
  br label %92

; <label>:69:                                     ; preds = %42
  %70 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !7858
  %71 = load i32, i32* %70, align 8, !dbg !7858, !tbaa !1421
  %72 = call i32 @lwip_connect(i32 %71, %struct.sockaddr* %1, i32 %2) #8, !dbg !7859
  %73 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7860, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7863
  %74 = icmp ult i64 %73, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7864
  br i1 %74, label %82, label %75, !dbg !7864

; <label>:75:                                     ; preds = %69
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7865, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7868
  %77 = icmp ugt i64 %76, ptrtoint ([0 x i8]* @_end to i64), !dbg !7864
  br i1 %77, label %82, label %78, !dbg !7869

; <label>:78:                                     ; preds = %75
  %79 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !7870, !tbaa !1426
  %80 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %79, i64 0, i32 0, !dbg !7870
  %81 = load %struct.vfscore_file*, %struct.vfscore_file** %80, align 8, !dbg !7870, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %81) #10, !dbg !7870
  br label %92, !dbg !7870

; <label>:82:                                     ; preds = %75, %69
  %83 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7872, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7876
  %84 = and i64 %83, -65536, !dbg !7878
  %85 = or i64 %84, 4097, !dbg !7878
  %86 = add nsw i64 %85, -1, !dbg !7878
  %87 = inttoptr i64 %86 to i32*, !dbg !7879
  %88 = load i32, i32* %87, align 4096, !dbg !7880, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7881
  %89 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !7882
  %90 = load i64*, i64** %89, align 8, !dbg !7882, !tbaa !1426
  %91 = load i64, i64* %90, align 8, !dbg !7882, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %91, i32 %88, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !7882, !srcloc !7883
  br label %92

; <label>:92:                                     ; preds = %78, %82, %54, %59
  %93 = phi i32 [ -1, %54 ], [ -1, %59 ], [ %72, %78 ], [ %72, %82 ], !dbg !7884
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !7885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7886
  ret i32 %93, !dbg !7886
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_connect(i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !7887 {
  %4 = alloca %struct.ip_addr, align 16
  %5 = icmp ugt i32 %0, 63, !dbg !7949
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7950
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7951
  br i1 %5, label %11, label %6, !dbg !7952

; <label>:6:                                      ; preds = %3
  %7 = sext i32 %0 to i64, !dbg !7953
  %8 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %7, i32 0, !dbg !7954
  %9 = load %struct.netconn*, %struct.netconn** %8, align 8, !dbg !7954, !tbaa !1602
  %10 = icmp eq %struct.netconn* %9, null, !dbg !7955
  br i1 %10, label %11, label %27, !dbg !7956

; <label>:11:                                     ; preds = %6, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7957
  %12 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7958, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7961
  %13 = icmp ult i64 %12, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7962
  br i1 %13, label %19, label %14, !dbg !7962

; <label>:14:                                     ; preds = %11
  %15 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7963, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7966
  %16 = icmp ugt i64 %15, ptrtoint ([0 x i8]* @_end to i64), !dbg !7962
  br i1 %16, label %19, label %17, !dbg !7967

; <label>:17:                                     ; preds = %14
  %18 = tail call i32* @__errno() #10, !dbg !7970
  store i32 9, i32* %18, align 4, !dbg !7971, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7972
  br label %26, !dbg !7973

; <label>:19:                                     ; preds = %14, %11
  %20 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7974, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7978
  %21 = and i64 %20, -65536, !dbg !7980
  %22 = or i64 %21, 4097, !dbg !7980
  %23 = add nsw i64 %22, -1, !dbg !7980
  %24 = inttoptr i64 %23 to i32*, !dbg !7981
  %25 = load i32, i32* %24, align 4096, !dbg !7982, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7983
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %25, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7984, !srcloc !1640
  br label %26

; <label>:26:                                     ; preds = %19, %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7985
  br label %152, !dbg !7986

; <label>:27:                                     ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7985
  %28 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, !dbg !7987
  %29 = load i8, i8* %28, align 1, !dbg !7987, !tbaa !3929
  switch i8 %29, label %40 [
    i8 0, label %58
    i8 2, label %30
    i8 10, label %35
  ], !dbg !7987

; <label>:30:                                     ; preds = %27
  %31 = getelementptr inbounds %struct.netconn, %struct.netconn* %9, i64 0, i32 0, !dbg !7987
  %32 = load i32, i32* %31, align 8, !dbg !7987, !tbaa !1647
  %33 = and i32 %32, 8, !dbg !7987
  %34 = icmp eq i32 %33, 0, !dbg !7987
  br i1 %34, label %60, label %40, !dbg !7987

; <label>:35:                                     ; preds = %27
  %36 = getelementptr inbounds %struct.netconn, %struct.netconn* %9, i64 0, i32 0, !dbg !7987
  %37 = load i32, i32* %36, align 8, !dbg !7987, !tbaa !1647
  %38 = and i32 %37, 8, !dbg !7987
  %39 = icmp eq i32 %38, 0, !dbg !7987
  br i1 %39, label %40, label %60, !dbg !7988

; <label>:40:                                     ; preds = %27, %30, %35
  %41 = tail call i32 @err_to_errno(i8 signext -6) #10, !dbg !7989
  %42 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7990, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7993
  %43 = icmp ult i64 %42, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7994
  br i1 %43, label %49, label %44, !dbg !7994

; <label>:44:                                     ; preds = %40
  %45 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7995, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7998
  %46 = icmp ugt i64 %45, ptrtoint ([0 x i8]* @_end to i64), !dbg !7994
  br i1 %46, label %49, label %47, !dbg !7999

; <label>:47:                                     ; preds = %44
  %48 = tail call i32* @__errno() #10, !dbg !8000
  store i32 %41, i32* %48, align 4, !dbg !8003, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8004
  br label %152, !dbg !8005

; <label>:49:                                     ; preds = %44, %40
  %50 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8006, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8010
  %51 = and i64 %50, -65536, !dbg !8012
  %52 = or i64 %51, 4097, !dbg !8012
  %53 = add nsw i64 %52, -1, !dbg !8012
  %54 = inttoptr i64 %53 to i32*, !dbg !8013
  %55 = load i32, i32* %54, align 4096, !dbg !8014, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8015
  %56 = sub nsw i32 0, %41, !dbg !8016
  %57 = sext i32 %56 to i64, !dbg !8016
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %57, i32 %55, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8016, !srcloc !8017
  br label %152

; <label>:58:                                     ; preds = %27
  %59 = tail call signext i8 @netconn_disconnect(%struct.netconn* nonnull %9) #10, !dbg !8018
  br label %116, !dbg !8021

; <label>:60:                                     ; preds = %30, %35
  %61 = bitcast %struct.ip_addr* %4 to i8*, !dbg !8022
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #6, !dbg !8022
  switch i32 %2, label %67 [
    i32 16, label %62
    i32 28, label %62
  ], !dbg !8023

; <label>:62:                                     ; preds = %60, %60
  switch i8 %29, label %67 [
    i8 10, label %63
    i8 2, label %63
  ], !dbg !8023

; <label>:63:                                     ; preds = %62, %62
  %64 = ptrtoint %struct.sockaddr* %1 to i64, !dbg !8023
  %65 = and i64 %64, 3, !dbg !8023
  %66 = icmp eq i64 %65, 0, !dbg !8023
  br i1 %66, label %68, label %67, !dbg !8024

; <label>:67:                                     ; preds = %62, %60, %63
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0)) #8, !dbg !8025
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !8027
  tail call void @ukplat_terminate(i32 3) #9, !dbg !8027
  unreachable, !dbg !8027

; <label>:68:                                     ; preds = %63
  %69 = icmp eq i8 %29, 10, !dbg !8035
  br i1 %69, label %70, label %87, !dbg !8036

; <label>:70:                                     ; preds = %68
  %71 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, i64 6, !dbg !8037
  %72 = bitcast i8* %71 to <4 x i32>*, !dbg !8037
  %73 = load <4 x i32>, <4 x i32>* %72, align 4, !dbg !8037, !tbaa !1696
  %74 = bitcast %struct.ip_addr* %4 to <4 x i32>*, !dbg !8037
  store <4 x i32> %73, <4 x i32>* %74, align 16, !dbg !8037, !tbaa !1696
  %75 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 1, !dbg !8037
  store i8 0, i8* %75, align 16, !dbg !8037, !tbaa !1696
  %76 = extractelement <4 x i32> %73, i32 0, !dbg !8038
  %77 = and i32 %76, 49407, !dbg !8038
  %78 = icmp eq i32 %77, 33022, !dbg !8038
  br i1 %78, label %82, label %79, !dbg !8038

; <label>:79:                                     ; preds = %70
  %80 = trunc i32 %76 to i16, !dbg !8038
  %81 = and i16 %80, -28673, !dbg !8038
  switch i16 %81, label %97 [
    i16 511, label %82
    i16 767, label %82
  ], !dbg !8038

; <label>:82:                                     ; preds = %79, %79, %70
  %83 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 1, i32 2, i64 6, !dbg !8039
  %84 = bitcast i8* %83 to i32*, !dbg !8039
  %85 = load i32, i32* %84, align 4, !dbg !8039, !tbaa !3627
  %86 = trunc i32 %85 to i8, !dbg !8039
  store i8 %86, i8* %75, align 16, !dbg !8039, !tbaa !1696
  br label %97, !dbg !8039

; <label>:87:                                     ; preds = %68
  %88 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, i64 2, !dbg !8040
  %89 = bitcast i8* %88 to i32*, !dbg !8040
  %90 = load i32, i32* %89, align 4, !dbg !8040, !tbaa !3637
  %91 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !8040
  store i32 %90, i32* %91, align 16, !dbg !8040, !tbaa !1696
  %92 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, !dbg !8040
  %93 = bitcast [14 x i8]* %92 to i16*, !dbg !8040
  %94 = load i16, i16* %93, align 2, !dbg !8040, !tbaa !3636
  %95 = tail call zeroext i16 @lwip_htons(i16 zeroext %94) #10, !dbg !8040
  %96 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 1, !dbg !8041
  store i8 0, i8* %96, align 4, !dbg !8042, !tbaa !1700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8043
  br label %112, !dbg !8044

; <label>:97:                                     ; preds = %79, %82
  %98 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, !dbg !8046
  %99 = bitcast [14 x i8]* %98 to i16*, !dbg !8046
  %100 = load i16, i16* %99, align 2, !dbg !8046, !tbaa !3623
  %101 = tail call zeroext i16 @lwip_htons(i16 zeroext %100) #10, !dbg !8046
  %102 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 1, !dbg !8047
  store i8 6, i8* %102, align 4, !dbg !8048, !tbaa !1700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8043
  %103 = extractelement <4 x i32> %73, i32 1, !dbg !8049
  %104 = or i32 %76, %103, !dbg !8049
  %105 = icmp eq i32 %104, 0, !dbg !8049
  %106 = extractelement <4 x i32> %73, i32 2, !dbg !8049
  %107 = icmp eq i32 %106, -65536, !dbg !8049
  %108 = and i1 %105, %107, !dbg !8049
  br i1 %108, label %109, label %112, !dbg !8049

; <label>:109:                                    ; preds = %97
  %110 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !8049
  %111 = extractelement <4 x i32> %73, i32 3, !dbg !8050
  store i32 %111, i32* %110, align 16, !dbg !8050, !tbaa !1696
  store i8 0, i8* %102, align 4, !dbg !8052, !tbaa !1700
  br label %112, !dbg !8054

; <label>:112:                                    ; preds = %87, %109, %97
  %113 = phi i16 [ %101, %109 ], [ %101, %97 ], [ %95, %87 ]
  %114 = load %struct.netconn*, %struct.netconn** %8, align 8, !dbg !8055, !tbaa !1602
  %115 = call signext i8 @netconn_connect(%struct.netconn* %114, %struct.ip_addr* nonnull %4, i16 zeroext %113) #10, !dbg !8057
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #6, !dbg !8058
  br label %116

; <label>:116:                                    ; preds = %112, %58
  %117 = phi i8 [ %59, %58 ], [ %115, %112 ], !dbg !8059
  %118 = icmp eq i8 %117, 0, !dbg !8060
  br i1 %118, label %137, label %119, !dbg !8061

; <label>:119:                                    ; preds = %116
  %120 = call i32 @err_to_errno(i8 signext %117) #10, !dbg !8062
  %121 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8063, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8066
  %122 = icmp ult i64 %121, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8067
  br i1 %122, label %128, label %123, !dbg !8067

; <label>:123:                                    ; preds = %119
  %124 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8068, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8071
  %125 = icmp ugt i64 %124, ptrtoint ([0 x i8]* @_end to i64), !dbg !8067
  br i1 %125, label %128, label %126, !dbg !8072

; <label>:126:                                    ; preds = %123
  %127 = call i32* @__errno() #10, !dbg !8073
  store i32 %120, i32* %127, align 4, !dbg !8076, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8077
  br label %152, !dbg !8078

; <label>:128:                                    ; preds = %123, %119
  %129 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8079, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8083
  %130 = and i64 %129, -65536, !dbg !8085
  %131 = or i64 %130, 4097, !dbg !8085
  %132 = add nsw i64 %131, -1, !dbg !8085
  %133 = inttoptr i64 %132 to i32*, !dbg !8086
  %134 = load i32, i32* %133, align 4096, !dbg !8087, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8088
  %135 = sub nsw i32 0, %120, !dbg !8089
  %136 = sext i32 %135 to i64, !dbg !8089
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %136, i32 %134, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8089, !srcloc !8090
  br label %152

; <label>:137:                                    ; preds = %116
  %138 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8092, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8095
  %139 = icmp ult i64 %138, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8096
  br i1 %139, label %145, label %140, !dbg !8096

; <label>:140:                                    ; preds = %137
  %141 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8097, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8100
  %142 = icmp ugt i64 %141, ptrtoint ([0 x i8]* @_end to i64), !dbg !8096
  br i1 %142, label %145, label %143, !dbg !8101

; <label>:143:                                    ; preds = %140
  %144 = call i32* @__errno() #10, !dbg !8105
  store i32 0, i32* %144, align 4, !dbg !8106, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8107
  br label %152, !dbg !8108

; <label>:145:                                    ; preds = %140, %137
  %146 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8109, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8113
  %147 = and i64 %146, -65536, !dbg !8115
  %148 = or i64 %147, 4097, !dbg !8115
  %149 = add nsw i64 %148, -1, !dbg !8115
  %150 = inttoptr i64 %149 to i32*, !dbg !8116
  %151 = load i32, i32* %150, align 4096, !dbg !8117, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8118
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %151, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8119, !srcloc !8120
  br label %152

; <label>:152:                                    ; preds = %26, %143, %145, %126, %128, %47, %49
  %153 = phi i32 [ -1, %49 ], [ -1, %47 ], [ -1, %128 ], [ -1, %126 ], [ 0, %145 ], [ 0, %143 ], [ -1, %26 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8121
  ret i32 %153, !dbg !8121
}

; Function Attrs: noredzone nounwind
define dso_local i32 @listen(i32, i32) local_unnamed_addr #0 !dbg !8122 {
  %3 = alloca %struct.sock_net_file*, align 8
  %4 = bitcast %struct.sock_net_file** %3 to i8*, !dbg !8153
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !8153
  store %struct.sock_net_file* null, %struct.sock_net_file** %3, align 8, !dbg !8154, !tbaa !1426
  %5 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8155, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8158
  %6 = icmp ult i64 %5, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8159
  br i1 %6, label %29, label %7, !dbg !8159

; <label>:7:                                      ; preds = %2
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8160, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8163
  %9 = icmp ugt i64 %8, ptrtoint ([0 x i8]* @_end to i64), !dbg !8159
  br i1 %9, label %29, label %10, !dbg !8164

; <label>:10:                                     ; preds = %7
  %11 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !8169
  %12 = icmp eq %struct.vfscore_file* %11, null, !dbg !8171
  br i1 %12, label %25, label %13, !dbg !8172

; <label>:13:                                     ; preds = %10
  %14 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %11, i64 0, i32 6, !dbg !8173
  %15 = load %struct.dentry*, %struct.dentry** %14, align 8, !dbg !8173, !tbaa !2817
  %16 = getelementptr inbounds %struct.dentry, %struct.dentry* %15, i64 0, i32 3, !dbg !8174
  %17 = load %struct.vnode*, %struct.vnode** %16, align 8, !dbg !8174, !tbaa !3077
  %18 = getelementptr inbounds %struct.vnode, %struct.vnode* %17, i64 0, i32 5, !dbg !8175
  %19 = load i32, i32* %18, align 4, !dbg !8175, !tbaa !2827
  %20 = icmp eq i32 %19, 6, !dbg !8176
  br i1 %20, label %21, label %25, !dbg !8177

; <label>:21:                                     ; preds = %13
  %22 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %11, i64 0, i32 4, !dbg !8178
  %23 = bitcast i8** %22 to %struct.sock_net_file**, !dbg !8178
  %24 = load %struct.sock_net_file*, %struct.sock_net_file** %23, align 8, !dbg !8178, !tbaa !2813
  br label %25, !dbg !8179

; <label>:25:                                     ; preds = %10, %13, %21
  %26 = phi %struct.sock_net_file* [ %24, %21 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %10 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %13 ], !dbg !8180
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8181
  store %struct.sock_net_file* %26, %struct.sock_net_file** %3, align 8, !dbg !8182, !tbaa !1426
  %27 = ptrtoint %struct.sock_net_file* %26 to i64, !dbg !8182
  %28 = bitcast %struct.sock_net_file** %3 to i64*, !dbg !8183
  br label %41, !dbg !8182

; <label>:29:                                     ; preds = %7, %2
  %30 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8184, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8188
  %31 = and i64 %30, -65536, !dbg !8190
  %32 = or i64 %31, 4097, !dbg !8190
  %33 = add nsw i64 %32, -1, !dbg !8190
  %34 = inttoptr i64 %33 to i32*, !dbg !8191
  %35 = load i32, i32* %34, align 4096, !dbg !8192, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8193
  %36 = sext i32 %0 to i64, !dbg !8194
  %37 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %36, i32 %35, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !8194, !srcloc !8195
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %3, i64 %37) #6, !dbg !8196, !srcloc !8200
  %38 = bitcast %struct.sock_net_file** %3 to i64*
  %39 = load i64, i64* %38, align 8, !dbg !8183, !tbaa !1426
  %40 = inttoptr i64 %39 to %struct.sock_net_file*
  br label %41

; <label>:41:                                     ; preds = %29, %25
  %42 = phi i64* [ %38, %29 ], [ %28, %25 ], !dbg !8183
  %43 = phi %struct.sock_net_file* [ %40, %29 ], [ %26, %25 ]
  %44 = phi i64 [ %39, %29 ], [ %27, %25 ], !dbg !8183
  %45 = add i64 %44, 512, !dbg !8183
  %46 = icmp ult i64 %45, 513, !dbg !8183
  br i1 %46, label %47, label %68, !dbg !8183

; <label>:47:                                     ; preds = %41
  %48 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8201, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8204
  %49 = icmp ult i64 %48, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8205
  br i1 %49, label %58, label %50, !dbg !8205

; <label>:50:                                     ; preds = %47
  %51 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8206, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8209
  %52 = icmp ugt i64 %51, ptrtoint ([0 x i8]* @_end to i64), !dbg !8205
  br i1 %52, label %58, label %53, !dbg !8210

; <label>:53:                                     ; preds = %50
  %54 = load i64, i64* %42, align 8, !dbg !8211, !tbaa !1426
  %55 = trunc i64 %54 to i32, !dbg !8211
  %56 = sub nsw i32 0, %55, !dbg !8215
  %57 = call i32* @__errno() #10, !dbg !8216
  store i32 %56, i32* %57, align 4, !dbg !8217, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8218
  br label %91, !dbg !8211

; <label>:58:                                     ; preds = %50, %47
  %59 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8219, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8223
  %60 = and i64 %59, -65536, !dbg !8225
  %61 = or i64 %60, 4097, !dbg !8225
  %62 = add nsw i64 %61, -1, !dbg !8225
  %63 = inttoptr i64 %62 to i32*, !dbg !8226
  %64 = load i32, i32* %63, align 4096, !dbg !8227, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8228
  %65 = load i64, i64* %42, align 8, !dbg !8229, !tbaa !1426
  %66 = shl i64 %65, 32, !dbg !8229
  %67 = ashr exact i64 %66, 32, !dbg !8229
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %67, i32 %64, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8229, !srcloc !8230
  br label %91

; <label>:68:                                     ; preds = %41
  %69 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %43, i64 0, i32 1, !dbg !8231
  %70 = load i32, i32* %69, align 8, !dbg !8231, !tbaa !1421
  %71 = call i32 @lwip_listen(i32 %70, i32 %1) #8, !dbg !8232
  %72 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8233, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8236
  %73 = icmp ult i64 %72, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8237
  br i1 %73, label %81, label %74, !dbg !8237

; <label>:74:                                     ; preds = %68
  %75 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8238, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8241
  %76 = icmp ugt i64 %75, ptrtoint ([0 x i8]* @_end to i64), !dbg !8237
  br i1 %76, label %81, label %77, !dbg !8242

; <label>:77:                                     ; preds = %74
  %78 = load %struct.sock_net_file*, %struct.sock_net_file** %3, align 8, !dbg !8243, !tbaa !1426
  %79 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %78, i64 0, i32 0, !dbg !8243
  %80 = load %struct.vfscore_file*, %struct.vfscore_file** %79, align 8, !dbg !8243, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %80) #10, !dbg !8243
  br label %91, !dbg !8243

; <label>:81:                                     ; preds = %74, %68
  %82 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8245, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8249
  %83 = and i64 %82, -65536, !dbg !8251
  %84 = or i64 %83, 4097, !dbg !8251
  %85 = add nsw i64 %84, -1, !dbg !8251
  %86 = inttoptr i64 %85 to i32*, !dbg !8252
  %87 = load i32, i32* %86, align 4096, !dbg !8253, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8254
  %88 = bitcast %struct.sock_net_file** %3 to i64**, !dbg !8255
  %89 = load i64*, i64** %88, align 8, !dbg !8255, !tbaa !1426
  %90 = load i64, i64* %89, align 8, !dbg !8255, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %90, i32 %87, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !8255, !srcloc !8256
  br label %91

; <label>:91:                                     ; preds = %77, %81, %53, %58
  %92 = phi i32 [ -1, %53 ], [ -1, %58 ], [ %71, %77 ], [ %71, %81 ], !dbg !8257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !8258
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8259
  ret i32 %92, !dbg !8259
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_listen(i32, i32) local_unnamed_addr #0 !dbg !8260 {
  %3 = icmp ugt i32 %0, 63, !dbg !8306
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8307
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8308
  br i1 %3, label %9, label %4, !dbg !8309

; <label>:4:                                      ; preds = %2
  %5 = sext i32 %0 to i64, !dbg !8310
  %6 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %5, i32 0, !dbg !8311
  %7 = load %struct.netconn*, %struct.netconn** %6, align 8, !dbg !8311, !tbaa !1602
  %8 = icmp eq %struct.netconn* %7, null, !dbg !8312
  br i1 %8, label %9, label %25, !dbg !8313

; <label>:9:                                      ; preds = %4, %2
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8314
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8315, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8318
  %11 = icmp ult i64 %10, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8319
  br i1 %11, label %17, label %12, !dbg !8319

; <label>:12:                                     ; preds = %9
  %13 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8320, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8323
  %14 = icmp ugt i64 %13, ptrtoint ([0 x i8]* @_end to i64), !dbg !8319
  br i1 %14, label %17, label %15, !dbg !8324

; <label>:15:                                     ; preds = %12
  %16 = tail call i32* @__errno() #10, !dbg !8327
  store i32 9, i32* %16, align 4, !dbg !8328, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8329
  br label %24, !dbg !8330

; <label>:17:                                     ; preds = %12, %9
  %18 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8331, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8335
  %19 = and i64 %18, -65536, !dbg !8337
  %20 = or i64 %19, 4097, !dbg !8337
  %21 = add nsw i64 %20, -1, !dbg !8337
  %22 = inttoptr i64 %21 to i32*, !dbg !8338
  %23 = load i32, i32* %22, align 4096, !dbg !8339, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8340
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %23, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8341, !srcloc !1640
  br label %24

; <label>:24:                                     ; preds = %17, %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8342
  br label %87, !dbg !8343

; <label>:25:                                     ; preds = %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8314
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8342
  %26 = icmp sgt i32 %1, 0, !dbg !8344
  %27 = select i1 %26, i32 %1, i32 0, !dbg !8344
  %28 = icmp slt i32 %27, 255, !dbg !8344
  %29 = select i1 %28, i32 %27, i32 255, !dbg !8344
  %30 = trunc i32 %29 to i8, !dbg !8344
  %31 = tail call signext i8 @netconn_listen_with_backlog(%struct.netconn* nonnull %7, i8 zeroext %30) #10, !dbg !8345
  %32 = icmp eq i8 %31, 0, !dbg !8347
  br i1 %32, label %72, label %33, !dbg !8348

; <label>:33:                                     ; preds = %25
  %34 = load %struct.netconn*, %struct.netconn** %6, align 8, !dbg !8349, !tbaa !1602
  %35 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 0, !dbg !8349
  %36 = load i32, i32* %35, align 8, !dbg !8349, !tbaa !1647
  %37 = and i32 %36, 240, !dbg !8349
  %38 = icmp eq i32 %37, 16, !dbg !8350
  br i1 %38, label %54, label %39, !dbg !8351

; <label>:39:                                     ; preds = %33
  %40 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8353, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8356
  %41 = icmp ult i64 %40, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8357
  br i1 %41, label %47, label %42, !dbg !8357

; <label>:42:                                     ; preds = %39
  %43 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8358, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8361
  %44 = icmp ugt i64 %43, ptrtoint ([0 x i8]* @_end to i64), !dbg !8357
  br i1 %44, label %47, label %45, !dbg !8362

; <label>:45:                                     ; preds = %42
  %46 = tail call i32* @__errno() #10, !dbg !8366
  store i32 95, i32* %46, align 4, !dbg !8367, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8368
  br label %87, !dbg !8369

; <label>:47:                                     ; preds = %42, %39
  %48 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8370, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8374
  %49 = and i64 %48, -65536, !dbg !8376
  %50 = or i64 %49, 4097, !dbg !8376
  %51 = add nsw i64 %50, -1, !dbg !8376
  %52 = inttoptr i64 %51 to i32*, !dbg !8377
  %53 = load i32, i32* %52, align 4096, !dbg !8378, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8379
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -95, i32 %53, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8380, !srcloc !8381
  br label %87

; <label>:54:                                     ; preds = %33
  %55 = tail call i32 @err_to_errno(i8 signext %31) #10, !dbg !8382
  %56 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8383, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8386
  %57 = icmp ult i64 %56, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8387
  br i1 %57, label %63, label %58, !dbg !8387

; <label>:58:                                     ; preds = %54
  %59 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8388, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8391
  %60 = icmp ugt i64 %59, ptrtoint ([0 x i8]* @_end to i64), !dbg !8387
  br i1 %60, label %63, label %61, !dbg !8392

; <label>:61:                                     ; preds = %58
  %62 = tail call i32* @__errno() #10, !dbg !8393
  store i32 %55, i32* %62, align 4, !dbg !8396, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8397
  br label %87, !dbg !8398

; <label>:63:                                     ; preds = %58, %54
  %64 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8399, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8403
  %65 = and i64 %64, -65536, !dbg !8405
  %66 = or i64 %65, 4097, !dbg !8405
  %67 = add nsw i64 %66, -1, !dbg !8405
  %68 = inttoptr i64 %67 to i32*, !dbg !8406
  %69 = load i32, i32* %68, align 4096, !dbg !8407, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8408
  %70 = sub nsw i32 0, %55, !dbg !8409
  %71 = sext i32 %70 to i64, !dbg !8409
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %71, i32 %69, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8409, !srcloc !8410
  br label %87

; <label>:72:                                     ; preds = %25
  %73 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8412, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8415
  %74 = icmp ult i64 %73, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8416
  br i1 %74, label %80, label %75, !dbg !8416

; <label>:75:                                     ; preds = %72
  %76 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8417, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8420
  %77 = icmp ugt i64 %76, ptrtoint ([0 x i8]* @_end to i64), !dbg !8416
  br i1 %77, label %80, label %78, !dbg !8421

; <label>:78:                                     ; preds = %75
  %79 = tail call i32* @__errno() #10, !dbg !8425
  store i32 0, i32* %79, align 4, !dbg !8426, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8427
  br label %87, !dbg !8428

; <label>:80:                                     ; preds = %75, %72
  %81 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8429, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8433
  %82 = and i64 %81, -65536, !dbg !8435
  %83 = or i64 %82, 4097, !dbg !8435
  %84 = add nsw i64 %83, -1, !dbg !8435
  %85 = inttoptr i64 %84 to i32*, !dbg !8436
  %86 = load i32, i32* %85, align 4096, !dbg !8437, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8438
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %86, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8439, !srcloc !8440
  br label %87

; <label>:87:                                     ; preds = %24, %78, %80, %47, %45, %63, %61
  %88 = phi i32 [ -1, %61 ], [ -1, %63 ], [ -1, %45 ], [ -1, %47 ], [ 0, %80 ], [ 0, %78 ], [ -1, %24 ], !dbg !8441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8444
  ret i32 %88, !dbg !8444
}

; Function Attrs: noredzone nounwind
define dso_local i32 @recv(i32, i8*, i64, i32) local_unnamed_addr #0 !dbg !8445 {
  %5 = alloca %struct.sock_net_file*, align 8
  %6 = bitcast %struct.sock_net_file** %5 to i8*, !dbg !8482
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !8482
  store %struct.sock_net_file* null, %struct.sock_net_file** %5, align 8, !dbg !8483, !tbaa !1426
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8484, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8487
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8488
  br i1 %8, label %31, label %9, !dbg !8488

; <label>:9:                                      ; preds = %4
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8489, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8492
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !8488
  br i1 %11, label %31, label %12, !dbg !8493

; <label>:12:                                     ; preds = %9
  %13 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !8498
  %14 = icmp eq %struct.vfscore_file* %13, null, !dbg !8500
  br i1 %14, label %27, label %15, !dbg !8501

; <label>:15:                                     ; preds = %12
  %16 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %13, i64 0, i32 6, !dbg !8502
  %17 = load %struct.dentry*, %struct.dentry** %16, align 8, !dbg !8502, !tbaa !2817
  %18 = getelementptr inbounds %struct.dentry, %struct.dentry* %17, i64 0, i32 3, !dbg !8503
  %19 = load %struct.vnode*, %struct.vnode** %18, align 8, !dbg !8503, !tbaa !3077
  %20 = getelementptr inbounds %struct.vnode, %struct.vnode* %19, i64 0, i32 5, !dbg !8504
  %21 = load i32, i32* %20, align 4, !dbg !8504, !tbaa !2827
  %22 = icmp eq i32 %21, 6, !dbg !8505
  br i1 %22, label %23, label %27, !dbg !8506

; <label>:23:                                     ; preds = %15
  %24 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %13, i64 0, i32 4, !dbg !8507
  %25 = bitcast i8** %24 to %struct.sock_net_file**, !dbg !8507
  %26 = load %struct.sock_net_file*, %struct.sock_net_file** %25, align 8, !dbg !8507, !tbaa !2813
  br label %27, !dbg !8508

; <label>:27:                                     ; preds = %12, %15, %23
  %28 = phi %struct.sock_net_file* [ %26, %23 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %12 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %15 ], !dbg !8509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8510
  store %struct.sock_net_file* %28, %struct.sock_net_file** %5, align 8, !dbg !8511, !tbaa !1426
  %29 = ptrtoint %struct.sock_net_file* %28 to i64, !dbg !8511
  %30 = bitcast %struct.sock_net_file** %5 to i64*, !dbg !8512
  br label %43, !dbg !8511

; <label>:31:                                     ; preds = %9, %4
  %32 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8513, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8517
  %33 = and i64 %32, -65536, !dbg !8519
  %34 = or i64 %33, 4097, !dbg !8519
  %35 = add nsw i64 %34, -1, !dbg !8519
  %36 = inttoptr i64 %35 to i32*, !dbg !8520
  %37 = load i32, i32* %36, align 4096, !dbg !8521, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8522
  %38 = sext i32 %0 to i64, !dbg !8523
  %39 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %38, i32 %37, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !8523, !srcloc !8524
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %5, i64 %39) #6, !dbg !8525, !srcloc !8529
  %40 = bitcast %struct.sock_net_file** %5 to i64*
  %41 = load i64, i64* %40, align 8, !dbg !8512, !tbaa !1426
  %42 = inttoptr i64 %41 to %struct.sock_net_file*
  br label %43

; <label>:43:                                     ; preds = %31, %27
  %44 = phi i64* [ %40, %31 ], [ %30, %27 ], !dbg !8512
  %45 = phi %struct.sock_net_file* [ %42, %31 ], [ %28, %27 ]
  %46 = phi i64 [ %41, %31 ], [ %29, %27 ], !dbg !8512
  %47 = add i64 %46, 512, !dbg !8512
  %48 = icmp ult i64 %47, 513, !dbg !8512
  br i1 %48, label %49, label %70, !dbg !8512

; <label>:49:                                     ; preds = %43
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8530, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8533
  %51 = icmp ult i64 %50, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8534
  br i1 %51, label %60, label %52, !dbg !8534

; <label>:52:                                     ; preds = %49
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8535, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8538
  %54 = icmp ugt i64 %53, ptrtoint ([0 x i8]* @_end to i64), !dbg !8534
  br i1 %54, label %60, label %55, !dbg !8539

; <label>:55:                                     ; preds = %52
  %56 = load i64, i64* %44, align 8, !dbg !8540, !tbaa !1426
  %57 = trunc i64 %56 to i32, !dbg !8540
  %58 = sub nsw i32 0, %57, !dbg !8544
  %59 = call i32* @__errno() #10, !dbg !8545
  store i32 %58, i32* %59, align 4, !dbg !8546, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8547
  br label %94, !dbg !8540

; <label>:60:                                     ; preds = %52, %49
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8548, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8552
  %62 = and i64 %61, -65536, !dbg !8554
  %63 = or i64 %62, 4097, !dbg !8554
  %64 = add nsw i64 %63, -1, !dbg !8554
  %65 = inttoptr i64 %64 to i32*, !dbg !8555
  %66 = load i32, i32* %65, align 4096, !dbg !8556, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8557
  %67 = load i64, i64* %44, align 8, !dbg !8558, !tbaa !1426
  %68 = shl i64 %67, 32, !dbg !8558
  %69 = ashr exact i64 %68, 32, !dbg !8558
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %69, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8558, !srcloc !8559
  br label %94

; <label>:70:                                     ; preds = %43
  %71 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %45, i64 0, i32 1, !dbg !8560
  %72 = load i32, i32* %71, align 8, !dbg !8560, !tbaa !1421
  %73 = call i64 @lwip_recvfrom(i32 %72, i8* %1, i64 %2, i32 %3, %struct.sockaddr* null, i32* null) #10, !dbg !8574
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8575
  %74 = trunc i64 %73 to i32, !dbg !8576
  %75 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8577, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8580
  %76 = icmp ult i64 %75, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8581
  br i1 %76, label %84, label %77, !dbg !8581

; <label>:77:                                     ; preds = %70
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8582, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8585
  %79 = icmp ugt i64 %78, ptrtoint ([0 x i8]* @_end to i64), !dbg !8581
  br i1 %79, label %84, label %80, !dbg !8586

; <label>:80:                                     ; preds = %77
  %81 = load %struct.sock_net_file*, %struct.sock_net_file** %5, align 8, !dbg !8587, !tbaa !1426
  %82 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %81, i64 0, i32 0, !dbg !8587
  %83 = load %struct.vfscore_file*, %struct.vfscore_file** %82, align 8, !dbg !8587, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %83) #10, !dbg !8587
  br label %94, !dbg !8587

; <label>:84:                                     ; preds = %77, %70
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8589, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8593
  %86 = and i64 %85, -65536, !dbg !8595
  %87 = or i64 %86, 4097, !dbg !8595
  %88 = add nsw i64 %87, -1, !dbg !8595
  %89 = inttoptr i64 %88 to i32*, !dbg !8596
  %90 = load i32, i32* %89, align 4096, !dbg !8597, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8598
  %91 = bitcast %struct.sock_net_file** %5 to i64**, !dbg !8599
  %92 = load i64*, i64** %91, align 8, !dbg !8599, !tbaa !1426
  %93 = load i64, i64* %92, align 8, !dbg !8599, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %93, i32 %90, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !8599, !srcloc !8600
  br label %94

; <label>:94:                                     ; preds = %80, %84, %55, %60
  %95 = phi i32 [ -1, %55 ], [ -1, %60 ], [ %74, %80 ], [ %74, %84 ], !dbg !8601
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !8602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8603
  ret i32 %95, !dbg !8603
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_recv(i32, i8*, i64, i32) local_unnamed_addr #0 !dbg !8562 {
  %5 = tail call i64 @lwip_recvfrom(i32 %0, i8* %1, i64 %2, i32 %3, %struct.sockaddr* null, i32* null) #8, !dbg !8608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8609
  ret i64 %5, !dbg !8609
}

; Function Attrs: noredzone nounwind
define dso_local i32 @recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) local_unnamed_addr #0 !dbg !8610 {
  %7 = alloca %struct.sock_net_file*, align 8
  %8 = bitcast %struct.sock_net_file** %7 to i8*, !dbg !8651
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !8651
  store %struct.sock_net_file* null, %struct.sock_net_file** %7, align 8, !dbg !8652, !tbaa !1426
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8653, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8656
  %10 = icmp ult i64 %9, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8657
  br i1 %10, label %33, label %11, !dbg !8657

; <label>:11:                                     ; preds = %6
  %12 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8658, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8661
  %13 = icmp ugt i64 %12, ptrtoint ([0 x i8]* @_end to i64), !dbg !8657
  br i1 %13, label %33, label %14, !dbg !8662

; <label>:14:                                     ; preds = %11
  %15 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !8667
  %16 = icmp eq %struct.vfscore_file* %15, null, !dbg !8669
  br i1 %16, label %29, label %17, !dbg !8670

; <label>:17:                                     ; preds = %14
  %18 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %15, i64 0, i32 6, !dbg !8671
  %19 = load %struct.dentry*, %struct.dentry** %18, align 8, !dbg !8671, !tbaa !2817
  %20 = getelementptr inbounds %struct.dentry, %struct.dentry* %19, i64 0, i32 3, !dbg !8672
  %21 = load %struct.vnode*, %struct.vnode** %20, align 8, !dbg !8672, !tbaa !3077
  %22 = getelementptr inbounds %struct.vnode, %struct.vnode* %21, i64 0, i32 5, !dbg !8673
  %23 = load i32, i32* %22, align 4, !dbg !8673, !tbaa !2827
  %24 = icmp eq i32 %23, 6, !dbg !8674
  br i1 %24, label %25, label %29, !dbg !8675

; <label>:25:                                     ; preds = %17
  %26 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %15, i64 0, i32 4, !dbg !8676
  %27 = bitcast i8** %26 to %struct.sock_net_file**, !dbg !8676
  %28 = load %struct.sock_net_file*, %struct.sock_net_file** %27, align 8, !dbg !8676, !tbaa !2813
  br label %29, !dbg !8677

; <label>:29:                                     ; preds = %14, %17, %25
  %30 = phi %struct.sock_net_file* [ %28, %25 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %14 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %17 ], !dbg !8678
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8679
  store %struct.sock_net_file* %30, %struct.sock_net_file** %7, align 8, !dbg !8680, !tbaa !1426
  %31 = ptrtoint %struct.sock_net_file* %30 to i64, !dbg !8680
  %32 = bitcast %struct.sock_net_file** %7 to i64*, !dbg !8681
  br label %45, !dbg !8680

; <label>:33:                                     ; preds = %11, %6
  %34 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8682, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8686
  %35 = and i64 %34, -65536, !dbg !8688
  %36 = or i64 %35, 4097, !dbg !8688
  %37 = add nsw i64 %36, -1, !dbg !8688
  %38 = inttoptr i64 %37 to i32*, !dbg !8689
  %39 = load i32, i32* %38, align 4096, !dbg !8690, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8691
  %40 = sext i32 %0 to i64, !dbg !8692
  %41 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %40, i32 %39, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !8692, !srcloc !8693
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %7, i64 %41) #6, !dbg !8694, !srcloc !8698
  %42 = bitcast %struct.sock_net_file** %7 to i64*
  %43 = load i64, i64* %42, align 8, !dbg !8681, !tbaa !1426
  %44 = inttoptr i64 %43 to %struct.sock_net_file*
  br label %45

; <label>:45:                                     ; preds = %33, %29
  %46 = phi i64* [ %42, %33 ], [ %32, %29 ], !dbg !8681
  %47 = phi %struct.sock_net_file* [ %44, %33 ], [ %30, %29 ]
  %48 = phi i64 [ %43, %33 ], [ %31, %29 ], !dbg !8681
  %49 = add i64 %48, 512, !dbg !8681
  %50 = icmp ult i64 %49, 513, !dbg !8681
  br i1 %50, label %51, label %72, !dbg !8681

; <label>:51:                                     ; preds = %45
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8699, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8702
  %53 = icmp ult i64 %52, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8703
  br i1 %53, label %62, label %54, !dbg !8703

; <label>:54:                                     ; preds = %51
  %55 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8704, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8707
  %56 = icmp ugt i64 %55, ptrtoint ([0 x i8]* @_end to i64), !dbg !8703
  br i1 %56, label %62, label %57, !dbg !8708

; <label>:57:                                     ; preds = %54
  %58 = load i64, i64* %46, align 8, !dbg !8709, !tbaa !1426
  %59 = trunc i64 %58 to i32, !dbg !8709
  %60 = sub nsw i32 0, %59, !dbg !8713
  %61 = call i32* @__errno() #10, !dbg !8714
  store i32 %60, i32* %61, align 4, !dbg !8715, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8716
  br label %96, !dbg !8709

; <label>:62:                                     ; preds = %54, %51
  %63 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8717, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8721
  %64 = and i64 %63, -65536, !dbg !8723
  %65 = or i64 %64, 4097, !dbg !8723
  %66 = add nsw i64 %65, -1, !dbg !8723
  %67 = inttoptr i64 %66 to i32*, !dbg !8724
  %68 = load i32, i32* %67, align 4096, !dbg !8725, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8726
  %69 = load i64, i64* %46, align 8, !dbg !8727, !tbaa !1426
  %70 = shl i64 %69, 32, !dbg !8727
  %71 = ashr exact i64 %70, 32, !dbg !8727
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %71, i32 %68, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8727, !srcloc !8728
  br label %96

; <label>:72:                                     ; preds = %45
  %73 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %47, i64 0, i32 1, !dbg !8729
  %74 = load i32, i32* %73, align 8, !dbg !8729, !tbaa !1421
  %75 = call i64 @lwip_recvfrom(i32 %74, i8* %1, i64 %2, i32 %3, %struct.sockaddr* %4, i32* %5) #8, !dbg !8730
  %76 = trunc i64 %75 to i32, !dbg !8730
  %77 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8731, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8734
  %78 = icmp ult i64 %77, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8735
  br i1 %78, label %86, label %79, !dbg !8735

; <label>:79:                                     ; preds = %72
  %80 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8736, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8739
  %81 = icmp ugt i64 %80, ptrtoint ([0 x i8]* @_end to i64), !dbg !8735
  br i1 %81, label %86, label %82, !dbg !8740

; <label>:82:                                     ; preds = %79
  %83 = load %struct.sock_net_file*, %struct.sock_net_file** %7, align 8, !dbg !8741, !tbaa !1426
  %84 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %83, i64 0, i32 0, !dbg !8741
  %85 = load %struct.vfscore_file*, %struct.vfscore_file** %84, align 8, !dbg !8741, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %85) #10, !dbg !8741
  br label %96, !dbg !8741

; <label>:86:                                     ; preds = %79, %72
  %87 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8743, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8747
  %88 = and i64 %87, -65536, !dbg !8749
  %89 = or i64 %88, 4097, !dbg !8749
  %90 = add nsw i64 %89, -1, !dbg !8749
  %91 = inttoptr i64 %90 to i32*, !dbg !8750
  %92 = load i32, i32* %91, align 4096, !dbg !8751, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8752
  %93 = bitcast %struct.sock_net_file** %7 to i64**, !dbg !8753
  %94 = load i64*, i64** %93, align 8, !dbg !8753, !tbaa !1426
  %95 = load i64, i64* %94, align 8, !dbg !8753, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %95, i32 %92, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !8753, !srcloc !8754
  br label %96

; <label>:96:                                     ; preds = %82, %86, %57, %62
  %97 = phi i32 [ -1, %57 ], [ -1, %62 ], [ %76, %82 ], [ %76, %86 ], !dbg !8755
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !8756
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8757
  ret i32 %97, !dbg !8757
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) local_unnamed_addr #0 !dbg !8758 {
  %7 = alloca i16, align 2
  %8 = alloca %struct.ip_addr, align 4
  %9 = alloca i16, align 2
  %10 = alloca %struct.iovec, align 8
  %11 = alloca %struct.msghdr, align 8
  %12 = icmp ugt i32 %0, 63, !dbg !8809
  %13 = sext i32 %0 to i64, !dbg !8810
  %14 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %13, !dbg !8810
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8812
  br i1 %12, label %19, label %15, !dbg !8813

; <label>:15:                                     ; preds = %6
  %16 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %14, i64 0, i32 0, !dbg !8816
  %17 = load %struct.netconn*, %struct.netconn** %16, align 8, !dbg !8816, !tbaa !1602
  %18 = icmp eq %struct.netconn* %17, null, !dbg !8817
  br i1 %18, label %19, label %35, !dbg !8818

; <label>:19:                                     ; preds = %15, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8819
  %20 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8821, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8824
  %21 = icmp ult i64 %20, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8825
  br i1 %21, label %27, label %22, !dbg !8825

; <label>:22:                                     ; preds = %19
  %23 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8826, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8829
  %24 = icmp ugt i64 %23, ptrtoint ([0 x i8]* @_end to i64), !dbg !8825
  br i1 %24, label %27, label %25, !dbg !8830

; <label>:25:                                     ; preds = %22
  %26 = tail call i32* @__errno() #10, !dbg !8833
  store i32 9, i32* %26, align 4, !dbg !8834, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8835
  br label %34, !dbg !8836

; <label>:27:                                     ; preds = %22, %19
  %28 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8837, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8841
  %29 = and i64 %28, -65536, !dbg !8843
  %30 = or i64 %29, 4097, !dbg !8843
  %31 = add nsw i64 %30, -1, !dbg !8843
  %32 = inttoptr i64 %31 to i32*, !dbg !8844
  %33 = load i32, i32* %32, align 4096, !dbg !8845, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8846
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %33, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8847, !srcloc !1640
  br label %34

; <label>:34:                                     ; preds = %27, %25
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8848
  br label %118, !dbg !8850

; <label>:35:                                     ; preds = %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8848
  %36 = getelementptr inbounds %struct.netconn, %struct.netconn* %17, i64 0, i32 0, !dbg !8851
  %37 = load i32, i32* %36, align 8, !dbg !8851, !tbaa !1647
  %38 = and i32 %37, 240, !dbg !8851
  %39 = icmp eq i32 %38, 16, !dbg !8852
  br i1 %39, label %40, label %54, !dbg !8853

; <label>:40:                                     ; preds = %35
  %41 = tail call fastcc i64 @lwip_recv_tcp(%struct.lwip_sock* nonnull %14, i8* %1, i64 %2, i32 %3) #8, !dbg !8854
  %42 = icmp ne %struct.sockaddr* %4, null, !dbg !8878
  %43 = icmp ne i32* %5, null, !dbg !8879
  %44 = and i1 %42, %43, !dbg !8880
  br i1 %44, label %45, label %53, !dbg !8880

; <label>:45:                                     ; preds = %40
  %46 = bitcast i16* %7 to i8*, !dbg !8881
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %46) #6, !dbg !8881
  %47 = bitcast %struct.ip_addr* %8 to i8*, !dbg !8882
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #6, !dbg !8882
  %48 = load %struct.netconn*, %struct.netconn** %16, align 8, !dbg !8883, !tbaa !1602
  %49 = call signext i8 @netconn_getaddr(%struct.netconn* %48, %struct.ip_addr* nonnull %8, i16* nonnull %7, i8 zeroext 0) #10, !dbg !8886
  %50 = load %struct.netconn*, %struct.netconn** %16, align 8, !dbg !8887, !tbaa !1602
  %51 = load i16, i16* %7, align 2, !dbg !8890, !tbaa !3312
  %52 = call fastcc i32 @lwip_sock_make_addr(%struct.netconn* %50, %struct.ip_addr* nonnull %8, i16 zeroext %51, %struct.sockaddr* nonnull %4, i32* nonnull %5) #10, !dbg !8891
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #6, !dbg !8892
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %46) #6, !dbg !8892
  br label %53

; <label>:53:                                     ; preds = %40, %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8893
  br label %118, !dbg !8894

; <label>:54:                                     ; preds = %35
  %55 = bitcast i16* %9 to i8*, !dbg !8895
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %55) #6, !dbg !8895
  store i16 0, i16* %9, align 2, !dbg !8896, !tbaa !3312
  %56 = bitcast %struct.iovec* %10 to i8*, !dbg !8897
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #6, !dbg !8897
  %57 = bitcast %struct.msghdr* %11 to i8*, !dbg !8898
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %57) #6, !dbg !8898
  %58 = getelementptr inbounds %struct.iovec, %struct.iovec* %10, i64 0, i32 0, !dbg !8899
  store i8* %1, i8** %58, align 8, !dbg !8900, !tbaa !8901
  %59 = getelementptr inbounds %struct.iovec, %struct.iovec* %10, i64 0, i32 1, !dbg !8903
  store i64 %2, i64* %59, align 8, !dbg !8904, !tbaa !8905
  %60 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 4, !dbg !8906
  store i8* null, i8** %60, align 8, !dbg !8907, !tbaa !1916
  %61 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 5, !dbg !8908
  store i32 0, i32* %61, align 8, !dbg !8909, !tbaa !1919
  %62 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 6, !dbg !8910
  store i32 0, i32* %62, align 4, !dbg !8911, !tbaa !1922
  %63 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 2, !dbg !8912
  store %struct.iovec* %10, %struct.iovec** %63, align 8, !dbg !8913, !tbaa !1910
  %64 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 3, !dbg !8914
  store i32 1, i32* %64, align 8, !dbg !8915, !tbaa !1913
  %65 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 0, !dbg !8916
  %66 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 0, !dbg !8917
  store i8* %65, i8** %66, align 8, !dbg !8918, !tbaa !1903
  %67 = icmp ne i32* %5, null, !dbg !8919
  br i1 %67, label %68, label %70, !dbg !8919

; <label>:68:                                     ; preds = %54
  %69 = load i32, i32* %5, align 4, !dbg !8920, !tbaa !1492
  br label %70, !dbg !8919

; <label>:70:                                     ; preds = %54, %68
  %71 = phi i32 [ %69, %68 ], [ 0, %54 ], !dbg !8919
  %72 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 1, !dbg !8921
  store i32 %71, i32* %72, align 8, !dbg !8922, !tbaa !1907
  %73 = call fastcc signext i8 @lwip_recvfrom_udp_raw(%struct.lwip_sock* nonnull %14, i32 %3, %struct.msghdr* nonnull %11, i16* nonnull %9) #8, !dbg !8924
  %74 = icmp eq i8 %73, 0, !dbg !8926
  br i1 %74, label %93, label %75, !dbg !8927

; <label>:75:                                     ; preds = %70
  %76 = call i32 @err_to_errno(i8 signext %73) #10, !dbg !8928
  %77 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8929, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8932
  %78 = icmp ult i64 %77, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8933
  br i1 %78, label %84, label %79, !dbg !8933

; <label>:79:                                     ; preds = %75
  %80 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8934, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8937
  %81 = icmp ugt i64 %80, ptrtoint ([0 x i8]* @_end to i64), !dbg !8933
  br i1 %81, label %84, label %82, !dbg !8938

; <label>:82:                                     ; preds = %79
  %83 = call i32* @__errno() #10, !dbg !8939
  store i32 %76, i32* %83, align 4, !dbg !8942, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8943
  br label %102, !dbg !8944

; <label>:84:                                     ; preds = %79, %75
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8945, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8949
  %86 = and i64 %85, -65536, !dbg !8951
  %87 = or i64 %86, 4097, !dbg !8951
  %88 = add nsw i64 %87, -1, !dbg !8951
  %89 = inttoptr i64 %88 to i32*, !dbg !8952
  %90 = load i32, i32* %89, align 4096, !dbg !8953, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8954
  %91 = sub nsw i32 0, %76, !dbg !8955
  %92 = sext i32 %91 to i64, !dbg !8955
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %92, i32 %90, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8955, !srcloc !8956
  br label %102

; <label>:93:                                     ; preds = %70
  %94 = load i16, i16* %9, align 2, !dbg !8957, !tbaa !3312
  %95 = zext i16 %94 to i64, !dbg !8957
  %96 = icmp ugt i64 %95, %2, !dbg !8957
  %97 = select i1 %96, i64 %2, i64 %95, !dbg !8957
  %98 = icmp ult i64 %97, 9223372036854775807, !dbg !8957
  %99 = select i1 %98, i64 %97, i64 9223372036854775807, !dbg !8957
  br i1 %67, label %100, label %103, !dbg !8958

; <label>:100:                                    ; preds = %93
  %101 = load i32, i32* %72, align 8, !dbg !8959, !tbaa !1907
  store i32 %101, i32* %5, align 4, !dbg !8962, !tbaa !1492
  br label %103, !dbg !8963

; <label>:102:                                    ; preds = %82, %84
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %57) #6, !dbg !8964
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #6, !dbg !8964
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %55) #6, !dbg !8964
  br label %118

; <label>:103:                                    ; preds = %100, %93
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %57) #6, !dbg !8964
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #6, !dbg !8964
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %55) #6, !dbg !8964
  %104 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8966, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8969
  %105 = icmp ult i64 %104, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8970
  br i1 %105, label %111, label %106, !dbg !8970

; <label>:106:                                    ; preds = %103
  %107 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8971, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8974
  %108 = icmp ugt i64 %107, ptrtoint ([0 x i8]* @_end to i64), !dbg !8970
  br i1 %108, label %111, label %109, !dbg !8975

; <label>:109:                                    ; preds = %106
  %110 = call i32* @__errno() #10, !dbg !8979
  store i32 0, i32* %110, align 4, !dbg !8980, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8981
  br label %118, !dbg !8982

; <label>:111:                                    ; preds = %106, %103
  %112 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8983, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8987
  %113 = and i64 %112, -65536, !dbg !8989
  %114 = or i64 %113, 4097, !dbg !8989
  %115 = add nsw i64 %114, -1, !dbg !8989
  %116 = inttoptr i64 %115 to i32*, !dbg !8990
  %117 = load i32, i32* %116, align 4096, !dbg !8991, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8992
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %117, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8993, !srcloc !8994
  br label %118

; <label>:118:                                    ; preds = %102, %34, %109, %111, %53
  %119 = phi i64 [ %41, %53 ], [ -1, %102 ], [ %99, %111 ], [ %99, %109 ], [ -1, %34 ], !dbg !8995
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8998
  ret i64 %119, !dbg !8998
}

; Function Attrs: noredzone nounwind
define dso_local i32 @recvmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #0 !dbg !8999 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !9035
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !9035
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !9036, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9037, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9040
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9041
  br i1 %7, label %30, label %8, !dbg !9041

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9042, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9045
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !9041
  br i1 %10, label %30, label %11, !dbg !9046

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !9051
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !9053
  br i1 %13, label %26, label %14, !dbg !9054

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !9055
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !9055, !tbaa !2817
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !9056
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !9056, !tbaa !3077
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !9057
  %20 = load i32, i32* %19, align 4, !dbg !9057, !tbaa !2827
  %21 = icmp eq i32 %20, 6, !dbg !9058
  br i1 %21, label %22, label %26, !dbg !9059

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !9060
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !9060
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !9060, !tbaa !2813
  br label %26, !dbg !9061

; <label>:26:                                     ; preds = %11, %14, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !9062
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9063
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !9064, !tbaa !1426
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !9064
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !9065
  br label %42, !dbg !9064

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9066, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9070
  %32 = and i64 %31, -65536, !dbg !9072
  %33 = or i64 %32, 4097, !dbg !9072
  %34 = add nsw i64 %33, -1, !dbg !9072
  %35 = inttoptr i64 %34 to i32*, !dbg !9073
  %36 = load i32, i32* %35, align 4096, !dbg !9074, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9075
  %37 = sext i32 %0 to i64, !dbg !9076
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !9076, !srcloc !9077
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !9078, !srcloc !9082
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !9065, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !9065
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !9065
  %46 = add i64 %45, 512, !dbg !9065
  %47 = icmp ult i64 %46, 513, !dbg !9065
  br i1 %47, label %48, label %69, !dbg !9065

; <label>:48:                                     ; preds = %42
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9083, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9086
  %50 = icmp ult i64 %49, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9087
  br i1 %50, label %59, label %51, !dbg !9087

; <label>:51:                                     ; preds = %48
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9088, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9091
  %53 = icmp ugt i64 %52, ptrtoint ([0 x i8]* @_end to i64), !dbg !9087
  br i1 %53, label %59, label %54, !dbg !9092

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %43, align 8, !dbg !9093, !tbaa !1426
  %56 = trunc i64 %55 to i32, !dbg !9093
  %57 = sub nsw i32 0, %56, !dbg !9097
  %58 = call i32* @__errno() #10, !dbg !9098
  store i32 %57, i32* %58, align 4, !dbg !9099, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9100
  br label %93, !dbg !9093

; <label>:59:                                     ; preds = %51, %48
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9101, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9105
  %61 = and i64 %60, -65536, !dbg !9107
  %62 = or i64 %61, 4097, !dbg !9107
  %63 = add nsw i64 %62, -1, !dbg !9107
  %64 = inttoptr i64 %63 to i32*, !dbg !9108
  %65 = load i32, i32* %64, align 4096, !dbg !9109, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9110
  %66 = load i64, i64* %43, align 8, !dbg !9111, !tbaa !1426
  %67 = shl i64 %66, 32, !dbg !9111
  %68 = ashr exact i64 %67, 32, !dbg !9111
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %68, i32 %65, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9111, !srcloc !9112
  br label %93

; <label>:69:                                     ; preds = %42
  %70 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !9113
  %71 = load i32, i32* %70, align 8, !dbg !9113, !tbaa !1421
  %72 = call i64 @lwip_recvmsg(i32 %71, %struct.msghdr* %1, i32 %2) #8, !dbg !9114
  %73 = trunc i64 %72 to i32, !dbg !9114
  %74 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9115, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9118
  %75 = icmp ult i64 %74, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9119
  br i1 %75, label %83, label %76, !dbg !9119

; <label>:76:                                     ; preds = %69
  %77 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9120, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9123
  %78 = icmp ugt i64 %77, ptrtoint ([0 x i8]* @_end to i64), !dbg !9119
  br i1 %78, label %83, label %79, !dbg !9124

; <label>:79:                                     ; preds = %76
  %80 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !9125, !tbaa !1426
  %81 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %80, i64 0, i32 0, !dbg !9125
  %82 = load %struct.vfscore_file*, %struct.vfscore_file** %81, align 8, !dbg !9125, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %82) #10, !dbg !9125
  br label %93, !dbg !9125

; <label>:83:                                     ; preds = %76, %69
  %84 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9127, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9131
  %85 = and i64 %84, -65536, !dbg !9133
  %86 = or i64 %85, 4097, !dbg !9133
  %87 = add nsw i64 %86, -1, !dbg !9133
  %88 = inttoptr i64 %87 to i32*, !dbg !9134
  %89 = load i32, i32* %88, align 4096, !dbg !9135, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9136
  %90 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !9137
  %91 = load i64*, i64** %90, align 8, !dbg !9137, !tbaa !1426
  %92 = load i64, i64* %91, align 8, !dbg !9137, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %92, i32 %89, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !9137, !srcloc !9138
  br label %93

; <label>:93:                                     ; preds = %79, %83, %54, %59
  %94 = phi i32 [ -1, %54 ], [ -1, %59 ], [ %73, %79 ], [ %73, %83 ], !dbg !9139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !9140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9141
  ret i32 %94, !dbg !9141
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_recvmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #0 !dbg !9142 {
  %4 = alloca i16, align 2
  %5 = icmp eq %struct.msghdr* %1, null, !dbg !9225
  br i1 %5, label %6, label %7, !dbg !9228

; <label>:6:                                      ; preds = %3
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #8, !dbg !9229
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !9232
  tail call void @ukplat_terminate(i32 3) #9, !dbg !9232
  unreachable, !dbg !9232

; <label>:7:                                      ; preds = %3
  %8 = and i32 %2, -10, !dbg !9236
  %9 = icmp eq i32 %8, 0, !dbg !9236
  br i1 %9, label %11, label %10, !dbg !9237

; <label>:10:                                     ; preds = %7
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0)) #8, !dbg !9238
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !9240
  tail call void @ukplat_terminate(i32 3) #9, !dbg !9240
  unreachable, !dbg !9240

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 3, !dbg !9244
  %13 = load i32, i32* %12, align 8, !dbg !9244, !tbaa !1913
  %14 = add i32 %13, -1, !dbg !9245
  %15 = icmp ugt i32 %14, 1023, !dbg !9245
  br i1 %15, label %16, label %31, !dbg !9245

; <label>:16:                                     ; preds = %11
  %17 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9246, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9249
  %18 = icmp ult i64 %17, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9250
  br i1 %18, label %24, label %19, !dbg !9250

; <label>:19:                                     ; preds = %16
  %20 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9251, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9254
  %21 = icmp ugt i64 %20, ptrtoint ([0 x i8]* @_end to i64), !dbg !9250
  br i1 %21, label %24, label %22, !dbg !9255

; <label>:22:                                     ; preds = %19
  %23 = tail call i32* @__errno() #10, !dbg !9259
  store i32 122, i32* %23, align 4, !dbg !9260, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9261
  br label %203, !dbg !9262

; <label>:24:                                     ; preds = %19, %16
  %25 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9263, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9267
  %26 = and i64 %25, -65536, !dbg !9269
  %27 = or i64 %26, 4097, !dbg !9269
  %28 = add nsw i64 %27, -1, !dbg !9269
  %29 = inttoptr i64 %28 to i32*, !dbg !9270
  %30 = load i32, i32* %29, align 4096, !dbg !9271, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9272
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -122, i32 %30, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9273, !srcloc !9274
  br label %203

; <label>:31:                                     ; preds = %11
  %32 = icmp ugt i32 %0, 63, !dbg !9284
  %33 = sext i32 %0 to i64, !dbg !9285
  %34 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %33, !dbg !9285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9286
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9287
  br i1 %32, label %39, label %35, !dbg !9288

; <label>:35:                                     ; preds = %31
  %36 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %34, i64 0, i32 0, !dbg !9291
  %37 = load %struct.netconn*, %struct.netconn** %36, align 8, !dbg !9291, !tbaa !1602
  %38 = icmp eq %struct.netconn* %37, null, !dbg !9292
  br i1 %38, label %39, label %55, !dbg !9293

; <label>:39:                                     ; preds = %35, %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9294
  %40 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9296, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9299
  %41 = icmp ult i64 %40, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9300
  br i1 %41, label %47, label %42, !dbg !9300

; <label>:42:                                     ; preds = %39
  %43 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9301, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9304
  %44 = icmp ugt i64 %43, ptrtoint ([0 x i8]* @_end to i64), !dbg !9300
  br i1 %44, label %47, label %45, !dbg !9305

; <label>:45:                                     ; preds = %42
  %46 = tail call i32* @__errno() #10, !dbg !9308
  store i32 9, i32* %46, align 4, !dbg !9309, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9310
  br label %54, !dbg !9311

; <label>:47:                                     ; preds = %42, %39
  %48 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9312, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9316
  %49 = and i64 %48, -65536, !dbg !9318
  %50 = or i64 %49, 4097, !dbg !9318
  %51 = add nsw i64 %50, -1, !dbg !9318
  %52 = inttoptr i64 %51 to i32*, !dbg !9319
  %53 = load i32, i32* %52, align 4096, !dbg !9320, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9321
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %53, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9322, !srcloc !1640
  br label %54

; <label>:54:                                     ; preds = %47, %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9323
  br label %203, !dbg !9325

; <label>:55:                                     ; preds = %35
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9294
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9323
  %56 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 2
  %57 = load %struct.iovec*, %struct.iovec** %56, align 8, !tbaa !1910
  %58 = sext i32 %13 to i64
  br label %61, !dbg !9328

; <label>:59:                                     ; preds = %71
  %60 = icmp slt i64 %74, %58, !dbg !9329
  br i1 %60, label %61, label %93, !dbg !9328, !llvm.loop !9330

; <label>:61:                                     ; preds = %55, %59
  %62 = phi i64 [ 0, %55 ], [ %74, %59 ]
  %63 = phi i64 [ 0, %55 ], [ %72, %59 ]
  %64 = getelementptr inbounds %struct.iovec, %struct.iovec* %57, i64 %62, i32 0, !dbg !9332
  %65 = load i8*, i8** %64, align 8, !dbg !9332, !tbaa !8901
  %66 = icmp eq i8* %65, null, !dbg !9333
  br i1 %66, label %75, label %67, !dbg !9334

; <label>:67:                                     ; preds = %61
  %68 = getelementptr inbounds %struct.iovec, %struct.iovec* %57, i64 %62, i32 1, !dbg !9335
  %69 = load i64, i64* %68, align 8, !dbg !9335, !tbaa !8905
  %70 = icmp slt i64 %69, 1, !dbg !9336
  br i1 %70, label %75, label %71, !dbg !9337

; <label>:71:                                     ; preds = %67
  %72 = add nsw i64 %69, %63, !dbg !9338
  %73 = icmp slt i64 %72, 1, !dbg !9339
  %74 = add nuw nsw i64 %62, 1, !dbg !9340
  br i1 %73, label %75, label %59, !dbg !9341

; <label>:75:                                     ; preds = %61, %67, %71
  %76 = tail call i32 @err_to_errno(i8 signext -6) #10, !dbg !9342
  %77 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9343, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9346
  %78 = icmp ult i64 %77, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9347
  br i1 %78, label %84, label %79, !dbg !9347

; <label>:79:                                     ; preds = %75
  %80 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9348, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9351
  %81 = icmp ugt i64 %80, ptrtoint ([0 x i8]* @_end to i64), !dbg !9347
  br i1 %81, label %84, label %82, !dbg !9352

; <label>:82:                                     ; preds = %79
  %83 = tail call i32* @__errno() #10, !dbg !9353
  store i32 %76, i32* %83, align 4, !dbg !9356, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9357
  br label %203, !dbg !9358

; <label>:84:                                     ; preds = %79, %75
  %85 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9359, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9363
  %86 = and i64 %85, -65536, !dbg !9365
  %87 = or i64 %86, 4097, !dbg !9365
  %88 = add nsw i64 %87, -1, !dbg !9365
  %89 = inttoptr i64 %88 to i32*, !dbg !9366
  %90 = load i32, i32* %89, align 4096, !dbg !9367, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9368
  %91 = sub nsw i32 0, %76, !dbg !9369
  %92 = sext i32 %91 to i64, !dbg !9369
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %92, i32 %90, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9369, !srcloc !9370
  br label %203

; <label>:93:                                     ; preds = %59
  %94 = getelementptr inbounds %struct.netconn, %struct.netconn* %37, i64 0, i32 0, !dbg !9371
  %95 = load i32, i32* %94, align 8, !dbg !9371, !tbaa !1647
  %96 = and i32 %95, 240, !dbg !9371
  %97 = icmp eq i32 %96, 16, !dbg !9372
  br i1 %97, label %98, label %153, !dbg !9373

; <label>:98:                                     ; preds = %93
  %99 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 6, !dbg !9375
  store i32 0, i32* %99, align 4, !dbg !9376, !tbaa !1922
  %100 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 2
  %101 = and i32 %2, 1
  %102 = icmp eq i32 %101, 0
  %103 = load %struct.iovec*, %struct.iovec** %100, align 8, !dbg !9377, !tbaa !1910
  br label %104, !dbg !9378

; <label>:104:                                    ; preds = %98, %129
  %105 = phi %struct.iovec* [ %103, %98 ], [ %119, %129 ], !dbg !9377
  %106 = phi i64 [ 0, %98 ], [ %131, %129 ]
  %107 = phi i64 [ 0, %98 ], [ %116, %129 ]
  %108 = phi i32 [ %2, %98 ], [ %130, %129 ]
  %109 = getelementptr inbounds %struct.iovec, %struct.iovec* %105, i64 %106, i32 0, !dbg !9379
  %110 = load i8*, i8** %109, align 8, !dbg !9379, !tbaa !8901
  %111 = getelementptr inbounds %struct.iovec, %struct.iovec* %105, i64 %106, i32 1, !dbg !9380
  %112 = load i64, i64* %111, align 8, !dbg !9380, !tbaa !8905
  %113 = tail call fastcc i64 @lwip_recv_tcp(%struct.lwip_sock* nonnull %34, i8* %110, i64 %112, i32 %108) #8, !dbg !9381
  %114 = icmp sgt i64 %113, 0, !dbg !9383
  %115 = select i1 %114, i64 %113, i64 0, !dbg !9385
  %116 = add nuw nsw i64 %115, %107, !dbg !9385
  %117 = icmp slt i64 %113, 0, !dbg !9386
  br i1 %117, label %126, label %118, !dbg !9388

; <label>:118:                                    ; preds = %104
  %119 = load %struct.iovec*, %struct.iovec** %100, align 8, !dbg !9389, !tbaa !1910
  %120 = getelementptr inbounds %struct.iovec, %struct.iovec* %119, i64 %106, i32 1, !dbg !9390
  %121 = load i64, i64* %120, align 8, !dbg !9390, !tbaa !8905
  %122 = shl i64 %121, 32, !dbg !9391
  %123 = ashr exact i64 %122, 32, !dbg !9391
  %124 = icmp sge i64 %113, %123, !dbg !9392
  %125 = and i1 %102, %124, !dbg !9393
  br i1 %125, label %129, label %126, !dbg !9393

; <label>:126:                                    ; preds = %104, %118
  %127 = icmp slt i64 %116, 1, !dbg !9394
  %128 = select i1 %127, i64 %113, i64 %116, !dbg !9397
  br label %135

; <label>:129:                                    ; preds = %118
  %130 = or i32 %108, 8, !dbg !9398
  %131 = add nuw nsw i64 %106, 1, !dbg !9399
  %132 = load i32, i32* %12, align 8, !dbg !9400, !tbaa !1913
  %133 = sext i32 %132 to i64, !dbg !9401
  %134 = icmp slt i64 %131, %133, !dbg !9401
  br i1 %134, label %104, label %135, !dbg !9378, !llvm.loop !9402

; <label>:135:                                    ; preds = %129, %126
  %136 = phi i64 [ %128, %126 ], [ %116, %129 ], !dbg !9404
  %137 = icmp sgt i64 %136, 0, !dbg !9405
  br i1 %137, label %138, label %203, !dbg !9406

; <label>:138:                                    ; preds = %135
  %139 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9408, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9411
  %140 = icmp ult i64 %139, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9412
  br i1 %140, label %146, label %141, !dbg !9412

; <label>:141:                                    ; preds = %138
  %142 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9413, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9416
  %143 = icmp ugt i64 %142, ptrtoint ([0 x i8]* @_end to i64), !dbg !9412
  br i1 %143, label %146, label %144, !dbg !9417

; <label>:144:                                    ; preds = %141
  %145 = tail call i32* @__errno() #10, !dbg !9421
  store i32 0, i32* %145, align 4, !dbg !9422, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9423
  br label %203, !dbg !9424

; <label>:146:                                    ; preds = %141, %138
  %147 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9425, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9429
  %148 = and i64 %147, -65536, !dbg !9431
  %149 = or i64 %148, 4097, !dbg !9431
  %150 = add nsw i64 %149, -1, !dbg !9431
  %151 = inttoptr i64 %150 to i32*, !dbg !9432
  %152 = load i32, i32* %151, align 4096, !dbg !9433, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9434
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %152, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9435, !srcloc !9436
  br label %203

; <label>:153:                                    ; preds = %93
  %154 = bitcast i16* %4 to i8*, !dbg !9437
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %154) #6, !dbg !9437
  store i16 0, i16* %4, align 2, !dbg !9438, !tbaa !3312
  %155 = call fastcc signext i8 @lwip_recvfrom_udp_raw(%struct.lwip_sock* nonnull %34, i32 %2, %struct.msghdr* nonnull %1, i16* nonnull %4) #8, !dbg !9439
  %156 = icmp eq i8 %155, 0, !dbg !9441
  br i1 %156, label %175, label %157, !dbg !9442

; <label>:157:                                    ; preds = %153
  %158 = call i32 @err_to_errno(i8 signext %155) #10, !dbg !9443
  %159 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9444, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9447
  %160 = icmp ult i64 %159, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9448
  br i1 %160, label %166, label %161, !dbg !9448

; <label>:161:                                    ; preds = %157
  %162 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9449, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9452
  %163 = icmp ugt i64 %162, ptrtoint ([0 x i8]* @_end to i64), !dbg !9448
  br i1 %163, label %166, label %164, !dbg !9453

; <label>:164:                                    ; preds = %161
  %165 = call i32* @__errno() #10, !dbg !9454
  store i32 %158, i32* %165, align 4, !dbg !9457, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9458
  br label %201, !dbg !9459

; <label>:166:                                    ; preds = %161, %157
  %167 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9460, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9464
  %168 = and i64 %167, -65536, !dbg !9466
  %169 = or i64 %168, 4097, !dbg !9466
  %170 = add nsw i64 %169, -1, !dbg !9466
  %171 = inttoptr i64 %170 to i32*, !dbg !9467
  %172 = load i32, i32* %171, align 4096, !dbg !9468, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9469
  %173 = sub nsw i32 0, %158, !dbg !9470
  %174 = sext i32 %173 to i64, !dbg !9470
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %174, i32 %172, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9470, !srcloc !9471
  br label %201

; <label>:175:                                    ; preds = %153
  %176 = load i16, i16* %4, align 2, !dbg !9472, !tbaa !3312
  %177 = zext i16 %176 to i64, !dbg !9472
  %178 = icmp slt i64 %72, %177, !dbg !9474
  br i1 %178, label %179, label %183, !dbg !9475

; <label>:179:                                    ; preds = %175
  %180 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 6, !dbg !9476
  %181 = load i32, i32* %180, align 4, !dbg !9478, !tbaa !1922
  %182 = or i32 %181, 4, !dbg !9478
  store i32 %182, i32* %180, align 4, !dbg !9478, !tbaa !1922
  br label %183, !dbg !9479

; <label>:183:                                    ; preds = %175, %179
  %184 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9481, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9484
  %185 = icmp ult i64 %184, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9485
  br i1 %185, label %191, label %186, !dbg !9485

; <label>:186:                                    ; preds = %183
  %187 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9486, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9489
  %188 = icmp ugt i64 %187, ptrtoint ([0 x i8]* @_end to i64), !dbg !9485
  br i1 %188, label %191, label %189, !dbg !9490

; <label>:189:                                    ; preds = %186
  %190 = call i32* @__errno() #10, !dbg !9494
  store i32 0, i32* %190, align 4, !dbg !9495, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9496
  br label %198, !dbg !9497

; <label>:191:                                    ; preds = %186, %183
  %192 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9498, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9502
  %193 = and i64 %192, -65536, !dbg !9504
  %194 = or i64 %193, 4097, !dbg !9504
  %195 = add nsw i64 %194, -1, !dbg !9504
  %196 = inttoptr i64 %195 to i32*, !dbg !9505
  %197 = load i32, i32* %196, align 4096, !dbg !9506, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9507
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %197, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9508, !srcloc !9509
  br label %198

; <label>:198:                                    ; preds = %191, %189
  %199 = load i16, i16* %4, align 2, !dbg !9510, !tbaa !3312
  %200 = zext i16 %199 to i64, !dbg !9511
  br label %201, !dbg !9512

; <label>:201:                                    ; preds = %164, %166, %198
  %202 = phi i64 [ %200, %198 ], [ -1, %166 ], [ -1, %164 ], !dbg !9513
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %154) #6, !dbg !9514
  br label %203

; <label>:203:                                    ; preds = %54, %135, %146, %144, %82, %84, %22, %24, %201
  %204 = phi i64 [ %202, %201 ], [ -1, %24 ], [ -1, %22 ], [ -1, %84 ], [ -1, %82 ], [ %136, %144 ], [ %136, %146 ], [ %136, %135 ], [ -1, %54 ], !dbg !9515
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9518
  ret i64 %204, !dbg !9518
}

; Function Attrs: noredzone nounwind
define dso_local i32 @send(i32, i8*, i64, i32) local_unnamed_addr #0 !dbg !9519 {
  %5 = alloca %struct.sock_net_file*, align 8
  %6 = bitcast %struct.sock_net_file** %5 to i8*, !dbg !9556
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9556
  store %struct.sock_net_file* null, %struct.sock_net_file** %5, align 8, !dbg !9557, !tbaa !1426
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9558, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9561
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9562
  br i1 %8, label %31, label %9, !dbg !9562

; <label>:9:                                      ; preds = %4
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9563, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9566
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !9562
  br i1 %11, label %31, label %12, !dbg !9567

; <label>:12:                                     ; preds = %9
  %13 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !9572
  %14 = icmp eq %struct.vfscore_file* %13, null, !dbg !9574
  br i1 %14, label %27, label %15, !dbg !9575

; <label>:15:                                     ; preds = %12
  %16 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %13, i64 0, i32 6, !dbg !9576
  %17 = load %struct.dentry*, %struct.dentry** %16, align 8, !dbg !9576, !tbaa !2817
  %18 = getelementptr inbounds %struct.dentry, %struct.dentry* %17, i64 0, i32 3, !dbg !9577
  %19 = load %struct.vnode*, %struct.vnode** %18, align 8, !dbg !9577, !tbaa !3077
  %20 = getelementptr inbounds %struct.vnode, %struct.vnode* %19, i64 0, i32 5, !dbg !9578
  %21 = load i32, i32* %20, align 4, !dbg !9578, !tbaa !2827
  %22 = icmp eq i32 %21, 6, !dbg !9579
  br i1 %22, label %23, label %27, !dbg !9580

; <label>:23:                                     ; preds = %15
  %24 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %13, i64 0, i32 4, !dbg !9581
  %25 = bitcast i8** %24 to %struct.sock_net_file**, !dbg !9581
  %26 = load %struct.sock_net_file*, %struct.sock_net_file** %25, align 8, !dbg !9581, !tbaa !2813
  br label %27, !dbg !9582

; <label>:27:                                     ; preds = %12, %15, %23
  %28 = phi %struct.sock_net_file* [ %26, %23 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %12 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %15 ], !dbg !9583
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9584
  store %struct.sock_net_file* %28, %struct.sock_net_file** %5, align 8, !dbg !9585, !tbaa !1426
  %29 = ptrtoint %struct.sock_net_file* %28 to i64, !dbg !9585
  %30 = bitcast %struct.sock_net_file** %5 to i64*, !dbg !9586
  br label %43, !dbg !9585

; <label>:31:                                     ; preds = %9, %4
  %32 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9587, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9591
  %33 = and i64 %32, -65536, !dbg !9593
  %34 = or i64 %33, 4097, !dbg !9593
  %35 = add nsw i64 %34, -1, !dbg !9593
  %36 = inttoptr i64 %35 to i32*, !dbg !9594
  %37 = load i32, i32* %36, align 4096, !dbg !9595, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9596
  %38 = sext i32 %0 to i64, !dbg !9597
  %39 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %38, i32 %37, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !9597, !srcloc !9598
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %5, i64 %39) #6, !dbg !9599, !srcloc !9603
  %40 = bitcast %struct.sock_net_file** %5 to i64*
  %41 = load i64, i64* %40, align 8, !dbg !9586, !tbaa !1426
  %42 = inttoptr i64 %41 to %struct.sock_net_file*
  br label %43

; <label>:43:                                     ; preds = %31, %27
  %44 = phi i64* [ %40, %31 ], [ %30, %27 ], !dbg !9586
  %45 = phi %struct.sock_net_file* [ %42, %31 ], [ %28, %27 ]
  %46 = phi i64 [ %41, %31 ], [ %29, %27 ], !dbg !9586
  %47 = add i64 %46, 512, !dbg !9586
  %48 = icmp ult i64 %47, 513, !dbg !9586
  br i1 %48, label %49, label %70, !dbg !9586

; <label>:49:                                     ; preds = %43
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9604, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9607
  %51 = icmp ult i64 %50, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9608
  br i1 %51, label %60, label %52, !dbg !9608

; <label>:52:                                     ; preds = %49
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9609, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9612
  %54 = icmp ugt i64 %53, ptrtoint ([0 x i8]* @_end to i64), !dbg !9608
  br i1 %54, label %60, label %55, !dbg !9613

; <label>:55:                                     ; preds = %52
  %56 = load i64, i64* %44, align 8, !dbg !9614, !tbaa !1426
  %57 = trunc i64 %56 to i32, !dbg !9614
  %58 = sub nsw i32 0, %57, !dbg !9618
  %59 = call i32* @__errno() #10, !dbg !9619
  store i32 %58, i32* %59, align 4, !dbg !9620, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9621
  br label %94, !dbg !9614

; <label>:60:                                     ; preds = %52, %49
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9622, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9626
  %62 = and i64 %61, -65536, !dbg !9628
  %63 = or i64 %62, 4097, !dbg !9628
  %64 = add nsw i64 %63, -1, !dbg !9628
  %65 = inttoptr i64 %64 to i32*, !dbg !9629
  %66 = load i32, i32* %65, align 4096, !dbg !9630, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9631
  %67 = load i64, i64* %44, align 8, !dbg !9632, !tbaa !1426
  %68 = shl i64 %67, 32, !dbg !9632
  %69 = ashr exact i64 %68, 32, !dbg !9632
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %69, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9632, !srcloc !9633
  br label %94

; <label>:70:                                     ; preds = %43
  %71 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %45, i64 0, i32 1, !dbg !9634
  %72 = load i32, i32* %71, align 8, !dbg !9634, !tbaa !1421
  %73 = call i64 @lwip_send(i32 %72, i8* %1, i64 %2, i32 %3) #8, !dbg !9635
  %74 = trunc i64 %73 to i32, !dbg !9635
  %75 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9636, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9639
  %76 = icmp ult i64 %75, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9640
  br i1 %76, label %84, label %77, !dbg !9640

; <label>:77:                                     ; preds = %70
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9641, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9644
  %79 = icmp ugt i64 %78, ptrtoint ([0 x i8]* @_end to i64), !dbg !9640
  br i1 %79, label %84, label %80, !dbg !9645

; <label>:80:                                     ; preds = %77
  %81 = load %struct.sock_net_file*, %struct.sock_net_file** %5, align 8, !dbg !9646, !tbaa !1426
  %82 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %81, i64 0, i32 0, !dbg !9646
  %83 = load %struct.vfscore_file*, %struct.vfscore_file** %82, align 8, !dbg !9646, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %83) #10, !dbg !9646
  br label %94, !dbg !9646

; <label>:84:                                     ; preds = %77, %70
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9648, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9652
  %86 = and i64 %85, -65536, !dbg !9654
  %87 = or i64 %86, 4097, !dbg !9654
  %88 = add nsw i64 %87, -1, !dbg !9654
  %89 = inttoptr i64 %88 to i32*, !dbg !9655
  %90 = load i32, i32* %89, align 4096, !dbg !9656, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9657
  %91 = bitcast %struct.sock_net_file** %5 to i64**, !dbg !9658
  %92 = load i64*, i64** %91, align 8, !dbg !9658, !tbaa !1426
  %93 = load i64, i64* %92, align 8, !dbg !9658, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %93, i32 %90, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !9658, !srcloc !9659
  br label %94

; <label>:94:                                     ; preds = %80, %84, %55, %60
  %95 = phi i32 [ -1, %55 ], [ -1, %60 ], [ %74, %80 ], [ %74, %84 ], !dbg !9660
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9661
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9662
  ret i32 %95, !dbg !9662
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_send(i32, i8*, i64, i32) local_unnamed_addr #0 !dbg !9663 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*, !dbg !9687
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9687
  %7 = icmp ugt i32 %0, 63, !dbg !9697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9698
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9699
  br i1 %7, label %13, label %8, !dbg !9700

; <label>:8:                                      ; preds = %4
  %9 = sext i32 %0 to i64, !dbg !9701
  %10 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %9, i32 0, !dbg !9702
  %11 = load %struct.netconn*, %struct.netconn** %10, align 8, !dbg !9702, !tbaa !1602
  %12 = icmp eq %struct.netconn* %11, null, !dbg !9703
  br i1 %12, label %13, label %29, !dbg !9704

; <label>:13:                                     ; preds = %8, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9705
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9706, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9709
  %15 = icmp ult i64 %14, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9710
  br i1 %15, label %21, label %16, !dbg !9710

; <label>:16:                                     ; preds = %13
  %17 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9711, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9714
  %18 = icmp ugt i64 %17, ptrtoint ([0 x i8]* @_end to i64), !dbg !9710
  br i1 %18, label %21, label %19, !dbg !9715

; <label>:19:                                     ; preds = %16
  %20 = tail call i32* @__errno() #10, !dbg !9718
  store i32 9, i32* %20, align 4, !dbg !9719, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9720
  br label %28, !dbg !9721

; <label>:21:                                     ; preds = %16, %13
  %22 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9722, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9726
  %23 = and i64 %22, -65536, !dbg !9728
  %24 = or i64 %23, 4097, !dbg !9728
  %25 = add nsw i64 %24, -1, !dbg !9728
  %26 = inttoptr i64 %25 to i32*, !dbg !9729
  %27 = load i32, i32* %26, align 4096, !dbg !9730, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9731
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %27, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9732, !srcloc !1640
  br label %28

; <label>:28:                                     ; preds = %21, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9733
  br label %66, !dbg !9734

; <label>:29:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9705
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9733
  %30 = getelementptr inbounds %struct.netconn, %struct.netconn* %11, i64 0, i32 0, !dbg !9735
  %31 = load i32, i32* %30, align 8, !dbg !9735, !tbaa !1647
  %32 = and i32 %31, 240, !dbg !9735
  %33 = icmp eq i32 %32, 16, !dbg !9737
  br i1 %33, label %36, label %34, !dbg !9738

; <label>:34:                                     ; preds = %29
  %35 = tail call i64 @lwip_sendto(i32 %0, i8* %1, i64 %2, i32 %3, %struct.sockaddr* null, i32 0) #8, !dbg !9739
  br label %66, !dbg !9741

; <label>:36:                                     ; preds = %29
  %37 = lshr i32 %3, 3, !dbg !9742
  %38 = and i32 %37, 2, !dbg !9742
  %39 = lshr i32 %3, 1, !dbg !9743
  %40 = and i32 %39, 4, !dbg !9743
  %41 = or i32 %38, %40, !dbg !9744
  %42 = trunc i32 %41 to i8, !dbg !9745
  %43 = or i8 %42, 1, !dbg !9745
  store i64 0, i64* %5, align 8, !dbg !9748, !tbaa !2645
  %44 = call signext i8 @netconn_write_partly(%struct.netconn* nonnull %11, i8* %1, i64 %2, i8 zeroext %43, i64* nonnull %5) #10, !dbg !9749
  %45 = call i32 @err_to_errno(i8 signext %44) #10, !dbg !9751
  %46 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9752, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9755
  %47 = icmp ult i64 %46, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9756
  br i1 %47, label %53, label %48, !dbg !9756

; <label>:48:                                     ; preds = %36
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9757, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9760
  %50 = icmp ugt i64 %49, ptrtoint ([0 x i8]* @_end to i64), !dbg !9756
  br i1 %50, label %53, label %51, !dbg !9761

; <label>:51:                                     ; preds = %48
  %52 = call i32* @__errno() #10, !dbg !9762
  store i32 %45, i32* %52, align 4, !dbg !9765, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9766
  br label %62, !dbg !9767

; <label>:53:                                     ; preds = %48, %36
  %54 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9768, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9772
  %55 = and i64 %54, -65536, !dbg !9774
  %56 = or i64 %55, 4097, !dbg !9774
  %57 = add nsw i64 %56, -1, !dbg !9774
  %58 = inttoptr i64 %57 to i32*, !dbg !9775
  %59 = load i32, i32* %58, align 4096, !dbg !9776, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9777
  %60 = sub nsw i32 0, %45, !dbg !9778
  %61 = sext i32 %60 to i64, !dbg !9778
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %61, i32 %59, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9778, !srcloc !9779
  br label %62

; <label>:62:                                     ; preds = %53, %51
  %63 = icmp eq i8 %44, 0, !dbg !9780
  %64 = load i64, i64* %5, align 8, !dbg !9781
  %65 = select i1 %63, i64 %64, i64 -1, !dbg !9782
  br label %66, !dbg !9783

; <label>:66:                                     ; preds = %28, %62, %34
  %67 = phi i64 [ %35, %34 ], [ %65, %62 ], [ -1, %28 ], !dbg !9784
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9787
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9787
  ret i64 %67, !dbg !9787
}

; Function Attrs: noredzone nounwind
define dso_local i32 @sendmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #0 !dbg !9788 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !9825
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !9825
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !9826, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9827, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9830
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9831
  br i1 %7, label %30, label %8, !dbg !9831

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9832, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9835
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !9831
  br i1 %10, label %30, label %11, !dbg !9836

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !9841
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !9843
  br i1 %13, label %26, label %14, !dbg !9844

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !9845
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !9845, !tbaa !2817
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !9846
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !9846, !tbaa !3077
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !9847
  %20 = load i32, i32* %19, align 4, !dbg !9847, !tbaa !2827
  %21 = icmp eq i32 %20, 6, !dbg !9848
  br i1 %21, label %22, label %26, !dbg !9849

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !9850
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !9850
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !9850, !tbaa !2813
  br label %26, !dbg !9851

; <label>:26:                                     ; preds = %11, %14, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !9852
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9853
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !9854, !tbaa !1426
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !9854
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !9855
  br label %42, !dbg !9854

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9856, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9860
  %32 = and i64 %31, -65536, !dbg !9862
  %33 = or i64 %32, 4097, !dbg !9862
  %34 = add nsw i64 %33, -1, !dbg !9862
  %35 = inttoptr i64 %34 to i32*, !dbg !9863
  %36 = load i32, i32* %35, align 4096, !dbg !9864, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9865
  %37 = sext i32 %0 to i64, !dbg !9866
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !9866, !srcloc !9867
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !9868, !srcloc !9872
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !9855, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !9855
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !9855
  %46 = add i64 %45, 512, !dbg !9855
  %47 = icmp ult i64 %46, 513, !dbg !9855
  br i1 %47, label %48, label %69, !dbg !9855

; <label>:48:                                     ; preds = %42
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9873, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9876
  %50 = icmp ult i64 %49, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9877
  br i1 %50, label %59, label %51, !dbg !9877

; <label>:51:                                     ; preds = %48
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9878, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9881
  %53 = icmp ugt i64 %52, ptrtoint ([0 x i8]* @_end to i64), !dbg !9877
  br i1 %53, label %59, label %54, !dbg !9882

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %43, align 8, !dbg !9883, !tbaa !1426
  %56 = trunc i64 %55 to i32, !dbg !9883
  %57 = sub nsw i32 0, %56, !dbg !9887
  %58 = call i32* @__errno() #10, !dbg !9888
  store i32 %57, i32* %58, align 4, !dbg !9889, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9890
  br label %93, !dbg !9883

; <label>:59:                                     ; preds = %51, %48
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9891, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9895
  %61 = and i64 %60, -65536, !dbg !9897
  %62 = or i64 %61, 4097, !dbg !9897
  %63 = add nsw i64 %62, -1, !dbg !9897
  %64 = inttoptr i64 %63 to i32*, !dbg !9898
  %65 = load i32, i32* %64, align 4096, !dbg !9899, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9900
  %66 = load i64, i64* %43, align 8, !dbg !9901, !tbaa !1426
  %67 = shl i64 %66, 32, !dbg !9901
  %68 = ashr exact i64 %67, 32, !dbg !9901
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %68, i32 %65, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9901, !srcloc !9902
  br label %93

; <label>:69:                                     ; preds = %42
  %70 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !9903
  %71 = load i32, i32* %70, align 8, !dbg !9903, !tbaa !1421
  %72 = call i64 @lwip_sendmsg(i32 %71, %struct.msghdr* %1, i32 %2) #8, !dbg !9904
  %73 = trunc i64 %72 to i32, !dbg !9904
  %74 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9905, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9908
  %75 = icmp ult i64 %74, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9909
  br i1 %75, label %83, label %76, !dbg !9909

; <label>:76:                                     ; preds = %69
  %77 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9910, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9913
  %78 = icmp ugt i64 %77, ptrtoint ([0 x i8]* @_end to i64), !dbg !9909
  br i1 %78, label %83, label %79, !dbg !9914

; <label>:79:                                     ; preds = %76
  %80 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !9915, !tbaa !1426
  %81 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %80, i64 0, i32 0, !dbg !9915
  %82 = load %struct.vfscore_file*, %struct.vfscore_file** %81, align 8, !dbg !9915, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %82) #10, !dbg !9915
  br label %93, !dbg !9915

; <label>:83:                                     ; preds = %76, %69
  %84 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9917, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9921
  %85 = and i64 %84, -65536, !dbg !9923
  %86 = or i64 %85, 4097, !dbg !9923
  %87 = add nsw i64 %86, -1, !dbg !9923
  %88 = inttoptr i64 %87 to i32*, !dbg !9924
  %89 = load i32, i32* %88, align 4096, !dbg !9925, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9926
  %90 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !9927
  %91 = load i64*, i64** %90, align 8, !dbg !9927, !tbaa !1426
  %92 = load i64, i64* %91, align 8, !dbg !9927, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %92, i32 %89, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !9927, !srcloc !9928
  br label %93

; <label>:93:                                     ; preds = %79, %83, %54, %59
  %94 = phi i32 [ -1, %54 ], [ -1, %59 ], [ %73, %79 ], [ %73, %83 ], !dbg !9929
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !9930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9931
  ret i32 %94, !dbg !9931
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_sendmsg(i32, %struct.msghdr* readonly, i32) local_unnamed_addr #0 !dbg !9932 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.netbuf, align 8
  %6 = bitcast i64* %4 to i8*, !dbg !10038
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !10038
  %7 = icmp ugt i32 %0, 63, !dbg !10049
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10050
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10051
  br i1 %7, label %13, label %8, !dbg !10052

; <label>:8:                                      ; preds = %3
  %9 = sext i32 %0 to i64, !dbg !10053
  %10 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %9, i32 0, !dbg !10054
  %11 = load %struct.netconn*, %struct.netconn** %10, align 8, !dbg !10054, !tbaa !1602
  %12 = icmp eq %struct.netconn* %11, null, !dbg !10055
  br i1 %12, label %13, label %29, !dbg !10056

; <label>:13:                                     ; preds = %8, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10057
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10058, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10061
  %15 = icmp ult i64 %14, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10062
  br i1 %15, label %21, label %16, !dbg !10062

; <label>:16:                                     ; preds = %13
  %17 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10063, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10066
  %18 = icmp ugt i64 %17, ptrtoint ([0 x i8]* @_end to i64), !dbg !10062
  br i1 %18, label %21, label %19, !dbg !10067

; <label>:19:                                     ; preds = %16
  %20 = tail call i32* @__errno() #10, !dbg !10070
  store i32 9, i32* %20, align 4, !dbg !10071, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10072
  br label %28, !dbg !10073

; <label>:21:                                     ; preds = %16, %13
  %22 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10074, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10078
  %23 = and i64 %22, -65536, !dbg !10080
  %24 = or i64 %23, 4097, !dbg !10080
  %25 = add nsw i64 %24, -1, !dbg !10080
  %26 = inttoptr i64 %25 to i32*, !dbg !10081
  %27 = load i32, i32* %26, align 4096, !dbg !10082, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10083
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %27, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10084, !srcloc !1640
  br label %28

; <label>:28:                                     ; preds = %21, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10085
  br label %258, !dbg !10086

; <label>:29:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10085
  %30 = icmp eq %struct.msghdr* %1, null, !dbg !10087
  br i1 %30, label %31, label %32, !dbg !10088

; <label>:31:                                     ; preds = %29
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0)) #8, !dbg !10089
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10091
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10091
  unreachable, !dbg !10091

; <label>:32:                                     ; preds = %29
  %33 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 2, !dbg !10095
  %34 = load %struct.iovec*, %struct.iovec** %33, align 8, !dbg !10095, !tbaa !1910
  %35 = icmp eq %struct.iovec* %34, null, !dbg !10095
  %36 = bitcast %struct.iovec* %34 to %struct.netvector*, !dbg !10096
  br i1 %35, label %37, label %38, !dbg !10096

; <label>:37:                                     ; preds = %32
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)) #8, !dbg !10097
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10099
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10099
  unreachable, !dbg !10099

; <label>:38:                                     ; preds = %32
  %39 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 3, !dbg !10103
  %40 = load i32, i32* %39, align 8, !dbg !10103, !tbaa !1913
  %41 = add i32 %40, -1, !dbg !10103
  %42 = icmp ult i32 %41, 1024, !dbg !10103
  br i1 %42, label %44, label %43, !dbg !10103

; <label>:43:                                     ; preds = %38
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13, i64 0, i64 0)) #8, !dbg !10104
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10106
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10106
  unreachable, !dbg !10106

; <label>:44:                                     ; preds = %38
  %45 = and i32 %2, -25, !dbg !10110
  %46 = icmp eq i32 %45, 0, !dbg !10110
  br i1 %46, label %48, label %47, !dbg !10111

; <label>:47:                                     ; preds = %44
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0)) #8, !dbg !10112
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10114
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10114
  unreachable, !dbg !10114

; <label>:48:                                     ; preds = %44
  %49 = getelementptr inbounds %struct.netconn, %struct.netconn* %11, i64 0, i32 0, !dbg !10118
  %50 = load i32, i32* %49, align 8, !dbg !10118, !tbaa !1647
  %51 = and i32 %50, 240, !dbg !10118
  %52 = icmp eq i32 %51, 16, !dbg !10119
  br i1 %52, label %53, label %84, !dbg !10120

; <label>:53:                                     ; preds = %48
  %54 = lshr i32 %2, 3, !dbg !10121
  %55 = and i32 %54, 2, !dbg !10121
  %56 = lshr i32 %2, 1, !dbg !10122
  %57 = and i32 %56, 4, !dbg !10122
  %58 = or i32 %55, %57, !dbg !10123
  %59 = trunc i32 %58 to i8, !dbg !10124
  %60 = or i8 %59, 1, !dbg !10124
  store i64 0, i64* %4, align 8, !dbg !10127, !tbaa !2645
  %61 = trunc i32 %40 to i16, !dbg !10128
  %62 = call signext i8 @netconn_write_vectors_partly(%struct.netconn* nonnull %11, %struct.netvector* %36, i16 zeroext %61, i8 zeroext %60, i64* nonnull %4) #10, !dbg !10129
  %63 = call i32 @err_to_errno(i8 signext %62) #10, !dbg !10130
  %64 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10131, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10134
  %65 = icmp ult i64 %64, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10135
  br i1 %65, label %71, label %66, !dbg !10135

; <label>:66:                                     ; preds = %53
  %67 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10136, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10139
  %68 = icmp ugt i64 %67, ptrtoint ([0 x i8]* @_end to i64), !dbg !10135
  br i1 %68, label %71, label %69, !dbg !10140

; <label>:69:                                     ; preds = %66
  %70 = call i32* @__errno() #10, !dbg !10141
  store i32 %63, i32* %70, align 4, !dbg !10144, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10145
  br label %80, !dbg !10146

; <label>:71:                                     ; preds = %66, %53
  %72 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10147, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10151
  %73 = and i64 %72, -65536, !dbg !10153
  %74 = or i64 %73, 4097, !dbg !10153
  %75 = add nsw i64 %74, -1, !dbg !10153
  %76 = inttoptr i64 %75 to i32*, !dbg !10154
  %77 = load i32, i32* %76, align 4096, !dbg !10155, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10156
  %78 = sub nsw i32 0, %63, !dbg !10157
  %79 = sext i32 %78 to i64, !dbg !10157
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %79, i32 %77, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10157, !srcloc !10158
  br label %80

; <label>:80:                                     ; preds = %71, %69
  %81 = icmp eq i8 %62, 0, !dbg !10159
  %82 = load i64, i64* %4, align 8, !dbg !10160
  %83 = select i1 %81, i64 %82, i64 -1, !dbg !10161
  br label %258, !dbg !10162

; <label>:84:                                     ; preds = %48
  %85 = bitcast %struct.netbuf* %5 to i8*, !dbg !10163
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #6, !dbg !10163
  %86 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 0, !dbg !10165
  %87 = load i8*, i8** %86, align 8, !dbg !10165, !tbaa !1903
  %88 = icmp eq i8* %87, null, !dbg !10165
  %89 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 1
  %90 = load i32, i32* %89, align 8, !dbg !10165, !tbaa !1907
  %91 = icmp eq i32 %90, 0, !dbg !10165
  %92 = and i1 %88, %91, !dbg !10165
  br i1 %92, label %95, label %93, !dbg !10165

; <label>:93:                                     ; preds = %84
  switch i32 %90, label %94 [
    i32 16, label %95
    i32 28, label %95
  ], !dbg !10165

; <label>:94:                                     ; preds = %93
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0)) #8, !dbg !10166
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10168
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10168
  unreachable, !dbg !10168

; <label>:95:                                     ; preds = %84, %93, %93
  %96 = call i8* @memset(i8* nonnull %85, i32 0, i64 48) #10, !dbg !10172
  %97 = load i8*, i8** %86, align 8, !dbg !10173, !tbaa !1903
  %98 = icmp eq i8* %97, null, !dbg !10174
  br i1 %98, label %145, label %99, !dbg !10175

; <label>:99:                                     ; preds = %95
  %100 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, !dbg !10176
  %101 = getelementptr inbounds i8, i8* %97, i64 1, !dbg !10180
  %102 = load i8, i8* %101, align 1, !dbg !10180, !tbaa !3929
  %103 = icmp eq i8 %102, 10, !dbg !10181
  br i1 %103, label %104, label %132, !dbg !10182

; <label>:104:                                    ; preds = %99
  %105 = getelementptr inbounds i8, i8* %97, i64 8, !dbg !10183
  %106 = bitcast i8* %105 to i32*, !dbg !10183
  %107 = load i32, i32* %106, align 4, !dbg !10183, !tbaa !1696
  %108 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %100, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !10183
  store i32 %107, i32* %108, align 8, !dbg !10183, !tbaa !1696
  %109 = getelementptr inbounds i8, i8* %97, i64 12, !dbg !10183
  %110 = bitcast i8* %109 to i32*, !dbg !10183
  %111 = load i32, i32* %110, align 4, !dbg !10183, !tbaa !1696
  %112 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !10183
  store i32 %111, i32* %112, align 4, !dbg !10183, !tbaa !1696
  %113 = getelementptr inbounds i8, i8* %97, i64 16, !dbg !10183
  %114 = bitcast i8* %113 to i32*, !dbg !10183
  %115 = load i32, i32* %114, align 4, !dbg !10183, !tbaa !1696
  %116 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !10183
  store i32 %115, i32* %116, align 8, !dbg !10183, !tbaa !1696
  %117 = getelementptr inbounds i8, i8* %97, i64 20, !dbg !10183
  %118 = bitcast i8* %117 to i32*, !dbg !10183
  %119 = load i32, i32* %118, align 4, !dbg !10183, !tbaa !1696
  %120 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !10183
  store i32 %119, i32* %120, align 4, !dbg !10183, !tbaa !1696
  %121 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 1, !dbg !10183
  store i8 0, i8* %121, align 8, !dbg !10183, !tbaa !1696
  %122 = and i32 %107, 49407, !dbg !10184
  %123 = icmp eq i32 %122, 33022, !dbg !10184
  br i1 %123, label %127, label %124, !dbg !10184

; <label>:124:                                    ; preds = %104
  %125 = trunc i32 %107 to i16, !dbg !10184
  %126 = and i16 %125, -28673, !dbg !10184
  switch i16 %126, label %137 [
    i16 511, label %127
    i16 767, label %127
  ], !dbg !10184

; <label>:127:                                    ; preds = %124, %124, %104
  %128 = getelementptr inbounds i8, i8* %97, i64 24, !dbg !10185
  %129 = bitcast i8* %128 to i32*, !dbg !10185
  %130 = load i32, i32* %129, align 4, !dbg !10185, !tbaa !3627
  %131 = trunc i32 %130 to i8, !dbg !10185
  store i8 %131, i8* %121, align 8, !dbg !10185, !tbaa !1696
  br label %137, !dbg !10185

; <label>:132:                                    ; preds = %99
  %133 = getelementptr inbounds i8, i8* %97, i64 4, !dbg !10186
  %134 = bitcast i8* %133 to i32*, !dbg !10186
  %135 = load i32, i32* %134, align 4, !dbg !10186, !tbaa !3637
  %136 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %100, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !10186
  store i32 %135, i32* %136, align 8, !dbg !10186, !tbaa !1696
  br label %137

; <label>:137:                                    ; preds = %124, %127, %132
  %138 = phi i8 [ 0, %132 ], [ 6, %127 ], [ 6, %124 ]
  %139 = getelementptr inbounds i8, i8* %97, i64 2, !dbg !10187
  %140 = bitcast i8* %139 to i16*, !dbg !10187
  %141 = load i16, i16* %140, align 2, !dbg !10187, !tbaa !3312
  %142 = call zeroext i16 @lwip_htons(i16 zeroext %141) #10, !dbg !10187
  %143 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 1, !dbg !10187
  store i8 %138, i8* %143, align 4, !dbg !10187, !tbaa !1700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10188
  %144 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 3, !dbg !10190
  store i16 %142, i16* %144, align 8, !dbg !10191, !tbaa !10192
  br label %145, !dbg !10194

; <label>:145:                                    ; preds = %95, %137
  %146 = load i32, i32* %39, align 8, !dbg !10196, !tbaa !1913
  %147 = icmp sgt i32 %146, 0, !dbg !10197
  %148 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 0
  br i1 %147, label %149, label %191, !dbg !10198

; <label>:149:                                    ; preds = %145
  %150 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 1
  br label %151, !dbg !10198

; <label>:151:                                    ; preds = %149, %186
  %152 = phi i64 [ 0, %149 ], [ %187, %186 ]
  %153 = load %struct.iovec*, %struct.iovec** %33, align 8, !dbg !10199, !tbaa !1910
  %154 = getelementptr inbounds %struct.iovec, %struct.iovec* %153, i64 %152, i32 1, !dbg !10201
  %155 = load i64, i64* %154, align 8, !dbg !10201, !tbaa !8905
  %156 = icmp ugt i64 %155, 65535, !dbg !10202
  br i1 %156, label %240, label %157, !dbg !10203

; <label>:157:                                    ; preds = %151
  %158 = call %struct.pbuf* @pbuf_alloc(i32 74, i16 zeroext 0, i32 65) #10, !dbg !10204
  %159 = icmp eq %struct.pbuf* %158, null, !dbg !10206
  br i1 %159, label %217, label %160, !dbg !10208

; <label>:160:                                    ; preds = %157
  %161 = load %struct.iovec*, %struct.iovec** %33, align 8, !dbg !10209, !tbaa !1910
  %162 = getelementptr inbounds %struct.iovec, %struct.iovec* %161, i64 %152, i32 0, !dbg !10210
  %163 = bitcast i8** %162 to i64*, !dbg !10210
  %164 = load i64, i64* %163, align 8, !dbg !10210, !tbaa !8901
  %165 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %158, i64 0, i32 1, !dbg !10211
  %166 = bitcast i8** %165 to i64*, !dbg !10212
  store i64 %164, i64* %166, align 8, !dbg !10212, !tbaa !10213
  %167 = getelementptr inbounds %struct.iovec, %struct.iovec* %161, i64 %152, i32 1, !dbg !10215
  %168 = load i64, i64* %167, align 8, !dbg !10215, !tbaa !8905
  %169 = trunc i64 %168 to i16, !dbg !10216
  %170 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %158, i64 0, i32 2, !dbg !10217
  store i16 %169, i16* %170, align 8, !dbg !10218, !tbaa !10219
  %171 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %158, i64 0, i32 3, !dbg !10220
  store i16 %169, i16* %171, align 2, !dbg !10221, !tbaa !10222
  %172 = load %struct.pbuf*, %struct.pbuf** %148, align 8, !dbg !10223, !tbaa !10225
  %173 = icmp eq %struct.pbuf* %172, null, !dbg !10226
  br i1 %173, label %174, label %175, !dbg !10227

; <label>:174:                                    ; preds = %160
  store %struct.pbuf* %158, %struct.pbuf** %150, align 8, !dbg !10228, !tbaa !10230
  store %struct.pbuf* %158, %struct.pbuf** %148, align 8, !dbg !10231, !tbaa !10225
  br label %186, !dbg !10232

; <label>:175:                                    ; preds = %160
  %176 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %172, i64 0, i32 2, !dbg !10233
  %177 = load i16, i16* %176, align 8, !dbg !10233, !tbaa !10219
  %178 = zext i16 %177 to i32, !dbg !10236
  %179 = trunc i64 %168 to i32, !dbg !10237
  %180 = and i32 %179, 65535, !dbg !10237
  %181 = add nuw nsw i32 %180, %178, !dbg !10238
  %182 = icmp ugt i32 %181, 65535, !dbg !10239
  br i1 %182, label %183, label %185, !dbg !10240

; <label>:183:                                    ; preds = %175
  %184 = call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %158) #10, !dbg !10241
  br label %240, !dbg !10243

; <label>:185:                                    ; preds = %175
  call void @pbuf_cat(%struct.pbuf* nonnull %172, %struct.pbuf* nonnull %158) #10, !dbg !10244
  br label %186

; <label>:186:                                    ; preds = %185, %174
  %187 = add nuw nsw i64 %152, 1, !dbg !10245
  %188 = load i32, i32* %39, align 8, !dbg !10196, !tbaa !1913
  %189 = sext i32 %188 to i64, !dbg !10197
  %190 = icmp slt i64 %187, %189, !dbg !10197
  br i1 %190, label %151, label %191, !dbg !10198, !llvm.loop !10246

; <label>:191:                                    ; preds = %186, %145
  %192 = load %struct.pbuf*, %struct.pbuf** %148, align 8, !dbg !10248, !tbaa !10225
  %193 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %192, i64 0, i32 2, !dbg !10248
  %194 = load i16, i16* %193, align 8, !dbg !10248, !tbaa !10219
  %195 = zext i16 %194 to i64, !dbg !10248
  %196 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 1, !dbg !10251
  %197 = load i8, i8* %196, align 4, !dbg !10251, !tbaa !10255
  %198 = icmp eq i8 %197, 6, !dbg !10251
  br i1 %198, label %199, label %214, !dbg !10256

; <label>:199:                                    ; preds = %191
  %200 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0, !dbg !10257
  %201 = load i32, i32* %200, align 8, !dbg !10257, !tbaa !1696
  %202 = icmp eq i32 %201, 0, !dbg !10257
  br i1 %202, label %203, label %214, !dbg !10257

; <label>:203:                                    ; preds = %199
  %204 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !10257
  %205 = load i32, i32* %204, align 4, !dbg !10257, !tbaa !1696
  %206 = icmp eq i32 %205, 0, !dbg !10257
  br i1 %206, label %207, label %214, !dbg !10257

; <label>:207:                                    ; preds = %203
  %208 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !10257
  %209 = load i32, i32* %208, align 8, !dbg !10257, !tbaa !1696
  %210 = icmp eq i32 %209, -65536, !dbg !10257
  br i1 %210, label %211, label %214, !dbg !10258

; <label>:211:                                    ; preds = %207
  %212 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !10259
  %213 = load i32, i32* %212, align 4, !dbg !10259, !tbaa !1696
  store i32 %213, i32* %200, align 8, !dbg !10259, !tbaa !1696
  store i8 0, i8* %196, align 4, !dbg !10261, !tbaa !10255
  br label %214, !dbg !10263

; <label>:214:                                    ; preds = %211, %207, %203, %199, %191
  %215 = load %struct.netconn*, %struct.netconn** %10, align 8, !dbg !10264, !tbaa !1602
  %216 = call signext i8 @netconn_send(%struct.netconn* %215, %struct.netbuf* nonnull %5) #10, !dbg !10266
  br label %217, !dbg !10267

; <label>:217:                                    ; preds = %157, %214
  %218 = phi i64 [ %195, %214 ], [ 0, %157 ]
  %219 = phi i8 [ %216, %214 ], [ -1, %157 ], !dbg !10268
  call void @netbuf_free(%struct.netbuf* nonnull %5) #10, !dbg !10269
  %220 = call i32 @err_to_errno(i8 signext %219) #10, !dbg !10270
  %221 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10271, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10274
  %222 = icmp ult i64 %221, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10275
  br i1 %222, label %228, label %223, !dbg !10275

; <label>:223:                                    ; preds = %217
  %224 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10276, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10279
  %225 = icmp ugt i64 %224, ptrtoint ([0 x i8]* @_end to i64), !dbg !10275
  br i1 %225, label %228, label %226, !dbg !10280

; <label>:226:                                    ; preds = %223
  %227 = call i32* @__errno() #10, !dbg !10281
  store i32 %220, i32* %227, align 4, !dbg !10284, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10285
  br label %237, !dbg !10286

; <label>:228:                                    ; preds = %223, %217
  %229 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10287, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10291
  %230 = and i64 %229, -65536, !dbg !10293
  %231 = or i64 %230, 4097, !dbg !10293
  %232 = add nsw i64 %231, -1, !dbg !10293
  %233 = inttoptr i64 %232 to i32*, !dbg !10294
  %234 = load i32, i32* %233, align 4096, !dbg !10295, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10296
  %235 = sub nsw i32 0, %220, !dbg !10297
  %236 = sext i32 %235 to i64, !dbg !10297
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %236, i32 %234, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10297, !srcloc !10298
  br label %237

; <label>:237:                                    ; preds = %228, %226
  %238 = icmp eq i8 %219, 0, !dbg !10299
  %239 = select i1 %238, i64 %218, i64 -1, !dbg !10300
  br label %256, !dbg !10301

; <label>:240:                                    ; preds = %151, %183
  %241 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10303, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10306
  %242 = icmp ult i64 %241, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10307
  br i1 %242, label %248, label %243, !dbg !10307

; <label>:243:                                    ; preds = %240
  %244 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10308, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10311
  %245 = icmp ugt i64 %244, ptrtoint ([0 x i8]* @_end to i64), !dbg !10307
  br i1 %245, label %248, label %246, !dbg !10312

; <label>:246:                                    ; preds = %243
  %247 = call i32* @__errno() #10, !dbg !10316
  store i32 122, i32* %247, align 4, !dbg !10317, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10318
  br label %255, !dbg !10319

; <label>:248:                                    ; preds = %243, %240
  %249 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10320, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10324
  %250 = and i64 %249, -65536, !dbg !10326
  %251 = or i64 %250, 4097, !dbg !10326
  %252 = add nsw i64 %251, -1, !dbg !10326
  %253 = inttoptr i64 %252 to i32*, !dbg !10327
  %254 = load i32, i32* %253, align 4096, !dbg !10328, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10329
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -122, i32 %254, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10330, !srcloc !10331
  br label %255

; <label>:255:                                    ; preds = %248, %246
  call void @netbuf_free(%struct.netbuf* nonnull %5) #10, !dbg !10332
  br label %256, !dbg !10333

; <label>:256:                                    ; preds = %255, %237
  %257 = phi i64 [ -1, %255 ], [ %239, %237 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #6, !dbg !10334
  br label %258

; <label>:258:                                    ; preds = %28, %256, %80
  %259 = phi i64 [ %83, %80 ], [ %257, %256 ], [ -1, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !10335
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10335
  ret i64 %259, !dbg !10335
}

; Function Attrs: noredzone nounwind
define dso_local i32 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !10336 {
  %7 = alloca %struct.sock_net_file*, align 8
  %8 = bitcast %struct.sock_net_file** %7 to i8*, !dbg !10377
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !10377
  store %struct.sock_net_file* null, %struct.sock_net_file** %7, align 8, !dbg !10378, !tbaa !1426
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10379, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10382
  %10 = icmp ult i64 %9, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10383
  br i1 %10, label %33, label %11, !dbg !10383

; <label>:11:                                     ; preds = %6
  %12 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10384, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10387
  %13 = icmp ugt i64 %12, ptrtoint ([0 x i8]* @_end to i64), !dbg !10383
  br i1 %13, label %33, label %14, !dbg !10388

; <label>:14:                                     ; preds = %11
  %15 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !10393
  %16 = icmp eq %struct.vfscore_file* %15, null, !dbg !10395
  br i1 %16, label %29, label %17, !dbg !10396

; <label>:17:                                     ; preds = %14
  %18 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %15, i64 0, i32 6, !dbg !10397
  %19 = load %struct.dentry*, %struct.dentry** %18, align 8, !dbg !10397, !tbaa !2817
  %20 = getelementptr inbounds %struct.dentry, %struct.dentry* %19, i64 0, i32 3, !dbg !10398
  %21 = load %struct.vnode*, %struct.vnode** %20, align 8, !dbg !10398, !tbaa !3077
  %22 = getelementptr inbounds %struct.vnode, %struct.vnode* %21, i64 0, i32 5, !dbg !10399
  %23 = load i32, i32* %22, align 4, !dbg !10399, !tbaa !2827
  %24 = icmp eq i32 %23, 6, !dbg !10400
  br i1 %24, label %25, label %29, !dbg !10401

; <label>:25:                                     ; preds = %17
  %26 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %15, i64 0, i32 4, !dbg !10402
  %27 = bitcast i8** %26 to %struct.sock_net_file**, !dbg !10402
  %28 = load %struct.sock_net_file*, %struct.sock_net_file** %27, align 8, !dbg !10402, !tbaa !2813
  br label %29, !dbg !10403

; <label>:29:                                     ; preds = %14, %17, %25
  %30 = phi %struct.sock_net_file* [ %28, %25 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %14 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %17 ], !dbg !10404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10405
  store %struct.sock_net_file* %30, %struct.sock_net_file** %7, align 8, !dbg !10406, !tbaa !1426
  %31 = ptrtoint %struct.sock_net_file* %30 to i64, !dbg !10406
  %32 = bitcast %struct.sock_net_file** %7 to i64*, !dbg !10407
  br label %45, !dbg !10406

; <label>:33:                                     ; preds = %11, %6
  %34 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10408, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10412
  %35 = and i64 %34, -65536, !dbg !10414
  %36 = or i64 %35, 4097, !dbg !10414
  %37 = add nsw i64 %36, -1, !dbg !10414
  %38 = inttoptr i64 %37 to i32*, !dbg !10415
  %39 = load i32, i32* %38, align 4096, !dbg !10416, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10417
  %40 = sext i32 %0 to i64, !dbg !10418
  %41 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %40, i32 %39, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !10418, !srcloc !10419
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %7, i64 %41) #6, !dbg !10420, !srcloc !10424
  %42 = bitcast %struct.sock_net_file** %7 to i64*
  %43 = load i64, i64* %42, align 8, !dbg !10407, !tbaa !1426
  %44 = inttoptr i64 %43 to %struct.sock_net_file*
  br label %45

; <label>:45:                                     ; preds = %33, %29
  %46 = phi i64* [ %42, %33 ], [ %32, %29 ], !dbg !10407
  %47 = phi %struct.sock_net_file* [ %44, %33 ], [ %30, %29 ]
  %48 = phi i64 [ %43, %33 ], [ %31, %29 ], !dbg !10407
  %49 = add i64 %48, 512, !dbg !10407
  %50 = icmp ult i64 %49, 513, !dbg !10407
  br i1 %50, label %51, label %72, !dbg !10407

; <label>:51:                                     ; preds = %45
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10425, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10428
  %53 = icmp ult i64 %52, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10429
  br i1 %53, label %62, label %54, !dbg !10429

; <label>:54:                                     ; preds = %51
  %55 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10430, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10433
  %56 = icmp ugt i64 %55, ptrtoint ([0 x i8]* @_end to i64), !dbg !10429
  br i1 %56, label %62, label %57, !dbg !10434

; <label>:57:                                     ; preds = %54
  %58 = load i64, i64* %46, align 8, !dbg !10435, !tbaa !1426
  %59 = trunc i64 %58 to i32, !dbg !10435
  %60 = sub nsw i32 0, %59, !dbg !10439
  %61 = call i32* @__errno() #10, !dbg !10440
  store i32 %60, i32* %61, align 4, !dbg !10441, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10442
  br label %96, !dbg !10435

; <label>:62:                                     ; preds = %54, %51
  %63 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10443, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10447
  %64 = and i64 %63, -65536, !dbg !10449
  %65 = or i64 %64, 4097, !dbg !10449
  %66 = add nsw i64 %65, -1, !dbg !10449
  %67 = inttoptr i64 %66 to i32*, !dbg !10450
  %68 = load i32, i32* %67, align 4096, !dbg !10451, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10452
  %69 = load i64, i64* %46, align 8, !dbg !10453, !tbaa !1426
  %70 = shl i64 %69, 32, !dbg !10453
  %71 = ashr exact i64 %70, 32, !dbg !10453
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %71, i32 %68, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10453, !srcloc !10454
  br label %96

; <label>:72:                                     ; preds = %45
  %73 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %47, i64 0, i32 1, !dbg !10455
  %74 = load i32, i32* %73, align 8, !dbg !10455, !tbaa !1421
  %75 = call i64 @lwip_sendto(i32 %74, i8* %1, i64 %2, i32 %3, %struct.sockaddr* %4, i32 %5) #8, !dbg !10456
  %76 = trunc i64 %75 to i32, !dbg !10456
  %77 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10457, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10460
  %78 = icmp ult i64 %77, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10461
  br i1 %78, label %86, label %79, !dbg !10461

; <label>:79:                                     ; preds = %72
  %80 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10462, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10465
  %81 = icmp ugt i64 %80, ptrtoint ([0 x i8]* @_end to i64), !dbg !10461
  br i1 %81, label %86, label %82, !dbg !10466

; <label>:82:                                     ; preds = %79
  %83 = load %struct.sock_net_file*, %struct.sock_net_file** %7, align 8, !dbg !10467, !tbaa !1426
  %84 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %83, i64 0, i32 0, !dbg !10467
  %85 = load %struct.vfscore_file*, %struct.vfscore_file** %84, align 8, !dbg !10467, !tbaa !2830
  call void @vfscore_put_file(%struct.vfscore_file* %85) #10, !dbg !10467
  br label %96, !dbg !10467

; <label>:86:                                     ; preds = %79, %72
  %87 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10469, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10473
  %88 = and i64 %87, -65536, !dbg !10475
  %89 = or i64 %88, 4097, !dbg !10475
  %90 = add nsw i64 %89, -1, !dbg !10475
  %91 = inttoptr i64 %90 to i32*, !dbg !10476
  %92 = load i32, i32* %91, align 4096, !dbg !10477, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10478
  %93 = bitcast %struct.sock_net_file** %7 to i64**, !dbg !10479
  %94 = load i64*, i64** %93, align 8, !dbg !10479, !tbaa !1426
  %95 = load i64, i64* %94, align 8, !dbg !10479, !tbaa !2830
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %95, i32 %92, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !10479, !srcloc !10480
  br label %96

; <label>:96:                                     ; preds = %82, %86, %57, %62
  %97 = phi i32 [ -1, %57 ], [ -1, %62 ], [ %76, %82 ], [ %76, %86 ], !dbg !10481
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !10482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10483
  ret i32 %97, !dbg !10483
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !10484 {
  %7 = alloca %struct.netbuf, align 16
  %8 = bitcast %struct.netbuf* %7 to i8*, !dbg !10534
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #6, !dbg !10534
  %9 = icmp ugt i32 %0, 63, !dbg !10544
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10546
  br i1 %9, label %15, label %10, !dbg !10547

; <label>:10:                                     ; preds = %6
  %11 = sext i32 %0 to i64, !dbg !10548
  %12 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %11, i32 0, !dbg !10549
  %13 = load %struct.netconn*, %struct.netconn** %12, align 8, !dbg !10549, !tbaa !1602
  %14 = icmp eq %struct.netconn* %13, null, !dbg !10550
  br i1 %14, label %15, label %31, !dbg !10551

; <label>:15:                                     ; preds = %10, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10552
  %16 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10553, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10556
  %17 = icmp ult i64 %16, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10557
  br i1 %17, label %23, label %18, !dbg !10557

; <label>:18:                                     ; preds = %15
  %19 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10558, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10561
  %20 = icmp ugt i64 %19, ptrtoint ([0 x i8]* @_end to i64), !dbg !10557
  br i1 %20, label %23, label %21, !dbg !10562

; <label>:21:                                     ; preds = %18
  %22 = tail call i32* @__errno() #10, !dbg !10565
  store i32 9, i32* %22, align 4, !dbg !10566, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10567
  br label %30, !dbg !10568

; <label>:23:                                     ; preds = %18, %15
  %24 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10569, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10573
  %25 = and i64 %24, -65536, !dbg !10575
  %26 = or i64 %25, 4097, !dbg !10575
  %27 = add nsw i64 %26, -1, !dbg !10575
  %28 = inttoptr i64 %27 to i32*, !dbg !10576
  %29 = load i32, i32* %28, align 4096, !dbg !10577, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10578
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %29, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10579, !srcloc !1640
  br label %30

; <label>:30:                                     ; preds = %23, %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10580
  br label %184, !dbg !10581

; <label>:31:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10552
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10580
  %32 = getelementptr inbounds %struct.netconn, %struct.netconn* %13, i64 0, i32 0, !dbg !10582
  %33 = load i32, i32* %32, align 8, !dbg !10582, !tbaa !1647
  %34 = and i32 %33, 240, !dbg !10582
  %35 = icmp eq i32 %34, 16, !dbg !10584
  br i1 %35, label %36, label %38, !dbg !10585

; <label>:36:                                     ; preds = %31
  %37 = tail call i64 @lwip_send(i32 %0, i8* %1, i64 %2, i32 %3) #8, !dbg !10586
  br label %184, !dbg !10588

; <label>:38:                                     ; preds = %31
  %39 = icmp ugt i64 %2, 65535, !dbg !10589
  br i1 %39, label %40, label %55, !dbg !10590

; <label>:40:                                     ; preds = %38
  %41 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10592, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10595
  %42 = icmp ult i64 %41, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10596
  br i1 %42, label %48, label %43, !dbg !10596

; <label>:43:                                     ; preds = %40
  %44 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10597, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10600
  %45 = icmp ugt i64 %44, ptrtoint ([0 x i8]* @_end to i64), !dbg !10596
  br i1 %45, label %48, label %46, !dbg !10601

; <label>:46:                                     ; preds = %43
  %47 = tail call i32* @__errno() #10, !dbg !10605
  store i32 122, i32* %47, align 4, !dbg !10606, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10607
  br label %184, !dbg !10608

; <label>:48:                                     ; preds = %43, %40
  %49 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10609, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10613
  %50 = and i64 %49, -65536, !dbg !10615
  %51 = or i64 %50, 4097, !dbg !10615
  %52 = add nsw i64 %51, -1, !dbg !10615
  %53 = inttoptr i64 %52 to i32*, !dbg !10616
  %54 = load i32, i32* %53, align 4096, !dbg !10617, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10618
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -122, i32 %54, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10619, !srcloc !10620
  br label %184

; <label>:55:                                     ; preds = %38
  %56 = trunc i64 %2 to i16, !dbg !10621
  %57 = icmp eq %struct.sockaddr* %4, null, !dbg !10623
  %58 = icmp eq i32 %5, 0, !dbg !10623
  %59 = and i1 %57, %58, !dbg !10623
  br i1 %59, label %75, label %60, !dbg !10623

; <label>:60:                                     ; preds = %55
  %61 = icmp eq i32 %5, 16, !dbg !10623
  br i1 %61, label %66, label %62, !dbg !10623

; <label>:62:                                     ; preds = %60
  %63 = icmp eq i32 %5, 28, !dbg !10623
  %64 = icmp ne %struct.sockaddr* %4, null, !dbg !10623
  %65 = and i1 %64, %63, !dbg !10623
  br i1 %65, label %67, label %74, !dbg !10623

; <label>:66:                                     ; preds = %60
  br i1 %57, label %74, label %67, !dbg !10623

; <label>:67:                                     ; preds = %66, %62
  %68 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 1, !dbg !10623
  %69 = load i8, i8* %68, align 1, !dbg !10623, !tbaa !3929
  switch i8 %69, label %74 [
    i8 2, label %70
    i8 10, label %70
  ], !dbg !10623

; <label>:70:                                     ; preds = %67, %67
  %71 = ptrtoint %struct.sockaddr* %4 to i64, !dbg !10623
  %72 = and i64 %71, 3, !dbg !10623
  %73 = icmp eq i64 %72, 0, !dbg !10623
  br i1 %73, label %75, label %74, !dbg !10624

; <label>:74:                                     ; preds = %67, %66, %62, %70
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i64 0, i64 0)) #8, !dbg !10625
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10627
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10627
  unreachable, !dbg !10627

; <label>:75:                                     ; preds = %55, %70
  %76 = bitcast %struct.netbuf* %7 to <2 x %struct.pbuf*>*, !dbg !10631
  store <2 x %struct.pbuf*> zeroinitializer, <2 x %struct.pbuf*>* %76, align 16, !dbg !10631, !tbaa !1426
  br i1 %57, label %118, label %77, !dbg !10632

; <label>:77:                                     ; preds = %75
  %78 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, !dbg !10633
  %79 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 1, !dbg !10639
  %80 = load i8, i8* %79, align 1, !dbg !10639, !tbaa !3929
  %81 = icmp eq i8 %80, 10, !dbg !10640
  br i1 %81, label %82, label %105, !dbg !10641

; <label>:82:                                     ; preds = %77
  %83 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 2, i64 6, !dbg !10642
  %84 = bitcast i8* %83 to <4 x i32>*, !dbg !10642
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !dbg !10642, !tbaa !1696
  %86 = bitcast %struct.ip_addr* %78 to <4 x i32>*, !dbg !10642
  store <4 x i32> %85, <4 x i32>* %86, align 16, !dbg !10642, !tbaa !1696
  %87 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 1, !dbg !10642
  store i8 0, i8* %87, align 16, !dbg !10642, !tbaa !1696
  %88 = extractelement <4 x i32> %85, i32 0, !dbg !10643
  %89 = and i32 %88, 49407, !dbg !10643
  %90 = icmp eq i32 %89, 33022, !dbg !10643
  br i1 %90, label %94, label %91, !dbg !10643

; <label>:91:                                     ; preds = %82
  %92 = trunc i32 %88 to i16, !dbg !10643
  %93 = and i16 %92, -28673, !dbg !10643
  switch i16 %93, label %99 [
    i16 511, label %94
    i16 767, label %94
  ], !dbg !10643

; <label>:94:                                     ; preds = %91, %91, %82
  %95 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 1, i32 2, i64 6, !dbg !10644
  %96 = bitcast i8* %95 to i32*, !dbg !10644
  %97 = load i32, i32* %96, align 4, !dbg !10644, !tbaa !3627
  %98 = trunc i32 %97 to i8, !dbg !10644
  store i8 %98, i8* %87, align 16, !dbg !10644, !tbaa !1696
  br label %99, !dbg !10644

; <label>:99:                                     ; preds = %94, %91
  %100 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 2, !dbg !10645
  %101 = bitcast [14 x i8]* %100 to i16*, !dbg !10645
  %102 = load i16, i16* %101, align 2, !dbg !10645, !tbaa !3623
  %103 = tail call zeroext i16 @lwip_htons(i16 zeroext %102) #10, !dbg !10645
  %104 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 1, !dbg !10646
  store i8 6, i8* %104, align 4, !dbg !10647, !tbaa !1700
  br label %115, !dbg !10648

; <label>:105:                                    ; preds = %77
  %106 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 2, i64 2, !dbg !10649
  %107 = bitcast i8* %106 to i32*, !dbg !10649
  %108 = load i32, i32* %107, align 4, !dbg !10649, !tbaa !3637
  %109 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %78, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !10649
  store i32 %108, i32* %109, align 16, !dbg !10649, !tbaa !1696
  %110 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 2, !dbg !10649
  %111 = bitcast [14 x i8]* %110 to i16*, !dbg !10649
  %112 = load i16, i16* %111, align 2, !dbg !10649, !tbaa !3636
  %113 = tail call zeroext i16 @lwip_htons(i16 zeroext %112) #10, !dbg !10649
  %114 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 1, !dbg !10650
  store i8 0, i8* %114, align 4, !dbg !10651, !tbaa !1700
  br label %115

; <label>:115:                                    ; preds = %99, %105
  %116 = phi i8* [ %104, %99 ], [ %114, %105 ], !dbg !10652
  %117 = phi i16 [ %103, %99 ], [ %113, %105 ], !dbg !10655
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10656
  br label %134, !dbg !10657

; <label>:118:                                    ; preds = %75
  %119 = and i32 %33, 8, !dbg !10659
  %120 = icmp eq i32 %119, 0, !dbg !10659
  %121 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0, !dbg !10663
  store i32 0, i32* %121, align 16, !dbg !10663, !tbaa !1696
  br i1 %120, label %128, label %122, !dbg !10665

; <label>:122:                                    ; preds = %118
  %123 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !10666
  store i32 0, i32* %123, align 4, !dbg !10666, !tbaa !1696
  %124 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !10666
  store i32 0, i32* %124, align 8, !dbg !10666, !tbaa !1696
  %125 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !10666
  store i32 0, i32* %125, align 4, !dbg !10666, !tbaa !1696
  %126 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 1, !dbg !10666
  store i8 0, i8* %126, align 16, !dbg !10666, !tbaa !1696
  %127 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 1, !dbg !10669
  store i8 6, i8* %127, align 4, !dbg !10669, !tbaa !10255
  br label %134, !dbg !10674

; <label>:128:                                    ; preds = %118
  %129 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 1, !dbg !10675
  store i8 0, i8* %129, align 4, !dbg !10675, !tbaa !10255
  %130 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !10680
  store i32 0, i32* %130, align 4, !dbg !10680, !tbaa !1696
  %131 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !10680
  store i32 0, i32* %131, align 8, !dbg !10680, !tbaa !1696
  %132 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !10680
  store i32 0, i32* %132, align 4, !dbg !10680, !tbaa !1696
  %133 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 1, !dbg !10680
  store i8 0, i8* %133, align 16, !dbg !10680, !tbaa !1696
  br label %134

; <label>:134:                                    ; preds = %122, %128, %115
  %135 = phi i8* [ %127, %122 ], [ %129, %128 ], [ %116, %115 ], !dbg !10652
  %136 = phi i16 [ 0, %122 ], [ 0, %128 ], [ %117, %115 ], !dbg !10655
  %137 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 3, !dbg !10682
  store i16 %136, i16* %137, align 8, !dbg !10683, !tbaa !10192
  %138 = call signext i8 @netbuf_ref(%struct.netbuf* nonnull %7, i8* %1, i16 zeroext %56) #10, !dbg !10685
  %139 = icmp eq i8 %138, 0, !dbg !10687
  br i1 %139, label %140, label %161, !dbg !10689

; <label>:140:                                    ; preds = %134
  %141 = load i8, i8* %135, align 4, !dbg !10690, !tbaa !10255
  %142 = icmp eq i8 %141, 6, !dbg !10690
  br i1 %142, label %143, label %158, !dbg !10693

; <label>:143:                                    ; preds = %140
  %144 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0, !dbg !10694
  %145 = load i32, i32* %144, align 16, !dbg !10694, !tbaa !1696
  %146 = icmp eq i32 %145, 0, !dbg !10694
  br i1 %146, label %147, label %158, !dbg !10694

; <label>:147:                                    ; preds = %143
  %148 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !10694
  %149 = load i32, i32* %148, align 4, !dbg !10694, !tbaa !1696
  %150 = icmp eq i32 %149, 0, !dbg !10694
  br i1 %150, label %151, label %158, !dbg !10694

; <label>:151:                                    ; preds = %147
  %152 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !10694
  %153 = load i32, i32* %152, align 8, !dbg !10694, !tbaa !1696
  %154 = icmp eq i32 %153, -65536, !dbg !10694
  br i1 %154, label %155, label %158, !dbg !10695

; <label>:155:                                    ; preds = %151
  %156 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !10696
  %157 = load i32, i32* %156, align 4, !dbg !10696, !tbaa !1696
  store i32 %157, i32* %144, align 16, !dbg !10696, !tbaa !1696
  store i8 0, i8* %135, align 4, !dbg !10698, !tbaa !10255
  br label %158, !dbg !10700

; <label>:158:                                    ; preds = %155, %151, %147, %143, %140
  %159 = load %struct.netconn*, %struct.netconn** %12, align 8, !dbg !10701, !tbaa !1602
  %160 = call signext i8 @netconn_send(%struct.netconn* %159, %struct.netbuf* nonnull %7) #10, !dbg !10702
  br label %161, !dbg !10703

; <label>:161:                                    ; preds = %158, %134
  %162 = phi i8 [ %160, %158 ], [ %138, %134 ], !dbg !10704
  call void @netbuf_free(%struct.netbuf* nonnull %7) #10, !dbg !10705
  %163 = call i32 @err_to_errno(i8 signext %162) #10, !dbg !10706
  %164 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10707, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10710
  %165 = icmp ult i64 %164, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10711
  br i1 %165, label %171, label %166, !dbg !10711

; <label>:166:                                    ; preds = %161
  %167 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10712, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10715
  %168 = icmp ugt i64 %167, ptrtoint ([0 x i8]* @_end to i64), !dbg !10711
  br i1 %168, label %171, label %169, !dbg !10716

; <label>:169:                                    ; preds = %166
  %170 = call i32* @__errno() #10, !dbg !10717
  store i32 %163, i32* %170, align 4, !dbg !10720, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10721
  br label %180, !dbg !10722

; <label>:171:                                    ; preds = %166, %161
  %172 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10723, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10727
  %173 = and i64 %172, -65536, !dbg !10729
  %174 = or i64 %173, 4097, !dbg !10729
  %175 = add nsw i64 %174, -1, !dbg !10729
  %176 = inttoptr i64 %175 to i32*, !dbg !10730
  %177 = load i32, i32* %176, align 4096, !dbg !10731, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10732
  %178 = sub nsw i32 0, %163, !dbg !10733
  %179 = sext i32 %178 to i64, !dbg !10733
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %179, i32 %177, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10733, !srcloc !10734
  br label %180

; <label>:180:                                    ; preds = %171, %169
  %181 = icmp eq i8 %162, 0, !dbg !10735
  %182 = and i64 %2, 65535, !dbg !10736
  %183 = select i1 %181, i64 %182, i64 -1, !dbg !10737
  br label %184, !dbg !10738

; <label>:184:                                    ; preds = %30, %46, %48, %180, %36
  %185 = phi i64 [ %37, %36 ], [ %183, %180 ], [ -1, %48 ], [ -1, %46 ], [ -1, %30 ], !dbg !10739
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #6, !dbg !10742
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10742
  ret i64 %185, !dbg !10742
}

; Function Attrs: noredzone nounwind
define dso_local i32 @socketpair(i32, i32, i32, i32* nocapture readnone) local_unnamed_addr #0 !dbg !10743 {
  %5 = tail call i32* @__errno() #10, !dbg !10755
  store i32 134, i32* %5, align 4, !dbg !10756, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10757
  ret i32 -1, !dbg !10757
}

; Function Attrs: noredzone nounwind
define dso_local i32 @if_nametoindex(i8*) local_unnamed_addr #0 !dbg !10758 {
  %2 = tail call i32 @lwip_if_nametoindex(i8* %0) #10, !dbg !10765
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10767
  ret i32 %2, !dbg !10767
}

; Function Attrs: noredzone
declare dso_local i32 @lwip_if_nametoindex(i8*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local i8* @if_indextoname(i32, i8*) local_unnamed_addr #0 !dbg !10768 {
  %3 = tail call i8* @lwip_if_indextoname(i32 %0, i8* %1) #10, !dbg !10777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10779
  ret i8* %3, !dbg !10779
}

; Function Attrs: noredzone
declare dso_local i8* @lwip_if_indextoname(i32, i8*) local_unnamed_addr #5

; Function Attrs: norecurse noredzone nounwind
define dso_local void @lwip_socket_thread_init() local_unnamed_addr #7 !dbg !10780 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10781
  ret void, !dbg !10781
}

; Function Attrs: norecurse noredzone nounwind
define dso_local void @lwip_socket_thread_cleanup() local_unnamed_addr #7 !dbg !10782 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10783
  ret void, !dbg !10783
}

; Function Attrs: noredzone nounwind
define dso_local %struct.lwip_sock* @lwip_socket_dbg_get_socket(i32) local_unnamed_addr #0 !dbg !10784 {
  %2 = icmp ugt i32 %0, 63, !dbg !10791
  %3 = sext i32 %0 to i64, !dbg !10792
  %4 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %3, !dbg !10792
  %5 = select i1 %2, %struct.lwip_sock* null, %struct.lwip_sock* %4, !dbg !10791
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10794
  ret %struct.lwip_sock* %5, !dbg !10794
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_accept(%struct.netconn*, %struct.netconn**) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @err_to_errno(i8 signext) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i32 @alloc_socket(%struct.netconn*, i32) unnamed_addr #0 !dbg !10795 {
  br label %3, !dbg !10806

; <label>:3:                                      ; preds = %2, %29
  %4 = phi i64 [ 0, %2 ], [ %30, %29 ]
  %5 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !10808
  %6 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %4, i32 0, !dbg !10813
  %7 = load %struct.netconn*, %struct.netconn** %6, align 8, !dbg !10813, !tbaa !1602
  %8 = icmp eq %struct.netconn* %7, null, !dbg !10815
  br i1 %8, label %9, label %29, !dbg !10816

; <label>:9:                                      ; preds = %3
  %10 = and i64 %4, 4294967295, !dbg !10815
  store %struct.netconn* %0, %struct.netconn** %6, align 8, !dbg !10817, !tbaa !1602
  tail call void @ukplat_lcpu_restore_irqf(i64 %5) #10, !dbg !10819
  %11 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 1, !dbg !10820
  %12 = bitcast %union.lwip_sock_lastdata* %11 to %struct.pbuf**, !dbg !10821
  store %struct.pbuf* null, %struct.pbuf** %12, align 8, !dbg !10822, !tbaa !1696
  %13 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 5, !dbg !10823
  %14 = load i8, i8* %13, align 2, !dbg !10823, !tbaa !5444
  %15 = icmp eq i8 %14, 0, !dbg !10823
  br i1 %15, label %17, label %16, !dbg !10826

; <label>:16:                                     ; preds = %9
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0)) #8, !dbg !10827
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10830
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10830
  unreachable, !dbg !10830

; <label>:17:                                     ; preds = %9
  %18 = trunc i64 %4 to i32, !dbg !10805
  %19 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 2, !dbg !10834
  store i16 0, i16* %19, align 8, !dbg !10835, !tbaa !10836
  %20 = getelementptr inbounds %struct.netconn, %struct.netconn* %0, i64 0, i32 0, !dbg !10837
  %21 = load i32, i32* %20, align 8, !dbg !10837, !tbaa !1647
  %22 = and i32 %21, 240, !dbg !10837
  %23 = icmp ne i32 %22, 16, !dbg !10838
  %24 = icmp ne i32 %1, 0, !dbg !10839
  %25 = or i1 %24, %23, !dbg !10837
  %26 = zext i1 %25 to i16, !dbg !10840
  %27 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 3, !dbg !10841
  store i16 %26, i16* %27, align 2, !dbg !10842, !tbaa !10843
  %28 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 4, !dbg !10844
  store i16 0, i16* %28, align 4, !dbg !10845, !tbaa !10846
  br label %32, !dbg !10847

; <label>:29:                                     ; preds = %3
  tail call void @ukplat_lcpu_restore_irqf(i64 %5) #10, !dbg !10848
  %30 = add nuw nsw i64 %4, 1, !dbg !10849
  %31 = icmp ult i64 %30, 64, !dbg !10850
  br i1 %31, label %3, label %32, !dbg !10806, !llvm.loop !10851

; <label>:32:                                     ; preds = %29, %17
  %33 = phi i32 [ %18, %17 ], [ -1, %29 ], !dbg !10853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10854
  ret i32 %33, !dbg !10854
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_delete(%struct.netconn*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i64 @ukplat_lcpu_save_irqf() local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @ukplat_lcpu_restore_irqf(i64) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @sys_mutex_lock(%struct.sys_mutex_t*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @sys_mutex_unlock(%struct.sys_mutex_t*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_getaddr(%struct.netconn*, %struct.ip_addr*, i16*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local zeroext i16 @lwip_htons(i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_bind(%struct.netconn*, %struct.ip_addr*, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_prepare_delete(%struct.netconn*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_disconnect(%struct.netconn*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_connect(%struct.netconn*, %struct.ip_addr*, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_listen_with_backlog(%struct.netconn*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i64 @lwip_recv_tcp(%struct.lwip_sock*, i8*, i64, i32) unnamed_addr #0 !dbg !10855 {
  %5 = alloca %struct.pbuf*, align 8
  %6 = icmp sgt i64 %2, -1, !dbg !10896
  %7 = select i1 %6, i64 %2, i64 9223372036854775807, !dbg !10897
  %8 = icmp eq %struct.lwip_sock* %0, null, !dbg !10899
  br i1 %8, label %9, label %10, !dbg !10902

; <label>:9:                                      ; preds = %4
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !10903
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10906
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10906
  unreachable, !dbg !10906

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 0, !dbg !10910
  %12 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !10910, !tbaa !1602
  %13 = getelementptr inbounds %struct.netconn, %struct.netconn* %12, i64 0, i32 0, !dbg !10910
  %14 = load i32, i32* %13, align 8, !dbg !10910, !tbaa !1647
  %15 = and i32 %14, 240, !dbg !10910
  %16 = icmp eq i32 %15, 16, !dbg !10910
  br i1 %16, label %18, label %17, !dbg !10913

; <label>:17:                                     ; preds = %10
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)) #8, !dbg !10914
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10917
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10917
  unreachable, !dbg !10917

; <label>:18:                                     ; preds = %10
  %19 = and i32 %3, 8, !dbg !10921
  %20 = icmp eq i32 %19, 0, !dbg !10921
  %21 = select i1 %20, i8 8, i8 12, !dbg !10923
  %22 = bitcast %struct.pbuf** %5 to i8*
  %23 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 1
  %24 = bitcast %union.lwip_sock_lastdata* %23 to %struct.pbuf**
  %25 = and i32 %3, 1
  %26 = icmp eq i32 %25, 0
  br label %27, !dbg !10924

; <label>:27:                                     ; preds = %96, %18
  %28 = phi i64 [ %7, %18 ], [ %81, %96 ], !dbg !10925
  %29 = phi i64 [ 0, %18 ], [ %77, %96 ], !dbg !10925
  %30 = phi i8 [ %21, %18 ], [ %97, %96 ], !dbg !10925
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6, !dbg !10926
  %31 = load %struct.pbuf*, %struct.pbuf** %24, align 8, !dbg !10927, !tbaa !1696
  %32 = icmp eq %struct.pbuf* %31, null, !dbg !10928
  br i1 %32, label %34, label %33, !dbg !10929

; <label>:33:                                     ; preds = %27
  store %struct.pbuf* %31, %struct.pbuf** %5, align 8, !dbg !10931, !tbaa !1426
  br label %66, !dbg !10933

; <label>:34:                                     ; preds = %27
  %35 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !10934, !tbaa !1602
  %36 = call signext i8 @netconn_recv_tcp_pbuf_flags(%struct.netconn* %35, %struct.pbuf** nonnull %5, i8 zeroext %30) #10, !dbg !10935
  %37 = icmp eq i8 %36, 0, !dbg !10937
  br i1 %37, label %61, label %38, !dbg !10938

; <label>:38:                                     ; preds = %34
  %39 = icmp eq i64 %29, 0, !dbg !10939
  br i1 %39, label %40, label %95, !dbg !10941

; <label>:40:                                     ; preds = %38
  %41 = call i32 @err_to_errno(i8 signext %36) #10, !dbg !10942
  %42 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10943, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10946
  %43 = icmp ult i64 %42, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10947
  br i1 %43, label %49, label %44, !dbg !10947

; <label>:44:                                     ; preds = %40
  %45 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10948, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10951
  %46 = icmp ugt i64 %45, ptrtoint ([0 x i8]* @_end to i64), !dbg !10947
  br i1 %46, label %49, label %47, !dbg !10952

; <label>:47:                                     ; preds = %44
  %48 = call i32* @__errno() #10, !dbg !10953
  store i32 %41, i32* %48, align 4, !dbg !10956, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10957
  br label %58, !dbg !10958

; <label>:49:                                     ; preds = %44, %40
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10959, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10963
  %51 = and i64 %50, -65536, !dbg !10965
  %52 = or i64 %51, 4097, !dbg !10965
  %53 = add nsw i64 %52, -1, !dbg !10965
  %54 = inttoptr i64 %53 to i32*, !dbg !10966
  %55 = load i32, i32* %54, align 4096, !dbg !10967, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10968
  %56 = sub nsw i32 0, %41, !dbg !10969
  %57 = sext i32 %56 to i64, !dbg !10969
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %57, i32 %55, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10969, !srcloc !10970
  br label %58

; <label>:58:                                     ; preds = %47, %49
  %59 = icmp ne i8 %36, -15, !dbg !10971
  %60 = sext i1 %59 to i64, !dbg !10973
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6, !dbg !10975
  br label %123

; <label>:61:                                     ; preds = %34
  %62 = load %struct.pbuf*, %struct.pbuf** %5, align 8, !dbg !10976, !tbaa !1426
  %63 = icmp eq %struct.pbuf* %62, null, !dbg !10976
  br i1 %63, label %64, label %65, !dbg !10979

; <label>:64:                                     ; preds = %61
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0)) #8, !dbg !10980
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10983
  call void @ukplat_terminate(i32 3) #9, !dbg !10983
  unreachable, !dbg !10983

; <label>:65:                                     ; preds = %61
  store %struct.pbuf* %62, %struct.pbuf** %24, align 8, !dbg !10987, !tbaa !1696
  br label %66

; <label>:66:                                     ; preds = %65, %33
  %67 = phi %struct.pbuf* [ %62, %65 ], [ %31, %33 ], !dbg !10988
  %68 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %67, i64 0, i32 2, !dbg !10990
  %69 = load i16, i16* %68, align 8, !dbg !10990, !tbaa !10219
  %70 = zext i16 %69 to i64, !dbg !10988
  %71 = icmp sgt i64 %28, %70, !dbg !10991
  %72 = trunc i64 %28 to i16, !dbg !10992
  %73 = select i1 %71, i16 %69, i16 %72, !dbg !10995
  %74 = getelementptr inbounds i8, i8* %1, i64 %29, !dbg !10996
  %75 = call zeroext i16 @pbuf_copy_partial(%struct.pbuf* nonnull %67, i8* %74, i16 zeroext %73, i16 zeroext 0) #10, !dbg !10997
  %76 = zext i16 %73 to i64, !dbg !10998
  %77 = add nuw nsw i64 %29, %76, !dbg !10999
  %78 = icmp slt i64 %28, %76, !dbg !11000
  br i1 %78, label %79, label %80, !dbg !11003

; <label>:79:                                     ; preds = %66
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0)) #8, !dbg !11004
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11007
  call void @ukplat_terminate(i32 3) #9, !dbg !11007
  unreachable, !dbg !11007

; <label>:80:                                     ; preds = %66
  %81 = sub nsw i64 %28, %76, !dbg !11011
  br i1 %26, label %83, label %82, !dbg !11012

; <label>:82:                                     ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6, !dbg !10975
  br label %107, !dbg !11013

; <label>:83:                                     ; preds = %80
  %84 = load %struct.pbuf*, %struct.pbuf** %5, align 8, !dbg !11015, !tbaa !1426
  %85 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %84, i64 0, i32 2, !dbg !11015
  %86 = load i16, i16* %85, align 8, !dbg !11015, !tbaa !10219
  %87 = icmp ult i16 %86, %73, !dbg !11015
  br i1 %87, label %88, label %89, !dbg !11020

; <label>:88:                                     ; preds = %83
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0)) #8, !dbg !11021
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11024
  call void @ukplat_terminate(i32 3) #9, !dbg !11024
  unreachable, !dbg !11024

; <label>:89:                                     ; preds = %83
  %90 = icmp ugt i16 %86, %73, !dbg !11028
  br i1 %90, label %91, label %93, !dbg !11030

; <label>:91:                                     ; preds = %89
  %92 = call %struct.pbuf* @pbuf_free_header(%struct.pbuf* %84, i16 zeroext %73) #10, !dbg !11031
  store %struct.pbuf* %92, %struct.pbuf** %24, align 8, !dbg !11033, !tbaa !1696
  br label %96, !dbg !11034

; <label>:93:                                     ; preds = %89
  store %struct.pbuf* null, %struct.pbuf** %24, align 8, !dbg !11035, !tbaa !1696
  %94 = call zeroext i8 @pbuf_free(%struct.pbuf* %84) #10, !dbg !11037
  br label %96

; <label>:95:                                     ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6, !dbg !10975
  br label %100

; <label>:96:                                     ; preds = %93, %91
  %97 = or i8 %30, 20, !dbg !11038
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6, !dbg !10975
  %98 = icmp sgt i64 %81, 0, !dbg !11039
  %99 = and i1 %26, %98, !dbg !11040
  br i1 %99, label %27, label %100, !dbg !11040, !llvm.loop !11041

; <label>:100:                                    ; preds = %96, %95
  %101 = phi i64 [ %29, %95 ], [ %77, %96 ]
  %102 = icmp sgt i64 %101, 0, !dbg !11043
  %103 = and i1 %26, %102, !dbg !11013
  br i1 %103, label %104, label %107, !dbg !11013

; <label>:104:                                    ; preds = %100
  %105 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !11044, !tbaa !1602
  %106 = call signext i8 @netconn_tcp_recvd(%struct.netconn* %105, i64 %101) #10, !dbg !11046
  br label %107, !dbg !11047

; <label>:107:                                    ; preds = %82, %100, %104
  %108 = phi i64 [ %77, %82 ], [ %101, %100 ], [ %101, %104 ]
  %109 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11049, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11052
  %110 = icmp ult i64 %109, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11053
  br i1 %110, label %116, label %111, !dbg !11053

; <label>:111:                                    ; preds = %107
  %112 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11054, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11057
  %113 = icmp ugt i64 %112, ptrtoint ([0 x i8]* @_end to i64), !dbg !11053
  br i1 %113, label %116, label %114, !dbg !11058

; <label>:114:                                    ; preds = %111
  %115 = call i32* @__errno() #10, !dbg !11062
  store i32 0, i32* %115, align 4, !dbg !11063, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11064
  br label %123, !dbg !11065

; <label>:116:                                    ; preds = %111, %107
  %117 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11066, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11070
  %118 = and i64 %117, -65536, !dbg !11072
  %119 = or i64 %118, 4097, !dbg !11072
  %120 = add nsw i64 %119, -1, !dbg !11072
  %121 = inttoptr i64 %120 to i32*, !dbg !11073
  %122 = load i32, i32* %121, align 4096, !dbg !11074, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11075
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %122, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11076, !srcloc !11077
  br label %123

; <label>:123:                                    ; preds = %58, %114, %116
  %124 = phi i64 [ %108, %116 ], [ %108, %114 ], [ %60, %58 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11078
  ret i64 %124, !dbg !11078
}

; Function Attrs: noredzone nounwind
define internal fastcc signext i8 @lwip_recvfrom_udp_raw(%struct.lwip_sock* nocapture, i32, %struct.msghdr*, i16*) unnamed_addr #0 !dbg !11079 {
  %5 = alloca %struct.netbuf*, align 8
  %6 = bitcast %struct.netbuf** %5 to i8*, !dbg !11107
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !11107
  %7 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 2, !dbg !11108
  %8 = load %struct.iovec*, %struct.iovec** %7, align 8, !dbg !11108, !tbaa !1910
  %9 = icmp eq %struct.iovec* %8, null, !dbg !11108
  br i1 %9, label %10, label %15, !dbg !11108

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 3, !dbg !11108
  %12 = load i32, i32* %11, align 8, !dbg !11108, !tbaa !1913
  %13 = icmp slt i32 %12, 1, !dbg !11108
  br i1 %13, label %15, label %14, !dbg !11111

; <label>:14:                                     ; preds = %10
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.37, i64 0, i64 0)) #8, !dbg !11112
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11115
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11115
  unreachable, !dbg !11115

; <label>:15:                                     ; preds = %4, %10
  %16 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 1, i32 0, !dbg !11119
  %17 = load %struct.netbuf*, %struct.netbuf** %16, align 8, !dbg !11119, !tbaa !1696
  store %struct.netbuf* %17, %struct.netbuf** %5, align 8, !dbg !11121, !tbaa !1426
  %18 = icmp eq %struct.netbuf* %17, null, !dbg !11122
  br i1 %18, label %19, label %32, !dbg !11124

; <label>:19:                                     ; preds = %15
  %20 = lshr i32 %1, 1
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 4
  %23 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 0, !dbg !11126
  %24 = load %struct.netconn*, %struct.netconn** %23, align 8, !dbg !11126, !tbaa !1602
  %25 = call signext i8 @netconn_recv_udp_raw_netbuf_flags(%struct.netconn* %24, %struct.netbuf** nonnull %5, i8 zeroext %22) #10, !dbg !11128
  %26 = icmp eq i8 %25, 0, !dbg !11130
  br i1 %26, label %27, label %101, !dbg !11132

; <label>:27:                                     ; preds = %19
  %28 = load %struct.netbuf*, %struct.netbuf** %5, align 8, !dbg !11133, !tbaa !1426
  %29 = icmp eq %struct.netbuf* %28, null, !dbg !11133
  br i1 %29, label %30, label %31, !dbg !11136

; <label>:30:                                     ; preds = %27
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0)) #8, !dbg !11137
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11140
  call void @ukplat_terminate(i32 3) #9, !dbg !11140
  unreachable, !dbg !11140

; <label>:31:                                     ; preds = %27
  store %struct.netbuf* %28, %struct.netbuf** %16, align 8, !dbg !11144, !tbaa !1696
  br label %32, !dbg !11145

; <label>:32:                                     ; preds = %31, %15
  %33 = phi %struct.netbuf* [ %28, %31 ], [ %17, %15 ], !dbg !11146
  %34 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %33, i64 0, i32 0, !dbg !11147
  %35 = load %struct.pbuf*, %struct.pbuf** %34, align 8, !dbg !11147, !tbaa !10225
  %36 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %35, i64 0, i32 2, !dbg !11148
  %37 = load i16, i16* %36, align 8, !dbg !11148, !tbaa !10219
  %38 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 3, !dbg !11152
  %39 = load i32, i32* %38, align 8, !dbg !11152, !tbaa !1913
  %40 = icmp sgt i32 %39, 0, !dbg !11153
  %41 = icmp ne i16 %37, 0, !dbg !11154
  %42 = and i1 %41, %40, !dbg !11155
  br i1 %42, label %43, label %69, !dbg !11155

; <label>:43:                                     ; preds = %32, %65
  %44 = phi %struct.pbuf* [ %68, %65 ], [ %35, %32 ], !dbg !11156
  %45 = phi i64 [ %59, %65 ], [ 0, %32 ]
  %46 = phi i16 [ %58, %65 ], [ 0, %32 ]
  %47 = sub i16 %37, %46, !dbg !11157
  %48 = load %struct.iovec*, %struct.iovec** %7, align 8, !dbg !11159, !tbaa !1910
  %49 = getelementptr inbounds %struct.iovec, %struct.iovec* %48, i64 %45, i32 1, !dbg !11161
  %50 = load i64, i64* %49, align 8, !dbg !11161, !tbaa !8905
  %51 = zext i16 %47 to i64, !dbg !11162
  %52 = icmp ugt i64 %50, %51, !dbg !11163
  %53 = trunc i64 %50 to i16, !dbg !11164
  %54 = select i1 %52, i16 %47, i16 %53, !dbg !11167
  %55 = getelementptr inbounds %struct.iovec, %struct.iovec* %48, i64 %45, i32 0, !dbg !11168
  %56 = load i8*, i8** %55, align 8, !dbg !11168, !tbaa !8901
  %57 = call zeroext i16 @pbuf_copy_partial(%struct.pbuf* %44, i8* %56, i16 zeroext %54, i16 zeroext %46) #10, !dbg !11169
  %58 = add i16 %54, %46, !dbg !11170
  %59 = add nuw nsw i64 %45, 1, !dbg !11171
  %60 = load i32, i32* %38, align 8, !dbg !11152, !tbaa !1913
  %61 = sext i32 %60 to i64, !dbg !11153
  %62 = icmp slt i64 %59, %61, !dbg !11153
  %63 = icmp ugt i16 %37, %58, !dbg !11154
  %64 = and i1 %63, %62, !dbg !11155
  br i1 %64, label %65, label %69, !dbg !11155, !llvm.loop !11172

; <label>:65:                                     ; preds = %43
  %66 = load %struct.netbuf*, %struct.netbuf** %5, align 8, !dbg !11175, !tbaa !1426
  %67 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %66, i64 0, i32 0
  %68 = load %struct.pbuf*, %struct.pbuf** %67, align 8, !dbg !11156, !tbaa !10225
  br label %43, !dbg !11155

; <label>:69:                                     ; preds = %43, %32
  %70 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 0, !dbg !11176
  %71 = load i8*, i8** %70, align 8, !dbg !11176, !tbaa !1903
  %72 = icmp eq i8* %71, null, !dbg !11178
  br i1 %72, label %86, label %73, !dbg !11179

; <label>:73:                                     ; preds = %69
  %74 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 1, !dbg !11180
  %75 = load i32, i32* %74, align 8, !dbg !11180, !tbaa !1907
  %76 = icmp eq i32 %75, 0, !dbg !11181
  br i1 %76, label %86, label %77, !dbg !11182

; <label>:77:                                     ; preds = %73
  %78 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 0, !dbg !11183
  %79 = load %struct.netconn*, %struct.netconn** %78, align 8, !dbg !11183, !tbaa !1602
  %80 = load %struct.netbuf*, %struct.netbuf** %5, align 8, !dbg !11187, !tbaa !1426
  %81 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %80, i64 0, i32 2, !dbg !11187
  %82 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %80, i64 0, i32 3, !dbg !11188
  %83 = load i16, i16* %82, align 8, !dbg !11188, !tbaa !10192
  %84 = bitcast i8* %71 to %struct.sockaddr*, !dbg !11189
  %85 = call fastcc i32 @lwip_sock_make_addr(%struct.netconn* %79, %struct.ip_addr* nonnull %81, i16 zeroext %83, %struct.sockaddr* %84, i32* nonnull %74) #8, !dbg !11190
  br label %86, !dbg !11191

; <label>:86:                                     ; preds = %73, %69, %77
  %87 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 6, !dbg !11192
  store i32 0, i32* %87, align 4, !dbg !11193, !tbaa !1922
  %88 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 4, !dbg !11194
  %89 = load i8*, i8** %88, align 8, !dbg !11194, !tbaa !1916
  %90 = icmp eq i8* %89, null, !dbg !11195
  br i1 %90, label %93, label %91, !dbg !11196

; <label>:91:                                     ; preds = %86
  %92 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 5, !dbg !11198
  store i32 0, i32* %92, align 8, !dbg !11201, !tbaa !1919
  br label %93, !dbg !11202

; <label>:93:                                     ; preds = %86, %91
  %94 = and i32 %1, 1, !dbg !11203
  %95 = icmp eq i32 %94, 0, !dbg !11205
  br i1 %95, label %96, label %98, !dbg !11206

; <label>:96:                                     ; preds = %93
  store %struct.netbuf* null, %struct.netbuf** %16, align 8, !dbg !11207, !tbaa !1696
  %97 = load %struct.netbuf*, %struct.netbuf** %5, align 8, !dbg !11209, !tbaa !1426
  call void @netbuf_delete(%struct.netbuf* %97) #10, !dbg !11210
  br label %98, !dbg !11211

; <label>:98:                                     ; preds = %96, %93
  %99 = icmp eq i16* %3, null, !dbg !11212
  br i1 %99, label %101, label %100, !dbg !11214

; <label>:100:                                    ; preds = %98
  store i16 %37, i16* %3, align 2, !dbg !11215, !tbaa !3312
  br label %101, !dbg !11217

; <label>:101:                                    ; preds = %100, %98, %19
  %102 = phi i8 [ %25, %19 ], [ 0, %98 ], [ 0, %100 ], !dbg !11218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !11219
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11219
  ret i8 %102, !dbg !11219
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_read(i32, i8*, i64) local_unnamed_addr #0 !dbg !11220 {
  %4 = tail call i64 @lwip_recvfrom(i32 %0, i8* %1, i64 %2, i32 0, %struct.sockaddr* null, i32* null) #8, !dbg !11230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11231
  ret i64 %4, !dbg !11231
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_write_partly(%struct.netconn*, i8*, i64, i8 zeroext, i64*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_write_vectors_partly(%struct.netconn*, %struct.netvector*, i16 zeroext, i8 zeroext, i64*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.pbuf* @pbuf_alloc(i32, i16 zeroext, i32) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local zeroext i8 @pbuf_free(%struct.pbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @pbuf_cat(%struct.pbuf*, %struct.pbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_send(%struct.netconn*, %struct.netbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @netbuf_free(%struct.netbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netbuf_ref(%struct.netbuf*, i8*, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.netconn* @netconn_new_with_proto_and_callback(i32, i8 zeroext, void (%struct.netconn*, i32, i16)*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal void @event_callback(%struct.netconn*, i32, i16 zeroext) #0 !dbg !11232 {
  %4 = icmp eq %struct.netconn* %0, null, !dbg !11249
  br i1 %4, label %173, label %5, !dbg !11251

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds %struct.netconn, %struct.netconn* %0, i64 0, i32 7, !dbg !11252
  %7 = load i32, i32* %6, align 8, !dbg !11252, !tbaa !2494
  %8 = icmp slt i32 %7, 0, !dbg !11255
  br i1 %8, label %9, label %19, !dbg !11257

; <label>:9:                                      ; preds = %5
  %10 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !11258
  %11 = load i32, i32* %6, align 8, !dbg !11262, !tbaa !2494
  %12 = icmp slt i32 %11, 0, !dbg !11264
  br i1 %12, label %13, label %18, !dbg !11265

; <label>:13:                                     ; preds = %9
  %14 = icmp eq i32 %1, 0, !dbg !11266
  br i1 %14, label %15, label %17, !dbg !11269

; <label>:15:                                     ; preds = %13
  %16 = add nsw i32 %11, -1, !dbg !11270
  store i32 %16, i32* %6, align 8, !dbg !11270, !tbaa !2494
  br label %17, !dbg !11272

; <label>:17:                                     ; preds = %15, %13
  tail call void @ukplat_lcpu_restore_irqf(i64 %10) #10, !dbg !11273
  br label %173, !dbg !11274

; <label>:18:                                     ; preds = %9
  tail call void @ukplat_lcpu_restore_irqf(i64 %10) #10, !dbg !11275
  br label %19, !dbg !11276

; <label>:19:                                     ; preds = %18, %5
  %20 = phi i32 [ %11, %18 ], [ %7, %5 ], !dbg !11277
  %21 = icmp ugt i32 %20, 63, !dbg !11287
  %22 = sext i32 %20 to i64, !dbg !11288
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11290
  br i1 %21, label %27, label %23, !dbg !11291

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 0, !dbg !11292
  %25 = load %struct.netconn*, %struct.netconn** %24, align 8, !dbg !11292, !tbaa !1602
  %26 = icmp eq %struct.netconn* %25, null, !dbg !11293
  br i1 %26, label %27, label %43, !dbg !11294

; <label>:27:                                     ; preds = %23, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11295
  %28 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11296, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11299
  %29 = icmp ult i64 %28, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11300
  br i1 %29, label %35, label %30, !dbg !11300

; <label>:30:                                     ; preds = %27
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11301, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11304
  %32 = icmp ugt i64 %31, ptrtoint ([0 x i8]* @_end to i64), !dbg !11300
  br i1 %32, label %35, label %33, !dbg !11305

; <label>:33:                                     ; preds = %30
  %34 = tail call i32* @__errno() #10, !dbg !11308
  store i32 9, i32* %34, align 4, !dbg !11309, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11310
  br label %42, !dbg !11311

; <label>:35:                                     ; preds = %30, %27
  %36 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11312, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11316
  %37 = and i64 %36, -65536, !dbg !11318
  %38 = or i64 %37, 4097, !dbg !11318
  %39 = add nsw i64 %38, -1, !dbg !11318
  %40 = inttoptr i64 %39 to i32*, !dbg !11319
  %41 = load i32, i32* %40, align 4096, !dbg !11320, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11321
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %41, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11322, !srcloc !1640
  br label %42

; <label>:42:                                     ; preds = %35, %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11323
  br label %173, !dbg !11324

; <label>:43:                                     ; preds = %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11295
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11323
  %44 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !11326
  switch i32 %1, label %62 [
    i32 0, label %45
    i32 1, label %50
    i32 2, label %54
    i32 3, label %58
    i32 4, label %60
  ], !dbg !11328

; <label>:45:                                     ; preds = %43
  %46 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 2, !dbg !11329
  %47 = load i16, i16* %46, align 8, !dbg !11331, !tbaa !10836
  %48 = add i16 %47, 1, !dbg !11331
  store i16 %48, i16* %46, align 8, !dbg !11331, !tbaa !10836
  %49 = icmp slt i16 %48, 2, !dbg !11332
  br label %63, !dbg !11334

; <label>:50:                                     ; preds = %43
  %51 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 2, !dbg !11335
  %52 = load i16, i16* %51, align 8, !dbg !11336, !tbaa !10836
  %53 = add i16 %52, -1, !dbg !11336
  store i16 %53, i16* %51, align 8, !dbg !11336, !tbaa !10836
  br label %172, !dbg !11337

; <label>:54:                                     ; preds = %43
  %55 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 3, !dbg !11338
  %56 = load i16, i16* %55, align 2, !dbg !11338, !tbaa !10843
  %57 = icmp eq i16 %56, 0, !dbg !11340
  store i16 1, i16* %55, align 2, !dbg !11341, !tbaa !10843
  br label %63, !dbg !11342

; <label>:58:                                     ; preds = %43
  %59 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 3, !dbg !11343
  store i16 0, i16* %59, align 2, !dbg !11344, !tbaa !10843
  br label %172, !dbg !11345

; <label>:60:                                     ; preds = %43
  %61 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 4, !dbg !11346
  store i16 1, i16* %61, align 4, !dbg !11347, !tbaa !10846
  br label %63, !dbg !11348

; <label>:62:                                     ; preds = %43
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0)) #8, !dbg !11349
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11354
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11354
  unreachable, !dbg !11354

; <label>:63:                                     ; preds = %45, %60, %54
  %64 = phi i1 [ true, %60 ], [ %57, %54 ], [ %49, %45 ]
  %65 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 5, !dbg !11358
  %66 = load i8, i8* %65, align 2, !dbg !11358, !tbaa !5444
  %67 = icmp ne i8 %66, 0, !dbg !11359
  %68 = and i1 %64, %67, !dbg !11360
  br i1 %68, label %69, label %172, !dbg !11360

; <label>:69:                                     ; preds = %63
  %70 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 2, !dbg !11361
  %71 = load i16, i16* %70, align 8, !dbg !11361, !tbaa !10836
  %72 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 3, !dbg !11362
  %73 = load i16, i16* %72, align 2, !dbg !11362, !tbaa !10843
  %74 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %22, i32 4, !dbg !11363
  %75 = load i16, i16* %74, align 4, !dbg !11363, !tbaa !10846
  tail call void @ukplat_lcpu_restore_irqf(i64 %44) #10, !dbg !11364
  %76 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** @select_cb_list, align 8, !dbg !11383, !tbaa !1426
  %77 = icmp eq %struct.lwip_select_cb* %76, null, !dbg !11384
  br i1 %77, label %171, label %78, !dbg !11385

; <label>:78:                                     ; preds = %69
  %79 = icmp eq i16 %75, 0, !dbg !11386
  %80 = icmp eq i16 %73, 0, !dbg !11387
  %81 = icmp slt i16 %71, 1, !dbg !11388
  %82 = lshr i64 %22, 6
  %83 = and i64 %22, 63
  %84 = shl i64 1, %83
  br label %85, !dbg !11385

; <label>:85:                                     ; preds = %167, %78
  %86 = phi %struct.lwip_select_cb* [ %76, %78 ], [ %169, %167 ]
  %87 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %86, i64 0, i32 7, !dbg !11389
  %88 = load i32, i32* %87, align 4, !dbg !11389, !tbaa !11390
  %89 = icmp eq i32 %88, 0, !dbg !11391
  br i1 %89, label %90, label %167, !dbg !11392

; <label>:90:                                     ; preds = %85
  %91 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %86, i64 0, i32 5, !dbg !11394
  %92 = load %struct.pollfd*, %struct.pollfd** %91, align 8, !dbg !11394, !tbaa !4372
  %93 = icmp eq %struct.pollfd* %92, null, !dbg !11396
  br i1 %93, label %124, label %94, !dbg !11397

; <label>:94:                                     ; preds = %90
  %95 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %86, i64 0, i32 6, !dbg !11421
  %96 = load i32, i32* %95, align 8, !dbg !11421, !tbaa !4376
  %97 = icmp eq i32 %96, 0, !dbg !11422
  br i1 %97, label %122, label %98, !dbg !11423

; <label>:98:                                     ; preds = %94
  %99 = zext i32 %96 to i64
  br label %100, !dbg !11423

; <label>:100:                                    ; preds = %119, %98
  %101 = phi i64 [ 0, %98 ], [ %120, %119 ]
  %102 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %92, i64 %101, i32 0, !dbg !11424
  %103 = load i32, i32* %102, align 4, !dbg !11424, !tbaa !4126
  %104 = icmp eq i32 %103, %20, !dbg !11426
  br i1 %104, label %105, label %119, !dbg !11427

; <label>:105:                                    ; preds = %100
  br i1 %81, label %111, label %106, !dbg !11428

; <label>:106:                                    ; preds = %105
  %107 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %92, i64 %101, i32 1, !dbg !11431
  %108 = load i16, i16* %107, align 4, !dbg !11431, !tbaa !4215
  %109 = and i16 %108, 1, !dbg !11432
  %110 = icmp eq i16 %109, 0, !dbg !11433
  br i1 %110, label %111, label %122, !dbg !11434

; <label>:111:                                    ; preds = %106, %105
  br i1 %80, label %118, label %112, !dbg !11435

; <label>:112:                                    ; preds = %111
  %113 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %92, i64 %101, i32 1, !dbg !11437
  %114 = load i16, i16* %113, align 4, !dbg !11437, !tbaa !4215
  %115 = and i16 %114, 2, !dbg !11438
  %116 = or i16 %115, %75, !dbg !11439
  %117 = icmp eq i16 %116, 0, !dbg !11439
  br i1 %117, label %119, label %122, !dbg !11439

; <label>:118:                                    ; preds = %111
  br i1 %79, label %119, label %122, !dbg !11440

; <label>:119:                                    ; preds = %118, %112, %100
  %120 = add nuw nsw i64 %101, 1, !dbg !11441
  %121 = icmp ult i64 %120, %99, !dbg !11422
  br i1 %121, label %100, label %122, !dbg !11423, !llvm.loop !11442

; <label>:122:                                    ; preds = %119, %118, %112, %106, %94
  %123 = phi i32 [ 0, %94 ], [ 0, %119 ], [ 1, %106 ], [ 1, %112 ], [ 1, %118 ], !dbg !11445
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11446
  br label %162, !dbg !11447

; <label>:124:                                    ; preds = %90
  br i1 %81, label %135, label %125, !dbg !11448

; <label>:125:                                    ; preds = %124
  %126 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %86, i64 0, i32 2, !dbg !11450
  %127 = load %struct._types_fd_set*, %struct._types_fd_set** %126, align 8, !dbg !11450, !tbaa !5344
  %128 = icmp eq %struct._types_fd_set* %127, null, !dbg !11454
  br i1 %128, label %135, label %129, !dbg !11455

; <label>:129:                                    ; preds = %125
  %130 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %127, i64 0, i32 0, i64 %82, !dbg !11456
  %131 = load i64, i64* %130, align 8, !dbg !11456, !tbaa !2645
  %132 = and i64 %131, %84, !dbg !11456
  %133 = icmp ne i64 %132, 0, !dbg !11456
  %134 = zext i1 %133 to i32, !dbg !11457
  br label %135, !dbg !11457

; <label>:135:                                    ; preds = %129, %125, %124
  %136 = phi i32 [ 0, %125 ], [ 0, %124 ], [ %134, %129 ], !dbg !11458
  %137 = icmp ne i32 %136, 0, !dbg !11459
  %138 = or i1 %80, %137, !dbg !11463
  br i1 %138, label %149, label %139, !dbg !11463

; <label>:139:                                    ; preds = %135
  %140 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %86, i64 0, i32 3, !dbg !11464
  %141 = load %struct._types_fd_set*, %struct._types_fd_set** %140, align 8, !dbg !11464, !tbaa !5347
  %142 = icmp eq %struct._types_fd_set* %141, null, !dbg !11465
  br i1 %142, label %149, label %143, !dbg !11466

; <label>:143:                                    ; preds = %139
  %144 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %141, i64 0, i32 0, i64 %82, !dbg !11467
  %145 = load i64, i64* %144, align 8, !dbg !11467, !tbaa !2645
  %146 = and i64 %145, %84, !dbg !11467
  %147 = icmp ne i64 %146, 0, !dbg !11467
  %148 = zext i1 %147 to i32, !dbg !11468
  br label %149, !dbg !11468

; <label>:149:                                    ; preds = %143, %139, %135
  %150 = phi i32 [ %136, %135 ], [ 0, %139 ], [ %148, %143 ], !dbg !11469
  %151 = icmp ne i32 %150, 0, !dbg !11471
  %152 = or i1 %79, %151, !dbg !11475
  br i1 %152, label %162, label %153, !dbg !11475

; <label>:153:                                    ; preds = %149
  %154 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %86, i64 0, i32 4, !dbg !11476
  %155 = load %struct._types_fd_set*, %struct._types_fd_set** %154, align 8, !dbg !11476, !tbaa !5350
  %156 = icmp eq %struct._types_fd_set* %155, null, !dbg !11477
  br i1 %156, label %167, label %157, !dbg !11478

; <label>:157:                                    ; preds = %153
  %158 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %155, i64 0, i32 0, i64 %82, !dbg !11479
  %159 = load i64, i64* %158, align 8, !dbg !11479, !tbaa !2645
  %160 = and i64 %159, %84, !dbg !11479
  %161 = icmp eq i64 %160, 0, !dbg !11479
  br i1 %161, label %167, label %165

; <label>:162:                                    ; preds = %149, %122
  %163 = phi i32 [ %123, %122 ], [ %150, %149 ], !dbg !11469
  %164 = icmp eq i32 %163, 0, !dbg !11480
  br i1 %164, label %167, label %165, !dbg !11482

; <label>:165:                                    ; preds = %162, %157
  store i32 1, i32* %87, align 4, !dbg !11483, !tbaa !11390
  %166 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %86, i64 0, i32 8, !dbg !11485
  tail call void @sys_sem_signal(%struct.sys_sem_t* nonnull %166) #10, !dbg !11486
  br label %167, !dbg !11487

; <label>:167:                                    ; preds = %165, %162, %157, %153, %85
  %168 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %86, i64 0, i32 0, !dbg !11488
  %169 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** %168, align 8, !dbg !11383, !tbaa !1426
  %170 = icmp eq %struct.lwip_select_cb* %169, null, !dbg !11384
  br i1 %170, label %171, label %85, !dbg !11385, !llvm.loop !11489

; <label>:171:                                    ; preds = %167, %69
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11492
  br label %173, !dbg !11493

; <label>:172:                                    ; preds = %50, %58, %63
  tail call void @ukplat_lcpu_restore_irqf(i64 %44) #10, !dbg !11494
  br label %173

; <label>:173:                                    ; preds = %42, %171, %172, %3, %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11496
  ret void, !dbg !11496
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_write(i32, i8*, i64) local_unnamed_addr #0 !dbg !11497 {
  %4 = tail call i64 @lwip_send(i32 %0, i8* %1, i64 %2, i32 0) #8, !dbg !11507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11508
  ret i64 %4, !dbg !11508
}

; Function Attrs: noredzone nounwind
define internal fastcc i32 @lwip_selscan(i32, %struct._types_fd_set* readonly, %struct._types_fd_set* readonly, %struct._types_fd_set* readonly, %struct._types_fd_set* nocapture, %struct._types_fd_set* nocapture, %struct._types_fd_set* nocapture) unnamed_addr #0 !dbg !11509 {
  %8 = alloca %struct._types_fd_set, align 8
  %9 = alloca %struct._types_fd_set, align 8
  %10 = alloca %struct._types_fd_set, align 8
  %11 = bitcast %struct._types_fd_set* %8 to i8*, !dbg !11553
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !11553
  %12 = bitcast %struct._types_fd_set* %9 to i8*, !dbg !11553
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6, !dbg !11553
  %13 = bitcast %struct._types_fd_set* %10 to i8*, !dbg !11553
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6, !dbg !11553
  %14 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !11555
  store i8 0, i8* %11, align 8, !dbg !11555, !tbaa !1696
  %15 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !11555
  store i8 0, i8* %14, align 1, !dbg !11555, !tbaa !1696
  %16 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !11555
  store i8 0, i8* %15, align 2, !dbg !11555, !tbaa !1696
  %17 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !11555
  store i8 0, i8* %16, align 1, !dbg !11555, !tbaa !1696
  %18 = getelementptr inbounds i8, i8* %11, i64 5, !dbg !11555
  store i8 0, i8* %17, align 4, !dbg !11555, !tbaa !1696
  %19 = getelementptr inbounds i8, i8* %11, i64 6, !dbg !11555
  store i8 0, i8* %18, align 1, !dbg !11555, !tbaa !1696
  %20 = getelementptr inbounds i8, i8* %11, i64 7, !dbg !11555
  store i8 0, i8* %19, align 2, !dbg !11555, !tbaa !1696
  store i8 0, i8* %20, align 1, !dbg !11555, !tbaa !1696
  %21 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !11559
  store i8 0, i8* %12, align 8, !dbg !11559, !tbaa !1696
  %22 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !11559
  store i8 0, i8* %21, align 1, !dbg !11559, !tbaa !1696
  %23 = getelementptr inbounds i8, i8* %12, i64 3, !dbg !11559
  store i8 0, i8* %22, align 2, !dbg !11559, !tbaa !1696
  %24 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !11559
  store i8 0, i8* %23, align 1, !dbg !11559, !tbaa !1696
  %25 = getelementptr inbounds i8, i8* %12, i64 5, !dbg !11559
  store i8 0, i8* %24, align 4, !dbg !11559, !tbaa !1696
  %26 = getelementptr inbounds i8, i8* %12, i64 6, !dbg !11559
  store i8 0, i8* %25, align 1, !dbg !11559, !tbaa !1696
  %27 = getelementptr inbounds i8, i8* %12, i64 7, !dbg !11559
  store i8 0, i8* %26, align 2, !dbg !11559, !tbaa !1696
  store i8 0, i8* %27, align 1, !dbg !11559, !tbaa !1696
  %28 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !11563
  store i8 0, i8* %13, align 8, !dbg !11563, !tbaa !1696
  %29 = getelementptr inbounds i8, i8* %13, i64 2, !dbg !11563
  store i8 0, i8* %28, align 1, !dbg !11563, !tbaa !1696
  %30 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !11563
  store i8 0, i8* %29, align 2, !dbg !11563, !tbaa !1696
  %31 = getelementptr inbounds i8, i8* %13, i64 4, !dbg !11563
  store i8 0, i8* %30, align 1, !dbg !11563, !tbaa !1696
  %32 = getelementptr inbounds i8, i8* %13, i64 5, !dbg !11563
  store i8 0, i8* %31, align 4, !dbg !11563, !tbaa !1696
  %33 = getelementptr inbounds i8, i8* %13, i64 6, !dbg !11563
  store i8 0, i8* %32, align 1, !dbg !11563, !tbaa !1696
  %34 = getelementptr inbounds i8, i8* %13, i64 7, !dbg !11563
  store i8 0, i8* %33, align 2, !dbg !11563, !tbaa !1696
  store i8 0, i8* %34, align 1, !dbg !11563, !tbaa !1696
  %35 = icmp sgt i32 %0, 0, !dbg !11567
  br i1 %35, label %43, label %36, !dbg !11568

; <label>:36:                                     ; preds = %7
  %37 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0
  %38 = load i64, i64* %37, align 8, !dbg !11569, !tbaa !1696
  %39 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %9, i64 0, i32 0, i64 0
  %40 = load i64, i64* %39, align 8, !dbg !11570, !tbaa !1696
  %41 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %10, i64 0, i32 0, i64 0
  %42 = load i64, i64* %41, align 8, !dbg !11571, !tbaa !1696
  br label %157, !dbg !11568

; <label>:43:                                     ; preds = %7
  %44 = icmp ne %struct._types_fd_set* %1, null
  %45 = icmp eq %struct._types_fd_set* %2, null
  %46 = icmp eq %struct._types_fd_set* %3, null
  %47 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0
  %48 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %9, i64 0, i32 0, i64 0
  %49 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %10, i64 0, i32 0, i64 0
  %50 = load i64, i64* %47, align 8, !dbg !11572, !tbaa !2645
  %51 = load i64, i64* %48, align 8, !dbg !11575, !tbaa !2645
  %52 = load i64, i64* %49, align 8, !dbg !11578, !tbaa !2645
  %53 = sext i32 %0 to i64, !dbg !11568
  br label %54, !dbg !11568

; <label>:54:                                     ; preds = %43, %149
  %55 = phi i64 [ 0, %43 ], [ %154, %149 ]
  %56 = phi i64 [ %52, %43 ], [ %150, %149 ]
  %57 = phi i64 [ %51, %43 ], [ %151, %149 ]
  %58 = phi i64 [ %50, %43 ], [ %152, %149 ]
  %59 = phi i32 [ 0, %43 ], [ %153, %149 ]
  br i1 %44, label %60, label %68, !dbg !11581

; <label>:60:                                     ; preds = %54
  %61 = lshr i64 %55, 6, !dbg !11583
  %62 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %61, !dbg !11583
  %63 = load i64, i64* %62, align 8, !dbg !11583, !tbaa !2645
  %64 = and i64 %55, 63, !dbg !11583
  %65 = shl i64 1, %64, !dbg !11583
  %66 = and i64 %63, %65, !dbg !11583
  %67 = icmp eq i64 %66, 0, !dbg !11583
  br i1 %67, label %68, label %86, !dbg !11584

; <label>:68:                                     ; preds = %60, %54
  br i1 %45, label %77, label %69, !dbg !11585

; <label>:69:                                     ; preds = %68
  %70 = lshr i64 %55, 6, !dbg !11586
  %71 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %70, !dbg !11586
  %72 = load i64, i64* %71, align 8, !dbg !11586, !tbaa !2645
  %73 = and i64 %55, 63, !dbg !11586
  %74 = shl i64 1, %73, !dbg !11586
  %75 = and i64 %72, %74, !dbg !11586
  %76 = icmp eq i64 %75, 0, !dbg !11586
  br i1 %76, label %77, label %86, !dbg !11587

; <label>:77:                                     ; preds = %69, %68
  br i1 %46, label %149, label %78, !dbg !11588

; <label>:78:                                     ; preds = %77
  %79 = lshr i64 %55, 6, !dbg !11589
  %80 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %79, !dbg !11589
  %81 = load i64, i64* %80, align 8, !dbg !11589, !tbaa !2645
  %82 = and i64 %55, 63, !dbg !11589
  %83 = shl i64 1, %82, !dbg !11589
  %84 = and i64 %81, %83, !dbg !11589
  %85 = icmp eq i64 %84, 0, !dbg !11589
  br i1 %85, label %149, label %86, !dbg !11590

; <label>:86:                                     ; preds = %60, %69, %78
  %87 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !11591
  %88 = icmp ugt i64 %55, 63, !dbg !11599
  %89 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %55, !dbg !11600
  %90 = select i1 %88, %struct.lwip_sock* null, %struct.lwip_sock* %89, !dbg !11599
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11603
  br i1 %88, label %148, label %91, !dbg !11605

; <label>:91:                                     ; preds = %86
  %92 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %90, i64 0, i32 1, !dbg !11606
  %93 = bitcast %union.lwip_sock_lastdata* %92 to i8**, !dbg !11607
  %94 = load i8*, i8** %93, align 8, !dbg !11607, !tbaa !1696
  %95 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %90, i64 0, i32 2, !dbg !11609
  %96 = load i16, i16* %95, align 8, !dbg !11609, !tbaa !10836
  %97 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %90, i64 0, i32 3, !dbg !11611
  %98 = load i16, i16* %97, align 2, !dbg !11611, !tbaa !10843
  %99 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %90, i64 0, i32 4, !dbg !11613
  %100 = load i16, i16* %99, align 4, !dbg !11613, !tbaa !10846
  tail call void @ukplat_lcpu_restore_irqf(i64 %87) #10, !dbg !11615
  br i1 %44, label %101, label %116, !dbg !11616

; <label>:101:                                    ; preds = %91
  %102 = lshr i64 %55, 6, !dbg !11617
  %103 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %102, !dbg !11617
  %104 = load i64, i64* %103, align 8, !dbg !11617, !tbaa !2645
  %105 = and i64 %55, 63, !dbg !11617
  %106 = shl i64 1, %105, !dbg !11617
  %107 = and i64 %104, %106, !dbg !11617
  %108 = icmp eq i64 %107, 0, !dbg !11617
  br i1 %108, label %116, label %109, !dbg !11618

; <label>:109:                                    ; preds = %101
  %110 = icmp ne i8* %94, null, !dbg !11619
  %111 = icmp sgt i16 %96, 0, !dbg !11620
  %112 = or i1 %110, %111, !dbg !11621
  br i1 %112, label %113, label %116, !dbg !11621

; <label>:113:                                    ; preds = %109
  %114 = or i64 %58, %106, !dbg !11572
  %115 = add nsw i32 %59, 1, !dbg !11622
  br label %116, !dbg !11623

; <label>:116:                                    ; preds = %109, %101, %113, %91
  %117 = phi i64 [ %114, %113 ], [ %58, %101 ], [ %58, %91 ], [ %58, %109 ]
  %118 = phi i32 [ %115, %113 ], [ %59, %101 ], [ %59, %91 ], [ %59, %109 ], !dbg !11624
  br i1 %45, label %132, label %119, !dbg !11625

; <label>:119:                                    ; preds = %116
  %120 = lshr i64 %55, 6, !dbg !11626
  %121 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %120, !dbg !11626
  %122 = load i64, i64* %121, align 8, !dbg !11626, !tbaa !2645
  %123 = and i64 %55, 63, !dbg !11626
  %124 = shl i64 1, %123, !dbg !11626
  %125 = and i64 %122, %124, !dbg !11626
  %126 = icmp eq i64 %125, 0, !dbg !11626
  %127 = icmp eq i16 %98, 0, !dbg !11627
  %128 = or i1 %127, %126, !dbg !11628
  br i1 %128, label %132, label %129, !dbg !11628

; <label>:129:                                    ; preds = %119
  %130 = or i64 %57, %124, !dbg !11575
  %131 = add nsw i32 %118, 1, !dbg !11629
  br label %132, !dbg !11630

; <label>:132:                                    ; preds = %119, %116, %129
  %133 = phi i64 [ %130, %129 ], [ %57, %119 ], [ %57, %116 ]
  %134 = phi i32 [ %131, %129 ], [ %118, %119 ], [ %118, %116 ], !dbg !11631
  br i1 %46, label %149, label %135, !dbg !11632

; <label>:135:                                    ; preds = %132
  %136 = lshr i64 %55, 6, !dbg !11633
  %137 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %136, !dbg !11633
  %138 = load i64, i64* %137, align 8, !dbg !11633, !tbaa !2645
  %139 = and i64 %55, 63, !dbg !11633
  %140 = shl i64 1, %139, !dbg !11633
  %141 = and i64 %138, %140, !dbg !11633
  %142 = icmp eq i64 %141, 0, !dbg !11633
  %143 = icmp eq i16 %100, 0, !dbg !11634
  %144 = or i1 %143, %142, !dbg !11635
  br i1 %144, label %149, label %145, !dbg !11635

; <label>:145:                                    ; preds = %135
  %146 = or i64 %56, %140, !dbg !11578
  %147 = add nsw i32 %134, 1, !dbg !11636
  br label %149, !dbg !11637

; <label>:148:                                    ; preds = %86
  store i64 %58, i64* %47, align 8, !dbg !11572, !tbaa !2645
  store i64 %57, i64* %48, align 8, !dbg !11575, !tbaa !2645
  store i64 %56, i64* %49, align 8, !dbg !11578, !tbaa !2645
  tail call void @ukplat_lcpu_restore_irqf(i64 %87) #10, !dbg !11638
  br label %167, !dbg !11640

; <label>:149:                                    ; preds = %145, %132, %135, %78, %77
  %150 = phi i64 [ %56, %78 ], [ %56, %77 ], [ %146, %145 ], [ %56, %135 ], [ %56, %132 ]
  %151 = phi i64 [ %57, %78 ], [ %57, %77 ], [ %133, %145 ], [ %133, %135 ], [ %133, %132 ]
  %152 = phi i64 [ %58, %78 ], [ %58, %77 ], [ %117, %145 ], [ %117, %135 ], [ %117, %132 ]
  %153 = phi i32 [ %59, %78 ], [ %59, %77 ], [ %147, %145 ], [ %134, %135 ], [ %134, %132 ], !dbg !11624
  %154 = add nuw nsw i64 %55, 1, !dbg !11641
  %155 = icmp slt i64 %154, %53, !dbg !11567
  br i1 %155, label %54, label %156, !dbg !11568, !llvm.loop !11642

; <label>:156:                                    ; preds = %149
  store i64 %152, i64* %47, align 8, !dbg !11572, !tbaa !2645
  store i64 %151, i64* %48, align 8, !dbg !11575, !tbaa !2645
  store i64 %150, i64* %49, align 8, !dbg !11578, !tbaa !2645
  br label %157, !dbg !11568

; <label>:157:                                    ; preds = %36, %156
  %158 = phi i64 [ %150, %156 ], [ %42, %36 ], !dbg !11571
  %159 = phi i64 [ %151, %156 ], [ %40, %36 ], !dbg !11570
  %160 = phi i64 [ %152, %156 ], [ %38, %36 ], !dbg !11569
  %161 = phi i32 [ %153, %156 ], [ 0, %36 ], !dbg !11644
  %162 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %4, i64 0, i32 0, i64 0, !dbg !11569
  store i64 %160, i64* %162, align 8, !dbg !11569, !tbaa !1696
  %163 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %5, i64 0, i32 0, i64 0, !dbg !11570
  store i64 %159, i64* %163, align 8, !dbg !11570, !tbaa !1696
  %164 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %6, i64 0, i32 0, i64 0, !dbg !11571
  store i64 %158, i64* %164, align 8, !dbg !11571, !tbaa !1696
  %165 = icmp sgt i32 %161, -1, !dbg !11645
  br i1 %165, label %167, label %166, !dbg !11648

; <label>:166:                                    ; preds = %157
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #8, !dbg !11649
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11652
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11652
  unreachable, !dbg !11652

; <label>:167:                                    ; preds = %157, %148
  %168 = phi i32 [ -1, %148 ], [ %161, %157 ], !dbg !11624
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6, !dbg !11656
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6, !dbg !11656
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !11656
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11656
  ret i32 %168, !dbg !11656
}

; Function Attrs: noredzone
declare dso_local signext i8 @sys_sem_new(%struct.sys_sem_t*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @sys_arch_sem_wait(%struct.sys_sem_t*, i32) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc void @lwip_unlink_select_cb(%struct.lwip_select_cb* nocapture readonly) unnamed_addr #0 !dbg !11657 {
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !11661
  %2 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %0, i64 0, i32 0, !dbg !11662
  %3 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** %2, align 8, !dbg !11662, !tbaa !4435
  %4 = icmp eq %struct.lwip_select_cb* %3, null, !dbg !11664
  %5 = ptrtoint %struct.lwip_select_cb* %3 to i64, !dbg !11665
  %6 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %0, i64 0, i32 1, !dbg !11666
  br i1 %4, label %12, label %7, !dbg !11665

; <label>:7:                                      ; preds = %1
  %8 = bitcast %struct.lwip_select_cb** %6 to i64*, !dbg !11668
  %9 = load i64, i64* %8, align 8, !dbg !11668, !tbaa !4443
  %10 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %3, i64 0, i32 1, !dbg !11669
  %11 = bitcast %struct.lwip_select_cb** %10 to i64*, !dbg !11670
  store i64 %9, i64* %11, align 8, !dbg !11670, !tbaa !4443
  br label %12, !dbg !11671

; <label>:12:                                     ; preds = %1, %7
  %13 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** @select_cb_list, align 8, !dbg !11672, !tbaa !1426
  %14 = icmp eq %struct.lwip_select_cb* %13, %0, !dbg !11674
  %15 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** %6, align 8, !dbg !11675, !tbaa !4443
  %16 = icmp eq %struct.lwip_select_cb* %15, null, !dbg !11675
  br i1 %14, label %17, label %19, !dbg !11679

; <label>:17:                                     ; preds = %12
  br i1 %16, label %23, label %18, !dbg !11680

; <label>:18:                                     ; preds = %17
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)) #8, !dbg !11683
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11687
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11687
  unreachable, !dbg !11687

; <label>:19:                                     ; preds = %12
  br i1 %16, label %20, label %21, !dbg !11691

; <label>:20:                                     ; preds = %19
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0)) #8, !dbg !11692
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11695
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11695
  unreachable, !dbg !11695

; <label>:21:                                     ; preds = %19
  %22 = bitcast %struct.lwip_select_cb* %15 to i64*, !dbg !11699
  br label %23

; <label>:23:                                     ; preds = %17, %21
  %24 = phi i64* [ %22, %21 ], [ bitcast (%struct.lwip_select_cb** @select_cb_list to i64*), %17 ]
  store i64 %5, i64* %24, align 8, !dbg !11700, !tbaa !1426
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !11701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11702
  ret void, !dbg !11702
}

; Function Attrs: noredzone
declare dso_local void @sys_sem_free(%struct.sys_sem_t*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i32 @lwip_pollscan(%struct.pollfd* nocapture, i32, i32) unnamed_addr #0 !dbg !11703 {
  %4 = icmp eq i32 %1, 0, !dbg !11730
  br i1 %4, label %94, label %5, !dbg !11731

; <label>:5:                                      ; preds = %3
  %6 = and i32 %2, 1
  %7 = icmp eq i32 %6, 0
  %8 = and i32 %2, 2
  %9 = icmp eq i32 %8, 0
  %10 = and i32 %2, 4
  %11 = icmp eq i32 %10, 0
  %12 = zext i32 %1 to i64, !dbg !11731
  br label %13, !dbg !11731

; <label>:13:                                     ; preds = %5, %87
  %14 = phi i64 [ 0, %5 ], [ %92, %87 ]
  %15 = phi i32 [ 0, %5 ], [ %91, %87 ]
  br i1 %7, label %18, label %16, !dbg !11732

; <label>:16:                                     ; preds = %13
  %17 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %14, i32 2, !dbg !11733
  store i16 0, i16* %17, align 2, !dbg !11736, !tbaa !4236
  br label %18, !dbg !11737

; <label>:18:                                     ; preds = %13, %16
  %19 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %14, i32 0, !dbg !11738
  %20 = load i32, i32* %19, align 4, !dbg !11738, !tbaa !4126
  %21 = icmp sgt i32 %20, -1, !dbg !11739
  %22 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %14, i32 2, !dbg !11740
  br i1 %21, label %23, label %87, !dbg !11742

; <label>:23:                                     ; preds = %18
  %24 = load i16, i16* %22, align 2, !dbg !11743, !tbaa !4236
  %25 = and i16 %24, 8, !dbg !11744
  %26 = icmp eq i16 %25, 0, !dbg !11745
  br i1 %26, label %27, label %87, !dbg !11746

; <label>:27:                                     ; preds = %23
  %28 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !11747
  %29 = load i32, i32* %19, align 4, !dbg !11750, !tbaa !4126
  %30 = icmp ugt i32 %29, 63, !dbg !11756
  %31 = sext i32 %29 to i64, !dbg !11757
  %32 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %31, !dbg !11757
  %33 = select i1 %30, %struct.lwip_sock* null, %struct.lwip_sock* %32, !dbg !11756
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11760
  br i1 %30, label %84, label %34, !dbg !11762

; <label>:34:                                     ; preds = %27
  %35 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %33, i64 0, i32 1, !dbg !11763
  %36 = bitcast %union.lwip_sock_lastdata* %35 to i8**, !dbg !11764
  %37 = load i8*, i8** %36, align 8, !dbg !11764, !tbaa !1696
  %38 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %33, i64 0, i32 2, !dbg !11766
  %39 = load i16, i16* %38, align 8, !dbg !11766, !tbaa !10836
  %40 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %33, i64 0, i32 3, !dbg !11768
  %41 = load i16, i16* %40, align 2, !dbg !11768, !tbaa !10843
  %42 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %33, i64 0, i32 4, !dbg !11770
  %43 = load i16, i16* %42, align 4, !dbg !11770, !tbaa !10846
  br i1 %9, label %49, label %44, !dbg !11772

; <label>:44:                                     ; preds = %34
  %45 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %33, i64 0, i32 5, !dbg !11773
  %46 = load i8, i8* %45, align 2, !dbg !11776, !tbaa !5444
  %47 = add i8 %46, 1, !dbg !11776
  store i8 %47, i8* %45, align 2, !dbg !11776, !tbaa !5444
  %48 = icmp eq i8 %47, 0, !dbg !11777
  br i1 %48, label %82, label %57, !dbg !11779

; <label>:49:                                     ; preds = %34
  br i1 %11, label %57, label %50, !dbg !11780

; <label>:50:                                     ; preds = %49
  %51 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %33, i64 0, i32 5, !dbg !11781
  %52 = load i8, i8* %51, align 2, !dbg !11781, !tbaa !5444
  %53 = icmp eq i8 %52, 0, !dbg !11781
  br i1 %53, label %54, label %55, !dbg !11786

; <label>:54:                                     ; preds = %50
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0)) #8, !dbg !11787
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11790
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11790
  unreachable, !dbg !11790

; <label>:55:                                     ; preds = %50
  %56 = add i8 %52, -1, !dbg !11794
  store i8 %56, i8* %51, align 2, !dbg !11794, !tbaa !5444
  br label %57, !dbg !11797

; <label>:57:                                     ; preds = %49, %55, %44
  tail call void @ukplat_lcpu_restore_irqf(i64 %28) #10, !dbg !11798
  %58 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %14, i32 1, !dbg !11799
  %59 = load i16, i16* %58, align 4, !dbg !11799, !tbaa !4215
  %60 = and i16 %59, 1, !dbg !11801
  %61 = icmp eq i16 %60, 0, !dbg !11802
  br i1 %61, label %69, label %62, !dbg !11803

; <label>:62:                                     ; preds = %57
  %63 = icmp ne i8* %37, null, !dbg !11804
  %64 = icmp sgt i16 %39, 0, !dbg !11805
  %65 = or i1 %63, %64, !dbg !11806
  br i1 %65, label %66, label %69, !dbg !11806

; <label>:66:                                     ; preds = %62
  %67 = load i16, i16* %22, align 2, !dbg !11807, !tbaa !4236
  %68 = or i16 %67, 1, !dbg !11807
  store i16 %68, i16* %22, align 2, !dbg !11807, !tbaa !4236
  br label %69, !dbg !11809

; <label>:69:                                     ; preds = %62, %57, %66
  %70 = and i16 %59, 2, !dbg !11810
  %71 = icmp eq i16 %70, 0, !dbg !11812
  %72 = icmp eq i16 %41, 0, !dbg !11813
  %73 = or i1 %72, %71, !dbg !11814
  br i1 %73, label %77, label %74, !dbg !11814

; <label>:74:                                     ; preds = %69
  %75 = load i16, i16* %22, align 2, !dbg !11815, !tbaa !4236
  %76 = or i16 %75, 2, !dbg !11815
  store i16 %76, i16* %22, align 2, !dbg !11815, !tbaa !4236
  br label %77, !dbg !11817

; <label>:77:                                     ; preds = %69, %74
  %78 = icmp eq i16 %43, 0, !dbg !11818
  br i1 %78, label %87, label %79, !dbg !11820

; <label>:79:                                     ; preds = %77
  %80 = load i16, i16* %22, align 2, !dbg !11821, !tbaa !4236
  %81 = or i16 %80, 4, !dbg !11821
  store i16 %81, i16* %22, align 2, !dbg !11821, !tbaa !4236
  br label %87, !dbg !11823

; <label>:82:                                     ; preds = %44
  %83 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %33, i64 0, i32 5, !dbg !11773
  store i8 %46, i8* %83, align 2, !dbg !11824, !tbaa !5444
  tail call void @ukplat_lcpu_restore_irqf(i64 %28) #10, !dbg !11826
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #8, !dbg !11827
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11832
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11832
  unreachable, !dbg !11832

; <label>:84:                                     ; preds = %27
  tail call void @ukplat_lcpu_restore_irqf(i64 %28) #10, !dbg !11836
  %85 = load i16, i16* %22, align 2, !dbg !11838, !tbaa !4236
  %86 = or i16 %85, 8, !dbg !11838
  store i16 %86, i16* %22, align 2, !dbg !11838, !tbaa !4236
  br label %94, !dbg !11839

; <label>:87:                                     ; preds = %18, %79, %77, %23
  %88 = load i16, i16* %22, align 2, !dbg !11840, !tbaa !4236
  %89 = icmp ne i16 %88, 0, !dbg !11841
  %90 = zext i1 %89 to i32, !dbg !11842
  %91 = add nuw nsw i32 %15, %90, !dbg !11842
  %92 = add nuw nsw i64 %14, 1, !dbg !11843
  %93 = icmp ult i64 %92, %12, !dbg !11730
  br i1 %93, label %13, label %94, !dbg !11731, !llvm.loop !11844

; <label>:94:                                     ; preds = %87, %3, %84
  %95 = phi i32 [ -1, %84 ], [ 0, %3 ], [ %91, %87 ], !dbg !11846
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11847
  ret i32 %95, !dbg !11847
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_shutdown(%struct.netconn*, i8 zeroext, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i32 @lwip_getaddrname(i32, %struct.sockaddr*, i32* nocapture, i8 zeroext) unnamed_addr #0 !dbg !11848 {
  %5 = alloca %union.sockaddr_aligned, align 4
  %6 = alloca %struct.ip_addr, align 16
  %7 = alloca i16, align 2
  %8 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 0, !dbg !11883
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %8) #6, !dbg !11883
  %9 = bitcast %struct.ip_addr* %6 to i8*, !dbg !11884
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6, !dbg !11884
  %10 = bitcast i16* %7 to i8*, !dbg !11885
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #6, !dbg !11885
  %11 = icmp ugt i32 %0, 63, !dbg !11895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11896
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11897
  br i1 %11, label %17, label %12, !dbg !11898

; <label>:12:                                     ; preds = %4
  %13 = sext i32 %0 to i64, !dbg !11899
  %14 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %13, i32 0, !dbg !11900
  %15 = load %struct.netconn*, %struct.netconn** %14, align 8, !dbg !11900, !tbaa !1602
  %16 = icmp eq %struct.netconn* %15, null, !dbg !11901
  br i1 %16, label %17, label %33, !dbg !11902

; <label>:17:                                     ; preds = %12, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11903
  %18 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11904, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11907
  %19 = icmp ult i64 %18, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11908
  br i1 %19, label %25, label %20, !dbg !11908

; <label>:20:                                     ; preds = %17
  %21 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11909, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11912
  %22 = icmp ugt i64 %21, ptrtoint ([0 x i8]* @_end to i64), !dbg !11908
  br i1 %22, label %25, label %23, !dbg !11913

; <label>:23:                                     ; preds = %20
  %24 = tail call i32* @__errno() #10, !dbg !11916
  store i32 9, i32* %24, align 4, !dbg !11917, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11918
  br label %32, !dbg !11919

; <label>:25:                                     ; preds = %20, %17
  %26 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11920, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11924
  %27 = and i64 %26, -65536, !dbg !11926
  %28 = or i64 %27, 4097, !dbg !11926
  %29 = add nsw i64 %28, -1, !dbg !11926
  %30 = inttoptr i64 %29 to i32*, !dbg !11927
  %31 = load i32, i32* %30, align 4096, !dbg !11928, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11929
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %31, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11930, !srcloc !1640
  br label %32

; <label>:32:                                     ; preds = %25, %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11931
  br label %122, !dbg !11932

; <label>:33:                                     ; preds = %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11903
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11931
  %34 = call signext i8 @netconn_getaddr(%struct.netconn* nonnull %15, %struct.ip_addr* nonnull %6, i16* nonnull %7, i8 zeroext %3) #10, !dbg !11935
  %35 = icmp eq i8 %34, 0, !dbg !11937
  br i1 %35, label %54, label %36, !dbg !11938

; <label>:36:                                     ; preds = %33
  %37 = call i32 @err_to_errno(i8 signext %34) #10, !dbg !11939
  %38 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11940, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11943
  %39 = icmp ult i64 %38, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11944
  br i1 %39, label %45, label %40, !dbg !11944

; <label>:40:                                     ; preds = %36
  %41 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11945, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11948
  %42 = icmp ugt i64 %41, ptrtoint ([0 x i8]* @_end to i64), !dbg !11944
  br i1 %42, label %45, label %43, !dbg !11949

; <label>:43:                                     ; preds = %40
  %44 = call i32* @__errno() #10, !dbg !11950
  store i32 %37, i32* %44, align 4, !dbg !11953, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11954
  br label %122, !dbg !11955

; <label>:45:                                     ; preds = %40, %36
  %46 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11956, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11960
  %47 = and i64 %46, -65536, !dbg !11962
  %48 = or i64 %47, 4097, !dbg !11962
  %49 = add nsw i64 %48, -1, !dbg !11962
  %50 = inttoptr i64 %49 to i32*, !dbg !11963
  %51 = load i32, i32* %50, align 4096, !dbg !11964, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11965
  %52 = sub nsw i32 0, %37, !dbg !11966
  %53 = sext i32 %52 to i64, !dbg !11966
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %53, i32 %51, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11966, !srcloc !11967
  br label %122

; <label>:54:                                     ; preds = %33
  %55 = load %struct.netconn*, %struct.netconn** %14, align 8, !dbg !11968, !tbaa !1602
  %56 = getelementptr inbounds %struct.netconn, %struct.netconn* %55, i64 0, i32 0, !dbg !11968
  %57 = load i32, i32* %56, align 8, !dbg !11968, !tbaa !1647
  %58 = and i32 %57, 8, !dbg !11968
  %59 = icmp ne i32 %58, 0, !dbg !11968
  %60 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 1
  %61 = load i8, i8* %60, align 4, !dbg !11970, !tbaa !1700
  %62 = icmp eq i8 %61, 0, !dbg !11971
  %63 = and i1 %59, %62, !dbg !11972
  br i1 %63, label %64, label %71, !dbg !11972

; <label>:64:                                     ; preds = %54
  %65 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !11973
  %66 = load i32, i32* %65, align 16, !dbg !11973, !tbaa !1696
  %67 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 3, !dbg !11973
  store i32 %66, i32* %67, align 4, !dbg !11973, !tbaa !1696
  %68 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 2, !dbg !11973
  store i32 -65536, i32* %68, align 8, !dbg !11973, !tbaa !1696
  %69 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 1, !dbg !11973
  store i32 0, i32* %69, align 4, !dbg !11973, !tbaa !1696
  store i32 0, i32* %65, align 16, !dbg !11973, !tbaa !1696
  %70 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 1, !dbg !11973
  store i8 0, i8* %70, align 16, !dbg !11973, !tbaa !1696
  store i8 6, i8* %60, align 4, !dbg !11976, !tbaa !1700
  br label %72, !dbg !11978

; <label>:71:                                     ; preds = %54
  switch i8 %61, label %86 [
    i8 46, label %72
    i8 6, label %72
  ], !dbg !11978

; <label>:72:                                     ; preds = %64, %71, %71
  store i8 28, i8* %8, align 4, !dbg !11981, !tbaa !3619
  %73 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 1, !dbg !11981
  store i8 10, i8* %73, align 1, !dbg !11981, !tbaa !3622
  %74 = load i16, i16* %7, align 2, !dbg !11981, !tbaa !3312
  %75 = call zeroext i16 @lwip_htons(i16 zeroext %74) #10, !dbg !11981
  %76 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 2, !dbg !11981
  store i16 %75, i16* %76, align 2, !dbg !11981, !tbaa !3623
  %77 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 3, !dbg !11981
  store i32 0, i32* %77, align 4, !dbg !11981, !tbaa !3624
  %78 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 4, i32 0, i32 0, i64 0, !dbg !11984
  %79 = bitcast %struct.ip_addr* %6 to <4 x i32>*, !dbg !11984
  %80 = load <4 x i32>, <4 x i32>* %79, align 16, !dbg !11984, !tbaa !1696
  %81 = bitcast i32* %78 to <4 x i32>*, !dbg !11984
  store <4 x i32> %80, <4 x i32>* %81, align 4, !dbg !11984, !tbaa !1696
  %82 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 1, !dbg !11981
  %83 = load i8, i8* %82, align 16, !dbg !11981, !tbaa !1696
  %84 = zext i8 %83 to i32, !dbg !11981
  %85 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 5, !dbg !11981
  store i32 %84, i32* %85, align 4, !dbg !11981, !tbaa !3627
  br label %97, !dbg !11986

; <label>:86:                                     ; preds = %71
  store i8 16, i8* %8, align 4, !dbg !11987, !tbaa !3632
  %87 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 1, !dbg !11987
  store i8 2, i8* %87, align 1, !dbg !11987, !tbaa !3635
  %88 = load i16, i16* %7, align 2, !dbg !11987, !tbaa !3312
  %89 = call zeroext i16 @lwip_htons(i16 zeroext %88) #10, !dbg !11987
  %90 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 2, !dbg !11987
  store i16 %89, i16* %90, align 2, !dbg !11987, !tbaa !3636
  %91 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !11987
  %92 = load i32, i32* %91, align 16, !dbg !11987, !tbaa !1696
  %93 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 3, !dbg !11987
  store i32 %92, i32* %93, align 4, !dbg !11987, !tbaa !3637
  %94 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 4, !dbg !11987
  %95 = bitcast %struct.in6_addr* %94 to i8*, !dbg !11987
  %96 = call i8* @memset(i8* nonnull %95, i32 0, i64 8) #10, !dbg !11987
  br label %97

; <label>:97:                                     ; preds = %86, %72
  %98 = load i32, i32* %2, align 4, !dbg !11990, !tbaa !1492
  %99 = load i8, i8* %8, align 4, !dbg !11992, !tbaa !1696
  %100 = zext i8 %99 to i32, !dbg !11993
  %101 = icmp ugt i32 %98, %100, !dbg !11994
  br i1 %101, label %102, label %103, !dbg !11995

; <label>:102:                                    ; preds = %97
  store i32 %100, i32* %2, align 4, !dbg !11996, !tbaa !1492
  br label %103, !dbg !11998

; <label>:103:                                    ; preds = %102, %97
  %104 = phi i32 [ %100, %102 ], [ %98, %97 ], !dbg !11999
  %105 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0, !dbg !11999
  %106 = zext i32 %104 to i64, !dbg !11999
  %107 = call i8* @memcpy(i8* %105, i8* nonnull %8, i64 %106) #10, !dbg !11999
  %108 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12001, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12004
  %109 = icmp ult i64 %108, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12005
  br i1 %109, label %115, label %110, !dbg !12005

; <label>:110:                                    ; preds = %103
  %111 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12006, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12009
  %112 = icmp ugt i64 %111, ptrtoint ([0 x i8]* @_end to i64), !dbg !12005
  br i1 %112, label %115, label %113, !dbg !12010

; <label>:113:                                    ; preds = %110
  %114 = call i32* @__errno() #10, !dbg !12014
  store i32 0, i32* %114, align 4, !dbg !12015, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12016
  br label %122, !dbg !12017

; <label>:115:                                    ; preds = %110, %103
  %116 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12018, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12022
  %117 = and i64 %116, -65536, !dbg !12024
  %118 = or i64 %117, 4097, !dbg !12024
  %119 = add nsw i64 %118, -1, !dbg !12024
  %120 = inttoptr i64 %119 to i32*, !dbg !12025
  %121 = load i32, i32* %120, align 4096, !dbg !12026, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12027
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %121, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12028, !srcloc !12029
  br label %122

; <label>:122:                                    ; preds = %32, %113, %115, %43, %45
  %123 = phi i32 [ -1, %45 ], [ -1, %43 ], [ 0, %115 ], [ 0, %113 ], [ -1, %32 ], !dbg !12030
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #6, !dbg !12033
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6, !dbg !12033
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %8) #6, !dbg !12033
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12033
  ret i32 %123, !dbg !12033
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_fcntl(i32, i32, i32) local_unnamed_addr #0 !dbg !12034 {
  %4 = icmp ugt i32 %0, 63, !dbg !12090
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12091
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12092
  br i1 %4, label %10, label %5, !dbg !12093

; <label>:5:                                      ; preds = %3
  %6 = sext i32 %0 to i64, !dbg !12094
  %7 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %6, i32 0, !dbg !12095
  %8 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !12095, !tbaa !1602
  %9 = icmp eq %struct.netconn* %8, null, !dbg !12096
  br i1 %9, label %10, label %26, !dbg !12097

; <label>:10:                                     ; preds = %5, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12098
  %11 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12099, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12102
  %12 = icmp ult i64 %11, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12103
  br i1 %12, label %18, label %13, !dbg !12103

; <label>:13:                                     ; preds = %10
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12104, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12107
  %15 = icmp ugt i64 %14, ptrtoint ([0 x i8]* @_end to i64), !dbg !12103
  br i1 %15, label %18, label %16, !dbg !12108

; <label>:16:                                     ; preds = %13
  %17 = tail call i32* @__errno() #10, !dbg !12111
  store i32 9, i32* %17, align 4, !dbg !12112, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12113
  br label %25, !dbg !12114

; <label>:18:                                     ; preds = %13, %10
  %19 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12115, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12119
  %20 = and i64 %19, -65536, !dbg !12121
  %21 = or i64 %20, 4097, !dbg !12121
  %22 = add nsw i64 %21, -1, !dbg !12121
  %23 = inttoptr i64 %22 to i32*, !dbg !12122
  %24 = load i32, i32* %23, align 4096, !dbg !12123, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12124
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %24, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12125, !srcloc !1640
  br label %25

; <label>:25:                                     ; preds = %18, %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12126
  br label %124, !dbg !12129

; <label>:26:                                     ; preds = %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12098
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12126
  switch i32 %1, label %109 [
    i32 3, label %27
    i32 4, label %69
  ], !dbg !12130

; <label>:27:                                     ; preds = %26
  %28 = getelementptr inbounds %struct.netconn, %struct.netconn* %8, i64 0, i32 8, !dbg !12131
  %29 = load i8, i8* %28, align 4, !dbg !12131, !tbaa !2211
  %30 = and i8 %29, 2, !dbg !12131
  %31 = zext i8 %30 to i32, !dbg !12131
  %32 = shl nuw nsw i32 %31, 13, !dbg !12131
  %33 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12133, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12136
  %34 = icmp ult i64 %33, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12137
  br i1 %34, label %40, label %35, !dbg !12137

; <label>:35:                                     ; preds = %27
  %36 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12138, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12141
  %37 = icmp ugt i64 %36, ptrtoint ([0 x i8]* @_end to i64), !dbg !12137
  br i1 %37, label %40, label %38, !dbg !12142

; <label>:38:                                     ; preds = %35
  %39 = tail call i32* @__errno() #10, !dbg !12146
  store i32 0, i32* %39, align 4, !dbg !12147, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12148
  br label %47, !dbg !12149

; <label>:40:                                     ; preds = %35, %27
  %41 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12150, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12154
  %42 = and i64 %41, -65536, !dbg !12156
  %43 = or i64 %42, 4097, !dbg !12156
  %44 = add nsw i64 %43, -1, !dbg !12156
  %45 = inttoptr i64 %44 to i32*, !dbg !12157
  %46 = load i32, i32* %45, align 4096, !dbg !12158, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12159
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %46, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12160, !srcloc !12161
  br label %47

; <label>:47:                                     ; preds = %40, %38
  %48 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !12162, !tbaa !1602
  %49 = getelementptr inbounds %struct.netconn, %struct.netconn* %48, i64 0, i32 0, !dbg !12162
  %50 = load i32, i32* %49, align 8, !dbg !12162, !tbaa !1647
  %51 = and i32 %50, 240, !dbg !12162
  %52 = icmp eq i32 %51, 16, !dbg !12164
  br i1 %52, label %53, label %66, !dbg !12165

; <label>:53:                                     ; preds = %47
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !12166
  %54 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !12168, !tbaa !1602
  %55 = getelementptr inbounds %struct.netconn, %struct.netconn* %54, i64 0, i32 2, !dbg !12170
  %56 = bitcast %union.anon.4* %55 to %struct.tcp_pcb**, !dbg !12171
  %57 = load %struct.tcp_pcb*, %struct.tcp_pcb** %56, align 8, !dbg !12171, !tbaa !1696
  %58 = icmp eq %struct.tcp_pcb* %57, null, !dbg !12172
  br i1 %58, label %64, label %59, !dbg !12173

; <label>:59:                                     ; preds = %53
  %60 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %57, i64 0, i32 12, !dbg !12174
  %61 = load i16, i16* %60, align 2, !dbg !12174, !tbaa !6819
  %62 = and i16 %61, 32, !dbg !12177
  %63 = icmp eq i16 %62, 0, !dbg !12177
  br i1 %63, label %65, label %64

; <label>:64:                                     ; preds = %53, %59
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !12179
  br label %66, !dbg !12180

; <label>:65:                                     ; preds = %59
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !12179
  br label %66, !dbg !12180

; <label>:66:                                     ; preds = %47, %64, %65
  %67 = phi i32 [ 2, %65 ], [ 0, %64 ], [ 2, %47 ]
  %68 = or i32 %67, %32, !dbg !12181
  br label %124, !dbg !12182

; <label>:69:                                     ; preds = %26
  %70 = and i32 %2, -16388, !dbg !12183
  %71 = icmp eq i32 %70, 0, !dbg !12184
  br i1 %71, label %72, label %94, !dbg !12185

; <label>:72:                                     ; preds = %69
  %73 = and i32 %2, 16384, !dbg !12186
  %74 = icmp eq i32 %73, 0, !dbg !12186
  %75 = getelementptr inbounds %struct.netconn, %struct.netconn* %8, i64 0, i32 8, !dbg !12189
  %76 = load i8, i8* %75, align 4, !dbg !12189, !tbaa !2211
  %77 = and i8 %76, -3, !dbg !12192
  %78 = or i8 %76, 2, !dbg !12189
  %79 = select i1 %74, i8 %77, i8 %78, !dbg !12195
  store i8 %79, i8* %75, align 4, !dbg !12192, !tbaa !2211
  %80 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12197, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12200
  %81 = icmp ult i64 %80, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12201
  br i1 %81, label %87, label %82, !dbg !12201

; <label>:82:                                     ; preds = %72
  %83 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12202, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12205
  %84 = icmp ugt i64 %83, ptrtoint ([0 x i8]* @_end to i64), !dbg !12201
  br i1 %84, label %87, label %85, !dbg !12206

; <label>:85:                                     ; preds = %82
  %86 = tail call i32* @__errno() #10, !dbg !12210
  store i32 0, i32* %86, align 4, !dbg !12211, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12212
  br label %124, !dbg !12213

; <label>:87:                                     ; preds = %82, %72
  %88 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12214, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12218
  %89 = and i64 %88, -65536, !dbg !12220
  %90 = or i64 %89, 4097, !dbg !12220
  %91 = add nsw i64 %90, -1, !dbg !12220
  %92 = inttoptr i64 %91 to i32*, !dbg !12221
  %93 = load i32, i32* %92, align 4096, !dbg !12222, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12223
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %93, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12224, !srcloc !12225
  br label %124

; <label>:94:                                     ; preds = %69
  %95 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12227, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12230
  %96 = icmp ult i64 %95, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12231
  br i1 %96, label %102, label %97, !dbg !12231

; <label>:97:                                     ; preds = %94
  %98 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12232, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12235
  %99 = icmp ugt i64 %98, ptrtoint ([0 x i8]* @_end to i64), !dbg !12231
  br i1 %99, label %102, label %100, !dbg !12236

; <label>:100:                                    ; preds = %97
  %101 = tail call i32* @__errno() #10, !dbg !12240
  store i32 88, i32* %101, align 4, !dbg !12241, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12242
  br label %124, !dbg !12243

; <label>:102:                                    ; preds = %97, %94
  %103 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12244, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12248
  %104 = and i64 %103, -65536, !dbg !12250
  %105 = or i64 %104, 4097, !dbg !12250
  %106 = add nsw i64 %105, -1, !dbg !12250
  %107 = inttoptr i64 %106 to i32*, !dbg !12251
  %108 = load i32, i32* %107, align 4096, !dbg !12252, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12253
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -88, i32 %108, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12254, !srcloc !12255
  br label %124

; <label>:109:                                    ; preds = %26
  %110 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12257, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12260
  %111 = icmp ult i64 %110, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12261
  br i1 %111, label %117, label %112, !dbg !12261

; <label>:112:                                    ; preds = %109
  %113 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12262, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12265
  %114 = icmp ugt i64 %113, ptrtoint ([0 x i8]* @_end to i64), !dbg !12261
  br i1 %114, label %117, label %115, !dbg !12266

; <label>:115:                                    ; preds = %112
  %116 = tail call i32* @__errno() #10, !dbg !12270
  store i32 88, i32* %116, align 4, !dbg !12271, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12272
  br label %124, !dbg !12273

; <label>:117:                                    ; preds = %112, %109
  %118 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12274, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12278
  %119 = and i64 %118, -65536, !dbg !12280
  %120 = or i64 %119, 4097, !dbg !12280
  %121 = add nsw i64 %120, -1, !dbg !12280
  %122 = inttoptr i64 %121 to i32*, !dbg !12281
  %123 = load i32, i32* %122, align 4096, !dbg !12282, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12283
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -88, i32 %123, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12284, !srcloc !12285
  br label %124

; <label>:124:                                    ; preds = %25, %66, %87, %85, %102, %100, %117, %115
  %125 = phi i32 [ %68, %66 ], [ 0, %87 ], [ 0, %85 ], [ -1, %102 ], [ -1, %100 ], [ -1, %117 ], [ -1, %115 ], [ -1, %25 ], !dbg !12286
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12289
  ret i32 %125, !dbg !12289
}

; Function Attrs: noredzone nounwind
define dso_local i8* @lwip_inet_ntop(i32, i8*, i8*, i32) local_unnamed_addr #0 !dbg !12290 {
  %5 = icmp slt i32 %3, 0, !dbg !12337
  br i1 %5, label %6, label %21, !dbg !12338

; <label>:6:                                      ; preds = %4
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12339, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12342
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12343
  br i1 %8, label %14, label %9, !dbg !12343

; <label>:9:                                      ; preds = %6
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12344, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12347
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !12343
  br i1 %11, label %14, label %12, !dbg !12348

; <label>:12:                                     ; preds = %9
  %13 = tail call i32* @__errno() #10, !dbg !12352
  store i32 28, i32* %13, align 4, !dbg !12353, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12354
  br label %75, !dbg !12355

; <label>:14:                                     ; preds = %9, %6
  %15 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12356, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12360
  %16 = and i64 %15, -65536, !dbg !12362
  %17 = or i64 %16, 4097, !dbg !12362
  %18 = add nsw i64 %17, -1, !dbg !12362
  %19 = inttoptr i64 %18 to i32*, !dbg !12363
  %20 = load i32, i32* %19, align 4096, !dbg !12364, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12365
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -28, i32 %20, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12366, !srcloc !12367
  br label %75

; <label>:21:                                     ; preds = %4
  switch i32 %0, label %60 [
    i32 2, label %22
    i32 10, label %41
  ], !dbg !12368

; <label>:22:                                     ; preds = %21
  %23 = bitcast i8* %1 to %struct.ip4_addr*, !dbg !12369
  %24 = tail call i8* @ip4addr_ntoa_r(%struct.ip4_addr* %23, i8* %2, i32 %3) #10, !dbg !12370
  %25 = icmp eq i8* %24, null, !dbg !12371
  br i1 %25, label %26, label %75, !dbg !12372

; <label>:26:                                     ; preds = %22
  %27 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12373, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12376
  %28 = icmp ult i64 %27, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12377
  br i1 %28, label %34, label %29, !dbg !12377

; <label>:29:                                     ; preds = %26
  %30 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12378, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12381
  %31 = icmp ugt i64 %30, ptrtoint ([0 x i8]* @_end to i64), !dbg !12377
  br i1 %31, label %34, label %32, !dbg !12382

; <label>:32:                                     ; preds = %29
  %33 = tail call i32* @__errno() #10, !dbg !12386
  store i32 28, i32* %33, align 4, !dbg !12387, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12388
  br label %75, !dbg !12389

; <label>:34:                                     ; preds = %29, %26
  %35 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12390, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12394
  %36 = and i64 %35, -65536, !dbg !12396
  %37 = or i64 %36, 4097, !dbg !12396
  %38 = add nsw i64 %37, -1, !dbg !12396
  %39 = inttoptr i64 %38 to i32*, !dbg !12397
  %40 = load i32, i32* %39, align 4096, !dbg !12398, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12399
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -28, i32 %40, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12400, !srcloc !12401
  br label %75

; <label>:41:                                     ; preds = %21
  %42 = bitcast i8* %1 to %struct.ip6_addr*, !dbg !12402
  %43 = tail call i8* @ip6addr_ntoa_r(%struct.ip6_addr* %42, i8* %2, i32 %3) #10, !dbg !12403
  %44 = icmp eq i8* %43, null, !dbg !12404
  br i1 %44, label %45, label %75, !dbg !12405

; <label>:45:                                     ; preds = %41
  %46 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12406, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12409
  %47 = icmp ult i64 %46, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12410
  br i1 %47, label %53, label %48, !dbg !12410

; <label>:48:                                     ; preds = %45
  %49 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12411, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12414
  %50 = icmp ugt i64 %49, ptrtoint ([0 x i8]* @_end to i64), !dbg !12410
  br i1 %50, label %53, label %51, !dbg !12415

; <label>:51:                                     ; preds = %48
  %52 = tail call i32* @__errno() #10, !dbg !12419
  store i32 28, i32* %52, align 4, !dbg !12420, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12421
  br label %75, !dbg !12422

; <label>:53:                                     ; preds = %48, %45
  %54 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12423, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12427
  %55 = and i64 %54, -65536, !dbg !12429
  %56 = or i64 %55, 4097, !dbg !12429
  %57 = add nsw i64 %56, -1, !dbg !12429
  %58 = inttoptr i64 %57 to i32*, !dbg !12430
  %59 = load i32, i32* %58, align 4096, !dbg !12431, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12432
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -28, i32 %59, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12433, !srcloc !12434
  br label %75

; <label>:60:                                     ; preds = %21
  %61 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12435, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12438
  %62 = icmp ult i64 %61, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12439
  br i1 %62, label %68, label %63, !dbg !12439

; <label>:63:                                     ; preds = %60
  %64 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12440, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12443
  %65 = icmp ugt i64 %64, ptrtoint ([0 x i8]* @_end to i64), !dbg !12439
  br i1 %65, label %68, label %66, !dbg !12444

; <label>:66:                                     ; preds = %63
  %67 = tail call i32* @__errno() #10, !dbg !12448
  store i32 106, i32* %67, align 4, !dbg !12449, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12450
  br label %75, !dbg !12451

; <label>:68:                                     ; preds = %63, %60
  %69 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12452, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12456
  %70 = and i64 %69, -65536, !dbg !12458
  %71 = or i64 %70, 4097, !dbg !12458
  %72 = add nsw i64 %71, -1, !dbg !12458
  %73 = inttoptr i64 %72 to i32*, !dbg !12459
  %74 = load i32, i32* %73, align 4096, !dbg !12460, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12461
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -106, i32 %74, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12462, !srcloc !12463
  br label %75

; <label>:75:                                     ; preds = %32, %34, %22, %51, %53, %41, %68, %66, %12, %14
  %76 = phi i8* [ null, %14 ], [ null, %12 ], [ null, %66 ], [ null, %68 ], [ null, %51 ], [ null, %53 ], [ %43, %41 ], [ null, %32 ], [ null, %34 ], [ %24, %22 ], !dbg !12464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12465
  ret i8* %76, !dbg !12465
}

; Function Attrs: noredzone
declare dso_local i8* @ip4addr_ntoa_r(%struct.ip4_addr*, i8*, i32) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i8* @ip6addr_ntoa_r(%struct.ip6_addr*, i8*, i32) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_inet_pton(i32, i8*, i8*) local_unnamed_addr #0 !dbg !12466 {
  %4 = alloca %struct.ip6_addr, align 4
  switch i32 %0, label %15 [
    i32 2, label %5
    i32 10, label %8
  ], !dbg !12486

; <label>:5:                                      ; preds = %3
  %6 = bitcast i8* %2 to %struct.ip4_addr*, !dbg !12487
  %7 = tail call i32 @ip4addr_aton(i8* %1, %struct.ip4_addr* %6) #10, !dbg !12488
  br label %30, !dbg !12490

; <label>:8:                                      ; preds = %3
  %9 = bitcast %struct.ip6_addr* %4 to i8*, !dbg !12491
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %9) #6, !dbg !12491
  %10 = call i32 @ip6addr_aton(i8* %1, %struct.ip6_addr* nonnull %4) #10, !dbg !12493
  %11 = icmp eq i32 %10, 0, !dbg !12494
  br i1 %11, label %14, label %12, !dbg !12496

; <label>:12:                                     ; preds = %8
  %13 = call i8* @memcpy(i8* %2, i8* nonnull %9, i64 16) #10, !dbg !12497
  br label %14, !dbg !12499

; <label>:14:                                     ; preds = %8, %12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %9) #6, !dbg !12500
  br label %30

; <label>:15:                                     ; preds = %3
  %16 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12501, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12504
  %17 = icmp ult i64 %16, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12505
  br i1 %17, label %23, label %18, !dbg !12505

; <label>:18:                                     ; preds = %15
  %19 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12506, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12509
  %20 = icmp ugt i64 %19, ptrtoint ([0 x i8]* @_end to i64), !dbg !12505
  br i1 %20, label %23, label %21, !dbg !12510

; <label>:21:                                     ; preds = %18
  %22 = tail call i32* @__errno() #10, !dbg !12514
  store i32 106, i32* %22, align 4, !dbg !12515, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12516
  br label %30, !dbg !12517

; <label>:23:                                     ; preds = %18, %15
  %24 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12518, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12522
  %25 = and i64 %24, -65536, !dbg !12524
  %26 = or i64 %25, 4097, !dbg !12524
  %27 = add nsw i64 %26, -1, !dbg !12524
  %28 = inttoptr i64 %27 to i32*, !dbg !12525
  %29 = load i32, i32* %28, align 4096, !dbg !12526, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12527
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -106, i32 %29, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12528, !srcloc !12529
  br label %30

; <label>:30:                                     ; preds = %21, %23, %14, %5
  %31 = phi i32 [ -1, %21 ], [ -1, %23 ], [ %10, %14 ], [ %7, %5 ], !dbg !12530
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12531
  ret i32 %31, !dbg !12531
}

; Function Attrs: noredzone
declare dso_local i32 @ip4addr_aton(i8*, %struct.ip4_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @ip6addr_aton(i8*, %struct.ip6_addr*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: noredzone
declare dso_local void @_uk_vprintk(i32, i8*, i8*, i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: noredzone nounwind
define internal i32 @_SOCK_NET_GET_ERRNO() #0 !dbg !1488 {
  %1 = tail call i32* @__errno() #10, !dbg !12532
  %2 = load i32, i32* %1, align 4, !dbg !12532, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12533
  ret i32 %2, !dbg !12533
}

; Function Attrs: noredzone
declare dso_local i32 @vfscore_alloc_fd() #5

; Function Attrs: noredzone
declare dso_local i32 @vfscore_vget(%struct.mount*, i64, %struct.vnode**) #5

; Function Attrs: inlinehint noredzone nounwind
define internal void @uk_mutex_unlock(%struct.uk_mutex*) #3 !dbg !2688 {
  %2 = icmp eq %struct.uk_mutex* %0, null, !dbg !12536
  br i1 %2, label %3, label %4, !dbg !12539, !prof !1445

; <label>:3:                                      ; preds = %1
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0)) #8, !dbg !12540
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12540
  unreachable, !dbg !12540

; <label>:4:                                      ; preds = %1
  %5 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !12542
  %6 = getelementptr inbounds %struct.uk_mutex, %struct.uk_mutex* %0, i64 0, i32 0, !dbg !12544
  %7 = load i32, i32* %6, align 8, !dbg !12544, !tbaa !2705
  %8 = icmp slt i32 %7, 1, !dbg !12544
  br i1 %8, label %9, label %10, !dbg !12545, !prof !1445

; <label>:9:                                      ; preds = %4
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0)) #8, !dbg !12546
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12546
  unreachable, !dbg !12546

; <label>:10:                                     ; preds = %4
  %11 = add nsw i32 %7, -1, !dbg !12547
  store i32 %11, i32* %6, align 8, !dbg !12547, !tbaa !2705
  %12 = icmp eq i32 %11, 0, !dbg !12548
  br i1 %12, label %13, label %27, !dbg !12549

; <label>:13:                                     ; preds = %10
  %14 = getelementptr inbounds %struct.uk_mutex, %struct.uk_mutex* %0, i64 0, i32 1, !dbg !12550
  store %struct.uk_thread* null, %struct.uk_thread** %14, align 8, !dbg !12551, !tbaa !2716
  %15 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !12554
  %16 = getelementptr inbounds %struct.uk_mutex, %struct.uk_mutex* %0, i64 0, i32 2, i32 0, !dbg !12556
  %17 = load %struct.uk_waitq_entry*, %struct.uk_waitq_entry** %16, align 8, !dbg !12556, !tbaa !2733
  %18 = icmp eq %struct.uk_waitq_entry* %17, null, !dbg !12558
  br i1 %18, label %26, label %19, !dbg !12558

; <label>:19:                                     ; preds = %13, %19
  %20 = phi %struct.uk_waitq_entry* [ %22, %19 ], [ %17, %13 ]
  %21 = getelementptr inbounds %struct.uk_waitq_entry, %struct.uk_waitq_entry* %20, i64 0, i32 2, i32 0, !dbg !12558
  %22 = load %struct.uk_waitq_entry*, %struct.uk_waitq_entry** %21, align 8, !dbg !12558, !tbaa !2737
  %23 = getelementptr inbounds %struct.uk_waitq_entry, %struct.uk_waitq_entry* %20, i64 0, i32 1, !dbg !12560
  %24 = load %struct.uk_thread*, %struct.uk_thread** %23, align 8, !dbg !12560, !tbaa !2742
  tail call void @uk_thread_wake(%struct.uk_thread* %24) #10, !dbg !12561
  %25 = icmp eq %struct.uk_waitq_entry* %22, null, !dbg !12558
  br i1 %25, label %26, label %19, !dbg !12558, !llvm.loop !2744

; <label>:26:                                     ; preds = %19, %13
  tail call void @ukplat_lcpu_restore_irqf(i64 %15) #10, !dbg !12562
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12563
  br label %27, !dbg !12564

; <label>:27:                                     ; preds = %26, %10
  tail call void @ukplat_lcpu_restore_irqf(i64 %5) #10, !dbg !12565
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12566
  ret void, !dbg !12566
}

; Function Attrs: noredzone
declare dso_local %struct.dentry* @dentry_alloc(%struct.dentry*, %struct.vnode*, i8*) #5

; Function Attrs: noredzone
declare dso_local i32 @vfscore_install_fd(i32, %struct.vfscore_file*) #5

; Function Attrs: noredzone
declare dso_local void @vrele(%struct.vnode*) #5

; Function Attrs: noredzone
declare dso_local void @drele(%struct.dentry*) #5

; Function Attrs: noredzone
declare dso_local i32 @vfscore_put_fd(i32) #5

; Function Attrs: noredzone
declare dso_local i32 @vfscore_vop_nullop() #5

; Function Attrs: noredzone nounwind
define internal i32 @sock_net_close(%struct.vnode*, %struct.vfscore_file*) #0 section ".text_shared" !dbg !12567 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*, !dbg !12581
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #6, !dbg !12581
  %5 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12582, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12585
  %6 = icmp ult i64 %5, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12586
  br i1 %6, label %12, label %7, !dbg !12586

; <label>:7:                                      ; preds = %2
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12587, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12590
  %9 = icmp ugt i64 %8, ptrtoint ([0 x i8]* @_end to i64), !dbg !12586
  br i1 %9, label %12, label %10, !dbg !12591

; <label>:10:                                     ; preds = %7
  %11 = tail call i32 @_sock_net_close(%struct.vnode* %0, %struct.vfscore_file* undef) #8, !dbg !12592
  store i32 %11, i32* %3, align 4, !dbg !12592, !tbaa !1492
  br label %23, !dbg !12592

; <label>:12:                                     ; preds = %7, %2
  %13 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12595, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12599
  %14 = and i64 %13, -65536, !dbg !12601
  %15 = or i64 %14, 4097, !dbg !12601
  %16 = add nsw i64 %15, -1, !dbg !12601
  %17 = inttoptr i64 %16 to i32*, !dbg !12602
  %18 = load i32, i32* %17, align 4096, !dbg !12603, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12604
  %19 = ptrtoint %struct.vnode* %0 to i64, !dbg !12605
  %20 = ptrtoint %struct.vfscore_file* %1 to i64, !dbg !12605
  %21 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _sock_net_close\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp0,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, i64 1073741820, i64 1073741811, i64 %19, i64 %20, i32 %18, i32 (%struct.vnode*, %struct.vfscore_file*)* nonnull @_sock_net_close) #6, !dbg !12605, !srcloc !12606
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %3, i64 %21) #6, !dbg !12607, !srcloc !12610
  %22 = load i32, i32* %3, align 4, !dbg !12611, !tbaa !1492
  br label %23

; <label>:23:                                     ; preds = %12, %10
  %24 = phi i32 [ %22, %12 ], [ %11, %10 ], !dbg !12611
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #6, !dbg !12612
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12613
  ret i32 %24, !dbg !12613
}

; Function Attrs: noredzone nounwind
define internal i32 @sock_net_read(%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32) #0 section ".text_shared" !dbg !12614 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*, !dbg !12634
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !12634
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12635, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12638
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12639
  br i1 %8, label %14, label %9, !dbg !12639

; <label>:9:                                      ; preds = %4
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12640, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12643
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !12639
  br i1 %11, label %14, label %12, !dbg !12644

; <label>:12:                                     ; preds = %9
  %13 = tail call i32 @_sock_net_read(%struct.vnode* %0, %struct.vfscore_file* undef, %struct.uio* %2, i32 undef) #8, !dbg !12645
  store i32 %13, i32* %5, align 4, !dbg !12645, !tbaa !1492
  br label %27, !dbg !12645

; <label>:14:                                     ; preds = %9, %4
  %15 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12648, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12652
  %16 = and i64 %15, -65536, !dbg !12654
  %17 = or i64 %16, 4097, !dbg !12654
  %18 = add nsw i64 %17, -1, !dbg !12654
  %19 = inttoptr i64 %18 to i32*, !dbg !12655
  %20 = load i32, i32* %19, align 4096, !dbg !12656, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12657
  %21 = ptrtoint %struct.uio* %2 to i64, !dbg !12658
  %22 = sext i32 %3 to i64, !dbg !12658
  %23 = ptrtoint %struct.vnode* %0 to i64, !dbg !12658
  %24 = ptrtoint %struct.vfscore_file* %1 to i64, !dbg !12658
  %25 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09push %r13\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r13, %rcx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _sock_net_read\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp0,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r13\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r13},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, i64 1073741820, i64 1073741811, i64 %23, i64 %24, i64 %21, i64 %22, i32 %20, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)* nonnull @_sock_net_read) #6, !dbg !12658, !srcloc !12659
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %5, i64 %25) #6, !dbg !12660, !srcloc !12663
  %26 = load i32, i32* %5, align 4, !dbg !12664, !tbaa !1492
  br label %27

; <label>:27:                                     ; preds = %14, %12
  %28 = phi i32 [ %26, %14 ], [ %13, %12 ], !dbg !12664
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !12665
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12666
  ret i32 %28, !dbg !12666
}

; Function Attrs: noredzone nounwind
define internal i32 @sock_net_write(%struct.vnode*, %struct.uio*, i32) #0 section ".text_shared" !dbg !12667 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*, !dbg !12684
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6, !dbg !12684
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12685, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12688
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12689
  br i1 %7, label %13, label %8, !dbg !12689

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12690, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12693
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !12689
  br i1 %10, label %13, label %11, !dbg !12694

; <label>:11:                                     ; preds = %8
  %12 = tail call i32 @_sock_net_write(%struct.vnode* %0, %struct.uio* %1, i32 undef) #8, !dbg !12695
  store i32 %12, i32* %4, align 4, !dbg !12695, !tbaa !1492
  br label %25, !dbg !12695

; <label>:13:                                     ; preds = %8, %3
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12698, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12702
  %15 = and i64 %14, -65536, !dbg !12704
  %16 = or i64 %15, 4097, !dbg !12704
  %17 = add nsw i64 %16, -1, !dbg !12704
  %18 = inttoptr i64 %17 to i32*, !dbg !12705
  %19 = load i32, i32* %18, align 4096, !dbg !12706, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12707
  %20 = sext i32 %2 to i64, !dbg !12708
  %21 = ptrtoint %struct.vnode* %0 to i64, !dbg !12708
  %22 = ptrtoint %struct.uio* %1 to i64, !dbg !12708
  %23 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _sock_net_write\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp0,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, i64 1073741820, i64 1073741811, i64 %21, i64 %22, i64 %20, i32 %19, i32 (%struct.vnode*, %struct.uio*, i32)* nonnull @_sock_net_write) #6, !dbg !12708, !srcloc !12709
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %4, i64 %23) #6, !dbg !12710, !srcloc !12713
  %24 = load i32, i32* %4, align 4, !dbg !12714, !tbaa !1492
  br label %25

; <label>:25:                                     ; preds = %13, %11
  %26 = phi i32 [ %24, %13 ], [ %12, %11 ], !dbg !12714
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6, !dbg !12715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12716
  ret i32 %26, !dbg !12716
}

; Function Attrs: noredzone nounwind
define internal i32 @sock_net_ioctl(%struct.vnode*, %struct.vfscore_file*, i64, i8*) #0 section ".text_shared" !dbg !12717 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*, !dbg !12737
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !12737
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12738, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12741
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12742
  br i1 %8, label %19, label %9, !dbg !12742

; <label>:9:                                      ; preds = %4
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12743, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12746
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !12742
  br i1 %11, label %19, label %12, !dbg !12747

; <label>:12:                                     ; preds = %9
  %13 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !12755
  %14 = bitcast i8** %13 to %struct.sock_net_file**, !dbg !12755
  %15 = load %struct.sock_net_file*, %struct.sock_net_file** %14, align 8, !dbg !12755, !tbaa !1402
  %16 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %15, i64 0, i32 1, !dbg !12756
  %17 = load i32, i32* %16, align 8, !dbg !12756, !tbaa !1421
  %18 = tail call i32 @lwip_ioctl(i32 %17, i64 %2, i8* %3) #10, !dbg !12757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12759
  store i32 %18, i32* %5, align 4, !dbg !12761, !tbaa !1492
  br label %31, !dbg !12761

; <label>:19:                                     ; preds = %9, %4
  %20 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12762, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12766
  %21 = and i64 %20, -65536, !dbg !12768
  %22 = or i64 %21, 4097, !dbg !12768
  %23 = add nsw i64 %22, -1, !dbg !12768
  %24 = inttoptr i64 %23 to i32*, !dbg !12769
  %25 = load i32, i32* %24, align 4096, !dbg !12770, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12771
  %26 = ptrtoint i8* %3 to i64, !dbg !12772
  %27 = ptrtoint %struct.vnode* %0 to i64, !dbg !12772
  %28 = ptrtoint %struct.vfscore_file* %1 to i64, !dbg !12772
  %29 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09push %r13\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r13, %rcx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _sock_net_ioctl\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp0,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r13\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r13},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, i64 1073741820, i64 1073741811, i64 %27, i64 %28, i64 %2, i64 %26, i32 %25, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)* nonnull @_sock_net_ioctl) #6, !dbg !12772, !srcloc !12773
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %5, i64 %29) #6, !dbg !12774, !srcloc !12777
  %30 = load i32, i32* %5, align 4, !dbg !12778, !tbaa !1492
  br label %31

; <label>:31:                                     ; preds = %19, %12
  %32 = phi i32 [ %30, %19 ], [ %18, %12 ], !dbg !12778
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !12779
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12780
  ret i32 %32, !dbg !12780
}

; Function Attrs: noredzone
declare dso_local i32 @vfscore_vop_einval() #5

; Function Attrs: noredzone
declare dso_local void @uk_thread_wake(%struct.uk_thread*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.vfscore_file* @vfscore_get_file(i32) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @netbuf_delete(%struct.netbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_recv_tcp_pbuf_flags(%struct.netconn*, %struct.pbuf**, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local zeroext i16 @pbuf_copy_partial(%struct.pbuf*, i8*, i16 zeroext, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.pbuf* @pbuf_free_header(%struct.pbuf*, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_tcp_recvd(%struct.netconn*, i64) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i32 @lwip_sock_make_addr(%struct.netconn* nocapture readonly, %struct.ip_addr*, i16 zeroext, %struct.sockaddr*, i32*) unnamed_addr #0 !dbg !12781 {
  %6 = alloca %union.sockaddr_aligned, align 4
  %7 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 0, !dbg !12798
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %7) #6, !dbg !12798
  %8 = icmp eq %struct.ip_addr* %1, null, !dbg !12799
  br i1 %8, label %9, label %10, !dbg !12802

; <label>:9:                                      ; preds = %5
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0)) #8, !dbg !12803
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !12806
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12806
  unreachable, !dbg !12806

; <label>:10:                                     ; preds = %5
  %11 = icmp eq %struct.sockaddr* %3, null, !dbg !12810
  br i1 %11, label %12, label %13, !dbg !12813

; <label>:12:                                     ; preds = %10
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0)) #8, !dbg !12814
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !12817
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12817
  unreachable, !dbg !12817

; <label>:13:                                     ; preds = %10
  %14 = icmp eq i32* %4, null, !dbg !12821
  br i1 %14, label %15, label %16, !dbg !12824

; <label>:15:                                     ; preds = %13
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0)) #8, !dbg !12825
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !12828
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12828
  unreachable, !dbg !12828

; <label>:16:                                     ; preds = %13
  %17 = getelementptr inbounds %struct.netconn, %struct.netconn* %0, i64 0, i32 0, !dbg !12832
  %18 = load i32, i32* %17, align 8, !dbg !12832, !tbaa !1647
  %19 = and i32 %18, 8, !dbg !12832
  %20 = icmp ne i32 %19, 0, !dbg !12832
  %21 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 1
  %22 = load i8, i8* %21, align 4, !dbg !12834, !tbaa !1700
  %23 = icmp eq i8 %22, 0, !dbg !12835
  %24 = and i1 %20, %23, !dbg !12836
  br i1 %24, label %25, label %32, !dbg !12836

; <label>:25:                                     ; preds = %16
  %26 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !12837
  %27 = load i32, i32* %26, align 4, !dbg !12837, !tbaa !1696
  %28 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 3, !dbg !12837
  store i32 %27, i32* %28, align 4, !dbg !12837, !tbaa !1696
  %29 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 2, !dbg !12837
  store i32 -65536, i32* %29, align 4, !dbg !12837, !tbaa !1696
  %30 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 1, !dbg !12837
  store i32 0, i32* %30, align 4, !dbg !12837, !tbaa !1696
  store i32 0, i32* %26, align 4, !dbg !12837, !tbaa !1696
  %31 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 1, !dbg !12837
  store i8 0, i8* %31, align 4, !dbg !12837, !tbaa !1696
  store i8 6, i8* %21, align 4, !dbg !12840, !tbaa !1700
  br label %33, !dbg !12845

; <label>:32:                                     ; preds = %16
  switch i8 %22, label %46 [
    i8 46, label %33
    i8 6, label %33
  ], !dbg !12845

; <label>:33:                                     ; preds = %25, %32, %32
  store i8 28, i8* %7, align 4, !dbg !12848, !tbaa !3619
  %34 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 1, !dbg !12848
  store i8 10, i8* %34, align 1, !dbg !12848, !tbaa !3622
  %35 = tail call zeroext i16 @lwip_htons(i16 zeroext %2) #10, !dbg !12848
  %36 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 2, !dbg !12848
  store i16 %35, i16* %36, align 2, !dbg !12848, !tbaa !3623
  %37 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 3, !dbg !12848
  store i32 0, i32* %37, align 4, !dbg !12848, !tbaa !3624
  %38 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 4, i32 0, i32 0, i64 0, !dbg !12851
  %39 = bitcast %struct.ip_addr* %1 to <4 x i32>*, !dbg !12851
  %40 = load <4 x i32>, <4 x i32>* %39, align 4, !dbg !12851, !tbaa !1696
  %41 = bitcast i32* %38 to <4 x i32>*, !dbg !12851
  store <4 x i32> %40, <4 x i32>* %41, align 4, !dbg !12851, !tbaa !1696
  %42 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 1, !dbg !12848
  %43 = load i8, i8* %42, align 4, !dbg !12848, !tbaa !1696
  %44 = zext i8 %43 to i32, !dbg !12848
  %45 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 5, !dbg !12848
  store i32 %44, i32* %45, align 4, !dbg !12848, !tbaa !3627
  br label %58, !dbg !12853

; <label>:46:                                     ; preds = %32
  store i8 16, i8* %7, align 4, !dbg !12854, !tbaa !3632
  %47 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 1, !dbg !12854
  store i8 2, i8* %47, align 1, !dbg !12854, !tbaa !3635
  %48 = tail call zeroext i16 @lwip_htons(i16 zeroext %2) #10, !dbg !12854
  %49 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 2, !dbg !12854
  store i16 %48, i16* %49, align 2, !dbg !12854, !tbaa !3636
  %50 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !12854
  %51 = load i32, i32* %50, align 4, !dbg !12854, !tbaa !1696
  %52 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 3, !dbg !12854
  store i32 %51, i32* %52, align 4, !dbg !12854, !tbaa !3637
  %53 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 4, !dbg !12854
  %54 = bitcast %struct.in6_addr* %53 to i8*, !dbg !12854
  %55 = call i8* @memset(i8* nonnull %54, i32 0, i64 8) #10, !dbg !12854
  %56 = load i8, i8* %7, align 4, !dbg !12857, !tbaa !1696
  %57 = zext i8 %56 to i32
  br label %58

; <label>:58:                                     ; preds = %46, %33
  %59 = phi i32 [ %57, %46 ], [ 28, %33 ]
  %60 = load i32, i32* %4, align 4, !dbg !12859, !tbaa !1492
  %61 = icmp ult i32 %60, %59, !dbg !12860
  br i1 %61, label %65, label %62, !dbg !12861

; <label>:62:                                     ; preds = %58
  %63 = icmp ugt i32 %60, %59, !dbg !12862
  br i1 %63, label %64, label %65, !dbg !12864

; <label>:64:                                     ; preds = %62
  store i32 %59, i32* %4, align 4, !dbg !12865, !tbaa !1492
  br label %65, !dbg !12867

; <label>:65:                                     ; preds = %58, %62, %64
  %66 = phi i32 [ %59, %64 ], [ %60, %62 ], [ %60, %58 ], !dbg !12868
  %67 = phi i32 [ 0, %64 ], [ 0, %62 ], [ 1, %58 ], !dbg !12869
  %68 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i64 0, i32 0, !dbg !12868
  %69 = zext i32 %66 to i64, !dbg !12868
  %70 = call i8* @memcpy(i8* nonnull %68, i8* nonnull %7, i64 %69) #10, !dbg !12868
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %7) #6, !dbg !12870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12871
  ret i32 %67, !dbg !12871
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_recv_udp_raw_netbuf_flags(%struct.netconn*, %struct.netbuf**, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @sys_sem_signal(%struct.sys_sem_t*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_err(%struct.netconn*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.netif* @netif_find(i8*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_bind_netif(%struct.tcp_pcb*, %struct.netif*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @udp_bind_netif(%struct.udp_pcb*, %struct.netif*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.netif* @netif_get_by_index(i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @mld6_joingroup_netif(%struct.netif*, %struct.ip6_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @mld6_leavegroup_netif(%struct.netif*, %struct.ip6_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_join_leave_group_netif(%struct.netconn*, %struct.ip_addr*, i8 zeroext, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable

attributes #0 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { norecurse noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin noredzone }
attributes #9 = { nobuiltin noredzone noreturn nounwind }
attributes #10 = { nobuiltin noredzone nounwind }

!llvm.module.flags = !{!1388, !1389, !1390}
!llvm.ident = !{!1391}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "sockets", scope: !2, file: !3, line: 1258, type: !1387, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !133, globals: !1042)
!3 = !DIFile(filename: "/root/.unikraft/libs/lwip/sockets.c", directory: "/root/.unikraft/apps/redis/build")
!4 = !{!5, !12, !17, !29, !36, !50, !57, !71, !78, !99, !105, !113, !119, !124, !129}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uk_sig_waiting", file: !6, line: 92, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksignal/include/uk/uk_signal.h", directory: "/root/.unikraft/apps/redis/build")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "UK_SIG_NOT_WAITING", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "UK_SIG_WAITING", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "UK_SIG_WAITING_SCHED", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uio_rw", file: !13, line: 41, baseType: !7, size: 32, elements: !14)
!13 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/uio.h", directory: "/root/.unikraft/apps/redis/build")
!14 = !{!15, !16}
!15 = !DIEnumerator(name: "UIO_READ", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "UIO_WRITE", value: 1, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vtype", file: !18, line: 53, baseType: !7, size: 32, elements: !19)
!18 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/vnode.h", directory: "/root/.unikraft/apps/redis/build")
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28}
!20 = !DIEnumerator(name: "VNON", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "VREG", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "VDIR", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "VBLK", value: 3, isUnsigned: true)
!24 = !DIEnumerator(name: "VCHR", value: 4, isUnsigned: true)
!25 = !DIEnumerator(name: "VLNK", value: 5, isUnsigned: true)
!26 = !DIEnumerator(name: "VSOCK", value: 6, isUnsigned: true)
!27 = !DIEnumerator(name: "VFIFO", value: 7, isUnsigned: true)
!28 = !DIEnumerator(name: "VBAD", value: 8, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ukplat_gstate", file: !30, line: 68, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/plat/bootstrap.h", directory: "/root/.unikraft/apps/redis/build")
!31 = !{!32, !33, !34, !35}
!32 = !DIEnumerator(name: "UKPLAT_HALT", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "UKPLAT_RESTART", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "UKPLAT_SUSPEND", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "UKPLAT_CRASH", value: 3, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netconn_type", file: !37, line: 113, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/api.h", directory: "/root/.unikraft/apps/redis/build")
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}
!39 = !DIEnumerator(name: "NETCONN_INVALID", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "NETCONN_TCP", value: 16, isUnsigned: true)
!41 = !DIEnumerator(name: "NETCONN_TCP_IPV6", value: 24, isUnsigned: true)
!42 = !DIEnumerator(name: "NETCONN_UDP", value: 32, isUnsigned: true)
!43 = !DIEnumerator(name: "NETCONN_UDPLITE", value: 33, isUnsigned: true)
!44 = !DIEnumerator(name: "NETCONN_UDPNOCHKSUM", value: 34, isUnsigned: true)
!45 = !DIEnumerator(name: "NETCONN_UDP_IPV6", value: 40, isUnsigned: true)
!46 = !DIEnumerator(name: "NETCONN_UDPLITE_IPV6", value: 41, isUnsigned: true)
!47 = !DIEnumerator(name: "NETCONN_UDPNOCHKSUM_IPV6", value: 42, isUnsigned: true)
!48 = !DIEnumerator(name: "NETCONN_RAW", value: 64, isUnsigned: true)
!49 = !DIEnumerator(name: "NETCONN_RAW_IPV6", value: 72, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netconn_state", file: !37, line: 147, baseType: !7, size: 32, elements: !51)
!51 = !{!52, !53, !54, !55, !56}
!52 = !DIEnumerator(name: "NETCONN_NONE", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "NETCONN_WRITE", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "NETCONN_LISTEN", value: 2, isUnsigned: true)
!55 = !DIEnumerator(name: "NETCONN_CONNECT", value: 3, isUnsigned: true)
!56 = !DIEnumerator(name: "NETCONN_CLOSE", value: 4, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tcp_state", file: !58, line: 56, baseType: !7, size: 32, elements: !59)
!58 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/tcpbase.h", directory: "/root/.unikraft/apps/redis/build")
!59 = !{!60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70}
!60 = !DIEnumerator(name: "CLOSED", value: 0, isUnsigned: true)
!61 = !DIEnumerator(name: "LISTEN", value: 1, isUnsigned: true)
!62 = !DIEnumerator(name: "SYN_SENT", value: 2, isUnsigned: true)
!63 = !DIEnumerator(name: "SYN_RCVD", value: 3, isUnsigned: true)
!64 = !DIEnumerator(name: "ESTABLISHED", value: 4, isUnsigned: true)
!65 = !DIEnumerator(name: "FIN_WAIT_1", value: 5, isUnsigned: true)
!66 = !DIEnumerator(name: "FIN_WAIT_2", value: 6, isUnsigned: true)
!67 = !DIEnumerator(name: "CLOSE_WAIT", value: 7, isUnsigned: true)
!68 = !DIEnumerator(name: "CLOSING", value: 8, isUnsigned: true)
!69 = !DIEnumerator(name: "LAST_ACK", value: 9, isUnsigned: true)
!70 = !DIEnumerator(name: "TIME_WAIT", value: 10, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netconn_evt", file: !37, line: 181, baseType: !7, size: 32, elements: !72)
!72 = !{!73, !74, !75, !76, !77}
!73 = !DIEnumerator(name: "NETCONN_EVT_RCVPLUS", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "NETCONN_EVT_RCVMINUS", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "NETCONN_EVT_SENDPLUS", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "NETCONN_EVT_SENDMINUS", value: 3, isUnsigned: true)
!77 = !DIEnumerator(name: "NETCONN_EVT_ERROR", value: 4, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !79, line: 53, baseType: !80, size: 32, elements: !81)
!79 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/err.h", directory: "/root/.unikraft/apps/redis/build")
!80 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!81 = !{!82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98}
!82 = !DIEnumerator(name: "ERR_OK", value: 0)
!83 = !DIEnumerator(name: "ERR_MEM", value: -1)
!84 = !DIEnumerator(name: "ERR_BUF", value: -2)
!85 = !DIEnumerator(name: "ERR_TIMEOUT", value: -3)
!86 = !DIEnumerator(name: "ERR_RTE", value: -4)
!87 = !DIEnumerator(name: "ERR_INPROGRESS", value: -5)
!88 = !DIEnumerator(name: "ERR_VAL", value: -6)
!89 = !DIEnumerator(name: "ERR_WOULDBLOCK", value: -7)
!90 = !DIEnumerator(name: "ERR_USE", value: -8)
!91 = !DIEnumerator(name: "ERR_ALREADY", value: -9)
!92 = !DIEnumerator(name: "ERR_ISCONN", value: -10)
!93 = !DIEnumerator(name: "ERR_CONN", value: -11)
!94 = !DIEnumerator(name: "ERR_IF", value: -12)
!95 = !DIEnumerator(name: "ERR_ABRT", value: -13)
!96 = !DIEnumerator(name: "ERR_RST", value: -14)
!97 = !DIEnumerator(name: "ERR_CLSD", value: -15)
!98 = !DIEnumerator(name: "ERR_ARG", value: -16)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lwip_ip_addr_type", file: !100, line: 54, baseType: !7, size: 32, elements: !101)
!100 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip_addr.h", directory: "/root/.unikraft/apps/redis/build")
!101 = !{!102, !103, !104}
!102 = !DIEnumerator(name: "IPADDR_TYPE_V4", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "IPADDR_TYPE_V6", value: 6, isUnsigned: true)
!104 = !DIEnumerator(name: "IPADDR_TYPE_ANY", value: 46, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 89, baseType: !7, size: 32, elements: !107)
!106 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/pbuf.h", directory: "/root/.unikraft/apps/redis/build")
!107 = !{!108, !109, !110, !111, !112}
!108 = !DIEnumerator(name: "PBUF_TRANSPORT", value: 74, isUnsigned: true)
!109 = !DIEnumerator(name: "PBUF_IP", value: 54, isUnsigned: true)
!110 = !DIEnumerator(name: "PBUF_LINK", value: 14, isUnsigned: true)
!111 = !DIEnumerator(name: "PBUF_RAW_TX", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "PBUF_RAW", value: 0, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 145, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118}
!115 = !DIEnumerator(name: "PBUF_RAM", value: 640, isUnsigned: true)
!116 = !DIEnumerator(name: "PBUF_ROM", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "PBUF_REF", value: 65, isUnsigned: true)
!118 = !DIEnumerator(name: "PBUF_POOL", value: 386, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lwip_pollscan_opts", file: !3, line: 3169, baseType: !7, size: 32, elements: !120)
!120 = !{!121, !122, !123}
!121 = !DIEnumerator(name: "LWIP_POLLSCAN_CLEAR", value: 1, isUnsigned: true)
!122 = !DIEnumerator(name: "LWIP_POLLSCAN_INC_WAIT", value: 2, isUnsigned: true)
!123 = !DIEnumerator(name: "LWIP_POLLSCAN_DEC_WAIT", value: 4, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netif_mac_filter_action", file: !125, line: 156, baseType: !7, size: 32, elements: !126)
!125 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/netif.h", directory: "/root/.unikraft/apps/redis/build")
!126 = !{!127, !128}
!127 = !DIEnumerator(name: "NETIF_DEL_MAC_FILTER", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "NETIF_ADD_MAC_FILTER", value: 1, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netconn_igmp", file: !37, line: 191, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132}
!131 = !DIEnumerator(name: "NETCONN_JOIN", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "NETCONN_LEAVE", value: 1, isUnsigned: true)
!133 = !{!134, !135, !139, !80, !143, !144, !146, !151, !188, !203, !169, !156, !206, !210, !219, !216, !221, !164, !228, !36, !238, !369, !696, !703, !711, !712, !204, !999, !225, !1001, !1003, !1004, !1005, !1006, !1008, !1030, !1032, !1034, !1036}
!134 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !136, line: 60, baseType: !137)
!136 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !138, line: 105, baseType: !134)
!138 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sptr", file: !140, line: 186, baseType: !141)
!140 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/arch/types.h", directory: "/root/.unikraft/apps/redis/build")
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !140, line: 128, baseType: !142)
!142 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!145 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16_t", file: !147, line: 128, baseType: !148)
!147 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/arch.h", directory: "/root/.unikraft/apps/redis/build")
!148 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !136, line: 32, baseType: !149)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !138, line: 55, baseType: !150)
!150 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !153, line: 84, size: 224, elements: !154)
!153 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/sockets.h", directory: "/root/.unikraft/apps/redis/build")
!154 = !{!155, !160, !162, !168, !172, !187}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_len", scope: !152, file: !153, line: 85, baseType: !156, size: 8)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8_t", file: !147, line: 125, baseType: !157)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !136, line: 24, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !138, line: 43, baseType: !159)
!159 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !152, file: !153, line: 86, baseType: !161, size: 8, offset: 8)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !153, line: 63, baseType: !156)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !152, file: !153, line: 87, baseType: !163, size: 16, offset: 16)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !153, line: 68, baseType: !164)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16_t", file: !147, line: 127, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !136, line: 36, baseType: !166)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !138, line: 57, baseType: !167)
!167 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !152, file: !153, line: 88, baseType: !169, size: 32, offset: 32)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32_t", file: !147, line: 129, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !136, line: 48, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !138, line: 79, baseType: !7)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !152, file: !153, line: 89, baseType: !173, size: 128, offset: 64)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !174, line: 62, size: 128, elements: !175)
!174 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/inet.h", directory: "/root/.unikraft/apps/redis/build")
!175 = !{!176}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "un", scope: !173, file: !174, line: 66, baseType: !177, size: 128)
!177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !173, file: !174, line: 63, size: 128, elements: !178)
!178 = !{!179, !183}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "u32_addr", scope: !177, file: !174, line: 64, baseType: !180, size: 128)
!180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !181)
!181 = !{!182}
!182 = !DISubrange(count: 4)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "u8_addr", scope: !177, file: !174, line: 65, baseType: !184, size: 128)
!184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 128, elements: !185)
!185 = !{!186}
!186 = !DISubrange(count: 16)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !152, file: !153, line: 90, baseType: !169, size: 32, offset: 192)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !153, line: 73, size: 128, elements: !190)
!190 = !{!191, !192, !193, !194, !199}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "sin_len", scope: !189, file: !153, line: 74, baseType: !156, size: 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !189, file: !153, line: 75, baseType: !161, size: 8, offset: 8)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !189, file: !153, line: 76, baseType: !163, size: 16, offset: 16)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !189, file: !153, line: 77, baseType: !195, size: 32, offset: 32)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !174, line: 58, size: 32, elements: !196)
!196 = !{!197}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !195, file: !174, line: 59, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !174, line: 55, baseType: !169)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !189, file: !153, line: 79, baseType: !200, size: 64, offset: 64)
!200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 64, elements: !201)
!201 = !{!202}
!202 = !DISubrange(count: 8)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_ptr_t", file: !147, line: 135, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !136, line: 82, baseType: !205)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintptr_t", file: !138, line: 232, baseType: !134)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !207, line: 200, baseType: !208)
!207 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/types.h", directory: "/root/.unikraft/apps/redis/build")
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_ssize_t", file: !209, line: 145, baseType: !142)
!209 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_types.h", directory: "/root/.unikraft/apps/redis/build")
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !212, line: 47, size: 128, elements: !213)
!212 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/sys/uio.h", directory: "/root/.unikraft/apps/redis/build")
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !211, file: !212, line: 48, baseType: !143, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !211, file: !212, line: 49, baseType: !216, size: 64, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !217, line: 40, baseType: !218)
!217 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/strings.h", directory: "/root/.unikraft/apps/redis/build")
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !209, line: 129, baseType: !134)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !220, line: 49, baseType: !142)
!220 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stddef.h", directory: "/root/.unikraft/apps/redis/build")
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netvector", file: !37, line: 293, size: 128, elements: !223)
!223 = !{!224, !227}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !222, file: !37, line: 295, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !222, file: !37, line: 297, baseType: !216, size: 64, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !153, line: 94, size: 128, elements: !231)
!231 = !{!232, !233, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "sa_len", scope: !230, file: !153, line: 95, baseType: !156, size: 8)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !230, file: !153, line: 96, baseType: !161, size: 8, offset: 8)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !230, file: !153, line: 97, baseType: !235, size: 112, offset: 16)
!235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 112, elements: !236)
!236 = !{!237}
!237 = !DISubrange(count: 14)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwip_select_cb", file: !240, line: 147, size: 704, elements: !241)
!240 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/priv/sockets_priv.h", directory: "/root/.unikraft/apps/redis/build")
!241 = !{!242, !243, !244, !255, !256, !257, !264, !266, !267}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !240, line: 149, baseType: !238, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !239, file: !240, line: 151, baseType: !238, size: 64, offset: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "readset", scope: !239, file: !240, line: 154, baseType: !245, size: 64, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_types_fd_set", file: !247, line: 55, baseType: !248)
!247 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/select.h", directory: "/root/.unikraft/apps/redis/build")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_types_fd_set", file: !247, line: 53, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "fds_bits", scope: !248, file: !247, line: 54, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 64, elements: !253)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_mask", file: !247, line: 45, baseType: !134)
!253 = !{!254}
!254 = !DISubrange(count: 1)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "writeset", scope: !239, file: !240, line: 156, baseType: !245, size: 64, offset: 192)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "exceptset", scope: !239, file: !240, line: 158, baseType: !245, size: 64, offset: 256)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "poll_fds", scope: !239, file: !240, line: 162, baseType: !258, size: 64, offset: 320)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !153, line: 542, size: 64, elements: !260)
!260 = !{!261, !262, !263}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !259, file: !153, line: 544, baseType: !80, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !259, file: !153, line: 545, baseType: !150, size: 16, offset: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !259, file: !153, line: 546, baseType: !150, size: 16, offset: 48)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nfds", scope: !239, file: !240, line: 164, baseType: !265, size: 32, offset: 384)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "nfds_t", file: !153, line: 541, baseType: !7)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "sem_signalled", scope: !239, file: !240, line: 167, baseType: !80, size: 32, offset: 416)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !239, file: !240, line: 169, baseType: !268, size: 256, offset: 448)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sem_t", file: !269, line: 72, baseType: !270)
!269 = !DIFile(filename: "/root/.unikraft/libs/lwip/include/arch/sys_arch.h", directory: "/root/.unikraft/apps/redis/build")
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 69, size: 256, elements: !271)
!271 = !{!272, !695}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !270, file: !269, line: 70, baseType: !273, size: 192)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_semaphore", file: !274, line: 51, size: 192, elements: !275)
!274 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uklock/include/uk/semaphore.h", directory: "/root/.unikraft/apps/redis/build")
!275 = !{!276, !277}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !273, file: !274, line: 52, baseType: !142, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !273, file: !274, line: 53, baseType: !278, size: 128, offset: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_waitq", file: !279, line: 42, size: 128, elements: !280)
!279 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/wait_types.h", directory: "/root/.unikraft/apps/redis/build")
!280 = !{!281, !693}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "stqh_first", scope: !278, file: !279, line: 42, baseType: !282, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_waitq_entry", file: !279, line: 35, size: 192, elements: !284)
!284 = !{!285, !286, !689}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "waiting", scope: !283, file: !279, line: 36, baseType: !80, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !283, file: !279, line: 37, baseType: !287, size: 64, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread", file: !289, line: 59, size: 1024, elements: !290)
!289 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/thread.h", directory: "/root/.unikraft/apps/redis/build")
!290 = !{!291, !294, !295, !296, !297, !303, !304, !307, !309, !310, !457, !458, !459, !659}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !288, file: !289, line: 60, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !288, file: !289, line: 61, baseType: !143, size: 64, offset: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "tls", scope: !288, file: !289, line: 62, baseType: !143, size: 64, offset: 128)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !288, file: !289, line: 63, baseType: !143, size: 64, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "thread_list", scope: !288, file: !289, line: 64, baseType: !298, size: 128, offset: 256)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !288, file: !289, line: 64, size: 128, elements: !299)
!299 = !{!300, !301}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !298, file: !289, line: 64, baseType: !287, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !298, file: !289, line: 64, baseType: !302, size: 64, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !288, file: !289, line: 65, baseType: !170, size: 32, offset: 384)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_time", scope: !288, file: !289, line: 66, baseType: !305, size: 64, offset: 448)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__snsec", file: !306, line: 49, baseType: !141)
!306 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/arch/time.h", directory: "/root/.unikraft/apps/redis/build")
!307 = !DIDerivedType(tag: DW_TAG_member, name: "detached", scope: !288, file: !289, line: 67, baseType: !308, size: 8, offset: 512)
!308 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "waiting_threads", scope: !288, file: !289, line: 68, baseType: !278, size: 128, offset: 576)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !288, file: !289, line: 69, baseType: !311, size: 64, offset: 704)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_sched", file: !313, line: 90, size: 2176, elements: !314)
!313 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/sched.h", directory: "/root/.unikraft/apps/redis/build")
!314 = !{!315, !320, !337, !342, !344, !346, !351, !359, !364, !370, !371, !372, !377, !454, !455, !456}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "yield", scope: !312, file: !313, line: 91, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_yield_func_t", file: !313, line: 68, baseType: !317)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DISubroutineType(types: !319)
!319 = !{null, !311}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "thread_add", scope: !312, file: !313, line: 93, baseType: !321, size: 64, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_add_func_t", file: !313, line: 71, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!80, !311, !287, !325}
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !327)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_thread_attr_t", file: !328, line: 62, baseType: !329)
!328 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/thread_attr.h", directory: "/root/.unikraft/apps/redis/build")
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread_attr", file: !328, line: 55, size: 128, elements: !330)
!330 = !{!331, !332, !334}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "detached", scope: !329, file: !328, line: 57, baseType: !308, size: 8)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !329, file: !328, line: 59, baseType: !333, size: 32, offset: 32)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "prio_t", file: !328, line: 53, baseType: !80)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "timeslice", scope: !329, file: !328, line: 61, baseType: !335, size: 64, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nsec", file: !306, line: 48, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !140, line: 129, baseType: !134)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "thread_remove", scope: !312, file: !313, line: 94, baseType: !338, size: 64, offset: 128)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_remove_func_t", file: !313, line: 74, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DISubroutineType(types: !341)
!341 = !{null, !311, !287}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "thread_blocked", scope: !312, file: !313, line: 95, baseType: !343, size: 64, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_blocked_func_t", file: !313, line: 76, baseType: !339)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "thread_woken", scope: !312, file: !313, line: 96, baseType: !345, size: 64, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_woken_func_t", file: !313, line: 78, baseType: !339)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "thread_set_prio", scope: !312, file: !313, line: 98, baseType: !347, size: 64, offset: 320)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_set_prio_func_t", file: !313, line: 81, baseType: !348)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!80, !311, !287, !333}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_get_prio", scope: !312, file: !313, line: 99, baseType: !352, size: 64, offset: 384)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_get_prio_func_t", file: !313, line: 83, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DISubroutineType(types: !355)
!355 = !{!80, !311, !356, !358}
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "thread_set_tslice", scope: !312, file: !313, line: 100, baseType: !360, size: 64, offset: 448)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_set_tslice_func_t", file: !313, line: 85, baseType: !361)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DISubroutineType(types: !363)
!363 = !{!80, !311, !287, !80}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_get_tslice", scope: !312, file: !313, line: 101, baseType: !365, size: 64, offset: 512)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_get_tslice_func_t", file: !313, line: 87, baseType: !366)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{!80, !311, !356, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "threads_started", scope: !312, file: !313, line: 104, baseType: !308, size: 8, offset: 576)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "idle", scope: !312, file: !313, line: 105, baseType: !288, size: 1024, offset: 640)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "exited_threads", scope: !312, file: !313, line: 106, baseType: !373, size: 128, offset: 1664)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread_list", file: !289, line: 93, size: 128, elements: !374)
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !373, file: !289, line: 93, baseType: !287, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !373, file: !289, line: 93, baseType: !302, size: 64, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "plat_ctx_cbs", scope: !312, file: !313, line: 107, baseType: !378, size: 192, offset: 1792)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ukplat_ctx_callbacks", file: !379, line: 59, size: 192, elements: !380)
!379 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/plat/thread.h", directory: "/root/.unikraft/apps/redis/build")
!380 = !{!381, !445, !449}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "create_cb", scope: !378, file: !379, line: 61, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "ukplat_ctx_create_func_t", file: !379, line: 51, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{!143, !386, !134, !134}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_alloc", file: !388, line: 77, size: 832, elements: !389)
!388 = !DIFile(filename: "/root/.unikraft/unikraft/lib/ukalloc/include/uk/alloc.h", directory: "/root/.unikraft/apps/redis/build")
!389 = !{!390, !396, !401, !406, !412, !414, !419, !420, !421, !426, !431, !436, !437, !438}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "malloc", scope: !387, file: !388, line: 79, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_malloc_func_t", file: !388, line: 54, baseType: !392)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DISubroutineType(types: !394)
!394 = !{!143, !386, !395}
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !220, line: 58, baseType: !134)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "calloc", scope: !387, file: !388, line: 80, baseType: !397, size: 64, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_calloc_func_t", file: !388, line: 56, baseType: !398)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!143, !386, !395, !395}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !387, file: !388, line: 81, baseType: !402, size: 64, offset: 128)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_realloc_func_t", file: !388, line: 62, baseType: !403)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{!143, !386, !143, !395}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "posix_memalign", scope: !387, file: !388, line: 82, baseType: !407, size: 64, offset: 192)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_posix_memalign_func_t", file: !388, line: 58, baseType: !408)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DISubroutineType(types: !410)
!410 = !{!80, !386, !411, !395, !395}
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "memalign", scope: !387, file: !388, line: 83, baseType: !413, size: 64, offset: 256)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_memalign_func_t", file: !388, line: 60, baseType: !398)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !387, file: !388, line: 84, baseType: !415, size: 64, offset: 320)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_free_func_t", file: !388, line: 64, baseType: !416)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{null, !386, !143}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "free_backend", scope: !387, file: !388, line: 87, baseType: !415, size: 64, offset: 384)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_backend", scope: !387, file: !388, line: 88, baseType: !391, size: 64, offset: 448)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "palloc", scope: !387, file: !388, line: 92, baseType: !422, size: 64, offset: 512)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_palloc_func_t", file: !388, line: 66, baseType: !423)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DISubroutineType(types: !425)
!425 = !{!143, !386, !134}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "pfree", scope: !387, file: !388, line: 93, baseType: !427, size: 64, offset: 576)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_pfree_func_t", file: !388, line: 68, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = !DISubroutineType(types: !430)
!430 = !{null, !386, !143, !134}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "addmem", scope: !387, file: !388, line: 99, baseType: !432, size: 64, offset: 640)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_addmem_func_t", file: !388, line: 70, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!80, !386, !143, !395}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !387, file: !388, line: 100, baseType: !395, size: 64, offset: 704)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !387, file: !388, line: 103, baseType: !386, size: 64, offset: 768)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !387, file: !388, line: 104, baseType: !439, offset: 832)
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !440, elements: !443)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !136, line: 20, baseType: !441)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !138, line: 41, baseType: !442)
!442 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!443 = !{!444}
!444 = !DISubrange(count: -1)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "start_cb", scope: !378, file: !379, line: 63, baseType: !446, size: 64, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{null, !143}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "switch_cb", scope: !378, file: !379, line: 65, baseType: !450, size: 64, offset: 128)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "ukplat_ctx_switch_func_t", file: !379, line: 56, baseType: !451)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !143, !143}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !312, file: !313, line: 108, baseType: !386, size: 64, offset: 1984)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !312, file: !313, line: 109, baseType: !311, size: 64, offset: 2048)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "prv", scope: !312, file: !313, line: 110, baseType: !143, size: 64, offset: 2112)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "prv", scope: !288, file: !289, line: 70, baseType: !143, size: 64, offset: 768)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !288, file: !289, line: 72, baseType: !80, size: 32, offset: 832)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "reent", scope: !288, file: !289, line: 82, baseType: !460, size: 64, offset: 896)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !462, line: 569, size: 14912, elements: !463)
!462 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/reent.h", directory: "/root/.unikraft/apps/redis/build")
!463 = !{!464, !465, !531, !532, !533, !534, !538, !539, !542, !543, !547, !559, !560, !561, !563, !564, !565, !623, !644, !645, !650, !657}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !461, file: !462, line: 571, baseType: !80, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !461, file: !462, line: 576, baseType: !466, size: 64, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !462, line: 287, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !462, line: 181, size: 1408, elements: !469)
!469 = !{!470, !472, !473, !474, !475, !476, !481, !482, !483, !487, !491, !496, !500, !501, !502, !503, !507, !509, !510, !511, !513, !514, !518, !530}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !468, file: !462, line: 182, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !468, file: !462, line: 183, baseType: !80, size: 32, offset: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !468, file: !462, line: 184, baseType: !80, size: 32, offset: 96)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !468, file: !462, line: 185, baseType: !150, size: 16, offset: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !468, file: !462, line: 186, baseType: !150, size: 16, offset: 144)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !468, file: !462, line: 187, baseType: !477, size: 128, offset: 192)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !462, line: 117, size: 128, elements: !478)
!478 = !{!479, !480}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !477, file: !462, line: 118, baseType: !471, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !477, file: !462, line: 119, baseType: !80, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !468, file: !462, line: 188, baseType: !80, size: 32, offset: 320)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !468, file: !462, line: 195, baseType: !143, size: 64, offset: 384)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !468, file: !462, line: 197, baseType: !484, size: 64, offset: 448)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!208, !460, !143, !144, !80}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !468, file: !462, line: 199, baseType: !488, size: 64, offset: 512)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DISubroutineType(types: !490)
!490 = !{!208, !460, !143, !292, !80}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !468, file: !462, line: 202, baseType: !492, size: 64, offset: 576)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!495, !460, !143, !495, !80}
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !209, line: 114, baseType: !142)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !468, file: !462, line: 203, baseType: !497, size: 64, offset: 640)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{!80, !460, !143}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !468, file: !462, line: 206, baseType: !477, size: 128, offset: 704)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !468, file: !462, line: 207, baseType: !471, size: 64, offset: 832)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !468, file: !462, line: 208, baseType: !80, size: 32, offset: 896)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !468, file: !462, line: 211, baseType: !504, size: 24, offset: 928)
!504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 24, elements: !505)
!505 = !{!506}
!506 = !DISubrange(count: 3)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !468, file: !462, line: 212, baseType: !508, size: 8, offset: 952)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 8, elements: !253)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !468, file: !462, line: 215, baseType: !477, size: 128, offset: 960)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !468, file: !462, line: 218, baseType: !80, size: 32, offset: 1088)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !468, file: !462, line: 219, baseType: !512, size: 64, offset: 1152)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !209, line: 44, baseType: !142)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !468, file: !462, line: 222, baseType: !460, size: 64, offset: 1216)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !468, file: !462, line: 226, baseType: !515, size: 32, offset: 1280)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !209, line: 175, baseType: !516)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_RECURSIVE_T", file: !517, line: 12, baseType: !80)
!517 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/lock.h", directory: "/root/.unikraft/apps/redis/build")
!518 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !468, file: !462, line: 228, baseType: !519, size: 64, offset: 1312)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !209, line: 171, baseType: !520)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !209, line: 163, size: 64, elements: !521)
!521 = !{!522, !523}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !520, file: !209, line: 165, baseType: !80, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !520, file: !209, line: 170, baseType: !524, size: 32, offset: 32)
!524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !520, file: !209, line: 166, size: 32, elements: !525)
!525 = !{!526, !528}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !524, file: !209, line: 168, baseType: !527, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !220, line: 124, baseType: !7)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !524, file: !209, line: 169, baseType: !529, size: 32)
!529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 32, elements: !181)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !468, file: !462, line: 229, baseType: !80, size: 32, offset: 1376)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !461, file: !462, line: 576, baseType: !466, size: 64, offset: 128)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !461, file: !462, line: 576, baseType: !466, size: 64, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !461, file: !462, line: 578, baseType: !80, size: 32, offset: 256)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !461, file: !462, line: 579, baseType: !535, size: 200, offset: 288)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 200, elements: !536)
!536 = !{!537}
!537 = !DISubrange(count: 25)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !461, file: !462, line: 582, baseType: !80, size: 32, offset: 512)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !461, file: !462, line: 583, baseType: !540, size: 64, offset: 576)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !462, line: 40, flags: DIFlagFwdDecl)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !461, file: !462, line: 585, baseType: !80, size: 32, offset: 640)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !461, file: !462, line: 587, baseType: !544, size: 64, offset: 704)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DISubroutineType(types: !546)
!546 = !{null, !460}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !461, file: !462, line: 590, baseType: !548, size: 64, offset: 768)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !462, line: 47, size: 256, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !556}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !549, file: !462, line: 49, baseType: !548, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !549, file: !462, line: 50, baseType: !80, size: 32, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !549, file: !462, line: 50, baseType: !80, size: 32, offset: 96)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !549, file: !462, line: 50, baseType: !80, size: 32, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !549, file: !462, line: 50, baseType: !80, size: 32, offset: 160)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !549, file: !462, line: 51, baseType: !557, size: 32, offset: 192)
!557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, size: 32, elements: !253)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !462, line: 25, baseType: !7)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !461, file: !462, line: 591, baseType: !80, size: 32, offset: 832)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !461, file: !462, line: 592, baseType: !548, size: 64, offset: 896)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !461, file: !462, line: 593, baseType: !562, size: 64, offset: 960)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !461, file: !462, line: 596, baseType: !80, size: 32, offset: 1024)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !461, file: !462, line: 597, baseType: !144, size: 64, offset: 1088)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !461, file: !462, line: 632, baseType: !566, size: 2880, offset: 1152)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !462, line: 599, size: 2880, elements: !567)
!567 = !{!568, !614}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !566, file: !462, line: 622, baseType: !569, size: 1728)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !566, file: !462, line: 601, size: 1728, elements: !570)
!570 = !{!571, !572, !573, !577, !589, !590, !592, !599, !600, !601, !602, !603, !607, !608, !609, !610, !611, !612, !613}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !569, file: !462, line: 603, baseType: !7, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !569, file: !462, line: 604, baseType: !144, size: 64, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !569, file: !462, line: 605, baseType: !574, size: 208, offset: 128)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 208, elements: !575)
!575 = !{!576}
!576 = !DISubrange(count: 26)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !569, file: !462, line: 606, baseType: !578, size: 288, offset: 352)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !462, line: 55, size: 288, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585, !586, !587, !588}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !578, file: !462, line: 57, baseType: !80, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !578, file: !462, line: 58, baseType: !80, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !578, file: !462, line: 59, baseType: !80, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !578, file: !462, line: 60, baseType: !80, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !578, file: !462, line: 61, baseType: !80, size: 32, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !578, file: !462, line: 62, baseType: !80, size: 32, offset: 160)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !578, file: !462, line: 63, baseType: !80, size: 32, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !578, file: !462, line: 64, baseType: !80, size: 32, offset: 224)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !578, file: !462, line: 65, baseType: !80, size: 32, offset: 256)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !569, file: !462, line: 607, baseType: !80, size: 32, offset: 640)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !569, file: !462, line: 608, baseType: !591, size: 64, offset: 704)
!591 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !569, file: !462, line: 609, baseType: !593, size: 112, offset: 768)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !462, line: 319, size: 112, elements: !594)
!594 = !{!595, !597, !598}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !593, file: !462, line: 320, baseType: !596, size: 48)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 48, elements: !505)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !593, file: !462, line: 321, baseType: !596, size: 48, offset: 48)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !593, file: !462, line: 322, baseType: !167, size: 16, offset: 96)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !569, file: !462, line: 610, baseType: !519, size: 64, offset: 896)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !569, file: !462, line: 611, baseType: !519, size: 64, offset: 960)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !569, file: !462, line: 612, baseType: !519, size: 64, offset: 1024)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !569, file: !462, line: 613, baseType: !200, size: 64, offset: 1088)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !569, file: !462, line: 614, baseType: !604, size: 192, offset: 1152)
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 192, elements: !605)
!605 = !{!606}
!606 = !DISubrange(count: 24)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !569, file: !462, line: 615, baseType: !80, size: 32, offset: 1344)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !569, file: !462, line: 616, baseType: !519, size: 64, offset: 1376)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !569, file: !462, line: 617, baseType: !519, size: 64, offset: 1440)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !569, file: !462, line: 618, baseType: !519, size: 64, offset: 1504)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !569, file: !462, line: 619, baseType: !519, size: 64, offset: 1568)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !569, file: !462, line: 620, baseType: !519, size: 64, offset: 1632)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !569, file: !462, line: 621, baseType: !80, size: 32, offset: 1696)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !566, file: !462, line: 631, baseType: !615, size: 2880)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !566, file: !462, line: 626, size: 2880, elements: !616)
!616 = !{!617, !621}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !615, file: !462, line: 629, baseType: !618, size: 1920)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 1920, elements: !619)
!619 = !{!620}
!620 = !DISubrange(count: 30)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !615, file: !462, line: 630, baseType: !622, size: 960, offset: 1920)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 960, elements: !619)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !461, file: !462, line: 636, baseType: !624, size: 64, offset: 4032)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !462, line: 93, size: 6336, elements: !626)
!626 = !{!627, !628, !629, !636}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !625, file: !462, line: 94, baseType: !624, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !625, file: !462, line: 95, baseType: !80, size: 32, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !625, file: !462, line: 97, baseType: !630, size: 2048, offset: 128)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 2048, elements: !634)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DISubroutineType(types: !633)
!633 = !{null}
!634 = !{!635}
!635 = !DISubrange(count: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !625, file: !462, line: 98, baseType: !637, size: 4160, offset: 2176)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !462, line: 74, size: 4160, elements: !638)
!638 = !{!639, !641, !642, !643}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !637, file: !462, line: 75, baseType: !640, size: 2048)
!640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 2048, elements: !634)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !637, file: !462, line: 76, baseType: !640, size: 2048, offset: 2048)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !637, file: !462, line: 78, baseType: !558, size: 32, offset: 4096)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !637, file: !462, line: 81, baseType: !558, size: 32, offset: 4128)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !461, file: !462, line: 637, baseType: !625, size: 6336, offset: 4096)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !461, file: !462, line: 641, baseType: !646, size: 64, offset: 10432)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !80}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !461, file: !462, line: 646, baseType: !651, size: 192, offset: 10496)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !462, line: 291, size: 192, elements: !652)
!652 = !{!653, !655, !656}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !651, file: !462, line: 293, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !651, file: !462, line: 294, baseType: !80, size: 32, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !651, file: !462, line: 295, baseType: !466, size: 64, offset: 128)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !461, file: !462, line: 648, baseType: !658, size: 4224, offset: 10688)
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 4224, elements: !505)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "signals_container", scope: !288, file: !289, line: 85, baseType: !660, size: 64, offset: 960)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread_sig", file: !6, line: 114, size: 640, elements: !662)
!662 = !{!663, !667, !668, !675, !688}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !661, file: !6, line: 116, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !665, line: 64, baseType: !666)
!665 = !DIFile(filename: "/root/.unikraft/libs/newlib/musl-imported/include/signal.h", directory: "/root/.unikraft/apps/redis/build")
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !665, line: 63, baseType: !134)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !661, file: !6, line: 118, baseType: !664, size: 64, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "pending_signals", scope: !661, file: !6, line: 120, baseType: !669, size: 128, offset: 128)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_list_head", file: !670, line: 51, size: 128, elements: !671)
!670 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/list.h", directory: "/root/.unikraft/apps/redis/build")
!671 = !{!672, !674}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !669, file: !670, line: 52, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !669, file: !670, line: 53, baseType: !673, size: 64, offset: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !661, file: !6, line: 122, baseType: !676, size: 256, offset: 256)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread_sig_wait", file: !6, line: 98, size: 256, elements: !677)
!677 = !{!678, !679, !680}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !676, file: !6, line: 107, baseType: !5, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "awaited", scope: !676, file: !6, line: 109, baseType: !664, size: 64, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "received_signal", scope: !676, file: !6, line: 111, baseType: !681, size: 96, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !665, line: 72, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !665, line: 68, size: 96, elements: !683)
!683 = !{!684, !685, !686}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !682, file: !665, line: 69, baseType: !80, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !682, file: !665, line: 70, baseType: !80, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !682, file: !665, line: 71, baseType: !687, size: 32, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !665, line: 61, baseType: !80)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !661, file: !6, line: 124, baseType: !669, size: 128, offset: 512)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "thread_list", scope: !283, file: !279, line: 38, baseType: !690, size: 64, offset: 128)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !283, file: !279, line: 38, size: 64, elements: !691)
!691 = !{!692}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "stqe_next", scope: !690, file: !279, line: 38, baseType: !282, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "stqh_last", scope: !278, file: !279, line: 42, baseType: !694, size: 64, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !270, file: !269, line: 71, baseType: !80, size: 32, offset: 192)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip4_addr_t", file: !699, line: 57, baseType: !700)
!699 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip4_addr.h", directory: "/root/.unikraft/apps/redis/build")
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip4_addr", file: !699, line: 51, size: 32, elements: !701)
!701 = !{!702}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !700, file: !699, line: 52, baseType: !169, size: 32)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !705)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip6_addr_t", file: !706, line: 67, baseType: !707)
!706 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip6_addr.h", directory: "/root/.unikraft/apps/redis/build")
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_addr", file: !706, line: 59, size: 160, elements: !708)
!708 = !{!709, !710}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !707, file: !706, line: 60, baseType: !180, size: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "zone", scope: !707, file: !706, line: 62, baseType: !156, size: 8, offset: 128)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnode", file: !18, line: 69, size: 960, elements: !715)
!715 = !{!716, !717, !718, !990, !991, !992, !993, !994, !995, !996, !997, !998}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "v_ino", scope: !714, file: !18, line: 70, baseType: !135, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "v_link", scope: !714, file: !18, line: 71, baseType: !669, size: 128, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "v_mount", scope: !714, file: !18, line: 72, baseType: !719, size: 64, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mount", file: !721, line: 46, size: 16960, elements: !722)
!721 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/mount.h", directory: "/root/.unikraft/apps/redis/build")
!722 = !{!723, !975, !976, !977, !981, !982, !985, !986, !987, !988, !989}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "m_op", scope: !720, file: !721, line: 47, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vfsops", file: !721, line: 148, size: 384, elements: !726)
!726 = !{!727, !731, !735, !739, !743, !776}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_mount", scope: !725, file: !721, line: 149, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DISubroutineType(types: !730)
!730 = !{!80, !719, !292, !80, !225}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_unmount", scope: !725, file: !721, line: 150, baseType: !732, size: 64, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{!80, !719, !80}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_sync", scope: !725, file: !721, line: 151, baseType: !736, size: 64, offset: 128)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{!80, !719}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_vget", scope: !725, file: !721, line: 152, baseType: !740, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{!80, !719, !713}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_statfs", scope: !725, file: !721, line: 153, baseType: !744, size: 64, offset: 256)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!80, !719, !747}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !749, line: 14, size: 896, elements: !750)
!749 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/sys/statfs.h", directory: "/root/.unikraft/apps/redis/build")
!750 = !{!751, !752, !753, !756, !757, !758, !762, !763, !771, !772, !773, !774}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !748, file: !749, line: 15, baseType: !134, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !748, file: !749, line: 15, baseType: !134, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !748, file: !749, line: 16, baseType: !754, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsblkcnt_t", file: !207, line: 144, baseType: !755)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !209, line: 36, baseType: !137)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !748, file: !749, line: 16, baseType: !754, size: 64, offset: 192)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !748, file: !749, line: 16, baseType: !754, size: 64, offset: 256)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !748, file: !749, line: 17, baseType: !759, size: 32, offset: 320)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsfilcnt_t", file: !760, line: 43, baseType: !761)
!760 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/sys/statvfs.h", directory: "/root/.unikraft/apps/redis/build")
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !209, line: 40, baseType: !171)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !748, file: !749, line: 17, baseType: !759, size: 32, offset: 352)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !748, file: !749, line: 18, baseType: !764, size: 64, offset: 384)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsid_t", file: !749, line: 12, baseType: !765)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__fsid_t", file: !749, line: 10, size: 64, elements: !766)
!766 = !{!767}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !765, file: !749, line: 11, baseType: !768, size: 64)
!768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 64, elements: !769)
!769 = !{!770}
!770 = !DISubrange(count: 2)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !748, file: !749, line: 19, baseType: !134, size: 64, offset: 448)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !748, file: !749, line: 19, baseType: !134, size: 64, offset: 512)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !748, file: !749, line: 19, baseType: !134, size: 64, offset: 576)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !748, file: !749, line: 19, baseType: !775, size: 256, offset: 640)
!775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 256, elements: !181)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_vnops", scope: !725, file: !721, line: 154, baseType: !777, size: 64, offset: 320)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnops", file: !18, line: 178, size: 1472, elements: !779)
!779 = !{!780, !825, !830, !843, !848, !853, !858, !860, !879, !884, !891, !896, !901, !903, !905, !941, !943, !948, !953, !955, !960, !965, !970}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "vop_open", scope: !778, file: !18, line: 179, baseType: !781, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_open_t", file: !18, line: 148, baseType: !782)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{!80, !785}
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vfscore_file", file: !787, line: 53, size: 640, elements: !788)
!787 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/file.h", directory: "/root/.unikraft/apps/redis/build")
!788 = !{!789, !790, !791, !792, !795, !796, !797, !824}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !786, file: !787, line: 54, baseType: !80, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !786, file: !787, line: 55, baseType: !80, size: 32, offset: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !786, file: !787, line: 56, baseType: !80, size: 32, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "f_offset", scope: !786, file: !787, line: 57, baseType: !793, size: 64, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !207, line: 173, baseType: !794)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !209, line: 100, baseType: !512)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "f_data", scope: !786, file: !787, line: 58, baseType: !143, size: 64, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "f_vfs_flags", scope: !786, file: !787, line: 59, baseType: !80, size: 32, offset: 256)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "f_dentry", scope: !786, file: !787, line: 60, baseType: !798, size: 64, offset: 320)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !800, line: 42, size: 1088, elements: !801)
!800 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/dentry.h", directory: "/root/.unikraft/apps/redis/build")
!801 = !{!802, !809, !810, !811, !812, !813, !814, !815, !822, !823}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "d_link", scope: !799, file: !800, line: 43, baseType: !803, size: 128)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_hlist_node", file: !670, line: 271, size: 128, elements: !804)
!804 = !{!805, !807}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !803, file: !670, line: 272, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !803, file: !670, line: 272, baseType: !808, size: 64, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "d_refcnt", scope: !799, file: !800, line: 44, baseType: !80, size: 32, offset: 128)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "d_path", scope: !799, file: !800, line: 45, baseType: !144, size: 64, offset: 192)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "d_vnode", scope: !799, file: !800, line: 46, baseType: !713, size: 64, offset: 256)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "d_mount", scope: !799, file: !800, line: 47, baseType: !719, size: 64, offset: 320)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !799, file: !800, line: 48, baseType: !798, size: 64, offset: 384)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "d_names_link", scope: !799, file: !800, line: 49, baseType: !669, size: 128, offset: 448)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "d_lock", scope: !799, file: !800, line: 50, baseType: !816, size: 256, offset: 576)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_mutex", file: !817, line: 58, size: 256, elements: !818)
!817 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uklock/include/uk/mutex.h", directory: "/root/.unikraft/apps/redis/build")
!818 = !{!819, !820, !821}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !816, file: !817, line: 59, baseType: !80, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !816, file: !817, line: 60, baseType: !287, size: 64, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !816, file: !817, line: 61, baseType: !278, size: 128, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "d_child_list", scope: !799, file: !800, line: 51, baseType: !669, size: 128, offset: 832)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "d_child_link", scope: !799, file: !800, line: 52, baseType: !669, size: 128, offset: 960)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !786, file: !787, line: 61, baseType: !816, size: 256, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "vop_close", scope: !778, file: !18, line: 180, baseType: !826, size: 64, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_close_t", file: !18, line: 149, baseType: !827)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!80, !713, !785}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "vop_read", scope: !778, file: !18, line: 181, baseType: !831, size: 64, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_read_t", file: !18, line: 150, baseType: !832)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!80, !713, !785, !835, !80}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uio", file: !13, line: 53, size: 320, elements: !837)
!837 = !{!838, !839, !840, !841, !842}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "uio_iov", scope: !836, file: !13, line: 54, baseType: !210, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "uio_iovcnt", scope: !836, file: !13, line: 55, baseType: !80, size: 32, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "uio_offset", scope: !836, file: !13, line: 56, baseType: !793, size: 64, offset: 128)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "uio_resid", scope: !836, file: !13, line: 57, baseType: !206, size: 64, offset: 192)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "uio_rw", scope: !836, file: !13, line: 58, baseType: !12, size: 32, offset: 256)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "vop_write", scope: !778, file: !18, line: 182, baseType: !844, size: 64, offset: 192)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_write_t", file: !18, line: 152, baseType: !845)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{!80, !713, !835, !80}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "vop_seek", scope: !778, file: !18, line: 183, baseType: !849, size: 64, offset: 256)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_seek_t", file: !18, line: 153, baseType: !850)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!80, !713, !785, !793, !793}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "vop_ioctl", scope: !778, file: !18, line: 184, baseType: !854, size: 64, offset: 320)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_ioctl_t", file: !18, line: 155, baseType: !855)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!80, !713, !785, !134, !143}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "vop_fsync", scope: !778, file: !18, line: 185, baseType: !859, size: 64, offset: 384)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_fsync_t", file: !18, line: 156, baseType: !827)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "vop_readdir", scope: !778, file: !18, line: 186, baseType: !861, size: 64, offset: 448)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_readdir_t", file: !18, line: 157, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{!80, !713, !785, !865}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !867, line: 55, size: 2240, elements: !868)
!867 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/dirent.h", directory: "/root/.unikraft/apps/redis/build")
!868 = !{!869, !872, !873, !874, !875}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !866, file: !867, line: 56, baseType: !870, size: 16)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !207, line: 155, baseType: !871)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !209, line: 73, baseType: !167)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !866, file: !867, line: 57, baseType: !793, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !866, file: !867, line: 58, baseType: !167, size: 16, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !866, file: !867, line: 59, baseType: !159, size: 8, offset: 144)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !866, file: !867, line: 60, baseType: !876, size: 2048, offset: 152)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 2048, elements: !877)
!877 = !{!878}
!878 = !DISubrange(count: 256)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "vop_lookup", scope: !778, file: !18, line: 187, baseType: !880, size: 64, offset: 512)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_lookup_t", file: !18, line: 158, baseType: !881)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DISubroutineType(types: !883)
!883 = !{!80, !713, !144, !712}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "vop_create", scope: !778, file: !18, line: 188, baseType: !885, size: 64, offset: 576)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_create_t", file: !18, line: 159, baseType: !886)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!80, !713, !144, !889}
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !207, line: 205, baseType: !890)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !209, line: 88, baseType: !171)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "vop_remove", scope: !778, file: !18, line: 189, baseType: !892, size: 64, offset: 640)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_remove_t", file: !18, line: 160, baseType: !893)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{!80, !713, !713, !144}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "vop_rename", scope: !778, file: !18, line: 190, baseType: !897, size: 64, offset: 704)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_rename_t", file: !18, line: 161, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!80, !713, !713, !144, !713, !713, !144}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "vop_mkdir", scope: !778, file: !18, line: 191, baseType: !902, size: 64, offset: 768)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_mkdir_t", file: !18, line: 163, baseType: !886)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "vop_rmdir", scope: !778, file: !18, line: 192, baseType: !904, size: 64, offset: 832)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_rmdir_t", file: !18, line: 164, baseType: !893)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "vop_getattr", scope: !778, file: !18, line: 193, baseType: !906, size: 64, offset: 896)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_getattr_t", file: !18, line: 165, baseType: !907)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!80, !713, !910}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vattr", file: !18, line: 92, size: 768, elements: !912)
!912 = !{!913, !914, !915, !916, !919, !922, !925, !928, !929, !936, !937, !938, !939, !940}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "va_mask", scope: !911, file: !18, line: 93, baseType: !7, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "va_type", scope: !911, file: !18, line: 94, baseType: !17, size: 32, offset: 32)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "va_mode", scope: !911, file: !18, line: 95, baseType: !889, size: 32, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "va_nlink", scope: !911, file: !18, line: 96, baseType: !917, size: 16, offset: 96)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !207, line: 210, baseType: !918)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !209, line: 210, baseType: !167)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "va_uid", scope: !911, file: !18, line: 97, baseType: !920, size: 16, offset: 112)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !207, line: 181, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !209, line: 58, baseType: !167)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "va_gid", scope: !911, file: !18, line: 98, baseType: !923, size: 16, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !207, line: 185, baseType: !924)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !209, line: 61, baseType: !167)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "va_fsid", scope: !911, file: !18, line: 99, baseType: !926, size: 16, offset: 144)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !207, line: 177, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !209, line: 54, baseType: !150)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "va_nodeid", scope: !911, file: !18, line: 100, baseType: !870, size: 16, offset: 160)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "va_atime", scope: !911, file: !18, line: 101, baseType: !930, size: 128, offset: 192)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !931, line: 52, size: 128, elements: !932)
!931 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/include/uk/time_types.h", directory: "/root/.unikraft/apps/redis/build")
!932 = !{!933, !935}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !930, file: !931, line: 53, baseType: !934, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !931, line: 34, baseType: !142)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !930, file: !931, line: 54, baseType: !142, size: 64, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "va_mtime", scope: !911, file: !18, line: 102, baseType: !930, size: 128, offset: 320)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "va_ctime", scope: !911, file: !18, line: 103, baseType: !930, size: 128, offset: 448)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "va_rdev", scope: !911, file: !18, line: 104, baseType: !926, size: 16, offset: 576)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "va_nblocks", scope: !911, file: !18, line: 105, baseType: !135, size: 64, offset: 640)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "va_size", scope: !911, file: !18, line: 106, baseType: !793, size: 64, offset: 704)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "vop_setattr", scope: !778, file: !18, line: 194, baseType: !942, size: 64, offset: 960)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_setattr_t", file: !18, line: 166, baseType: !907)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "vop_inactive", scope: !778, file: !18, line: 195, baseType: !944, size: 64, offset: 1024)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_inactive_t", file: !18, line: 167, baseType: !945)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!80, !713}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "vop_truncate", scope: !778, file: !18, line: 196, baseType: !949, size: 64, offset: 1088)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_truncate_t", file: !18, line: 168, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{!80, !713, !793}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "vop_link", scope: !778, file: !18, line: 197, baseType: !954, size: 64, offset: 1152)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_link_t", file: !18, line: 169, baseType: !893)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "vop_cache", scope: !778, file: !18, line: 198, baseType: !956, size: 64, offset: 1216)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_cache_t", file: !18, line: 170, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{!80, !713, !785, !835}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "vop_fallocate", scope: !778, file: !18, line: 199, baseType: !961, size: 64, offset: 1280)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_fallocate_t", file: !18, line: 171, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!80, !713, !80, !793, !793}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "vop_readlink", scope: !778, file: !18, line: 200, baseType: !966, size: 64, offset: 1344)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_readlink_t", file: !18, line: 172, baseType: !967)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{!80, !713, !835}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "vop_symlink", scope: !778, file: !18, line: 201, baseType: !971, size: 64, offset: 1408)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_symlink_t", file: !18, line: 173, baseType: !972)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DISubroutineType(types: !974)
!974 = !{!80, !713, !144, !144}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "m_flags", scope: !720, file: !721, line: 48, baseType: !80, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "m_count", scope: !720, file: !721, line: 49, baseType: !80, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "m_path", scope: !720, file: !721, line: 50, baseType: !978, size: 8192, offset: 128)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 8192, elements: !979)
!979 = !{!980}
!980 = !DISubrange(count: 1024)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "m_special", scope: !720, file: !721, line: 51, baseType: !978, size: 8192, offset: 8320)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "m_dev", scope: !720, file: !721, line: 52, baseType: !983, size: 64, offset: 16512)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !721, line: 52, flags: DIFlagFwdDecl)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "m_root", scope: !720, file: !721, line: 53, baseType: !798, size: 64, offset: 16576)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "m_covered", scope: !720, file: !721, line: 54, baseType: !798, size: 64, offset: 16640)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !720, file: !721, line: 55, baseType: !143, size: 64, offset: 16704)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_list", scope: !720, file: !721, line: 56, baseType: !669, size: 128, offset: 16768)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "m_fsid", scope: !720, file: !721, line: 57, baseType: !764, size: 64, offset: 16896)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "v_op", scope: !714, file: !18, line: 73, baseType: !777, size: 64, offset: 256)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "v_refcnt", scope: !714, file: !18, line: 74, baseType: !80, size: 32, offset: 320)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "v_type", scope: !714, file: !18, line: 75, baseType: !80, size: 32, offset: 352)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "v_flags", scope: !714, file: !18, line: 76, baseType: !80, size: 32, offset: 384)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "v_mode", scope: !714, file: !18, line: 77, baseType: !889, size: 32, offset: 416)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "v_size", scope: !714, file: !18, line: 78, baseType: !793, size: 64, offset: 448)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "v_lock", scope: !714, file: !18, line: 79, baseType: !816, size: 256, offset: 512)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "v_names", scope: !714, file: !18, line: 80, baseType: !669, size: 128, offset: 768)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "v_data", scope: !714, file: !18, line: 81, baseType: !143, size: 64, offset: 896)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !189)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !80)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !153, line: 185, size: 192, elements: !1011)
!1011 = !{!1012, !1016}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_name", scope: !1010, file: !153, line: 186, baseType: !1013, size: 48)
!1013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 48, elements: !1014)
!1014 = !{!1015}
!1015 = !DISubrange(count: 6)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !1010, file: !153, line: 200, baseType: !1017, size: 128, offset: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1010, file: !153, line: 187, size: 128, elements: !1018)
!1018 = !{!1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !1017, file: !153, line: 188, baseType: !230, size: 128)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !1017, file: !153, line: 189, baseType: !230, size: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !1017, file: !153, line: 190, baseType: !230, size: 128)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !1017, file: !153, line: 191, baseType: !230, size: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !1017, file: !153, line: 192, baseType: !230, size: 128)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !1017, file: !153, line: 193, baseType: !150, size: 16)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !1017, file: !153, line: 194, baseType: !80, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !1017, file: !153, line: 195, baseType: !80, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !1017, file: !153, line: 197, baseType: !1013, size: 48)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !1017, file: !153, line: 198, baseType: !1013, size: 48)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !1017, file: !153, line: 199, baseType: !144, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcpflags_t", file: !1035, line: 206, baseType: !164)
!1035 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/tcp.h", directory: "/root/.unikraft/apps/redis/build")
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_mreq", file: !153, line: 374, size: 160, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6mr_multiaddr", scope: !1038, file: !153, line: 375, baseType: !173, size: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6mr_interface", scope: !1038, file: !153, line: 376, baseType: !7, size: 32, offset: 128)
!1042 = !{!0, !1043, !1062, !1067, !1147, !1149, !1151, !1153, !1155, !1157, !1159}
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "__str", scope: !1045, file: !1046, line: 198, type: !200, isLocal: true, isDefinition: true)
!1045 = distinct !DISubprogram(name: "uk_pr_crit", scope: !1046, file: !1046, line: 194, type: !1047, isLocal: true, isDefinition: true, scopeLine: 195, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1049)
!1046 = !DIFile(filename: "/root/.unikraft/unikraft/lib/ukdebug/include/uk/print.h", directory: "/root/.unikraft/apps/redis/build")
!1047 = !DISubroutineType(types: !1048)
!1048 = !{null, !292, null}
!1049 = !{!1050, !1051}
!1050 = !DILocalVariable(name: "fmt", arg: 1, scope: !1045, file: !1046, line: 194, type: !292)
!1051 = !DILocalVariable(name: "argp", scope: !1045, file: !1046, line: 196, type: !1052)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1053, line: 32, baseType: !1054)
!1053 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stdarg.h", directory: "/root/.unikraft/apps/redis/build")
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 196, baseType: !1055)
!1055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1056, size: 192, elements: !253)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 196, size: 192, elements: !1057)
!1057 = !{!1058, !1059, !1060, !1061}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1056, file: !3, line: 196, baseType: !7, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1056, file: !3, line: 196, baseType: !7, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1056, file: !3, line: 196, baseType: !143, size: 64, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1056, file: !3, line: 196, baseType: !143, size: 64, offset: 128)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__str", scope: !1045, file: !1046, line: 198, type: !1064, isLocal: true, isDefinition: true)
!1064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 80, elements: !1065)
!1065 = !{!1066}
!1066 = !DISubrange(count: 10)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__str", scope: !1069, file: !3, line: 241, type: !1146, isLocal: true, isDefinition: true)
!1069 = distinct !DISubprogram(name: "sock_fd_alloc", scope: !3, file: !3, line: 189, type: !1070, isLocal: true, isDefinition: true, scopeLine: 190, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1072)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!80, !80}
!1072 = !{!1073, !1074, !1075, !1076, !1082, !1083, !1084, !1085, !1086, !1092, !1093, !1099, !1100, !1101, !1107, !1113, !1114, !1115, !1121, !1122, !1128, !1134, !1140}
!1073 = !DILocalVariable(name: "sock_fd", arg: 1, scope: !1069, file: !3, line: 189, type: !80)
!1074 = !DILocalVariable(name: "ret", scope: !1069, file: !3, line: 191, type: !80)
!1075 = !DILocalVariable(name: "vfs_fd", scope: !1069, file: !3, line: 192, type: !80)
!1076 = !DILocalVariable(name: "file", scope: !1069, file: !3, line: 193, type: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_net_file", file: !3, line: 156, size: 128, elements: !1079)
!1079 = !{!1080, !1081}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "vfscore_file", scope: !1078, file: !3, line: 157, baseType: !785, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "sock_fd", scope: !1078, file: !3, line: 158, baseType: !80, size: 32, offset: 64)
!1082 = !DILocalVariable(name: "vfs_file", scope: !1069, file: !3, line: 194, type: !785)
!1083 = !DILocalVariable(name: "s_dentry", scope: !1069, file: !3, line: 195, type: !798)
!1084 = !DILocalVariable(name: "s_vnode", scope: !1069, file: !3, line: 196, type: !713)
!1085 = !DILocalVariable(name: "_dss_s_vnode", scope: !1069, file: !3, line: 197, type: !712)
!1086 = !DILocalVariable(name: "tid", scope: !1087, file: !3, line: 200, type: !170)
!1087 = distinct !DILexicalBlock(scope: !1088, file: !3, line: 200, column: 2)
!1088 = distinct !DILexicalBlock(scope: !1089, file: !3, line: 200, column: 2)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !3, line: 200, column: 2)
!1090 = distinct !DILexicalBlock(scope: !1091, file: !3, line: 200, column: 2)
!1091 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 200, column: 2)
!1092 = !DILocalVariable(name: "_ret", scope: !1087, file: !3, line: 200, type: !135)
!1093 = !DILocalVariable(name: "tid", scope: !1094, file: !3, line: 224, type: !170)
!1094 = distinct !DILexicalBlock(scope: !1095, file: !3, line: 224, column: 2)
!1095 = distinct !DILexicalBlock(scope: !1096, file: !3, line: 224, column: 2)
!1096 = distinct !DILexicalBlock(scope: !1097, file: !3, line: 224, column: 2)
!1097 = distinct !DILexicalBlock(scope: !1098, file: !3, line: 224, column: 2)
!1098 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 224, column: 2)
!1099 = !DILocalVariable(name: "_ret", scope: !1094, file: !3, line: 224, type: !135)
!1100 = !DILocalVariable(name: "_arg3", scope: !1094, file: !3, line: 224, type: !135)
!1101 = !DILocalVariable(name: "tid", scope: !1102, file: !3, line: 235, type: !170)
!1102 = distinct !DILexicalBlock(scope: !1103, file: !3, line: 235, column: 2)
!1103 = distinct !DILexicalBlock(scope: !1104, file: !3, line: 235, column: 2)
!1104 = distinct !DILexicalBlock(scope: !1105, file: !3, line: 235, column: 2)
!1105 = distinct !DILexicalBlock(scope: !1106, file: !3, line: 235, column: 2)
!1106 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 235, column: 2)
!1107 = !DILocalVariable(name: "tid", scope: !1108, file: !3, line: 241, type: !170)
!1108 = distinct !DILexicalBlock(scope: !1109, file: !3, line: 241, column: 2)
!1109 = distinct !DILexicalBlock(scope: !1110, file: !3, line: 241, column: 2)
!1110 = distinct !DILexicalBlock(scope: !1111, file: !3, line: 241, column: 2)
!1111 = distinct !DILexicalBlock(scope: !1112, file: !3, line: 241, column: 2)
!1112 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 241, column: 2)
!1113 = !DILocalVariable(name: "_ret", scope: !1108, file: !3, line: 241, type: !135)
!1114 = !DILocalVariable(name: "_arg3", scope: !1108, file: !3, line: 241, type: !135)
!1115 = !DILocalVariable(name: "tid", scope: !1116, file: !3, line: 270, type: !170)
!1116 = distinct !DILexicalBlock(scope: !1117, file: !3, line: 270, column: 2)
!1117 = distinct !DILexicalBlock(scope: !1118, file: !3, line: 270, column: 2)
!1118 = distinct !DILexicalBlock(scope: !1119, file: !3, line: 270, column: 2)
!1119 = distinct !DILexicalBlock(scope: !1120, file: !3, line: 270, column: 2)
!1120 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 270, column: 2)
!1121 = !DILocalVariable(name: "_ret", scope: !1116, file: !3, line: 270, type: !135)
!1122 = !DILocalVariable(name: "tid", scope: !1123, file: !3, line: 279, type: !170)
!1123 = distinct !DILexicalBlock(scope: !1124, file: !3, line: 279, column: 2)
!1124 = distinct !DILexicalBlock(scope: !1125, file: !3, line: 279, column: 2)
!1125 = distinct !DILexicalBlock(scope: !1126, file: !3, line: 279, column: 2)
!1126 = distinct !DILexicalBlock(scope: !1127, file: !3, line: 279, column: 2)
!1127 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 279, column: 2)
!1128 = !DILocalVariable(name: "tid", scope: !1129, file: !3, line: 285, type: !170)
!1129 = distinct !DILexicalBlock(scope: !1130, file: !3, line: 285, column: 2)
!1130 = distinct !DILexicalBlock(scope: !1131, file: !3, line: 285, column: 2)
!1131 = distinct !DILexicalBlock(scope: !1132, file: !3, line: 285, column: 2)
!1132 = distinct !DILexicalBlock(scope: !1133, file: !3, line: 285, column: 2)
!1133 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 285, column: 2)
!1134 = !DILocalVariable(name: "tid", scope: !1135, file: !3, line: 287, type: !170)
!1135 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 287, column: 2)
!1136 = distinct !DILexicalBlock(scope: !1137, file: !3, line: 287, column: 2)
!1137 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 287, column: 2)
!1138 = distinct !DILexicalBlock(scope: !1139, file: !3, line: 287, column: 2)
!1139 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 287, column: 2)
!1140 = !DILocalVariable(name: "tid", scope: !1141, file: !3, line: 293, type: !170)
!1141 = distinct !DILexicalBlock(scope: !1142, file: !3, line: 293, column: 2)
!1142 = distinct !DILexicalBlock(scope: !1143, file: !3, line: 293, column: 2)
!1143 = distinct !DILexicalBlock(scope: !1144, file: !3, line: 293, column: 2)
!1144 = distinct !DILexicalBlock(scope: !1145, file: !3, line: 293, column: 2)
!1145 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 293, column: 2)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 16, elements: !769)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "__str", scope: !1069, file: !3, line: 241, type: !1146, isLocal: true, isDefinition: true)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "s_mount", scope: !2, file: !3, line: 152, type: !720, isLocal: true, isDefinition: true)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "sock_net_vfsops", scope: !2, file: !3, line: 140, type: !725, isLocal: true, isDefinition: true)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "sock_net_vnops", scope: !2, file: !3, line: 128, type: !778, isLocal: true, isDefinition: true)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "s_inode", scope: !2, file: !3, line: 147, type: !135, isLocal: true, isDefinition: true)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "select_cb_list", scope: !2, file: !3, line: 1276, type: !238, isLocal: true, isDefinition: true)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "socket_ipv6_multicast_memberships", scope: !2, file: !3, line: 1250, type: !1161, isLocal: true, isDefinition: true)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1162, size: 16384, elements: !1385)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwip_socket_multicast_mld6_pair", file: !3, line: 1241, size: 256, elements: !1163)
!1163 = !{!1164, !1383, !1384}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !1162, file: !3, line: 1243, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwip_sock", file: !240, line: 67, size: 192, elements: !1167)
!1167 = !{!1168, !1366, !1379, !1380, !1381, !1382}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1166, file: !240, line: 69, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netconn", file: !37, line: 218, size: 1024, elements: !1171)
!1171 = !{!1172, !1173, !1174, !1343, !1344, !1345, !1355, !1356, !1357, !1358, !1361}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1170, file: !37, line: 220, baseType: !36, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1170, file: !37, line: 222, baseType: !50, size: 32, offset: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pcb", scope: !1170, file: !37, line: 229, baseType: !1175, size: 64, offset: 64)
!1175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1170, file: !37, line: 224, size: 64, elements: !1176)
!1176 = !{!1177, !1197, !1314, !1340}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1175, file: !37, line: 225, baseType: !1178, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_pcb", file: !1180, line: 91, size: 416, elements: !1181)
!1180 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip.h", directory: "/root/.unikraft/apps/redis/build")
!1181 = !{!1182, !1192, !1193, !1194, !1195, !1196}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !1179, file: !1180, line: 93, baseType: !1183, size: 192)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip_addr_t", file: !100, line: 76, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_addr", file: !100, line: 69, size: 192, elements: !1185)
!1185 = !{!1186, !1191}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "u_addr", scope: !1184, file: !100, line: 73, baseType: !1187, size: 160)
!1187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1184, file: !100, line: 70, size: 160, elements: !1188)
!1188 = !{!1189, !1190}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "ip6", scope: !1187, file: !100, line: 71, baseType: !705, size: 160)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ip4", scope: !1187, file: !100, line: 72, baseType: !698, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1184, file: !100, line: 75, baseType: !156, size: 8, offset: 160)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !1179, file: !1180, line: 93, baseType: !1183, size: 192, offset: 192)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !1179, file: !1180, line: 93, baseType: !156, size: 8, offset: 384)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !1179, file: !1180, line: 93, baseType: !156, size: 8, offset: 392)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !1179, file: !1180, line: 93, baseType: !156, size: 8, offset: 400)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1179, file: !1180, line: 93, baseType: !156, size: 8, offset: 408)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "tcp", scope: !1175, file: !37, line: 226, baseType: !1198, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_pcb", file: !1035, line: 242, size: 2240, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1249, !1250, !1251, !1263, !1285, !1290, !1295, !1297, !1302, !1307, !1308, !1309, !1310, !1311, !1312, !1313}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !1199, file: !1035, line: 244, baseType: !1183, size: 192)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !1199, file: !1035, line: 244, baseType: !1183, size: 192, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !1199, file: !1035, line: 244, baseType: !156, size: 8, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !1199, file: !1035, line: 244, baseType: !156, size: 8, offset: 392)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !1199, file: !1035, line: 244, baseType: !156, size: 8, offset: 400)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1199, file: !1035, line: 244, baseType: !156, size: 8, offset: 408)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1199, file: !1035, line: 246, baseType: !1198, size: 64, offset: 448)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "callback_arg", scope: !1199, file: !1035, line: 246, baseType: !143, size: 64, offset: 512)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1199, file: !1035, line: 246, baseType: !57, size: 32, offset: 576)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1199, file: !1035, line: 246, baseType: !156, size: 8, offset: 608)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !1199, file: !1035, line: 246, baseType: !164, size: 16, offset: 624)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !1199, file: !1035, line: 249, baseType: !164, size: 16, offset: 640)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1199, file: !1035, line: 251, baseType: !1034, size: 16, offset: 656)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "polltmr", scope: !1199, file: !1035, line: 278, baseType: !156, size: 8, offset: 672)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pollinterval", scope: !1199, file: !1035, line: 278, baseType: !156, size: 8, offset: 680)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "last_timer", scope: !1199, file: !1035, line: 279, baseType: !156, size: 8, offset: 688)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "tmr", scope: !1199, file: !1035, line: 280, baseType: !169, size: 32, offset: 704)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_nxt", scope: !1199, file: !1035, line: 283, baseType: !169, size: 32, offset: 736)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_wnd", scope: !1199, file: !1035, line: 284, baseType: !1220, size: 32, offset: 768)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcpwnd_size_t", file: !58, line: 51, baseType: !169)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_ann_wnd", scope: !1199, file: !1035, line: 285, baseType: !1220, size: 32, offset: 800)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_ann_right_edge", scope: !1199, file: !1035, line: 286, baseType: !169, size: 32, offset: 832)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "rtime", scope: !1199, file: !1035, line: 295, baseType: !146, size: 16, offset: 864)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !1199, file: !1035, line: 297, baseType: !164, size: 16, offset: 880)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "rttest", scope: !1199, file: !1035, line: 300, baseType: !169, size: 32, offset: 896)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "rtseq", scope: !1199, file: !1035, line: 301, baseType: !169, size: 32, offset: 928)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1199, file: !1035, line: 302, baseType: !146, size: 16, offset: 960)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "sv", scope: !1199, file: !1035, line: 302, baseType: !146, size: 16, offset: 976)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "rto", scope: !1199, file: !1035, line: 304, baseType: !146, size: 16, offset: 992)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "nrtx", scope: !1199, file: !1035, line: 305, baseType: !156, size: 8, offset: 1008)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "dupacks", scope: !1199, file: !1035, line: 308, baseType: !156, size: 8, offset: 1016)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "lastack", scope: !1199, file: !1035, line: 309, baseType: !169, size: 32, offset: 1024)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "cwnd", scope: !1199, file: !1035, line: 312, baseType: !1220, size: 32, offset: 1056)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ssthresh", scope: !1199, file: !1035, line: 313, baseType: !1220, size: 32, offset: 1088)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "rto_end", scope: !1199, file: !1035, line: 316, baseType: !169, size: 32, offset: 1120)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "snd_nxt", scope: !1199, file: !1035, line: 319, baseType: !169, size: 32, offset: 1152)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wl1", scope: !1199, file: !1035, line: 320, baseType: !169, size: 32, offset: 1184)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wl2", scope: !1199, file: !1035, line: 320, baseType: !169, size: 32, offset: 1216)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "snd_lbb", scope: !1199, file: !1035, line: 322, baseType: !169, size: 32, offset: 1248)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wnd", scope: !1199, file: !1035, line: 323, baseType: !1220, size: 32, offset: 1280)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wnd_max", scope: !1199, file: !1035, line: 324, baseType: !1220, size: 32, offset: 1312)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "snd_buf", scope: !1199, file: !1035, line: 326, baseType: !1220, size: 32, offset: 1344)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "snd_queuelen", scope: !1199, file: !1035, line: 328, baseType: !164, size: 16, offset: 1376)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "unsent_oversize", scope: !1199, file: !1035, line: 332, baseType: !164, size: 16, offset: 1392)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_acked", scope: !1199, file: !1035, line: 335, baseType: !1220, size: 32, offset: 1408)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "unsent", scope: !1199, file: !1035, line: 338, baseType: !1247, size: 64, offset: 1472)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_seg", file: !1035, line: 338, flags: DIFlagFwdDecl)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "unacked", scope: !1199, file: !1035, line: 339, baseType: !1247, size: 64, offset: 1536)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "ooseq", scope: !1199, file: !1035, line: 341, baseType: !1247, size: 64, offset: 1600)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "refused_data", scope: !1199, file: !1035, line: 344, baseType: !1252, size: 64, offset: 1664)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pbuf", file: !106, line: 186, size: 192, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1253, file: !106, line: 188, baseType: !1252, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1253, file: !106, line: 191, baseType: !143, size: 64, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !1253, file: !106, line: 200, baseType: !164, size: 16, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1253, file: !106, line: 203, baseType: !164, size: 16, offset: 144)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "type_internal", scope: !1253, file: !106, line: 208, baseType: !156, size: 8, offset: 160)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1253, file: !106, line: 211, baseType: !156, size: 8, offset: 168)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1253, file: !106, line: 218, baseType: !156, size: 8, offset: 176)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "if_idx", scope: !1253, file: !106, line: 221, baseType: !156, size: 8, offset: 184)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1199, file: !1035, line: 347, baseType: !1264, size: 64, offset: 1728)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_pcb_listen", file: !1035, line: 223, size: 704, elements: !1266)
!1266 = !{!1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !1265, file: !1035, line: 225, baseType: !1183, size: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !1265, file: !1035, line: 225, baseType: !1183, size: 192, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !1265, file: !1035, line: 225, baseType: !156, size: 8, offset: 384)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !1265, file: !1035, line: 225, baseType: !156, size: 8, offset: 392)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !1265, file: !1035, line: 225, baseType: !156, size: 8, offset: 400)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1265, file: !1035, line: 225, baseType: !156, size: 8, offset: 408)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1265, file: !1035, line: 227, baseType: !1264, size: 64, offset: 448)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "callback_arg", scope: !1265, file: !1035, line: 227, baseType: !143, size: 64, offset: 512)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1265, file: !1035, line: 227, baseType: !57, size: 32, offset: 576)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1265, file: !1035, line: 227, baseType: !156, size: 8, offset: 608)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !1265, file: !1035, line: 227, baseType: !164, size: 16, offset: 624)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !1265, file: !1035, line: 231, baseType: !1279, size: 64, offset: 640)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_accept_fn", file: !1035, line: 70, baseType: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!1283, !143, !1198, !1283}
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "err_t", file: !79, line: 96, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8_t", file: !147, line: 126, baseType: !440)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "sent", scope: !1199, file: !1035, line: 352, baseType: !1286, size: 64, offset: 1792)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_sent_fn", file: !1035, line: 96, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!1283, !143, !1198, !164}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !1199, file: !1035, line: 354, baseType: !1291, size: 64, offset: 1856)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_recv_fn", file: !1035, line: 82, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!1283, !143, !1198, !1252, !1283}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "connected", scope: !1199, file: !1035, line: 356, baseType: !1296, size: 64, offset: 1920)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_connected_fn", file: !1035, line: 134, baseType: !1280)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1199, file: !1035, line: 358, baseType: !1298, size: 64, offset: 1984)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_poll_fn", file: !1035, line: 108, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!1283, !143, !1198}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "errf", scope: !1199, file: !1035, line: 360, baseType: !1303, size: 64, offset: 2048)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_err_fn", file: !1035, line: 120, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{null, !143, !1283}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "keep_idle", scope: !1199, file: !1035, line: 369, baseType: !169, size: 32, offset: 2112)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "persist_cnt", scope: !1199, file: !1035, line: 376, baseType: !156, size: 8, offset: 2144)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "persist_backoff", scope: !1199, file: !1035, line: 378, baseType: !156, size: 8, offset: 2152)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "persist_probe", scope: !1199, file: !1035, line: 380, baseType: !156, size: 8, offset: 2160)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "keep_cnt_sent", scope: !1199, file: !1035, line: 383, baseType: !156, size: 8, offset: 2168)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "snd_scale", scope: !1199, file: !1035, line: 386, baseType: !156, size: 8, offset: 2176)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_scale", scope: !1199, file: !1035, line: 387, baseType: !156, size: 8, offset: 2184)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "udp", scope: !1175, file: !37, line: 227, baseType: !1315, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_pcb", file: !1317, line: 81, size: 768, elements: !1318)
!1317 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/udp.h", directory: "/root/.unikraft/apps/redis/build")
!1318 = !{!1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1339}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !1316, file: !1317, line: 83, baseType: !1183, size: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !1316, file: !1317, line: 83, baseType: !1183, size: 192, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !1316, file: !1317, line: 83, baseType: !156, size: 8, offset: 384)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !1316, file: !1317, line: 83, baseType: !156, size: 8, offset: 392)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !1316, file: !1317, line: 83, baseType: !156, size: 8, offset: 400)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1316, file: !1317, line: 83, baseType: !156, size: 8, offset: 408)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1316, file: !1317, line: 87, baseType: !1315, size: 64, offset: 448)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1316, file: !1317, line: 89, baseType: !156, size: 8, offset: 512)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !1316, file: !1317, line: 91, baseType: !164, size: 16, offset: 528)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !1316, file: !1317, line: 91, baseType: !164, size: 16, offset: 544)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "mcast_ip4", scope: !1316, file: !1317, line: 96, baseType: !698, size: 32, offset: 576)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "mcast_ifindex", scope: !1316, file: !1317, line: 99, baseType: !156, size: 8, offset: 608)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "mcast_ttl", scope: !1316, file: !1317, line: 101, baseType: !156, size: 8, offset: 616)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !1316, file: !1317, line: 110, baseType: !1333, size: 64, offset: 640)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "udp_recv_fn", file: !1317, line: 77, baseType: !1334)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{null, !143, !1315, !1252, !1337, !164}
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "recv_arg", scope: !1316, file: !1317, line: 112, baseType: !143, size: 64, offset: 704)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !1175, file: !37, line: 228, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_pcb", file: !37, line: 210, flags: DIFlagFwdDecl)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pending_err", scope: !1170, file: !37, line: 231, baseType: !1283, size: 8, offset: 128)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "op_completed", scope: !1170, file: !37, line: 234, baseType: !268, size: 256, offset: 192)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "recvmbox", scope: !1170, file: !37, line: 238, baseType: !1346, size: 192, offset: 448)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_mbox_t", file: !269, line: 78, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 74, size: 192, elements: !1348)
!1348 = !{!1349, !1350, !1354}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1347, file: !269, line: 75, baseType: !386, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "mbox", scope: !1347, file: !269, line: 76, baseType: !1351, size: 64, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DICompositeType(tag: DW_TAG_structure_type, name: "uk_mbox", file: !1353, line: 48, flags: DIFlagFwdDecl)
!1353 = !DIFile(filename: "/root/.unikraft/unikraft/lib/ukmpi/include/uk/mbox.h", directory: "/root/.unikraft/apps/redis/build")
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !1347, file: !269, line: 77, baseType: !80, size: 32, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "acceptmbox", scope: !1170, file: !37, line: 242, baseType: !1346, size: 192, offset: 640)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "socket", scope: !1170, file: !37, line: 251, baseType: !80, size: 32, offset: 832)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1170, file: !37, line: 277, baseType: !156, size: 8, offset: 864)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "current_msg", scope: !1170, file: !37, line: 282, baseType: !1359, size: 64, offset: 896)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DICompositeType(tag: DW_TAG_structure_type, name: "api_msg", file: !37, line: 212, flags: DIFlagFwdDecl)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1170, file: !37, line: 285, baseType: !1362, size: 64, offset: 960)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "netconn_callback", file: !37, line: 215, baseType: !1363)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{null, !1169, !71, !164}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "lastdata", scope: !1166, file: !240, line: 71, baseType: !1367, size: 64, offset: 64)
!1367 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "lwip_sock_lastdata", file: !240, line: 61, size: 64, elements: !1368)
!1368 = !{!1369, !1378}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "netbuf", scope: !1367, file: !240, line: 62, baseType: !1370, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netbuf", file: !1372, line: 60, size: 384, elements: !1373)
!1372 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/netbuf.h", directory: "/root/.unikraft/apps/redis/build")
!1373 = !{!1374, !1375, !1376, !1377}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1371, file: !1372, line: 61, baseType: !1252, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1371, file: !1372, line: 61, baseType: !1252, size: 64, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1371, file: !1372, line: 62, baseType: !1183, size: 192, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1371, file: !1372, line: 63, baseType: !164, size: 16, offset: 320)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "pbuf", scope: !1367, file: !240, line: 63, baseType: !1252, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "rcvevent", scope: !1166, file: !240, line: 75, baseType: !146, size: 16, offset: 128)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "sendevent", scope: !1166, file: !240, line: 78, baseType: !164, size: 16, offset: 144)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "errevent", scope: !1166, file: !240, line: 80, baseType: !164, size: 16, offset: 160)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "select_waiting", scope: !1166, file: !240, line: 82, baseType: !156, size: 8, offset: 176)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "if_idx", scope: !1162, file: !3, line: 1245, baseType: !156, size: 8, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "multi_addr", scope: !1162, file: !3, line: 1247, baseType: !705, size: 160, offset: 96)
!1385 = !{!1386}
!1386 = !DISubrange(count: 64)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1166, size: 12288, elements: !1385)
!1388 = !{i32 2, !"Dwarf Version", i32 4}
!1389 = !{i32 2, !"Debug Info Version", i32 3}
!1390 = !{i32 1, !"wchar_size", i32 4}
!1391 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!1392 = distinct !DISubprogram(name: "_sock_net_close", scope: !3, file: !3, line: 310, type: !828, isLocal: false, isDefinition: true, scopeLine: 310, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1393)
!1393 = !{!1394, !1395, !1396, !1397}
!1394 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !1392, file: !3, line: 310, type: !713)
!1395 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !1392, file: !3, line: 310, type: !785)
!1396 = !DILocalVariable(name: "ret", scope: !1392, file: !3, line: 311, type: !80)
!1397 = !DILocalVariable(name: "file", scope: !1392, file: !3, line: 312, type: !1077)
!1398 = !DILocation(line: 310, column: 35, scope: !1392)
!1399 = !DILocation(line: 310, column: 65, scope: !1392)
!1400 = !DILocation(line: 312, column: 24, scope: !1392)
!1401 = !DILocation(line: 314, column: 18, scope: !1392)
!1402 = !{!1403, !1408, i64 112}
!1403 = !{!"vnode", !1404, i64 0, !1407, i64 8, !1408, i64 24, !1408, i64 32, !1409, i64 40, !1409, i64 44, !1409, i64 48, !1409, i64 52, !1404, i64 56, !1410, i64 64, !1407, i64 96, !1408, i64 112}
!1404 = !{!"long", !1405, i64 0}
!1405 = !{!"omnipotent char", !1406, i64 0}
!1406 = !{!"Simple C/C++ TBAA"}
!1407 = !{!"uk_list_head", !1408, i64 0, !1408, i64 8}
!1408 = !{!"any pointer", !1405, i64 0}
!1409 = !{!"int", !1405, i64 0}
!1410 = !{!"uk_mutex", !1409, i64 0, !1408, i64 8, !1411, i64 16}
!1411 = !{!"uk_waitq", !1408, i64 0, !1408, i64 8}
!1412 = !DILocation(line: 322, column: 2, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1414, file: !3, line: 322, column: 2)
!1414 = distinct !DILexicalBlock(scope: !1392, file: !3, line: 322, column: 2)
!1415 = !{!1403, !1409, i64 40}
!1416 = !DILocation(line: 322, column: 2, scope: !1414)
!1417 = !{!"branch_weights", i32 2000, i32 1}
!1418 = !DILocation(line: 322, column: 2, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 322, column: 2)
!1420 = !DILocation(line: 325, column: 25, scope: !1392)
!1421 = !{!1422, !1409, i64 8}
!1422 = !{!"sock_net_file", !1408, i64 0, !1409, i64 8}
!1423 = !DILocation(line: 325, column: 8, scope: !1392)
!1424 = !DILocation(line: 311, column: 6, scope: !1392)
!1425 = !DILocation(line: 333, column: 10, scope: !1392)
!1426 = !{!1408, !1408, i64 0}
!1427 = !DILocalVariable(name: "a", arg: 1, scope: !1428, file: !388, line: 237, type: !386)
!1428 = distinct !DISubprogram(name: "uk_free", scope: !388, file: !388, line: 237, type: !417, isLocal: true, isDefinition: true, scopeLine: 238, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1429)
!1429 = !{!1427, !1430}
!1430 = !DILocalVariable(name: "ptr", arg: 2, scope: !1428, file: !388, line: 237, type: !143)
!1431 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !1432)
!1432 = distinct !DILocation(line: 333, column: 2, scope: !1392)
!1433 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !1432)
!1434 = !DILocalVariable(name: "a", arg: 1, scope: !1435, file: !388, line: 231, type: !386)
!1435 = distinct !DISubprogram(name: "uk_do_free", scope: !388, file: !388, line: 231, type: !417, isLocal: true, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1436)
!1436 = !{!1434, !1437}
!1437 = !DILocalVariable(name: "ptr", arg: 2, scope: !1435, file: !388, line: 231, type: !143)
!1438 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !1439)
!1439 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !1432)
!1440 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !1439)
!1441 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !1439)
!1442 = distinct !DILexicalBlock(scope: !1443, file: !388, line: 233, column: 2)
!1443 = distinct !DILexicalBlock(scope: !1435, file: !388, line: 233, column: 2)
!1444 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !1439)
!1445 = !{!"branch_weights", i32 1, i32 2000}
!1446 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !1439)
!1447 = distinct !DILexicalBlock(scope: !1442, file: !388, line: 233, column: 2)
!1448 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !1439)
!1449 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !1439)
!1450 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !1439)
!1451 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !1432)
!1452 = !DILocation(line: 339, column: 10, scope: !1453)
!1453 = distinct !DILexicalBlock(scope: !1392, file: !3, line: 339, column: 6)
!1454 = !DILocation(line: 339, column: 6, scope: !1392)
!1455 = !DILocation(line: 105, column: 2, scope: !1456, inlinedAt: !1468)
!1456 = distinct !DISubprogram(name: "SOCK_NET_GET_ERRNO", scope: !3, file: !3, line: 103, type: !1457, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1459)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!80}
!1459 = !{!1460, !1461, !1467}
!1460 = !DILocalVariable(name: "temp_errno", scope: !1456, file: !3, line: 105, type: !80)
!1461 = !DILocalVariable(name: "tid", scope: !1462, file: !3, line: 106, type: !170)
!1462 = distinct !DILexicalBlock(scope: !1463, file: !3, line: 106, column: 2)
!1463 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 106, column: 2)
!1464 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 106, column: 2)
!1465 = distinct !DILexicalBlock(scope: !1466, file: !3, line: 106, column: 2)
!1466 = distinct !DILexicalBlock(scope: !1456, file: !3, line: 106, column: 2)
!1467 = !DILocalVariable(name: "_ret", scope: !1462, file: !3, line: 106, type: !135)
!1468 = distinct !DILocation(line: 340, column: 10, scope: !1469)
!1469 = distinct !DILexicalBlock(scope: !1453, file: !3, line: 339, column: 15)
!1470 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1477)
!1471 = distinct !DISubprogram(name: "ukarch_read_sp", scope: !1472, file: !1472, line: 116, type: !1473, isLocal: true, isDefinition: true, scopeLine: 117, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1475)
!1472 = !DIFile(filename: "/root/.unikraft/unikraft/arch/x86/x86_64/include/uk/asm/lcpu.h", directory: "/root/.unikraft/apps/redis/build")
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!134}
!1475 = !{!1476}
!1476 = !DILocalVariable(name: "sp", scope: !1471, file: !1472, line: 118, type: !134)
!1477 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1468)
!1478 = !{i32 584178}
!1479 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1477)
!1480 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1477)
!1481 = !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1468)
!1482 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1483)
!1483 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1468)
!1484 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1483)
!1485 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1483)
!1486 = !DILocation(line: 106, column: 2, scope: !1466, inlinedAt: !1468)
!1487 = !DILocation(line: 100, column: 9, scope: !1488, inlinedAt: !1490)
!1488 = distinct !DISubprogram(name: "_SOCK_NET_GET_ERRNO", scope: !3, file: !3, line: 98, type: !1457, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1489)
!1489 = !{}
!1490 = distinct !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1468)
!1491 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 106, column: 2)
!1492 = !{!1409, !1409, i64 0}
!1493 = !DILocation(line: 100, column: 2, scope: !1488, inlinedAt: !1490)
!1494 = !DILocation(line: 105, column: 6, scope: !1456, inlinedAt: !1468)
!1495 = !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1468)
!1496 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1497)
!1497 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1502)
!1498 = distinct !DISubprogram(name: "uk_thread_get_tid", scope: !1499, file: !1499, line: 47, type: !1457, isLocal: true, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1500)
!1499 = !DIFile(filename: "/root/.unikraft/unikraft/lib/flexos-core/include/flexos/impl/intelpku-impl.h", directory: "/root/.unikraft/apps/redis/build")
!1500 = !{!1501}
!1501 = !DILocalVariable(name: "sp", scope: !1498, file: !1499, line: 49, type: !134)
!1502 = distinct !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1468)
!1503 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1497)
!1504 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1497)
!1505 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1502)
!1506 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1502)
!1507 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1502)
!1508 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1502)
!1509 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1502)
!1510 = !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1468)
!1511 = !{i32 -2145814233, i32 -2145814220, i32 -2145814195, i32 -2145814171, i32 -2145814146, i32 -2145814071, i32 -2145814046, i32 -2145813902, i32 -2145810761, i32 -2145810672, i32 -2145810551, i32 -2145810456, i32 -2145810355, i32 -2145810328, i32 -2145810245, i32 -2145810156, i32 -2145810035, i32 -2145809935, i32 -2145809829, i32 -2145809721, i32 -2145813619, i32 -2145813566, i32 -2145813535, i32 -2145813504, i32 -2145813483, i32 -2145813461, i32 -2145813412, i32 -2145813391, i32 -2145809638, i32 -2145809549, i32 -2145809428, i32 -2145809329, i32 -2145809223, i32 -2145809121, i32 -2145809088, i32 -2145809015, i32 -2145808947, i32 -2145813089, i32 -2145813030, i32 -2145812977, i32 -2145812946, i32 -2145812915, i32 -2145812894, i32 -2145812872, i32 -2145812823, i32 -2145812802, i32 -2145808892, i32 -2145808803, i32 -2145808682, i32 -2145808583, i32 -2145808477, i32 -2145808375, i32 -2145808342, i32 -2145808259, i32 -2145808170, i32 -2145808049, i32 -2145807949, i32 -2145807923, i32 -2145807820, i32 -2145807794, i32 -2145812544, i32 -2145812477, i32 -2145812452, i32 -2145812388, i32 -2145812306, i32 -2145812283, i32 -2145812258, i32 -2145812233}
!1512 = !DILocation(line: 106, column: 2, scope: !1513, inlinedAt: !1468)
!1513 = distinct !DILexicalBlock(scope: !1514, file: !3, line: 106, column: 2)
!1514 = distinct !DILexicalBlock(scope: !1462, file: !3, line: 106, column: 2)
!1515 = !{i32 -2145811286, i32 -2145811269}
!1516 = !DILocation(line: 107, column: 9, scope: !1456, inlinedAt: !1468)
!1517 = !DILocation(line: 108, column: 1, scope: !1456, inlinedAt: !1468)
!1518 = !DILocation(line: 107, column: 2, scope: !1456, inlinedAt: !1468)
!1519 = !DILocation(line: 340, column: 3, scope: !1469)
!1520 = !DILocation(line: 0, scope: !1392)
!1521 = !DILocation(line: 344, column: 1, scope: !1392)
!1522 = !DILocation(line: 194, column: 43, scope: !1045)
!1523 = !DILocation(line: 196, column: 2, scope: !1045)
!1524 = !DILocation(line: 196, column: 10, scope: !1045)
!1525 = !DILocation(line: 197, column: 2, scope: !1045)
!1526 = !DILocation(line: 198, column: 2, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1528, file: !1046, line: 198, column: 2)
!1528 = distinct !DILexicalBlock(scope: !1045, file: !1046, line: 198, column: 2)
!1529 = !DILocation(line: 199, column: 2, scope: !1045)
!1530 = !DILocation(line: 200, column: 1, scope: !1045)
!1531 = distinct !DISubprogram(name: "lwip_close", scope: !3, file: !3, line: 1770, type: !1070, isLocal: false, isDefinition: true, scopeLine: 1771, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1532)
!1532 = !{!1533, !1534, !1535, !1536, !1537, !1541, !1547}
!1533 = !DILocalVariable(name: "s", arg: 1, scope: !1531, file: !3, line: 1770, type: !80)
!1534 = !DILocalVariable(name: "sock", scope: !1531, file: !3, line: 1772, type: !1165)
!1535 = !DILocalVariable(name: "is_tcp", scope: !1531, file: !3, line: 1773, type: !80)
!1536 = !DILocalVariable(name: "err", scope: !1531, file: !3, line: 1774, type: !1283)
!1537 = !DILocalVariable(name: "sockerr", scope: !1538, file: !3, line: 1800, type: !1007)
!1538 = distinct !DILexicalBlock(scope: !1539, file: !3, line: 1800, column: 5)
!1539 = distinct !DILexicalBlock(scope: !1540, file: !3, line: 1799, column: 22)
!1540 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 1799, column: 7)
!1541 = !DILocalVariable(name: "tid", scope: !1542, file: !3, line: 1800, type: !170)
!1542 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 1800, column: 5)
!1543 = distinct !DILexicalBlock(scope: !1544, file: !3, line: 1800, column: 5)
!1544 = distinct !DILexicalBlock(scope: !1545, file: !3, line: 1800, column: 5)
!1545 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 1800, column: 5)
!1546 = distinct !DILexicalBlock(scope: !1538, file: !3, line: 1800, column: 5)
!1547 = !DILocalVariable(name: "tid", scope: !1548, file: !3, line: 1806, type: !170)
!1548 = distinct !DILexicalBlock(scope: !1549, file: !3, line: 1806, column: 3)
!1549 = distinct !DILexicalBlock(scope: !1550, file: !3, line: 1806, column: 3)
!1550 = distinct !DILexicalBlock(scope: !1551, file: !3, line: 1806, column: 3)
!1551 = distinct !DILexicalBlock(scope: !1552, file: !3, line: 1806, column: 3)
!1552 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 1806, column: 3)
!1553 = !DILocation(line: 1770, column: 16, scope: !1531)
!1554 = !DILocation(line: 1773, column: 7, scope: !1531)
!1555 = !DILocalVariable(name: "fd", arg: 1, scope: !1556, file: !3, line: 1477, type: !80)
!1556 = distinct !DISubprogram(name: "get_socket", scope: !3, file: !3, line: 1477, type: !1557, isLocal: true, isDefinition: true, scopeLine: 1478, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1559)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!1165, !80}
!1559 = !{!1555, !1560, !1561}
!1560 = !DILocalVariable(name: "sock", scope: !1556, file: !3, line: 1479, type: !1165)
!1561 = !DILocalVariable(name: "tid", scope: !1562, file: !3, line: 1484, type: !170)
!1562 = distinct !DILexicalBlock(scope: !1563, file: !3, line: 1484, column: 5)
!1563 = distinct !DILexicalBlock(scope: !1564, file: !3, line: 1484, column: 5)
!1564 = distinct !DILexicalBlock(scope: !1565, file: !3, line: 1484, column: 5)
!1565 = distinct !DILexicalBlock(scope: !1566, file: !3, line: 1484, column: 5)
!1566 = distinct !DILexicalBlock(scope: !1567, file: !3, line: 1484, column: 5)
!1567 = distinct !DILexicalBlock(scope: !1568, file: !3, line: 1480, column: 14)
!1568 = distinct !DILexicalBlock(scope: !1556, file: !3, line: 1480, column: 7)
!1569 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !1570)
!1570 = distinct !DILocation(line: 1778, column: 10, scope: !1531)
!1571 = !DILocalVariable(name: "fd", arg: 1, scope: !1572, file: !3, line: 1458, type: !80)
!1572 = distinct !DISubprogram(name: "tryget_socket", scope: !3, file: !3, line: 1458, type: !1557, isLocal: true, isDefinition: true, scopeLine: 1459, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1573)
!1573 = !{!1571, !1574}
!1574 = !DILocalVariable(name: "sock", scope: !1572, file: !3, line: 1460, type: !1165)
!1575 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !1576)
!1576 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !1570)
!1577 = !DILocalVariable(name: "fd", arg: 1, scope: !1578, file: !3, line: 1427, type: !80)
!1578 = distinct !DISubprogram(name: "tryget_socket_unconn", scope: !3, file: !3, line: 1427, type: !1557, isLocal: true, isDefinition: true, scopeLine: 1428, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1579)
!1579 = !{!1577, !1580}
!1580 = !DILocalVariable(name: "ret", scope: !1578, file: !3, line: 1429, type: !1165)
!1581 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !1582)
!1582 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !1576)
!1583 = !DILocalVariable(name: "fd", arg: 1, scope: !1584, file: !3, line: 1409, type: !80)
!1584 = distinct !DISubprogram(name: "tryget_socket_unconn_nouse", scope: !3, file: !3, line: 1409, type: !1557, isLocal: true, isDefinition: true, scopeLine: 1410, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1585)
!1585 = !{!1583, !1586}
!1586 = !DILocalVariable(name: "s", scope: !1584, file: !3, line: 1411, type: !80)
!1587 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !1588)
!1588 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !1582)
!1589 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !1588)
!1590 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !1588)
!1591 = distinct !DILexicalBlock(scope: !1584, file: !3, line: 1412, column: 7)
!1592 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !1588)
!1593 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !1588)
!1594 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !1582)
!1595 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !1576)
!1596 = !DILocation(line: 1460, column: 21, scope: !1572, inlinedAt: !1576)
!1597 = !DILocation(line: 1429, column: 21, scope: !1578, inlinedAt: !1582)
!1598 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !1576)
!1599 = distinct !DILexicalBlock(scope: !1600, file: !3, line: 1462, column: 9)
!1600 = distinct !DILexicalBlock(scope: !1601, file: !3, line: 1461, column: 21)
!1601 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 1461, column: 7)
!1602 = !{!1603, !1408, i64 0}
!1603 = !{!"lwip_sock", !1408, i64 0, !1405, i64 8, !1604, i64 16, !1604, i64 18, !1604, i64 20, !1405, i64 22}
!1604 = !{!"short", !1405, i64 0}
!1605 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !1576)
!1606 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !1576)
!1607 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !1576)
!1608 = !DILocation(line: 1479, column: 21, scope: !1556, inlinedAt: !1570)
!1609 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1610)
!1610 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !1570)
!1611 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1610)
!1612 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1610)
!1613 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !1570)
!1614 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1615)
!1615 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !1570)
!1616 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1615)
!1617 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1615)
!1618 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !1570)
!1619 = !DILocalVariable(name: "errcode", arg: 1, scope: !1620, file: !3, line: 88, type: !80)
!1620 = distinct !DISubprogram(name: "_SOCK_NET_SET_ERRNO", scope: !3, file: !3, line: 88, type: !648, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1621)
!1621 = !{!1619}
!1622 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !1623)
!1623 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !1570)
!1624 = distinct !DILexicalBlock(scope: !1565, file: !3, line: 1484, column: 5)
!1625 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !1623)
!1626 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !1623)
!1627 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !1623)
!1628 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !1570)
!1629 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1630)
!1630 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1631)
!1631 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !1570)
!1632 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1630)
!1633 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1630)
!1634 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1631)
!1635 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1631)
!1636 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1631)
!1637 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1631)
!1638 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1631)
!1639 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !1570)
!1640 = !{i32 -2145227129, i32 -2145227116, i32 -2145227091, i32 -2145227067, i32 -2145227042, i32 -2145226967, i32 -2145226942, i32 -2145226798, i32 -2145224578, i32 -2145224489, i32 -2145224368, i32 -2145224273, i32 -2145224172, i32 -2145224145, i32 -2145224062, i32 -2145223973, i32 -2145223852, i32 -2145223752, i32 -2145223646, i32 -2145223538, i32 -2145226510, i32 -2145226457, i32 -2145226426, i32 -2145226395, i32 -2145226374, i32 -2145226352, i32 -2145226303, i32 -2145226282, i32 -2145223455, i32 -2145223366, i32 -2145223245, i32 -2145223146, i32 -2145223040, i32 -2145222938, i32 -2145222905, i32 -2145222832, i32 -2145222764, i32 -2145225908, i32 -2145225855, i32 -2145225824, i32 -2145225793, i32 -2145225772, i32 -2145225750, i32 -2145225701, i32 -2145225680, i32 -2145222709, i32 -2145222620, i32 -2145222499, i32 -2145222400, i32 -2145222294, i32 -2145222192, i32 -2145222159, i32 -2145222076, i32 -2145221987, i32 -2145221866, i32 -2145221766, i32 -2145221740, i32 -2145221637, i32 -2145221611, i32 -2145225422, i32 -2145225355, i32 -2145225330, i32 -2145225266, i32 -2145225150, i32 -2145225125, i32 -2145225100}
!1641 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !1570)
!1642 = !DILocation(line: 1772, column: 21, scope: !1531)
!1643 = !DILocation(line: 1779, column: 7, scope: !1531)
!1644 = !DILocation(line: 1784, column: 14, scope: !1645)
!1645 = distinct !DILexicalBlock(scope: !1646, file: !3, line: 1783, column: 27)
!1646 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 1783, column: 7)
!1647 = !{!1648, !1405, i64 0}
!1648 = !{!"netconn", !1405, i64 0, !1405, i64 4, !1405, i64 8, !1405, i64 16, !1649, i64 24, !1651, i64 56, !1651, i64 80, !1409, i64 104, !1405, i64 108, !1408, i64 112, !1408, i64 120}
!1649 = !{!"", !1650, i64 0, !1409, i64 24}
!1650 = !{!"uk_semaphore", !1404, i64 0, !1411, i64 8}
!1651 = !{!"", !1408, i64 0, !1408, i64 8, !1409, i64 16}
!1652 = !DILocation(line: 1784, column: 58, scope: !1645)
!1653 = !DILocalVariable(name: "s", arg: 1, scope: !1654, file: !3, line: 5130, type: !80)
!1654 = distinct !DISubprogram(name: "lwip_socket_drop_registered_mld6_memberships", scope: !3, file: !3, line: 5130, type: !648, isLocal: true, isDefinition: true, scopeLine: 5131, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1655)
!1655 = !{!1653, !1656, !1657, !1658, !1664}
!1656 = !DILocalVariable(name: "sock", scope: !1654, file: !3, line: 5132, type: !1165)
!1657 = !DILocalVariable(name: "i", scope: !1654, file: !3, line: 5133, type: !80)
!1658 = !DILocalVariable(name: "multi_addr", scope: !1659, file: !3, line: 5141, type: !1183)
!1659 = distinct !DILexicalBlock(scope: !1660, file: !3, line: 5140, column: 60)
!1660 = distinct !DILexicalBlock(scope: !1661, file: !3, line: 5140, column: 9)
!1661 = distinct !DILexicalBlock(scope: !1662, file: !3, line: 5139, column: 53)
!1662 = distinct !DILexicalBlock(scope: !1663, file: !3, line: 5139, column: 3)
!1663 = distinct !DILexicalBlock(scope: !1654, file: !3, line: 5139, column: 3)
!1664 = !DILocalVariable(name: "if_idx", scope: !1659, file: !3, line: 5142, type: !156)
!1665 = !DILocation(line: 5130, column: 50, scope: !1654, inlinedAt: !1666)
!1666 = distinct !DILocation(line: 1795, column: 3, scope: !1531)
!1667 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !1668)
!1668 = distinct !DILocation(line: 5132, column: 28, scope: !1654, inlinedAt: !1666)
!1669 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !1670)
!1670 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !1668)
!1671 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !1672)
!1672 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !1670)
!1673 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !1674)
!1674 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !1672)
!1675 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !1674)
!1676 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !1674)
!1677 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !1672)
!1678 = !DILocation(line: 1460, column: 21, scope: !1572, inlinedAt: !1670)
!1679 = !DILocation(line: 1429, column: 21, scope: !1578, inlinedAt: !1672)
!1680 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !1670)
!1681 = !DILocation(line: 1479, column: 21, scope: !1556, inlinedAt: !1668)
!1682 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !1668)
!1683 = !DILocation(line: 5132, column: 21, scope: !1654, inlinedAt: !1666)
!1684 = !DILocation(line: 5133, column: 7, scope: !1654, inlinedAt: !1666)
!1685 = !DILocation(line: 5139, column: 3, scope: !1663, inlinedAt: !1666)
!1686 = !DILocation(line: 5140, column: 46, scope: !1660, inlinedAt: !1666)
!1687 = !{!1688, !1408, i64 0}
!1688 = !{!"lwip_socket_multicast_mld6_pair", !1408, i64 0, !1405, i64 8, !1689, i64 12}
!1689 = !{!"ip6_addr", !1405, i64 0, !1405, i64 16}
!1690 = !DILocation(line: 5140, column: 51, scope: !1660, inlinedAt: !1666)
!1691 = !DILocation(line: 5140, column: 9, scope: !1661, inlinedAt: !1666)
!1692 = !DILocation(line: 5141, column: 7, scope: !1659, inlinedAt: !1666)
!1693 = !DILocation(line: 5144, column: 7, scope: !1694, inlinedAt: !1666)
!1694 = distinct !DILexicalBlock(scope: !1695, file: !3, line: 5144, column: 7)
!1695 = distinct !DILexicalBlock(scope: !1659, file: !3, line: 5144, column: 7)
!1696 = !{!1405, !1405, i64 0}
!1697 = !{!1688, !1405, i64 28}
!1698 = !DILocation(line: 5144, column: 7, scope: !1699, inlinedAt: !1666)
!1699 = distinct !DILexicalBlock(scope: !1695, file: !3, line: 5144, column: 7)
!1700 = !{!1701, !1405, i64 20}
!1701 = !{!"ip_addr", !1405, i64 0, !1405, i64 20}
!1702 = !DILocation(line: 5145, column: 53, scope: !1659, inlinedAt: !1666)
!1703 = !{!1688, !1405, i64 8}
!1704 = !DILocation(line: 5142, column: 12, scope: !1659, inlinedAt: !1666)
!1705 = !DILocation(line: 5147, column: 51, scope: !1659, inlinedAt: !1666)
!1706 = !DILocation(line: 5148, column: 51, scope: !1659, inlinedAt: !1666)
!1707 = !DILocation(line: 5149, column: 7, scope: !1708, inlinedAt: !1666)
!1708 = distinct !DILexicalBlock(scope: !1659, file: !3, line: 5149, column: 7)
!1709 = !DILocation(line: 5151, column: 44, scope: !1659, inlinedAt: !1666)
!1710 = !DILocation(line: 5141, column: 17, scope: !1659, inlinedAt: !1666)
!1711 = !DILocation(line: 5151, column: 7, scope: !1659, inlinedAt: !1666)
!1712 = !DILocation(line: 5152, column: 5, scope: !1660, inlinedAt: !1666)
!1713 = !DILocation(line: 5152, column: 5, scope: !1659, inlinedAt: !1666)
!1714 = !DILocation(line: 5139, column: 49, scope: !1662, inlinedAt: !1666)
!1715 = !DILocation(line: 5139, column: 17, scope: !1662, inlinedAt: !1666)
!1716 = distinct !{!1716, !1717, !1718}
!1717 = !DILocation(line: 5139, column: 3, scope: !1663)
!1718 = !DILocation(line: 5153, column: 3, scope: !1663)
!1719 = !DILocation(line: 1798, column: 38, scope: !1531)
!1720 = !DILocation(line: 5155, column: 1, scope: !1654, inlinedAt: !1666)
!1721 = !DILocation(line: 1798, column: 9, scope: !1531)
!1722 = !DILocation(line: 1774, column: 9, scope: !1531)
!1723 = !DILocation(line: 1799, column: 11, scope: !1540)
!1724 = !DILocation(line: 1799, column: 7, scope: !1531)
!1725 = !DILocation(line: 1800, column: 5, scope: !1538)
!1726 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1727)
!1727 = distinct !DILocation(line: 1800, column: 5, scope: !1545)
!1728 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1727)
!1729 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1727)
!1730 = !DILocation(line: 1800, column: 5, scope: !1545)
!1731 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1732)
!1732 = distinct !DILocation(line: 1800, column: 5, scope: !1545)
!1733 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1732)
!1734 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1732)
!1735 = !DILocation(line: 1800, column: 5, scope: !1546)
!1736 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !1737)
!1737 = distinct !DILocation(line: 1800, column: 5, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1545, file: !3, line: 1800, column: 5)
!1739 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !1737)
!1740 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !1737)
!1741 = !DILocation(line: 1800, column: 5, scope: !1738)
!1742 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1743)
!1743 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1744)
!1744 = distinct !DILocation(line: 1800, column: 5, scope: !1542)
!1745 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1743)
!1746 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1743)
!1747 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1744)
!1748 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1744)
!1749 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1744)
!1750 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1744)
!1751 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1744)
!1752 = !DILocation(line: 1800, column: 5, scope: !1542)
!1753 = !{i32 -2145119771, i32 -2145119758, i32 -2145119733, i32 -2145119709, i32 -2145119684, i32 -2145119609, i32 -2145119584, i32 -2145119440, i32 -2145117217, i32 -2145117128, i32 -2145117007, i32 -2145116912, i32 -2145116811, i32 -2145116784, i32 -2145116701, i32 -2145116612, i32 -2145116491, i32 -2145116391, i32 -2145116285, i32 -2145116177, i32 -2145119152, i32 -2145119099, i32 -2145119068, i32 -2145119037, i32 -2145119016, i32 -2145118994, i32 -2145118945, i32 -2145118924, i32 -2145116094, i32 -2145116005, i32 -2145115884, i32 -2145115785, i32 -2145115679, i32 -2145115577, i32 -2145115544, i32 -2145115471, i32 -2145115403, i32 -2145118550, i32 -2145118497, i32 -2145118466, i32 -2145118435, i32 -2145118414, i32 -2145118392, i32 -2145118343, i32 -2145118322, i32 -2145115348, i32 -2145115259, i32 -2145115138, i32 -2145115039, i32 -2145114933, i32 -2145114831, i32 -2145114798, i32 -2145114715, i32 -2145114626, i32 -2145114505, i32 -2145114405, i32 -2145114379, i32 -2145114276, i32 -2145114250, i32 -2145118064, i32 -2145117997, i32 -2145117972, i32 -2145117908, i32 -2145117792, i32 -2145117767, i32 -2145117742}
!1754 = !DILocalVariable(name: "sock", arg: 1, scope: !1755, file: !3, line: 1592, type: !1165)
!1755 = distinct !DISubprogram(name: "free_socket", scope: !3, file: !3, line: 1592, type: !1756, isLocal: true, isDefinition: true, scopeLine: 1593, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1758)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{null, !1165, !80}
!1758 = !{!1754, !1759, !1760, !1761, !1762, !1763}
!1759 = !DILocalVariable(name: "is_tcp", arg: 2, scope: !1755, file: !3, line: 1592, type: !80)
!1760 = !DILocalVariable(name: "freed", scope: !1755, file: !3, line: 1594, type: !80)
!1761 = !DILocalVariable(name: "conn", scope: !1755, file: !3, line: 1595, type: !1169)
!1762 = !DILocalVariable(name: "lastdata", scope: !1755, file: !3, line: 1596, type: !1367)
!1763 = !DILocalVariable(name: "lev", scope: !1755, file: !3, line: 1597, type: !134)
!1764 = !DILocation(line: 1592, column: 31, scope: !1755, inlinedAt: !1765)
!1765 = distinct !DILocation(line: 1805, column: 3, scope: !1531)
!1766 = !DILocation(line: 1600, column: 3, scope: !1767, inlinedAt: !1765)
!1767 = distinct !DILexicalBlock(scope: !1755, file: !3, line: 1600, column: 3)
!1768 = !DILocation(line: 1597, column: 3, scope: !1755, inlinedAt: !1765)
!1769 = !DILocation(line: 1595, column: 19, scope: !1755, inlinedAt: !1765)
!1770 = !DILocation(line: 1596, column: 28, scope: !1755, inlinedAt: !1765)
!1771 = !DILocalVariable(name: "sock", arg: 1, scope: !1772, file: !3, line: 1546, type: !1165)
!1772 = distinct !DISubprogram(name: "free_socket_locked", scope: !3, file: !3, line: 1546, type: !1773, isLocal: true, isDefinition: true, scopeLine: 1548, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1777)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!80, !1165, !80, !1775, !1776}
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1777 = !{!1771, !1778, !1779, !1780}
!1778 = !DILocalVariable(name: "is_tcp", arg: 2, scope: !1772, file: !3, line: 1546, type: !80)
!1779 = !DILocalVariable(name: "conn", arg: 3, scope: !1772, file: !3, line: 1546, type: !1775)
!1780 = !DILocalVariable(name: "lastdata", arg: 4, scope: !1772, file: !3, line: 1547, type: !1776)
!1781 = !DILocation(line: 1546, column: 38, scope: !1772, inlinedAt: !1782)
!1782 = distinct !DILocation(line: 1602, column: 11, scope: !1755, inlinedAt: !1765)
!1783 = !DILocation(line: 1546, column: 48, scope: !1772, inlinedAt: !1782)
!1784 = !DILocation(line: 1546, column: 73, scope: !1772, inlinedAt: !1782)
!1785 = !DILocation(line: 1547, column: 46, scope: !1772, inlinedAt: !1782)
!1786 = !DILocation(line: 1560, column: 21, scope: !1772, inlinedAt: !1782)
!1787 = !DILocation(line: 1561, column: 23, scope: !1772, inlinedAt: !1782)
!1788 = !DILocation(line: 1562, column: 17, scope: !1772, inlinedAt: !1782)
!1789 = !DILocation(line: 1563, column: 14, scope: !1772, inlinedAt: !1782)
!1790 = !DILocation(line: 1564, column: 3, scope: !1772, inlinedAt: !1782)
!1791 = !DILocation(line: 1594, column: 7, scope: !1755, inlinedAt: !1765)
!1792 = !DILocation(line: 1603, column: 3, scope: !1755, inlinedAt: !1765)
!1793 = !DILocalVariable(name: "conn", arg: 2, scope: !1794, file: !3, line: 1570, type: !1169)
!1794 = distinct !DISubprogram(name: "free_socket_free_elements", scope: !3, file: !3, line: 1570, type: !1795, isLocal: true, isDefinition: true, scopeLine: 1571, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1797)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{null, !80, !1169, !1776}
!1797 = !{!1798, !1793, !1799}
!1798 = !DILocalVariable(name: "is_tcp", arg: 1, scope: !1794, file: !3, line: 1570, type: !80)
!1799 = !DILocalVariable(name: "lastdata", arg: 3, scope: !1794, file: !3, line: 1570, type: !1776)
!1800 = !DILocation(line: 1570, column: 55, scope: !1794, inlinedAt: !1801)
!1801 = distinct !DILocation(line: 1607, column: 5, scope: !1802, inlinedAt: !1765)
!1802 = distinct !DILexicalBlock(scope: !1803, file: !3, line: 1606, column: 14)
!1803 = distinct !DILexicalBlock(scope: !1755, file: !3, line: 1606, column: 7)
!1804 = !DILocation(line: 1570, column: 87, scope: !1794, inlinedAt: !1801)
!1805 = !DILocation(line: 1572, column: 22, scope: !1806, inlinedAt: !1801)
!1806 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 1572, column: 7)
!1807 = !DILocation(line: 1572, column: 7, scope: !1794, inlinedAt: !1801)
!1808 = !DILocation(line: 1573, column: 9, scope: !1809, inlinedAt: !1801)
!1809 = distinct !DILexicalBlock(scope: !1806, file: !3, line: 1572, column: 31)
!1810 = !DILocation(line: 1574, column: 7, scope: !1811, inlinedAt: !1801)
!1811 = distinct !DILexicalBlock(scope: !1812, file: !3, line: 1573, column: 17)
!1812 = distinct !DILexicalBlock(scope: !1809, file: !3, line: 1573, column: 9)
!1813 = !DILocation(line: 1575, column: 5, scope: !1811, inlinedAt: !1801)
!1814 = !DILocation(line: 1576, column: 7, scope: !1815, inlinedAt: !1801)
!1815 = distinct !DILexicalBlock(scope: !1812, file: !3, line: 1575, column: 12)
!1816 = !DILocation(line: 1579, column: 12, scope: !1817, inlinedAt: !1801)
!1817 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 1579, column: 7)
!1818 = !DILocation(line: 1579, column: 7, scope: !1794, inlinedAt: !1801)
!1819 = !DILocation(line: 1581, column: 5, scope: !1820, inlinedAt: !1801)
!1820 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 1579, column: 21)
!1821 = !DILocation(line: 1582, column: 3, scope: !1820, inlinedAt: !1801)
!1822 = !DILocation(line: 1583, column: 1, scope: !1794, inlinedAt: !1801)
!1823 = !DILocation(line: 1609, column: 1, scope: !1755, inlinedAt: !1765)
!1824 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1825)
!1825 = distinct !DILocation(line: 1806, column: 3, scope: !1551)
!1826 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1825)
!1827 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1825)
!1828 = !DILocation(line: 1806, column: 3, scope: !1551)
!1829 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1830)
!1830 = distinct !DILocation(line: 1806, column: 3, scope: !1551)
!1831 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1830)
!1832 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1830)
!1833 = !DILocation(line: 1806, column: 3, scope: !1552)
!1834 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !1835)
!1835 = distinct !DILocation(line: 1806, column: 3, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !1551, file: !3, line: 1806, column: 3)
!1837 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !1835)
!1838 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !1835)
!1839 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !1835)
!1840 = !DILocation(line: 1806, column: 3, scope: !1836)
!1841 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1842)
!1842 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1843)
!1843 = distinct !DILocation(line: 1806, column: 3, scope: !1548)
!1844 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1842)
!1845 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1842)
!1846 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1843)
!1847 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1843)
!1848 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1843)
!1849 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1843)
!1850 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1843)
!1851 = !DILocation(line: 1806, column: 3, scope: !1548)
!1852 = !{i32 -2145112369, i32 -2145112356, i32 -2145112331, i32 -2145112307, i32 -2145112282, i32 -2145112207, i32 -2145112182, i32 -2145112038, i32 -2145109822, i32 -2145109733, i32 -2145109612, i32 -2145109517, i32 -2145109416, i32 -2145109389, i32 -2145109306, i32 -2145109217, i32 -2145109096, i32 -2145108996, i32 -2145108890, i32 -2145108782, i32 -2145111750, i32 -2145111697, i32 -2145111666, i32 -2145111635, i32 -2145111614, i32 -2145111592, i32 -2145111543, i32 -2145111522, i32 -2145108699, i32 -2145108610, i32 -2145108489, i32 -2145108390, i32 -2145108284, i32 -2145108182, i32 -2145108149, i32 -2145108076, i32 -2145108008, i32 -2145111148, i32 -2145111095, i32 -2145111064, i32 -2145111033, i32 -2145111012, i32 -2145110990, i32 -2145110941, i32 -2145110920, i32 -2145107953, i32 -2145107864, i32 -2145107743, i32 -2145107644, i32 -2145107538, i32 -2145107436, i32 -2145107403, i32 -2145107320, i32 -2145107231, i32 -2145107110, i32 -2145107010, i32 -2145106984, i32 -2145106881, i32 -2145106855, i32 -2145110662, i32 -2145110595, i32 -2145110570, i32 -2145110506, i32 -2145110390, i32 -2145110365, i32 -2145110340}
!1853 = !DILocation(line: 0, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1855, file: !3, line: 1779, column: 14)
!1855 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 1779, column: 7)
!1856 = !DILocation(line: 1808, column: 1, scope: !1531)
!1857 = distinct !DISubprogram(name: "_sock_net_write", scope: !3, file: !3, line: 357, type: !846, isLocal: false, isDefinition: true, scopeLine: 357, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1858)
!1858 = !{!1859, !1860, !1861, !1862, !1863}
!1859 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !1857, file: !3, line: 357, type: !713)
!1860 = !DILocalVariable(name: "buf", arg: 2, scope: !1857, file: !3, line: 357, type: !835)
!1861 = !DILocalVariable(name: "ioflag", arg: 3, scope: !1857, file: !3, line: 357, type: !80)
!1862 = !DILocalVariable(name: "ret", scope: !1857, file: !3, line: 358, type: !80)
!1863 = !DILocalVariable(name: "file", scope: !1857, file: !3, line: 359, type: !1077)
!1864 = !DILocation(line: 357, column: 35, scope: !1857)
!1865 = !DILocation(line: 357, column: 56, scope: !1857)
!1866 = !DILocation(line: 357, column: 65, scope: !1857)
!1867 = !DILocation(line: 358, column: 6, scope: !1857)
!1868 = !DILocation(line: 359, column: 24, scope: !1857)
!1869 = !DILocation(line: 361, column: 18, scope: !1857)
!1870 = !DILocation(line: 366, column: 26, scope: !1857)
!1871 = !DILocation(line: 366, column: 40, scope: !1857)
!1872 = !{!1873, !1408, i64 0}
!1873 = !{!"uio", !1408, i64 0, !1409, i64 8, !1404, i64 16, !1404, i64 24, !1405, i64 32}
!1874 = !DILocation(line: 366, column: 54, scope: !1857)
!1875 = !{!1873, !1409, i64 8}
!1876 = !DILocalVariable(name: "s", arg: 1, scope: !1877, file: !3, line: 2750, type: !80)
!1877 = distinct !DISubprogram(name: "lwip_writev", scope: !3, file: !3, line: 2750, type: !1878, isLocal: false, isDefinition: true, scopeLine: 2751, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1882)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{!206, !80, !1880, !80}
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!1882 = !{!1876, !1883, !1884, !1885}
!1883 = !DILocalVariable(name: "iov", arg: 2, scope: !1877, file: !3, line: 2750, type: !1880)
!1884 = !DILocalVariable(name: "iovcnt", arg: 3, scope: !1877, file: !3, line: 2750, type: !80)
!1885 = !DILocalVariable(name: "msg", scope: !1877, file: !3, line: 2752, type: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !153, line: 129, size: 384, elements: !1887)
!1887 = !{!1888, !1889, !1891, !1892, !1893, !1894, !1895}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !1886, file: !153, line: 130, baseType: !143, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !1886, file: !153, line: 131, baseType: !1890, size: 32, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !153, line: 113, baseType: !169)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iov", scope: !1886, file: !153, line: 132, baseType: !210, size: 64, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iovlen", scope: !1886, file: !153, line: 133, baseType: !80, size: 32, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !1886, file: !153, line: 134, baseType: !143, size: 64, offset: 256)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !1886, file: !153, line: 135, baseType: !1890, size: 32, offset: 320)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !1886, file: !153, line: 136, baseType: !80, size: 32, offset: 352)
!1896 = !DILocation(line: 2750, column: 17, scope: !1877, inlinedAt: !1897)
!1897 = distinct !DILocation(line: 366, column: 8, scope: !1857)
!1898 = !DILocation(line: 2750, column: 40, scope: !1877, inlinedAt: !1897)
!1899 = !DILocation(line: 2750, column: 49, scope: !1877, inlinedAt: !1897)
!1900 = !DILocation(line: 2752, column: 3, scope: !1877, inlinedAt: !1897)
!1901 = !DILocation(line: 2754, column: 7, scope: !1877, inlinedAt: !1897)
!1902 = !DILocation(line: 2754, column: 16, scope: !1877, inlinedAt: !1897)
!1903 = !{!1904, !1408, i64 0}
!1904 = !{!"msghdr", !1408, i64 0, !1409, i64 8, !1408, i64 16, !1409, i64 24, !1408, i64 32, !1409, i64 40, !1409, i64 44}
!1905 = !DILocation(line: 2755, column: 7, scope: !1877, inlinedAt: !1897)
!1906 = !DILocation(line: 2755, column: 19, scope: !1877, inlinedAt: !1897)
!1907 = !{!1904, !1409, i64 8}
!1908 = !DILocation(line: 2758, column: 7, scope: !1877, inlinedAt: !1897)
!1909 = !DILocation(line: 2758, column: 15, scope: !1877, inlinedAt: !1897)
!1910 = !{!1904, !1408, i64 16}
!1911 = !DILocation(line: 2759, column: 7, scope: !1877, inlinedAt: !1897)
!1912 = !DILocation(line: 2759, column: 18, scope: !1877, inlinedAt: !1897)
!1913 = !{!1904, !1409, i64 24}
!1914 = !DILocation(line: 2760, column: 7, scope: !1877, inlinedAt: !1897)
!1915 = !DILocation(line: 2760, column: 19, scope: !1877, inlinedAt: !1897)
!1916 = !{!1904, !1408, i64 32}
!1917 = !DILocation(line: 2761, column: 7, scope: !1877, inlinedAt: !1897)
!1918 = !DILocation(line: 2761, column: 22, scope: !1877, inlinedAt: !1897)
!1919 = !{!1904, !1409, i64 40}
!1920 = !DILocation(line: 2762, column: 7, scope: !1877, inlinedAt: !1897)
!1921 = !DILocation(line: 2762, column: 17, scope: !1877, inlinedAt: !1897)
!1922 = !{!1904, !1409, i64 44}
!1923 = !DILocation(line: 2752, column: 17, scope: !1877, inlinedAt: !1897)
!1924 = !DILocation(line: 2763, column: 10, scope: !1877, inlinedAt: !1897)
!1925 = !DILocation(line: 2764, column: 1, scope: !1877, inlinedAt: !1897)
!1926 = !DILocation(line: 2763, column: 3, scope: !1877, inlinedAt: !1897)
!1927 = !DILocation(line: 366, column: 8, scope: !1857)
!1928 = !DILocation(line: 371, column: 10, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1857, file: !3, line: 371, column: 6)
!1930 = !DILocation(line: 371, column: 6, scope: !1857)
!1931 = !DILocation(line: 105, column: 2, scope: !1456, inlinedAt: !1932)
!1932 = distinct !DILocation(line: 372, column: 10, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1929, file: !3, line: 371, column: 15)
!1934 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1935)
!1935 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1932)
!1936 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1935)
!1937 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1935)
!1938 = !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1932)
!1939 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1940)
!1940 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1932)
!1941 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1940)
!1942 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1940)
!1943 = !DILocation(line: 106, column: 2, scope: !1466, inlinedAt: !1932)
!1944 = !DILocation(line: 100, column: 9, scope: !1488, inlinedAt: !1945)
!1945 = distinct !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1932)
!1946 = !DILocation(line: 100, column: 2, scope: !1488, inlinedAt: !1945)
!1947 = !DILocation(line: 105, column: 6, scope: !1456, inlinedAt: !1932)
!1948 = !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1932)
!1949 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1950)
!1950 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1951)
!1951 = distinct !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1932)
!1952 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1950)
!1953 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1950)
!1954 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1951)
!1955 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1951)
!1956 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1951)
!1957 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1951)
!1958 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1951)
!1959 = !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1932)
!1960 = !DILocation(line: 106, column: 2, scope: !1513, inlinedAt: !1932)
!1961 = !DILocation(line: 107, column: 9, scope: !1456, inlinedAt: !1932)
!1962 = !DILocation(line: 108, column: 1, scope: !1456, inlinedAt: !1932)
!1963 = !DILocation(line: 107, column: 2, scope: !1456, inlinedAt: !1932)
!1964 = !DILocation(line: 372, column: 3, scope: !1933)
!1965 = !DILocation(line: 375, column: 20, scope: !1857)
!1966 = !DILocation(line: 375, column: 7, scope: !1857)
!1967 = !DILocation(line: 375, column: 17, scope: !1857)
!1968 = !{!1873, !1404, i64 24}
!1969 = !DILocation(line: 376, column: 2, scope: !1857)
!1970 = !DILocation(line: 0, scope: !1857)
!1971 = !DILocation(line: 377, column: 1, scope: !1857)
!1972 = !DILocation(line: 2750, column: 17, scope: !1877)
!1973 = !DILocation(line: 2750, column: 40, scope: !1877)
!1974 = !DILocation(line: 2750, column: 49, scope: !1877)
!1975 = !DILocation(line: 2752, column: 3, scope: !1877)
!1976 = !DILocation(line: 2754, column: 7, scope: !1877)
!1977 = !DILocation(line: 2754, column: 16, scope: !1877)
!1978 = !DILocation(line: 2755, column: 7, scope: !1877)
!1979 = !DILocation(line: 2755, column: 19, scope: !1877)
!1980 = !DILocation(line: 2758, column: 7, scope: !1877)
!1981 = !DILocation(line: 2758, column: 15, scope: !1877)
!1982 = !DILocation(line: 2759, column: 7, scope: !1877)
!1983 = !DILocation(line: 2759, column: 18, scope: !1877)
!1984 = !DILocation(line: 2760, column: 7, scope: !1877)
!1985 = !DILocation(line: 2760, column: 19, scope: !1877)
!1986 = !DILocation(line: 2761, column: 7, scope: !1877)
!1987 = !DILocation(line: 2761, column: 22, scope: !1877)
!1988 = !DILocation(line: 2762, column: 7, scope: !1877)
!1989 = !DILocation(line: 2762, column: 17, scope: !1877)
!1990 = !DILocation(line: 2752, column: 17, scope: !1877)
!1991 = !DILocation(line: 2763, column: 10, scope: !1877)
!1992 = !DILocation(line: 2764, column: 1, scope: !1877)
!1993 = !DILocation(line: 2763, column: 3, scope: !1877)
!1994 = distinct !DISubprogram(name: "_sock_net_read", scope: !3, file: !3, line: 392, type: !833, isLocal: false, isDefinition: true, scopeLine: 393, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1995)
!1995 = !{!1996, !1997, !1998, !1999, !2000, !2001}
!1996 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !1994, file: !3, line: 392, type: !713)
!1997 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !1994, file: !3, line: 392, type: !785)
!1998 = !DILocalVariable(name: "buf", arg: 3, scope: !1994, file: !3, line: 393, type: !835)
!1999 = !DILocalVariable(name: "ioflag", arg: 4, scope: !1994, file: !3, line: 393, type: !80)
!2000 = !DILocalVariable(name: "ret", scope: !1994, file: !3, line: 394, type: !80)
!2001 = !DILocalVariable(name: "file", scope: !1994, file: !3, line: 395, type: !1077)
!2002 = !DILocation(line: 392, column: 34, scope: !1994)
!2003 = !DILocation(line: 392, column: 64, scope: !1994)
!2004 = !DILocation(line: 393, column: 18, scope: !1994)
!2005 = !DILocation(line: 393, column: 27, scope: !1994)
!2006 = !DILocation(line: 394, column: 6, scope: !1994)
!2007 = !DILocation(line: 395, column: 24, scope: !1994)
!2008 = !DILocation(line: 397, column: 18, scope: !1994)
!2009 = !DILocation(line: 402, column: 25, scope: !1994)
!2010 = !DILocation(line: 402, column: 39, scope: !1994)
!2011 = !DILocation(line: 402, column: 53, scope: !1994)
!2012 = !DILocalVariable(name: "s", arg: 1, scope: !2013, file: !3, line: 2256, type: !80)
!2013 = distinct !DISubprogram(name: "lwip_readv", scope: !3, file: !3, line: 2256, type: !1878, isLocal: false, isDefinition: true, scopeLine: 2257, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2014)
!2014 = !{!2012, !2015, !2016, !2017}
!2015 = !DILocalVariable(name: "iov", arg: 2, scope: !2013, file: !3, line: 2256, type: !1880)
!2016 = !DILocalVariable(name: "iovcnt", arg: 3, scope: !2013, file: !3, line: 2256, type: !80)
!2017 = !DILocalVariable(name: "msg", scope: !2013, file: !3, line: 2258, type: !1886)
!2018 = !DILocation(line: 2256, column: 16, scope: !2013, inlinedAt: !2019)
!2019 = distinct !DILocation(line: 402, column: 8, scope: !1994)
!2020 = !DILocation(line: 2256, column: 39, scope: !2013, inlinedAt: !2019)
!2021 = !DILocation(line: 2256, column: 48, scope: !2013, inlinedAt: !2019)
!2022 = !DILocation(line: 2258, column: 3, scope: !2013, inlinedAt: !2019)
!2023 = !DILocation(line: 2260, column: 7, scope: !2013, inlinedAt: !2019)
!2024 = !DILocation(line: 2260, column: 16, scope: !2013, inlinedAt: !2019)
!2025 = !DILocation(line: 2261, column: 7, scope: !2013, inlinedAt: !2019)
!2026 = !DILocation(line: 2261, column: 19, scope: !2013, inlinedAt: !2019)
!2027 = !DILocation(line: 2264, column: 7, scope: !2013, inlinedAt: !2019)
!2028 = !DILocation(line: 2264, column: 15, scope: !2013, inlinedAt: !2019)
!2029 = !DILocation(line: 2265, column: 7, scope: !2013, inlinedAt: !2019)
!2030 = !DILocation(line: 2265, column: 18, scope: !2013, inlinedAt: !2019)
!2031 = !DILocation(line: 2266, column: 7, scope: !2013, inlinedAt: !2019)
!2032 = !DILocation(line: 2266, column: 19, scope: !2013, inlinedAt: !2019)
!2033 = !DILocation(line: 2267, column: 7, scope: !2013, inlinedAt: !2019)
!2034 = !DILocation(line: 2267, column: 22, scope: !2013, inlinedAt: !2019)
!2035 = !DILocation(line: 2268, column: 7, scope: !2013, inlinedAt: !2019)
!2036 = !DILocation(line: 2268, column: 17, scope: !2013, inlinedAt: !2019)
!2037 = !DILocation(line: 2258, column: 17, scope: !2013, inlinedAt: !2019)
!2038 = !DILocation(line: 2269, column: 10, scope: !2013, inlinedAt: !2019)
!2039 = !DILocation(line: 2270, column: 1, scope: !2013, inlinedAt: !2019)
!2040 = !DILocation(line: 2269, column: 3, scope: !2013, inlinedAt: !2019)
!2041 = !DILocation(line: 402, column: 8, scope: !1994)
!2042 = !DILocation(line: 407, column: 10, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !1994, file: !3, line: 407, column: 6)
!2044 = !DILocation(line: 407, column: 6, scope: !1994)
!2045 = !DILocation(line: 105, column: 2, scope: !1456, inlinedAt: !2046)
!2046 = distinct !DILocation(line: 408, column: 10, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2043, file: !3, line: 407, column: 15)
!2048 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2049)
!2049 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !2046)
!2050 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2049)
!2051 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2049)
!2052 = !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !2046)
!2053 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2054)
!2054 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !2046)
!2055 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2054)
!2056 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2054)
!2057 = !DILocation(line: 106, column: 2, scope: !1466, inlinedAt: !2046)
!2058 = !DILocation(line: 100, column: 9, scope: !1488, inlinedAt: !2059)
!2059 = distinct !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !2046)
!2060 = !DILocation(line: 100, column: 2, scope: !1488, inlinedAt: !2059)
!2061 = !DILocation(line: 105, column: 6, scope: !1456, inlinedAt: !2046)
!2062 = !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !2046)
!2063 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2064)
!2064 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2065)
!2065 = distinct !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !2046)
!2066 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2064)
!2067 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2064)
!2068 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2065)
!2069 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2065)
!2070 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2065)
!2071 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2065)
!2072 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2065)
!2073 = !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !2046)
!2074 = !DILocation(line: 106, column: 2, scope: !1513, inlinedAt: !2046)
!2075 = !DILocation(line: 107, column: 9, scope: !1456, inlinedAt: !2046)
!2076 = !DILocation(line: 108, column: 1, scope: !1456, inlinedAt: !2046)
!2077 = !DILocation(line: 107, column: 2, scope: !1456, inlinedAt: !2046)
!2078 = !DILocation(line: 408, column: 3, scope: !2047)
!2079 = !DILocation(line: 411, column: 20, scope: !1994)
!2080 = !DILocation(line: 411, column: 7, scope: !1994)
!2081 = !DILocation(line: 411, column: 17, scope: !1994)
!2082 = !DILocation(line: 412, column: 2, scope: !1994)
!2083 = !DILocation(line: 0, scope: !1994)
!2084 = !DILocation(line: 413, column: 1, scope: !1994)
!2085 = !DILocation(line: 2256, column: 16, scope: !2013)
!2086 = !DILocation(line: 2256, column: 39, scope: !2013)
!2087 = !DILocation(line: 2256, column: 48, scope: !2013)
!2088 = !DILocation(line: 2258, column: 3, scope: !2013)
!2089 = !DILocation(line: 2260, column: 7, scope: !2013)
!2090 = !DILocation(line: 2260, column: 16, scope: !2013)
!2091 = !DILocation(line: 2261, column: 7, scope: !2013)
!2092 = !DILocation(line: 2261, column: 19, scope: !2013)
!2093 = !DILocation(line: 2264, column: 7, scope: !2013)
!2094 = !DILocation(line: 2264, column: 15, scope: !2013)
!2095 = !DILocation(line: 2265, column: 7, scope: !2013)
!2096 = !DILocation(line: 2265, column: 18, scope: !2013)
!2097 = !DILocation(line: 2266, column: 7, scope: !2013)
!2098 = !DILocation(line: 2266, column: 19, scope: !2013)
!2099 = !DILocation(line: 2267, column: 7, scope: !2013)
!2100 = !DILocation(line: 2267, column: 22, scope: !2013)
!2101 = !DILocation(line: 2268, column: 7, scope: !2013)
!2102 = !DILocation(line: 2268, column: 17, scope: !2013)
!2103 = !DILocation(line: 2258, column: 17, scope: !2013)
!2104 = !DILocation(line: 2269, column: 10, scope: !2013)
!2105 = !DILocation(line: 2270, column: 1, scope: !2013)
!2106 = !DILocation(line: 2269, column: 3, scope: !2013)
!2107 = distinct !DISubprogram(name: "_sock_net_ioctl", scope: !3, file: !3, line: 429, type: !856, isLocal: false, isDefinition: true, scopeLine: 430, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2108)
!2108 = !{!2109, !2110, !2111, !2112, !2113, !2114}
!2109 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !2107, file: !3, line: 429, type: !713)
!2110 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !2107, file: !3, line: 429, type: !785)
!2111 = !DILocalVariable(name: "request", arg: 3, scope: !2107, file: !3, line: 430, type: !134)
!2112 = !DILocalVariable(name: "buf", arg: 4, scope: !2107, file: !3, line: 430, type: !143)
!2113 = !DILocalVariable(name: "file", scope: !2107, file: !3, line: 431, type: !1077)
!2114 = !DILocalVariable(name: "ret", scope: !2107, file: !3, line: 438, type: !80)
!2115 = !DILocation(line: 429, column: 35, scope: !2107)
!2116 = !DILocation(line: 429, column: 65, scope: !2107)
!2117 = !DILocation(line: 430, column: 21, scope: !2107)
!2118 = !DILocation(line: 430, column: 36, scope: !2107)
!2119 = !DILocation(line: 431, column: 24, scope: !2107)
!2120 = !DILocation(line: 433, column: 18, scope: !2107)
!2121 = !DILocation(line: 438, column: 29, scope: !2107)
!2122 = !DILocation(line: 438, column: 12, scope: !2107)
!2123 = !DILocation(line: 438, column: 6, scope: !2107)
!2124 = !DILocation(line: 439, column: 2, scope: !2107)
!2125 = distinct !DISubprogram(name: "lwip_ioctl", scope: !3, file: !3, line: 4741, type: !2126, isLocal: false, isDefinition: true, scopeLine: 4742, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2128)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{!80, !80, !142, !143}
!2128 = !{!2129, !2130, !2131, !2132, !2133, !2134, !2137, !2143, !2145}
!2129 = !DILocalVariable(name: "s", arg: 1, scope: !2125, file: !3, line: 4741, type: !80)
!2130 = !DILocalVariable(name: "cmd", arg: 2, scope: !2125, file: !3, line: 4741, type: !142)
!2131 = !DILocalVariable(name: "argp", arg: 3, scope: !2125, file: !3, line: 4741, type: !143)
!2132 = !DILocalVariable(name: "sock", scope: !2125, file: !3, line: 4743, type: !1165)
!2133 = !DILocalVariable(name: "val", scope: !2125, file: !3, line: 4744, type: !156)
!2134 = !DILocalVariable(name: "sockerr", scope: !2135, file: !3, line: 4815, type: !1007)
!2135 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 4815, column: 7)
!2136 = distinct !DILexicalBlock(scope: !2125, file: !3, line: 4753, column: 16)
!2137 = !DILocalVariable(name: "tid", scope: !2138, file: !3, line: 4815, type: !170)
!2138 = distinct !DILexicalBlock(scope: !2139, file: !3, line: 4815, column: 7)
!2139 = distinct !DILexicalBlock(scope: !2140, file: !3, line: 4815, column: 7)
!2140 = distinct !DILexicalBlock(scope: !2141, file: !3, line: 4815, column: 7)
!2141 = distinct !DILexicalBlock(scope: !2142, file: !3, line: 4815, column: 7)
!2142 = distinct !DILexicalBlock(scope: !2135, file: !3, line: 4815, column: 7)
!2143 = !DILocalVariable(name: "sockerr", scope: !2144, file: !3, line: 4823, type: !1007)
!2144 = distinct !DILexicalBlock(scope: !2125, file: !3, line: 4823, column: 3)
!2145 = !DILocalVariable(name: "tid", scope: !2146, file: !3, line: 4823, type: !170)
!2146 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 4823, column: 3)
!2147 = distinct !DILexicalBlock(scope: !2148, file: !3, line: 4823, column: 3)
!2148 = distinct !DILexicalBlock(scope: !2149, file: !3, line: 4823, column: 3)
!2149 = distinct !DILexicalBlock(scope: !2150, file: !3, line: 4823, column: 3)
!2150 = distinct !DILexicalBlock(scope: !2144, file: !3, line: 4823, column: 3)
!2151 = !DILocation(line: 4741, column: 16, scope: !2125)
!2152 = !DILocation(line: 4741, column: 24, scope: !2125)
!2153 = !DILocation(line: 4741, column: 35, scope: !2125)
!2154 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !2155)
!2155 = distinct !DILocation(line: 4743, column: 28, scope: !2125)
!2156 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !2157)
!2157 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !2155)
!2158 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !2159)
!2159 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !2157)
!2160 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !2161)
!2161 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !2159)
!2162 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !2161)
!2163 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !2161)
!2164 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !2161)
!2165 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !2159)
!2166 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !2157)
!2167 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !2161)
!2168 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !2157)
!2169 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !2157)
!2170 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !2157)
!2171 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !2157)
!2172 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2173)
!2173 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !2155)
!2174 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2173)
!2175 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2173)
!2176 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !2155)
!2177 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2178)
!2178 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !2155)
!2179 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2178)
!2180 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2178)
!2181 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !2155)
!2182 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !2183)
!2183 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !2155)
!2184 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !2183)
!2185 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !2183)
!2186 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !2183)
!2187 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !2155)
!2188 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2189)
!2189 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2190)
!2190 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !2155)
!2191 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2189)
!2192 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2189)
!2193 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2190)
!2194 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2190)
!2195 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2190)
!2196 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2190)
!2197 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2190)
!2198 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !2155)
!2199 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !2155)
!2200 = !DILocation(line: 4749, column: 7, scope: !2125)
!2201 = !DILocation(line: 4753, column: 3, scope: !2125)
!2202 = !DILocation(line: 4744, column: 8, scope: !2125)
!2203 = !DILocation(line: 4810, column: 11, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 4810, column: 11)
!2205 = !DILocation(line: 4810, column: 16, scope: !2204)
!2206 = !DILocation(line: 4813, column: 7, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2208, file: !3, line: 4813, column: 7)
!2208 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 4813, column: 7)
!2209 = distinct !DILexicalBlock(scope: !2210, file: !3, line: 4813, column: 7)
!2210 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 4813, column: 7)
!2211 = !{!1648, !1405, i64 108}
!2212 = !DILocation(line: 4813, column: 7, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !3, line: 4813, column: 7)
!2214 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 4813, column: 7)
!2215 = !DILocation(line: 4813, column: 7, scope: !2210)
!2216 = !DILocation(line: 4810, column: 20, scope: !2204)
!2217 = !DILocation(line: 4810, column: 19, scope: !2204)
!2218 = !DILocation(line: 4815, column: 7, scope: !2135)
!2219 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2220)
!2220 = distinct !DILocation(line: 4815, column: 7, scope: !2141)
!2221 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2220)
!2222 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2220)
!2223 = !DILocation(line: 4815, column: 7, scope: !2141)
!2224 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2225)
!2225 = distinct !DILocation(line: 4815, column: 7, scope: !2141)
!2226 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2225)
!2227 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2225)
!2228 = !DILocation(line: 4815, column: 7, scope: !2142)
!2229 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !2230)
!2230 = distinct !DILocation(line: 4815, column: 7, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2141, file: !3, line: 4815, column: 7)
!2232 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !2230)
!2233 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !2230)
!2234 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !2230)
!2235 = !DILocation(line: 4815, column: 7, scope: !2231)
!2236 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2237)
!2237 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2238)
!2238 = distinct !DILocation(line: 4815, column: 7, scope: !2138)
!2239 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2237)
!2240 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2237)
!2241 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2238)
!2242 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2238)
!2243 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2238)
!2244 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2238)
!2245 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2238)
!2246 = !DILocation(line: 4815, column: 7, scope: !2138)
!2247 = !{i32 -2144570054, i32 -2144570041, i32 -2144570016, i32 -2144569992, i32 -2144569967, i32 -2144569892, i32 -2144569867, i32 -2144569723, i32 -2144567500, i32 -2144567411, i32 -2144567290, i32 -2144567195, i32 -2144567094, i32 -2144567067, i32 -2144566984, i32 -2144566895, i32 -2144566774, i32 -2144566674, i32 -2144566568, i32 -2144566460, i32 -2144569435, i32 -2144569382, i32 -2144569351, i32 -2144569320, i32 -2144569299, i32 -2144569277, i32 -2144569228, i32 -2144569207, i32 -2144566377, i32 -2144566288, i32 -2144566167, i32 -2144566068, i32 -2144565962, i32 -2144565860, i32 -2144565827, i32 -2144565754, i32 -2144565686, i32 -2144568833, i32 -2144568780, i32 -2144568749, i32 -2144568718, i32 -2144568697, i32 -2144568675, i32 -2144568626, i32 -2144568605, i32 -2144565631, i32 -2144565542, i32 -2144565421, i32 -2144565322, i32 -2144565216, i32 -2144565114, i32 -2144565081, i32 -2144564998, i32 -2144564909, i32 -2144564788, i32 -2144564688, i32 -2144564662, i32 -2144564559, i32 -2144564533, i32 -2144568347, i32 -2144568280, i32 -2144568255, i32 -2144568191, i32 -2144568075, i32 -2144568050, i32 -2144568025}
!2248 = !DILocation(line: 4823, column: 3, scope: !2144)
!2249 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2250)
!2250 = distinct !DILocation(line: 4823, column: 3, scope: !2149)
!2251 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2250)
!2252 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2250)
!2253 = !DILocation(line: 4823, column: 3, scope: !2149)
!2254 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2255)
!2255 = distinct !DILocation(line: 4823, column: 3, scope: !2149)
!2256 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2255)
!2257 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2255)
!2258 = !DILocation(line: 4823, column: 3, scope: !2150)
!2259 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !2260)
!2260 = distinct !DILocation(line: 4823, column: 3, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2149, file: !3, line: 4823, column: 3)
!2262 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !2260)
!2263 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !2260)
!2264 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !2260)
!2265 = !DILocation(line: 4823, column: 3, scope: !2261)
!2266 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2267)
!2267 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2268)
!2268 = distinct !DILocation(line: 4823, column: 3, scope: !2146)
!2269 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2267)
!2270 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2267)
!2271 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2268)
!2272 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2268)
!2273 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2268)
!2274 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2268)
!2275 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2268)
!2276 = !DILocation(line: 4823, column: 3, scope: !2146)
!2277 = !{i32 -2144562493, i32 -2144562480, i32 -2144562455, i32 -2144562431, i32 -2144562406, i32 -2144562331, i32 -2144562306, i32 -2144562162, i32 -2144559939, i32 -2144559850, i32 -2144559729, i32 -2144559634, i32 -2144559533, i32 -2144559506, i32 -2144559423, i32 -2144559334, i32 -2144559213, i32 -2144559113, i32 -2144559007, i32 -2144558899, i32 -2144561874, i32 -2144561821, i32 -2144561790, i32 -2144561759, i32 -2144561738, i32 -2144561716, i32 -2144561667, i32 -2144561646, i32 -2144558816, i32 -2144558727, i32 -2144558606, i32 -2144558507, i32 -2144558401, i32 -2144558299, i32 -2144558266, i32 -2144558193, i32 -2144558125, i32 -2144561272, i32 -2144561219, i32 -2144561188, i32 -2144561157, i32 -2144561136, i32 -2144561114, i32 -2144561065, i32 -2144561044, i32 -2144558070, i32 -2144557981, i32 -2144557860, i32 -2144557761, i32 -2144557655, i32 -2144557553, i32 -2144557520, i32 -2144557437, i32 -2144557348, i32 -2144557227, i32 -2144557127, i32 -2144557101, i32 -2144556998, i32 -2144556972, i32 -2144560786, i32 -2144560719, i32 -2144560694, i32 -2144560630, i32 -2144560514, i32 -2144560489, i32 -2144560464}
!2278 = !DILocation(line: 0, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2280, file: !3, line: 4749, column: 14)
!2280 = distinct !DILexicalBlock(scope: !2125, file: !3, line: 4749, column: 7)
!2281 = !DILocation(line: 4826, column: 1, scope: !2125)
!2282 = distinct !DISubprogram(name: "socket", scope: !3, file: !3, line: 442, type: !2283, isLocal: false, isDefinition: true, scopeLine: 443, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2285)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!80, !80, !80, !80}
!2285 = !{!2286, !2287, !2288, !2289, !2290, !2291, !2292}
!2286 = !DILocalVariable(name: "domain", arg: 1, scope: !2282, file: !3, line: 442, type: !80)
!2287 = !DILocalVariable(name: "type", arg: 2, scope: !2282, file: !3, line: 442, type: !80)
!2288 = !DILocalVariable(name: "protocol", arg: 3, scope: !2282, file: !3, line: 442, type: !80)
!2289 = !DILocalVariable(name: "ret", scope: !2282, file: !3, line: 444, type: !80)
!2290 = !DILocalVariable(name: "vfs_fd", scope: !2282, file: !3, line: 445, type: !80)
!2291 = !DILocalVariable(name: "sock_fd", scope: !2282, file: !3, line: 446, type: !80)
!2292 = !DILocalVariable(name: "tid", scope: !2293, file: !3, line: 465, type: !170)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !3, line: 465, column: 3)
!2294 = distinct !DILexicalBlock(scope: !2295, file: !3, line: 465, column: 3)
!2295 = distinct !DILexicalBlock(scope: !2296, file: !3, line: 465, column: 3)
!2296 = distinct !DILexicalBlock(scope: !2297, file: !3, line: 465, column: 3)
!2297 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 465, column: 3)
!2298 = distinct !DILexicalBlock(scope: !2299, file: !3, line: 465, column: 3)
!2299 = distinct !DILexicalBlock(scope: !2300, file: !3, line: 459, column: 18)
!2300 = distinct !DILexicalBlock(scope: !2282, file: !3, line: 459, column: 6)
!2301 = !DILocation(line: 442, column: 16, scope: !2282)
!2302 = !DILocation(line: 442, column: 28, scope: !2282)
!2303 = !DILocation(line: 442, column: 38, scope: !2282)
!2304 = !DILocation(line: 444, column: 6, scope: !2282)
!2305 = !DILocation(line: 445, column: 6, scope: !2282)
!2306 = !DILocation(line: 446, column: 6, scope: !2282)
!2307 = !DILocation(line: 449, column: 12, scope: !2282)
!2308 = !DILocation(line: 450, column: 14, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2282, file: !3, line: 450, column: 6)
!2310 = !DILocation(line: 450, column: 6, scope: !2282)
!2311 = !DILocation(line: 458, column: 11, scope: !2282)
!2312 = !DILocation(line: 459, column: 13, scope: !2300)
!2313 = !DILocation(line: 459, column: 6, scope: !2282)
!2314 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2315)
!2315 = distinct !DILocation(line: 465, column: 3, scope: !2296)
!2316 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2315)
!2317 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2315)
!2318 = !DILocation(line: 465, column: 3, scope: !2296)
!2319 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2320)
!2320 = distinct !DILocation(line: 465, column: 3, scope: !2296)
!2321 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2320)
!2322 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2320)
!2323 = !DILocation(line: 465, column: 3, scope: !2297)
!2324 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !2325)
!2325 = distinct !DILocation(line: 465, column: 3, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2296, file: !3, line: 465, column: 3)
!2327 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !2325)
!2328 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !2325)
!2329 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !2325)
!2330 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !2325)
!2331 = !DILocation(line: 465, column: 3, scope: !2326)
!2332 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2333)
!2333 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2334)
!2334 = distinct !DILocation(line: 465, column: 3, scope: !2293)
!2335 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2333)
!2336 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2333)
!2337 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2334)
!2338 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2334)
!2339 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2334)
!2340 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2334)
!2341 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2334)
!2342 = !DILocation(line: 465, column: 3, scope: !2293)
!2343 = !{i32 -2145691928, i32 -2145691915, i32 -2145691890, i32 -2145691866, i32 -2145691841, i32 -2145691766, i32 -2145691741, i32 -2145691597, i32 -2145689376, i32 -2145689287, i32 -2145689166, i32 -2145689071, i32 -2145688970, i32 -2145688943, i32 -2145688860, i32 -2145688771, i32 -2145688650, i32 -2145688550, i32 -2145688444, i32 -2145688336, i32 -2145691309, i32 -2145691256, i32 -2145691225, i32 -2145691194, i32 -2145691173, i32 -2145691151, i32 -2145691102, i32 -2145691081, i32 -2145688253, i32 -2145688164, i32 -2145688043, i32 -2145687944, i32 -2145687838, i32 -2145687736, i32 -2145687703, i32 -2145687630, i32 -2145687562, i32 -2145690707, i32 -2145690654, i32 -2145690623, i32 -2145690592, i32 -2145690571, i32 -2145690549, i32 -2145690500, i32 -2145690479, i32 -2145687507, i32 -2145687418, i32 -2145687297, i32 -2145687198, i32 -2145687092, i32 -2145686990, i32 -2145686957, i32 -2145686874, i32 -2145686785, i32 -2145686664, i32 -2145686564, i32 -2145686538, i32 -2145686435, i32 -2145686409, i32 -2145690221, i32 -2145690154, i32 -2145690129, i32 -2145690065, i32 -2145689949, i32 -2145689924, i32 -2145689899}
!2344 = !DILocation(line: 0, scope: !2282)
!2345 = !DILocation(line: 472, column: 2, scope: !2282)
!2346 = !DILocation(line: 475, column: 2, scope: !2282)
!2347 = !DILocation(line: 476, column: 2, scope: !2282)
!2348 = distinct !DISubprogram(name: "lwip_socket", scope: !3, file: !3, line: 2683, type: !2283, isLocal: false, isDefinition: true, scopeLine: 2684, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2349)
!2349 = !{!2350, !2351, !2352, !2353, !2354, !2355, !2362, !2370, !2378}
!2350 = !DILocalVariable(name: "domain", arg: 1, scope: !2348, file: !3, line: 2683, type: !80)
!2351 = !DILocalVariable(name: "type", arg: 2, scope: !2348, file: !3, line: 2683, type: !80)
!2352 = !DILocalVariable(name: "protocol", arg: 3, scope: !2348, file: !3, line: 2683, type: !80)
!2353 = !DILocalVariable(name: "conn", scope: !2348, file: !3, line: 2685, type: !1169)
!2354 = !DILocalVariable(name: "i", scope: !2348, file: !3, line: 2686, type: !80)
!2355 = !DILocalVariable(name: "tid", scope: !2356, file: !3, line: 2719, type: !170)
!2356 = distinct !DILexicalBlock(scope: !2357, file: !3, line: 2719, column: 7)
!2357 = distinct !DILexicalBlock(scope: !2358, file: !3, line: 2719, column: 7)
!2358 = distinct !DILexicalBlock(scope: !2359, file: !3, line: 2719, column: 7)
!2359 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 2719, column: 7)
!2360 = distinct !DILexicalBlock(scope: !2361, file: !3, line: 2719, column: 7)
!2361 = distinct !DILexicalBlock(scope: !2348, file: !3, line: 2691, column: 17)
!2362 = !DILocalVariable(name: "tid", scope: !2363, file: !3, line: 2725, type: !170)
!2363 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2725, column: 5)
!2364 = distinct !DILexicalBlock(scope: !2365, file: !3, line: 2725, column: 5)
!2365 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 2725, column: 5)
!2366 = distinct !DILexicalBlock(scope: !2367, file: !3, line: 2725, column: 5)
!2367 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 2725, column: 5)
!2368 = distinct !DILexicalBlock(scope: !2369, file: !3, line: 2723, column: 14)
!2369 = distinct !DILexicalBlock(scope: !2348, file: !3, line: 2723, column: 7)
!2370 = !DILocalVariable(name: "tid", scope: !2371, file: !3, line: 2733, type: !170)
!2371 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 2733, column: 5)
!2372 = distinct !DILexicalBlock(scope: !2373, file: !3, line: 2733, column: 5)
!2373 = distinct !DILexicalBlock(scope: !2374, file: !3, line: 2733, column: 5)
!2374 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2733, column: 5)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !3, line: 2733, column: 5)
!2376 = distinct !DILexicalBlock(scope: !2377, file: !3, line: 2731, column: 16)
!2377 = distinct !DILexicalBlock(scope: !2348, file: !3, line: 2731, column: 7)
!2378 = !DILocalVariable(name: "tid", scope: !2379, file: !3, line: 2739, type: !170)
!2379 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 2739, column: 3)
!2380 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 2739, column: 3)
!2381 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 2739, column: 3)
!2382 = distinct !DILexicalBlock(scope: !2383, file: !3, line: 2739, column: 3)
!2383 = distinct !DILexicalBlock(scope: !2348, file: !3, line: 2739, column: 3)
!2384 = !DILocation(line: 2683, column: 17, scope: !2348)
!2385 = !DILocation(line: 2683, column: 29, scope: !2348)
!2386 = !DILocation(line: 2683, column: 39, scope: !2348)
!2387 = !DILocation(line: 2691, column: 3, scope: !2348)
!2388 = !DILocation(line: 2693, column: 50, scope: !2361)
!2389 = !DILocation(line: 2694, column: 14, scope: !2361)
!2390 = !DILocation(line: 2693, column: 14, scope: !2361)
!2391 = !DILocation(line: 2685, column: 19, scope: !2348)
!2392 = !DILocation(line: 2697, column: 7, scope: !2361)
!2393 = !DILocation(line: 2699, column: 14, scope: !2361)
!2394 = !DILocation(line: 2710, column: 7, scope: !2361)
!2395 = !DILocation(line: 2712, column: 14, scope: !2361)
!2396 = !DILocation(line: 2715, column: 7, scope: !2361)
!2397 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2398)
!2398 = distinct !DILocation(line: 2719, column: 7, scope: !2359)
!2399 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2398)
!2400 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2398)
!2401 = !DILocation(line: 2719, column: 7, scope: !2359)
!2402 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2403)
!2403 = distinct !DILocation(line: 2719, column: 7, scope: !2359)
!2404 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2403)
!2405 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2403)
!2406 = !DILocation(line: 2719, column: 7, scope: !2360)
!2407 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !2408)
!2408 = distinct !DILocation(line: 2719, column: 7, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2359, file: !3, line: 2719, column: 7)
!2410 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !2408)
!2411 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !2408)
!2412 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !2408)
!2413 = !DILocation(line: 2719, column: 7, scope: !2409)
!2414 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2415)
!2415 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2416)
!2416 = distinct !DILocation(line: 2719, column: 7, scope: !2356)
!2417 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2415)
!2418 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2415)
!2419 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2416)
!2420 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2416)
!2421 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2416)
!2422 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2416)
!2423 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2416)
!2424 = !DILocation(line: 2719, column: 7, scope: !2356)
!2425 = !{i32 -2144811841, i32 -2144811828, i32 -2144811803, i32 -2144811779, i32 -2144811754, i32 -2144811679, i32 -2144811654, i32 -2144811510, i32 -2144809288, i32 -2144809199, i32 -2144809078, i32 -2144808983, i32 -2144808882, i32 -2144808855, i32 -2144808772, i32 -2144808683, i32 -2144808562, i32 -2144808462, i32 -2144808356, i32 -2144808248, i32 -2144811222, i32 -2144811169, i32 -2144811138, i32 -2144811107, i32 -2144811086, i32 -2144811064, i32 -2144811015, i32 -2144810994, i32 -2144808165, i32 -2144808076, i32 -2144807955, i32 -2144807856, i32 -2144807750, i32 -2144807648, i32 -2144807615, i32 -2144807542, i32 -2144807474, i32 -2144810620, i32 -2144810567, i32 -2144810536, i32 -2144810505, i32 -2144810484, i32 -2144810462, i32 -2144810413, i32 -2144810392, i32 -2144807419, i32 -2144807330, i32 -2144807209, i32 -2144807110, i32 -2144807004, i32 -2144806902, i32 -2144806869, i32 -2144806786, i32 -2144806697, i32 -2144806576, i32 -2144806476, i32 -2144806450, i32 -2144806347, i32 -2144806321, i32 -2144810134, i32 -2144810067, i32 -2144810042, i32 -2144809978, i32 -2144809862, i32 -2144809837, i32 -2144809812}
!2426 = !DILocation(line: 0, scope: !2361)
!2427 = !DILocation(line: 2723, column: 8, scope: !2369)
!2428 = !DILocation(line: 2723, column: 7, scope: !2348)
!2429 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2430)
!2430 = distinct !DILocation(line: 2725, column: 5, scope: !2366)
!2431 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2430)
!2432 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2430)
!2433 = !DILocation(line: 2725, column: 5, scope: !2366)
!2434 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2435)
!2435 = distinct !DILocation(line: 2725, column: 5, scope: !2366)
!2436 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2435)
!2437 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2435)
!2438 = !DILocation(line: 2725, column: 5, scope: !2367)
!2439 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !2440)
!2440 = distinct !DILocation(line: 2725, column: 5, scope: !2441)
!2441 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 2725, column: 5)
!2442 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !2440)
!2443 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !2440)
!2444 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !2440)
!2445 = !DILocation(line: 2725, column: 5, scope: !2441)
!2446 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2447)
!2447 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2448)
!2448 = distinct !DILocation(line: 2725, column: 5, scope: !2363)
!2449 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2447)
!2450 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2447)
!2451 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2448)
!2452 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2448)
!2453 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2448)
!2454 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2448)
!2455 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2448)
!2456 = !DILocation(line: 2725, column: 5, scope: !2363)
!2457 = !{i32 -2144804403, i32 -2144804390, i32 -2144804365, i32 -2144804341, i32 -2144804316, i32 -2144804241, i32 -2144804216, i32 -2144804072, i32 -2144801848, i32 -2144801759, i32 -2144801638, i32 -2144801543, i32 -2144801442, i32 -2144801415, i32 -2144801332, i32 -2144801243, i32 -2144801122, i32 -2144801022, i32 -2144800916, i32 -2144800808, i32 -2144803784, i32 -2144803731, i32 -2144803700, i32 -2144803669, i32 -2144803648, i32 -2144803626, i32 -2144803577, i32 -2144803556, i32 -2144800725, i32 -2144800636, i32 -2144800515, i32 -2144800416, i32 -2144800310, i32 -2144800208, i32 -2144800175, i32 -2144800102, i32 -2144800034, i32 -2144803182, i32 -2144803129, i32 -2144803098, i32 -2144803067, i32 -2144803046, i32 -2144803024, i32 -2144802975, i32 -2144802954, i32 -2144799979, i32 -2144799890, i32 -2144799769, i32 -2144799670, i32 -2144799564, i32 -2144799462, i32 -2144799429, i32 -2144799346, i32 -2144799257, i32 -2144799136, i32 -2144799036, i32 -2144799010, i32 -2144798907, i32 -2144798881, i32 -2144802696, i32 -2144802629, i32 -2144802604, i32 -2144802540, i32 -2144802424, i32 -2144802399, i32 -2144802374}
!2458 = !DILocation(line: 2729, column: 7, scope: !2348)
!2459 = !DILocation(line: 2686, column: 7, scope: !2348)
!2460 = !DILocation(line: 2731, column: 9, scope: !2377)
!2461 = !DILocation(line: 2731, column: 7, scope: !2348)
!2462 = !DILocation(line: 2732, column: 5, scope: !2376)
!2463 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2464)
!2464 = distinct !DILocation(line: 2733, column: 5, scope: !2374)
!2465 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2464)
!2466 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2464)
!2467 = !DILocation(line: 2733, column: 5, scope: !2374)
!2468 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2469)
!2469 = distinct !DILocation(line: 2733, column: 5, scope: !2374)
!2470 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2469)
!2471 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2469)
!2472 = !DILocation(line: 2733, column: 5, scope: !2375)
!2473 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !2474)
!2474 = distinct !DILocation(line: 2733, column: 5, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2374, file: !3, line: 2733, column: 5)
!2476 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !2474)
!2477 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !2474)
!2478 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !2474)
!2479 = !DILocation(line: 2733, column: 5, scope: !2475)
!2480 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2481)
!2481 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2482)
!2482 = distinct !DILocation(line: 2733, column: 5, scope: !2371)
!2483 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2481)
!2484 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2481)
!2485 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2482)
!2486 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2482)
!2487 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2482)
!2488 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2482)
!2489 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2482)
!2490 = !DILocation(line: 2733, column: 5, scope: !2371)
!2491 = !{i32 -2144796970, i32 -2144796957, i32 -2144796932, i32 -2144796908, i32 -2144796883, i32 -2144796808, i32 -2144796783, i32 -2144796639, i32 -2144794417, i32 -2144794328, i32 -2144794207, i32 -2144794112, i32 -2144794011, i32 -2144793984, i32 -2144793901, i32 -2144793812, i32 -2144793691, i32 -2144793591, i32 -2144793485, i32 -2144793377, i32 -2144796351, i32 -2144796298, i32 -2144796267, i32 -2144796236, i32 -2144796215, i32 -2144796193, i32 -2144796144, i32 -2144796123, i32 -2144793294, i32 -2144793205, i32 -2144793084, i32 -2144792985, i32 -2144792879, i32 -2144792777, i32 -2144792744, i32 -2144792671, i32 -2144792603, i32 -2144795749, i32 -2144795696, i32 -2144795665, i32 -2144795634, i32 -2144795613, i32 -2144795591, i32 -2144795542, i32 -2144795521, i32 -2144792548, i32 -2144792459, i32 -2144792338, i32 -2144792239, i32 -2144792133, i32 -2144792031, i32 -2144791998, i32 -2144791915, i32 -2144791826, i32 -2144791705, i32 -2144791605, i32 -2144791579, i32 -2144791476, i32 -2144791450, i32 -2144795263, i32 -2144795196, i32 -2144795171, i32 -2144795107, i32 -2144794991, i32 -2144794966, i32 -2144794941}
!2492 = !DILocation(line: 2736, column: 9, scope: !2348)
!2493 = !DILocation(line: 2736, column: 16, scope: !2348)
!2494 = !{!1648, !1409, i64 104}
!2495 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2496)
!2496 = distinct !DILocation(line: 2739, column: 3, scope: !2382)
!2497 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2496)
!2498 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2496)
!2499 = !DILocation(line: 2739, column: 3, scope: !2382)
!2500 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2501)
!2501 = distinct !DILocation(line: 2739, column: 3, scope: !2382)
!2502 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2501)
!2503 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2501)
!2504 = !DILocation(line: 2739, column: 3, scope: !2383)
!2505 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !2506)
!2506 = distinct !DILocation(line: 2739, column: 3, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 2739, column: 3)
!2508 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !2506)
!2509 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !2506)
!2510 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !2506)
!2511 = !DILocation(line: 2739, column: 3, scope: !2507)
!2512 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2513)
!2513 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2514)
!2514 = distinct !DILocation(line: 2739, column: 3, scope: !2379)
!2515 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2513)
!2516 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2513)
!2517 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2514)
!2518 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2514)
!2519 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2514)
!2520 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2514)
!2521 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2514)
!2522 = !DILocation(line: 2739, column: 3, scope: !2379)
!2523 = !{i32 -2144789569, i32 -2144789556, i32 -2144789531, i32 -2144789507, i32 -2144789482, i32 -2144789407, i32 -2144789382, i32 -2144789238, i32 -2144787022, i32 -2144786933, i32 -2144786812, i32 -2144786717, i32 -2144786616, i32 -2144786589, i32 -2144786506, i32 -2144786417, i32 -2144786296, i32 -2144786196, i32 -2144786090, i32 -2144785982, i32 -2144788950, i32 -2144788897, i32 -2144788866, i32 -2144788835, i32 -2144788814, i32 -2144788792, i32 -2144788743, i32 -2144788722, i32 -2144785899, i32 -2144785810, i32 -2144785689, i32 -2144785590, i32 -2144785484, i32 -2144785382, i32 -2144785349, i32 -2144785276, i32 -2144785208, i32 -2144788348, i32 -2144788295, i32 -2144788264, i32 -2144788233, i32 -2144788212, i32 -2144788190, i32 -2144788141, i32 -2144788120, i32 -2144785153, i32 -2144785064, i32 -2144784943, i32 -2144784844, i32 -2144784738, i32 -2144784636, i32 -2144784603, i32 -2144784520, i32 -2144784431, i32 -2144784310, i32 -2144784210, i32 -2144784184, i32 -2144784081, i32 -2144784055, i32 -2144787862, i32 -2144787795, i32 -2144787770, i32 -2144787706, i32 -2144787590, i32 -2144787565, i32 -2144787540}
!2524 = !DILocation(line: 0, scope: !2368)
!2525 = !DILocation(line: 2741, column: 1, scope: !2348)
!2526 = !DILocation(line: 189, column: 30, scope: !1069)
!2527 = !DILocation(line: 191, column: 2, scope: !1069)
!2528 = !DILocation(line: 191, column: 6, scope: !1069)
!2529 = !DILocation(line: 192, column: 2, scope: !1069)
!2530 = !DILocation(line: 193, column: 24, scope: !1069)
!2531 = !DILocation(line: 194, column: 23, scope: !1069)
!2532 = !DILocation(line: 195, column: 2, scope: !1069)
!2533 = !DILocation(line: 196, column: 2, scope: !1069)
!2534 = !DILocation(line: 197, column: 51, scope: !1069)
!2535 = !DILocation(line: 197, column: 74, scope: !1069)
!2536 = !DILocation(line: 197, column: 32, scope: !1069)
!2537 = !DILocation(line: 197, column: 17, scope: !1069)
!2538 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2539)
!2539 = distinct !DILocation(line: 200, column: 2, scope: !1090)
!2540 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2539)
!2541 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2539)
!2542 = !DILocation(line: 200, column: 2, scope: !1090)
!2543 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2544)
!2544 = distinct !DILocation(line: 200, column: 2, scope: !1090)
!2545 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2544)
!2546 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2544)
!2547 = !DILocation(line: 200, column: 2, scope: !1091)
!2548 = !DILocation(line: 200, column: 2, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !1090, file: !3, line: 200, column: 2)
!2550 = !DILocation(line: 192, column: 6, scope: !1069)
!2551 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2552)
!2552 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2553)
!2553 = distinct !DILocation(line: 200, column: 2, scope: !1087)
!2554 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2552)
!2555 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2552)
!2556 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2553)
!2557 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2553)
!2558 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2553)
!2559 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2553)
!2560 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2553)
!2561 = !DILocation(line: 200, column: 2, scope: !1087)
!2562 = !{i32 -2145805386, i32 -2145805373, i32 -2145805348, i32 -2145805324, i32 -2145805299, i32 -2145805224, i32 -2145805199, i32 -2145805055, i32 -2145801952, i32 -2145801863, i32 -2145801742, i32 -2145801647, i32 -2145801546, i32 -2145801519, i32 -2145801436, i32 -2145801347, i32 -2145801226, i32 -2145801126, i32 -2145801020, i32 -2145800912, i32 -2145804772, i32 -2145804719, i32 -2145804688, i32 -2145804657, i32 -2145804636, i32 -2145804614, i32 -2145804565, i32 -2145804544, i32 -2145800829, i32 -2145800740, i32 -2145800619, i32 -2145800520, i32 -2145800414, i32 -2145800312, i32 -2145800279, i32 -2145800206, i32 -2145800138, i32 -2145804242, i32 -2145804183, i32 -2145804130, i32 -2145804099, i32 -2145804068, i32 -2145804047, i32 -2145804025, i32 -2145803976, i32 -2145803955, i32 -2145800086, i32 -2145799997, i32 -2145799876, i32 -2145799777, i32 -2145799671, i32 -2145799569, i32 -2145799536, i32 -2145799453, i32 -2145799364, i32 -2145799243, i32 -2145799143, i32 -2145799117, i32 -2145799014, i32 -2145798988, i32 -2145803697, i32 -2145803630, i32 -2145803605, i32 -2145803541, i32 -2145803459, i32 -2145803436, i32 -2145803411, i32 -2145803386}
!2563 = !DILocation(line: 200, column: 2, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 200, column: 2)
!2565 = distinct !DILexicalBlock(scope: !1087, file: !3, line: 200, column: 2)
!2566 = !{i32 -2145802439, i32 -2145802422}
!2567 = !DILocation(line: 201, column: 6, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 201, column: 6)
!2569 = !DILocation(line: 201, column: 13, scope: !2568)
!2570 = !DILocation(line: 201, column: 6, scope: !1069)
!2571 = !DILocation(line: 202, column: 7, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2568, file: !3, line: 201, column: 18)
!2573 = !DILocation(line: 295, column: 2, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 295, column: 2)
!2575 = !DILocation(line: 209, column: 19, scope: !1069)
!2576 = !DILocalVariable(name: "a", arg: 1, scope: !2577, file: !388, line: 173, type: !386)
!2577 = distinct !DISubprogram(name: "uk_calloc", scope: !388, file: !388, line: 173, type: !399, isLocal: true, isDefinition: true, scopeLine: 175, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2578)
!2578 = !{!2576, !2579, !2580}
!2579 = !DILocalVariable(name: "nmemb", arg: 2, scope: !2577, file: !388, line: 174, type: !395)
!2580 = !DILocalVariable(name: "size", arg: 3, scope: !2577, file: !388, line: 174, type: !395)
!2581 = !DILocation(line: 173, column: 48, scope: !2577, inlinedAt: !2582)
!2582 = distinct !DILocation(line: 209, column: 9, scope: !1069)
!2583 = !DILocation(line: 174, column: 17, scope: !2577, inlinedAt: !2582)
!2584 = !DILocation(line: 174, column: 31, scope: !2577, inlinedAt: !2582)
!2585 = !DILocation(line: 176, column: 6, scope: !2586, inlinedAt: !2582)
!2586 = distinct !DILexicalBlock(scope: !2577, file: !388, line: 176, column: 6)
!2587 = !DILocation(line: 176, column: 6, scope: !2577, inlinedAt: !2582)
!2588 = !DILocation(line: 177, column: 3, scope: !2589, inlinedAt: !2582)
!2589 = distinct !DILexicalBlock(scope: !2586, file: !388, line: 176, column: 20)
!2590 = !DILocation(line: 177, column: 9, scope: !2589, inlinedAt: !2582)
!2591 = !DILocation(line: 181, column: 1, scope: !2577, inlinedAt: !2582)
!2592 = !DILocation(line: 210, column: 6, scope: !1069)
!2593 = !DILocalVariable(name: "a", arg: 1, scope: !2594, file: !388, line: 166, type: !386)
!2594 = distinct !DISubprogram(name: "uk_do_calloc", scope: !388, file: !388, line: 166, type: !399, isLocal: true, isDefinition: true, scopeLine: 168, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2595)
!2595 = !{!2593, !2596, !2597}
!2596 = !DILocalVariable(name: "nmemb", arg: 2, scope: !2594, file: !388, line: 167, type: !395)
!2597 = !DILocalVariable(name: "size", arg: 3, scope: !2594, file: !388, line: 167, type: !395)
!2598 = !DILocation(line: 166, column: 51, scope: !2594, inlinedAt: !2599)
!2599 = distinct !DILocation(line: 180, column: 9, scope: !2577, inlinedAt: !2582)
!2600 = !DILocation(line: 167, column: 13, scope: !2594, inlinedAt: !2599)
!2601 = !DILocation(line: 167, column: 27, scope: !2594, inlinedAt: !2599)
!2602 = !DILocation(line: 170, column: 12, scope: !2594, inlinedAt: !2599)
!2603 = !DILocation(line: 170, column: 9, scope: !2594, inlinedAt: !2599)
!2604 = !DILocation(line: 170, column: 2, scope: !2594, inlinedAt: !2599)
!2605 = !DILocation(line: 210, column: 7, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 210, column: 6)
!2607 = !DILocation(line: 211, column: 7, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2606, file: !3, line: 210, column: 13)
!2609 = !DILocation(line: 214, column: 3, scope: !2608)
!2610 = !DILocation(line: 216, column: 23, scope: !1069)
!2611 = !DILocation(line: 173, column: 48, scope: !2577, inlinedAt: !2612)
!2612 = distinct !DILocation(line: 216, column: 13, scope: !1069)
!2613 = !DILocation(line: 174, column: 17, scope: !2577, inlinedAt: !2612)
!2614 = !DILocation(line: 174, column: 31, scope: !2577, inlinedAt: !2612)
!2615 = !DILocation(line: 176, column: 6, scope: !2586, inlinedAt: !2612)
!2616 = !DILocation(line: 176, column: 6, scope: !2577, inlinedAt: !2612)
!2617 = !DILocation(line: 177, column: 3, scope: !2589, inlinedAt: !2612)
!2618 = !DILocation(line: 177, column: 9, scope: !2589, inlinedAt: !2612)
!2619 = !DILocation(line: 181, column: 1, scope: !2577, inlinedAt: !2612)
!2620 = !DILocation(line: 217, column: 6, scope: !1069)
!2621 = !DILocation(line: 166, column: 51, scope: !2594, inlinedAt: !2622)
!2622 = distinct !DILocation(line: 180, column: 9, scope: !2577, inlinedAt: !2612)
!2623 = !DILocation(line: 167, column: 13, scope: !2594, inlinedAt: !2622)
!2624 = !DILocation(line: 167, column: 27, scope: !2594, inlinedAt: !2622)
!2625 = !DILocation(line: 170, column: 12, scope: !2594, inlinedAt: !2622)
!2626 = !DILocation(line: 170, column: 9, scope: !2594, inlinedAt: !2622)
!2627 = !DILocation(line: 170, column: 2, scope: !2594, inlinedAt: !2622)
!2628 = !DILocation(line: 217, column: 7, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 217, column: 6)
!2630 = !DILocation(line: 218, column: 7, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 217, column: 17)
!2632 = !DILocation(line: 221, column: 3, scope: !2631)
!2633 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2634)
!2634 = distinct !DILocation(line: 224, column: 2, scope: !1097)
!2635 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2634)
!2636 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2634)
!2637 = !DILocation(line: 224, column: 2, scope: !1097)
!2638 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2639)
!2639 = distinct !DILocation(line: 224, column: 2, scope: !1097)
!2640 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2639)
!2641 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2639)
!2642 = !DILocation(line: 224, column: 2, scope: !1098)
!2643 = !DILocation(line: 224, column: 2, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !1097, file: !3, line: 224, column: 2)
!2645 = !{!1404, !1404, i64 0}
!2646 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2647)
!2647 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2648)
!2648 = distinct !DILocation(line: 224, column: 2, scope: !1094)
!2649 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2647)
!2650 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2647)
!2651 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2648)
!2652 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2648)
!2653 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2648)
!2654 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2648)
!2655 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2648)
!2656 = !DILocation(line: 224, column: 2, scope: !1094)
!2657 = !{i32 -2145796609, i32 -2145796596, i32 -2145796571, i32 -2145796547, i32 -2145796522, i32 -2145796447, i32 -2145796422, i32 -2145796278, i32 -2145793042, i32 -2145792953, i32 -2145792832, i32 -2145792737, i32 -2145792636, i32 -2145792609, i32 -2145792526, i32 -2145792437, i32 -2145792316, i32 -2145792216, i32 -2145792110, i32 -2145792002, i32 -2145795948, i32 -2145795895, i32 -2145795864, i32 -2145795833, i32 -2145795812, i32 -2145795790, i32 -2145795741, i32 -2145795720, i32 -2145795617, i32 -2145791919, i32 -2145791830, i32 -2145791709, i32 -2145791610, i32 -2145791504, i32 -2145791402, i32 -2145791369, i32 -2145791296, i32 -2145791228, i32 -2145795427, i32 -2145795368, i32 -2145795315, i32 -2145795284, i32 -2145795253, i32 -2145795232, i32 -2145795210, i32 -2145795161, i32 -2145795140, i32 -2145791180, i32 -2145791091, i32 -2145790970, i32 -2145790871, i32 -2145790765, i32 -2145790663, i32 -2145790630, i32 -2145790547, i32 -2145790458, i32 -2145790337, i32 -2145790237, i32 -2145790211, i32 -2145790108, i32 -2145790082, i32 -2145794882, i32 -2145794815, i32 -2145794790, i32 -2145794726, i32 -2145794644, i32 -2145794621, i32 -2145794596, i32 -2145794571}
!2658 = !DILocation(line: 224, column: 2, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2660, file: !3, line: 224, column: 2)
!2660 = distinct !DILexicalBlock(scope: !1094, file: !3, line: 224, column: 2)
!2661 = !{i32 -2145793533, i32 -2145793516}
!2662 = !DILocation(line: 226, column: 2, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 226, column: 2)
!2664 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 226, column: 2)
!2665 = !DILocation(line: 226, column: 2, scope: !2664)
!2666 = !DILocation(line: 226, column: 2, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 226, column: 2)
!2668 = !DILocation(line: 228, column: 8, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 228, column: 6)
!2670 = !DILocation(line: 228, column: 7, scope: !2669)
!2671 = !DILocation(line: 228, column: 6, scope: !1069)
!2672 = !DILocation(line: 229, column: 7, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2669, file: !3, line: 228, column: 24)
!2674 = !DILocation(line: 232, column: 3, scope: !2673)
!2675 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2676)
!2676 = distinct !DILocation(line: 235, column: 2, scope: !1105)
!2677 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2676)
!2678 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2676)
!2679 = !DILocation(line: 235, column: 2, scope: !1105)
!2680 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2681)
!2681 = distinct !DILocation(line: 235, column: 2, scope: !1105)
!2682 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2681)
!2683 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2681)
!2684 = !DILocation(line: 235, column: 2, scope: !1106)
!2685 = !DILocation(line: 235, column: 2, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !1105, file: !3, line: 235, column: 2)
!2687 = !DILocalVariable(name: "m", arg: 1, scope: !2688, file: !817, line: 149, type: !2691)
!2688 = distinct !DISubprogram(name: "uk_mutex_unlock", scope: !817, file: !817, line: 149, type: !2689, isLocal: true, isDefinition: true, scopeLine: 150, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2692)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{null, !2691}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!2692 = !{!2687, !2693, !2694}
!2693 = !DILocalVariable(name: "irqf", scope: !2688, file: !817, line: 151, type: !134)
!2694 = !DILocalVariable(name: "wq", scope: !2688, file: !817, line: 153, type: !2695)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !278)
!2697 = !DILocation(line: 149, column: 53, scope: !2688, inlinedAt: !2698)
!2698 = distinct !DILocation(line: 235, column: 2, scope: !2686)
!2699 = !DILocation(line: 153, column: 28, scope: !2688, inlinedAt: !2698)
!2700 = !DILocation(line: 157, column: 9, scope: !2688, inlinedAt: !2698)
!2701 = !DILocation(line: 151, column: 16, scope: !2688, inlinedAt: !2698)
!2702 = !DILocation(line: 158, column: 2, scope: !2703, inlinedAt: !2698)
!2703 = distinct !DILexicalBlock(scope: !2704, file: !817, line: 158, column: 2)
!2704 = distinct !DILexicalBlock(scope: !2688, file: !817, line: 158, column: 2)
!2705 = !{!1410, !1409, i64 0}
!2706 = !DILocation(line: 158, column: 2, scope: !2704, inlinedAt: !2698)
!2707 = !DILocation(line: 158, column: 2, scope: !2708, inlinedAt: !2698)
!2708 = distinct !DILexicalBlock(scope: !2703, file: !817, line: 158, column: 2)
!2709 = !DILocation(line: 159, column: 6, scope: !2710, inlinedAt: !2698)
!2710 = distinct !DILexicalBlock(scope: !2688, file: !817, line: 159, column: 6)
!2711 = !DILocation(line: 159, column: 22, scope: !2710, inlinedAt: !2698)
!2712 = !DILocation(line: 159, column: 6, scope: !2688, inlinedAt: !2698)
!2713 = !DILocation(line: 160, column: 6, scope: !2714, inlinedAt: !2698)
!2714 = distinct !DILexicalBlock(scope: !2710, file: !817, line: 159, column: 28)
!2715 = !DILocation(line: 160, column: 12, scope: !2714, inlinedAt: !2698)
!2716 = !{!1410, !1408, i64 8}
!2717 = !DILocalVariable(name: "wq", arg: 1, scope: !2718, file: !2719, line: 99, type: !2722)
!2718 = distinct !DISubprogram(name: "uk_waitq_wake_up", scope: !2719, file: !2719, line: 99, type: !2720, isLocal: true, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2723)
!2719 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/wait.h", directory: "/root/.unikraft/apps/redis/build")
!2720 = !DISubroutineType(types: !2721)
!2721 = !{null, !2722}
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!2723 = !{!2717, !2724, !2725, !2726}
!2724 = !DILocalVariable(name: "flags", scope: !2718, file: !2719, line: 101, type: !134)
!2725 = !DILocalVariable(name: "curr", scope: !2718, file: !2719, line: 102, type: !282)
!2726 = !DILocalVariable(name: "tmp", scope: !2718, file: !2719, line: 102, type: !282)
!2727 = !DILocation(line: 99, column: 40, scope: !2718, inlinedAt: !2728)
!2728 = distinct !DILocation(line: 161, column: 3, scope: !2714, inlinedAt: !2698)
!2729 = !DILocation(line: 104, column: 10, scope: !2718, inlinedAt: !2728)
!2730 = !DILocation(line: 101, column: 16, scope: !2718, inlinedAt: !2728)
!2731 = !DILocation(line: 105, column: 2, scope: !2732, inlinedAt: !2728)
!2732 = distinct !DILexicalBlock(scope: !2718, file: !2719, line: 105, column: 2)
!2733 = !{!1411, !1408, i64 0}
!2734 = !DILocation(line: 102, column: 25, scope: !2718, inlinedAt: !2728)
!2735 = !DILocation(line: 105, column: 2, scope: !2736, inlinedAt: !2728)
!2736 = distinct !DILexicalBlock(scope: !2732, file: !2719, line: 105, column: 2)
!2737 = !{!2738, !1408, i64 16}
!2738 = !{!"uk_waitq_entry", !1409, i64 0, !1408, i64 8, !2739, i64 16}
!2739 = !{!"", !1408, i64 0}
!2740 = !DILocation(line: 102, column: 32, scope: !2718, inlinedAt: !2728)
!2741 = !DILocation(line: 106, column: 24, scope: !2736, inlinedAt: !2728)
!2742 = !{!2738, !1408, i64 8}
!2743 = !DILocation(line: 106, column: 3, scope: !2736, inlinedAt: !2728)
!2744 = distinct !{!2744, !2745, !2746}
!2745 = !DILocation(line: 105, column: 2, scope: !2732)
!2746 = !DILocation(line: 106, column: 30, scope: !2732)
!2747 = !DILocation(line: 107, column: 2, scope: !2718, inlinedAt: !2728)
!2748 = !DILocation(line: 108, column: 1, scope: !2718, inlinedAt: !2728)
!2749 = !DILocation(line: 162, column: 2, scope: !2714, inlinedAt: !2698)
!2750 = !DILocation(line: 163, column: 2, scope: !2688, inlinedAt: !2698)
!2751 = !DILocation(line: 164, column: 1, scope: !2688, inlinedAt: !2698)
!2752 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2753)
!2753 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2754)
!2754 = distinct !DILocation(line: 235, column: 2, scope: !1102)
!2755 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2753)
!2756 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2753)
!2757 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2754)
!2758 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2754)
!2759 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2754)
!2760 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2754)
!2761 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2754)
!2762 = !DILocation(line: 235, column: 2, scope: !1102)
!2763 = !{i32 -2145787773, i32 -2145787760, i32 -2145787735, i32 -2145787711, i32 -2145787686, i32 -2145787611, i32 -2145787586, i32 -2145787442, i32 -2145785211, i32 -2145785122, i32 -2145785001, i32 -2145784906, i32 -2145784805, i32 -2145784778, i32 -2145784695, i32 -2145784606, i32 -2145784485, i32 -2145784385, i32 -2145784279, i32 -2145784171, i32 -2145787154, i32 -2145787101, i32 -2145787070, i32 -2145787039, i32 -2145787018, i32 -2145786996, i32 -2145786947, i32 -2145786926, i32 -2145784088, i32 -2145783999, i32 -2145783878, i32 -2145783779, i32 -2145783673, i32 -2145783571, i32 -2145783538, i32 -2145783465, i32 -2145783397, i32 -2145786552, i32 -2145786499, i32 -2145786468, i32 -2145786437, i32 -2145786416, i32 -2145786394, i32 -2145786345, i32 -2145786324, i32 -2145783346, i32 -2145783257, i32 -2145783136, i32 -2145783037, i32 -2145782931, i32 -2145782829, i32 -2145782796, i32 -2145782713, i32 -2145782624, i32 -2145782503, i32 -2145782403, i32 -2145782377, i32 -2145782274, i32 -2145782248, i32 -2145786066, i32 -2145785999, i32 -2145785974, i32 -2145785910, i32 -2145785794, i32 -2145785769, i32 -2145785744}
!2764 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2765)
!2765 = distinct !DILocation(line: 241, column: 2, scope: !1111)
!2766 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2765)
!2767 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2765)
!2768 = !DILocation(line: 241, column: 2, scope: !1111)
!2769 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2770)
!2770 = distinct !DILocation(line: 241, column: 2, scope: !1111)
!2771 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2770)
!2772 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2770)
!2773 = !DILocation(line: 241, column: 2, scope: !1112)
!2774 = !DILocation(line: 241, column: 2, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !1111, file: !3, line: 241, column: 2)
!2776 = !DILocation(line: 195, column: 17, scope: !1069)
!2777 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2778)
!2778 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2779)
!2779 = distinct !DILocation(line: 241, column: 2, scope: !1108)
!2780 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2778)
!2781 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2778)
!2782 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2779)
!2783 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2779)
!2784 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2779)
!2785 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2779)
!2786 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2779)
!2787 = !DILocation(line: 241, column: 2, scope: !1108)
!2788 = !{i32 -2145779290, i32 -2145779277, i32 -2145779252, i32 -2145779228, i32 -2145779203, i32 -2145779128, i32 -2145779103, i32 -2145778959, i32 -2145775422, i32 -2145775333, i32 -2145775212, i32 -2145775117, i32 -2145775016, i32 -2145774989, i32 -2145774906, i32 -2145774817, i32 -2145774696, i32 -2145774596, i32 -2145774490, i32 -2145774382, i32 -2145778629, i32 -2145778576, i32 -2145778545, i32 -2145778514, i32 -2145778493, i32 -2145778471, i32 -2145778422, i32 -2145778401, i32 -2145778298, i32 -2145774299, i32 -2145774210, i32 -2145774089, i32 -2145773990, i32 -2145773884, i32 -2145773782, i32 -2145773749, i32 -2145773676, i32 -2145773608, i32 -2145778108, i32 -2145778049, i32 -2145777996, i32 -2145777965, i32 -2145777934, i32 -2145777913, i32 -2145777891, i32 -2145777842, i32 -2145777821, i32 -2145773560, i32 -2145773471, i32 -2145773350, i32 -2145773251, i32 -2145773145, i32 -2145773043, i32 -2145773010, i32 -2145772927, i32 -2145772838, i32 -2145772717, i32 -2145772617, i32 -2145772591, i32 -2145772488, i32 -2145772462, i32 -2145777563, i32 -2145777496, i32 -2145777471, i32 -2145777407, i32 -2145777325, i32 -2145777302, i32 -2145777277, i32 -2145777252}
!2789 = !DILocation(line: 241, column: 2, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 241, column: 2)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 241, column: 2)
!2792 = distinct !DILexicalBlock(scope: !1108, file: !3, line: 241, column: 2)
!2793 = !{i32 -2145776007, i32 -2145775991}
!2794 = !DILocation(line: 245, column: 7, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 245, column: 6)
!2796 = !DILocation(line: 245, column: 6, scope: !1069)
!2797 = !DILocation(line: 246, column: 7, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 245, column: 17)
!2799 = !DILocation(line: 249, column: 3, scope: !2798)
!2800 = !DILocation(line: 253, column: 17, scope: !1069)
!2801 = !DILocation(line: 253, column: 12, scope: !1069)
!2802 = !DILocation(line: 253, column: 15, scope: !1069)
!2803 = !{!2804, !1409, i64 0}
!2804 = !{!"vfscore_file", !1409, i64 0, !1409, i64 4, !1409, i64 8, !1404, i64 16, !1408, i64 24, !1409, i64 32, !1408, i64 40, !1410, i64 48}
!2805 = !DILocation(line: 254, column: 12, scope: !1069)
!2806 = !DILocation(line: 254, column: 20, scope: !1069)
!2807 = !{!2804, !1409, i64 4}
!2808 = !DILocation(line: 255, column: 12, scope: !1069)
!2809 = !DILocation(line: 255, column: 20, scope: !1069)
!2810 = !{!2804, !1409, i64 8}
!2811 = !DILocation(line: 256, column: 12, scope: !1069)
!2812 = !DILocation(line: 256, column: 19, scope: !1069)
!2813 = !{!2804, !1408, i64 24}
!2814 = !DILocation(line: 257, column: 23, scope: !1069)
!2815 = !DILocation(line: 257, column: 12, scope: !1069)
!2816 = !DILocation(line: 257, column: 21, scope: !1069)
!2817 = !{!2804, !1408, i64 40}
!2818 = !DILocation(line: 258, column: 12, scope: !1069)
!2819 = !DILocation(line: 258, column: 24, scope: !1069)
!2820 = !{!2804, !1409, i64 32}
!2821 = !DILocation(line: 260, column: 3, scope: !1069)
!2822 = !DILocation(line: 260, column: 19, scope: !1069)
!2823 = !DILocation(line: 260, column: 26, scope: !1069)
!2824 = !DILocation(line: 261, column: 3, scope: !1069)
!2825 = !DILocation(line: 261, column: 19, scope: !1069)
!2826 = !DILocation(line: 261, column: 26, scope: !1069)
!2827 = !{!1403, !1409, i64 44}
!2828 = !DILocation(line: 263, column: 8, scope: !1069)
!2829 = !DILocation(line: 263, column: 21, scope: !1069)
!2830 = !{!1422, !1408, i64 0}
!2831 = !DILocation(line: 264, column: 8, scope: !1069)
!2832 = !DILocation(line: 264, column: 16, scope: !1069)
!2833 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2834)
!2834 = distinct !DILocation(line: 270, column: 2, scope: !1119)
!2835 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2834)
!2836 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2834)
!2837 = !DILocation(line: 270, column: 2, scope: !1119)
!2838 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2839)
!2839 = distinct !DILocation(line: 270, column: 2, scope: !1119)
!2840 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2839)
!2841 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2839)
!2842 = !DILocation(line: 270, column: 2, scope: !1120)
!2843 = !DILocation(line: 270, column: 2, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !1119, file: !3, line: 270, column: 2)
!2845 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2846)
!2846 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2847)
!2847 = distinct !DILocation(line: 270, column: 2, scope: !1116)
!2848 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2846)
!2849 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2846)
!2850 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2847)
!2851 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2847)
!2852 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2847)
!2853 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2847)
!2854 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2847)
!2855 = !DILocation(line: 270, column: 2, scope: !1116)
!2856 = !{i32 -2145770238, i32 -2145770225, i32 -2145770200, i32 -2145770176, i32 -2145770151, i32 -2145770076, i32 -2145770051, i32 -2145769907, i32 -2145766716, i32 -2145766627, i32 -2145766506, i32 -2145766411, i32 -2145766310, i32 -2145766283, i32 -2145766200, i32 -2145766111, i32 -2145765990, i32 -2145765890, i32 -2145765784, i32 -2145765676, i32 -2145769615, i32 -2145769562, i32 -2145769531, i32 -2145769500, i32 -2145769479, i32 -2145769457, i32 -2145769408, i32 -2145769387, i32 -2145765593, i32 -2145765504, i32 -2145765383, i32 -2145765284, i32 -2145765178, i32 -2145765076, i32 -2145765043, i32 -2145764970, i32 -2145764902, i32 -2145769080, i32 -2145769021, i32 -2145768968, i32 -2145768937, i32 -2145768906, i32 -2145768885, i32 -2145768863, i32 -2145768814, i32 -2145768793, i32 -2145764848, i32 -2145764759, i32 -2145764638, i32 -2145764539, i32 -2145764433, i32 -2145764331, i32 -2145764298, i32 -2145764215, i32 -2145764126, i32 -2145764005, i32 -2145763905, i32 -2145763879, i32 -2145763776, i32 -2145763750, i32 -2145768535, i32 -2145768468, i32 -2145768443, i32 -2145768379, i32 -2145768297, i32 -2145768274, i32 -2145768249, i32 -2145768224}
!2857 = !DILocation(line: 270, column: 2, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 270, column: 2)
!2859 = distinct !DILexicalBlock(scope: !1116, file: !3, line: 270, column: 2)
!2860 = !{i32 -2145767209, i32 -2145767192}
!2861 = !DILocation(line: 272, column: 6, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 272, column: 6)
!2863 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2864)
!2864 = distinct !DILocation(line: 0, scope: !1126)
!2865 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2864)
!2866 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2864)
!2867 = !DILocation(line: 0, scope: !1126)
!2868 = !DILocation(line: 272, column: 6, scope: !1069)
!2869 = !DILocation(line: 279, column: 2, scope: !1126)
!2870 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2871)
!2871 = distinct !DILocation(line: 279, column: 2, scope: !1126)
!2872 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2871)
!2873 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2871)
!2874 = !DILocation(line: 279, column: 2, scope: !1127)
!2875 = !DILocation(line: 279, column: 2, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !1126, file: !3, line: 279, column: 2)
!2877 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2878)
!2878 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2879)
!2879 = distinct !DILocation(line: 279, column: 2, scope: !1123)
!2880 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2878)
!2881 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2878)
!2882 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2879)
!2883 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2879)
!2884 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2879)
!2885 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2879)
!2886 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2879)
!2887 = !DILocation(line: 279, column: 2, scope: !1123)
!2888 = !{i32 -2145761859, i32 -2145761846, i32 -2145761821, i32 -2145761797, i32 -2145761772, i32 -2145761697, i32 -2145761672, i32 -2145761528, i32 -2145759326, i32 -2145759237, i32 -2145759116, i32 -2145759021, i32 -2145758920, i32 -2145758893, i32 -2145758810, i32 -2145758721, i32 -2145758600, i32 -2145758500, i32 -2145758394, i32 -2145758286, i32 -2145761240, i32 -2145761187, i32 -2145761156, i32 -2145761125, i32 -2145761104, i32 -2145761082, i32 -2145761033, i32 -2145761012, i32 -2145758203, i32 -2145758114, i32 -2145757993, i32 -2145757894, i32 -2145757788, i32 -2145757686, i32 -2145757653, i32 -2145757580, i32 -2145757512, i32 -2145760638, i32 -2145760585, i32 -2145760554, i32 -2145760523, i32 -2145760502, i32 -2145760480, i32 -2145760431, i32 -2145760410, i32 -2145757471, i32 -2145757382, i32 -2145757261, i32 -2145757162, i32 -2145757056, i32 -2145756954, i32 -2145756921, i32 -2145756838, i32 -2145756749, i32 -2145756628, i32 -2145756528, i32 -2145756502, i32 -2145756399, i32 -2145756373, i32 -2145760152, i32 -2145760085, i32 -2145760060, i32 -2145759996, i32 -2145759880, i32 -2145759855, i32 -2145759830}
!2889 = !DILocation(line: 282, column: 9, scope: !1069)
!2890 = !DILocation(line: 282, column: 2, scope: !1069)
!2891 = !DILocation(line: 285, column: 2, scope: !1132)
!2892 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2893)
!2893 = distinct !DILocation(line: 285, column: 2, scope: !1132)
!2894 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2893)
!2895 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2893)
!2896 = !DILocation(line: 285, column: 2, scope: !1133)
!2897 = !DILocation(line: 285, column: 2, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !1132, file: !3, line: 285, column: 2)
!2899 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2900)
!2900 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2901)
!2901 = distinct !DILocation(line: 285, column: 2, scope: !1129)
!2902 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2900)
!2903 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2900)
!2904 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2901)
!2905 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2901)
!2906 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2901)
!2907 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2901)
!2908 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2901)
!2909 = !DILocation(line: 285, column: 2, scope: !1129)
!2910 = !{i32 -2145754524, i32 -2145754511, i32 -2145754486, i32 -2145754462, i32 -2145754437, i32 -2145754362, i32 -2145754337, i32 -2145754193, i32 -2145751998, i32 -2145751909, i32 -2145751788, i32 -2145751693, i32 -2145751592, i32 -2145751565, i32 -2145751482, i32 -2145751393, i32 -2145751272, i32 -2145751172, i32 -2145751066, i32 -2145750958, i32 -2145753905, i32 -2145753852, i32 -2145753821, i32 -2145753790, i32 -2145753769, i32 -2145753747, i32 -2145753698, i32 -2145753677, i32 -2145750875, i32 -2145750786, i32 -2145750665, i32 -2145750566, i32 -2145750460, i32 -2145750358, i32 -2145750325, i32 -2145750252, i32 -2145750184, i32 -2145753303, i32 -2145753250, i32 -2145753219, i32 -2145753188, i32 -2145753167, i32 -2145753145, i32 -2145753096, i32 -2145753075, i32 -2145750143, i32 -2145750054, i32 -2145749933, i32 -2145749834, i32 -2145749728, i32 -2145749626, i32 -2145749593, i32 -2145749510, i32 -2145749421, i32 -2145749300, i32 -2145749200, i32 -2145749174, i32 -2145749071, i32 -2145749045, i32 -2145752817, i32 -2145752750, i32 -2145752725, i32 -2145752661, i32 -2145752545, i32 -2145752520, i32 -2145752495}
!2911 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2912)
!2912 = distinct !DILocation(line: 287, column: 2, scope: !1138)
!2913 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2912)
!2914 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2912)
!2915 = !DILocation(line: 287, column: 2, scope: !1138)
!2916 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2917)
!2917 = distinct !DILocation(line: 287, column: 2, scope: !1138)
!2918 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2917)
!2919 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2917)
!2920 = !DILocation(line: 287, column: 2, scope: !1139)
!2921 = !DILocation(line: 287, column: 2, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 287, column: 2)
!2923 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2924)
!2924 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2925)
!2925 = distinct !DILocation(line: 287, column: 2, scope: !1135)
!2926 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2924)
!2927 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2924)
!2928 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2925)
!2929 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2925)
!2930 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2925)
!2931 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2925)
!2932 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2925)
!2933 = !DILocation(line: 287, column: 2, scope: !1135)
!2934 = !{i32 -2145747154, i32 -2145747141, i32 -2145747116, i32 -2145747092, i32 -2145747067, i32 -2145746992, i32 -2145746967, i32 -2145746823, i32 -2145744621, i32 -2145744532, i32 -2145744411, i32 -2145744316, i32 -2145744215, i32 -2145744188, i32 -2145744105, i32 -2145744016, i32 -2145743895, i32 -2145743795, i32 -2145743689, i32 -2145743581, i32 -2145746535, i32 -2145746482, i32 -2145746451, i32 -2145746420, i32 -2145746399, i32 -2145746377, i32 -2145746328, i32 -2145746307, i32 -2145743498, i32 -2145743409, i32 -2145743288, i32 -2145743189, i32 -2145743083, i32 -2145742981, i32 -2145742948, i32 -2145742875, i32 -2145742807, i32 -2145745933, i32 -2145745880, i32 -2145745849, i32 -2145745818, i32 -2145745797, i32 -2145745775, i32 -2145745726, i32 -2145745705, i32 -2145742766, i32 -2145742677, i32 -2145742556, i32 -2145742457, i32 -2145742351, i32 -2145742249, i32 -2145742216, i32 -2145742133, i32 -2145742044, i32 -2145741923, i32 -2145741823, i32 -2145741797, i32 -2145741694, i32 -2145741668, i32 -2145745447, i32 -2145745380, i32 -2145745355, i32 -2145745291, i32 -2145745175, i32 -2145745150, i32 -2145745125}
!2935 = !DILocation(line: 289, column: 10, scope: !1069)
!2936 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !2937)
!2937 = distinct !DILocation(line: 289, column: 2, scope: !1069)
!2938 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !2937)
!2939 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !2940)
!2940 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !2937)
!2941 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !2940)
!2942 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !2940)
!2943 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !2940)
!2944 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !2940)
!2945 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !2940)
!2946 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !2940)
!2947 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !2940)
!2948 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !2937)
!2949 = !DILocation(line: 289, column: 2, scope: !1069)
!2950 = !DILocation(line: 291, column: 10, scope: !1069)
!2951 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !2952)
!2952 = distinct !DILocation(line: 291, column: 2, scope: !1069)
!2953 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !2952)
!2954 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !2955)
!2955 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !2952)
!2956 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !2955)
!2957 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !2955)
!2958 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !2955)
!2959 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !2955)
!2960 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !2955)
!2961 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !2955)
!2962 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !2955)
!2963 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !2952)
!2964 = !DILocation(line: 291, column: 2, scope: !1069)
!2965 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2966)
!2966 = distinct !DILocation(line: 293, column: 2, scope: !1144)
!2967 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2966)
!2968 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2966)
!2969 = !DILocation(line: 293, column: 2, scope: !1144)
!2970 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2971)
!2971 = distinct !DILocation(line: 293, column: 2, scope: !1144)
!2972 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2971)
!2973 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2971)
!2974 = !DILocation(line: 293, column: 2, scope: !1145)
!2975 = !DILocation(line: 293, column: 2, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !1144, file: !3, line: 293, column: 2)
!2977 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2978)
!2978 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2979)
!2979 = distinct !DILocation(line: 293, column: 2, scope: !1141)
!2980 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2978)
!2981 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2978)
!2982 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2979)
!2983 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2979)
!2984 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2979)
!2985 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2979)
!2986 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2979)
!2987 = !DILocation(line: 293, column: 2, scope: !1141)
!2988 = !{i32 -2145739786, i32 -2145739773, i32 -2145739748, i32 -2145739724, i32 -2145739699, i32 -2145739624, i32 -2145739599, i32 -2145739455, i32 -2145737244, i32 -2145737155, i32 -2145737034, i32 -2145736939, i32 -2145736838, i32 -2145736811, i32 -2145736728, i32 -2145736639, i32 -2145736518, i32 -2145736418, i32 -2145736312, i32 -2145736204, i32 -2145739167, i32 -2145739114, i32 -2145739083, i32 -2145739052, i32 -2145739031, i32 -2145739009, i32 -2145738960, i32 -2145738939, i32 -2145736121, i32 -2145736032, i32 -2145735911, i32 -2145735812, i32 -2145735706, i32 -2145735604, i32 -2145735571, i32 -2145735498, i32 -2145735430, i32 -2145738565, i32 -2145738512, i32 -2145738481, i32 -2145738450, i32 -2145738429, i32 -2145738407, i32 -2145738358, i32 -2145738337, i32 -2145735380, i32 -2145735291, i32 -2145735170, i32 -2145735071, i32 -2145734965, i32 -2145734863, i32 -2145734830, i32 -2145734747, i32 -2145734658, i32 -2145734537, i32 -2145734437, i32 -2145734411, i32 -2145734308, i32 -2145734282, i32 -2145738079, i32 -2145738012, i32 -2145737987, i32 -2145737923, i32 -2145737807, i32 -2145737782, i32 -2145737757}
!2989 = !DILocation(line: 295, column: 2, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2574, file: !3, line: 295, column: 2)
!2991 = !DILocation(line: 295, column: 2, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 295, column: 2)
!2993 = !DILocation(line: 0, scope: !1069)
!2994 = !DILocation(line: 297, column: 1, scope: !1069)
!2995 = !DILocation(line: 88, column: 30, scope: !1620)
!2996 = !DILocation(line: 90, column: 11, scope: !1620)
!2997 = !DILocation(line: 90, column: 3, scope: !1620)
!2998 = !DILocation(line: 90, column: 9, scope: !1620)
!2999 = !DILocation(line: 91, column: 1, scope: !1620)
!3000 = distinct !DISubprogram(name: "accept", scope: !3, file: !3, line: 479, type: !3001, isLocal: false, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3004)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!80, !80, !1004, !3003}
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!3004 = !{!3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3018, !3019, !3028, !3037}
!3005 = !DILocalVariable(name: "s", arg: 1, scope: !3000, file: !3, line: 479, type: !80)
!3006 = !DILocalVariable(name: "addr", arg: 2, scope: !3000, file: !3, line: 479, type: !1004)
!3007 = !DILocalVariable(name: "addrlen", arg: 3, scope: !3000, file: !3, line: 479, type: !3003)
!3008 = !DILocalVariable(name: "ret", scope: !3000, file: !3, line: 481, type: !80)
!3009 = !DILocalVariable(name: "file", scope: !3000, file: !3, line: 482, type: !1077)
!3010 = !DILocalVariable(name: "sock_fd", scope: !3000, file: !3, line: 483, type: !80)
!3011 = !DILocalVariable(name: "vfs_fd", scope: !3000, file: !3, line: 483, type: !80)
!3012 = !DILocalVariable(name: "tid", scope: !3013, file: !3, line: 485, type: !170)
!3013 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 485, column: 2)
!3014 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 485, column: 2)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 485, column: 2)
!3016 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 485, column: 2)
!3017 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 485, column: 2)
!3018 = !DILocalVariable(name: "_ret", scope: !3013, file: !3, line: 485, type: !135)
!3019 = !DILocalVariable(name: "tid", scope: !3020, file: !3, line: 491, type: !170)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 491, column: 3)
!3021 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 491, column: 3)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 491, column: 3)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 491, column: 3)
!3024 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 491, column: 3)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 491, column: 3)
!3026 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 486, column: 22)
!3027 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 486, column: 6)
!3028 = !DILocalVariable(name: "tid", scope: !3029, file: !3, line: 511, type: !170)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 511, column: 3)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 511, column: 3)
!3031 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 511, column: 3)
!3032 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 511, column: 3)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 511, column: 3)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 511, column: 3)
!3035 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 506, column: 18)
!3036 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 506, column: 6)
!3037 = !DILocalVariable(name: "tid", scope: !3038, file: !3, line: 516, type: !170)
!3038 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 516, column: 2)
!3039 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 516, column: 2)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 516, column: 2)
!3041 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 516, column: 2)
!3042 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 516, column: 2)
!3043 = !DILocation(line: 479, column: 16, scope: !3000)
!3044 = !DILocation(line: 479, column: 36, scope: !3000)
!3045 = !DILocation(line: 479, column: 53, scope: !3000)
!3046 = !DILocation(line: 481, column: 6, scope: !3000)
!3047 = !DILocation(line: 482, column: 2, scope: !3000)
!3048 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3049)
!3049 = distinct !DILocation(line: 485, column: 2, scope: !3016)
!3050 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3049)
!3051 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3049)
!3052 = !DILocation(line: 485, column: 2, scope: !3016)
!3053 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3054)
!3054 = distinct !DILocation(line: 485, column: 2, scope: !3016)
!3055 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3054)
!3056 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3054)
!3057 = !DILocation(line: 485, column: 2, scope: !3017)
!3058 = !DILocalVariable(name: "fd", arg: 1, scope: !3059, file: !3, line: 166, type: !80)
!3059 = distinct !DISubprogram(name: "sock_net_file_get", scope: !3, file: !3, line: 166, type: !3060, isLocal: true, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3062)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!1077, !80}
!3062 = !{!3058, !3063, !3064}
!3063 = !DILocalVariable(name: "file", scope: !3059, file: !3, line: 168, type: !1077)
!3064 = !DILocalVariable(name: "fos", scope: !3059, file: !3, line: 169, type: !785)
!3065 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !3066)
!3066 = distinct !DILocation(line: 485, column: 2, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 485, column: 2)
!3068 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !3066)
!3069 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !3066)
!3070 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !3066)
!3071 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !3066)
!3072 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 172, column: 6)
!3073 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !3066)
!3074 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !3066)
!3075 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 178, column: 6)
!3076 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !3066)
!3077 = !{!3078, !1408, i64 32}
!3078 = !{!"dentry", !3079, i64 0, !1409, i64 16, !1408, i64 24, !1408, i64 32, !1408, i64 40, !1408, i64 48, !1407, i64 56, !1410, i64 72, !1407, i64 104, !1407, i64 120}
!3079 = !{!"uk_hlist_node", !1408, i64 0, !1408, i64 8}
!3080 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !3066)
!3081 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !3066)
!3082 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !3066)
!3083 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !3066)
!3084 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !3066)
!3085 = !DILocation(line: 0, scope: !3086, inlinedAt: !3066)
!3086 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 172, column: 12)
!3087 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !3066)
!3088 = !DILocation(line: 482, column: 24, scope: !3000)
!3089 = !DILocation(line: 485, column: 2, scope: !3067)
!3090 = !DILocation(line: 486, column: 6, scope: !3027)
!3091 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3092)
!3092 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3093)
!3093 = distinct !DILocation(line: 485, column: 2, scope: !3013)
!3094 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3092)
!3095 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3092)
!3096 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3093)
!3097 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3093)
!3098 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3093)
!3099 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3093)
!3100 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3093)
!3101 = !DILocation(line: 485, column: 2, scope: !3013)
!3102 = !{i32 -2145684438, i32 -2145684425, i32 -2145684400, i32 -2145684376, i32 -2145684351, i32 -2145684276, i32 -2145684251, i32 -2145684107, i32 -2145680975, i32 -2145680886, i32 -2145680765, i32 -2145680670, i32 -2145680569, i32 -2145680542, i32 -2145680459, i32 -2145680370, i32 -2145680249, i32 -2145680149, i32 -2145680043, i32 -2145679935, i32 -2145683819, i32 -2145683766, i32 -2145683735, i32 -2145683704, i32 -2145683683, i32 -2145683661, i32 -2145683612, i32 -2145683591, i32 -2145679852, i32 -2145679763, i32 -2145679642, i32 -2145679543, i32 -2145679437, i32 -2145679335, i32 -2145679302, i32 -2145679229, i32 -2145679161, i32 -2145683287, i32 -2145683228, i32 -2145683175, i32 -2145683144, i32 -2145683113, i32 -2145683092, i32 -2145683070, i32 -2145683021, i32 -2145683000, i32 -2145679108, i32 -2145679019, i32 -2145678898, i32 -2145678799, i32 -2145678693, i32 -2145678591, i32 -2145678558, i32 -2145678475, i32 -2145678386, i32 -2145678265, i32 -2145678165, i32 -2145678139, i32 -2145678036, i32 -2145678010, i32 -2145682742, i32 -2145682675, i32 -2145682650, i32 -2145682586, i32 -2145682504, i32 -2145682481, i32 -2145682456, i32 -2145682431}
!3103 = !DILocation(line: 485, column: 2, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 485, column: 2)
!3105 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 485, column: 2)
!3106 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 485, column: 2)
!3107 = !{i32 -2145681243, i32 -2145681227}
!3108 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3109)
!3109 = distinct !DILocation(line: 491, column: 3, scope: !3023)
!3110 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3109)
!3111 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3109)
!3112 = !DILocation(line: 491, column: 3, scope: !3023)
!3113 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3114)
!3114 = distinct !DILocation(line: 491, column: 3, scope: !3023)
!3115 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3114)
!3116 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3114)
!3117 = !DILocation(line: 491, column: 3, scope: !3024)
!3118 = !DILocation(line: 491, column: 3, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 491, column: 3)
!3120 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !3121)
!3121 = distinct !DILocation(line: 491, column: 3, scope: !3119)
!3122 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !3121)
!3123 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3121)
!3124 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3121)
!3125 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3121)
!3126 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3127)
!3127 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3128)
!3128 = distinct !DILocation(line: 491, column: 3, scope: !3020)
!3129 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3127)
!3130 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3127)
!3131 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3128)
!3132 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3128)
!3133 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3128)
!3134 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3128)
!3135 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3128)
!3136 = !DILocation(line: 491, column: 3, scope: !3020)
!3137 = !{i32 -2145675755, i32 -2145675742, i32 -2145675717, i32 -2145675693, i32 -2145675668, i32 -2145675593, i32 -2145675568, i32 -2145675424, i32 -2145673183, i32 -2145673094, i32 -2145672973, i32 -2145672878, i32 -2145672777, i32 -2145672750, i32 -2145672667, i32 -2145672578, i32 -2145672457, i32 -2145672357, i32 -2145672251, i32 -2145672143, i32 -2145675136, i32 -2145675083, i32 -2145675052, i32 -2145675021, i32 -2145675000, i32 -2145674978, i32 -2145674929, i32 -2145674908, i32 -2145672060, i32 -2145671971, i32 -2145671850, i32 -2145671751, i32 -2145671645, i32 -2145671543, i32 -2145671510, i32 -2145671437, i32 -2145671369, i32 -2145674534, i32 -2145674481, i32 -2145674450, i32 -2145674419, i32 -2145674398, i32 -2145674376, i32 -2145674327, i32 -2145674306, i32 -2145671314, i32 -2145671225, i32 -2145671104, i32 -2145671005, i32 -2145670899, i32 -2145670797, i32 -2145670764, i32 -2145670681, i32 -2145670592, i32 -2145670471, i32 -2145670371, i32 -2145670345, i32 -2145670242, i32 -2145670216, i32 -2145674048, i32 -2145673981, i32 -2145673956, i32 -2145673892, i32 -2145673776, i32 -2145673751, i32 -2145673726}
!3138 = !DILocation(line: 496, column: 30, scope: !3000)
!3139 = !DILocation(line: 496, column: 12, scope: !3000)
!3140 = !DILocation(line: 483, column: 6, scope: !3000)
!3141 = !DILocation(line: 497, column: 14, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 497, column: 6)
!3143 = !DILocation(line: 497, column: 6, scope: !3000)
!3144 = !DILocation(line: 505, column: 11, scope: !3000)
!3145 = !DILocation(line: 483, column: 15, scope: !3000)
!3146 = !DILocation(line: 506, column: 13, scope: !3036)
!3147 = !DILocation(line: 506, column: 6, scope: !3000)
!3148 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3149)
!3149 = distinct !DILocation(line: 511, column: 3, scope: !3032)
!3150 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3149)
!3151 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3149)
!3152 = !DILocation(line: 511, column: 3, scope: !3032)
!3153 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3154)
!3154 = distinct !DILocation(line: 511, column: 3, scope: !3032)
!3155 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3154)
!3156 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3154)
!3157 = !DILocation(line: 511, column: 3, scope: !3033)
!3158 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !3159)
!3159 = distinct !DILocation(line: 511, column: 3, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 511, column: 3)
!3161 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !3159)
!3162 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3159)
!3163 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3159)
!3164 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3159)
!3165 = !DILocation(line: 511, column: 3, scope: !3160)
!3166 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3167)
!3167 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3168)
!3168 = distinct !DILocation(line: 511, column: 3, scope: !3029)
!3169 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3167)
!3170 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3167)
!3171 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3168)
!3172 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3168)
!3173 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3168)
!3174 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3168)
!3175 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3168)
!3176 = !DILocation(line: 511, column: 3, scope: !3029)
!3177 = !{i32 -2145668214, i32 -2145668201, i32 -2145668176, i32 -2145668152, i32 -2145668127, i32 -2145668052, i32 -2145668027, i32 -2145667883, i32 -2145665662, i32 -2145665573, i32 -2145665452, i32 -2145665357, i32 -2145665256, i32 -2145665229, i32 -2145665146, i32 -2145665057, i32 -2145664936, i32 -2145664836, i32 -2145664730, i32 -2145664622, i32 -2145667595, i32 -2145667542, i32 -2145667511, i32 -2145667480, i32 -2145667459, i32 -2145667437, i32 -2145667388, i32 -2145667367, i32 -2145664539, i32 -2145664450, i32 -2145664329, i32 -2145664230, i32 -2145664124, i32 -2145664022, i32 -2145663989, i32 -2145663916, i32 -2145663848, i32 -2145666993, i32 -2145666940, i32 -2145666909, i32 -2145666878, i32 -2145666857, i32 -2145666835, i32 -2145666786, i32 -2145666765, i32 -2145663793, i32 -2145663704, i32 -2145663583, i32 -2145663484, i32 -2145663378, i32 -2145663276, i32 -2145663243, i32 -2145663160, i32 -2145663071, i32 -2145662950, i32 -2145662850, i32 -2145662824, i32 -2145662721, i32 -2145662695, i32 -2145666507, i32 -2145666440, i32 -2145666415, i32 -2145666351, i32 -2145666235, i32 -2145666210, i32 -2145666185}
!3178 = !DILocation(line: 0, scope: !3000)
!3179 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3180)
!3180 = distinct !DILocation(line: 516, column: 2, scope: !3041)
!3181 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3180)
!3182 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3180)
!3183 = !DILocation(line: 516, column: 2, scope: !3041)
!3184 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3185)
!3185 = distinct !DILocation(line: 516, column: 2, scope: !3041)
!3186 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3185)
!3187 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3185)
!3188 = !DILocation(line: 516, column: 2, scope: !3042)
!3189 = !DILocation(line: 516, column: 2, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 516, column: 2)
!3191 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3192)
!3192 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3193)
!3193 = distinct !DILocation(line: 516, column: 2, scope: !3038)
!3194 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3192)
!3195 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3192)
!3196 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3193)
!3197 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3193)
!3198 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3193)
!3199 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3193)
!3200 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3193)
!3201 = !DILocation(line: 516, column: 2, scope: !3038)
!3202 = !{i32 -2145660731, i32 -2145660718, i32 -2145660693, i32 -2145660669, i32 -2145660644, i32 -2145660569, i32 -2145660544, i32 -2145660400, i32 -2145658173, i32 -2145658084, i32 -2145657963, i32 -2145657868, i32 -2145657767, i32 -2145657740, i32 -2145657657, i32 -2145657568, i32 -2145657447, i32 -2145657347, i32 -2145657241, i32 -2145657133, i32 -2145660112, i32 -2145660059, i32 -2145660028, i32 -2145659997, i32 -2145659976, i32 -2145659954, i32 -2145659905, i32 -2145659884, i32 -2145657050, i32 -2145656961, i32 -2145656840, i32 -2145656741, i32 -2145656635, i32 -2145656533, i32 -2145656500, i32 -2145656427, i32 -2145656359, i32 -2145659510, i32 -2145659457, i32 -2145659426, i32 -2145659395, i32 -2145659374, i32 -2145659352, i32 -2145659303, i32 -2145659282, i32 -2145656307, i32 -2145656218, i32 -2145656097, i32 -2145655998, i32 -2145655892, i32 -2145655790, i32 -2145655757, i32 -2145655674, i32 -2145655585, i32 -2145655464, i32 -2145655364, i32 -2145655338, i32 -2145655235, i32 -2145655209, i32 -2145659024, i32 -2145658957, i32 -2145658932, i32 -2145658868, i32 -2145658752, i32 -2145658727, i32 -2145658702}
!3203 = !DILocation(line: 0, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 497, column: 19)
!3205 = !DILocation(line: 523, column: 1, scope: !3000)
!3206 = !DILocation(line: 518, column: 2, scope: !3000)
!3207 = !DILocation(line: 521, column: 2, scope: !3000)
!3208 = !DILocation(line: 522, column: 2, scope: !3000)
!3209 = !DILocation(line: 166, column: 45, scope: !3059)
!3210 = !DILocation(line: 168, column: 24, scope: !3059)
!3211 = !DILocation(line: 171, column: 8, scope: !3059)
!3212 = !DILocation(line: 169, column: 23, scope: !3059)
!3213 = !DILocation(line: 172, column: 7, scope: !3072)
!3214 = !DILocation(line: 172, column: 6, scope: !3059)
!3215 = !DILocation(line: 178, column: 11, scope: !3075)
!3216 = !DILocation(line: 178, column: 21, scope: !3075)
!3217 = !DILocation(line: 178, column: 30, scope: !3075)
!3218 = !DILocation(line: 178, column: 37, scope: !3075)
!3219 = !DILocation(line: 178, column: 6, scope: !3059)
!3220 = !DILocation(line: 184, column: 14, scope: !3059)
!3221 = !DILocation(line: 184, column: 2, scope: !3059)
!3222 = !DILocation(line: 0, scope: !3086)
!3223 = !DILocation(line: 186, column: 2, scope: !3059)
!3224 = distinct !DISubprogram(name: "lwip_accept", scope: !3, file: !3, line: 1618, type: !3001, isLocal: false, isDefinition: true, scopeLine: 1619, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3225)
!3225 = !{!3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3244, !3250, !3254, !3260, !3263, !3269, !3273, !3279, !3287, !3291, !3297, !3299}
!3226 = !DILocalVariable(name: "s", arg: 1, scope: !3224, file: !3, line: 1618, type: !80)
!3227 = !DILocalVariable(name: "addr", arg: 2, scope: !3224, file: !3, line: 1618, type: !1004)
!3228 = !DILocalVariable(name: "addrlen", arg: 3, scope: !3224, file: !3, line: 1618, type: !3003)
!3229 = !DILocalVariable(name: "sock", scope: !3224, file: !3, line: 1620, type: !1165)
!3230 = !DILocalVariable(name: "nsock", scope: !3224, file: !3, line: 1620, type: !1165)
!3231 = !DILocalVariable(name: "newconn", scope: !3224, file: !3, line: 1621, type: !1169)
!3232 = !DILocalVariable(name: "naddr", scope: !3224, file: !3, line: 1622, type: !1183)
!3233 = !DILocalVariable(name: "port", scope: !3224, file: !3, line: 1623, type: !164)
!3234 = !DILocalVariable(name: "newsock", scope: !3224, file: !3, line: 1624, type: !80)
!3235 = !DILocalVariable(name: "err", scope: !3224, file: !3, line: 1625, type: !1283)
!3236 = !DILocalVariable(name: "recvevent", scope: !3224, file: !3, line: 1626, type: !80)
!3237 = !DILocalVariable(name: "lev", scope: !3224, file: !3, line: 1627, type: !134)
!3238 = !DILocalVariable(name: "sockerr", scope: !3239, file: !3, line: 1640, type: !1007)
!3239 = distinct !DILexicalBlock(scope: !3240, file: !3, line: 1640, column: 7)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !3, line: 1639, column: 69)
!3241 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 1639, column: 9)
!3242 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 1637, column: 22)
!3243 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 1637, column: 7)
!3244 = !DILocalVariable(name: "tid", scope: !3245, file: !3, line: 1640, type: !170)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 1640, column: 7)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 1640, column: 7)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 1640, column: 7)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 1640, column: 7)
!3249 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 1640, column: 7)
!3250 = !DILocalVariable(name: "sockerr", scope: !3251, file: !3, line: 1642, type: !1007)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !3, line: 1642, column: 7)
!3252 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 1641, column: 33)
!3253 = distinct !DILexicalBlock(scope: !3241, file: !3, line: 1641, column: 16)
!3254 = !DILocalVariable(name: "tid", scope: !3255, file: !3, line: 1642, type: !170)
!3255 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 1642, column: 7)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1642, column: 7)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 1642, column: 7)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 1642, column: 7)
!3259 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 1642, column: 7)
!3260 = !DILocalVariable(name: "sockerr", scope: !3261, file: !3, line: 1644, type: !1007)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 1644, column: 7)
!3262 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 1643, column: 12)
!3263 = !DILocalVariable(name: "tid", scope: !3264, file: !3, line: 1644, type: !170)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1644, column: 7)
!3265 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 1644, column: 7)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 1644, column: 7)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 1644, column: 7)
!3268 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 1644, column: 7)
!3269 = !DILocalVariable(name: "sockerr", scope: !3270, file: !3, line: 1654, type: !1007)
!3270 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 1654, column: 5)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 1652, column: 22)
!3272 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 1652, column: 7)
!3273 = !DILocalVariable(name: "tid", scope: !3274, file: !3, line: 1654, type: !170)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1654, column: 5)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 1654, column: 5)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 1654, column: 5)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 1654, column: 5)
!3278 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 1654, column: 5)
!3279 = !DILocalVariable(name: "tempaddr", scope: !3280, file: !3, line: 1684, type: !3282)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 1683, column: 44)
!3281 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 1683, column: 7)
!3282 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sockaddr_aligned", file: !3, line: 1204, size: 224, elements: !3283)
!3283 = !{!3284, !3285, !3286}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3282, file: !3, line: 1205, baseType: !230, size: 128)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "sin6", scope: !3282, file: !3, line: 1207, baseType: !152, size: 224)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !3282, file: !3, line: 1210, baseType: !189, size: 128)
!3287 = !DILocalVariable(name: "sockerr", scope: !3288, file: !3, line: 1691, type: !1007)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !3, line: 1691, column: 7)
!3289 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 1687, column: 24)
!3290 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 1687, column: 9)
!3291 = !DILocalVariable(name: "tid", scope: !3292, file: !3, line: 1691, type: !170)
!3292 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 1691, column: 7)
!3293 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 1691, column: 7)
!3294 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 1691, column: 7)
!3295 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 1691, column: 7)
!3296 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 1691, column: 7)
!3297 = !DILocalVariable(name: "sockerr", scope: !3298, file: !3, line: 1709, type: !1007)
!3298 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 1709, column: 3)
!3299 = !DILocalVariable(name: "tid", scope: !3300, file: !3, line: 1709, type: !170)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 1709, column: 3)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 1709, column: 3)
!3302 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 1709, column: 3)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 1709, column: 3)
!3304 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 1709, column: 3)
!3305 = !DILocation(line: 1618, column: 17, scope: !3224)
!3306 = !DILocation(line: 1618, column: 37, scope: !3224)
!3307 = !DILocation(line: 1618, column: 54, scope: !3224)
!3308 = !DILocation(line: 1621, column: 3, scope: !3224)
!3309 = !DILocation(line: 1622, column: 3, scope: !3224)
!3310 = !DILocation(line: 1623, column: 3, scope: !3224)
!3311 = !DILocation(line: 1623, column: 9, scope: !3224)
!3312 = !{!1604, !1604, i64 0}
!3313 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !3314)
!3314 = distinct !DILocation(line: 1630, column: 10, scope: !3224)
!3315 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !3316)
!3316 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !3314)
!3317 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !3318)
!3318 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !3316)
!3319 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !3320)
!3320 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !3318)
!3321 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !3320)
!3322 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !3320)
!3323 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !3320)
!3324 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !3318)
!3325 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !3316)
!3326 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !3320)
!3327 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !3316)
!3328 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !3316)
!3329 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !3316)
!3330 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !3316)
!3331 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3332)
!3332 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !3314)
!3333 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3332)
!3334 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3332)
!3335 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !3314)
!3336 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3337)
!3337 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !3314)
!3338 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3337)
!3339 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3337)
!3340 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !3314)
!3341 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !3342)
!3342 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !3314)
!3343 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3342)
!3344 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3342)
!3345 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3342)
!3346 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !3314)
!3347 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3348)
!3348 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3349)
!3349 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !3314)
!3350 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3348)
!3351 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3348)
!3352 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3349)
!3353 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3349)
!3354 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3349)
!3355 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3349)
!3356 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3349)
!3357 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !3314)
!3358 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !3314)
!3359 = !DILocation(line: 1631, column: 7, scope: !3224)
!3360 = !DILocation(line: 1621, column: 19, scope: !3224)
!3361 = !DILocation(line: 1636, column: 9, scope: !3224)
!3362 = !DILocation(line: 1625, column: 9, scope: !3224)
!3363 = !DILocation(line: 1637, column: 11, scope: !3243)
!3364 = !DILocation(line: 1637, column: 7, scope: !3224)
!3365 = !DILocation(line: 1639, column: 9, scope: !3241)
!3366 = !DILocation(line: 1639, column: 53, scope: !3241)
!3367 = !DILocation(line: 1639, column: 9, scope: !3242)
!3368 = !DILocation(line: 1640, column: 7, scope: !3239)
!3369 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3370)
!3370 = distinct !DILocation(line: 1640, column: 7, scope: !3248)
!3371 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3370)
!3372 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3370)
!3373 = !DILocation(line: 1640, column: 7, scope: !3248)
!3374 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3375)
!3375 = distinct !DILocation(line: 1640, column: 7, scope: !3248)
!3376 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3375)
!3377 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3375)
!3378 = !DILocation(line: 1640, column: 7, scope: !3249)
!3379 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !3380)
!3380 = distinct !DILocation(line: 1640, column: 7, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 1640, column: 7)
!3382 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3380)
!3383 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3380)
!3384 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3380)
!3385 = !DILocation(line: 1640, column: 7, scope: !3381)
!3386 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3387)
!3387 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3388)
!3388 = distinct !DILocation(line: 1640, column: 7, scope: !3245)
!3389 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3387)
!3390 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3387)
!3391 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3388)
!3392 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3388)
!3393 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3388)
!3394 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3388)
!3395 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3388)
!3396 = !DILocation(line: 1640, column: 7, scope: !3245)
!3397 = !{i32 -2145218533, i32 -2145218520, i32 -2145218495, i32 -2145218471, i32 -2145218446, i32 -2145218371, i32 -2145218346, i32 -2145218202, i32 -2145215979, i32 -2145215890, i32 -2145215769, i32 -2145215674, i32 -2145215573, i32 -2145215546, i32 -2145215463, i32 -2145215374, i32 -2145215253, i32 -2145215153, i32 -2145215047, i32 -2145214939, i32 -2145217914, i32 -2145217861, i32 -2145217830, i32 -2145217799, i32 -2145217778, i32 -2145217756, i32 -2145217707, i32 -2145217686, i32 -2145214856, i32 -2145214767, i32 -2145214646, i32 -2145214547, i32 -2145214441, i32 -2145214339, i32 -2145214306, i32 -2145214233, i32 -2145214165, i32 -2145217312, i32 -2145217259, i32 -2145217228, i32 -2145217197, i32 -2145217176, i32 -2145217154, i32 -2145217105, i32 -2145217084, i32 -2145214110, i32 -2145214021, i32 -2145213900, i32 -2145213801, i32 -2145213695, i32 -2145213593, i32 -2145213560, i32 -2145213477, i32 -2145213388, i32 -2145213267, i32 -2145213167, i32 -2145213141, i32 -2145213038, i32 -2145213012, i32 -2145216826, i32 -2145216759, i32 -2145216734, i32 -2145216670, i32 -2145216554, i32 -2145216529, i32 -2145216504}
!3398 = !DILocation(line: 1641, column: 20, scope: !3253)
!3399 = !DILocation(line: 1641, column: 16, scope: !3241)
!3400 = !DILocation(line: 1642, column: 7, scope: !3251)
!3401 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3402)
!3402 = distinct !DILocation(line: 1642, column: 7, scope: !3258)
!3403 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3402)
!3404 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3402)
!3405 = !DILocation(line: 1642, column: 7, scope: !3258)
!3406 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3407)
!3407 = distinct !DILocation(line: 1642, column: 7, scope: !3258)
!3408 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3407)
!3409 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3407)
!3410 = !DILocation(line: 1642, column: 7, scope: !3259)
!3411 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !3412)
!3412 = distinct !DILocation(line: 1642, column: 7, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 1642, column: 7)
!3414 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3412)
!3415 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3412)
!3416 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3412)
!3417 = !DILocation(line: 1642, column: 7, scope: !3413)
!3418 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3419)
!3419 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3420)
!3420 = distinct !DILocation(line: 1642, column: 7, scope: !3255)
!3421 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3419)
!3422 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3419)
!3423 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3420)
!3424 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3420)
!3425 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3420)
!3426 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3420)
!3427 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3420)
!3428 = !DILocation(line: 1642, column: 7, scope: !3255)
!3429 = !{i32 -2145210972, i32 -2145210959, i32 -2145210934, i32 -2145210910, i32 -2145210885, i32 -2145210810, i32 -2145210785, i32 -2145210641, i32 -2145208418, i32 -2145208329, i32 -2145208208, i32 -2145208113, i32 -2145208012, i32 -2145207985, i32 -2145207902, i32 -2145207813, i32 -2145207692, i32 -2145207592, i32 -2145207486, i32 -2145207378, i32 -2145210353, i32 -2145210300, i32 -2145210269, i32 -2145210238, i32 -2145210217, i32 -2145210195, i32 -2145210146, i32 -2145210125, i32 -2145207295, i32 -2145207206, i32 -2145207085, i32 -2145206986, i32 -2145206880, i32 -2145206778, i32 -2145206745, i32 -2145206672, i32 -2145206604, i32 -2145209751, i32 -2145209698, i32 -2145209667, i32 -2145209636, i32 -2145209615, i32 -2145209593, i32 -2145209544, i32 -2145209523, i32 -2145206549, i32 -2145206460, i32 -2145206339, i32 -2145206240, i32 -2145206134, i32 -2145206032, i32 -2145205999, i32 -2145205916, i32 -2145205827, i32 -2145205706, i32 -2145205606, i32 -2145205580, i32 -2145205477, i32 -2145205451, i32 -2145209265, i32 -2145209198, i32 -2145209173, i32 -2145209109, i32 -2145208993, i32 -2145208968, i32 -2145208943}
!3430 = !DILocation(line: 1644, column: 7, scope: !3261)
!3431 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3432)
!3432 = distinct !DILocation(line: 1644, column: 7, scope: !3267)
!3433 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3432)
!3434 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3432)
!3435 = !DILocation(line: 1644, column: 7, scope: !3267)
!3436 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3437)
!3437 = distinct !DILocation(line: 1644, column: 7, scope: !3267)
!3438 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3437)
!3439 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3437)
!3440 = !DILocation(line: 1644, column: 7, scope: !3268)
!3441 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3442)
!3442 = distinct !DILocation(line: 1644, column: 7, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 1644, column: 7)
!3444 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3442)
!3445 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3442)
!3446 = !DILocation(line: 1644, column: 7, scope: !3443)
!3447 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3448)
!3448 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3449)
!3449 = distinct !DILocation(line: 1644, column: 7, scope: !3264)
!3450 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3448)
!3451 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3448)
!3452 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3449)
!3453 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3449)
!3454 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3449)
!3455 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3449)
!3456 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3449)
!3457 = !DILocation(line: 1644, column: 7, scope: !3264)
!3458 = !{i32 -2145203399, i32 -2145203386, i32 -2145203361, i32 -2145203337, i32 -2145203312, i32 -2145203237, i32 -2145203212, i32 -2145203068, i32 -2145200845, i32 -2145200756, i32 -2145200635, i32 -2145200540, i32 -2145200439, i32 -2145200412, i32 -2145200329, i32 -2145200240, i32 -2145200119, i32 -2145200019, i32 -2145199913, i32 -2145199805, i32 -2145202780, i32 -2145202727, i32 -2145202696, i32 -2145202665, i32 -2145202644, i32 -2145202622, i32 -2145202573, i32 -2145202552, i32 -2145199722, i32 -2145199633, i32 -2145199512, i32 -2145199413, i32 -2145199307, i32 -2145199205, i32 -2145199172, i32 -2145199099, i32 -2145199031, i32 -2145202178, i32 -2145202125, i32 -2145202094, i32 -2145202063, i32 -2145202042, i32 -2145202020, i32 -2145201971, i32 -2145201950, i32 -2145198976, i32 -2145198887, i32 -2145198766, i32 -2145198667, i32 -2145198561, i32 -2145198459, i32 -2145198426, i32 -2145198343, i32 -2145198254, i32 -2145198133, i32 -2145198033, i32 -2145198007, i32 -2145197904, i32 -2145197878, i32 -2145201692, i32 -2145201625, i32 -2145201600, i32 -2145201536, i32 -2145201420, i32 -2145201395, i32 -2145201370}
!3459 = !DILocation(line: 1649, column: 3, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 1649, column: 3)
!3461 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 1649, column: 3)
!3462 = !DILocation(line: 1649, column: 3, scope: !3461)
!3463 = !DILocation(line: 1649, column: 3, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 1649, column: 3)
!3465 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 1649, column: 3)
!3466 = !DILocation(line: 1649, column: 3, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 1649, column: 3)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1649, column: 3)
!3469 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 1649, column: 3)
!3470 = !DILocation(line: 1651, column: 13, scope: !3224)
!3471 = !DILocation(line: 1624, column: 7, scope: !3224)
!3472 = !DILocation(line: 1652, column: 15, scope: !3272)
!3473 = !DILocation(line: 1652, column: 7, scope: !3224)
!3474 = !DILocation(line: 1653, column: 20, scope: !3271)
!3475 = !DILocation(line: 1653, column: 5, scope: !3271)
!3476 = !DILocation(line: 1654, column: 5, scope: !3270)
!3477 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3478)
!3478 = distinct !DILocation(line: 1654, column: 5, scope: !3277)
!3479 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3478)
!3480 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3478)
!3481 = !DILocation(line: 1654, column: 5, scope: !3277)
!3482 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3483)
!3483 = distinct !DILocation(line: 1654, column: 5, scope: !3277)
!3484 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3483)
!3485 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3483)
!3486 = !DILocation(line: 1654, column: 5, scope: !3278)
!3487 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !3488)
!3488 = distinct !DILocation(line: 1654, column: 5, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 1654, column: 5)
!3490 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3488)
!3491 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3488)
!3492 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3488)
!3493 = !DILocation(line: 1654, column: 5, scope: !3489)
!3494 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3495)
!3495 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3496)
!3496 = distinct !DILocation(line: 1654, column: 5, scope: !3274)
!3497 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3495)
!3498 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3495)
!3499 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3496)
!3500 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3496)
!3501 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3496)
!3502 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3496)
!3503 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3496)
!3504 = !DILocation(line: 1654, column: 5, scope: !3274)
!3505 = !{i32 -2145195322, i32 -2145195309, i32 -2145195284, i32 -2145195260, i32 -2145195235, i32 -2145195160, i32 -2145195135, i32 -2145194991, i32 -2145192768, i32 -2145192679, i32 -2145192558, i32 -2145192463, i32 -2145192362, i32 -2145192335, i32 -2145192252, i32 -2145192163, i32 -2145192042, i32 -2145191942, i32 -2145191836, i32 -2145191728, i32 -2145194703, i32 -2145194650, i32 -2145194619, i32 -2145194588, i32 -2145194567, i32 -2145194545, i32 -2145194496, i32 -2145194475, i32 -2145191645, i32 -2145191556, i32 -2145191435, i32 -2145191336, i32 -2145191230, i32 -2145191128, i32 -2145191095, i32 -2145191022, i32 -2145190954, i32 -2145194101, i32 -2145194048, i32 -2145194017, i32 -2145193986, i32 -2145193965, i32 -2145193943, i32 -2145193894, i32 -2145193873, i32 -2145190899, i32 -2145190810, i32 -2145190689, i32 -2145190590, i32 -2145190484, i32 -2145190382, i32 -2145190349, i32 -2145190266, i32 -2145190177, i32 -2145190056, i32 -2145189956, i32 -2145189930, i32 -2145189827, i32 -2145189801, i32 -2145193615, i32 -2145193548, i32 -2145193523, i32 -2145193459, i32 -2145193343, i32 -2145193318, i32 -2145193293}
!3506 = !DILocation(line: 1658, column: 3, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 1658, column: 3)
!3508 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 1658, column: 3)
!3509 = !DILocation(line: 1658, column: 3, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 1658, column: 3)
!3511 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 1658, column: 3)
!3512 = !DILocation(line: 1658, column: 3, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1658, column: 3)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 1658, column: 3)
!3515 = distinct !DILexicalBlock(scope: !3510, file: !3, line: 1658, column: 3)
!3516 = !DILocation(line: 1659, column: 12, scope: !3224)
!3517 = !DILocation(line: 1666, column: 3, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 1666, column: 3)
!3519 = !DILocation(line: 1627, column: 3, scope: !3224)
!3520 = !DILocation(line: 1667, column: 28, scope: !3224)
!3521 = !DILocation(line: 1667, column: 37, scope: !3224)
!3522 = !DILocation(line: 1668, column: 19, scope: !3224)
!3523 = !DILocation(line: 1669, column: 3, scope: !3224)
!3524 = !DILocation(line: 1671, column: 7, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 1671, column: 7)
!3526 = !DILocation(line: 1671, column: 16, scope: !3525)
!3527 = !{!1648, !1408, i64 120}
!3528 = !DILocation(line: 1671, column: 7, scope: !3224)
!3529 = !DILocation(line: 1667, column: 15, scope: !3224)
!3530 = !DILocation(line: 1672, column: 5, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3525, file: !3, line: 1671, column: 26)
!3532 = !DILocation(line: 1673, column: 22, scope: !3531)
!3533 = !DILocation(line: 1673, column: 5, scope: !3531)
!3534 = !DILocation(line: 1626, column: 7, scope: !3224)
!3535 = !DILocation(line: 1674, column: 16, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 1673, column: 27)
!3537 = !DILocation(line: 1675, column: 7, scope: !3536)
!3538 = !DILocation(line: 1675, column: 16, scope: !3536)
!3539 = distinct !{!3539, !3533, !3540}
!3540 = !DILocation(line: 1676, column: 5, scope: !3531)
!3541 = !DILocation(line: 1677, column: 5, scope: !3531)
!3542 = !DILocation(line: 1678, column: 3, scope: !3531)
!3543 = !DILocation(line: 1683, column: 13, scope: !3281)
!3544 = !DILocation(line: 1683, column: 34, scope: !3281)
!3545 = !DILocation(line: 1683, column: 22, scope: !3281)
!3546 = !DILocation(line: 1684, column: 5, scope: !3280)
!3547 = !DILocation(line: 1686, column: 11, scope: !3280)
!3548 = !DILocation(line: 1622, column: 13, scope: !3224)
!3549 = !DILocation(line: 1687, column: 13, scope: !3290)
!3550 = !DILocation(line: 1687, column: 9, scope: !3280)
!3551 = !DILocation(line: 1689, column: 22, scope: !3289)
!3552 = !DILocation(line: 1689, column: 7, scope: !3289)
!3553 = !DILocation(line: 1592, column: 41, scope: !1755, inlinedAt: !3554)
!3554 = distinct !DILocation(line: 1690, column: 7, scope: !3289)
!3555 = !DILocation(line: 1600, column: 3, scope: !1767, inlinedAt: !3554)
!3556 = !DILocation(line: 1597, column: 3, scope: !1755, inlinedAt: !3554)
!3557 = !DILocation(line: 1595, column: 19, scope: !1755, inlinedAt: !3554)
!3558 = !DILocation(line: 1596, column: 28, scope: !1755, inlinedAt: !3554)
!3559 = !DILocation(line: 1546, column: 48, scope: !1772, inlinedAt: !3560)
!3560 = distinct !DILocation(line: 1602, column: 11, scope: !1755, inlinedAt: !3554)
!3561 = !DILocation(line: 1546, column: 73, scope: !1772, inlinedAt: !3560)
!3562 = !DILocation(line: 1547, column: 46, scope: !1772, inlinedAt: !3560)
!3563 = !DILocation(line: 1560, column: 21, scope: !1772, inlinedAt: !3560)
!3564 = !DILocation(line: 1561, column: 23, scope: !1772, inlinedAt: !3560)
!3565 = !DILocation(line: 1562, column: 17, scope: !1772, inlinedAt: !3560)
!3566 = !DILocation(line: 1563, column: 14, scope: !1772, inlinedAt: !3560)
!3567 = !DILocation(line: 1564, column: 3, scope: !1772, inlinedAt: !3560)
!3568 = !DILocation(line: 1594, column: 7, scope: !1755, inlinedAt: !3554)
!3569 = !DILocation(line: 1603, column: 3, scope: !1755, inlinedAt: !3554)
!3570 = !DILocation(line: 1570, column: 31, scope: !1794, inlinedAt: !3571)
!3571 = distinct !DILocation(line: 1607, column: 5, scope: !1802, inlinedAt: !3554)
!3572 = !DILocation(line: 1570, column: 55, scope: !1794, inlinedAt: !3571)
!3573 = !DILocation(line: 1570, column: 87, scope: !1794, inlinedAt: !3571)
!3574 = !DILocation(line: 1572, column: 22, scope: !1806, inlinedAt: !3571)
!3575 = !DILocation(line: 1572, column: 7, scope: !1794, inlinedAt: !3571)
!3576 = !DILocation(line: 1574, column: 7, scope: !1811, inlinedAt: !3571)
!3577 = !DILocation(line: 1575, column: 5, scope: !1811, inlinedAt: !3571)
!3578 = !DILocation(line: 1579, column: 12, scope: !1817, inlinedAt: !3571)
!3579 = !DILocation(line: 1579, column: 7, scope: !1794, inlinedAt: !3571)
!3580 = !DILocation(line: 1581, column: 5, scope: !1820, inlinedAt: !3571)
!3581 = !DILocation(line: 1582, column: 3, scope: !1820, inlinedAt: !3571)
!3582 = !DILocation(line: 1583, column: 1, scope: !1794, inlinedAt: !3571)
!3583 = !DILocation(line: 1609, column: 1, scope: !1755, inlinedAt: !3554)
!3584 = !DILocation(line: 1691, column: 7, scope: !3288)
!3585 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3586)
!3586 = distinct !DILocation(line: 1691, column: 7, scope: !3295)
!3587 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3586)
!3588 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3586)
!3589 = !DILocation(line: 1691, column: 7, scope: !3295)
!3590 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3591)
!3591 = distinct !DILocation(line: 1691, column: 7, scope: !3295)
!3592 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3591)
!3593 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3591)
!3594 = !DILocation(line: 1691, column: 7, scope: !3296)
!3595 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3596)
!3596 = distinct !DILocation(line: 1691, column: 7, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 1691, column: 7)
!3598 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3596)
!3599 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3596)
!3600 = !DILocation(line: 1691, column: 7, scope: !3597)
!3601 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3602)
!3602 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3603)
!3603 = distinct !DILocation(line: 1691, column: 7, scope: !3292)
!3604 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3602)
!3605 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3602)
!3606 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3603)
!3607 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3603)
!3608 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3603)
!3609 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3603)
!3610 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3603)
!3611 = !DILocation(line: 1691, column: 7, scope: !3292)
!3612 = !{i32 -2145186955, i32 -2145186942, i32 -2145186917, i32 -2145186893, i32 -2145186868, i32 -2145186793, i32 -2145186768, i32 -2145186624, i32 -2145184401, i32 -2145184312, i32 -2145184191, i32 -2145184096, i32 -2145183995, i32 -2145183968, i32 -2145183885, i32 -2145183796, i32 -2145183675, i32 -2145183575, i32 -2145183469, i32 -2145183361, i32 -2145186336, i32 -2145186283, i32 -2145186252, i32 -2145186221, i32 -2145186200, i32 -2145186178, i32 -2145186129, i32 -2145186108, i32 -2145183278, i32 -2145183189, i32 -2145183068, i32 -2145182969, i32 -2145182863, i32 -2145182761, i32 -2145182728, i32 -2145182655, i32 -2145182587, i32 -2145185734, i32 -2145185681, i32 -2145185650, i32 -2145185619, i32 -2145185598, i32 -2145185576, i32 -2145185527, i32 -2145185506, i32 -2145182532, i32 -2145182443, i32 -2145182322, i32 -2145182223, i32 -2145182117, i32 -2145182015, i32 -2145181982, i32 -2145181899, i32 -2145181810, i32 -2145181689, i32 -2145181589, i32 -2145181563, i32 -2145181460, i32 -2145181434, i32 -2145185248, i32 -2145185181, i32 -2145185156, i32 -2145185092, i32 -2145184976, i32 -2145184951, i32 -2145184926}
!3613 = !DILocation(line: 1696, column: 5, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 1696, column: 5)
!3615 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 1696, column: 5)
!3616 = !DILocation(line: 1696, column: 5, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 1696, column: 5)
!3618 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1696, column: 5)
!3619 = !{!3620, !1405, i64 0}
!3620 = !{!"sockaddr_in6", !1405, i64 0, !1405, i64 1, !1604, i64 2, !1409, i64 4, !3621, i64 8, !1409, i64 24}
!3621 = !{!"in6_addr", !1405, i64 0}
!3622 = !{!3620, !1405, i64 1}
!3623 = !{!3620, !1604, i64 2}
!3624 = !{!3620, !1409, i64 4}
!3625 = !DILocation(line: 1696, column: 5, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 1696, column: 5)
!3627 = !{!3620, !1409, i64 24}
!3628 = !DILocation(line: 1696, column: 5, scope: !3618)
!3629 = !DILocation(line: 1696, column: 5, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 1696, column: 5)
!3631 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1696, column: 5)
!3632 = !{!3633, !1405, i64 0}
!3633 = !{!"sockaddr_in", !1405, i64 0, !1405, i64 1, !1604, i64 2, !3634, i64 4, !1405, i64 8}
!3634 = !{!"in_addr", !1409, i64 0}
!3635 = !{!3633, !1405, i64 1}
!3636 = !{!3633, !1604, i64 2}
!3637 = !{!3633, !1409, i64 4}
!3638 = !DILocation(line: 1697, column: 9, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 1697, column: 9)
!3640 = !DILocation(line: 1697, column: 32, scope: !3639)
!3641 = !DILocation(line: 1697, column: 20, scope: !3639)
!3642 = !DILocation(line: 1697, column: 18, scope: !3639)
!3643 = !DILocation(line: 1697, column: 9, scope: !3280)
!3644 = !DILocation(line: 1698, column: 16, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1697, column: 40)
!3646 = !DILocation(line: 1699, column: 5, scope: !3645)
!3647 = !DILocation(line: 1700, column: 5, scope: !3280)
!3648 = !DILocation(line: 1705, column: 3, scope: !3281)
!3649 = !DILocation(line: 1709, column: 3, scope: !3298)
!3650 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3651)
!3651 = distinct !DILocation(line: 1709, column: 3, scope: !3303)
!3652 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3651)
!3653 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3651)
!3654 = !DILocation(line: 1709, column: 3, scope: !3303)
!3655 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3656)
!3656 = distinct !DILocation(line: 1709, column: 3, scope: !3303)
!3657 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3656)
!3658 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3656)
!3659 = !DILocation(line: 1709, column: 3, scope: !3304)
!3660 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !3661)
!3661 = distinct !DILocation(line: 1709, column: 3, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 1709, column: 3)
!3663 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3661)
!3664 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3661)
!3665 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3661)
!3666 = !DILocation(line: 1709, column: 3, scope: !3662)
!3667 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3668)
!3668 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3669)
!3669 = distinct !DILocation(line: 1709, column: 3, scope: !3300)
!3670 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3668)
!3671 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3668)
!3672 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3669)
!3673 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3669)
!3674 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3669)
!3675 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3669)
!3676 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3669)
!3677 = !DILocation(line: 1709, column: 3, scope: !3300)
!3678 = !{i32 -2145172154, i32 -2145172141, i32 -2145172116, i32 -2145172092, i32 -2145172067, i32 -2145171992, i32 -2145171967, i32 -2145171823, i32 -2145169600, i32 -2145169511, i32 -2145169390, i32 -2145169295, i32 -2145169194, i32 -2145169167, i32 -2145169084, i32 -2145168995, i32 -2145168874, i32 -2145168774, i32 -2145168668, i32 -2145168560, i32 -2145171535, i32 -2145171482, i32 -2145171451, i32 -2145171420, i32 -2145171399, i32 -2145171377, i32 -2145171328, i32 -2145171307, i32 -2145168477, i32 -2145168388, i32 -2145168267, i32 -2145168168, i32 -2145168062, i32 -2145167960, i32 -2145167927, i32 -2145167854, i32 -2145167786, i32 -2145170933, i32 -2145170880, i32 -2145170849, i32 -2145170818, i32 -2145170797, i32 -2145170775, i32 -2145170726, i32 -2145170705, i32 -2145167731, i32 -2145167642, i32 -2145167521, i32 -2145167422, i32 -2145167316, i32 -2145167214, i32 -2145167181, i32 -2145167098, i32 -2145167009, i32 -2145166888, i32 -2145166788, i32 -2145166762, i32 -2145166659, i32 -2145166633, i32 -2145170447, i32 -2145170380, i32 -2145170355, i32 -2145170291, i32 -2145170175, i32 -2145170150, i32 -2145170125}
!3679 = !DILocation(line: 0, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 1631, column: 14)
!3681 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 1631, column: 7)
!3682 = !DILocation(line: 1713, column: 1, scope: !3224)
!3683 = distinct !DISubprogram(name: "bind", scope: !3, file: !3, line: 525, type: !3684, isLocal: false, isDefinition: true, scopeLine: 526, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3686)
!3684 = !DISubroutineType(types: !3685)
!3685 = !{!80, !80, !228, !1890}
!3686 = !{!3687, !3688, !3689, !3690, !3691, !3692, !3698, !3699, !3708}
!3687 = !DILocalVariable(name: "s", arg: 1, scope: !3683, file: !3, line: 525, type: !80)
!3688 = !DILocalVariable(name: "name", arg: 2, scope: !3683, file: !3, line: 525, type: !228)
!3689 = !DILocalVariable(name: "namelen", arg: 3, scope: !3683, file: !3, line: 525, type: !1890)
!3690 = !DILocalVariable(name: "ret", scope: !3683, file: !3, line: 527, type: !80)
!3691 = !DILocalVariable(name: "file", scope: !3683, file: !3, line: 528, type: !1077)
!3692 = !DILocalVariable(name: "tid", scope: !3693, file: !3, line: 530, type: !170)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !3, line: 530, column: 2)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 530, column: 2)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 530, column: 2)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 530, column: 2)
!3697 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 530, column: 2)
!3698 = !DILocalVariable(name: "_ret", scope: !3693, file: !3, line: 530, type: !135)
!3699 = !DILocalVariable(name: "tid", scope: !3700, file: !3, line: 536, type: !170)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 536, column: 3)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 536, column: 3)
!3702 = distinct !DILexicalBlock(scope: !3703, file: !3, line: 536, column: 3)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !3, line: 536, column: 3)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 536, column: 3)
!3705 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 536, column: 3)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 531, column: 22)
!3707 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 531, column: 6)
!3708 = !DILocalVariable(name: "tid", scope: !3709, file: !3, line: 548, type: !170)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !3, line: 548, column: 2)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 548, column: 2)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 548, column: 2)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 548, column: 2)
!3713 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 548, column: 2)
!3714 = !DILocation(line: 525, column: 14, scope: !3683)
!3715 = !DILocation(line: 525, column: 40, scope: !3683)
!3716 = !DILocation(line: 525, column: 56, scope: !3683)
!3717 = !DILocation(line: 527, column: 6, scope: !3683)
!3718 = !DILocation(line: 528, column: 2, scope: !3683)
!3719 = !DILocation(line: 528, column: 24, scope: !3683)
!3720 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3721)
!3721 = distinct !DILocation(line: 530, column: 2, scope: !3696)
!3722 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3721)
!3723 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3721)
!3724 = !DILocation(line: 530, column: 2, scope: !3696)
!3725 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3726)
!3726 = distinct !DILocation(line: 530, column: 2, scope: !3696)
!3727 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3726)
!3728 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3726)
!3729 = !DILocation(line: 530, column: 2, scope: !3697)
!3730 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !3731)
!3731 = distinct !DILocation(line: 530, column: 2, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 530, column: 2)
!3733 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !3731)
!3734 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !3731)
!3735 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !3731)
!3736 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !3731)
!3737 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !3731)
!3738 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !3731)
!3739 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !3731)
!3740 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !3731)
!3741 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !3731)
!3742 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !3731)
!3743 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !3731)
!3744 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !3731)
!3745 = !DILocation(line: 0, scope: !3086, inlinedAt: !3731)
!3746 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !3731)
!3747 = !DILocation(line: 530, column: 2, scope: !3732)
!3748 = !DILocation(line: 531, column: 6, scope: !3707)
!3749 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3750)
!3750 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3751)
!3751 = distinct !DILocation(line: 530, column: 2, scope: !3693)
!3752 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3750)
!3753 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3750)
!3754 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3751)
!3755 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3751)
!3756 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3751)
!3757 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3751)
!3758 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3751)
!3759 = !DILocation(line: 530, column: 2, scope: !3693)
!3760 = !{i32 -2145653226, i32 -2145653213, i32 -2145653188, i32 -2145653164, i32 -2145653139, i32 -2145653064, i32 -2145653039, i32 -2145652895, i32 -2145649763, i32 -2145649674, i32 -2145649553, i32 -2145649458, i32 -2145649357, i32 -2145649330, i32 -2145649247, i32 -2145649158, i32 -2145649037, i32 -2145648937, i32 -2145648831, i32 -2145648723, i32 -2145652607, i32 -2145652554, i32 -2145652523, i32 -2145652492, i32 -2145652471, i32 -2145652449, i32 -2145652400, i32 -2145652379, i32 -2145648640, i32 -2145648551, i32 -2145648430, i32 -2145648331, i32 -2145648225, i32 -2145648123, i32 -2145648090, i32 -2145648017, i32 -2145647949, i32 -2145652075, i32 -2145652016, i32 -2145651963, i32 -2145651932, i32 -2145651901, i32 -2145651880, i32 -2145651858, i32 -2145651809, i32 -2145651788, i32 -2145647896, i32 -2145647807, i32 -2145647686, i32 -2145647587, i32 -2145647481, i32 -2145647379, i32 -2145647346, i32 -2145647263, i32 -2145647174, i32 -2145647053, i32 -2145646953, i32 -2145646927, i32 -2145646824, i32 -2145646798, i32 -2145651530, i32 -2145651463, i32 -2145651438, i32 -2145651374, i32 -2145651292, i32 -2145651269, i32 -2145651244, i32 -2145651219}
!3761 = !DILocation(line: 530, column: 2, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 530, column: 2)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 530, column: 2)
!3764 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 530, column: 2)
!3765 = !{i32 -2145650031, i32 -2145650015}
!3766 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3767)
!3767 = distinct !DILocation(line: 536, column: 3, scope: !3703)
!3768 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3767)
!3769 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3767)
!3770 = !DILocation(line: 536, column: 3, scope: !3703)
!3771 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3772)
!3772 = distinct !DILocation(line: 536, column: 3, scope: !3703)
!3773 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3772)
!3774 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3772)
!3775 = !DILocation(line: 536, column: 3, scope: !3704)
!3776 = !DILocation(line: 536, column: 3, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3703, file: !3, line: 536, column: 3)
!3778 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !3779)
!3779 = distinct !DILocation(line: 536, column: 3, scope: !3777)
!3780 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !3779)
!3781 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3779)
!3782 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3779)
!3783 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3779)
!3784 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3785)
!3785 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3786)
!3786 = distinct !DILocation(line: 536, column: 3, scope: !3700)
!3787 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3785)
!3788 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3785)
!3789 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3786)
!3790 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3786)
!3791 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3786)
!3792 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3786)
!3793 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3786)
!3794 = !DILocation(line: 536, column: 3, scope: !3700)
!3795 = !{i32 -2145644543, i32 -2145644530, i32 -2145644505, i32 -2145644481, i32 -2145644456, i32 -2145644381, i32 -2145644356, i32 -2145644212, i32 -2145641971, i32 -2145641882, i32 -2145641761, i32 -2145641666, i32 -2145641565, i32 -2145641538, i32 -2145641455, i32 -2145641366, i32 -2145641245, i32 -2145641145, i32 -2145641039, i32 -2145640931, i32 -2145643924, i32 -2145643871, i32 -2145643840, i32 -2145643809, i32 -2145643788, i32 -2145643766, i32 -2145643717, i32 -2145643696, i32 -2145640848, i32 -2145640759, i32 -2145640638, i32 -2145640539, i32 -2145640433, i32 -2145640331, i32 -2145640298, i32 -2145640225, i32 -2145640157, i32 -2145643322, i32 -2145643269, i32 -2145643238, i32 -2145643207, i32 -2145643186, i32 -2145643164, i32 -2145643115, i32 -2145643094, i32 -2145640102, i32 -2145640013, i32 -2145639892, i32 -2145639793, i32 -2145639687, i32 -2145639585, i32 -2145639552, i32 -2145639469, i32 -2145639380, i32 -2145639259, i32 -2145639159, i32 -2145639133, i32 -2145639030, i32 -2145639004, i32 -2145642836, i32 -2145642769, i32 -2145642744, i32 -2145642680, i32 -2145642564, i32 -2145642539, i32 -2145642514}
!3796 = !DILocation(line: 540, column: 24, scope: !3683)
!3797 = !DILocation(line: 540, column: 8, scope: !3683)
!3798 = !DILocation(line: 541, column: 10, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 541, column: 6)
!3800 = !DILocation(line: 541, column: 6, scope: !3683)
!3801 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3802)
!3802 = distinct !DILocation(line: 548, column: 2, scope: !3712)
!3803 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3802)
!3804 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3802)
!3805 = !DILocation(line: 548, column: 2, scope: !3712)
!3806 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3807)
!3807 = distinct !DILocation(line: 548, column: 2, scope: !3712)
!3808 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3807)
!3809 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3807)
!3810 = !DILocation(line: 548, column: 2, scope: !3713)
!3811 = !DILocation(line: 548, column: 2, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 548, column: 2)
!3813 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3814)
!3814 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3815)
!3815 = distinct !DILocation(line: 548, column: 2, scope: !3709)
!3816 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3814)
!3817 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3814)
!3818 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3815)
!3819 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3815)
!3820 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3815)
!3821 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3815)
!3822 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3815)
!3823 = !DILocation(line: 548, column: 2, scope: !3709)
!3824 = !{i32 -2145637040, i32 -2145637027, i32 -2145637002, i32 -2145636978, i32 -2145636953, i32 -2145636878, i32 -2145636853, i32 -2145636709, i32 -2145634482, i32 -2145634393, i32 -2145634272, i32 -2145634177, i32 -2145634076, i32 -2145634049, i32 -2145633966, i32 -2145633877, i32 -2145633756, i32 -2145633656, i32 -2145633550, i32 -2145633442, i32 -2145636421, i32 -2145636368, i32 -2145636337, i32 -2145636306, i32 -2145636285, i32 -2145636263, i32 -2145636214, i32 -2145636193, i32 -2145633359, i32 -2145633270, i32 -2145633149, i32 -2145633050, i32 -2145632944, i32 -2145632842, i32 -2145632809, i32 -2145632736, i32 -2145632668, i32 -2145635819, i32 -2145635766, i32 -2145635735, i32 -2145635704, i32 -2145635683, i32 -2145635661, i32 -2145635612, i32 -2145635591, i32 -2145632616, i32 -2145632527, i32 -2145632406, i32 -2145632307, i32 -2145632201, i32 -2145632099, i32 -2145632066, i32 -2145631983, i32 -2145631894, i32 -2145631773, i32 -2145631673, i32 -2145631647, i32 -2145631544, i32 -2145631518, i32 -2145635333, i32 -2145635266, i32 -2145635241, i32 -2145635177, i32 -2145635061, i32 -2145635036, i32 -2145635011}
!3825 = !DILocation(line: 0, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 541, column: 15)
!3827 = !DILocation(line: 551, column: 1, scope: !3683)
!3828 = !DILocation(line: 550, column: 2, scope: !3683)
!3829 = distinct !DISubprogram(name: "lwip_bind", scope: !3, file: !3, line: 1716, type: !3684, isLocal: false, isDefinition: true, scopeLine: 1717, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3830)
!3830 = !{!3831, !3832, !3833, !3834, !3835, !3836, !3837, !3838, !3842, !3848, !3853, !3859, !3863, !3869, !3871}
!3831 = !DILocalVariable(name: "s", arg: 1, scope: !3829, file: !3, line: 1716, type: !80)
!3832 = !DILocalVariable(name: "name", arg: 2, scope: !3829, file: !3, line: 1716, type: !228)
!3833 = !DILocalVariable(name: "namelen", arg: 3, scope: !3829, file: !3, line: 1716, type: !1890)
!3834 = !DILocalVariable(name: "sock", scope: !3829, file: !3, line: 1718, type: !1165)
!3835 = !DILocalVariable(name: "local_addr", scope: !3829, file: !3, line: 1719, type: !1183)
!3836 = !DILocalVariable(name: "local_port", scope: !3829, file: !3, line: 1720, type: !164)
!3837 = !DILocalVariable(name: "err", scope: !3829, file: !3, line: 1721, type: !1283)
!3838 = !DILocalVariable(name: "sockerr", scope: !3839, file: !3, line: 1730, type: !1007)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1730, column: 5)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !3, line: 1728, column: 42)
!3841 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1728, column: 7)
!3842 = !DILocalVariable(name: "tid", scope: !3843, file: !3, line: 1730, type: !170)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 1730, column: 5)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 1730, column: 5)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 1730, column: 5)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 1730, column: 5)
!3847 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 1730, column: 5)
!3848 = !DILocalVariable(name: "sockerr", scope: !3849, file: !3, line: 1736, type: !1007)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 1736, column: 3)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 1736, column: 3)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 1736, column: 3)
!3852 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1736, column: 3)
!3853 = !DILocalVariable(name: "tid", scope: !3854, file: !3, line: 1736, type: !170)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1736, column: 3)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 1736, column: 3)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1736, column: 3)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 1736, column: 3)
!3858 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 1736, column: 3)
!3859 = !DILocalVariable(name: "sockerr", scope: !3860, file: !3, line: 1758, type: !1007)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 1758, column: 5)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 1756, column: 22)
!3862 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1756, column: 7)
!3863 = !DILocalVariable(name: "tid", scope: !3864, file: !3, line: 1758, type: !170)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 1758, column: 5)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1758, column: 5)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 1758, column: 5)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 1758, column: 5)
!3868 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 1758, column: 5)
!3869 = !DILocalVariable(name: "sockerr", scope: !3870, file: !3, line: 1764, type: !1007)
!3870 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1764, column: 3)
!3871 = !DILocalVariable(name: "tid", scope: !3872, file: !3, line: 1764, type: !170)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 1764, column: 3)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !3, line: 1764, column: 3)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 1764, column: 3)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 1764, column: 3)
!3876 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 1764, column: 3)
!3877 = !DILocation(line: 1716, column: 15, scope: !3829)
!3878 = !DILocation(line: 1716, column: 41, scope: !3829)
!3879 = !DILocation(line: 1716, column: 57, scope: !3829)
!3880 = !DILocation(line: 1719, column: 3, scope: !3829)
!3881 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !3882)
!3882 = distinct !DILocation(line: 1723, column: 10, scope: !3829)
!3883 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !3884)
!3884 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !3882)
!3885 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !3886)
!3886 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !3884)
!3887 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !3888)
!3888 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !3886)
!3889 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !3888)
!3890 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !3888)
!3891 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !3888)
!3892 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !3886)
!3893 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !3884)
!3894 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !3888)
!3895 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !3884)
!3896 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !3884)
!3897 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !3884)
!3898 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !3884)
!3899 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3900)
!3900 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !3882)
!3901 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3900)
!3902 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3900)
!3903 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !3882)
!3904 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3905)
!3905 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !3882)
!3906 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3905)
!3907 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3905)
!3908 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !3882)
!3909 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !3910)
!3910 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !3882)
!3911 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3910)
!3912 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3910)
!3913 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3910)
!3914 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !3882)
!3915 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3916)
!3916 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3917)
!3917 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !3882)
!3918 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3916)
!3919 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3916)
!3920 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3917)
!3921 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3917)
!3922 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3917)
!3923 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3917)
!3924 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3917)
!3925 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !3882)
!3926 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !3882)
!3927 = !DILocation(line: 1724, column: 7, scope: !3829)
!3928 = !DILocation(line: 1728, column: 8, scope: !3841)
!3929 = !{!3930, !1405, i64 1}
!3930 = !{!"sockaddr", !1405, i64 0, !1405, i64 1, !1405, i64 2}
!3931 = !DILocation(line: 1728, column: 7, scope: !3829)
!3932 = !DILocation(line: 1730, column: 5, scope: !3839)
!3933 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3934)
!3934 = distinct !DILocation(line: 1730, column: 5, scope: !3846)
!3935 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3934)
!3936 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3934)
!3937 = !DILocation(line: 1730, column: 5, scope: !3846)
!3938 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3939)
!3939 = distinct !DILocation(line: 1730, column: 5, scope: !3846)
!3940 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3939)
!3941 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3939)
!3942 = !DILocation(line: 1730, column: 5, scope: !3847)
!3943 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !3944)
!3944 = distinct !DILocation(line: 1730, column: 5, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 1730, column: 5)
!3946 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !3944)
!3947 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !3944)
!3948 = !DILocation(line: 1730, column: 5, scope: !3945)
!3949 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3950)
!3950 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3951)
!3951 = distinct !DILocation(line: 1730, column: 5, scope: !3843)
!3952 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3950)
!3953 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3950)
!3954 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3951)
!3955 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3951)
!3956 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3951)
!3957 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3951)
!3958 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3951)
!3959 = !DILocation(line: 1730, column: 5, scope: !3843)
!3960 = !{i32 -2145164268, i32 -2145164255, i32 -2145164230, i32 -2145164206, i32 -2145164181, i32 -2145164106, i32 -2145164081, i32 -2145163937, i32 -2145161714, i32 -2145161625, i32 -2145161504, i32 -2145161409, i32 -2145161308, i32 -2145161281, i32 -2145161198, i32 -2145161109, i32 -2145160988, i32 -2145160888, i32 -2145160782, i32 -2145160674, i32 -2145163649, i32 -2145163596, i32 -2145163565, i32 -2145163534, i32 -2145163513, i32 -2145163491, i32 -2145163442, i32 -2145163421, i32 -2145160591, i32 -2145160502, i32 -2145160381, i32 -2145160282, i32 -2145160176, i32 -2145160074, i32 -2145160041, i32 -2145159968, i32 -2145159900, i32 -2145163047, i32 -2145162994, i32 -2145162963, i32 -2145162932, i32 -2145162911, i32 -2145162889, i32 -2145162840, i32 -2145162819, i32 -2145159845, i32 -2145159756, i32 -2145159635, i32 -2145159536, i32 -2145159430, i32 -2145159328, i32 -2145159295, i32 -2145159212, i32 -2145159123, i32 -2145159002, i32 -2145158902, i32 -2145158876, i32 -2145158773, i32 -2145158747, i32 -2145162561, i32 -2145162494, i32 -2145162469, i32 -2145162405, i32 -2145162289, i32 -2145162264, i32 -2145162239}
!3961 = !DILocation(line: 1736, column: 3, scope: !3851)
!3962 = !DILocation(line: 1736, column: 3, scope: !3852)
!3963 = !DILocation(line: 1736, column: 3, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 1736, column: 3)
!3965 = !DILocation(line: 1736, column: 3, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1736, column: 3)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 1736, column: 3)
!3968 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 1736, column: 3)
!3969 = !DILocation(line: 1719, column: 13, scope: !3829)
!3970 = !DILocalVariable(name: "sockaddr", arg: 1, scope: !3971, file: !3, line: 1304, type: !228)
!3971 = distinct !DISubprogram(name: "sockaddr_to_ipaddr_port", scope: !3, file: !3, line: 1304, type: !3972, isLocal: true, isDefinition: true, scopeLine: 1305, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3976)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{null, !228, !3974, !3975}
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!3976 = !{!3970, !3977, !3978}
!3977 = !DILocalVariable(name: "ipaddr", arg: 2, scope: !3971, file: !3, line: 1304, type: !3974)
!3978 = !DILocalVariable(name: "port", arg: 3, scope: !3971, file: !3, line: 1304, type: !3975)
!3979 = !DILocation(line: 1304, column: 48, scope: !3971, inlinedAt: !3980)
!3980 = distinct !DILocation(line: 1741, column: 3, scope: !3829)
!3981 = !DILocation(line: 1304, column: 69, scope: !3971, inlinedAt: !3980)
!3982 = !DILocation(line: 1306, column: 29, scope: !3983, inlinedAt: !3980)
!3983 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1306, column: 7)
!3984 = !DILocation(line: 1306, column: 7, scope: !3971, inlinedAt: !3980)
!3985 = !DILocation(line: 1307, column: 5, scope: !3986, inlinedAt: !3980)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1307, column: 5)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 1307, column: 5)
!3988 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 1306, column: 42)
!3989 = !DILocation(line: 1307, column: 5, scope: !3990, inlinedAt: !3980)
!3990 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1307, column: 5)
!3991 = !DILocation(line: 1307, column: 5, scope: !3992, inlinedAt: !3980)
!3992 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 1307, column: 5)
!3993 = !DILocation(line: 1310, column: 5, scope: !3994, inlinedAt: !3980)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 1310, column: 5)
!3995 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 1309, column: 10)
!3996 = !DILocation(line: 1311, column: 13, scope: !3995, inlinedAt: !3980)
!3997 = !DILocation(line: 1311, column: 18, scope: !3995, inlinedAt: !3980)
!3998 = !DILocation(line: 1313, column: 1, scope: !3971, inlinedAt: !3980)
!3999 = !DILocation(line: 1748, column: 32, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1748, column: 7)
!4001 = !DILocation(line: 1307, column: 5, scope: !3987, inlinedAt: !3980)
!4002 = !DILocation(line: 1308, column: 13, scope: !3988, inlinedAt: !3980)
!4003 = !DILocation(line: 1308, column: 18, scope: !3988, inlinedAt: !3980)
!4004 = !DILocation(line: 1748, column: 35, scope: !4000)
!4005 = !DILocation(line: 1749, column: 5, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 1748, column: 85)
!4007 = !DILocation(line: 1750, column: 5, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 1750, column: 5)
!4009 = !DILocation(line: 1751, column: 3, scope: !4006)
!4010 = !DILocation(line: 1754, column: 28, scope: !3829)
!4011 = !DILocation(line: 1720, column: 9, scope: !3829)
!4012 = !DILocation(line: 1754, column: 9, scope: !3829)
!4013 = !DILocation(line: 1721, column: 9, scope: !3829)
!4014 = !DILocation(line: 1756, column: 11, scope: !3862)
!4015 = !DILocation(line: 1756, column: 7, scope: !3829)
!4016 = !DILocation(line: 1758, column: 5, scope: !3860)
!4017 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4018)
!4018 = distinct !DILocation(line: 1758, column: 5, scope: !3867)
!4019 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4018)
!4020 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4018)
!4021 = !DILocation(line: 1758, column: 5, scope: !3867)
!4022 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4023)
!4023 = distinct !DILocation(line: 1758, column: 5, scope: !3867)
!4024 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4023)
!4025 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4023)
!4026 = !DILocation(line: 1758, column: 5, scope: !3868)
!4027 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !4028)
!4028 = distinct !DILocation(line: 1758, column: 5, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 1758, column: 5)
!4030 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !4028)
!4031 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !4028)
!4032 = !DILocation(line: 1758, column: 5, scope: !4029)
!4033 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4034)
!4034 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4035)
!4035 = distinct !DILocation(line: 1758, column: 5, scope: !3864)
!4036 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4034)
!4037 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4034)
!4038 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4035)
!4039 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4035)
!4040 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4035)
!4041 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4035)
!4042 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4035)
!4043 = !DILocation(line: 1758, column: 5, scope: !3864)
!4044 = !{i32 -2145135525, i32 -2145135512, i32 -2145135487, i32 -2145135463, i32 -2145135438, i32 -2145135363, i32 -2145135338, i32 -2145135194, i32 -2145132971, i32 -2145132882, i32 -2145132761, i32 -2145132666, i32 -2145132565, i32 -2145132538, i32 -2145132455, i32 -2145132366, i32 -2145132245, i32 -2145132145, i32 -2145132039, i32 -2145131931, i32 -2145134906, i32 -2145134853, i32 -2145134822, i32 -2145134791, i32 -2145134770, i32 -2145134748, i32 -2145134699, i32 -2145134678, i32 -2145131848, i32 -2145131759, i32 -2145131638, i32 -2145131539, i32 -2145131433, i32 -2145131331, i32 -2145131298, i32 -2145131225, i32 -2145131157, i32 -2145134304, i32 -2145134251, i32 -2145134220, i32 -2145134189, i32 -2145134168, i32 -2145134146, i32 -2145134097, i32 -2145134076, i32 -2145131102, i32 -2145131013, i32 -2145130892, i32 -2145130793, i32 -2145130687, i32 -2145130585, i32 -2145130552, i32 -2145130469, i32 -2145130380, i32 -2145130259, i32 -2145130159, i32 -2145130133, i32 -2145130030, i32 -2145130004, i32 -2145133818, i32 -2145133751, i32 -2145133726, i32 -2145133662, i32 -2145133546, i32 -2145133521, i32 -2145133496}
!4045 = !DILocation(line: 1764, column: 3, scope: !3870)
!4046 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4047)
!4047 = distinct !DILocation(line: 1764, column: 3, scope: !3875)
!4048 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4047)
!4049 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4047)
!4050 = !DILocation(line: 1764, column: 3, scope: !3875)
!4051 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4052)
!4052 = distinct !DILocation(line: 1764, column: 3, scope: !3875)
!4053 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4052)
!4054 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4052)
!4055 = !DILocation(line: 1764, column: 3, scope: !3876)
!4056 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !4057)
!4057 = distinct !DILocation(line: 1764, column: 3, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 1764, column: 3)
!4059 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !4057)
!4060 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !4057)
!4061 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !4057)
!4062 = !DILocation(line: 1764, column: 3, scope: !4058)
!4063 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4064)
!4064 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4065)
!4065 = distinct !DILocation(line: 1764, column: 3, scope: !3872)
!4066 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4064)
!4067 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4064)
!4068 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4065)
!4069 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4065)
!4070 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4065)
!4071 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4065)
!4072 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4065)
!4073 = !DILocation(line: 1764, column: 3, scope: !3872)
!4074 = !{i32 -2145127968, i32 -2145127955, i32 -2145127930, i32 -2145127906, i32 -2145127881, i32 -2145127806, i32 -2145127781, i32 -2145127637, i32 -2145125414, i32 -2145125325, i32 -2145125204, i32 -2145125109, i32 -2145125008, i32 -2145124981, i32 -2145124898, i32 -2145124809, i32 -2145124688, i32 -2145124588, i32 -2145124482, i32 -2145124374, i32 -2145127349, i32 -2145127296, i32 -2145127265, i32 -2145127234, i32 -2145127213, i32 -2145127191, i32 -2145127142, i32 -2145127121, i32 -2145124291, i32 -2145124202, i32 -2145124081, i32 -2145123982, i32 -2145123876, i32 -2145123774, i32 -2145123741, i32 -2145123668, i32 -2145123600, i32 -2145126747, i32 -2145126694, i32 -2145126663, i32 -2145126632, i32 -2145126611, i32 -2145126589, i32 -2145126540, i32 -2145126519, i32 -2145123545, i32 -2145123456, i32 -2145123335, i32 -2145123236, i32 -2145123130, i32 -2145123028, i32 -2145122995, i32 -2145122912, i32 -2145122823, i32 -2145122702, i32 -2145122602, i32 -2145122576, i32 -2145122473, i32 -2145122447, i32 -2145126261, i32 -2145126194, i32 -2145126169, i32 -2145126105, i32 -2145125989, i32 -2145125964, i32 -2145125939}
!4075 = !DILocation(line: 0, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1724, column: 14)
!4077 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1724, column: 7)
!4078 = !DILocation(line: 1767, column: 1, scope: !3829)
!4079 = distinct !DISubprogram(name: "poll", scope: !3, file: !3, line: 553, type: !4080, isLocal: false, isDefinition: true, scopeLine: 554, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4082)
!4080 = !DISubroutineType(types: !4081)
!4081 = !{!80, !258, !265, !80}
!4082 = !{!4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4094, !4105, !4106}
!4083 = !DILocalVariable(name: "fds", arg: 1, scope: !4079, file: !3, line: 553, type: !258)
!4084 = !DILocalVariable(name: "nfds", arg: 2, scope: !4079, file: !3, line: 553, type: !265)
!4085 = !DILocalVariable(name: "timeout", arg: 3, scope: !4079, file: !3, line: 553, type: !80)
!4086 = !DILocalVariable(name: "ret", scope: !4079, file: !3, line: 555, type: !80)
!4087 = !DILocalVariable(name: "i", scope: !4079, file: !3, line: 556, type: !7)
!4088 = !DILocalVariable(name: "file", scope: !4079, file: !3, line: 557, type: !1077)
!4089 = !DILocalVariable(scope: !4079, type: !134, flags: DIFlagArtificial)
!4090 = !DILocalVariable(name: "lwip_fds", scope: !4079, file: !3, line: 558, type: !4091)
!4091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !259, elements: !4092)
!4092 = !{!4093}
!4093 = !DISubrange(count: !4089)
!4094 = !DILocalVariable(name: "tid", scope: !4095, file: !3, line: 564, type: !170)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 564, column: 4)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 564, column: 4)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 564, column: 4)
!4098 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 564, column: 4)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 564, column: 4)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 563, column: 8)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !3, line: 561, column: 7)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 560, column: 29)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 560, column: 2)
!4104 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 560, column: 2)
!4105 = !DILocalVariable(name: "_ret", scope: !4095, file: !3, line: 564, type: !135)
!4106 = !DILocalVariable(name: "tid", scope: !4107, file: !3, line: 571, type: !170)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 571, column: 5)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 571, column: 5)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 571, column: 5)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 571, column: 5)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 571, column: 5)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !3, line: 571, column: 5)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 566, column: 24)
!4114 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 566, column: 8)
!4115 = !DILocation(line: 553, column: 24, scope: !4079)
!4116 = !DILocation(line: 553, column: 38, scope: !4079)
!4117 = !DILocation(line: 553, column: 48, scope: !4079)
!4118 = !DILocation(line: 557, column: 2, scope: !4079)
!4119 = !DILocation(line: 558, column: 2, scope: !4079)
!4120 = !DILocation(line: 0, scope: !4079)
!4121 = !DILocation(line: 558, column: 16, scope: !4079)
!4122 = !DILocation(line: 556, column: 15, scope: !4079)
!4123 = !DILocation(line: 560, column: 16, scope: !4103)
!4124 = !DILocation(line: 560, column: 2, scope: !4104)
!4125 = !DILocation(line: 561, column: 14, scope: !4101)
!4126 = !{!4127, !1409, i64 0}
!4127 = !{!"pollfd", !1409, i64 0, !1604, i64 4, !1604, i64 6}
!4128 = !DILocation(line: 561, column: 17, scope: !4101)
!4129 = !DILocation(line: 561, column: 7, scope: !4102)
!4130 = !DILocation(line: 562, column: 16, scope: !4101)
!4131 = !DILocation(line: 562, column: 19, scope: !4101)
!4132 = !DILocation(line: 562, column: 4, scope: !4101)
!4133 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4134)
!4134 = distinct !DILocation(line: 564, column: 4, scope: !4098)
!4135 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4134)
!4136 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4134)
!4137 = !DILocation(line: 564, column: 4, scope: !4098)
!4138 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4139)
!4139 = distinct !DILocation(line: 564, column: 4, scope: !4098)
!4140 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4139)
!4141 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4139)
!4142 = !DILocation(line: 564, column: 4, scope: !4099)
!4143 = !DILocation(line: 564, column: 4, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 564, column: 4)
!4145 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !4146)
!4146 = distinct !DILocation(line: 564, column: 4, scope: !4144)
!4147 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !4146)
!4148 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !4146)
!4149 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !4146)
!4150 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !4146)
!4151 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !4146)
!4152 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !4146)
!4153 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !4146)
!4154 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !4146)
!4155 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !4146)
!4156 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !4146)
!4157 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !4146)
!4158 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !4146)
!4159 = !DILocation(line: 0, scope: !3086, inlinedAt: !4146)
!4160 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !4146)
!4161 = !DILocation(line: 557, column: 24, scope: !4079)
!4162 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4163)
!4163 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4164)
!4164 = distinct !DILocation(line: 564, column: 4, scope: !4095)
!4165 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4163)
!4166 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4163)
!4167 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4164)
!4168 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4164)
!4169 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4164)
!4170 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4164)
!4171 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4164)
!4172 = !DILocation(line: 564, column: 4, scope: !4095)
!4173 = !{i32 -2145629499, i32 -2145629486, i32 -2145629461, i32 -2145629437, i32 -2145629412, i32 -2145629337, i32 -2145629312, i32 -2145629168, i32 -2145626028, i32 -2145625939, i32 -2145625818, i32 -2145625723, i32 -2145625622, i32 -2145625595, i32 -2145625512, i32 -2145625423, i32 -2145625302, i32 -2145625202, i32 -2145625096, i32 -2145624988, i32 -2145628880, i32 -2145628827, i32 -2145628796, i32 -2145628765, i32 -2145628744, i32 -2145628722, i32 -2145628673, i32 -2145628652, i32 -2145624905, i32 -2145624816, i32 -2145624695, i32 -2145624596, i32 -2145624490, i32 -2145624388, i32 -2145624355, i32 -2145624282, i32 -2145624214, i32 -2145628348, i32 -2145628289, i32 -2145628236, i32 -2145628205, i32 -2145628174, i32 -2145628153, i32 -2145628131, i32 -2145628082, i32 -2145628061, i32 -2145624161, i32 -2145624072, i32 -2145623951, i32 -2145623852, i32 -2145623746, i32 -2145623644, i32 -2145623611, i32 -2145623528, i32 -2145623439, i32 -2145623318, i32 -2145623218, i32 -2145623192, i32 -2145623089, i32 -2145623063, i32 -2145627803, i32 -2145627736, i32 -2145627711, i32 -2145627647, i32 -2145627565, i32 -2145627542, i32 -2145627517, i32 -2145627492}
!4174 = !DILocation(line: 564, column: 4, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 564, column: 4)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 564, column: 4)
!4177 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 564, column: 4)
!4178 = !{i32 -2145626304, i32 -2145626288}
!4179 = !DILocation(line: 566, column: 8, scope: !4114)
!4180 = !DILocation(line: 555, column: 6, scope: !4079)
!4181 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4182)
!4182 = distinct !DILocation(line: 571, column: 5, scope: !4110)
!4183 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4182)
!4184 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4182)
!4185 = !DILocation(line: 571, column: 5, scope: !4110)
!4186 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4187)
!4187 = distinct !DILocation(line: 571, column: 5, scope: !4110)
!4188 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4187)
!4189 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4187)
!4190 = !DILocation(line: 571, column: 5, scope: !4111)
!4191 = !DILocation(line: 571, column: 5, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 571, column: 5)
!4193 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !4194)
!4194 = distinct !DILocation(line: 571, column: 5, scope: !4192)
!4195 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !4194)
!4196 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !4194)
!4197 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !4194)
!4198 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !4194)
!4199 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4200)
!4200 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4201)
!4201 = distinct !DILocation(line: 571, column: 5, scope: !4107)
!4202 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4200)
!4203 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4200)
!4204 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4201)
!4205 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4201)
!4206 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4201)
!4207 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4201)
!4208 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4201)
!4209 = !DILocation(line: 571, column: 5, scope: !4107)
!4210 = !{i32 -2145620808, i32 -2145620795, i32 -2145620770, i32 -2145620746, i32 -2145620721, i32 -2145620646, i32 -2145620621, i32 -2145620477, i32 -2145618236, i32 -2145618147, i32 -2145618026, i32 -2145617931, i32 -2145617830, i32 -2145617803, i32 -2145617720, i32 -2145617631, i32 -2145617510, i32 -2145617410, i32 -2145617304, i32 -2145617196, i32 -2145620189, i32 -2145620136, i32 -2145620105, i32 -2145620074, i32 -2145620053, i32 -2145620031, i32 -2145619982, i32 -2145619961, i32 -2145617113, i32 -2145617024, i32 -2145616903, i32 -2145616804, i32 -2145616698, i32 -2145616596, i32 -2145616563, i32 -2145616490, i32 -2145616422, i32 -2145619587, i32 -2145619534, i32 -2145619503, i32 -2145619472, i32 -2145619451, i32 -2145619429, i32 -2145619380, i32 -2145619359, i32 -2145616367, i32 -2145616278, i32 -2145616157, i32 -2145616058, i32 -2145615952, i32 -2145615850, i32 -2145615817, i32 -2145615734, i32 -2145615645, i32 -2145615524, i32 -2145615424, i32 -2145615398, i32 -2145615295, i32 -2145615269, i32 -2145619101, i32 -2145619034, i32 -2145619009, i32 -2145618945, i32 -2145618829, i32 -2145618804, i32 -2145618779}
!4211 = !DILocation(line: 574, column: 27, scope: !4100)
!4212 = !DILocation(line: 574, column: 16, scope: !4100)
!4213 = !DILocation(line: 574, column: 19, scope: !4100)
!4214 = !DILocation(line: 575, column: 32, scope: !4100)
!4215 = !{!4127, !1604, i64 4}
!4216 = !DILocation(line: 575, column: 16, scope: !4100)
!4217 = !DILocation(line: 575, column: 23, scope: !4100)
!4218 = !DILocation(line: 576, column: 27, scope: !4100)
!4219 = !DILocation(line: 576, column: 4, scope: !4100)
!4220 = !DILocation(line: 560, column: 25, scope: !4103)
!4221 = distinct !{!4221, !4124, !4222}
!4222 = !DILocation(line: 578, column: 2, scope: !4104)
!4223 = !DILocation(line: 580, column: 8, scope: !4079)
!4224 = !DILocation(line: 581, column: 10, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 581, column: 6)
!4226 = !DILocation(line: 584, column: 16, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 584, column: 2)
!4228 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 584, column: 2)
!4229 = !DILocation(line: 581, column: 6, scope: !4079)
!4230 = !DILocation(line: 585, column: 14, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 585, column: 7)
!4232 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 584, column: 29)
!4233 = !DILocation(line: 585, column: 17, scope: !4231)
!4234 = !DILocation(line: 585, column: 7, scope: !4232)
!4235 = !DILocation(line: 588, column: 33, scope: !4231)
!4236 = !{!4127, !1604, i64 6}
!4237 = !DILocation(line: 586, column: 11, scope: !4231)
!4238 = !DILocation(line: 586, column: 19, scope: !4231)
!4239 = !DILocation(line: 584, column: 25, scope: !4227)
!4240 = !DILocation(line: 593, column: 1, scope: !4079)
!4241 = !DILocation(line: 584, column: 2, scope: !4228)
!4242 = distinct !{!4242, !4241, !4243}
!4243 = !DILocation(line: 589, column: 2, scope: !4228)
!4244 = distinct !DISubprogram(name: "lwip_poll", scope: !3, file: !3, line: 3317, type: !4080, isLocal: false, isDefinition: true, scopeLine: 3318, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4245)
!4245 = !{!4246, !4247, !4248, !4249, !4250, !4251, !4252, !4257, !4263, !4266, !4271, !4277, !4285}
!4246 = !DILocalVariable(name: "fds", arg: 1, scope: !4244, file: !3, line: 3317, type: !258)
!4247 = !DILocalVariable(name: "nfds", arg: 2, scope: !4244, file: !3, line: 3317, type: !265)
!4248 = !DILocalVariable(name: "timeout", arg: 3, scope: !4244, file: !3, line: 3317, type: !80)
!4249 = !DILocalVariable(name: "waitres", scope: !4244, file: !3, line: 3319, type: !169)
!4250 = !DILocalVariable(name: "nready", scope: !4244, file: !3, line: 3320, type: !80)
!4251 = !DILocalVariable(name: "msectimeout", scope: !4244, file: !3, line: 3321, type: !169)
!4252 = !DILocalVariable(name: "sockerr", scope: !4253, file: !3, line: 3328, type: !1007)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 3328, column: 3)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 3328, column: 3)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 3328, column: 3)
!4256 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 3328, column: 3)
!4257 = !DILocalVariable(name: "tid", scope: !4258, file: !3, line: 3328, type: !170)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 3328, column: 3)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 3328, column: 3)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 3328, column: 3)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 3328, column: 3)
!4262 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 3328, column: 3)
!4263 = !DILocalVariable(name: "select_cb", scope: !4264, file: !3, line: 3344, type: !238)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 3343, column: 16)
!4265 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 3343, column: 7)
!4266 = !DILocalVariable(name: "sockerr", scope: !4267, file: !3, line: 3350, type: !1007)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 3350, column: 5)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 3350, column: 5)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 3350, column: 5)
!4270 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 3350, column: 5)
!4271 = !DILocalVariable(name: "tid", scope: !4272, file: !3, line: 3350, type: !170)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 3350, column: 5)
!4273 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 3350, column: 5)
!4274 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 3350, column: 5)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 3350, column: 5)
!4276 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 3350, column: 5)
!4277 = !DILocalVariable(name: "tid", scope: !4278, file: !3, line: 3365, type: !170)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 3365, column: 7)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 3365, column: 7)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 3365, column: 7)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 3365, column: 7)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 3365, column: 7)
!4283 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 3363, column: 74)
!4284 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 3363, column: 9)
!4285 = !DILocalVariable(name: "tid", scope: !4286, file: !3, line: 3427, type: !170)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 3427, column: 3)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 3427, column: 3)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 3427, column: 3)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 3427, column: 3)
!4290 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 3427, column: 3)
!4291 = !DILocation(line: 3317, column: 26, scope: !4244)
!4292 = !DILocation(line: 3317, column: 38, scope: !4244)
!4293 = !DILocation(line: 3317, column: 48, scope: !4244)
!4294 = !DILocation(line: 3319, column: 9, scope: !4244)
!4295 = !DILocation(line: 3328, column: 3, scope: !4255)
!4296 = !DILocation(line: 3328, column: 3, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 3328, column: 3)
!4298 = !DILocation(line: 3328, column: 3, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 3328, column: 3)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 3328, column: 3)
!4301 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 3328, column: 3)
!4302 = !DILocation(line: 3335, column: 12, scope: !4244)
!4303 = !DILocation(line: 3320, column: 7, scope: !4244)
!4304 = !DILocation(line: 3337, column: 14, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 3337, column: 7)
!4306 = !DILocation(line: 3337, column: 7, scope: !4244)
!4307 = !DILocation(line: 3343, column: 8, scope: !4265)
!4308 = !DILocation(line: 3343, column: 7, scope: !4244)
!4309 = !DILocation(line: 3346, column: 17, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 3346, column: 9)
!4311 = !DILocation(line: 3346, column: 9, scope: !4264)
!4312 = !DILocation(line: 3350, column: 5, scope: !4270)
!4313 = !DILocalVariable(name: "a", arg: 1, scope: !4314, file: !388, line: 157, type: !386)
!4314 = distinct !DISubprogram(name: "uk_malloc", scope: !388, file: !388, line: 157, type: !393, isLocal: true, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4315)
!4315 = !{!4313, !4316}
!4316 = !DILocalVariable(name: "size", arg: 2, scope: !4314, file: !388, line: 157, type: !395)
!4317 = !DILocation(line: 157, column: 48, scope: !4314, inlinedAt: !4318)
!4318 = distinct !DILocation(line: 3350, column: 5, scope: !4270)
!4319 = !DILocation(line: 157, column: 58, scope: !4314, inlinedAt: !4318)
!4320 = !DILocation(line: 159, column: 6, scope: !4321, inlinedAt: !4318)
!4321 = distinct !DILexicalBlock(scope: !4314, file: !388, line: 159, column: 6)
!4322 = !DILocation(line: 159, column: 6, scope: !4314, inlinedAt: !4318)
!4323 = !DILocation(line: 160, column: 3, scope: !4324, inlinedAt: !4318)
!4324 = distinct !DILexicalBlock(scope: !4321, file: !388, line: 159, column: 20)
!4325 = !DILocation(line: 160, column: 9, scope: !4324, inlinedAt: !4318)
!4326 = !DILocation(line: 164, column: 1, scope: !4314, inlinedAt: !4318)
!4327 = !DILocation(line: 3344, column: 5, scope: !4264)
!4328 = !DILocalVariable(name: "a", arg: 1, scope: !4329, file: !388, line: 151, type: !386)
!4329 = distinct !DISubprogram(name: "uk_do_malloc", scope: !388, file: !388, line: 151, type: !393, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4330)
!4330 = !{!4328, !4331}
!4331 = !DILocalVariable(name: "size", arg: 2, scope: !4329, file: !388, line: 151, type: !395)
!4332 = !DILocation(line: 151, column: 51, scope: !4329, inlinedAt: !4333)
!4333 = distinct !DILocation(line: 163, column: 9, scope: !4314, inlinedAt: !4318)
!4334 = !DILocation(line: 151, column: 61, scope: !4329, inlinedAt: !4333)
!4335 = !DILocation(line: 154, column: 12, scope: !4329, inlinedAt: !4333)
!4336 = !DILocation(line: 154, column: 9, scope: !4329, inlinedAt: !4333)
!4337 = !DILocation(line: 154, column: 2, scope: !4329, inlinedAt: !4333)
!4338 = !DILocation(line: 3350, column: 5, scope: !4269)
!4339 = !DILocation(line: 3350, column: 5, scope: !4267)
!4340 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4341)
!4341 = distinct !DILocation(line: 3350, column: 5, scope: !4275)
!4342 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4341)
!4343 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4341)
!4344 = !DILocation(line: 3350, column: 5, scope: !4275)
!4345 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4346)
!4346 = distinct !DILocation(line: 3350, column: 5, scope: !4275)
!4347 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4346)
!4348 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4346)
!4349 = !DILocation(line: 3350, column: 5, scope: !4276)
!4350 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !4351)
!4351 = distinct !DILocation(line: 3350, column: 5, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 3350, column: 5)
!4353 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !4351)
!4354 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !4351)
!4355 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !4351)
!4356 = !DILocation(line: 3350, column: 5, scope: !4352)
!4357 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4358)
!4358 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4359)
!4359 = distinct !DILocation(line: 3350, column: 5, scope: !4272)
!4360 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4358)
!4361 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4358)
!4362 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4359)
!4363 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4359)
!4364 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4359)
!4365 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4359)
!4366 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4359)
!4367 = !DILocation(line: 3350, column: 5, scope: !4272)
!4368 = !{i32 -2144695454, i32 -2144695441, i32 -2144695416, i32 -2144695392, i32 -2144695367, i32 -2144695350, i32 -2144695325, i32 -2144695308, i32 -2144695285, i32 -2144695264, i32 -2144695230, i32 -2144695211, i32 -2144695189, i32 -2144695162, i32 -2144695139, i32 -2144695118, i32 -2144695084, i32 -2144695060, i32 -2144695035, i32 -2144695007, i32 -2144694998, i32 -2144694945, i32 -2144694914, i32 -2144694883, i32 -2144694862, i32 -2144694840, i32 -2144694791, i32 -2144694770, i32 -2144694747, i32 -2144694726, i32 -2144694692, i32 -2144694669, i32 -2144694644, i32 -2144694622, i32 -2144694589, i32 -2144694566, i32 -2144694529, i32 -2144694520, i32 -2144694467, i32 -2144694436, i32 -2144694405, i32 -2144694384, i32 -2144694362, i32 -2144694313, i32 -2144694292, i32 -2144694269, i32 -2144694248, i32 -2144694214, i32 -2144694191, i32 -2144694166, i32 -2144694144, i32 -2144694111, i32 -2144694088, i32 -2144694067, i32 -2144694033, i32 -2144694011, i32 -2144693985, i32 -2144693963, i32 -2144693937, i32 -2144693921, i32 -2144693905, i32 -2144693880, i32 -2144693865, i32 -2144693850, i32 -2144693825, i32 -2144693800}
!4369 = !DILocation(line: 3351, column: 5, scope: !4264)
!4370 = !DILocation(line: 3358, column: 38, scope: !4264)
!4371 = !DILocation(line: 3358, column: 47, scope: !4264)
!4372 = !{!4373, !1408, i64 40}
!4373 = !{!"lwip_select_cb", !1408, i64 0, !1408, i64 8, !1408, i64 16, !1408, i64 24, !1408, i64 32, !1408, i64 40, !1409, i64 48, !1409, i64 52, !1649, i64 56}
!4374 = !DILocation(line: 3359, column: 38, scope: !4264)
!4375 = !DILocation(line: 3359, column: 48, scope: !4264)
!4376 = !{!4373, !1409, i64 48}
!4377 = !DILocation(line: 3363, column: 55, scope: !4284)
!4378 = !DILocation(line: 3363, column: 9, scope: !4284)
!4379 = !DILocation(line: 3363, column: 63, scope: !4284)
!4380 = !DILocation(line: 3363, column: 9, scope: !4264)
!4381 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4382)
!4382 = distinct !DILocation(line: 3365, column: 7, scope: !4281)
!4383 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4382)
!4384 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4382)
!4385 = !DILocation(line: 3365, column: 7, scope: !4281)
!4386 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4387)
!4387 = distinct !DILocation(line: 3365, column: 7, scope: !4281)
!4388 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4387)
!4389 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4387)
!4390 = !DILocation(line: 3365, column: 7, scope: !4282)
!4391 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !4392)
!4392 = distinct !DILocation(line: 3365, column: 7, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 3365, column: 7)
!4394 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !4392)
!4395 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !4392)
!4396 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !4392)
!4397 = !DILocation(line: 3365, column: 7, scope: !4393)
!4398 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4399)
!4399 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4400)
!4400 = distinct !DILocation(line: 3365, column: 7, scope: !4278)
!4401 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4399)
!4402 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4399)
!4403 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4400)
!4404 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4400)
!4405 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4400)
!4406 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4400)
!4407 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4400)
!4408 = !DILocation(line: 3365, column: 7, scope: !4278)
!4409 = !{i32 -2144691375, i32 -2144691362, i32 -2144691337, i32 -2144691313, i32 -2144691288, i32 -2144691213, i32 -2144691188, i32 -2144691044, i32 -2144688822, i32 -2144688733, i32 -2144688612, i32 -2144688517, i32 -2144688416, i32 -2144688389, i32 -2144688306, i32 -2144688217, i32 -2144688096, i32 -2144687996, i32 -2144687890, i32 -2144687782, i32 -2144690756, i32 -2144690703, i32 -2144690672, i32 -2144690641, i32 -2144690620, i32 -2144690598, i32 -2144690549, i32 -2144690528, i32 -2144687699, i32 -2144687610, i32 -2144687489, i32 -2144687390, i32 -2144687284, i32 -2144687182, i32 -2144687149, i32 -2144687076, i32 -2144687008, i32 -2144690154, i32 -2144690101, i32 -2144690070, i32 -2144690039, i32 -2144690018, i32 -2144689996, i32 -2144689947, i32 -2144689926, i32 -2144686953, i32 -2144686864, i32 -2144686743, i32 -2144686644, i32 -2144686538, i32 -2144686436, i32 -2144686403, i32 -2144686320, i32 -2144686231, i32 -2144686110, i32 -2144686010, i32 -2144685984, i32 -2144685881, i32 -2144685855, i32 -2144689668, i32 -2144689601, i32 -2144689576, i32 -2144689512, i32 -2144689396, i32 -2144689371, i32 -2144689346}
!4410 = !DILocation(line: 3367, column: 7, scope: !4283)
!4411 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !4412)
!4412 = distinct !DILocation(line: 3367, column: 7, scope: !4283)
!4413 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !4412)
!4414 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !4415)
!4415 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !4412)
!4416 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !4415)
!4417 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !4415)
!4418 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !4415)
!4419 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !4415)
!4420 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !4415)
!4421 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !4415)
!4422 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !4415)
!4423 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !4412)
!4424 = !DILocation(line: 3368, column: 7, scope: !4283)
!4425 = !DILocalVariable(name: "select_cb", arg: 1, scope: !4426, file: !3, line: 2769, type: !238)
!4426 = distinct !DISubprogram(name: "lwip_link_select_cb", scope: !3, file: !3, line: 2769, type: !4427, isLocal: true, isDefinition: true, scopeLine: 2770, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4429)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{null, !238}
!4429 = !{!4425}
!4430 = !DILocation(line: 2769, column: 44, scope: !4426, inlinedAt: !4431)
!4431 = distinct !DILocation(line: 3372, column: 5, scope: !4264)
!4432 = !DILocation(line: 2774, column: 3, scope: !4426, inlinedAt: !4431)
!4433 = !DILocation(line: 2777, column: 21, scope: !4426, inlinedAt: !4431)
!4434 = !DILocation(line: 2777, column: 19, scope: !4426, inlinedAt: !4431)
!4435 = !{!4373, !1408, i64 0}
!4436 = !DILocation(line: 2778, column: 22, scope: !4437, inlinedAt: !4431)
!4437 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 2778, column: 7)
!4438 = !DILocation(line: 2778, column: 7, scope: !4426, inlinedAt: !4431)
!4439 = !DILocation(line: 2778, column: 7, scope: !4437, inlinedAt: !4431)
!4440 = !DILocation(line: 2779, column: 21, scope: !4441, inlinedAt: !4431)
!4441 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 2778, column: 31)
!4442 = !DILocation(line: 2779, column: 26, scope: !4441, inlinedAt: !4431)
!4443 = !{!4373, !1408, i64 8}
!4444 = !DILocation(line: 2780, column: 3, scope: !4441, inlinedAt: !4431)
!4445 = !DILocation(line: 2781, column: 18, scope: !4426, inlinedAt: !4431)
!4446 = !DILocation(line: 2788, column: 3, scope: !4426, inlinedAt: !4431)
!4447 = !DILocation(line: 2789, column: 1, scope: !4426, inlinedAt: !4431)
!4448 = !DILocation(line: 3377, column: 14, scope: !4264)
!4449 = !DILocation(line: 3379, column: 10, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 3379, column: 9)
!4451 = !DILocation(line: 3379, column: 9, scope: !4264)
!4452 = !DILocation(line: 3381, column: 11, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 3379, column: 18)
!4454 = !DILocation(line: 3321, column: 9, scope: !4244)
!4455 = !DILocation(line: 3389, column: 17, scope: !4453)
!4456 = !DILocation(line: 3393, column: 5, scope: !4453)
!4457 = !DILocation(line: 3397, column: 14, scope: !4264)
!4458 = !DILocation(line: 3399, column: 5, scope: !4264)
!4459 = !DILocation(line: 3407, column: 5, scope: !4264)
!4460 = !DILocation(line: 3409, column: 5, scope: !4264)
!4461 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !4462)
!4462 = distinct !DILocation(line: 3409, column: 5, scope: !4264)
!4463 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !4462)
!4464 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !4465)
!4465 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !4462)
!4466 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !4465)
!4467 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !4465)
!4468 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !4465)
!4469 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !4465)
!4470 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !4465)
!4471 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !4465)
!4472 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !4465)
!4473 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !4462)
!4474 = !DILocation(line: 3411, column: 16, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 3411, column: 9)
!4476 = !DILocation(line: 3411, column: 9, scope: !4264)
!4477 = !DILocation(line: 3335, column: 10, scope: !4244)
!4478 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4479)
!4479 = distinct !DILocation(line: 3427, column: 3, scope: !4289)
!4480 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4479)
!4481 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4479)
!4482 = !DILocation(line: 3427, column: 3, scope: !4289)
!4483 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4484)
!4484 = distinct !DILocation(line: 3427, column: 3, scope: !4289)
!4485 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4484)
!4486 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4484)
!4487 = !DILocation(line: 3427, column: 3, scope: !4290)
!4488 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !4489)
!4489 = distinct !DILocation(line: 3427, column: 3, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 3427, column: 3)
!4491 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !4489)
!4492 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !4489)
!4493 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !4489)
!4494 = !DILocation(line: 3427, column: 3, scope: !4490)
!4495 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4496)
!4496 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4497)
!4497 = distinct !DILocation(line: 3427, column: 3, scope: !4286)
!4498 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4496)
!4499 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4496)
!4500 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4497)
!4501 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4497)
!4502 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4497)
!4503 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4497)
!4504 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4497)
!4505 = !DILocation(line: 3427, column: 3, scope: !4286)
!4506 = !{i32 -2144683271, i32 -2144683258, i32 -2144683233, i32 -2144683209, i32 -2144683184, i32 -2144683109, i32 -2144683084, i32 -2144682940, i32 -2144680724, i32 -2144680635, i32 -2144680514, i32 -2144680419, i32 -2144680318, i32 -2144680291, i32 -2144680208, i32 -2144680119, i32 -2144679998, i32 -2144679898, i32 -2144679792, i32 -2144679684, i32 -2144682652, i32 -2144682599, i32 -2144682568, i32 -2144682537, i32 -2144682516, i32 -2144682494, i32 -2144682445, i32 -2144682424, i32 -2144679601, i32 -2144679512, i32 -2144679391, i32 -2144679292, i32 -2144679186, i32 -2144679084, i32 -2144679051, i32 -2144678978, i32 -2144678910, i32 -2144682050, i32 -2144681997, i32 -2144681966, i32 -2144681935, i32 -2144681914, i32 -2144681892, i32 -2144681843, i32 -2144681822, i32 -2144678855, i32 -2144678766, i32 -2144678645, i32 -2144678546, i32 -2144678440, i32 -2144678338, i32 -2144678305, i32 -2144678222, i32 -2144678133, i32 -2144678012, i32 -2144677912, i32 -2144677886, i32 -2144677783, i32 -2144677757, i32 -2144681564, i32 -2144681497, i32 -2144681472, i32 -2144681408, i32 -2144681292, i32 -2144681267, i32 -2144681242}
!4507 = !DILocation(line: 3429, column: 1, scope: !4244)
!4508 = distinct !DISubprogram(name: "ppoll", scope: !3, file: !3, line: 601, type: !4509, isLocal: false, isDefinition: true, scopeLine: 603, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4515)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{!80, !258, !265, !4511, !4513}
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !664)
!4515 = !{!4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523}
!4516 = !DILocalVariable(name: "fds", arg: 1, scope: !4508, file: !3, line: 601, type: !258)
!4517 = !DILocalVariable(name: "nfds", arg: 2, scope: !4508, file: !3, line: 601, type: !265)
!4518 = !DILocalVariable(name: "tmo_p", arg: 3, scope: !4508, file: !3, line: 601, type: !4511)
!4519 = !DILocalVariable(name: "sigmask", arg: 4, scope: !4508, file: !3, line: 602, type: !4513)
!4520 = !DILocalVariable(name: "origmask", scope: !4508, file: !3, line: 604, type: !664)
!4521 = !DILocalVariable(name: "timeout", scope: !4508, file: !3, line: 605, type: !80)
!4522 = !DILocalVariable(name: "rc", scope: !4508, file: !3, line: 605, type: !80)
!4523 = !DILocalVariable(name: "_rc", scope: !4508, file: !3, line: 605, type: !80)
!4524 = !DILocation(line: 601, column: 26, scope: !4508)
!4525 = !DILocation(line: 601, column: 38, scope: !4508)
!4526 = !DILocation(line: 601, column: 67, scope: !4508)
!4527 = !DILocation(line: 602, column: 19, scope: !4508)
!4528 = !DILocation(line: 604, column: 2, scope: !4508)
!4529 = !DILocation(line: 607, column: 7, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4508, file: !3, line: 607, column: 6)
!4531 = !DILocation(line: 607, column: 6, scope: !4508)
!4532 = !DILocation(line: 608, column: 3, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 607, column: 12)
!4534 = !DILocation(line: 608, column: 9, scope: !4533)
!4535 = !DILocation(line: 605, column: 15, scope: !4508)
!4536 = !DILocation(line: 610, column: 3, scope: !4533)
!4537 = !DILocation(line: 613, column: 19, scope: !4508)
!4538 = !DILocation(line: 613, column: 12, scope: !4508)
!4539 = !DILocation(line: 614, column: 11, scope: !4508)
!4540 = !{!4541, !1404, i64 0}
!4541 = !{!"timespec", !1404, i64 0, !1404, i64 8}
!4542 = !DILocation(line: 614, column: 18, scope: !4508)
!4543 = !DILocation(line: 614, column: 34, scope: !4508)
!4544 = !{!4541, !1404, i64 8}
!4545 = !DILocation(line: 614, column: 42, scope: !4508)
!4546 = !DILocation(line: 614, column: 25, scope: !4508)
!4547 = !DILocation(line: 604, column: 11, scope: !4508)
!4548 = !DILocation(line: 615, column: 7, scope: !4508)
!4549 = !DILocation(line: 616, column: 6, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4508, file: !3, line: 616, column: 6)
!4551 = !DILocation(line: 616, column: 6, scope: !4508)
!4552 = !DILocation(line: 605, column: 6, scope: !4508)
!4553 = !DILocation(line: 618, column: 7, scope: !4508)
!4554 = !DILocation(line: 619, column: 8, scope: !4508)
!4555 = !DILocation(line: 605, column: 19, scope: !4508)
!4556 = !DILocation(line: 620, column: 9, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4508, file: !3, line: 620, column: 6)
!4558 = !DILocation(line: 620, column: 21, scope: !4557)
!4559 = !DILocation(line: 620, column: 14, scope: !4557)
!4560 = !DILocation(line: 0, scope: !4533)
!4561 = !DILocation(line: 624, column: 1, scope: !4508)
!4562 = !DILocation(line: 623, column: 2, scope: !4508)
!4563 = distinct !DISubprogram(name: "select", scope: !3, file: !3, line: 627, type: !4564, isLocal: false, isDefinition: true, scopeLine: 629, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4572)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{!80, !80, !245, !245, !245, !4566}
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 64)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !931, line: 44, size: 128, elements: !4568)
!4568 = !{!4569, !4570}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4567, file: !931, line: 45, baseType: !934, size: 64)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !4567, file: !931, line: 46, baseType: !4571, size: 64, offset: 64)
!4571 = !DIDerivedType(tag: DW_TAG_typedef, name: "suseconds_t", file: !931, line: 39, baseType: !142)
!4572 = !{!4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4594, !4596, !4597, !4599, !4600, !4602, !4603, !4614, !4615, !4623, !4624, !4632, !4633, !4644, !4645, !4653, !4654, !4662}
!4573 = !DILocalVariable(name: "nfds", arg: 1, scope: !4563, file: !3, line: 627, type: !80)
!4574 = !DILocalVariable(name: "readfds", arg: 2, scope: !4563, file: !3, line: 627, type: !245)
!4575 = !DILocalVariable(name: "writefds", arg: 3, scope: !4563, file: !3, line: 627, type: !245)
!4576 = !DILocalVariable(name: "exceptfds", arg: 4, scope: !4563, file: !3, line: 627, type: !245)
!4577 = !DILocalVariable(name: "timeout", arg: 5, scope: !4563, file: !3, line: 628, type: !4566)
!4578 = !DILocalVariable(name: "nsecs", scope: !4563, file: !3, line: 630, type: !135)
!4579 = !DILocalVariable(name: "rd", scope: !4563, file: !3, line: 631, type: !246)
!4580 = !DILocalVariable(name: "wr", scope: !4563, file: !3, line: 631, type: !246)
!4581 = !DILocalVariable(name: "xc", scope: !4563, file: !3, line: 631, type: !246)
!4582 = !DILocalVariable(name: "i", scope: !4563, file: !3, line: 632, type: !80)
!4583 = !DILocalVariable(name: "ret", scope: !4563, file: !3, line: 632, type: !80)
!4584 = !DILocalVariable(name: "maxfd", scope: !4563, file: !3, line: 632, type: !80)
!4585 = !DILocalVariable(name: "file", scope: !4563, file: !3, line: 633, type: !1077)
!4586 = !DILocalVariable(name: "tid", scope: !4587, file: !3, line: 638, type: !170)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !3, line: 638, column: 3)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 638, column: 3)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 638, column: 3)
!4590 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 638, column: 3)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 638, column: 3)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 635, column: 36)
!4593 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 635, column: 6)
!4594 = !DILocalVariable(name: "__i", scope: !4595, file: !3, line: 643, type: !216)
!4595 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 643, column: 2)
!4596 = !DILocalVariable(name: "__tmp", scope: !4595, file: !3, line: 643, type: !144)
!4597 = !DILocalVariable(name: "__i", scope: !4598, file: !3, line: 644, type: !216)
!4598 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 644, column: 2)
!4599 = !DILocalVariable(name: "__tmp", scope: !4598, file: !3, line: 644, type: !144)
!4600 = !DILocalVariable(name: "__i", scope: !4601, file: !3, line: 645, type: !216)
!4601 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 645, column: 2)
!4602 = !DILocalVariable(name: "__tmp", scope: !4601, file: !3, line: 645, type: !144)
!4603 = !DILocalVariable(name: "tid", scope: !4604, file: !3, line: 649, type: !170)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !3, line: 649, column: 4)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 649, column: 4)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 649, column: 4)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 649, column: 4)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 649, column: 4)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 648, column: 40)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 648, column: 7)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 647, column: 29)
!4612 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 647, column: 2)
!4613 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 647, column: 2)
!4614 = !DILocalVariable(name: "_ret", scope: !4604, file: !3, line: 649, type: !135)
!4615 = !DILocalVariable(name: "tid", scope: !4616, file: !3, line: 673, type: !170)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 673, column: 4)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 673, column: 4)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 673, column: 4)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 673, column: 4)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 673, column: 4)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 672, column: 42)
!4622 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 672, column: 7)
!4623 = !DILocalVariable(name: "_ret", scope: !4616, file: !3, line: 673, type: !135)
!4624 = !DILocalVariable(name: "tid", scope: !4625, file: !3, line: 697, type: !170)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 697, column: 4)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 697, column: 4)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 697, column: 4)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !3, line: 697, column: 4)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 697, column: 4)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 696, column: 44)
!4631 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 696, column: 7)
!4632 = !DILocalVariable(name: "_ret", scope: !4625, file: !3, line: 697, type: !135)
!4633 = !DILocalVariable(name: "tid", scope: !4634, file: !3, line: 736, type: !170)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 736, column: 4)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !3, line: 736, column: 4)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 736, column: 4)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 736, column: 4)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 736, column: 4)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 732, column: 40)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 732, column: 7)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 731, column: 29)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 731, column: 2)
!4643 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 731, column: 2)
!4644 = !DILocalVariable(name: "_ret", scope: !4634, file: !3, line: 736, type: !135)
!4645 = !DILocalVariable(name: "tid", scope: !4646, file: !3, line: 746, type: !170)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 746, column: 4)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 746, column: 4)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 746, column: 4)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 746, column: 4)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 746, column: 4)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 742, column: 42)
!4652 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 742, column: 7)
!4653 = !DILocalVariable(name: "_ret", scope: !4646, file: !3, line: 746, type: !135)
!4654 = !DILocalVariable(name: "tid", scope: !4655, file: !3, line: 756, type: !170)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 756, column: 4)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 756, column: 4)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 756, column: 4)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 756, column: 4)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 756, column: 4)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !3, line: 752, column: 44)
!4661 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 752, column: 7)
!4662 = !DILocalVariable(name: "_ret", scope: !4655, file: !3, line: 756, type: !135)
!4663 = !DILocation(line: 627, column: 16, scope: !4563)
!4664 = !DILocation(line: 627, column: 30, scope: !4563)
!4665 = !DILocation(line: 627, column: 47, scope: !4563)
!4666 = !DILocation(line: 627, column: 65, scope: !4563)
!4667 = !DILocation(line: 628, column: 19, scope: !4563)
!4668 = !DILocation(line: 631, column: 2, scope: !4563)
!4669 = !DILocation(line: 633, column: 2, scope: !4563)
!4670 = !DILocation(line: 635, column: 11, scope: !4593)
!4671 = !DILocation(line: 635, column: 27, scope: !4593)
!4672 = !DILocation(line: 635, column: 16, scope: !4593)
!4673 = !DILocation(line: 643, column: 2, scope: !4595)
!4674 = !DILocation(line: 643, column: 2, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 643, column: 2)
!4676 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 643, column: 2)
!4677 = !DILocation(line: 644, column: 2, scope: !4598)
!4678 = !DILocation(line: 644, column: 2, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 644, column: 2)
!4680 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 644, column: 2)
!4681 = !DILocation(line: 645, column: 2, scope: !4601)
!4682 = !DILocation(line: 645, column: 2, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 645, column: 2)
!4684 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 645, column: 2)
!4685 = !DILocation(line: 632, column: 6, scope: !4563)
!4686 = !DILocation(line: 632, column: 14, scope: !4563)
!4687 = !DILocation(line: 647, column: 16, scope: !4612)
!4688 = !DILocation(line: 647, column: 2, scope: !4613)
!4689 = !DILocation(line: 636, column: 20, scope: !4592)
!4690 = !{!4691, !1404, i64 0}
!4691 = !{!"timeval", !1404, i64 0, !1404, i64 8}
!4692 = !DILocation(line: 636, column: 27, scope: !4592)
!4693 = !DILocation(line: 630, column: 11, scope: !4563)
!4694 = !DILocation(line: 637, column: 21, scope: !4592)
!4695 = !{!4691, !1404, i64 8}
!4696 = !DILocation(line: 637, column: 29, scope: !4592)
!4697 = !DILocation(line: 637, column: 9, scope: !4592)
!4698 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4699)
!4699 = distinct !DILocation(line: 638, column: 3, scope: !4590)
!4700 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4699)
!4701 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4699)
!4702 = !DILocation(line: 638, column: 3, scope: !4590)
!4703 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4704)
!4704 = distinct !DILocation(line: 638, column: 3, scope: !4590)
!4705 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4704)
!4706 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4704)
!4707 = !DILocation(line: 638, column: 3, scope: !4591)
!4708 = !DILocation(line: 638, column: 3, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 638, column: 3)
!4710 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4711)
!4711 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4712)
!4712 = distinct !DILocation(line: 638, column: 3, scope: !4587)
!4713 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4711)
!4714 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4711)
!4715 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4712)
!4716 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4712)
!4717 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4712)
!4718 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4712)
!4719 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4712)
!4720 = !DILocation(line: 638, column: 3, scope: !4587)
!4721 = !{i32 -2145613210, i32 -2145613197, i32 -2145613172, i32 -2145613148, i32 -2145613123, i32 -2145613048, i32 -2145613023, i32 -2145612879, i32 -2145610655, i32 -2145610566, i32 -2145610445, i32 -2145610350, i32 -2145610249, i32 -2145610222, i32 -2145610139, i32 -2145610050, i32 -2145609929, i32 -2145609829, i32 -2145609723, i32 -2145609615, i32 -2145612591, i32 -2145612538, i32 -2145612507, i32 -2145612476, i32 -2145612455, i32 -2145612433, i32 -2145612384, i32 -2145612363, i32 -2145609532, i32 -2145609443, i32 -2145609322, i32 -2145609223, i32 -2145609117, i32 -2145609015, i32 -2145608982, i32 -2145608909, i32 -2145608841, i32 -2145611989, i32 -2145611936, i32 -2145611905, i32 -2145611874, i32 -2145611853, i32 -2145611831, i32 -2145611782, i32 -2145611761, i32 -2145608784, i32 -2145608695, i32 -2145608574, i32 -2145608475, i32 -2145608369, i32 -2145608267, i32 -2145608234, i32 -2145608151, i32 -2145608062, i32 -2145607941, i32 -2145607841, i32 -2145607815, i32 -2145607712, i32 -2145607686, i32 -2145611503, i32 -2145611436, i32 -2145611411, i32 -2145611347, i32 -2145611231, i32 -2145611206, i32 -2145611181}
!4722 = !DILocation(line: 648, column: 15, scope: !4610)
!4723 = !DILocation(line: 648, column: 18, scope: !4610)
!4724 = !DILocation(line: 648, column: 7, scope: !4611)
!4725 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4726)
!4726 = distinct !DILocation(line: 649, column: 4, scope: !4607)
!4727 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4726)
!4728 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4726)
!4729 = !DILocation(line: 649, column: 4, scope: !4607)
!4730 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4731)
!4731 = distinct !DILocation(line: 649, column: 4, scope: !4607)
!4732 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4731)
!4733 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4731)
!4734 = !DILocation(line: 649, column: 4, scope: !4608)
!4735 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !4736)
!4736 = distinct !DILocation(line: 649, column: 4, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 649, column: 4)
!4738 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !4736)
!4739 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !4736)
!4740 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !4736)
!4741 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !4736)
!4742 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !4736)
!4743 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !4736)
!4744 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !4736)
!4745 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !4736)
!4746 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !4736)
!4747 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !4736)
!4748 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !4736)
!4749 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !4736)
!4750 = !DILocation(line: 0, scope: !3086, inlinedAt: !4736)
!4751 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !4736)
!4752 = !DILocation(line: 633, column: 24, scope: !4563)
!4753 = !DILocation(line: 649, column: 4, scope: !4737)
!4754 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4755)
!4755 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4756)
!4756 = distinct !DILocation(line: 649, column: 4, scope: !4604)
!4757 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4755)
!4758 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4755)
!4759 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4756)
!4760 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4756)
!4761 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4756)
!4762 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4756)
!4763 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4756)
!4764 = !DILocation(line: 649, column: 4, scope: !4604)
!4765 = !{i32 -2145605119, i32 -2145605106, i32 -2145605081, i32 -2145605057, i32 -2145605032, i32 -2145604957, i32 -2145604932, i32 -2145604788, i32 -2145601656, i32 -2145601567, i32 -2145601446, i32 -2145601351, i32 -2145601250, i32 -2145601223, i32 -2145601140, i32 -2145601051, i32 -2145600930, i32 -2145600830, i32 -2145600724, i32 -2145600616, i32 -2145604500, i32 -2145604447, i32 -2145604416, i32 -2145604385, i32 -2145604364, i32 -2145604342, i32 -2145604293, i32 -2145604272, i32 -2145600533, i32 -2145600444, i32 -2145600323, i32 -2145600224, i32 -2145600118, i32 -2145600016, i32 -2145599983, i32 -2145599910, i32 -2145599842, i32 -2145603968, i32 -2145603909, i32 -2145603856, i32 -2145603825, i32 -2145603794, i32 -2145603773, i32 -2145603751, i32 -2145603702, i32 -2145603681, i32 -2145599789, i32 -2145599700, i32 -2145599579, i32 -2145599480, i32 -2145599374, i32 -2145599272, i32 -2145599239, i32 -2145599156, i32 -2145599067, i32 -2145598946, i32 -2145598846, i32 -2145598820, i32 -2145598717, i32 -2145598691, i32 -2145603423, i32 -2145603356, i32 -2145603331, i32 -2145603267, i32 -2145603185, i32 -2145603162, i32 -2145603137, i32 -2145603112}
!4766 = !DILocation(line: 649, column: 4, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 649, column: 4)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 649, column: 4)
!4769 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 649, column: 4)
!4770 = !{i32 -2145601924, i32 -2145601908}
!4771 = !DILocation(line: 651, column: 8, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 651, column: 8)
!4773 = !DILocation(line: 654, column: 9, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 654, column: 9)
!4775 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 651, column: 24)
!4776 = !DILocation(line: 654, column: 23, scope: !4774)
!4777 = !DILocation(line: 655, column: 6, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4774, file: !3, line: 654, column: 34)
!4779 = !DILocation(line: 656, column: 6, scope: !4778)
!4780 = !DILocation(line: 667, column: 22, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 667, column: 8)
!4782 = !DILocation(line: 667, column: 14, scope: !4781)
!4783 = !DILocation(line: 667, column: 8, scope: !4609)
!4784 = !DILocation(line: 669, column: 4, scope: !4609)
!4785 = !DILocation(line: 670, column: 27, scope: !4609)
!4786 = !DILocation(line: 670, column: 4, scope: !4609)
!4787 = !DILocation(line: 671, column: 3, scope: !4609)
!4788 = !DILocation(line: 0, scope: !4563)
!4789 = !DILocation(line: 672, column: 16, scope: !4622)
!4790 = !DILocation(line: 672, column: 19, scope: !4622)
!4791 = !DILocation(line: 672, column: 7, scope: !4611)
!4792 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4793)
!4793 = distinct !DILocation(line: 673, column: 4, scope: !4619)
!4794 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4793)
!4795 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4793)
!4796 = !DILocation(line: 673, column: 4, scope: !4619)
!4797 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4798)
!4798 = distinct !DILocation(line: 673, column: 4, scope: !4619)
!4799 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4798)
!4800 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4798)
!4801 = !DILocation(line: 673, column: 4, scope: !4620)
!4802 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !4803)
!4803 = distinct !DILocation(line: 673, column: 4, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 673, column: 4)
!4805 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !4803)
!4806 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !4803)
!4807 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !4803)
!4808 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !4803)
!4809 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !4803)
!4810 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !4803)
!4811 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !4803)
!4812 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !4803)
!4813 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !4803)
!4814 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !4803)
!4815 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !4803)
!4816 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !4803)
!4817 = !DILocation(line: 0, scope: !3086, inlinedAt: !4803)
!4818 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !4803)
!4819 = !DILocation(line: 673, column: 4, scope: !4804)
!4820 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4821)
!4821 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4822)
!4822 = distinct !DILocation(line: 673, column: 4, scope: !4616)
!4823 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4821)
!4824 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4821)
!4825 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4822)
!4826 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4822)
!4827 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4822)
!4828 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4822)
!4829 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4822)
!4830 = !DILocation(line: 673, column: 4, scope: !4616)
!4831 = !{i32 -2145596240, i32 -2145596227, i32 -2145596202, i32 -2145596178, i32 -2145596153, i32 -2145596078, i32 -2145596053, i32 -2145595909, i32 -2145592777, i32 -2145592688, i32 -2145592567, i32 -2145592472, i32 -2145592371, i32 -2145592344, i32 -2145592261, i32 -2145592172, i32 -2145592051, i32 -2145591951, i32 -2145591845, i32 -2145591737, i32 -2145595621, i32 -2145595568, i32 -2145595537, i32 -2145595506, i32 -2145595485, i32 -2145595463, i32 -2145595414, i32 -2145595393, i32 -2145591654, i32 -2145591565, i32 -2145591444, i32 -2145591345, i32 -2145591239, i32 -2145591137, i32 -2145591104, i32 -2145591031, i32 -2145590963, i32 -2145595089, i32 -2145595030, i32 -2145594977, i32 -2145594946, i32 -2145594915, i32 -2145594894, i32 -2145594872, i32 -2145594823, i32 -2145594802, i32 -2145590910, i32 -2145590821, i32 -2145590700, i32 -2145590601, i32 -2145590495, i32 -2145590393, i32 -2145590360, i32 -2145590277, i32 -2145590188, i32 -2145590067, i32 -2145589967, i32 -2145589941, i32 -2145589838, i32 -2145589812, i32 -2145594544, i32 -2145594477, i32 -2145594452, i32 -2145594388, i32 -2145594306, i32 -2145594283, i32 -2145594258, i32 -2145594233}
!4832 = !DILocation(line: 673, column: 4, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 673, column: 4)
!4834 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 673, column: 4)
!4835 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 673, column: 4)
!4836 = !{i32 -2145593045, i32 -2145593029}
!4837 = !DILocation(line: 675, column: 8, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 675, column: 8)
!4839 = !DILocation(line: 678, column: 9, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 678, column: 9)
!4841 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 675, column: 24)
!4842 = !DILocation(line: 678, column: 23, scope: !4840)
!4843 = !DILocation(line: 679, column: 6, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4840, file: !3, line: 678, column: 34)
!4845 = !DILocation(line: 680, column: 6, scope: !4844)
!4846 = !DILocation(line: 691, column: 22, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 691, column: 8)
!4848 = !DILocation(line: 691, column: 14, scope: !4847)
!4849 = !DILocation(line: 691, column: 8, scope: !4621)
!4850 = !DILocation(line: 693, column: 4, scope: !4621)
!4851 = !DILocation(line: 694, column: 27, scope: !4621)
!4852 = !DILocation(line: 694, column: 4, scope: !4621)
!4853 = !DILocation(line: 695, column: 3, scope: !4621)
!4854 = !DILocation(line: 0, scope: !4781)
!4855 = !DILocation(line: 696, column: 17, scope: !4631)
!4856 = !DILocation(line: 696, column: 20, scope: !4631)
!4857 = !DILocation(line: 696, column: 7, scope: !4611)
!4858 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4859)
!4859 = distinct !DILocation(line: 697, column: 4, scope: !4628)
!4860 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4859)
!4861 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4859)
!4862 = !DILocation(line: 697, column: 4, scope: !4628)
!4863 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4864)
!4864 = distinct !DILocation(line: 697, column: 4, scope: !4628)
!4865 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4864)
!4866 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4864)
!4867 = !DILocation(line: 697, column: 4, scope: !4629)
!4868 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !4869)
!4869 = distinct !DILocation(line: 697, column: 4, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 697, column: 4)
!4871 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !4869)
!4872 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !4869)
!4873 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !4869)
!4874 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !4869)
!4875 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !4869)
!4876 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !4869)
!4877 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !4869)
!4878 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !4869)
!4879 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !4869)
!4880 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !4869)
!4881 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !4869)
!4882 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !4869)
!4883 = !DILocation(line: 0, scope: !3086, inlinedAt: !4869)
!4884 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !4869)
!4885 = !DILocation(line: 697, column: 4, scope: !4870)
!4886 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4887)
!4887 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4888)
!4888 = distinct !DILocation(line: 697, column: 4, scope: !4625)
!4889 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4887)
!4890 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4887)
!4891 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4888)
!4892 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4888)
!4893 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4888)
!4894 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4888)
!4895 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4888)
!4896 = !DILocation(line: 697, column: 4, scope: !4625)
!4897 = !{i32 -2145587359, i32 -2145587346, i32 -2145587321, i32 -2145587297, i32 -2145587272, i32 -2145587197, i32 -2145587172, i32 -2145587028, i32 -2145583896, i32 -2145583807, i32 -2145583686, i32 -2145583591, i32 -2145583490, i32 -2145583463, i32 -2145579319, i32 -2145579230, i32 -2145579109, i32 -2145579009, i32 -2145578903, i32 -2145578795, i32 -2145586740, i32 -2145586687, i32 -2145586656, i32 -2145586625, i32 -2145586604, i32 -2145586582, i32 -2145586533, i32 -2145586512, i32 -2145578712, i32 -2145578623, i32 -2145578502, i32 -2145578403, i32 -2145578297, i32 -2145578195, i32 -2145578162, i32 -2145578089, i32 -2145578021, i32 -2145586208, i32 -2145586149, i32 -2145586096, i32 -2145586065, i32 -2145586034, i32 -2145586013, i32 -2145585991, i32 -2145585942, i32 -2145585921, i32 -2145577968, i32 -2145577879, i32 -2145577758, i32 -2145577659, i32 -2145577553, i32 -2145577451, i32 -2145577418, i32 -2145577335, i32 -2145577246, i32 -2145577125, i32 -2145577025, i32 -2145576999, i32 -2145576896, i32 -2145576870, i32 -2145585663, i32 -2145585596, i32 -2145585571, i32 -2145585507, i32 -2145585425, i32 -2145585402, i32 -2145585377, i32 -2145585352}
!4898 = !DILocation(line: 697, column: 4, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 697, column: 4)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 697, column: 4)
!4901 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 697, column: 4)
!4902 = !{i32 -2145584164, i32 -2145584148}
!4903 = !DILocation(line: 699, column: 8, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 699, column: 8)
!4905 = !DILocation(line: 702, column: 9, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 702, column: 9)
!4907 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 699, column: 24)
!4908 = !DILocation(line: 702, column: 23, scope: !4906)
!4909 = !DILocation(line: 703, column: 6, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 702, column: 34)
!4911 = !DILocation(line: 704, column: 6, scope: !4910)
!4912 = !DILocation(line: 715, column: 22, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 715, column: 8)
!4914 = !DILocation(line: 715, column: 14, scope: !4913)
!4915 = !DILocation(line: 715, column: 8, scope: !4630)
!4916 = !DILocation(line: 717, column: 4, scope: !4630)
!4917 = !DILocation(line: 718, column: 27, scope: !4630)
!4918 = !DILocation(line: 718, column: 4, scope: !4630)
!4919 = !DILocation(line: 719, column: 3, scope: !4630)
!4920 = !DILocation(line: 0, scope: !4847)
!4921 = !DILocation(line: 647, column: 25, scope: !4612)
!4922 = distinct !{!4922, !4688, !4923}
!4923 = !DILocation(line: 720, column: 2, scope: !4613)
!4924 = !DILocation(line: 646, column: 8, scope: !4563)
!4925 = !DILocation(line: 722, column: 25, scope: !4563)
!4926 = !DILocation(line: 631, column: 9, scope: !4563)
!4927 = !DILocation(line: 631, column: 13, scope: !4563)
!4928 = !DILocation(line: 631, column: 17, scope: !4563)
!4929 = !DILocation(line: 722, column: 8, scope: !4563)
!4930 = !DILocation(line: 632, column: 9, scope: !4563)
!4931 = !DILocation(line: 723, column: 10, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 723, column: 6)
!4933 = !DILocation(line: 723, column: 6, scope: !4563)
!4934 = !DILocation(line: 731, column: 2, scope: !4643)
!4935 = !DILocation(line: 732, column: 15, scope: !4640)
!4936 = !DILocation(line: 732, column: 18, scope: !4640)
!4937 = !DILocation(line: 732, column: 7, scope: !4641)
!4938 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4939)
!4939 = distinct !DILocation(line: 736, column: 4, scope: !4637)
!4940 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4939)
!4941 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4939)
!4942 = !DILocation(line: 736, column: 4, scope: !4637)
!4943 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4944)
!4944 = distinct !DILocation(line: 736, column: 4, scope: !4637)
!4945 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4944)
!4946 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4944)
!4947 = !DILocation(line: 736, column: 4, scope: !4638)
!4948 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !4949)
!4949 = distinct !DILocation(line: 736, column: 4, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 736, column: 4)
!4951 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !4949)
!4952 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !4949)
!4953 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !4949)
!4954 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !4949)
!4955 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !4949)
!4956 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !4949)
!4957 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !4949)
!4958 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !4949)
!4959 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !4949)
!4960 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !4949)
!4961 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !4949)
!4962 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !4949)
!4963 = !DILocation(line: 0, scope: !3086, inlinedAt: !4949)
!4964 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !4949)
!4965 = !DILocation(line: 736, column: 4, scope: !4950)
!4966 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4967)
!4967 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4968)
!4968 = distinct !DILocation(line: 736, column: 4, scope: !4634)
!4969 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4967)
!4970 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4967)
!4971 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4968)
!4972 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4968)
!4973 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4968)
!4974 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4968)
!4975 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4968)
!4976 = !DILocation(line: 736, column: 4, scope: !4634)
!4977 = !{i32 -2145574418, i32 -2145574405, i32 -2145574380, i32 -2145574356, i32 -2145574331, i32 -2145574256, i32 -2145574231, i32 -2145574087, i32 -2145570955, i32 -2145570866, i32 -2145570745, i32 -2145570650, i32 -2145570549, i32 -2145570522, i32 -2145570439, i32 -2145570350, i32 -2145570229, i32 -2145570129, i32 -2145570023, i32 -2145569915, i32 -2145573799, i32 -2145573746, i32 -2145573715, i32 -2145573684, i32 -2145573663, i32 -2145573641, i32 -2145573592, i32 -2145573571, i32 -2145569832, i32 -2145569743, i32 -2145569622, i32 -2145569523, i32 -2145569417, i32 -2145569315, i32 -2145569282, i32 -2145569209, i32 -2145569141, i32 -2145573267, i32 -2145573208, i32 -2145573155, i32 -2145573124, i32 -2145573093, i32 -2145573072, i32 -2145573050, i32 -2145573001, i32 -2145572980, i32 -2145569088, i32 -2145568999, i32 -2145568878, i32 -2145568779, i32 -2145568673, i32 -2145568571, i32 -2145568538, i32 -2145568455, i32 -2145568366, i32 -2145568245, i32 -2145568145, i32 -2145568119, i32 -2145568016, i32 -2145567990, i32 -2145572722, i32 -2145572655, i32 -2145572630, i32 -2145572566, i32 -2145572484, i32 -2145572461, i32 -2145572436, i32 -2145572411}
!4978 = !DILocation(line: 736, column: 4, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 736, column: 4)
!4980 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 736, column: 4)
!4981 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 736, column: 4)
!4982 = !{i32 -2145571223, i32 -2145571207}
!4983 = !DILocation(line: 738, column: 9, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 738, column: 8)
!4985 = !DILocation(line: 738, column: 8, scope: !4639)
!4986 = !DILocation(line: 739, column: 5, scope: !4984)
!4987 = !DILocation(line: 740, column: 27, scope: !4639)
!4988 = !DILocation(line: 740, column: 4, scope: !4639)
!4989 = !DILocation(line: 741, column: 3, scope: !4639)
!4990 = !DILocation(line: 742, column: 16, scope: !4652)
!4991 = !DILocation(line: 742, column: 19, scope: !4652)
!4992 = !DILocation(line: 742, column: 7, scope: !4641)
!4993 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4994)
!4994 = distinct !DILocation(line: 746, column: 4, scope: !4649)
!4995 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4994)
!4996 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4994)
!4997 = !DILocation(line: 746, column: 4, scope: !4649)
!4998 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4999)
!4999 = distinct !DILocation(line: 746, column: 4, scope: !4649)
!5000 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4999)
!5001 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4999)
!5002 = !DILocation(line: 746, column: 4, scope: !4650)
!5003 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !5004)
!5004 = distinct !DILocation(line: 746, column: 4, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 746, column: 4)
!5006 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !5004)
!5007 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !5004)
!5008 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !5004)
!5009 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !5004)
!5010 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !5004)
!5011 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !5004)
!5012 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !5004)
!5013 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !5004)
!5014 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !5004)
!5015 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !5004)
!5016 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !5004)
!5017 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !5004)
!5018 = !DILocation(line: 0, scope: !3086, inlinedAt: !5004)
!5019 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !5004)
!5020 = !DILocation(line: 746, column: 4, scope: !5005)
!5021 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5022)
!5022 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5023)
!5023 = distinct !DILocation(line: 746, column: 4, scope: !4646)
!5024 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5022)
!5025 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5022)
!5026 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5023)
!5027 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5023)
!5028 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5023)
!5029 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5023)
!5030 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5023)
!5031 = !DILocation(line: 746, column: 4, scope: !4646)
!5032 = !{i32 -2145565657, i32 -2145565644, i32 -2145565619, i32 -2145565595, i32 -2145565570, i32 -2145565495, i32 -2145565470, i32 -2145565326, i32 -2145562194, i32 -2145562105, i32 -2145561984, i32 -2145561889, i32 -2145561788, i32 -2145561761, i32 -2145561678, i32 -2145561589, i32 -2145561468, i32 -2145561368, i32 -2145561262, i32 -2145561154, i32 -2145565038, i32 -2145564985, i32 -2145564954, i32 -2145564923, i32 -2145564902, i32 -2145564880, i32 -2145564831, i32 -2145564810, i32 -2145561071, i32 -2145560982, i32 -2145560861, i32 -2145560762, i32 -2145560656, i32 -2145560554, i32 -2145560521, i32 -2145560448, i32 -2145560380, i32 -2145564506, i32 -2145564447, i32 -2145564394, i32 -2145564363, i32 -2145564332, i32 -2145564311, i32 -2145564289, i32 -2145564240, i32 -2145564219, i32 -2145560327, i32 -2145560238, i32 -2145560117, i32 -2145560018, i32 -2145559912, i32 -2145559810, i32 -2145559777, i32 -2145559694, i32 -2145559605, i32 -2145559484, i32 -2145559384, i32 -2145559358, i32 -2145559255, i32 -2145559229, i32 -2145563961, i32 -2145563894, i32 -2145563869, i32 -2145563805, i32 -2145563723, i32 -2145563700, i32 -2145563675, i32 -2145563650}
!5033 = !DILocation(line: 746, column: 4, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 746, column: 4)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 746, column: 4)
!5036 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 746, column: 4)
!5037 = !{i32 -2145562462, i32 -2145562446}
!5038 = !DILocation(line: 748, column: 9, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 748, column: 8)
!5040 = !DILocation(line: 748, column: 8, scope: !4651)
!5041 = !DILocation(line: 749, column: 5, scope: !5039)
!5042 = !DILocation(line: 750, column: 27, scope: !4651)
!5043 = !DILocation(line: 750, column: 4, scope: !4651)
!5044 = !DILocation(line: 751, column: 3, scope: !4651)
!5045 = !DILocation(line: 752, column: 17, scope: !4661)
!5046 = !DILocation(line: 752, column: 20, scope: !4661)
!5047 = !DILocation(line: 752, column: 7, scope: !4641)
!5048 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5049)
!5049 = distinct !DILocation(line: 756, column: 4, scope: !4658)
!5050 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5049)
!5051 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5049)
!5052 = !DILocation(line: 756, column: 4, scope: !4658)
!5053 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5054)
!5054 = distinct !DILocation(line: 756, column: 4, scope: !4658)
!5055 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5054)
!5056 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5054)
!5057 = !DILocation(line: 756, column: 4, scope: !4659)
!5058 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !5059)
!5059 = distinct !DILocation(line: 756, column: 4, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 756, column: 4)
!5061 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !5059)
!5062 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !5059)
!5063 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !5059)
!5064 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !5059)
!5065 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !5059)
!5066 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !5059)
!5067 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !5059)
!5068 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !5059)
!5069 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !5059)
!5070 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !5059)
!5071 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !5059)
!5072 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !5059)
!5073 = !DILocation(line: 0, scope: !3086, inlinedAt: !5059)
!5074 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !5059)
!5075 = !DILocation(line: 756, column: 4, scope: !5060)
!5076 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5077)
!5077 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5078)
!5078 = distinct !DILocation(line: 756, column: 4, scope: !4655)
!5079 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5077)
!5080 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5077)
!5081 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5078)
!5082 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5078)
!5083 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5078)
!5084 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5078)
!5085 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5078)
!5086 = !DILocation(line: 756, column: 4, scope: !4655)
!5087 = !{i32 -2145556894, i32 -2145556881, i32 -2145556856, i32 -2145556832, i32 -2145556807, i32 -2145556732, i32 -2145556707, i32 -2145556563, i32 -2145553431, i32 -2145553342, i32 -2145553221, i32 -2145553126, i32 -2145553025, i32 -2145552998, i32 -2145552915, i32 -2145552826, i32 -2145552705, i32 -2145552605, i32 -2145552499, i32 -2145552391, i32 -2145556275, i32 -2145556222, i32 -2145556191, i32 -2145556160, i32 -2145556139, i32 -2145556117, i32 -2145556068, i32 -2145556047, i32 -2145552308, i32 -2145552219, i32 -2145552098, i32 -2145551999, i32 -2145551893, i32 -2145551791, i32 -2145551758, i32 -2145551685, i32 -2145551617, i32 -2145555743, i32 -2145555684, i32 -2145555631, i32 -2145555600, i32 -2145555569, i32 -2145555548, i32 -2145555526, i32 -2145555477, i32 -2145555456, i32 -2145551564, i32 -2145551475, i32 -2145551354, i32 -2145551255, i32 -2145551149, i32 -2145551047, i32 -2145551014, i32 -2145550931, i32 -2145550842, i32 -2145550721, i32 -2145550621, i32 -2145550595, i32 -2145550492, i32 -2145550466, i32 -2145555198, i32 -2145555131, i32 -2145555106, i32 -2145555042, i32 -2145554960, i32 -2145554937, i32 -2145554912, i32 -2145554887}
!5088 = !DILocation(line: 756, column: 4, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 756, column: 4)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 756, column: 4)
!5091 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 756, column: 4)
!5092 = !{i32 -2145553699, i32 -2145553683}
!5093 = !DILocation(line: 758, column: 9, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 758, column: 8)
!5095 = !DILocation(line: 758, column: 8, scope: !4660)
!5096 = !DILocation(line: 759, column: 5, scope: !5094)
!5097 = !DILocation(line: 760, column: 27, scope: !4660)
!5098 = !DILocation(line: 760, column: 4, scope: !4660)
!5099 = !DILocation(line: 761, column: 3, scope: !4660)
!5100 = !DILocation(line: 731, column: 25, scope: !4642)
!5101 = !DILocation(line: 731, column: 16, scope: !4642)
!5102 = distinct !{!5102, !4934, !5103}
!5103 = !DILocation(line: 762, column: 2, scope: !4643)
!5104 = !DILocation(line: 766, column: 1, scope: !4563)
!5105 = distinct !DISubprogram(name: "lwip_select", scope: !3, file: !3, line: 2962, type: !4564, isLocal: false, isDefinition: true, scopeLine: 2964, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5106)
!5106 = !{!5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5129, !5137, !5142, !5147, !5153, !5161, !5167, !5177, !5184, !5191, !5197, !5205}
!5107 = !DILocalVariable(name: "maxfdp1", arg: 1, scope: !5105, file: !3, line: 2962, type: !80)
!5108 = !DILocalVariable(name: "readset", arg: 2, scope: !5105, file: !3, line: 2962, type: !245)
!5109 = !DILocalVariable(name: "writeset", arg: 3, scope: !5105, file: !3, line: 2962, type: !245)
!5110 = !DILocalVariable(name: "exceptset", arg: 4, scope: !5105, file: !3, line: 2962, type: !245)
!5111 = !DILocalVariable(name: "timeout", arg: 5, scope: !5105, file: !3, line: 2963, type: !4566)
!5112 = !DILocalVariable(name: "waitres", scope: !5105, file: !3, line: 2965, type: !169)
!5113 = !DILocalVariable(name: "nready", scope: !5105, file: !3, line: 2966, type: !80)
!5114 = !DILocalVariable(name: "lreadset", scope: !5105, file: !3, line: 2967, type: !246)
!5115 = !DILocalVariable(name: "lwriteset", scope: !5105, file: !3, line: 2967, type: !246)
!5116 = !DILocalVariable(name: "lexceptset", scope: !5105, file: !3, line: 2967, type: !246)
!5117 = !DILocalVariable(name: "msectimeout", scope: !5105, file: !3, line: 2968, type: !169)
!5118 = !DILocalVariable(name: "i", scope: !5105, file: !3, line: 2969, type: !80)
!5119 = !DILocalVariable(name: "maxfdp2", scope: !5105, file: !3, line: 2970, type: !80)
!5120 = !DILocalVariable(name: "lev", scope: !5105, file: !3, line: 2977, type: !134)
!5121 = !DILocalVariable(name: "tid", scope: !5122, file: !3, line: 2985, type: !170)
!5122 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 2985, column: 5)
!5123 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 2985, column: 5)
!5124 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 2985, column: 5)
!5125 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 2985, column: 5)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 2985, column: 5)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 2984, column: 57)
!5128 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 2984, column: 7)
!5129 = !DILocalVariable(name: "tid", scope: !5130, file: !3, line: 2997, type: !170)
!5130 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 2997, column: 5)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 2997, column: 5)
!5132 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2997, column: 5)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2997, column: 5)
!5134 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 2997, column: 5)
!5135 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 2995, column: 19)
!5136 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 2995, column: 7)
!5137 = !DILocalVariable(name: "select_cb", scope: !5138, file: !3, line: 3015, type: !238)
!5138 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 3009, column: 12)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 3005, column: 9)
!5140 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 3003, column: 10)
!5141 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 3000, column: 14)
!5142 = !DILocalVariable(name: "sockerr", scope: !5143, file: !3, line: 3016, type: !1007)
!5143 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 3016, column: 7)
!5144 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 3016, column: 7)
!5145 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 3016, column: 7)
!5146 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3016, column: 7)
!5147 = !DILocalVariable(name: "tid", scope: !5148, file: !3, line: 3016, type: !170)
!5148 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 3016, column: 7)
!5149 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 3016, column: 7)
!5150 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 3016, column: 7)
!5151 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 3016, column: 7)
!5152 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 3016, column: 7)
!5153 = !DILocalVariable(name: "tid", scope: !5154, file: !3, line: 3027, type: !170)
!5154 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 3027, column: 9)
!5155 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 3027, column: 9)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 3027, column: 9)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 3027, column: 9)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 3027, column: 9)
!5159 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 3025, column: 76)
!5160 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3025, column: 11)
!5161 = !DILocalVariable(name: "sock", scope: !5162, file: !3, line: 3042, type: !1165)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 3041, column: 52)
!5163 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 3039, column: 13)
!5164 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 3038, column: 54)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 3038, column: 7)
!5166 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3038, column: 7)
!5167 = !DILocalVariable(name: "tid", scope: !5168, file: !3, line: 3054, type: !170)
!5168 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 3054, column: 15)
!5169 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 3054, column: 15)
!5170 = distinct !DILexicalBlock(scope: !5171, file: !3, line: 3054, column: 15)
!5171 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 3054, column: 15)
!5172 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 3054, column: 15)
!5173 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 3047, column: 44)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 3047, column: 17)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 3045, column: 29)
!5176 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 3045, column: 15)
!5177 = !DILocalVariable(name: "tid", scope: !5178, file: !3, line: 3064, type: !170)
!5178 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 3064, column: 13)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 3064, column: 13)
!5180 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 3064, column: 13)
!5181 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 3064, column: 13)
!5182 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 3064, column: 13)
!5183 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 3059, column: 18)
!5184 = !DILocalVariable(name: "msecs_long", scope: !5185, file: !3, line: 3080, type: !142)
!5185 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 3079, column: 18)
!5186 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 3076, column: 15)
!5187 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 3074, column: 22)
!5188 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 3074, column: 13)
!5189 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 3070, column: 24)
!5190 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3070, column: 11)
!5191 = !DILocalVariable(name: "sock", scope: !5192, file: !3, line: 3101, type: !1165)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 3100, column: 52)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 3098, column: 13)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 3097, column: 54)
!5195 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 3097, column: 7)
!5196 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3097, column: 7)
!5197 = !DILocalVariable(name: "tid", scope: !5198, file: !3, line: 3116, type: !170)
!5198 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 3116, column: 13)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 3116, column: 13)
!5200 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 3116, column: 13)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 3116, column: 13)
!5202 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 3116, column: 13)
!5203 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 3112, column: 18)
!5204 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 3104, column: 15)
!5205 = !DILocalVariable(name: "tid", scope: !5206, file: !3, line: 3153, type: !170)
!5206 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 3153, column: 3)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 3153, column: 3)
!5208 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 3153, column: 3)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 3153, column: 3)
!5210 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 3153, column: 3)
!5211 = !DILocation(line: 2962, column: 17, scope: !5105)
!5212 = !DILocation(line: 2962, column: 34, scope: !5105)
!5213 = !DILocation(line: 2962, column: 51, scope: !5105)
!5214 = !DILocation(line: 2962, column: 69, scope: !5105)
!5215 = !DILocation(line: 2963, column: 29, scope: !5105)
!5216 = !DILocation(line: 2965, column: 9, scope: !5105)
!5217 = !DILocation(line: 2967, column: 3, scope: !5105)
!5218 = !DILocation(line: 2984, column: 21, scope: !5128)
!5219 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5220)
!5220 = distinct !DILocation(line: 2985, column: 5, scope: !5125)
!5221 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5220)
!5222 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5220)
!5223 = !DILocation(line: 2985, column: 5, scope: !5125)
!5224 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5225)
!5225 = distinct !DILocation(line: 2985, column: 5, scope: !5125)
!5226 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5225)
!5227 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5225)
!5228 = !DILocation(line: 2985, column: 5, scope: !5126)
!5229 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5230)
!5230 = distinct !DILocation(line: 2985, column: 5, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 2985, column: 5)
!5232 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5230)
!5233 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5230)
!5234 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5230)
!5235 = !DILocation(line: 2985, column: 5, scope: !5231)
!5236 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5237)
!5237 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5238)
!5238 = distinct !DILocation(line: 2985, column: 5, scope: !5122)
!5239 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5237)
!5240 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5237)
!5241 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5238)
!5242 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5238)
!5243 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5238)
!5244 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5238)
!5245 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5238)
!5246 = !DILocation(line: 2985, column: 5, scope: !5122)
!5247 = !{i32 -2144778310, i32 -2144778297, i32 -2144778272, i32 -2144778248, i32 -2144778223, i32 -2144778148, i32 -2144778123, i32 -2144777979, i32 -2144775757, i32 -2144775668, i32 -2144775547, i32 -2144775452, i32 -2144775351, i32 -2144775324, i32 -2144775241, i32 -2144775152, i32 -2144775031, i32 -2144774931, i32 -2144774825, i32 -2144774717, i32 -2144777691, i32 -2144777638, i32 -2144777607, i32 -2144777576, i32 -2144777555, i32 -2144777533, i32 -2144777484, i32 -2144777463, i32 -2144774634, i32 -2144774545, i32 -2144774424, i32 -2144774325, i32 -2144774219, i32 -2144774117, i32 -2144774084, i32 -2144774011, i32 -2144773943, i32 -2144777089, i32 -2144777036, i32 -2144777005, i32 -2144776974, i32 -2144776953, i32 -2144776931, i32 -2144776882, i32 -2144776861, i32 -2144773888, i32 -2144773799, i32 -2144773678, i32 -2144773579, i32 -2144773473, i32 -2144773371, i32 -2144773338, i32 -2144773255, i32 -2144773166, i32 -2144773045, i32 -2144772945, i32 -2144772919, i32 -2144772816, i32 -2144772790, i32 -2144776603, i32 -2144776536, i32 -2144776511, i32 -2144776447, i32 -2144776331, i32 -2144776306, i32 -2144776281}
!5248 = !DILocation(line: 2967, column: 10, scope: !5105)
!5249 = !DILocation(line: 2967, column: 20, scope: !5105)
!5250 = !DILocation(line: 2967, column: 31, scope: !5105)
!5251 = !DILocation(line: 2993, column: 12, scope: !5105)
!5252 = !DILocation(line: 2966, column: 7, scope: !5105)
!5253 = !DILocation(line: 2995, column: 14, scope: !5136)
!5254 = !DILocation(line: 2995, column: 7, scope: !5105)
!5255 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5256)
!5256 = distinct !DILocation(line: 2997, column: 5, scope: !5133)
!5257 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5256)
!5258 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5256)
!5259 = !DILocation(line: 2997, column: 5, scope: !5133)
!5260 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5261)
!5261 = distinct !DILocation(line: 2997, column: 5, scope: !5133)
!5262 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5261)
!5263 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5261)
!5264 = !DILocation(line: 2997, column: 5, scope: !5134)
!5265 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5266)
!5266 = distinct !DILocation(line: 2997, column: 5, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2997, column: 5)
!5268 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5266)
!5269 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5266)
!5270 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5266)
!5271 = !DILocation(line: 2997, column: 5, scope: !5267)
!5272 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5273)
!5273 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5274)
!5274 = distinct !DILocation(line: 2997, column: 5, scope: !5130)
!5275 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5273)
!5276 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5273)
!5277 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5274)
!5278 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5274)
!5279 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5274)
!5280 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5274)
!5281 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5274)
!5282 = !DILocation(line: 2997, column: 5, scope: !5130)
!5283 = !{i32 -2144770886, i32 -2144770873, i32 -2144770848, i32 -2144770824, i32 -2144770799, i32 -2144770724, i32 -2144770699, i32 -2144770555, i32 -2144768335, i32 -2144768246, i32 -2144768125, i32 -2144768030, i32 -2144767929, i32 -2144767902, i32 -2144767819, i32 -2144767730, i32 -2144767609, i32 -2144767509, i32 -2144767403, i32 -2144767295, i32 -2144770267, i32 -2144770214, i32 -2144770183, i32 -2144770152, i32 -2144770131, i32 -2144770109, i32 -2144770060, i32 -2144770039, i32 -2144767212, i32 -2144767123, i32 -2144767002, i32 -2144766903, i32 -2144766797, i32 -2144766695, i32 -2144766662, i32 -2144766589, i32 -2144766521, i32 -2144769665, i32 -2144769612, i32 -2144769581, i32 -2144769550, i32 -2144769529, i32 -2144769507, i32 -2144769458, i32 -2144769437, i32 -2144766466, i32 -2144766377, i32 -2144766256, i32 -2144766157, i32 -2144766051, i32 -2144765949, i32 -2144765916, i32 -2144765833, i32 -2144765744, i32 -2144765623, i32 -2144765523, i32 -2144765497, i32 -2144765394, i32 -2144765368, i32 -2144769179, i32 -2144769112, i32 -2144769087, i32 -2144769023, i32 -2144768907, i32 -2144768882, i32 -2144768857}
!5284 = !DILocation(line: 3000, column: 21, scope: !5141)
!5285 = !DILocation(line: 3000, column: 14, scope: !5136)
!5286 = !DILocation(line: 3005, column: 9, scope: !5139)
!5287 = !DILocation(line: 3005, column: 17, scope: !5139)
!5288 = !DILocation(line: 3005, column: 29, scope: !5139)
!5289 = !DILocation(line: 3005, column: 36, scope: !5139)
!5290 = !DILocation(line: 3005, column: 41, scope: !5139)
!5291 = !DILocation(line: 3005, column: 53, scope: !5139)
!5292 = !DILocation(line: 3005, column: 61, scope: !5139)
!5293 = !DILocation(line: 3005, column: 9, scope: !5140)
!5294 = !DILocation(line: 3016, column: 7, scope: !5146)
!5295 = !DILocation(line: 157, column: 48, scope: !4314, inlinedAt: !5296)
!5296 = distinct !DILocation(line: 3016, column: 7, scope: !5146)
!5297 = !DILocation(line: 157, column: 58, scope: !4314, inlinedAt: !5296)
!5298 = !DILocation(line: 159, column: 6, scope: !4321, inlinedAt: !5296)
!5299 = !DILocation(line: 159, column: 6, scope: !4314, inlinedAt: !5296)
!5300 = !DILocation(line: 160, column: 3, scope: !4324, inlinedAt: !5296)
!5301 = !DILocation(line: 160, column: 9, scope: !4324, inlinedAt: !5296)
!5302 = !DILocation(line: 164, column: 1, scope: !4314, inlinedAt: !5296)
!5303 = !DILocation(line: 3015, column: 7, scope: !5138)
!5304 = !DILocation(line: 151, column: 51, scope: !4329, inlinedAt: !5305)
!5305 = distinct !DILocation(line: 163, column: 9, scope: !4314, inlinedAt: !5296)
!5306 = !DILocation(line: 151, column: 61, scope: !4329, inlinedAt: !5305)
!5307 = !DILocation(line: 154, column: 12, scope: !4329, inlinedAt: !5305)
!5308 = !DILocation(line: 154, column: 9, scope: !4329, inlinedAt: !5305)
!5309 = !DILocation(line: 154, column: 2, scope: !4329, inlinedAt: !5305)
!5310 = !DILocation(line: 3016, column: 7, scope: !5145)
!5311 = !DILocation(line: 3016, column: 7, scope: !5143)
!5312 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5313)
!5313 = distinct !DILocation(line: 3016, column: 7, scope: !5151)
!5314 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5313)
!5315 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5313)
!5316 = !DILocation(line: 3016, column: 7, scope: !5151)
!5317 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5318)
!5318 = distinct !DILocation(line: 3016, column: 7, scope: !5151)
!5319 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5318)
!5320 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5318)
!5321 = !DILocation(line: 3016, column: 7, scope: !5152)
!5322 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5323)
!5323 = distinct !DILocation(line: 3016, column: 7, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 3016, column: 7)
!5325 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5323)
!5326 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5323)
!5327 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5323)
!5328 = !DILocation(line: 3016, column: 7, scope: !5324)
!5329 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5330)
!5330 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5331)
!5331 = distinct !DILocation(line: 3016, column: 7, scope: !5148)
!5332 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5330)
!5333 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5330)
!5334 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5331)
!5335 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5331)
!5336 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5331)
!5337 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5331)
!5338 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5331)
!5339 = !DILocation(line: 3016, column: 7, scope: !5148)
!5340 = !{i32 -2144756959, i32 -2144756946, i32 -2144756921, i32 -2144756897, i32 -2144756872, i32 -2144756855, i32 -2144756830, i32 -2144756813, i32 -2144756790, i32 -2144756769, i32 -2144756735, i32 -2144756716, i32 -2144756694, i32 -2144756667, i32 -2144756644, i32 -2144756623, i32 -2144756589, i32 -2144756565, i32 -2144756540, i32 -2144756512, i32 -2144756503, i32 -2144756450, i32 -2144756419, i32 -2144756388, i32 -2144756367, i32 -2144756345, i32 -2144756296, i32 -2144756275, i32 -2144756252, i32 -2144756231, i32 -2144756197, i32 -2144756174, i32 -2144756149, i32 -2144756127, i32 -2144756094, i32 -2144756071, i32 -2144756034, i32 -2144756025, i32 -2144755972, i32 -2144755941, i32 -2144755910, i32 -2144755889, i32 -2144755867, i32 -2144755818, i32 -2144755797, i32 -2144755774, i32 -2144755753, i32 -2144755719, i32 -2144755696, i32 -2144755671, i32 -2144755649, i32 -2144755616, i32 -2144755593, i32 -2144755572, i32 -2144755538, i32 -2144755516, i32 -2144755490, i32 -2144755468, i32 -2144755442, i32 -2144755426, i32 -2144755410, i32 -2144755385, i32 -2144755370, i32 -2144755355, i32 -2144755330, i32 -2144755305}
!5341 = !DILocation(line: 3017, column: 7, scope: !5138)
!5342 = !DILocation(line: 3019, column: 40, scope: !5138)
!5343 = !DILocation(line: 3019, column: 48, scope: !5138)
!5344 = !{!4373, !1408, i64 16}
!5345 = !DILocation(line: 3020, column: 40, scope: !5138)
!5346 = !DILocation(line: 3020, column: 49, scope: !5138)
!5347 = !{!4373, !1408, i64 24}
!5348 = !DILocation(line: 3021, column: 40, scope: !5138)
!5349 = !DILocation(line: 3021, column: 50, scope: !5138)
!5350 = !{!4373, !1408, i64 32}
!5351 = !DILocation(line: 3025, column: 57, scope: !5160)
!5352 = !DILocation(line: 3025, column: 11, scope: !5160)
!5353 = !DILocation(line: 3025, column: 65, scope: !5160)
!5354 = !DILocation(line: 3025, column: 11, scope: !5138)
!5355 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5356)
!5356 = distinct !DILocation(line: 3027, column: 9, scope: !5157)
!5357 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5356)
!5358 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5356)
!5359 = !DILocation(line: 3027, column: 9, scope: !5157)
!5360 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5361)
!5361 = distinct !DILocation(line: 3027, column: 9, scope: !5157)
!5362 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5361)
!5363 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5361)
!5364 = !DILocation(line: 3027, column: 9, scope: !5158)
!5365 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5366)
!5366 = distinct !DILocation(line: 3027, column: 9, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 3027, column: 9)
!5368 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5366)
!5369 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5366)
!5370 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5366)
!5371 = !DILocation(line: 3027, column: 9, scope: !5367)
!5372 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5373)
!5373 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5374)
!5374 = distinct !DILocation(line: 3027, column: 9, scope: !5154)
!5375 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5373)
!5376 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5373)
!5377 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5374)
!5378 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5374)
!5379 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5374)
!5380 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5374)
!5381 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5374)
!5382 = !DILocation(line: 3027, column: 9, scope: !5154)
!5383 = !{i32 -2144752897, i32 -2144752884, i32 -2144752859, i32 -2144752835, i32 -2144752810, i32 -2144752735, i32 -2144752710, i32 -2144752566, i32 -2144750344, i32 -2144750255, i32 -2144750134, i32 -2144750039, i32 -2144749938, i32 -2144749911, i32 -2144749828, i32 -2144749739, i32 -2144749618, i32 -2144749518, i32 -2144749412, i32 -2144749304, i32 -2144752278, i32 -2144752225, i32 -2144752194, i32 -2144752163, i32 -2144752142, i32 -2144752120, i32 -2144752071, i32 -2144752050, i32 -2144749221, i32 -2144749132, i32 -2144749011, i32 -2144748912, i32 -2144748806, i32 -2144748704, i32 -2144748671, i32 -2144748598, i32 -2144748530, i32 -2144751676, i32 -2144751623, i32 -2144751592, i32 -2144751561, i32 -2144751540, i32 -2144751518, i32 -2144751469, i32 -2144751448, i32 -2144748475, i32 -2144748386, i32 -2144748265, i32 -2144748166, i32 -2144748060, i32 -2144747958, i32 -2144747925, i32 -2144747842, i32 -2144747753, i32 -2144747632, i32 -2144747532, i32 -2144747506, i32 -2144747403, i32 -2144747377, i32 -2144751190, i32 -2144751123, i32 -2144751098, i32 -2144751034, i32 -2144750918, i32 -2144750893, i32 -2144750868}
!5384 = !DILocation(line: 3029, column: 9, scope: !5159)
!5385 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !5386)
!5386 = distinct !DILocation(line: 3029, column: 9, scope: !5159)
!5387 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !5386)
!5388 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !5389)
!5389 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !5386)
!5390 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !5389)
!5391 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !5389)
!5392 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !5389)
!5393 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !5389)
!5394 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !5389)
!5395 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !5389)
!5396 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !5389)
!5397 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !5386)
!5398 = !DILocation(line: 3030, column: 9, scope: !5159)
!5399 = !DILocation(line: 2769, column: 44, scope: !4426, inlinedAt: !5400)
!5400 = distinct !DILocation(line: 3034, column: 7, scope: !5138)
!5401 = !DILocation(line: 2774, column: 3, scope: !4426, inlinedAt: !5400)
!5402 = !DILocation(line: 2777, column: 21, scope: !4426, inlinedAt: !5400)
!5403 = !DILocation(line: 2777, column: 19, scope: !4426, inlinedAt: !5400)
!5404 = !DILocation(line: 2778, column: 22, scope: !4437, inlinedAt: !5400)
!5405 = !DILocation(line: 2778, column: 7, scope: !4426, inlinedAt: !5400)
!5406 = !DILocation(line: 2778, column: 7, scope: !4437, inlinedAt: !5400)
!5407 = !DILocation(line: 2779, column: 21, scope: !4441, inlinedAt: !5400)
!5408 = !DILocation(line: 2779, column: 26, scope: !4441, inlinedAt: !5400)
!5409 = !DILocation(line: 2780, column: 3, scope: !4441, inlinedAt: !5400)
!5410 = !DILocation(line: 2781, column: 18, scope: !4426, inlinedAt: !5400)
!5411 = !DILocation(line: 2788, column: 3, scope: !4426, inlinedAt: !5400)
!5412 = !DILocation(line: 2789, column: 1, scope: !4426, inlinedAt: !5400)
!5413 = !DILocation(line: 2970, column: 7, scope: !5105)
!5414 = !DILocation(line: 2969, column: 7, scope: !5105)
!5415 = !DILocation(line: 3038, column: 38, scope: !5165)
!5416 = !DILocation(line: 3038, column: 7, scope: !5166)
!5417 = !DILocation(line: 3039, column: 22, scope: !5163)
!5418 = !DILocation(line: 3039, column: 25, scope: !5163)
!5419 = !DILocation(line: 3039, column: 47, scope: !5163)
!5420 = !DILocation(line: 3040, column: 23, scope: !5163)
!5421 = !DILocation(line: 3040, column: 26, scope: !5163)
!5422 = !DILocation(line: 3040, column: 49, scope: !5163)
!5423 = !DILocation(line: 3041, column: 24, scope: !5163)
!5424 = !DILocation(line: 3041, column: 27, scope: !5163)
!5425 = !DILocation(line: 3039, column: 13, scope: !5164)
!5426 = !DILocation(line: 3043, column: 11, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 3043, column: 11)
!5428 = !DILocation(line: 2977, column: 3, scope: !5105)
!5429 = !DILocalVariable(name: "fd", arg: 1, scope: !5430, file: !3, line: 1440, type: !80)
!5430 = distinct !DISubprogram(name: "tryget_socket_unconn_locked", scope: !3, file: !3, line: 1440, type: !1557, isLocal: true, isDefinition: true, scopeLine: 1441, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5431)
!5431 = !{!5429, !5432}
!5432 = !DILocalVariable(name: "ret", scope: !5430, file: !3, line: 1442, type: !1165)
!5433 = !DILocation(line: 1440, column: 33, scope: !5430, inlinedAt: !5434)
!5434 = distinct !DILocation(line: 3044, column: 18, scope: !5162)
!5435 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !5436)
!5436 = distinct !DILocation(line: 1442, column: 27, scope: !5430, inlinedAt: !5434)
!5437 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !5436)
!5438 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !5436)
!5439 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !5436)
!5440 = !DILocation(line: 1448, column: 3, scope: !5430, inlinedAt: !5434)
!5441 = !DILocation(line: 3045, column: 15, scope: !5162)
!5442 = !DILocation(line: 3046, column: 19, scope: !5175)
!5443 = !DILocation(line: 3046, column: 33, scope: !5175)
!5444 = !{!1603, !1405, i64 22}
!5445 = !DILocation(line: 3047, column: 38, scope: !5174)
!5446 = !DILocation(line: 3047, column: 17, scope: !5175)
!5447 = !DILocation(line: 3049, column: 35, scope: !5173)
!5448 = !DILocation(line: 3052, column: 15, scope: !5173)
!5449 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5450)
!5450 = distinct !DILocation(line: 3054, column: 15, scope: !5171)
!5451 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5450)
!5452 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5450)
!5453 = !DILocation(line: 3054, column: 15, scope: !5171)
!5454 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5455)
!5455 = distinct !DILocation(line: 3054, column: 15, scope: !5171)
!5456 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5455)
!5457 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5455)
!5458 = !DILocation(line: 3054, column: 15, scope: !5172)
!5459 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5460)
!5460 = distinct !DILocation(line: 3054, column: 15, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5171, file: !3, line: 3054, column: 15)
!5462 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5460)
!5463 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5460)
!5464 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5460)
!5465 = !DILocation(line: 3054, column: 15, scope: !5461)
!5466 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5467)
!5467 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5468)
!5468 = distinct !DILocation(line: 3054, column: 15, scope: !5168)
!5469 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5467)
!5470 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5467)
!5471 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5468)
!5472 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5468)
!5473 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5468)
!5474 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5468)
!5475 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5468)
!5476 = !DILocation(line: 3054, column: 15, scope: !5168)
!5477 = !{i32 -2144744971, i32 -2144744958, i32 -2144744933, i32 -2144744909, i32 -2144744884, i32 -2144744809, i32 -2144744784, i32 -2144744640, i32 -2144742418, i32 -2144742329, i32 -2144742208, i32 -2144742113, i32 -2144742012, i32 -2144741985, i32 -2144741902, i32 -2144741813, i32 -2144741692, i32 -2144741592, i32 -2144741486, i32 -2144741378, i32 -2144744352, i32 -2144744299, i32 -2144744268, i32 -2144744237, i32 -2144744216, i32 -2144744194, i32 -2144744145, i32 -2144744124, i32 -2144741295, i32 -2144741206, i32 -2144741085, i32 -2144740986, i32 -2144740880, i32 -2144740778, i32 -2144740745, i32 -2144740672, i32 -2144740604, i32 -2144743750, i32 -2144743697, i32 -2144743666, i32 -2144743635, i32 -2144743614, i32 -2144743592, i32 -2144743543, i32 -2144743522, i32 -2144740549, i32 -2144740460, i32 -2144740339, i32 -2144740240, i32 -2144740134, i32 -2144740032, i32 -2144739999, i32 -2144739916, i32 -2144739827, i32 -2144739706, i32 -2144739606, i32 -2144739580, i32 -2144739477, i32 -2144739451, i32 -2144743264, i32 -2144743197, i32 -2144743172, i32 -2144743108, i32 -2144742992, i32 -2144742967, i32 -2144742942}
!5478 = !DILocation(line: 3063, column: 13, scope: !5183)
!5479 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5480)
!5480 = distinct !DILocation(line: 3064, column: 13, scope: !5181)
!5481 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5480)
!5482 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5480)
!5483 = !DILocation(line: 3064, column: 13, scope: !5181)
!5484 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5485)
!5485 = distinct !DILocation(line: 3064, column: 13, scope: !5181)
!5486 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5485)
!5487 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5485)
!5488 = !DILocation(line: 3064, column: 13, scope: !5182)
!5489 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5490)
!5490 = distinct !DILocation(line: 3064, column: 13, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 3064, column: 13)
!5492 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5490)
!5493 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5490)
!5494 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5490)
!5495 = !DILocation(line: 3064, column: 13, scope: !5491)
!5496 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5497)
!5497 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5498)
!5498 = distinct !DILocation(line: 3064, column: 13, scope: !5178)
!5499 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5497)
!5500 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5497)
!5501 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5498)
!5502 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5498)
!5503 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5498)
!5504 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5498)
!5505 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5498)
!5506 = !DILocation(line: 3064, column: 13, scope: !5178)
!5507 = !{i32 -2144737477, i32 -2144737464, i32 -2144737439, i32 -2144737415, i32 -2144737390, i32 -2144737315, i32 -2144737290, i32 -2144737146, i32 -2144734926, i32 -2144734837, i32 -2144734716, i32 -2144734621, i32 -2144734520, i32 -2144734493, i32 -2144734410, i32 -2144734321, i32 -2144734200, i32 -2144734100, i32 -2144733994, i32 -2144733886, i32 -2144736858, i32 -2144736805, i32 -2144736774, i32 -2144736743, i32 -2144736722, i32 -2144736700, i32 -2144736651, i32 -2144736630, i32 -2144733803, i32 -2144733714, i32 -2144733593, i32 -2144733494, i32 -2144733388, i32 -2144733286, i32 -2144733253, i32 -2144733180, i32 -2144733112, i32 -2144736256, i32 -2144736203, i32 -2144736172, i32 -2144736141, i32 -2144736120, i32 -2144736098, i32 -2144736049, i32 -2144736028, i32 -2144733057, i32 -2144732968, i32 -2144732847, i32 -2144732748, i32 -2144732642, i32 -2144732540, i32 -2144732507, i32 -2144732424, i32 -2144732335, i32 -2144732214, i32 -2144732114, i32 -2144732088, i32 -2144731985, i32 -2144731959, i32 -2144735770, i32 -2144735703, i32 -2144735678, i32 -2144735614, i32 -2144735498, i32 -2144735473, i32 -2144735448}
!5508 = !DILocation(line: 3057, column: 13, scope: !5175)
!5509 = !DILocation(line: 3038, column: 50, scope: !5165)
!5510 = distinct !{!5510, !5416, !5511}
!5511 = !DILocation(line: 3068, column: 7, scope: !5166)
!5512 = !DILocation(line: 3073, column: 18, scope: !5189)
!5513 = !DILocation(line: 3074, column: 14, scope: !5188)
!5514 = !DILocation(line: 3074, column: 13, scope: !5189)
!5515 = !DILocation(line: 3076, column: 15, scope: !5187)
!5516 = !DILocation(line: 3080, column: 42, scope: !5185)
!5517 = !DILocation(line: 3080, column: 49, scope: !5185)
!5518 = !DILocation(line: 3080, column: 70, scope: !5185)
!5519 = !DILocation(line: 3080, column: 78, scope: !5185)
!5520 = !DILocation(line: 3080, column: 85, scope: !5185)
!5521 = !DILocation(line: 3080, column: 57, scope: !5185)
!5522 = !DILocation(line: 3080, column: 18, scope: !5185)
!5523 = !DILocation(line: 3081, column: 17, scope: !5185)
!5524 = !DILocation(line: 0, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 3081, column: 34)
!5526 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 3081, column: 17)
!5527 = !DILocation(line: 2968, column: 9, scope: !5105)
!5528 = !DILocation(line: 3089, column: 21, scope: !5187)
!5529 = !DILocation(line: 3093, column: 9, scope: !5187)
!5530 = !DILocation(line: 0, scope: !5173)
!5531 = !DILocation(line: 3097, column: 38, scope: !5195)
!5532 = !DILocation(line: 3097, column: 7, scope: !5196)
!5533 = !DILocation(line: 3098, column: 22, scope: !5193)
!5534 = !DILocation(line: 3098, column: 25, scope: !5193)
!5535 = !DILocation(line: 3098, column: 47, scope: !5193)
!5536 = !DILocation(line: 3099, column: 23, scope: !5193)
!5537 = !DILocation(line: 3099, column: 26, scope: !5193)
!5538 = !DILocation(line: 3099, column: 49, scope: !5193)
!5539 = !DILocation(line: 3100, column: 24, scope: !5193)
!5540 = !DILocation(line: 3100, column: 27, scope: !5193)
!5541 = !DILocation(line: 3098, column: 13, scope: !5194)
!5542 = !DILocation(line: 3102, column: 11, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 3102, column: 11)
!5544 = !DILocation(line: 1440, column: 33, scope: !5430, inlinedAt: !5545)
!5545 = distinct !DILocation(line: 3103, column: 18, scope: !5192)
!5546 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !5547)
!5547 = distinct !DILocation(line: 1442, column: 27, scope: !5430, inlinedAt: !5545)
!5548 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !5547)
!5549 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !5547)
!5550 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !5547)
!5551 = !DILocation(line: 1448, column: 3, scope: !5430, inlinedAt: !5545)
!5552 = !DILocation(line: 3104, column: 15, scope: !5192)
!5553 = !DILocation(line: 3106, column: 13, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 3106, column: 13)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 3106, column: 13)
!5556 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 3104, column: 29)
!5557 = !DILocation(line: 3106, column: 13, scope: !5555)
!5558 = !DILocation(line: 3106, column: 13, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 3106, column: 13)
!5560 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 3106, column: 13)
!5561 = !DILocation(line: 3106, column: 13, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 3106, column: 13)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 3106, column: 13)
!5564 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 3106, column: 13)
!5565 = !DILocation(line: 3108, column: 35, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 3107, column: 43)
!5567 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 3107, column: 17)
!5568 = !DILocation(line: 3110, column: 13, scope: !5556)
!5569 = !DILocation(line: 3112, column: 11, scope: !5556)
!5570 = !DILocation(line: 3113, column: 13, scope: !5203)
!5571 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5572)
!5572 = distinct !DILocation(line: 3116, column: 13, scope: !5201)
!5573 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5572)
!5574 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5572)
!5575 = !DILocation(line: 3116, column: 13, scope: !5201)
!5576 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5577)
!5577 = distinct !DILocation(line: 3116, column: 13, scope: !5201)
!5578 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5577)
!5579 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5577)
!5580 = !DILocation(line: 3116, column: 13, scope: !5202)
!5581 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5582)
!5582 = distinct !DILocation(line: 3116, column: 13, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 3116, column: 13)
!5584 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5582)
!5585 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5582)
!5586 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5582)
!5587 = !DILocation(line: 3116, column: 13, scope: !5583)
!5588 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5589)
!5589 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5590)
!5590 = distinct !DILocation(line: 3116, column: 13, scope: !5198)
!5591 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5589)
!5592 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5589)
!5593 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5590)
!5594 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5590)
!5595 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5590)
!5596 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5590)
!5597 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5590)
!5598 = !DILocation(line: 3116, column: 13, scope: !5198)
!5599 = !{i32 -2144729010, i32 -2144728997, i32 -2144728972, i32 -2144728948, i32 -2144728923, i32 -2144728848, i32 -2144728823, i32 -2144728679, i32 -2144726459, i32 -2144726370, i32 -2144726249, i32 -2144726154, i32 -2144726053, i32 -2144726026, i32 -2144725943, i32 -2144725854, i32 -2144725733, i32 -2144725633, i32 -2144725527, i32 -2144725419, i32 -2144728391, i32 -2144728338, i32 -2144728307, i32 -2144728276, i32 -2144728255, i32 -2144728233, i32 -2144728184, i32 -2144728163, i32 -2144725336, i32 -2144725247, i32 -2144725126, i32 -2144725027, i32 -2144724921, i32 -2144724819, i32 -2144724786, i32 -2144724713, i32 -2144724645, i32 -2144727789, i32 -2144727736, i32 -2144727705, i32 -2144727674, i32 -2144727653, i32 -2144727631, i32 -2144727582, i32 -2144727561, i32 -2144724590, i32 -2144724501, i32 -2144724380, i32 -2144724281, i32 -2144724175, i32 -2144724073, i32 -2144724040, i32 -2144723957, i32 -2144723868, i32 -2144723747, i32 -2144723647, i32 -2144723621, i32 -2144723518, i32 -2144723492, i32 -2144727303, i32 -2144727236, i32 -2144727211, i32 -2144727147, i32 -2144727031, i32 -2144727006, i32 -2144726981}
!5600 = !DILocation(line: 3073, column: 16, scope: !5189)
!5601 = !DILocation(line: 3097, column: 50, scope: !5195)
!5602 = distinct !{!5602, !5532, !5603}
!5603 = !DILocation(line: 3119, column: 7, scope: !5196)
!5604 = !DILocation(line: 3121, column: 7, scope: !5138)
!5605 = !DILocation(line: 3129, column: 7, scope: !5138)
!5606 = !DILocation(line: 3131, column: 7, scope: !5138)
!5607 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !5608)
!5608 = distinct !DILocation(line: 3131, column: 7, scope: !5138)
!5609 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !5608)
!5610 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !5611)
!5611 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !5608)
!5612 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !5611)
!5613 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !5611)
!5614 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !5611)
!5615 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !5611)
!5616 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !5611)
!5617 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !5611)
!5618 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !5611)
!5619 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !5608)
!5620 = !DILocation(line: 3133, column: 18, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3133, column: 11)
!5622 = !DILocation(line: 3133, column: 11, scope: !5138)
!5623 = !DILocation(line: 3139, column: 19, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3139, column: 11)
!5625 = !DILocation(line: 3139, column: 11, scope: !5138)
!5626 = !DILocation(line: 3146, column: 18, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 3144, column: 14)
!5628 = !DILocation(line: 2993, column: 10, scope: !5105)
!5629 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5630)
!5630 = distinct !DILocation(line: 3153, column: 3, scope: !5209)
!5631 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5630)
!5632 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5630)
!5633 = !DILocation(line: 3153, column: 3, scope: !5209)
!5634 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5635)
!5635 = distinct !DILocation(line: 3153, column: 3, scope: !5209)
!5636 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5635)
!5637 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5635)
!5638 = !DILocation(line: 3153, column: 3, scope: !5210)
!5639 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5640)
!5640 = distinct !DILocation(line: 3153, column: 3, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 3153, column: 3)
!5642 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5640)
!5643 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5640)
!5644 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5640)
!5645 = !DILocation(line: 3153, column: 3, scope: !5641)
!5646 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5647)
!5647 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5648)
!5648 = distinct !DILocation(line: 3153, column: 3, scope: !5206)
!5649 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5647)
!5650 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5647)
!5651 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5648)
!5652 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5648)
!5653 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5648)
!5654 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5648)
!5655 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5648)
!5656 = !DILocation(line: 3153, column: 3, scope: !5206)
!5657 = !{i32 -2144721511, i32 -2144721498, i32 -2144721473, i32 -2144721449, i32 -2144721424, i32 -2144721349, i32 -2144721324, i32 -2144721180, i32 -2144718964, i32 -2144718875, i32 -2144718754, i32 -2144718659, i32 -2144718558, i32 -2144718531, i32 -2144718448, i32 -2144718359, i32 -2144718238, i32 -2144718138, i32 -2144718032, i32 -2144717924, i32 -2144720892, i32 -2144720839, i32 -2144720808, i32 -2144720777, i32 -2144720756, i32 -2144720734, i32 -2144720685, i32 -2144720664, i32 -2144717841, i32 -2144717752, i32 -2144717631, i32 -2144717532, i32 -2144717426, i32 -2144717324, i32 -2144717291, i32 -2144717218, i32 -2144717150, i32 -2144720290, i32 -2144720237, i32 -2144720206, i32 -2144720175, i32 -2144720154, i32 -2144720132, i32 -2144720083, i32 -2144720062, i32 -2144717095, i32 -2144717006, i32 -2144716885, i32 -2144716786, i32 -2144716680, i32 -2144716578, i32 -2144716545, i32 -2144716462, i32 -2144716373, i32 -2144716252, i32 -2144716152, i32 -2144716126, i32 -2144716023, i32 -2144715997, i32 -2144719804, i32 -2144719737, i32 -2144719712, i32 -2144719648, i32 -2144719532, i32 -2144719507, i32 -2144719482}
!5658 = !DILocation(line: 3154, column: 7, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 3154, column: 7)
!5660 = !DILocation(line: 3154, column: 7, scope: !5105)
!5661 = !DILocation(line: 3155, column: 16, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 3154, column: 16)
!5663 = !DILocation(line: 3156, column: 3, scope: !5662)
!5664 = !DILocation(line: 3157, column: 7, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 3157, column: 7)
!5666 = !DILocation(line: 3157, column: 7, scope: !5105)
!5667 = !DILocation(line: 3158, column: 17, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 3157, column: 17)
!5669 = !DILocation(line: 3159, column: 3, scope: !5668)
!5670 = !DILocation(line: 3160, column: 7, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 3160, column: 7)
!5672 = !DILocation(line: 3160, column: 7, scope: !5105)
!5673 = !DILocation(line: 3161, column: 18, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 3160, column: 18)
!5675 = !DILocation(line: 3162, column: 3, scope: !5674)
!5676 = !DILocation(line: 0, scope: !5159)
!5677 = !DILocation(line: 3164, column: 1, scope: !5105)
!5678 = distinct !DISubprogram(name: "shutdown", scope: !3, file: !3, line: 768, type: !5679, isLocal: false, isDefinition: true, scopeLine: 769, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5681)
!5679 = !DISubroutineType(types: !5680)
!5680 = !{!80, !80, !80}
!5681 = !{!5682, !5683, !5684, !5685, !5686, !5692, !5693, !5702}
!5682 = !DILocalVariable(name: "s", arg: 1, scope: !5678, file: !3, line: 768, type: !80)
!5683 = !DILocalVariable(name: "how", arg: 2, scope: !5678, file: !3, line: 768, type: !80)
!5684 = !DILocalVariable(name: "ret", scope: !5678, file: !3, line: 770, type: !80)
!5685 = !DILocalVariable(name: "file", scope: !5678, file: !3, line: 771, type: !1077)
!5686 = !DILocalVariable(name: "tid", scope: !5687, file: !3, line: 773, type: !170)
!5687 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 773, column: 2)
!5688 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 773, column: 2)
!5689 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 773, column: 2)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 773, column: 2)
!5691 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 773, column: 2)
!5692 = !DILocalVariable(name: "_ret", scope: !5687, file: !3, line: 773, type: !135)
!5693 = !DILocalVariable(name: "tid", scope: !5694, file: !3, line: 779, type: !170)
!5694 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 779, column: 3)
!5695 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 779, column: 3)
!5696 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 779, column: 3)
!5697 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 779, column: 3)
!5698 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 779, column: 3)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 779, column: 3)
!5700 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 774, column: 22)
!5701 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 774, column: 6)
!5702 = !DILocalVariable(name: "tid", scope: !5703, file: !3, line: 784, type: !170)
!5703 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 784, column: 2)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 784, column: 2)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 784, column: 2)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 784, column: 2)
!5707 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 784, column: 2)
!5708 = !DILocation(line: 768, column: 18, scope: !5678)
!5709 = !DILocation(line: 768, column: 25, scope: !5678)
!5710 = !DILocation(line: 770, column: 6, scope: !5678)
!5711 = !DILocation(line: 771, column: 2, scope: !5678)
!5712 = !DILocation(line: 771, column: 24, scope: !5678)
!5713 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5714)
!5714 = distinct !DILocation(line: 773, column: 2, scope: !5690)
!5715 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5714)
!5716 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5714)
!5717 = !DILocation(line: 773, column: 2, scope: !5690)
!5718 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5719)
!5719 = distinct !DILocation(line: 773, column: 2, scope: !5690)
!5720 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5719)
!5721 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5719)
!5722 = !DILocation(line: 773, column: 2, scope: !5691)
!5723 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !5724)
!5724 = distinct !DILocation(line: 773, column: 2, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 773, column: 2)
!5726 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !5724)
!5727 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !5724)
!5728 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !5724)
!5729 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !5724)
!5730 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !5724)
!5731 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !5724)
!5732 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !5724)
!5733 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !5724)
!5734 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !5724)
!5735 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !5724)
!5736 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !5724)
!5737 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !5724)
!5738 = !DILocation(line: 0, scope: !3086, inlinedAt: !5724)
!5739 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !5724)
!5740 = !DILocation(line: 773, column: 2, scope: !5725)
!5741 = !DILocation(line: 774, column: 6, scope: !5701)
!5742 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5743)
!5743 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5744)
!5744 = distinct !DILocation(line: 773, column: 2, scope: !5687)
!5745 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5743)
!5746 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5743)
!5747 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5744)
!5748 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5744)
!5749 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5744)
!5750 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5744)
!5751 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5744)
!5752 = !DILocation(line: 773, column: 2, scope: !5687)
!5753 = !{i32 -2145548233, i32 -2145548220, i32 -2145548195, i32 -2145548171, i32 -2145548146, i32 -2145548071, i32 -2145548046, i32 -2145547902, i32 -2145544770, i32 -2145544681, i32 -2145544560, i32 -2145544465, i32 -2145544364, i32 -2145544337, i32 -2145544254, i32 -2145544165, i32 -2145544044, i32 -2145543944, i32 -2145543838, i32 -2145543730, i32 -2145547614, i32 -2145547561, i32 -2145547530, i32 -2145547499, i32 -2145547478, i32 -2145547456, i32 -2145547407, i32 -2145547386, i32 -2145543647, i32 -2145543558, i32 -2145543437, i32 -2145543338, i32 -2145543232, i32 -2145543130, i32 -2145543097, i32 -2145543024, i32 -2145542956, i32 -2145547082, i32 -2145547023, i32 -2145546970, i32 -2145546939, i32 -2145546908, i32 -2145546887, i32 -2145546865, i32 -2145546816, i32 -2145546795, i32 -2145542903, i32 -2145542814, i32 -2145542693, i32 -2145542594, i32 -2145542488, i32 -2145542386, i32 -2145542353, i32 -2145542270, i32 -2145542181, i32 -2145542060, i32 -2145541960, i32 -2145541934, i32 -2145541831, i32 -2145541805, i32 -2145546537, i32 -2145546470, i32 -2145546445, i32 -2145546381, i32 -2145546299, i32 -2145546276, i32 -2145546251, i32 -2145546226}
!5754 = !DILocation(line: 773, column: 2, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 773, column: 2)
!5756 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 773, column: 2)
!5757 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 773, column: 2)
!5758 = !{i32 -2145545038, i32 -2145545022}
!5759 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5760)
!5760 = distinct !DILocation(line: 779, column: 3, scope: !5697)
!5761 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5760)
!5762 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5760)
!5763 = !DILocation(line: 779, column: 3, scope: !5697)
!5764 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5765)
!5765 = distinct !DILocation(line: 779, column: 3, scope: !5697)
!5766 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5765)
!5767 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5765)
!5768 = !DILocation(line: 779, column: 3, scope: !5698)
!5769 = !DILocation(line: 779, column: 3, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 779, column: 3)
!5771 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5772)
!5772 = distinct !DILocation(line: 779, column: 3, scope: !5770)
!5773 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !5772)
!5774 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5772)
!5775 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5772)
!5776 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5772)
!5777 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5778)
!5778 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5779)
!5779 = distinct !DILocation(line: 779, column: 3, scope: !5694)
!5780 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5778)
!5781 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5778)
!5782 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5779)
!5783 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5779)
!5784 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5779)
!5785 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5779)
!5786 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5779)
!5787 = !DILocation(line: 779, column: 3, scope: !5694)
!5788 = !{i32 -2145539550, i32 -2145539537, i32 -2145539512, i32 -2145539488, i32 -2145539463, i32 -2145539388, i32 -2145539363, i32 -2145539219, i32 -2145536978, i32 -2145536889, i32 -2145536768, i32 -2145536673, i32 -2145536572, i32 -2145536545, i32 -2145536462, i32 -2145536373, i32 -2145536252, i32 -2145536152, i32 -2145536046, i32 -2145535938, i32 -2145538931, i32 -2145538878, i32 -2145538847, i32 -2145538816, i32 -2145538795, i32 -2145538773, i32 -2145538724, i32 -2145538703, i32 -2145535855, i32 -2145535766, i32 -2145535645, i32 -2145535546, i32 -2145535440, i32 -2145535338, i32 -2145535305, i32 -2145535232, i32 -2145535164, i32 -2145538329, i32 -2145538276, i32 -2145538245, i32 -2145538214, i32 -2145538193, i32 -2145538171, i32 -2145538122, i32 -2145538101, i32 -2145535109, i32 -2145535020, i32 -2145534899, i32 -2145534800, i32 -2145534694, i32 -2145534592, i32 -2145534559, i32 -2145534476, i32 -2145534387, i32 -2145534266, i32 -2145534166, i32 -2145534140, i32 -2145534037, i32 -2145534011, i32 -2145537843, i32 -2145537776, i32 -2145537751, i32 -2145537687, i32 -2145537571, i32 -2145537546, i32 -2145537521}
!5789 = !DILocation(line: 783, column: 28, scope: !5678)
!5790 = !DILocation(line: 783, column: 8, scope: !5678)
!5791 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5792)
!5792 = distinct !DILocation(line: 784, column: 2, scope: !5706)
!5793 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5792)
!5794 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5792)
!5795 = !DILocation(line: 784, column: 2, scope: !5706)
!5796 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5797)
!5797 = distinct !DILocation(line: 784, column: 2, scope: !5706)
!5798 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5797)
!5799 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5797)
!5800 = !DILocation(line: 784, column: 2, scope: !5707)
!5801 = !DILocation(line: 784, column: 2, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 784, column: 2)
!5803 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5804)
!5804 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5805)
!5805 = distinct !DILocation(line: 784, column: 2, scope: !5703)
!5806 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5804)
!5807 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5804)
!5808 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5805)
!5809 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5805)
!5810 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5805)
!5811 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5805)
!5812 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5805)
!5813 = !DILocation(line: 784, column: 2, scope: !5703)
!5814 = !{i32 -2145532047, i32 -2145532034, i32 -2145532009, i32 -2145531985, i32 -2145531960, i32 -2145531885, i32 -2145531860, i32 -2145531716, i32 -2145529489, i32 -2145529400, i32 -2145529279, i32 -2145529184, i32 -2145529083, i32 -2145529056, i32 -2145528973, i32 -2145528884, i32 -2145528763, i32 -2145528663, i32 -2145528557, i32 -2145528449, i32 -2145531428, i32 -2145531375, i32 -2145531344, i32 -2145531313, i32 -2145531292, i32 -2145531270, i32 -2145531221, i32 -2145531200, i32 -2145528366, i32 -2145528277, i32 -2145528156, i32 -2145528057, i32 -2145527951, i32 -2145527849, i32 -2145527816, i32 -2145527743, i32 -2145527675, i32 -2145530826, i32 -2145530773, i32 -2145530742, i32 -2145530711, i32 -2145530690, i32 -2145530668, i32 -2145530619, i32 -2145530598, i32 -2145527623, i32 -2145527534, i32 -2145527413, i32 -2145527314, i32 -2145527208, i32 -2145527106, i32 -2145527073, i32 -2145526990, i32 -2145526901, i32 -2145526780, i32 -2145526680, i32 -2145526654, i32 -2145526551, i32 -2145526525, i32 -2145530340, i32 -2145530273, i32 -2145530248, i32 -2145530184, i32 -2145530068, i32 -2145530043, i32 -2145530018}
!5815 = !DILocation(line: 0, scope: !5678)
!5816 = !DILocation(line: 787, column: 1, scope: !5678)
!5817 = !DILocation(line: 786, column: 2, scope: !5678)
!5818 = distinct !DISubprogram(name: "lwip_shutdown", scope: !3, file: !3, line: 3653, type: !5679, isLocal: false, isDefinition: true, scopeLine: 3654, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5819)
!5819 = !{!5820, !5821, !5822, !5823, !5824, !5825, !5826, !5832, !5838, !5841, !5847, !5853, !5859, !5861}
!5820 = !DILocalVariable(name: "s", arg: 1, scope: !5818, file: !3, line: 3653, type: !80)
!5821 = !DILocalVariable(name: "how", arg: 2, scope: !5818, file: !3, line: 3653, type: !80)
!5822 = !DILocalVariable(name: "sock", scope: !5818, file: !3, line: 3655, type: !1165)
!5823 = !DILocalVariable(name: "err", scope: !5818, file: !3, line: 3656, type: !1283)
!5824 = !DILocalVariable(name: "shut_rx", scope: !5818, file: !3, line: 3657, type: !156)
!5825 = !DILocalVariable(name: "shut_tx", scope: !5818, file: !3, line: 3657, type: !156)
!5826 = !DILocalVariable(name: "sockerr", scope: !5827, file: !3, line: 3668, type: !1007)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 3668, column: 7)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 3667, column: 69)
!5829 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 3667, column: 9)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 3666, column: 27)
!5831 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 3666, column: 7)
!5832 = !DILocalVariable(name: "tid", scope: !5833, file: !3, line: 3668, type: !170)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 3668, column: 7)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 3668, column: 7)
!5835 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 3668, column: 7)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 3668, column: 7)
!5837 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 3668, column: 7)
!5838 = !DILocalVariable(name: "sockerr", scope: !5839, file: !3, line: 3673, type: !1007)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 3673, column: 5)
!5840 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 3672, column: 10)
!5841 = !DILocalVariable(name: "tid", scope: !5842, file: !3, line: 3673, type: !170)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 3673, column: 5)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 3673, column: 5)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 3673, column: 5)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 3673, column: 5)
!5846 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 3673, column: 5)
!5847 = !DILocalVariable(name: "sockerr", scope: !5848, file: !3, line: 3686, type: !1007)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 3686, column: 5)
!5849 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 3685, column: 10)
!5850 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 3682, column: 14)
!5851 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 3680, column: 14)
!5852 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 3678, column: 7)
!5853 = !DILocalVariable(name: "tid", scope: !5854, file: !3, line: 3686, type: !170)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 3686, column: 5)
!5855 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 3686, column: 5)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 3686, column: 5)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 3686, column: 5)
!5858 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 3686, column: 5)
!5859 = !DILocalVariable(name: "sockerr", scope: !5860, file: !3, line: 3692, type: !1007)
!5860 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 3692, column: 3)
!5861 = !DILocalVariable(name: "tid", scope: !5862, file: !3, line: 3692, type: !170)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 3692, column: 3)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 3692, column: 3)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 3692, column: 3)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 3692, column: 3)
!5866 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 3692, column: 3)
!5867 = !DILocation(line: 3653, column: 19, scope: !5818)
!5868 = !DILocation(line: 3653, column: 26, scope: !5818)
!5869 = !DILocation(line: 3657, column: 8, scope: !5818)
!5870 = !DILocation(line: 3657, column: 21, scope: !5818)
!5871 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !5872)
!5872 = distinct !DILocation(line: 3661, column: 10, scope: !5818)
!5873 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !5874)
!5874 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !5872)
!5875 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !5876)
!5876 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !5874)
!5877 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !5878)
!5878 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !5876)
!5879 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !5878)
!5880 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !5878)
!5881 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !5878)
!5882 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !5876)
!5883 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !5874)
!5884 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !5878)
!5885 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !5874)
!5886 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !5874)
!5887 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !5874)
!5888 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !5874)
!5889 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5890)
!5890 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !5872)
!5891 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5890)
!5892 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5890)
!5893 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !5872)
!5894 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5895)
!5895 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !5872)
!5896 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5895)
!5897 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5895)
!5898 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !5872)
!5899 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5900)
!5900 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !5872)
!5901 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5900)
!5902 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5900)
!5903 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5900)
!5904 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !5872)
!5905 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5906)
!5906 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5907)
!5907 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !5872)
!5908 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5906)
!5909 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5906)
!5910 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5907)
!5911 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5907)
!5912 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5907)
!5913 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5907)
!5914 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5907)
!5915 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !5872)
!5916 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !5872)
!5917 = !DILocation(line: 3662, column: 7, scope: !5818)
!5918 = !DILocation(line: 3667, column: 9, scope: !5829)
!5919 = !DILocation(line: 3667, column: 53, scope: !5829)
!5920 = !DILocation(line: 3667, column: 9, scope: !5830)
!5921 = !DILocation(line: 3668, column: 7, scope: !5827)
!5922 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5923)
!5923 = distinct !DILocation(line: 3668, column: 7, scope: !5836)
!5924 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5923)
!5925 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5923)
!5926 = !DILocation(line: 3668, column: 7, scope: !5836)
!5927 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5928)
!5928 = distinct !DILocation(line: 3668, column: 7, scope: !5836)
!5929 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5928)
!5930 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5928)
!5931 = !DILocation(line: 3668, column: 7, scope: !5837)
!5932 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5933)
!5933 = distinct !DILocation(line: 3668, column: 7, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 3668, column: 7)
!5935 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5933)
!5936 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5933)
!5937 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5933)
!5938 = !DILocation(line: 3668, column: 7, scope: !5934)
!5939 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5940)
!5940 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5941)
!5941 = distinct !DILocation(line: 3668, column: 7, scope: !5833)
!5942 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5940)
!5943 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5940)
!5944 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5941)
!5945 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5941)
!5946 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5941)
!5947 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5941)
!5948 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5941)
!5949 = !DILocation(line: 3668, column: 7, scope: !5833)
!5950 = !{i32 -2144674486, i32 -2144674473, i32 -2144674448, i32 -2144674424, i32 -2144674399, i32 -2144674324, i32 -2144674299, i32 -2144674155, i32 -2144671932, i32 -2144671843, i32 -2144671722, i32 -2144671627, i32 -2144671526, i32 -2144671499, i32 -2144671416, i32 -2144671327, i32 -2144671206, i32 -2144671106, i32 -2144671000, i32 -2144670892, i32 -2144673867, i32 -2144673814, i32 -2144673783, i32 -2144673752, i32 -2144673731, i32 -2144673709, i32 -2144673660, i32 -2144673639, i32 -2144670809, i32 -2144670720, i32 -2144670599, i32 -2144670500, i32 -2144670394, i32 -2144670292, i32 -2144670259, i32 -2144670186, i32 -2144670118, i32 -2144673265, i32 -2144673212, i32 -2144673181, i32 -2144673150, i32 -2144673129, i32 -2144673107, i32 -2144673058, i32 -2144673037, i32 -2144670063, i32 -2144669974, i32 -2144669853, i32 -2144669754, i32 -2144669648, i32 -2144669546, i32 -2144669513, i32 -2144669430, i32 -2144669341, i32 -2144669220, i32 -2144669120, i32 -2144669094, i32 -2144668991, i32 -2144668965, i32 -2144672779, i32 -2144672712, i32 -2144672687, i32 -2144672623, i32 -2144672507, i32 -2144672482, i32 -2144672457}
!5951 = !DILocation(line: 3678, column: 7, scope: !5818)
!5952 = !DILocation(line: 3686, column: 5, scope: !5848)
!5953 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5954)
!5954 = distinct !DILocation(line: 3686, column: 5, scope: !5857)
!5955 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5954)
!5956 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5954)
!5957 = !DILocation(line: 3686, column: 5, scope: !5857)
!5958 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5959)
!5959 = distinct !DILocation(line: 3686, column: 5, scope: !5857)
!5960 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5959)
!5961 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5959)
!5962 = !DILocation(line: 3686, column: 5, scope: !5858)
!5963 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !5964)
!5964 = distinct !DILocation(line: 3686, column: 5, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 3686, column: 5)
!5966 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5964)
!5967 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5964)
!5968 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5964)
!5969 = !DILocation(line: 3686, column: 5, scope: !5965)
!5970 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5971)
!5971 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5972)
!5972 = distinct !DILocation(line: 3686, column: 5, scope: !5854)
!5973 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5971)
!5974 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5971)
!5975 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5972)
!5976 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5972)
!5977 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5972)
!5978 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5972)
!5979 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5972)
!5980 = !DILocation(line: 3686, column: 5, scope: !5854)
!5981 = !{i32 -2144655295, i32 -2144655282, i32 -2144655257, i32 -2144655233, i32 -2144655208, i32 -2144655133, i32 -2144655108, i32 -2144654964, i32 -2144652741, i32 -2144652652, i32 -2144652531, i32 -2144652436, i32 -2144652335, i32 -2144652308, i32 -2144652225, i32 -2144652136, i32 -2144652015, i32 -2144651915, i32 -2144651809, i32 -2144651701, i32 -2144654676, i32 -2144654623, i32 -2144654592, i32 -2144654561, i32 -2144654540, i32 -2144654518, i32 -2144654469, i32 -2144654448, i32 -2144651618, i32 -2144651529, i32 -2144651408, i32 -2144651309, i32 -2144651203, i32 -2144651101, i32 -2144651068, i32 -2144650995, i32 -2144650927, i32 -2144654074, i32 -2144654021, i32 -2144653990, i32 -2144653959, i32 -2144653938, i32 -2144653916, i32 -2144653867, i32 -2144653846, i32 -2144650872, i32 -2144650783, i32 -2144650662, i32 -2144650563, i32 -2144650457, i32 -2144650355, i32 -2144650322, i32 -2144650239, i32 -2144650150, i32 -2144650029, i32 -2144649929, i32 -2144649903, i32 -2144649800, i32 -2144649774, i32 -2144653588, i32 -2144653521, i32 -2144653496, i32 -2144653432, i32 -2144653316, i32 -2144653291, i32 -2144653266}
!5982 = !DILocation(line: 3690, column: 9, scope: !5818)
!5983 = !DILocation(line: 3656, column: 9, scope: !5818)
!5984 = !DILocation(line: 3692, column: 3, scope: !5860)
!5985 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5986)
!5986 = distinct !DILocation(line: 3692, column: 3, scope: !5865)
!5987 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5986)
!5988 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5986)
!5989 = !DILocation(line: 3692, column: 3, scope: !5865)
!5990 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5991)
!5991 = distinct !DILocation(line: 3692, column: 3, scope: !5865)
!5992 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5991)
!5993 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5991)
!5994 = !DILocation(line: 3692, column: 3, scope: !5866)
!5995 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !5996)
!5996 = distinct !DILocation(line: 3692, column: 3, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 3692, column: 3)
!5998 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !5996)
!5999 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !5996)
!6000 = !DILocation(line: 3692, column: 3, scope: !5997)
!6001 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6002)
!6002 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6003)
!6003 = distinct !DILocation(line: 3692, column: 3, scope: !5862)
!6004 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6002)
!6005 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6002)
!6006 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6003)
!6007 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6003)
!6008 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6003)
!6009 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6003)
!6010 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6003)
!6011 = !DILocation(line: 3692, column: 3, scope: !5862)
!6012 = !{i32 -2144647722, i32 -2144647709, i32 -2144647684, i32 -2144647660, i32 -2144647635, i32 -2144647560, i32 -2144647535, i32 -2144647391, i32 -2144645168, i32 -2144645079, i32 -2144644958, i32 -2144644863, i32 -2144644762, i32 -2144644735, i32 -2144644652, i32 -2144644563, i32 -2144644442, i32 -2144644342, i32 -2144644236, i32 -2144644128, i32 -2144647103, i32 -2144647050, i32 -2144647019, i32 -2144646988, i32 -2144646967, i32 -2144646945, i32 -2144646896, i32 -2144646875, i32 -2144644045, i32 -2144643956, i32 -2144643835, i32 -2144643736, i32 -2144643630, i32 -2144643528, i32 -2144643495, i32 -2144643422, i32 -2144643354, i32 -2144646501, i32 -2144646448, i32 -2144646417, i32 -2144646386, i32 -2144646365, i32 -2144646343, i32 -2144646294, i32 -2144646273, i32 -2144643299, i32 -2144643210, i32 -2144643089, i32 -2144642990, i32 -2144642884, i32 -2144642782, i32 -2144642749, i32 -2144642666, i32 -2144642577, i32 -2144642456, i32 -2144642356, i32 -2144642330, i32 -2144642227, i32 -2144642201, i32 -2144646015, i32 -2144645948, i32 -2144645923, i32 -2144645859, i32 -2144645743, i32 -2144645718, i32 -2144645693}
!6013 = !DILocation(line: 3694, column: 15, scope: !5818)
!6014 = !DILocation(line: 3694, column: 11, scope: !5818)
!6015 = !DILocation(line: 3694, column: 3, scope: !5818)
!6016 = !DILocation(line: 0, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 3662, column: 14)
!6018 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 3662, column: 7)
!6019 = !DILocation(line: 3695, column: 1, scope: !5818)
!6020 = distinct !DISubprogram(name: "getpeername", scope: !3, file: !3, line: 789, type: !3001, isLocal: false, isDefinition: true, scopeLine: 790, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6021)
!6021 = !{!6022, !6023, !6024, !6025, !6026, !6027, !6033, !6034, !6043}
!6022 = !DILocalVariable(name: "s", arg: 1, scope: !6020, file: !3, line: 789, type: !80)
!6023 = !DILocalVariable(name: "name", arg: 2, scope: !6020, file: !3, line: 789, type: !1004)
!6024 = !DILocalVariable(name: "namelen", arg: 3, scope: !6020, file: !3, line: 789, type: !3003)
!6025 = !DILocalVariable(name: "ret", scope: !6020, file: !3, line: 791, type: !80)
!6026 = !DILocalVariable(name: "file", scope: !6020, file: !3, line: 792, type: !1077)
!6027 = !DILocalVariable(name: "tid", scope: !6028, file: !3, line: 794, type: !170)
!6028 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 794, column: 2)
!6029 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 794, column: 2)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 794, column: 2)
!6031 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 794, column: 2)
!6032 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 794, column: 2)
!6033 = !DILocalVariable(name: "_ret", scope: !6028, file: !3, line: 794, type: !135)
!6034 = !DILocalVariable(name: "tid", scope: !6035, file: !3, line: 798, type: !170)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 798, column: 3)
!6036 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 798, column: 3)
!6037 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 798, column: 3)
!6038 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 798, column: 3)
!6039 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 798, column: 3)
!6040 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 798, column: 3)
!6041 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 795, column: 22)
!6042 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 795, column: 6)
!6043 = !DILocalVariable(name: "tid", scope: !6044, file: !3, line: 802, type: !170)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 802, column: 2)
!6045 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 802, column: 2)
!6046 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 802, column: 2)
!6047 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 802, column: 2)
!6048 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 802, column: 2)
!6049 = !DILocation(line: 789, column: 21, scope: !6020)
!6050 = !DILocation(line: 789, column: 41, scope: !6020)
!6051 = !DILocation(line: 789, column: 58, scope: !6020)
!6052 = !DILocation(line: 791, column: 6, scope: !6020)
!6053 = !DILocation(line: 792, column: 2, scope: !6020)
!6054 = !DILocation(line: 792, column: 24, scope: !6020)
!6055 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6056)
!6056 = distinct !DILocation(line: 794, column: 2, scope: !6031)
!6057 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6056)
!6058 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6056)
!6059 = !DILocation(line: 794, column: 2, scope: !6031)
!6060 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6061)
!6061 = distinct !DILocation(line: 794, column: 2, scope: !6031)
!6062 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6061)
!6063 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6061)
!6064 = !DILocation(line: 794, column: 2, scope: !6032)
!6065 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !6066)
!6066 = distinct !DILocation(line: 794, column: 2, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 794, column: 2)
!6068 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !6066)
!6069 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !6066)
!6070 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !6066)
!6071 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !6066)
!6072 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !6066)
!6073 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !6066)
!6074 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !6066)
!6075 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !6066)
!6076 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !6066)
!6077 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !6066)
!6078 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !6066)
!6079 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !6066)
!6080 = !DILocation(line: 0, scope: !3086, inlinedAt: !6066)
!6081 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !6066)
!6082 = !DILocation(line: 794, column: 2, scope: !6067)
!6083 = !DILocation(line: 795, column: 6, scope: !6042)
!6084 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6085)
!6085 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6086)
!6086 = distinct !DILocation(line: 794, column: 2, scope: !6028)
!6087 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6085)
!6088 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6085)
!6089 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6086)
!6090 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6086)
!6091 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6086)
!6092 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6086)
!6093 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6086)
!6094 = !DILocation(line: 794, column: 2, scope: !6028)
!6095 = !{i32 -2145524542, i32 -2145524529, i32 -2145524504, i32 -2145524480, i32 -2145524455, i32 -2145524380, i32 -2145524355, i32 -2145524211, i32 -2145521079, i32 -2145520990, i32 -2145520869, i32 -2145520774, i32 -2145520673, i32 -2145520646, i32 -2145520563, i32 -2145520474, i32 -2145520353, i32 -2145520253, i32 -2145520147, i32 -2145520039, i32 -2145523923, i32 -2145523870, i32 -2145523839, i32 -2145523808, i32 -2145523787, i32 -2145523765, i32 -2145523716, i32 -2145523695, i32 -2145519956, i32 -2145519867, i32 -2145519746, i32 -2145519647, i32 -2145519541, i32 -2145519439, i32 -2145519406, i32 -2145519333, i32 -2145519265, i32 -2145523391, i32 -2145523332, i32 -2145523279, i32 -2145523248, i32 -2145523217, i32 -2145523196, i32 -2145523174, i32 -2145523125, i32 -2145523104, i32 -2145519212, i32 -2145519123, i32 -2145519002, i32 -2145518903, i32 -2145518797, i32 -2145518695, i32 -2145518662, i32 -2145518579, i32 -2145518490, i32 -2145518369, i32 -2145518269, i32 -2145518243, i32 -2145518140, i32 -2145518114, i32 -2145522846, i32 -2145522779, i32 -2145522754, i32 -2145522690, i32 -2145522608, i32 -2145522585, i32 -2145522560, i32 -2145522535}
!6096 = !DILocation(line: 794, column: 2, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 794, column: 2)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 794, column: 2)
!6099 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 794, column: 2)
!6100 = !{i32 -2145521347, i32 -2145521331}
!6101 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6102)
!6102 = distinct !DILocation(line: 798, column: 3, scope: !6038)
!6103 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6102)
!6104 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6102)
!6105 = !DILocation(line: 798, column: 3, scope: !6038)
!6106 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6107)
!6107 = distinct !DILocation(line: 798, column: 3, scope: !6038)
!6108 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6107)
!6109 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6107)
!6110 = !DILocation(line: 798, column: 3, scope: !6039)
!6111 = !DILocation(line: 798, column: 3, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 798, column: 3)
!6113 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !6114)
!6114 = distinct !DILocation(line: 798, column: 3, scope: !6112)
!6115 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !6114)
!6116 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !6114)
!6117 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !6114)
!6118 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !6114)
!6119 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6120)
!6120 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6121)
!6121 = distinct !DILocation(line: 798, column: 3, scope: !6035)
!6122 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6120)
!6123 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6120)
!6124 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6121)
!6125 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6121)
!6126 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6121)
!6127 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6121)
!6128 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6121)
!6129 = !DILocation(line: 798, column: 3, scope: !6035)
!6130 = !{i32 -2145515859, i32 -2145515846, i32 -2145515821, i32 -2145515797, i32 -2145515772, i32 -2145515697, i32 -2145515672, i32 -2145515528, i32 -2145513287, i32 -2145513198, i32 -2145513077, i32 -2145512982, i32 -2145512881, i32 -2145512854, i32 -2145512771, i32 -2145512682, i32 -2145512561, i32 -2145512461, i32 -2145512355, i32 -2145512247, i32 -2145515240, i32 -2145515187, i32 -2145515156, i32 -2145515125, i32 -2145515104, i32 -2145515082, i32 -2145515033, i32 -2145515012, i32 -2145512164, i32 -2145512075, i32 -2145511954, i32 -2145511855, i32 -2145511749, i32 -2145511647, i32 -2145511614, i32 -2145511541, i32 -2145511473, i32 -2145514638, i32 -2145514585, i32 -2145514554, i32 -2145514523, i32 -2145514502, i32 -2145514480, i32 -2145514431, i32 -2145514410, i32 -2145511418, i32 -2145511329, i32 -2145511208, i32 -2145511109, i32 -2145511003, i32 -2145510901, i32 -2145510868, i32 -2145510785, i32 -2145510696, i32 -2145510575, i32 -2145510475, i32 -2145510449, i32 -2145510346, i32 -2145510320, i32 -2145514152, i32 -2145514085, i32 -2145514060, i32 -2145513996, i32 -2145513880, i32 -2145513855, i32 -2145513830}
!6131 = !DILocation(line: 801, column: 31, scope: !6020)
!6132 = !DILocalVariable(name: "s", arg: 1, scope: !6133, file: !3, line: 3745, type: !80)
!6133 = distinct !DISubprogram(name: "lwip_getpeername", scope: !3, file: !3, line: 3745, type: !3001, isLocal: false, isDefinition: true, scopeLine: 3746, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6134)
!6134 = !{!6132, !6135, !6136}
!6135 = !DILocalVariable(name: "name", arg: 2, scope: !6133, file: !3, line: 3745, type: !1004)
!6136 = !DILocalVariable(name: "namelen", arg: 3, scope: !6133, file: !3, line: 3745, type: !3003)
!6137 = !DILocation(line: 3745, column: 22, scope: !6133, inlinedAt: !6138)
!6138 = distinct !DILocation(line: 801, column: 8, scope: !6020)
!6139 = !DILocation(line: 3745, column: 42, scope: !6133, inlinedAt: !6138)
!6140 = !DILocation(line: 3745, column: 59, scope: !6133, inlinedAt: !6138)
!6141 = !DILocation(line: 3747, column: 10, scope: !6133, inlinedAt: !6138)
!6142 = !DILocation(line: 3747, column: 3, scope: !6133, inlinedAt: !6138)
!6143 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6144)
!6144 = distinct !DILocation(line: 802, column: 2, scope: !6047)
!6145 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6144)
!6146 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6144)
!6147 = !DILocation(line: 802, column: 2, scope: !6047)
!6148 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6149)
!6149 = distinct !DILocation(line: 802, column: 2, scope: !6047)
!6150 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6149)
!6151 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6149)
!6152 = !DILocation(line: 802, column: 2, scope: !6048)
!6153 = !DILocation(line: 802, column: 2, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 802, column: 2)
!6155 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6156)
!6156 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6157)
!6157 = distinct !DILocation(line: 802, column: 2, scope: !6044)
!6158 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6156)
!6159 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6156)
!6160 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6157)
!6161 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6157)
!6162 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6157)
!6163 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6157)
!6164 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6157)
!6165 = !DILocation(line: 802, column: 2, scope: !6044)
!6166 = !{i32 -2145508356, i32 -2145508343, i32 -2145508318, i32 -2145508294, i32 -2145508269, i32 -2145508194, i32 -2145508169, i32 -2145508025, i32 -2145505798, i32 -2145505709, i32 -2145505588, i32 -2145505493, i32 -2145505392, i32 -2145505365, i32 -2145505282, i32 -2145505193, i32 -2145505072, i32 -2145504972, i32 -2145504866, i32 -2145504758, i32 -2145507737, i32 -2145507684, i32 -2145507653, i32 -2145507622, i32 -2145507601, i32 -2145507579, i32 -2145507530, i32 -2145507509, i32 -2145504675, i32 -2145504586, i32 -2145504465, i32 -2145504366, i32 -2145504260, i32 -2145504158, i32 -2145504125, i32 -2145504052, i32 -2145503984, i32 -2145507135, i32 -2145507082, i32 -2145507051, i32 -2145507020, i32 -2145506999, i32 -2145506977, i32 -2145506928, i32 -2145506907, i32 -2145503932, i32 -2145503843, i32 -2145503722, i32 -2145503623, i32 -2145503517, i32 -2145503415, i32 -2145503382, i32 -2145503299, i32 -2145503210, i32 -2145503089, i32 -2145502989, i32 -2145502963, i32 -2145502860, i32 -2145502834, i32 -2145506649, i32 -2145506582, i32 -2145506557, i32 -2145506493, i32 -2145506377, i32 -2145506352, i32 -2145506327}
!6167 = !DILocation(line: 0, scope: !6020)
!6168 = !DILocation(line: 805, column: 1, scope: !6020)
!6169 = !DILocation(line: 804, column: 2, scope: !6020)
!6170 = !DILocation(line: 3745, column: 22, scope: !6133)
!6171 = !DILocation(line: 3745, column: 42, scope: !6133)
!6172 = !DILocation(line: 3745, column: 59, scope: !6133)
!6173 = !DILocation(line: 3747, column: 10, scope: !6133)
!6174 = !DILocation(line: 3747, column: 3, scope: !6133)
!6175 = distinct !DISubprogram(name: "getsockname", scope: !3, file: !3, line: 807, type: !3001, isLocal: false, isDefinition: true, scopeLine: 808, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6176)
!6176 = !{!6177, !6178, !6179, !6180, !6181, !6182, !6188, !6189, !6198}
!6177 = !DILocalVariable(name: "s", arg: 1, scope: !6175, file: !3, line: 807, type: !80)
!6178 = !DILocalVariable(name: "name", arg: 2, scope: !6175, file: !3, line: 807, type: !1004)
!6179 = !DILocalVariable(name: "namelen", arg: 3, scope: !6175, file: !3, line: 807, type: !3003)
!6180 = !DILocalVariable(name: "ret", scope: !6175, file: !3, line: 809, type: !80)
!6181 = !DILocalVariable(name: "file", scope: !6175, file: !3, line: 810, type: !1077)
!6182 = !DILocalVariable(name: "tid", scope: !6183, file: !3, line: 812, type: !170)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 812, column: 2)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 812, column: 2)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 812, column: 2)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 812, column: 2)
!6187 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 812, column: 2)
!6188 = !DILocalVariable(name: "_ret", scope: !6183, file: !3, line: 812, type: !135)
!6189 = !DILocalVariable(name: "tid", scope: !6190, file: !3, line: 816, type: !170)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 816, column: 3)
!6191 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 816, column: 3)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 816, column: 3)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 816, column: 3)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 816, column: 3)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 816, column: 3)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 813, column: 22)
!6197 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 813, column: 6)
!6198 = !DILocalVariable(name: "tid", scope: !6199, file: !3, line: 820, type: !170)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 820, column: 2)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 820, column: 2)
!6201 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 820, column: 2)
!6202 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 820, column: 2)
!6203 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 820, column: 2)
!6204 = !DILocation(line: 807, column: 21, scope: !6175)
!6205 = !DILocation(line: 807, column: 41, scope: !6175)
!6206 = !DILocation(line: 807, column: 58, scope: !6175)
!6207 = !DILocation(line: 809, column: 6, scope: !6175)
!6208 = !DILocation(line: 810, column: 2, scope: !6175)
!6209 = !DILocation(line: 810, column: 24, scope: !6175)
!6210 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6211)
!6211 = distinct !DILocation(line: 812, column: 2, scope: !6186)
!6212 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6211)
!6213 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6211)
!6214 = !DILocation(line: 812, column: 2, scope: !6186)
!6215 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6216)
!6216 = distinct !DILocation(line: 812, column: 2, scope: !6186)
!6217 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6216)
!6218 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6216)
!6219 = !DILocation(line: 812, column: 2, scope: !6187)
!6220 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !6221)
!6221 = distinct !DILocation(line: 812, column: 2, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 812, column: 2)
!6223 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !6221)
!6224 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !6221)
!6225 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !6221)
!6226 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !6221)
!6227 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !6221)
!6228 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !6221)
!6229 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !6221)
!6230 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !6221)
!6231 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !6221)
!6232 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !6221)
!6233 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !6221)
!6234 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !6221)
!6235 = !DILocation(line: 0, scope: !3086, inlinedAt: !6221)
!6236 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !6221)
!6237 = !DILocation(line: 812, column: 2, scope: !6222)
!6238 = !DILocation(line: 813, column: 6, scope: !6197)
!6239 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6240)
!6240 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6241)
!6241 = distinct !DILocation(line: 812, column: 2, scope: !6183)
!6242 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6240)
!6243 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6240)
!6244 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6241)
!6245 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6241)
!6246 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6241)
!6247 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6241)
!6248 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6241)
!6249 = !DILocation(line: 812, column: 2, scope: !6183)
!6250 = !{i32 -2145500851, i32 -2145500838, i32 -2145500813, i32 -2145500789, i32 -2145500764, i32 -2145500689, i32 -2145500664, i32 -2145500520, i32 -2145497388, i32 -2145497299, i32 -2145497178, i32 -2145497083, i32 -2145496982, i32 -2145496955, i32 -2145496872, i32 -2145496783, i32 -2145496662, i32 -2145496562, i32 -2145496456, i32 -2145496348, i32 -2145500232, i32 -2145500179, i32 -2145500148, i32 -2145500117, i32 -2145500096, i32 -2145500074, i32 -2145500025, i32 -2145500004, i32 -2145496265, i32 -2145496176, i32 -2145496055, i32 -2145495956, i32 -2145495850, i32 -2145495748, i32 -2145495715, i32 -2145495642, i32 -2145495574, i32 -2145499700, i32 -2145499641, i32 -2145499588, i32 -2145499557, i32 -2145499526, i32 -2145499505, i32 -2145499483, i32 -2145499434, i32 -2145499413, i32 -2145495521, i32 -2145495432, i32 -2145495311, i32 -2145495212, i32 -2145495106, i32 -2145495004, i32 -2145494971, i32 -2145494888, i32 -2145494799, i32 -2145494678, i32 -2145494578, i32 -2145494552, i32 -2145494449, i32 -2145494423, i32 -2145499155, i32 -2145499088, i32 -2145499063, i32 -2145498999, i32 -2145498917, i32 -2145498894, i32 -2145498869, i32 -2145498844}
!6251 = !DILocation(line: 812, column: 2, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 812, column: 2)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 812, column: 2)
!6254 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 812, column: 2)
!6255 = !{i32 -2145497656, i32 -2145497640}
!6256 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6257)
!6257 = distinct !DILocation(line: 816, column: 3, scope: !6193)
!6258 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6257)
!6259 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6257)
!6260 = !DILocation(line: 816, column: 3, scope: !6193)
!6261 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6262)
!6262 = distinct !DILocation(line: 816, column: 3, scope: !6193)
!6263 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6262)
!6264 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6262)
!6265 = !DILocation(line: 816, column: 3, scope: !6194)
!6266 = !DILocation(line: 816, column: 3, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 816, column: 3)
!6268 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !6269)
!6269 = distinct !DILocation(line: 816, column: 3, scope: !6267)
!6270 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !6269)
!6271 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !6269)
!6272 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !6269)
!6273 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !6269)
!6274 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6275)
!6275 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6276)
!6276 = distinct !DILocation(line: 816, column: 3, scope: !6190)
!6277 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6275)
!6278 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6275)
!6279 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6276)
!6280 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6276)
!6281 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6276)
!6282 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6276)
!6283 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6276)
!6284 = !DILocation(line: 816, column: 3, scope: !6190)
!6285 = !{i32 -2145492168, i32 -2145492155, i32 -2145492130, i32 -2145492106, i32 -2145492081, i32 -2145492006, i32 -2145491981, i32 -2145491837, i32 -2145489596, i32 -2145489507, i32 -2145489386, i32 -2145489291, i32 -2145489190, i32 -2145489163, i32 -2145489080, i32 -2145488991, i32 -2145488870, i32 -2145488770, i32 -2145488664, i32 -2145488556, i32 -2145491549, i32 -2145491496, i32 -2145491465, i32 -2145491434, i32 -2145491413, i32 -2145491391, i32 -2145491342, i32 -2145491321, i32 -2145488473, i32 -2145488384, i32 -2145488263, i32 -2145488164, i32 -2145488058, i32 -2145487956, i32 -2145487923, i32 -2145487850, i32 -2145487782, i32 -2145490947, i32 -2145490894, i32 -2145490863, i32 -2145490832, i32 -2145490811, i32 -2145490789, i32 -2145490740, i32 -2145490719, i32 -2145487727, i32 -2145487638, i32 -2145487517, i32 -2145487418, i32 -2145487312, i32 -2145487210, i32 -2145487177, i32 -2145487094, i32 -2145487005, i32 -2145486884, i32 -2145486784, i32 -2145486758, i32 -2145486655, i32 -2145486629, i32 -2145490461, i32 -2145490394, i32 -2145490369, i32 -2145490305, i32 -2145490189, i32 -2145490164, i32 -2145490139}
!6286 = !DILocation(line: 819, column: 31, scope: !6175)
!6287 = !DILocalVariable(name: "s", arg: 1, scope: !6288, file: !3, line: 3751, type: !80)
!6288 = distinct !DISubprogram(name: "lwip_getsockname", scope: !3, file: !3, line: 3751, type: !3001, isLocal: false, isDefinition: true, scopeLine: 3752, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6289)
!6289 = !{!6287, !6290, !6291}
!6290 = !DILocalVariable(name: "name", arg: 2, scope: !6288, file: !3, line: 3751, type: !1004)
!6291 = !DILocalVariable(name: "namelen", arg: 3, scope: !6288, file: !3, line: 3751, type: !3003)
!6292 = !DILocation(line: 3751, column: 22, scope: !6288, inlinedAt: !6293)
!6293 = distinct !DILocation(line: 819, column: 8, scope: !6175)
!6294 = !DILocation(line: 3751, column: 42, scope: !6288, inlinedAt: !6293)
!6295 = !DILocation(line: 3751, column: 59, scope: !6288, inlinedAt: !6293)
!6296 = !DILocation(line: 3753, column: 10, scope: !6288, inlinedAt: !6293)
!6297 = !DILocation(line: 3753, column: 3, scope: !6288, inlinedAt: !6293)
!6298 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6299)
!6299 = distinct !DILocation(line: 820, column: 2, scope: !6202)
!6300 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6299)
!6301 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6299)
!6302 = !DILocation(line: 820, column: 2, scope: !6202)
!6303 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6304)
!6304 = distinct !DILocation(line: 820, column: 2, scope: !6202)
!6305 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6304)
!6306 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6304)
!6307 = !DILocation(line: 820, column: 2, scope: !6203)
!6308 = !DILocation(line: 820, column: 2, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 820, column: 2)
!6310 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6311)
!6311 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6312)
!6312 = distinct !DILocation(line: 820, column: 2, scope: !6199)
!6313 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6311)
!6314 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6311)
!6315 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6312)
!6316 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6312)
!6317 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6312)
!6318 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6312)
!6319 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6312)
!6320 = !DILocation(line: 820, column: 2, scope: !6199)
!6321 = !{i32 -2145484665, i32 -2145484652, i32 -2145484627, i32 -2145484603, i32 -2145484578, i32 -2145484503, i32 -2145484478, i32 -2145484334, i32 -2145482107, i32 -2145482018, i32 -2145481897, i32 -2145481802, i32 -2145481701, i32 -2145481674, i32 -2145481591, i32 -2145481502, i32 -2145481381, i32 -2145481281, i32 -2145481175, i32 -2145481067, i32 -2145484046, i32 -2145483993, i32 -2145483962, i32 -2145483931, i32 -2145483910, i32 -2145483888, i32 -2145483839, i32 -2145483818, i32 -2145480984, i32 -2145480895, i32 -2145480774, i32 -2145480675, i32 -2145480569, i32 -2145480467, i32 -2145480434, i32 -2145480361, i32 -2145480293, i32 -2145483444, i32 -2145483391, i32 -2145483360, i32 -2145483329, i32 -2145483308, i32 -2145483286, i32 -2145483237, i32 -2145483216, i32 -2145480241, i32 -2145480152, i32 -2145480031, i32 -2145479932, i32 -2145479826, i32 -2145479724, i32 -2145479691, i32 -2145479608, i32 -2145479519, i32 -2145479398, i32 -2145479298, i32 -2145479272, i32 -2145479169, i32 -2145479143, i32 -2145482958, i32 -2145482891, i32 -2145482866, i32 -2145482802, i32 -2145482686, i32 -2145482661, i32 -2145482636}
!6322 = !DILocation(line: 0, scope: !6175)
!6323 = !DILocation(line: 823, column: 1, scope: !6175)
!6324 = !DILocation(line: 822, column: 2, scope: !6175)
!6325 = !DILocation(line: 3751, column: 22, scope: !6288)
!6326 = !DILocation(line: 3751, column: 42, scope: !6288)
!6327 = !DILocation(line: 3751, column: 59, scope: !6288)
!6328 = !DILocation(line: 3753, column: 10, scope: !6288)
!6329 = !DILocation(line: 3753, column: 3, scope: !6288)
!6330 = distinct !DISubprogram(name: "getsockopt", scope: !3, file: !3, line: 825, type: !6331, isLocal: false, isDefinition: true, scopeLine: 826, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6333)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!80, !80, !80, !80, !143, !3003}
!6333 = !{!6334, !6335, !6336, !6337, !6338, !6339, !6340, !6341, !6347, !6348, !6357}
!6334 = !DILocalVariable(name: "s", arg: 1, scope: !6330, file: !3, line: 825, type: !80)
!6335 = !DILocalVariable(name: "level", arg: 2, scope: !6330, file: !3, line: 825, type: !80)
!6336 = !DILocalVariable(name: "optname", arg: 3, scope: !6330, file: !3, line: 825, type: !80)
!6337 = !DILocalVariable(name: "optval", arg: 4, scope: !6330, file: !3, line: 825, type: !143)
!6338 = !DILocalVariable(name: "optlen", arg: 5, scope: !6330, file: !3, line: 825, type: !3003)
!6339 = !DILocalVariable(name: "ret", scope: !6330, file: !3, line: 827, type: !80)
!6340 = !DILocalVariable(name: "file", scope: !6330, file: !3, line: 828, type: !1077)
!6341 = !DILocalVariable(name: "tid", scope: !6342, file: !3, line: 830, type: !170)
!6342 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 830, column: 2)
!6343 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 830, column: 2)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 830, column: 2)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 830, column: 2)
!6346 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 830, column: 2)
!6347 = !DILocalVariable(name: "_ret", scope: !6342, file: !3, line: 830, type: !135)
!6348 = !DILocalVariable(name: "tid", scope: !6349, file: !3, line: 835, type: !170)
!6349 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 835, column: 3)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 835, column: 3)
!6351 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 835, column: 3)
!6352 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 835, column: 3)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 835, column: 3)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 835, column: 3)
!6355 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 831, column: 22)
!6356 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 831, column: 6)
!6357 = !DILocalVariable(name: "tid", scope: !6358, file: !3, line: 839, type: !170)
!6358 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 839, column: 2)
!6359 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 839, column: 2)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 839, column: 2)
!6361 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 839, column: 2)
!6362 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 839, column: 2)
!6363 = !DILocation(line: 825, column: 20, scope: !6330)
!6364 = !DILocation(line: 825, column: 27, scope: !6330)
!6365 = !DILocation(line: 825, column: 38, scope: !6330)
!6366 = !DILocation(line: 825, column: 53, scope: !6330)
!6367 = !DILocation(line: 825, column: 72, scope: !6330)
!6368 = !DILocation(line: 827, column: 6, scope: !6330)
!6369 = !DILocation(line: 828, column: 2, scope: !6330)
!6370 = !DILocation(line: 828, column: 24, scope: !6330)
!6371 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6372)
!6372 = distinct !DILocation(line: 830, column: 2, scope: !6345)
!6373 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6372)
!6374 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6372)
!6375 = !DILocation(line: 830, column: 2, scope: !6345)
!6376 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6377)
!6377 = distinct !DILocation(line: 830, column: 2, scope: !6345)
!6378 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6377)
!6379 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6377)
!6380 = !DILocation(line: 830, column: 2, scope: !6346)
!6381 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !6382)
!6382 = distinct !DILocation(line: 830, column: 2, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 830, column: 2)
!6384 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !6382)
!6385 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !6382)
!6386 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !6382)
!6387 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !6382)
!6388 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !6382)
!6389 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !6382)
!6390 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !6382)
!6391 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !6382)
!6392 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !6382)
!6393 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !6382)
!6394 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !6382)
!6395 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !6382)
!6396 = !DILocation(line: 0, scope: !3086, inlinedAt: !6382)
!6397 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !6382)
!6398 = !DILocation(line: 830, column: 2, scope: !6383)
!6399 = !DILocation(line: 831, column: 6, scope: !6356)
!6400 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6401)
!6401 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6402)
!6402 = distinct !DILocation(line: 830, column: 2, scope: !6342)
!6403 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6401)
!6404 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6401)
!6405 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6402)
!6406 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6402)
!6407 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6402)
!6408 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6402)
!6409 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6402)
!6410 = !DILocation(line: 830, column: 2, scope: !6342)
!6411 = !{i32 -2145477160, i32 -2145477147, i32 -2145477122, i32 -2145477098, i32 -2145477073, i32 -2145476998, i32 -2145476973, i32 -2145476829, i32 -2145473697, i32 -2145473608, i32 -2145473487, i32 -2145473392, i32 -2145473291, i32 -2145473264, i32 -2145473181, i32 -2145473092, i32 -2145472971, i32 -2145472871, i32 -2145472765, i32 -2145472657, i32 -2145476541, i32 -2145476488, i32 -2145476457, i32 -2145476426, i32 -2145476405, i32 -2145476383, i32 -2145476334, i32 -2145476313, i32 -2145472574, i32 -2145472485, i32 -2145472364, i32 -2145472265, i32 -2145472159, i32 -2145472057, i32 -2145472024, i32 -2145471951, i32 -2145471883, i32 -2145476009, i32 -2145475950, i32 -2145475897, i32 -2145475866, i32 -2145475835, i32 -2145475814, i32 -2145475792, i32 -2145475743, i32 -2145475722, i32 -2145471830, i32 -2145471741, i32 -2145471620, i32 -2145471521, i32 -2145471415, i32 -2145471313, i32 -2145471280, i32 -2145471197, i32 -2145471108, i32 -2145470987, i32 -2145470887, i32 -2145470861, i32 -2145470758, i32 -2145470732, i32 -2145475464, i32 -2145475397, i32 -2145475372, i32 -2145475308, i32 -2145475226, i32 -2145475203, i32 -2145475178, i32 -2145475153}
!6412 = !DILocation(line: 830, column: 2, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 830, column: 2)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 830, column: 2)
!6415 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 830, column: 2)
!6416 = !{i32 -2145473965, i32 -2145473949}
!6417 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6418)
!6418 = distinct !DILocation(line: 835, column: 3, scope: !6352)
!6419 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6418)
!6420 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6418)
!6421 = !DILocation(line: 835, column: 3, scope: !6352)
!6422 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6423)
!6423 = distinct !DILocation(line: 835, column: 3, scope: !6352)
!6424 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6423)
!6425 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6423)
!6426 = !DILocation(line: 835, column: 3, scope: !6353)
!6427 = !DILocation(line: 835, column: 3, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 835, column: 3)
!6429 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !6430)
!6430 = distinct !DILocation(line: 835, column: 3, scope: !6428)
!6431 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !6430)
!6432 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !6430)
!6433 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !6430)
!6434 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !6430)
!6435 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6436)
!6436 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6437)
!6437 = distinct !DILocation(line: 835, column: 3, scope: !6349)
!6438 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6436)
!6439 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6436)
!6440 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6437)
!6441 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6437)
!6442 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6437)
!6443 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6437)
!6444 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6437)
!6445 = !DILocation(line: 835, column: 3, scope: !6349)
!6446 = !{i32 -2145468477, i32 -2145468464, i32 -2145468439, i32 -2145468415, i32 -2145468390, i32 -2145468315, i32 -2145468290, i32 -2145468146, i32 -2145465905, i32 -2145465816, i32 -2145465695, i32 -2145465600, i32 -2145465499, i32 -2145465472, i32 -2145465389, i32 -2145465300, i32 -2145465179, i32 -2145465079, i32 -2145464973, i32 -2145464865, i32 -2145467858, i32 -2145467805, i32 -2145467774, i32 -2145467743, i32 -2145467722, i32 -2145467700, i32 -2145467651, i32 -2145467630, i32 -2145464782, i32 -2145464693, i32 -2145464572, i32 -2145464473, i32 -2145464367, i32 -2145464265, i32 -2145464232, i32 -2145464159, i32 -2145464091, i32 -2145467256, i32 -2145467203, i32 -2145467172, i32 -2145467141, i32 -2145467120, i32 -2145467098, i32 -2145467049, i32 -2145467028, i32 -2145464036, i32 -2145463947, i32 -2145463826, i32 -2145463727, i32 -2145463621, i32 -2145463519, i32 -2145463486, i32 -2145463403, i32 -2145463314, i32 -2145463193, i32 -2145463093, i32 -2145463067, i32 -2145462964, i32 -2145462938, i32 -2145466770, i32 -2145466703, i32 -2145466678, i32 -2145466614, i32 -2145466498, i32 -2145466473, i32 -2145466448}
!6447 = !DILocation(line: 838, column: 30, scope: !6330)
!6448 = !DILocation(line: 838, column: 8, scope: !6330)
!6449 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6450)
!6450 = distinct !DILocation(line: 839, column: 2, scope: !6361)
!6451 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6450)
!6452 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6450)
!6453 = !DILocation(line: 839, column: 2, scope: !6361)
!6454 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6455)
!6455 = distinct !DILocation(line: 839, column: 2, scope: !6361)
!6456 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6455)
!6457 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6455)
!6458 = !DILocation(line: 839, column: 2, scope: !6362)
!6459 = !DILocation(line: 839, column: 2, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 839, column: 2)
!6461 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6462)
!6462 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6463)
!6463 = distinct !DILocation(line: 839, column: 2, scope: !6358)
!6464 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6462)
!6465 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6462)
!6466 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6463)
!6467 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6463)
!6468 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6463)
!6469 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6463)
!6470 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6463)
!6471 = !DILocation(line: 839, column: 2, scope: !6358)
!6472 = !{i32 -2145460974, i32 -2145460961, i32 -2145460936, i32 -2145460912, i32 -2145460887, i32 -2145460812, i32 -2145460787, i32 -2145460643, i32 -2145458416, i32 -2145458327, i32 -2145458206, i32 -2145458111, i32 -2145458010, i32 -2145457983, i32 -2145457900, i32 -2145457811, i32 -2145457690, i32 -2145457590, i32 -2145457484, i32 -2145457376, i32 -2145460355, i32 -2145460302, i32 -2145460271, i32 -2145460240, i32 -2145460219, i32 -2145460197, i32 -2145460148, i32 -2145460127, i32 -2145457293, i32 -2145457204, i32 -2145457083, i32 -2145456984, i32 -2145456878, i32 -2145456776, i32 -2145456743, i32 -2145456670, i32 -2145456602, i32 -2145459753, i32 -2145459700, i32 -2145459669, i32 -2145459638, i32 -2145459617, i32 -2145459595, i32 -2145459546, i32 -2145459525, i32 -2145456550, i32 -2145456461, i32 -2145456340, i32 -2145456241, i32 -2145456135, i32 -2145456033, i32 -2145456000, i32 -2145455917, i32 -2145455828, i32 -2145455707, i32 -2145455607, i32 -2145455581, i32 -2145455478, i32 -2145455452, i32 -2145459267, i32 -2145459200, i32 -2145459175, i32 -2145459111, i32 -2145458995, i32 -2145458970, i32 -2145458945}
!6473 = !DILocation(line: 0, scope: !6330)
!6474 = !DILocation(line: 842, column: 1, scope: !6330)
!6475 = !DILocation(line: 841, column: 2, scope: !6330)
!6476 = distinct !DISubprogram(name: "lwip_getsockopt", scope: !3, file: !3, line: 3757, type: !6331, isLocal: false, isDefinition: true, scopeLine: 3758, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6477)
!6477 = !{!6478, !6479, !6480, !6481, !6482, !6483, !6484, !6485, !6489, !6495, !6497}
!6478 = !DILocalVariable(name: "s", arg: 1, scope: !6476, file: !3, line: 3757, type: !80)
!6479 = !DILocalVariable(name: "level", arg: 2, scope: !6476, file: !3, line: 3757, type: !80)
!6480 = !DILocalVariable(name: "optname", arg: 3, scope: !6476, file: !3, line: 3757, type: !80)
!6481 = !DILocalVariable(name: "optval", arg: 4, scope: !6476, file: !3, line: 3757, type: !143)
!6482 = !DILocalVariable(name: "optlen", arg: 5, scope: !6476, file: !3, line: 3757, type: !3003)
!6483 = !DILocalVariable(name: "err", scope: !6476, file: !3, line: 3759, type: !80)
!6484 = !DILocalVariable(name: "sock", scope: !6476, file: !3, line: 3760, type: !1165)
!6485 = !DILocalVariable(name: "sockerr", scope: !6486, file: !3, line: 3771, type: !1007)
!6486 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 3771, column: 5)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 3770, column: 45)
!6488 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 3770, column: 7)
!6489 = !DILocalVariable(name: "tid", scope: !6490, file: !3, line: 3771, type: !170)
!6490 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 3771, column: 5)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 3771, column: 5)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 3771, column: 5)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 3771, column: 5)
!6494 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 3771, column: 5)
!6495 = !DILocalVariable(name: "sockerr", scope: !6496, file: !3, line: 3828, type: !1007)
!6496 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 3828, column: 3)
!6497 = !DILocalVariable(name: "tid", scope: !6498, file: !3, line: 3828, type: !170)
!6498 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 3828, column: 3)
!6499 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 3828, column: 3)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 3828, column: 3)
!6501 = distinct !DILexicalBlock(scope: !6502, file: !3, line: 3828, column: 3)
!6502 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 3828, column: 3)
!6503 = !DILocation(line: 3757, column: 21, scope: !6476)
!6504 = !DILocation(line: 3757, column: 28, scope: !6476)
!6505 = !DILocation(line: 3757, column: 39, scope: !6476)
!6506 = !DILocation(line: 3757, column: 54, scope: !6476)
!6507 = !DILocation(line: 3757, column: 73, scope: !6476)
!6508 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !6509)
!6509 = distinct !DILocation(line: 3760, column: 28, scope: !6476)
!6510 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !6511)
!6511 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !6509)
!6512 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !6513)
!6513 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !6511)
!6514 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !6515)
!6515 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !6513)
!6516 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !6515)
!6517 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !6515)
!6518 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !6515)
!6519 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !6513)
!6520 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !6511)
!6521 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !6515)
!6522 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !6511)
!6523 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !6511)
!6524 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !6511)
!6525 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !6511)
!6526 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6527)
!6527 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !6509)
!6528 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6527)
!6529 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6527)
!6530 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !6509)
!6531 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6532)
!6532 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !6509)
!6533 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6532)
!6534 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6532)
!6535 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !6509)
!6536 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !6537)
!6537 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !6509)
!6538 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !6537)
!6539 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !6537)
!6540 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !6537)
!6541 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !6509)
!6542 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6543)
!6543 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6544)
!6544 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !6509)
!6545 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6543)
!6546 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6543)
!6547 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6544)
!6548 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6544)
!6549 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6544)
!6550 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6544)
!6551 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6544)
!6552 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !6509)
!6553 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !6509)
!6554 = !DILocation(line: 3766, column: 7, scope: !6476)
!6555 = !DILocation(line: 3770, column: 13, scope: !6488)
!6556 = !DILocation(line: 3770, column: 33, scope: !6488)
!6557 = !DILocation(line: 3770, column: 24, scope: !6488)
!6558 = !DILocation(line: 3771, column: 5, scope: !6486)
!6559 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6560)
!6560 = distinct !DILocation(line: 3771, column: 5, scope: !6493)
!6561 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6560)
!6562 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6560)
!6563 = !DILocation(line: 3771, column: 5, scope: !6493)
!6564 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6565)
!6565 = distinct !DILocation(line: 3771, column: 5, scope: !6493)
!6566 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6565)
!6567 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6565)
!6568 = !DILocation(line: 3771, column: 5, scope: !6494)
!6569 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !6570)
!6570 = distinct !DILocation(line: 3771, column: 5, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 3771, column: 5)
!6572 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !6570)
!6573 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !6570)
!6574 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !6570)
!6575 = !DILocation(line: 3771, column: 5, scope: !6571)
!6576 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6577)
!6577 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6578)
!6578 = distinct !DILocation(line: 3771, column: 5, scope: !6490)
!6579 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6577)
!6580 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6577)
!6581 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6578)
!6582 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6578)
!6583 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6578)
!6584 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6578)
!6585 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6578)
!6586 = !DILocation(line: 3771, column: 5, scope: !6490)
!6587 = !{i32 -2144616824, i32 -2144616811, i32 -2144616786, i32 -2144616762, i32 -2144616737, i32 -2144616662, i32 -2144616637, i32 -2144616493, i32 -2144614270, i32 -2144614181, i32 -2144614060, i32 -2144613965, i32 -2144613864, i32 -2144613837, i32 -2144613754, i32 -2144613665, i32 -2144613544, i32 -2144613444, i32 -2144613338, i32 -2144613230, i32 -2144616205, i32 -2144616152, i32 -2144616121, i32 -2144616090, i32 -2144616069, i32 -2144616047, i32 -2144615998, i32 -2144615977, i32 -2144613147, i32 -2144613058, i32 -2144612937, i32 -2144612838, i32 -2144612732, i32 -2144612630, i32 -2144612597, i32 -2144612524, i32 -2144612456, i32 -2144615603, i32 -2144615550, i32 -2144615519, i32 -2144615488, i32 -2144615467, i32 -2144615445, i32 -2144615396, i32 -2144615375, i32 -2144612401, i32 -2144612312, i32 -2144612191, i32 -2144612092, i32 -2144611986, i32 -2144611884, i32 -2144611851, i32 -2144611768, i32 -2144611679, i32 -2144611558, i32 -2144611458, i32 -2144611432, i32 -2144611329, i32 -2144611303, i32 -2144615117, i32 -2144615050, i32 -2144615025, i32 -2144614961, i32 -2144614845, i32 -2144614820, i32 -2144614795}
!6588 = !DILocation(line: 3778, column: 3, scope: !6476)
!6589 = !DILocalVariable(name: "s", arg: 1, scope: !6590, file: !3, line: 3880, type: !80)
!6590 = distinct !DISubprogram(name: "lwip_getsockopt_impl", scope: !3, file: !3, line: 3880, type: !6331, isLocal: true, isDefinition: true, scopeLine: 3881, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6591)
!6591 = !{!6589, !6592, !6593, !6594, !6595, !6596, !6597}
!6592 = !DILocalVariable(name: "level", arg: 2, scope: !6590, file: !3, line: 3880, type: !80)
!6593 = !DILocalVariable(name: "optname", arg: 3, scope: !6590, file: !3, line: 3880, type: !80)
!6594 = !DILocalVariable(name: "optval", arg: 4, scope: !6590, file: !3, line: 3880, type: !143)
!6595 = !DILocalVariable(name: "optlen", arg: 5, scope: !6590, file: !3, line: 3880, type: !3003)
!6596 = !DILocalVariable(name: "err", scope: !6590, file: !3, line: 3882, type: !80)
!6597 = !DILocalVariable(name: "sock", scope: !6590, file: !3, line: 3883, type: !1165)
!6598 = !DILocation(line: 3880, column: 26, scope: !6590, inlinedAt: !6599)
!6599 = distinct !DILocation(line: 3779, column: 9, scope: !6476)
!6600 = !DILocation(line: 3880, column: 33, scope: !6590, inlinedAt: !6599)
!6601 = !DILocation(line: 3880, column: 44, scope: !6590, inlinedAt: !6599)
!6602 = !DILocation(line: 3880, column: 59, scope: !6590, inlinedAt: !6599)
!6603 = !DILocation(line: 3880, column: 78, scope: !6590, inlinedAt: !6599)
!6604 = !DILocation(line: 3882, column: 7, scope: !6590, inlinedAt: !6599)
!6605 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !6606)
!6606 = distinct !DILocation(line: 3883, column: 28, scope: !6590, inlinedAt: !6599)
!6607 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !6608)
!6608 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !6606)
!6609 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !6610)
!6610 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !6608)
!6611 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !6610)
!6612 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !6610)
!6613 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !6608)
!6614 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !6606)
!6615 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !6606)
!6616 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !6606)
!6617 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !6606)
!6618 = !DILocation(line: 3894, column: 3, scope: !6590, inlinedAt: !6599)
!6619 = !DILocation(line: 3898, column: 7, scope: !6620, inlinedAt: !6599)
!6620 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3894, column: 18)
!6621 = !DILocation(line: 3902, column: 11, scope: !6622, inlinedAt: !6599)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 3902, column: 11)
!6623 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 3902, column: 11)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 3902, column: 11)
!6625 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 3898, column: 24)
!6626 = !DILocation(line: 3902, column: 11, scope: !6623, inlinedAt: !6599)
!6627 = !DILocation(line: 3902, column: 11, scope: !6628, inlinedAt: !6599)
!6628 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 3902, column: 11)
!6629 = !DILocation(line: 3902, column: 11, scope: !6624, inlinedAt: !6599)
!6630 = !DILocation(line: 3903, column: 15, scope: !6631, inlinedAt: !6599)
!6631 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 3903, column: 15)
!6632 = !DILocation(line: 3903, column: 51, scope: !6631, inlinedAt: !6599)
!6633 = !DILocation(line: 3903, column: 15, scope: !6625, inlinedAt: !6599)
!6634 = !DILocation(line: 3907, column: 70, scope: !6635, inlinedAt: !6599)
!6635 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 3907, column: 15)
!6636 = !{!6637, !1405, i64 72}
!6637 = !{!"tcp_pcb", !1701, i64 0, !1701, i64 24, !1405, i64 48, !1405, i64 49, !1405, i64 50, !1405, i64 51, !1408, i64 56, !1408, i64 64, !1405, i64 72, !1405, i64 76, !1604, i64 78, !1604, i64 80, !1604, i64 82, !1405, i64 84, !1405, i64 85, !1405, i64 86, !1409, i64 88, !1409, i64 92, !1409, i64 96, !1409, i64 100, !1409, i64 104, !1604, i64 108, !1604, i64 110, !1409, i64 112, !1409, i64 116, !1604, i64 120, !1604, i64 122, !1604, i64 124, !1405, i64 126, !1405, i64 127, !1409, i64 128, !1409, i64 132, !1409, i64 136, !1409, i64 140, !1409, i64 144, !1409, i64 148, !1409, i64 152, !1409, i64 156, !1409, i64 160, !1409, i64 164, !1409, i64 168, !1604, i64 172, !1604, i64 174, !1409, i64 176, !1408, i64 184, !1408, i64 192, !1408, i64 200, !1408, i64 208, !1408, i64 216, !1408, i64 224, !1408, i64 232, !1408, i64 240, !1408, i64 248, !1408, i64 256, !1409, i64 264, !1405, i64 268, !1405, i64 269, !1405, i64 270, !1405, i64 271, !1405, i64 272, !1405, i64 273}
!6638 = !DILocation(line: 3907, column: 76, scope: !6635, inlinedAt: !6599)
!6639 = !DILocation(line: 0, scope: !6640, inlinedAt: !6599)
!6640 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 3909, column: 18)
!6641 = !DILocation(line: 3907, column: 15, scope: !6625, inlinedAt: !6599)
!6642 = !DILocation(line: 3908, column: 28, scope: !6643, inlinedAt: !6599)
!6643 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 3907, column: 88)
!6644 = !DILocation(line: 3909, column: 11, scope: !6643, inlinedAt: !6599)
!6645 = !DILocation(line: 3910, column: 28, scope: !6640, inlinedAt: !6599)
!6646 = !DILocation(line: 3922, column: 16, scope: !6647, inlinedAt: !6599)
!6647 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 3921, column: 15)
!6648 = !DILocation(line: 3922, column: 52, scope: !6647, inlinedAt: !6599)
!6649 = !DILocation(line: 3921, column: 15, scope: !6625, inlinedAt: !6599)
!6650 = !DILocation(line: 3869, column: 5, scope: !6651, inlinedAt: !6655)
!6651 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 3863, column: 20)
!6652 = distinct !DISubprogram(name: "lwip_sockopt_to_ipopt", scope: !3, file: !3, line: 3857, type: !1070, isLocal: true, isDefinition: true, scopeLine: 3858, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6653)
!6653 = !{!6654}
!6654 = !DILocalVariable(name: "optname", arg: 1, scope: !6652, file: !3, line: 3857, type: !80)
!6655 = distinct !DILocation(line: 3927, column: 21, scope: !6625, inlinedAt: !6599)
!6656 = !DILocation(line: 0, scope: !6651, inlinedAt: !6655)
!6657 = !DILocation(line: 3874, column: 1, scope: !6652, inlinedAt: !6655)
!6658 = !DILocation(line: 3929, column: 11, scope: !6659, inlinedAt: !6599)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 3929, column: 11)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 3929, column: 11)
!6661 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 3929, column: 11)
!6662 = !DILocation(line: 3929, column: 11, scope: !6660, inlinedAt: !6599)
!6663 = !DILocation(line: 3929, column: 11, scope: !6664, inlinedAt: !6599)
!6664 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 3929, column: 11)
!6665 = !DILocation(line: 3929, column: 11, scope: !6661, inlinedAt: !6599)
!6666 = !DILocation(line: 3930, column: 28, scope: !6625, inlinedAt: !6599)
!6667 = !{!6668, !1405, i64 49}
!6668 = !{!"ip_pcb", !1701, i64 0, !1701, i64 24, !1405, i64 48, !1405, i64 49, !1405, i64 50, !1405, i64 51}
!6669 = !DILocation(line: 3930, column: 12, scope: !6625, inlinedAt: !6599)
!6670 = !DILocation(line: 3930, column: 26, scope: !6625, inlinedAt: !6599)
!6671 = !DILocation(line: 3933, column: 11, scope: !6625, inlinedAt: !6599)
!6672 = !DILocation(line: 3936, column: 11, scope: !6673, inlinedAt: !6599)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 3936, column: 11)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 3936, column: 11)
!6675 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 3936, column: 11)
!6676 = !DILocation(line: 3936, column: 11, scope: !6674, inlinedAt: !6599)
!6677 = !DILocation(line: 3937, column: 19, scope: !6625, inlinedAt: !6599)
!6678 = !DILocation(line: 3937, column: 11, scope: !6625, inlinedAt: !6599)
!6679 = !DILocation(line: 3939, column: 16, scope: !6680, inlinedAt: !6599)
!6680 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 3937, column: 64)
!6681 = !DILocation(line: 3939, column: 30, scope: !6680, inlinedAt: !6599)
!6682 = !DILocation(line: 3940, column: 15, scope: !6680, inlinedAt: !6599)
!6683 = !DILocation(line: 3942, column: 16, scope: !6680, inlinedAt: !6599)
!6684 = !DILocation(line: 3942, column: 30, scope: !6680, inlinedAt: !6599)
!6685 = !DILocation(line: 3943, column: 15, scope: !6680, inlinedAt: !6599)
!6686 = !DILocation(line: 3945, column: 16, scope: !6680, inlinedAt: !6599)
!6687 = !DILocation(line: 3945, column: 30, scope: !6680, inlinedAt: !6599)
!6688 = !DILocation(line: 3946, column: 15, scope: !6680, inlinedAt: !6599)
!6689 = !DILocation(line: 3948, column: 16, scope: !6680, inlinedAt: !6599)
!6690 = !DILocation(line: 3948, column: 30, scope: !6680, inlinedAt: !6599)
!6691 = !DILocation(line: 3952, column: 11, scope: !6680, inlinedAt: !6599)
!6692 = !DILocation(line: 3958, column: 11, scope: !6693, inlinedAt: !6599)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 3958, column: 11)
!6694 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 3958, column: 11)
!6695 = !DILocation(line: 3958, column: 11, scope: !6694, inlinedAt: !6599)
!6696 = !DILocation(line: 3959, column: 41, scope: !6625, inlinedAt: !6599)
!6697 = !DILocation(line: 3959, column: 28, scope: !6625, inlinedAt: !6599)
!6698 = !DILocation(line: 3959, column: 12, scope: !6625, inlinedAt: !6599)
!6699 = !DILocation(line: 3959, column: 26, scope: !6625, inlinedAt: !6599)
!6700 = !DILocation(line: 3962, column: 11, scope: !6625, inlinedAt: !6599)
!6701 = !DILocation(line: 4000, column: 11, scope: !6702, inlinedAt: !6599)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 4000, column: 11)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 4000, column: 11)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 4000, column: 11)
!6705 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 4000, column: 11)
!6706 = !DILocation(line: 4000, column: 11, scope: !6703, inlinedAt: !6599)
!6707 = !DILocation(line: 4000, column: 11, scope: !6708, inlinedAt: !6599)
!6708 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 4000, column: 11)
!6709 = !DILocation(line: 4000, column: 11, scope: !6704, inlinedAt: !6599)
!6710 = !DILocation(line: 4000, column: 11, scope: !6711, inlinedAt: !6599)
!6711 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 4000, column: 11)
!6712 = !DILocation(line: 4000, column: 11, scope: !6705, inlinedAt: !6599)
!6713 = !DILocation(line: 4008, column: 28, scope: !6625, inlinedAt: !6599)
!6714 = !{!6715, !1405, i64 64}
!6715 = !{!"udp_pcb", !1701, i64 0, !1701, i64 24, !1405, i64 48, !1405, i64 49, !1405, i64 50, !1405, i64 51, !1408, i64 56, !1405, i64 64, !1604, i64 66, !1604, i64 68, !6716, i64 72, !1405, i64 76, !1405, i64 77, !1408, i64 80, !1408, i64 88}
!6716 = !{!"ip4_addr", !1409, i64 0}
!6717 = !DILocation(line: 4008, column: 12, scope: !6625, inlinedAt: !6599)
!6718 = !DILocation(line: 4008, column: 26, scope: !6625, inlinedAt: !6599)
!6719 = !DILocation(line: 4009, column: 11, scope: !6625, inlinedAt: !6599)
!6720 = !DILocation(line: 4021, column: 7, scope: !6620, inlinedAt: !6599)
!6721 = !DILocation(line: 4023, column: 11, scope: !6722, inlinedAt: !6599)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 4023, column: 11)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 4023, column: 11)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 4023, column: 11)
!6725 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 4021, column: 24)
!6726 = !DILocation(line: 4023, column: 11, scope: !6723, inlinedAt: !6599)
!6727 = !DILocation(line: 4023, column: 11, scope: !6728, inlinedAt: !6599)
!6728 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 4023, column: 11)
!6729 = !DILocation(line: 4023, column: 11, scope: !6724, inlinedAt: !6599)
!6730 = !DILocation(line: 4024, column: 48, scope: !6725, inlinedAt: !6599)
!6731 = !{!6668, !1405, i64 51}
!6732 = !DILocation(line: 4024, column: 28, scope: !6725, inlinedAt: !6599)
!6733 = !DILocation(line: 4024, column: 12, scope: !6725, inlinedAt: !6599)
!6734 = !DILocation(line: 4024, column: 26, scope: !6725, inlinedAt: !6599)
!6735 = !DILocation(line: 4027, column: 11, scope: !6725, inlinedAt: !6599)
!6736 = !DILocation(line: 4029, column: 11, scope: !6737, inlinedAt: !6599)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 4029, column: 11)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 4029, column: 11)
!6739 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 4029, column: 11)
!6740 = !DILocation(line: 4029, column: 11, scope: !6738, inlinedAt: !6599)
!6741 = !DILocation(line: 4029, column: 11, scope: !6742, inlinedAt: !6599)
!6742 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 4029, column: 11)
!6743 = !DILocation(line: 4029, column: 11, scope: !6739, inlinedAt: !6599)
!6744 = !DILocation(line: 4030, column: 48, scope: !6725, inlinedAt: !6599)
!6745 = !{!6668, !1405, i64 50}
!6746 = !DILocation(line: 4030, column: 28, scope: !6725, inlinedAt: !6599)
!6747 = !DILocation(line: 4030, column: 12, scope: !6725, inlinedAt: !6599)
!6748 = !DILocation(line: 4030, column: 26, scope: !6725, inlinedAt: !6599)
!6749 = !DILocation(line: 4033, column: 11, scope: !6725, inlinedAt: !6599)
!6750 = !DILocation(line: 4036, column: 11, scope: !6751, inlinedAt: !6599)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 4036, column: 11)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4036, column: 11)
!6753 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 4036, column: 11)
!6754 = !DILocation(line: 4036, column: 11, scope: !6752, inlinedAt: !6599)
!6755 = !DILocation(line: 4036, column: 11, scope: !6756, inlinedAt: !6599)
!6756 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4036, column: 11)
!6757 = !DILocation(line: 4036, column: 11, scope: !6753, inlinedAt: !6599)
!6758 = !DILocation(line: 4037, column: 15, scope: !6759, inlinedAt: !6599)
!6759 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 4037, column: 15)
!6760 = !DILocation(line: 4037, column: 59, scope: !6759, inlinedAt: !6599)
!6761 = !DILocation(line: 4037, column: 15, scope: !6725, inlinedAt: !6599)
!6762 = !DILocation(line: 4041, column: 29, scope: !6725, inlinedAt: !6599)
!6763 = !{!6715, !1405, i64 77}
!6764 = !DILocation(line: 4041, column: 27, scope: !6725, inlinedAt: !6599)
!6765 = !DILocation(line: 4044, column: 11, scope: !6725, inlinedAt: !6599)
!6766 = !DILocation(line: 4046, column: 11, scope: !6767, inlinedAt: !6599)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 4046, column: 11)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 4046, column: 11)
!6769 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 4046, column: 11)
!6770 = !DILocation(line: 4046, column: 11, scope: !6768, inlinedAt: !6599)
!6771 = !DILocation(line: 4046, column: 11, scope: !6772, inlinedAt: !6599)
!6772 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 4046, column: 11)
!6773 = !DILocation(line: 4046, column: 11, scope: !6769, inlinedAt: !6599)
!6774 = !DILocation(line: 4047, column: 15, scope: !6775, inlinedAt: !6599)
!6775 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 4047, column: 15)
!6776 = !DILocation(line: 4047, column: 59, scope: !6775, inlinedAt: !6599)
!6777 = !DILocation(line: 4047, column: 15, scope: !6725, inlinedAt: !6599)
!6778 = !DILocation(line: 4051, column: 11, scope: !6725, inlinedAt: !6599)
!6779 = !{!6715, !1409, i64 72}
!6780 = !{!3634, !1409, i64 0}
!6781 = !DILocation(line: 4054, column: 11, scope: !6725, inlinedAt: !6599)
!6782 = !DILocation(line: 4056, column: 11, scope: !6783, inlinedAt: !6599)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 4056, column: 11)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 4056, column: 11)
!6785 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 4056, column: 11)
!6786 = !DILocation(line: 4056, column: 11, scope: !6784, inlinedAt: !6599)
!6787 = !DILocation(line: 4056, column: 11, scope: !6788, inlinedAt: !6599)
!6788 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 4056, column: 11)
!6789 = !DILocation(line: 4056, column: 11, scope: !6785, inlinedAt: !6599)
!6790 = !DILocation(line: 4057, column: 37, scope: !6791, inlinedAt: !6599)
!6791 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 4057, column: 15)
!6792 = !DILocation(line: 4057, column: 43, scope: !6791, inlinedAt: !6599)
!6793 = !DILocation(line: 4057, column: 71, scope: !6791, inlinedAt: !6599)
!6794 = !DILocation(line: 4057, column: 15, scope: !6725, inlinedAt: !6599)
!6795 = !DILocation(line: 4058, column: 29, scope: !6796, inlinedAt: !6599)
!6796 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 4057, column: 77)
!6797 = !DILocation(line: 4059, column: 11, scope: !6796, inlinedAt: !6599)
!6798 = !DILocation(line: 4060, column: 29, scope: !6799, inlinedAt: !6599)
!6799 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 4059, column: 18)
!6800 = !DILocation(line: 4078, column: 7, scope: !6801, inlinedAt: !6599)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 4078, column: 7)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 4078, column: 7)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 4078, column: 7)
!6804 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 4078, column: 7)
!6805 = !DILocation(line: 4078, column: 7, scope: !6802, inlinedAt: !6599)
!6806 = !DILocation(line: 4078, column: 7, scope: !6807, inlinedAt: !6599)
!6807 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 4078, column: 7)
!6808 = !DILocation(line: 4078, column: 7, scope: !6803, inlinedAt: !6599)
!6809 = !DILocation(line: 4078, column: 7, scope: !6810, inlinedAt: !6599)
!6810 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 4078, column: 7)
!6811 = !DILocation(line: 4078, column: 7, scope: !6804, inlinedAt: !6599)
!6812 = !DILocation(line: 4079, column: 32, scope: !6813, inlinedAt: !6599)
!6813 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 4079, column: 11)
!6814 = !DILocation(line: 4079, column: 38, scope: !6813, inlinedAt: !6599)
!6815 = !DILocation(line: 4079, column: 11, scope: !6620, inlinedAt: !6599)
!6816 = !DILocation(line: 4083, column: 7, scope: !6620, inlinedAt: !6599)
!6817 = !DILocation(line: 4085, column: 28, scope: !6818, inlinedAt: !6599)
!6818 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 4083, column: 24)
!6819 = !{!6637, !1604, i64 82}
!6820 = !DILocation(line: 4085, column: 12, scope: !6818, inlinedAt: !6599)
!6821 = !DILocation(line: 4085, column: 26, scope: !6818, inlinedAt: !6599)
!6822 = !DILocation(line: 4088, column: 11, scope: !6818, inlinedAt: !6599)
!6823 = !DILocation(line: 4090, column: 54, scope: !6818, inlinedAt: !6599)
!6824 = !{!6637, !1409, i64 264}
!6825 = !DILocation(line: 4090, column: 12, scope: !6818, inlinedAt: !6599)
!6826 = !DILocation(line: 4090, column: 26, scope: !6818, inlinedAt: !6599)
!6827 = !DILocation(line: 4093, column: 11, scope: !6818, inlinedAt: !6599)
!6828 = !DILocation(line: 4124, column: 7, scope: !6620, inlinedAt: !6599)
!6829 = !DILocation(line: 4126, column: 11, scope: !6830, inlinedAt: !6599)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 4126, column: 11)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 4126, column: 11)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 4126, column: 11)
!6833 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 4124, column: 24)
!6834 = !DILocation(line: 4126, column: 11, scope: !6831, inlinedAt: !6599)
!6835 = !DILocation(line: 4127, column: 29, scope: !6833, inlinedAt: !6599)
!6836 = !DILocation(line: 4127, column: 12, scope: !6833, inlinedAt: !6599)
!6837 = !DILocation(line: 4127, column: 26, scope: !6833, inlinedAt: !6599)
!6838 = !DILocation(line: 4130, column: 11, scope: !6833, inlinedAt: !6599)
!6839 = !DILocation(line: 0, scope: !6840, inlinedAt: !6599)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 3884, column: 14)
!6841 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3884, column: 7)
!6842 = !DILocation(line: 4200, column: 1, scope: !6590, inlinedAt: !6599)
!6843 = !DILocation(line: 3759, column: 7, scope: !6476)
!6844 = !DILocation(line: 3780, column: 3, scope: !6476)
!6845 = !DILocation(line: 3828, column: 3, scope: !6496)
!6846 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6847)
!6847 = distinct !DILocation(line: 3828, column: 3, scope: !6501)
!6848 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6847)
!6849 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6847)
!6850 = !DILocation(line: 3828, column: 3, scope: !6501)
!6851 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6852)
!6852 = distinct !DILocation(line: 3828, column: 3, scope: !6501)
!6853 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6852)
!6854 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6852)
!6855 = !DILocation(line: 3828, column: 3, scope: !6502)
!6856 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !6857)
!6857 = distinct !DILocation(line: 3828, column: 3, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 3828, column: 3)
!6859 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !6857)
!6860 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !6857)
!6861 = !DILocation(line: 3828, column: 3, scope: !6858)
!6862 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6863)
!6863 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6864)
!6864 = distinct !DILocation(line: 3828, column: 3, scope: !6498)
!6865 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6863)
!6866 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6863)
!6867 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6864)
!6868 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6864)
!6869 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6864)
!6870 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6864)
!6871 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6864)
!6872 = !DILocation(line: 3828, column: 3, scope: !6498)
!6873 = !{i32 -2144609195, i32 -2144609182, i32 -2144609157, i32 -2144609133, i32 -2144609108, i32 -2144609033, i32 -2144609008, i32 -2144608864, i32 -2144606641, i32 -2144606552, i32 -2144606431, i32 -2144606336, i32 -2144606235, i32 -2144606208, i32 -2144606125, i32 -2144606036, i32 -2144605915, i32 -2144605815, i32 -2144605709, i32 -2144605601, i32 -2144608576, i32 -2144608523, i32 -2144608492, i32 -2144608461, i32 -2144608440, i32 -2144608418, i32 -2144608369, i32 -2144608348, i32 -2144605518, i32 -2144605429, i32 -2144605308, i32 -2144605209, i32 -2144605103, i32 -2144605001, i32 -2144604968, i32 -2144604895, i32 -2144604827, i32 -2144607974, i32 -2144607921, i32 -2144607890, i32 -2144607859, i32 -2144607838, i32 -2144607816, i32 -2144607767, i32 -2144607746, i32 -2144604772, i32 -2144604683, i32 -2144604562, i32 -2144604463, i32 -2144604357, i32 -2144604255, i32 -2144604222, i32 -2144604139, i32 -2144604050, i32 -2144603929, i32 -2144603829, i32 -2144603803, i32 -2144603700, i32 -2144603674, i32 -2144607488, i32 -2144607421, i32 -2144607396, i32 -2144607332, i32 -2144607216, i32 -2144607191, i32 -2144607166}
!6874 = !DILocation(line: 3830, column: 10, scope: !6476)
!6875 = !DILocation(line: 3830, column: 3, scope: !6476)
!6876 = !DILocation(line: 0, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3766, column: 14)
!6878 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 3766, column: 7)
!6879 = !DILocation(line: 3831, column: 1, scope: !6476)
!6880 = distinct !DISubprogram(name: "setsockopt", scope: !3, file: !3, line: 844, type: !6881, isLocal: false, isDefinition: true, scopeLine: 846, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6883)
!6881 = !DISubroutineType(types: !6882)
!6882 = !{!80, !80, !80, !80, !225, !1890}
!6883 = !{!6884, !6885, !6886, !6887, !6888, !6889, !6890, !6891, !6897, !6898, !6907}
!6884 = !DILocalVariable(name: "s", arg: 1, scope: !6880, file: !3, line: 844, type: !80)
!6885 = !DILocalVariable(name: "level", arg: 2, scope: !6880, file: !3, line: 844, type: !80)
!6886 = !DILocalVariable(name: "optname", arg: 3, scope: !6880, file: !3, line: 844, type: !80)
!6887 = !DILocalVariable(name: "optval", arg: 4, scope: !6880, file: !3, line: 844, type: !225)
!6888 = !DILocalVariable(name: "optlen", arg: 5, scope: !6880, file: !3, line: 845, type: !1890)
!6889 = !DILocalVariable(name: "ret", scope: !6880, file: !3, line: 847, type: !80)
!6890 = !DILocalVariable(name: "file", scope: !6880, file: !3, line: 848, type: !1077)
!6891 = !DILocalVariable(name: "tid", scope: !6892, file: !3, line: 850, type: !170)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 850, column: 2)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 850, column: 2)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 850, column: 2)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 850, column: 2)
!6896 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 850, column: 2)
!6897 = !DILocalVariable(name: "_ret", scope: !6892, file: !3, line: 850, type: !135)
!6898 = !DILocalVariable(name: "tid", scope: !6899, file: !3, line: 855, type: !170)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 855, column: 3)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 855, column: 3)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 855, column: 3)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 855, column: 3)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 855, column: 3)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 855, column: 3)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 851, column: 22)
!6906 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 851, column: 6)
!6907 = !DILocalVariable(name: "tid", scope: !6908, file: !3, line: 859, type: !170)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 859, column: 2)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 859, column: 2)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 859, column: 2)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 859, column: 2)
!6912 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 859, column: 2)
!6913 = !DILocation(line: 844, column: 20, scope: !6880)
!6914 = !DILocation(line: 844, column: 27, scope: !6880)
!6915 = !DILocation(line: 844, column: 38, scope: !6880)
!6916 = !DILocation(line: 844, column: 59, scope: !6880)
!6917 = !DILocation(line: 845, column: 19, scope: !6880)
!6918 = !DILocation(line: 847, column: 6, scope: !6880)
!6919 = !DILocation(line: 848, column: 2, scope: !6880)
!6920 = !DILocation(line: 848, column: 24, scope: !6880)
!6921 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6922)
!6922 = distinct !DILocation(line: 850, column: 2, scope: !6895)
!6923 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6922)
!6924 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6922)
!6925 = !DILocation(line: 850, column: 2, scope: !6895)
!6926 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6927)
!6927 = distinct !DILocation(line: 850, column: 2, scope: !6895)
!6928 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6927)
!6929 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6927)
!6930 = !DILocation(line: 850, column: 2, scope: !6896)
!6931 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !6932)
!6932 = distinct !DILocation(line: 850, column: 2, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 850, column: 2)
!6934 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !6932)
!6935 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !6932)
!6936 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !6932)
!6937 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !6932)
!6938 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !6932)
!6939 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !6932)
!6940 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !6932)
!6941 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !6932)
!6942 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !6932)
!6943 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !6932)
!6944 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !6932)
!6945 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !6932)
!6946 = !DILocation(line: 0, scope: !3086, inlinedAt: !6932)
!6947 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !6932)
!6948 = !DILocation(line: 850, column: 2, scope: !6933)
!6949 = !DILocation(line: 851, column: 6, scope: !6906)
!6950 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6951)
!6951 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6952)
!6952 = distinct !DILocation(line: 850, column: 2, scope: !6892)
!6953 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6951)
!6954 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6951)
!6955 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6952)
!6956 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6952)
!6957 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6952)
!6958 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6952)
!6959 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6952)
!6960 = !DILocation(line: 850, column: 2, scope: !6892)
!6961 = !{i32 -2145453469, i32 -2145453456, i32 -2145453431, i32 -2145453407, i32 -2145453382, i32 -2145453307, i32 -2145453282, i32 -2145453138, i32 -2145450006, i32 -2145449917, i32 -2145449796, i32 -2145449701, i32 -2145449600, i32 -2145449573, i32 -2145449490, i32 -2145449401, i32 -2145449280, i32 -2145449180, i32 -2145449074, i32 -2145448966, i32 -2145452850, i32 -2145452797, i32 -2145452766, i32 -2145452735, i32 -2145452714, i32 -2145452692, i32 -2145452643, i32 -2145452622, i32 -2145448883, i32 -2145448794, i32 -2145448673, i32 -2145448574, i32 -2145448468, i32 -2145448366, i32 -2145448333, i32 -2145448260, i32 -2145448192, i32 -2145452318, i32 -2145452259, i32 -2145452206, i32 -2145452175, i32 -2145452144, i32 -2145452123, i32 -2145452101, i32 -2145452052, i32 -2145452031, i32 -2145448139, i32 -2145448050, i32 -2145447929, i32 -2145447830, i32 -2145447724, i32 -2145447622, i32 -2145447589, i32 -2145447506, i32 -2145447417, i32 -2145447296, i32 -2145447196, i32 -2145447170, i32 -2145447067, i32 -2145447041, i32 -2145451773, i32 -2145451706, i32 -2145451681, i32 -2145451617, i32 -2145451535, i32 -2145451512, i32 -2145451487, i32 -2145451462}
!6962 = !DILocation(line: 850, column: 2, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 850, column: 2)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 850, column: 2)
!6965 = distinct !DILexicalBlock(scope: !6892, file: !3, line: 850, column: 2)
!6966 = !{i32 -2145450274, i32 -2145450258}
!6967 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6968)
!6968 = distinct !DILocation(line: 855, column: 3, scope: !6902)
!6969 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6968)
!6970 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6968)
!6971 = !DILocation(line: 855, column: 3, scope: !6902)
!6972 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6973)
!6973 = distinct !DILocation(line: 855, column: 3, scope: !6902)
!6974 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6973)
!6975 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6973)
!6976 = !DILocation(line: 855, column: 3, scope: !6903)
!6977 = !DILocation(line: 855, column: 3, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 855, column: 3)
!6979 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !6980)
!6980 = distinct !DILocation(line: 855, column: 3, scope: !6978)
!6981 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !6980)
!6982 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !6980)
!6983 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !6980)
!6984 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !6980)
!6985 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6986)
!6986 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6987)
!6987 = distinct !DILocation(line: 855, column: 3, scope: !6899)
!6988 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6986)
!6989 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6986)
!6990 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6987)
!6991 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6987)
!6992 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6987)
!6993 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6987)
!6994 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6987)
!6995 = !DILocation(line: 855, column: 3, scope: !6899)
!6996 = !{i32 -2145440725, i32 -2145440712, i32 -2145440687, i32 -2145440663, i32 -2145440638, i32 -2145440563, i32 -2145440538, i32 -2145440394, i32 -2145438153, i32 -2145438064, i32 -2145437943, i32 -2145437848, i32 -2145437747, i32 -2145437720, i32 -2145437637, i32 -2145437548, i32 -2145437427, i32 -2145437327, i32 -2145437221, i32 -2145437113, i32 -2145440106, i32 -2145440053, i32 -2145440022, i32 -2145439991, i32 -2145439970, i32 -2145439948, i32 -2145439899, i32 -2145439878, i32 -2145437030, i32 -2145436941, i32 -2145436820, i32 -2145436721, i32 -2145436615, i32 -2145436513, i32 -2145436480, i32 -2145436407, i32 -2145436339, i32 -2145439504, i32 -2145439451, i32 -2145439420, i32 -2145439389, i32 -2145439368, i32 -2145439346, i32 -2145439297, i32 -2145439276, i32 -2145436284, i32 -2145436195, i32 -2145436074, i32 -2145435975, i32 -2145435869, i32 -2145435767, i32 -2145435734, i32 -2145435651, i32 -2145435562, i32 -2145435441, i32 -2145435341, i32 -2145435315, i32 -2145435212, i32 -2145435186, i32 -2145439018, i32 -2145438951, i32 -2145438926, i32 -2145438862, i32 -2145438746, i32 -2145438721, i32 -2145438696}
!6997 = !DILocation(line: 858, column: 30, scope: !6880)
!6998 = !DILocation(line: 858, column: 8, scope: !6880)
!6999 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7000)
!7000 = distinct !DILocation(line: 859, column: 2, scope: !6911)
!7001 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7000)
!7002 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7000)
!7003 = !DILocation(line: 859, column: 2, scope: !6911)
!7004 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7005)
!7005 = distinct !DILocation(line: 859, column: 2, scope: !6911)
!7006 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7005)
!7007 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7005)
!7008 = !DILocation(line: 859, column: 2, scope: !6912)
!7009 = !DILocation(line: 859, column: 2, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 859, column: 2)
!7011 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7012)
!7012 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7013)
!7013 = distinct !DILocation(line: 859, column: 2, scope: !6908)
!7014 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7012)
!7015 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7012)
!7016 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7013)
!7017 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7013)
!7018 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7013)
!7019 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7013)
!7020 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7013)
!7021 = !DILocation(line: 859, column: 2, scope: !6908)
!7022 = !{i32 -2145433222, i32 -2145433209, i32 -2145433184, i32 -2145433160, i32 -2145433135, i32 -2145433060, i32 -2145433035, i32 -2145432891, i32 -2145430664, i32 -2145430575, i32 -2145430454, i32 -2145430359, i32 -2145430258, i32 -2145430231, i32 -2145430148, i32 -2145430059, i32 -2145429938, i32 -2145429838, i32 -2145429732, i32 -2145429624, i32 -2145432603, i32 -2145432550, i32 -2145432519, i32 -2145432488, i32 -2145432467, i32 -2145432445, i32 -2145432396, i32 -2145432375, i32 -2145429541, i32 -2145429452, i32 -2145429331, i32 -2145429232, i32 -2145429126, i32 -2145429024, i32 -2145428991, i32 -2145428918, i32 -2145428850, i32 -2145432001, i32 -2145431948, i32 -2145431917, i32 -2145431886, i32 -2145431865, i32 -2145431843, i32 -2145431794, i32 -2145431773, i32 -2145428798, i32 -2145428709, i32 -2145428588, i32 -2145428489, i32 -2145428383, i32 -2145428281, i32 -2145428248, i32 -2145428165, i32 -2145428076, i32 -2145427955, i32 -2145427855, i32 -2145427829, i32 -2145427726, i32 -2145427700, i32 -2145431515, i32 -2145431448, i32 -2145431423, i32 -2145431359, i32 -2145431243, i32 -2145431218, i32 -2145431193}
!7023 = !DILocation(line: 0, scope: !6880)
!7024 = !DILocation(line: 862, column: 1, scope: !6880)
!7025 = !DILocation(line: 861, column: 2, scope: !6880)
!7026 = distinct !DISubprogram(name: "lwip_setsockopt", scope: !3, file: !3, line: 4203, type: !6881, isLocal: false, isDefinition: true, scopeLine: 4204, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7027)
!7027 = !{!7028, !7029, !7030, !7031, !7032, !7033, !7034, !7035, !7039, !7045, !7047}
!7028 = !DILocalVariable(name: "s", arg: 1, scope: !7026, file: !3, line: 4203, type: !80)
!7029 = !DILocalVariable(name: "level", arg: 2, scope: !7026, file: !3, line: 4203, type: !80)
!7030 = !DILocalVariable(name: "optname", arg: 3, scope: !7026, file: !3, line: 4203, type: !80)
!7031 = !DILocalVariable(name: "optval", arg: 4, scope: !7026, file: !3, line: 4203, type: !225)
!7032 = !DILocalVariable(name: "optlen", arg: 5, scope: !7026, file: !3, line: 4203, type: !1890)
!7033 = !DILocalVariable(name: "err", scope: !7026, file: !3, line: 4205, type: !80)
!7034 = !DILocalVariable(name: "sock", scope: !7026, file: !3, line: 4206, type: !1165)
!7035 = !DILocalVariable(name: "sockerr", scope: !7036, file: !3, line: 4217, type: !1007)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 4217, column: 5)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 4216, column: 23)
!7038 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 4216, column: 7)
!7039 = !DILocalVariable(name: "tid", scope: !7040, file: !3, line: 4217, type: !170)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 4217, column: 5)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 4217, column: 5)
!7042 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 4217, column: 5)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !3, line: 4217, column: 5)
!7044 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 4217, column: 5)
!7045 = !DILocalVariable(name: "sockerr", scope: !7046, file: !3, line: 4269, type: !1007)
!7046 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 4269, column: 3)
!7047 = !DILocalVariable(name: "tid", scope: !7048, file: !3, line: 4269, type: !170)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 4269, column: 3)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !3, line: 4269, column: 3)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 4269, column: 3)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 4269, column: 3)
!7052 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 4269, column: 3)
!7053 = !DILocation(line: 4203, column: 21, scope: !7026)
!7054 = !DILocation(line: 4203, column: 28, scope: !7026)
!7055 = !DILocation(line: 4203, column: 39, scope: !7026)
!7056 = !DILocation(line: 4203, column: 60, scope: !7026)
!7057 = !DILocation(line: 4203, column: 78, scope: !7026)
!7058 = !DILocation(line: 4205, column: 7, scope: !7026)
!7059 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !7060)
!7060 = distinct !DILocation(line: 4206, column: 28, scope: !7026)
!7061 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !7062)
!7062 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !7060)
!7063 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !7064)
!7064 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !7062)
!7065 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !7066)
!7066 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !7064)
!7067 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !7066)
!7068 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !7066)
!7069 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !7066)
!7070 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !7066)
!7071 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !7064)
!7072 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !7062)
!7073 = !DILocation(line: 1460, column: 21, scope: !1572, inlinedAt: !7062)
!7074 = !DILocation(line: 1429, column: 21, scope: !1578, inlinedAt: !7064)
!7075 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !7062)
!7076 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !7062)
!7077 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !7062)
!7078 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !7062)
!7079 = !DILocation(line: 1479, column: 21, scope: !1556, inlinedAt: !7060)
!7080 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7081)
!7081 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7060)
!7082 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7081)
!7083 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7081)
!7084 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7060)
!7085 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7086)
!7086 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7060)
!7087 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7086)
!7088 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7086)
!7089 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !7060)
!7090 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !7091)
!7091 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !7060)
!7092 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !7091)
!7093 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !7091)
!7094 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !7091)
!7095 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !7060)
!7096 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7097)
!7097 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7098)
!7098 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !7060)
!7099 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7097)
!7100 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7097)
!7101 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7098)
!7102 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7098)
!7103 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7098)
!7104 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7098)
!7105 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7098)
!7106 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !7060)
!7107 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !7060)
!7108 = !DILocation(line: 4206, column: 21, scope: !7026)
!7109 = !DILocation(line: 4212, column: 7, scope: !7026)
!7110 = !DILocation(line: 4216, column: 12, scope: !7038)
!7111 = !DILocation(line: 4216, column: 7, scope: !7026)
!7112 = !DILocation(line: 4217, column: 5, scope: !7036)
!7113 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7114)
!7114 = distinct !DILocation(line: 4217, column: 5, scope: !7043)
!7115 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7114)
!7116 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7114)
!7117 = !DILocation(line: 4217, column: 5, scope: !7043)
!7118 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7119)
!7119 = distinct !DILocation(line: 4217, column: 5, scope: !7043)
!7120 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7119)
!7121 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7119)
!7122 = !DILocation(line: 4217, column: 5, scope: !7044)
!7123 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !7124)
!7124 = distinct !DILocation(line: 4217, column: 5, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 4217, column: 5)
!7126 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !7124)
!7127 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !7124)
!7128 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !7124)
!7129 = !DILocation(line: 4217, column: 5, scope: !7125)
!7130 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7131)
!7131 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7132)
!7132 = distinct !DILocation(line: 4217, column: 5, scope: !7040)
!7133 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7131)
!7134 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7131)
!7135 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7132)
!7136 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7132)
!7137 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7132)
!7138 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7132)
!7139 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7132)
!7140 = !DILocation(line: 4217, column: 5, scope: !7040)
!7141 = !{i32 -2144595676, i32 -2144595663, i32 -2144595638, i32 -2144595614, i32 -2144595589, i32 -2144595514, i32 -2144595489, i32 -2144595345, i32 -2144593122, i32 -2144593033, i32 -2144592912, i32 -2144592817, i32 -2144592716, i32 -2144592689, i32 -2144592606, i32 -2144592517, i32 -2144592396, i32 -2144592296, i32 -2144592190, i32 -2144592082, i32 -2144595057, i32 -2144595004, i32 -2144594973, i32 -2144594942, i32 -2144594921, i32 -2144594899, i32 -2144594850, i32 -2144594829, i32 -2144591999, i32 -2144591910, i32 -2144591789, i32 -2144591690, i32 -2144591584, i32 -2144591482, i32 -2144591449, i32 -2144591376, i32 -2144591308, i32 -2144594455, i32 -2144594402, i32 -2144594371, i32 -2144594340, i32 -2144594319, i32 -2144594297, i32 -2144594248, i32 -2144594227, i32 -2144591253, i32 -2144591164, i32 -2144591043, i32 -2144590944, i32 -2144590838, i32 -2144590736, i32 -2144590703, i32 -2144590620, i32 -2144590531, i32 -2144590410, i32 -2144590310, i32 -2144590284, i32 -2144590181, i32 -2144590155, i32 -2144593969, i32 -2144593902, i32 -2144593877, i32 -2144593813, i32 -2144593697, i32 -2144593672, i32 -2144593647}
!7142 = !DILocation(line: 4224, column: 3, scope: !7026)
!7143 = !DILocalVariable(name: "s", arg: 1, scope: !7144, file: !3, line: 4301, type: !80)
!7144 = distinct !DISubprogram(name: "lwip_setsockopt_impl", scope: !3, file: !3, line: 4301, type: !6881, isLocal: true, isDefinition: true, scopeLine: 4302, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7145)
!7145 = !{!7143, !7146, !7147, !7148, !7149, !7150, !7151, !7152, !7156, !7216, !7219, !7222, !7223, !7224}
!7146 = !DILocalVariable(name: "level", arg: 2, scope: !7144, file: !3, line: 4301, type: !80)
!7147 = !DILocalVariable(name: "optname", arg: 3, scope: !7144, file: !3, line: 4301, type: !80)
!7148 = !DILocalVariable(name: "optval", arg: 4, scope: !7144, file: !3, line: 4301, type: !225)
!7149 = !DILocalVariable(name: "optlen", arg: 5, scope: !7144, file: !3, line: 4301, type: !1890)
!7150 = !DILocalVariable(name: "err", scope: !7144, file: !3, line: 4303, type: !80)
!7151 = !DILocalVariable(name: "sock", scope: !7144, file: !3, line: 4304, type: !1165)
!7152 = !DILocalVariable(name: "iface", scope: !7153, file: !3, line: 4420, type: !1008)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 4419, column: 31)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4319, column: 24)
!7155 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 4315, column: 18)
!7156 = !DILocalVariable(name: "n", scope: !7153, file: !3, line: 4421, type: !7157)
!7157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7158, size: 64)
!7158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netif", file: !125, line: 260, size: 2240, elements: !7159)
!7159 = !{!7160, !7161, !7162, !7163, !7164, !7166, !7168, !7170, !7171, !7176, !7181, !7186, !7191, !7196, !7197, !7198, !7200, !7201, !7202, !7203, !7205, !7206, !7207, !7208, !7209, !7210, !7211}
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7158, file: !125, line: 263, baseType: !7157, size: 64)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr", scope: !7158, file: !125, line: 268, baseType: !1183, size: 192, offset: 64)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "netmask", scope: !7158, file: !125, line: 269, baseType: !1183, size: 192, offset: 256)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "gw", scope: !7158, file: !125, line: 270, baseType: !1183, size: 192, offset: 448)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr", scope: !7158, file: !125, line: 274, baseType: !7165, size: 576, offset: 640)
!7165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1183, size: 576, elements: !505)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr_state", scope: !7158, file: !125, line: 277, baseType: !7167, size: 24, offset: 1216)
!7167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 24, elements: !505)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr_valid_life", scope: !7158, file: !125, line: 282, baseType: !7169, size: 96, offset: 1248)
!7169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 96, elements: !505)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr_pref_life", scope: !7158, file: !125, line: 283, baseType: !7169, size: 96, offset: 1344)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !7158, file: !125, line: 288, baseType: !7172, size: 64, offset: 1472)
!7172 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_input_fn", file: !125, line: 178, baseType: !7173)
!7173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7174, size: 64)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{!1283, !1252, !7157}
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !7158, file: !125, line: 294, baseType: !7177, size: 64, offset: 1536)
!7177 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_output_fn", file: !125, line: 189, baseType: !7178)
!7178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7179, size: 64)
!7179 = !DISubroutineType(types: !7180)
!7180 = !{!1283, !7157, !1252, !696}
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "linkoutput", scope: !7158, file: !125, line: 299, baseType: !7182, size: 64, offset: 1600)
!7182 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_linkoutput_fn", file: !125, line: 212, baseType: !7183)
!7183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7184, size: 64)
!7184 = !DISubroutineType(types: !7185)
!7185 = !{!1283, !7157, !1252}
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "output_ip6", scope: !7158, file: !125, line: 305, baseType: !7187, size: 64, offset: 1664)
!7187 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_output_ip6_fn", file: !125, line: 202, baseType: !7188)
!7188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7189, size: 64)
!7189 = !DISubroutineType(types: !7190)
!7190 = !{!1283, !7157, !1252, !703}
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "status_callback", scope: !7158, file: !125, line: 310, baseType: !7192, size: 64, offset: 1728)
!7192 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_status_callback_fn", file: !125, line: 214, baseType: !7193)
!7193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7194, size: 64)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{null, !7157}
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "remove_callback", scope: !7158, file: !125, line: 319, baseType: !7192, size: 64, offset: 1792)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7158, file: !125, line: 323, baseType: !143, size: 64, offset: 1856)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !7158, file: !125, line: 325, baseType: !7199, size: 64, offset: 1920)
!7199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 64, elements: !253)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "chksum_flags", scope: !7158, file: !125, line: 332, baseType: !164, size: 16, offset: 1984)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !7158, file: !125, line: 335, baseType: !164, size: 16, offset: 2000)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !7158, file: !125, line: 338, baseType: !164, size: 16, offset: 2016)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "hwaddr", scope: !7158, file: !125, line: 341, baseType: !7204, size: 48, offset: 2032)
!7204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 48, elements: !1014)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "hwaddr_len", scope: !7158, file: !125, line: 343, baseType: !156, size: 8, offset: 2080)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7158, file: !125, line: 345, baseType: !156, size: 8, offset: 2088)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7158, file: !125, line: 347, baseType: !1146, size: 16, offset: 2096)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !7158, file: !125, line: 350, baseType: !156, size: 8, offset: 2112)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_autoconfig_enabled", scope: !7158, file: !125, line: 353, baseType: !156, size: 8, offset: 2120)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "rs_count", scope: !7158, file: !125, line: 357, baseType: !156, size: 8, offset: 2128)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "mld_mac_filter", scope: !7158, file: !125, line: 377, baseType: !7212, size: 64, offset: 2176)
!7212 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_mld_mac_filter_fn", file: !125, line: 222, baseType: !7213)
!7213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7214, size: 64)
!7214 = !DISubroutineType(types: !7215)
!7215 = !{!1283, !7157, !703, !124}
!7216 = !DILocalVariable(name: "if_addr", scope: !7217, file: !3, line: 4495, type: !698)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 4494, column: 31)
!7218 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4466, column: 24)
!7219 = !DILocalVariable(name: "mld6_err", scope: !7220, file: !3, line: 4616, type: !1283)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 4614, column: 32)
!7221 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4601, column: 24)
!7222 = !DILocalVariable(name: "netif", scope: !7220, file: !3, line: 4617, type: !7157)
!7223 = !DILocalVariable(name: "multi_addr", scope: !7220, file: !3, line: 4618, type: !705)
!7224 = !DILocalVariable(name: "imr", scope: !7220, file: !3, line: 4619, type: !1036)
!7225 = !DILocation(line: 4301, column: 26, scope: !7144, inlinedAt: !7226)
!7226 = distinct !DILocation(line: 4225, column: 9, scope: !7026)
!7227 = !DILocation(line: 4301, column: 33, scope: !7144, inlinedAt: !7226)
!7228 = !DILocation(line: 4301, column: 44, scope: !7144, inlinedAt: !7226)
!7229 = !DILocation(line: 4301, column: 65, scope: !7144, inlinedAt: !7226)
!7230 = !DILocation(line: 4301, column: 83, scope: !7144, inlinedAt: !7226)
!7231 = !DILocation(line: 4303, column: 7, scope: !7144, inlinedAt: !7226)
!7232 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !7233)
!7233 = distinct !DILocation(line: 4304, column: 28, scope: !7144, inlinedAt: !7226)
!7234 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !7235)
!7235 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !7233)
!7236 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !7237)
!7237 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !7235)
!7238 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !7237)
!7239 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !7237)
!7240 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !7235)
!7241 = !DILocation(line: 1460, column: 21, scope: !1572, inlinedAt: !7233)
!7242 = !DILocation(line: 1429, column: 21, scope: !1578, inlinedAt: !7235)
!7243 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !7233)
!7244 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !7233)
!7245 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !7233)
!7246 = !DILocation(line: 4304, column: 21, scope: !7144, inlinedAt: !7226)
!7247 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !7233)
!7248 = !DILocation(line: 4315, column: 3, scope: !7144, inlinedAt: !7226)
!7249 = !DILocation(line: 4319, column: 7, scope: !7155, inlinedAt: !7226)
!7250 = !DILocation(line: 4330, column: 16, scope: !7251, inlinedAt: !7226)
!7251 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 4329, column: 15)
!7252 = !DILocation(line: 4330, column: 52, scope: !7251, inlinedAt: !7226)
!7253 = !DILocation(line: 4329, column: 15, scope: !7154, inlinedAt: !7226)
!7254 = !DILocation(line: 3869, column: 5, scope: !6651, inlinedAt: !7255)
!7255 = distinct !DILocation(line: 4335, column: 21, scope: !7154, inlinedAt: !7226)
!7256 = !DILocation(line: 3874, column: 1, scope: !6652, inlinedAt: !7255)
!7257 = !DILocation(line: 4337, column: 11, scope: !7258, inlinedAt: !7226)
!7258 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 4337, column: 11)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 4337, column: 11)
!7260 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 4337, column: 11)
!7261 = !DILocation(line: 4337, column: 11, scope: !7259, inlinedAt: !7226)
!7262 = !DILocation(line: 4337, column: 11, scope: !7263, inlinedAt: !7226)
!7263 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 4337, column: 11)
!7264 = !DILocation(line: 4337, column: 11, scope: !7260, inlinedAt: !7226)
!7265 = !DILocation(line: 4338, column: 16, scope: !7266, inlinedAt: !7226)
!7266 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 4338, column: 15)
!7267 = !DILocation(line: 4338, column: 15, scope: !7266, inlinedAt: !7226)
!7268 = !DILocation(line: 0, scope: !7269, inlinedAt: !7226)
!7269 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 4340, column: 18)
!7270 = !DILocation(line: 4338, column: 15, scope: !7154, inlinedAt: !7226)
!7271 = !DILocation(line: 4339, column: 13, scope: !7272, inlinedAt: !7226)
!7272 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 4338, column: 37)
!7273 = !DILocation(line: 4340, column: 11, scope: !7272, inlinedAt: !7226)
!7274 = !DILocation(line: 4341, column: 13, scope: !7269, inlinedAt: !7226)
!7275 = !DILocation(line: 4404, column: 11, scope: !7276, inlinedAt: !7226)
!7276 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 4404, column: 11)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 4404, column: 11)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 4404, column: 11)
!7279 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 4404, column: 11)
!7280 = !DILocation(line: 4404, column: 11, scope: !7277, inlinedAt: !7226)
!7281 = !DILocation(line: 4404, column: 11, scope: !7282, inlinedAt: !7226)
!7282 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 4404, column: 11)
!7283 = !DILocation(line: 4404, column: 11, scope: !7278, inlinedAt: !7226)
!7284 = !DILocation(line: 4404, column: 11, scope: !7285, inlinedAt: !7226)
!7285 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 4404, column: 11)
!7286 = !DILocation(line: 4404, column: 11, scope: !7279, inlinedAt: !7226)
!7287 = !DILocation(line: 4412, column: 16, scope: !7288, inlinedAt: !7226)
!7288 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 4412, column: 15)
!7289 = !DILocation(line: 4412, column: 15, scope: !7288, inlinedAt: !7226)
!7290 = !DILocation(line: 0, scope: !7291, inlinedAt: !7226)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 4415, column: 13)
!7292 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 4414, column: 18)
!7293 = !DILocation(line: 4412, column: 15, scope: !7154, inlinedAt: !7226)
!7294 = !DILocation(line: 4413, column: 13, scope: !7295, inlinedAt: !7226)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 4413, column: 13)
!7296 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 4412, column: 37)
!7297 = !DILocation(line: 4414, column: 11, scope: !7296, inlinedAt: !7226)
!7298 = !DILocation(line: 4415, column: 13, scope: !7291, inlinedAt: !7226)
!7299 = !DILocation(line: 4421, column: 25, scope: !7153, inlinedAt: !7226)
!7300 = !DILocation(line: 4423, column: 11, scope: !7301, inlinedAt: !7226)
!7301 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 4423, column: 11)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 4423, column: 11)
!7303 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 4423, column: 11)
!7304 = !DILocation(line: 4423, column: 11, scope: !7302, inlinedAt: !7226)
!7305 = !DILocation(line: 4420, column: 31, scope: !7153, inlinedAt: !7226)
!7306 = !DILocation(line: 4426, column: 15, scope: !7307, inlinedAt: !7226)
!7307 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 4426, column: 15)
!7308 = !DILocation(line: 4426, column: 34, scope: !7307, inlinedAt: !7226)
!7309 = !DILocation(line: 4426, column: 15, scope: !7153, inlinedAt: !7226)
!7310 = !DILocation(line: 4427, column: 17, scope: !7311, inlinedAt: !7226)
!7311 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 4426, column: 40)
!7312 = !DILocation(line: 4428, column: 19, scope: !7313, inlinedAt: !7226)
!7313 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 4428, column: 17)
!7314 = !DILocation(line: 4428, column: 17, scope: !7311, inlinedAt: !7226)
!7315 = !DILocation(line: 4434, column: 19, scope: !7153, inlinedAt: !7226)
!7316 = !DILocation(line: 0, scope: !7153, inlinedAt: !7226)
!7317 = !DILocation(line: 4434, column: 11, scope: !7153, inlinedAt: !7226)
!7318 = !DILocation(line: 4437, column: 42, scope: !7319, inlinedAt: !7226)
!7319 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 4434, column: 64)
!7320 = !DILocation(line: 4437, column: 46, scope: !7319, inlinedAt: !7226)
!7321 = !DILocation(line: 4437, column: 15, scope: !7319, inlinedAt: !7226)
!7322 = !DILocation(line: 4438, column: 15, scope: !7319, inlinedAt: !7226)
!7323 = !DILocation(line: 4442, column: 42, scope: !7319, inlinedAt: !7226)
!7324 = !DILocation(line: 4442, column: 46, scope: !7319, inlinedAt: !7226)
!7325 = !DILocation(line: 4442, column: 15, scope: !7319, inlinedAt: !7226)
!7326 = !DILocation(line: 4443, column: 15, scope: !7319, inlinedAt: !7226)
!7327 = !DILocation(line: 4451, column: 15, scope: !7328, inlinedAt: !7226)
!7328 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 4451, column: 15)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 4451, column: 15)
!7330 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 4451, column: 15)
!7331 = distinct !DILexicalBlock(scope: !7319, file: !3, line: 4451, column: 15)
!7332 = !DILocation(line: 4451, column: 15, scope: !7333, inlinedAt: !7226)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 4451, column: 15)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 4451, column: 15)
!7335 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 4451, column: 15)
!7336 = !DILocation(line: 4466, column: 7, scope: !7155, inlinedAt: !7226)
!7337 = !DILocation(line: 4468, column: 11, scope: !7338, inlinedAt: !7226)
!7338 = distinct !DILexicalBlock(scope: !7339, file: !3, line: 4468, column: 11)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 4468, column: 11)
!7340 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 4468, column: 11)
!7341 = !DILocation(line: 4468, column: 11, scope: !7339, inlinedAt: !7226)
!7342 = !DILocation(line: 4468, column: 11, scope: !7343, inlinedAt: !7226)
!7343 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 4468, column: 11)
!7344 = !DILocation(line: 4468, column: 11, scope: !7340, inlinedAt: !7226)
!7345 = !DILocation(line: 4469, column: 45, scope: !7218, inlinedAt: !7226)
!7346 = !DILocation(line: 4469, column: 44, scope: !7218, inlinedAt: !7226)
!7347 = !DILocation(line: 4469, column: 37, scope: !7218, inlinedAt: !7226)
!7348 = !DILocation(line: 4469, column: 31, scope: !7218, inlinedAt: !7226)
!7349 = !DILocation(line: 4469, column: 35, scope: !7218, inlinedAt: !7226)
!7350 = !DILocation(line: 4472, column: 11, scope: !7218, inlinedAt: !7226)
!7351 = !DILocation(line: 4474, column: 11, scope: !7352, inlinedAt: !7226)
!7352 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 4474, column: 11)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 4474, column: 11)
!7354 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 4474, column: 11)
!7355 = !DILocation(line: 4474, column: 11, scope: !7353, inlinedAt: !7226)
!7356 = !DILocation(line: 4474, column: 11, scope: !7357, inlinedAt: !7226)
!7357 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 4474, column: 11)
!7358 = !DILocation(line: 4474, column: 11, scope: !7354, inlinedAt: !7226)
!7359 = !DILocation(line: 4475, column: 45, scope: !7218, inlinedAt: !7226)
!7360 = !DILocation(line: 4475, column: 44, scope: !7218, inlinedAt: !7226)
!7361 = !DILocation(line: 4475, column: 37, scope: !7218, inlinedAt: !7226)
!7362 = !DILocation(line: 4475, column: 31, scope: !7218, inlinedAt: !7226)
!7363 = !DILocation(line: 4475, column: 35, scope: !7218, inlinedAt: !7226)
!7364 = !DILocation(line: 4478, column: 11, scope: !7218, inlinedAt: !7226)
!7365 = !DILocation(line: 4491, column: 11, scope: !7366, inlinedAt: !7226)
!7366 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 4491, column: 11)
!7367 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 4491, column: 11)
!7368 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 4491, column: 11)
!7369 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 4491, column: 11)
!7370 = !DILocation(line: 4491, column: 11, scope: !7367, inlinedAt: !7226)
!7371 = !DILocation(line: 4491, column: 11, scope: !7372, inlinedAt: !7226)
!7372 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 4491, column: 11)
!7373 = !DILocation(line: 4491, column: 11, scope: !7368, inlinedAt: !7226)
!7374 = !DILocation(line: 4491, column: 11, scope: !7375, inlinedAt: !7226)
!7375 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 4491, column: 11)
!7376 = !DILocation(line: 4491, column: 11, scope: !7369, inlinedAt: !7226)
!7377 = !DILocation(line: 4492, column: 11, scope: !7218, inlinedAt: !7226)
!7378 = !DILocation(line: 4493, column: 11, scope: !7218, inlinedAt: !7226)
!7379 = !DILocation(line: 4496, column: 11, scope: !7380, inlinedAt: !7226)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 4496, column: 11)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 4496, column: 11)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 4496, column: 11)
!7383 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 4496, column: 11)
!7384 = !DILocation(line: 4496, column: 11, scope: !7381, inlinedAt: !7226)
!7385 = !DILocation(line: 4496, column: 11, scope: !7386, inlinedAt: !7226)
!7386 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 4496, column: 11)
!7387 = !DILocation(line: 4496, column: 11, scope: !7382, inlinedAt: !7226)
!7388 = !DILocation(line: 4496, column: 11, scope: !7389, inlinedAt: !7226)
!7389 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 4496, column: 11)
!7390 = !DILocation(line: 4496, column: 11, scope: !7383, inlinedAt: !7226)
!7391 = !DILocation(line: 4497, column: 11, scope: !7217, inlinedAt: !7226)
!7392 = !DILocation(line: 4495, column: 22, scope: !7217, inlinedAt: !7226)
!7393 = !DILocation(line: 4498, column: 11, scope: !7217, inlinedAt: !7226)
!7394 = !DILocation(line: 4502, column: 11, scope: !7395, inlinedAt: !7226)
!7395 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 4502, column: 11)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 4502, column: 11)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 4502, column: 11)
!7398 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 4502, column: 11)
!7399 = !DILocation(line: 4502, column: 11, scope: !7396, inlinedAt: !7226)
!7400 = !DILocation(line: 4502, column: 11, scope: !7401, inlinedAt: !7226)
!7401 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 4502, column: 11)
!7402 = !DILocation(line: 4502, column: 11, scope: !7397, inlinedAt: !7226)
!7403 = !DILocation(line: 4502, column: 11, scope: !7404, inlinedAt: !7226)
!7404 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 4502, column: 11)
!7405 = !DILocation(line: 4502, column: 11, scope: !7398, inlinedAt: !7226)
!7406 = !DILocation(line: 4503, column: 15, scope: !7407, inlinedAt: !7226)
!7407 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 4503, column: 15)
!7408 = !DILocation(line: 0, scope: !7409, inlinedAt: !7226)
!7409 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 4506, column: 13)
!7410 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 4505, column: 18)
!7411 = !DILocation(line: 4503, column: 15, scope: !7218, inlinedAt: !7226)
!7412 = !DILocation(line: 4504, column: 13, scope: !7413, inlinedAt: !7226)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 4504, column: 13)
!7414 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 4503, column: 38)
!7415 = !DILocation(line: 4505, column: 11, scope: !7414, inlinedAt: !7226)
!7416 = !DILocation(line: 4506, column: 13, scope: !7409, inlinedAt: !7226)
!7417 = !DILocation(line: 4551, column: 7, scope: !7418, inlinedAt: !7226)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 4551, column: 7)
!7419 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 4551, column: 7)
!7420 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 4551, column: 7)
!7421 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4551, column: 7)
!7422 = !DILocation(line: 4551, column: 7, scope: !7419, inlinedAt: !7226)
!7423 = !DILocation(line: 4551, column: 7, scope: !7424, inlinedAt: !7226)
!7424 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 4551, column: 7)
!7425 = !DILocation(line: 4551, column: 7, scope: !7420, inlinedAt: !7226)
!7426 = !DILocation(line: 4551, column: 7, scope: !7427, inlinedAt: !7226)
!7427 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 4551, column: 7)
!7428 = !DILocation(line: 4551, column: 7, scope: !7421, inlinedAt: !7226)
!7429 = !DILocation(line: 4552, column: 32, scope: !7430, inlinedAt: !7226)
!7430 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4552, column: 11)
!7431 = !DILocation(line: 4552, column: 38, scope: !7430, inlinedAt: !7226)
!7432 = !DILocation(line: 4552, column: 11, scope: !7155, inlinedAt: !7226)
!7433 = !DILocation(line: 4556, column: 7, scope: !7155, inlinedAt: !7226)
!7434 = !DILocation(line: 4558, column: 16, scope: !7435, inlinedAt: !7226)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 4558, column: 15)
!7436 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4556, column: 24)
!7437 = !DILocation(line: 4558, column: 15, scope: !7435, inlinedAt: !7226)
!7438 = !DILocation(line: 0, scope: !7439, inlinedAt: !7226)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 4561, column: 13)
!7440 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 4560, column: 18)
!7441 = !DILocation(line: 4558, column: 15, scope: !7436, inlinedAt: !7226)
!7442 = !DILocation(line: 4559, column: 13, scope: !7443, inlinedAt: !7226)
!7443 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 4559, column: 13)
!7444 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 4558, column: 37)
!7445 = !DILocation(line: 4560, column: 11, scope: !7444, inlinedAt: !7226)
!7446 = !DILocation(line: 4561, column: 13, scope: !7439, inlinedAt: !7226)
!7447 = !DILocation(line: 4567, column: 53, scope: !7436, inlinedAt: !7226)
!7448 = !DILocation(line: 4567, column: 52, scope: !7436, inlinedAt: !7226)
!7449 = !DILocation(line: 4567, column: 32, scope: !7436, inlinedAt: !7226)
!7450 = !DILocation(line: 4567, column: 42, scope: !7436, inlinedAt: !7226)
!7451 = !DILocation(line: 4570, column: 11, scope: !7436, inlinedAt: !7226)
!7452 = !DILocation(line: 4601, column: 7, scope: !7155, inlinedAt: !7226)
!7453 = !DILocation(line: 4603, column: 11, scope: !7454, inlinedAt: !7226)
!7454 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 4603, column: 11)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 4603, column: 11)
!7456 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 4603, column: 11)
!7457 = !DILocation(line: 4603, column: 11, scope: !7455, inlinedAt: !7226)
!7458 = !DILocation(line: 4603, column: 11, scope: !7459, inlinedAt: !7226)
!7459 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 4603, column: 11)
!7460 = !DILocation(line: 4603, column: 11, scope: !7456, inlinedAt: !7226)
!7461 = !DILocation(line: 4604, column: 16, scope: !7462, inlinedAt: !7226)
!7462 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 4604, column: 15)
!7463 = !DILocation(line: 4604, column: 15, scope: !7462, inlinedAt: !7226)
!7464 = !DILocation(line: 0, scope: !7465, inlinedAt: !7226)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 4607, column: 13)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 4607, column: 13)
!7467 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 4607, column: 13)
!7468 = distinct !DILexicalBlock(scope: !7469, file: !3, line: 4607, column: 13)
!7469 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 4606, column: 18)
!7470 = !DILocation(line: 4604, column: 15, scope: !7221, inlinedAt: !7226)
!7471 = !DILocation(line: 4605, column: 13, scope: !7472, inlinedAt: !7226)
!7472 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 4605, column: 13)
!7473 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 4605, column: 13)
!7474 = distinct !DILexicalBlock(scope: !7475, file: !3, line: 4605, column: 13)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 4605, column: 13)
!7476 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 4604, column: 37)
!7477 = !DILocation(line: 4606, column: 11, scope: !7476, inlinedAt: !7226)
!7478 = !DILocation(line: 4607, column: 13, scope: !7465, inlinedAt: !7226)
!7479 = !DILocation(line: 4618, column: 11, scope: !7220, inlinedAt: !7226)
!7480 = !DILocation(line: 4619, column: 35, scope: !7220, inlinedAt: !7226)
!7481 = !DILocation(line: 4620, column: 11, scope: !7482, inlinedAt: !7226)
!7482 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 4620, column: 11)
!7483 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 4620, column: 11)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !3, line: 4620, column: 11)
!7485 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 4620, column: 11)
!7486 = !DILocation(line: 4620, column: 11, scope: !7483, inlinedAt: !7226)
!7487 = !DILocation(line: 4620, column: 11, scope: !7488, inlinedAt: !7226)
!7488 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 4620, column: 11)
!7489 = !DILocation(line: 4620, column: 11, scope: !7484, inlinedAt: !7226)
!7490 = !DILocation(line: 4620, column: 11, scope: !7491, inlinedAt: !7226)
!7491 = distinct !DILexicalBlock(scope: !7485, file: !3, line: 4620, column: 11)
!7492 = !DILocation(line: 4620, column: 11, scope: !7485, inlinedAt: !7226)
!7493 = !DILocation(line: 4621, column: 11, scope: !7494, inlinedAt: !7226)
!7494 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 4621, column: 11)
!7495 = !{!1689, !1405, i64 16}
!7496 = !DILocation(line: 4622, column: 11, scope: !7497, inlinedAt: !7226)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 4622, column: 11)
!7498 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 4622, column: 11)
!7499 = !{!7500, !1409, i64 16}
!7500 = !{!"ipv6_mreq", !3621, i64 0, !1409, i64 16}
!7501 = !DILocation(line: 4622, column: 11, scope: !7498, inlinedAt: !7226)
!7502 = !DILocation(line: 4622, column: 11, scope: !7503, inlinedAt: !7226)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 4622, column: 11)
!7504 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 4622, column: 11)
!7505 = !DILocation(line: 4622, column: 11, scope: !7506, inlinedAt: !7226)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 4622, column: 11)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 4622, column: 11)
!7508 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 4622, column: 11)
!7509 = !DILocation(line: 4623, column: 38, scope: !7220, inlinedAt: !7226)
!7510 = !DILocation(line: 4623, column: 19, scope: !7220, inlinedAt: !7226)
!7511 = !DILocation(line: 4617, column: 25, scope: !7220, inlinedAt: !7226)
!7512 = !DILocation(line: 4624, column: 21, scope: !7513, inlinedAt: !7226)
!7513 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 4624, column: 15)
!7514 = !DILocation(line: 4624, column: 15, scope: !7220, inlinedAt: !7226)
!7515 = !DILocation(line: 4629, column: 23, scope: !7516, inlinedAt: !7226)
!7516 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 4629, column: 15)
!7517 = !DILocation(line: 4629, column: 15, scope: !7220, inlinedAt: !7226)
!7518 = !DILocation(line: 4630, column: 63, scope: !7519, inlinedAt: !7226)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 4630, column: 17)
!7520 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 4629, column: 43)
!7521 = !DILocation(line: 4618, column: 22, scope: !7220, inlinedAt: !7226)
!7522 = !DILocalVariable(name: "s", arg: 1, scope: !7523, file: !3, line: 5075, type: !80)
!7523 = distinct !DISubprogram(name: "lwip_socket_register_mld6_membership", scope: !3, file: !3, line: 5075, type: !7524, isLocal: true, isDefinition: true, scopeLine: 5076, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7526)
!7524 = !DISubroutineType(types: !7525)
!7525 = !{!80, !80, !7, !703}
!7526 = !{!7522, !7527, !7528, !7529, !7530}
!7527 = !DILocalVariable(name: "if_idx", arg: 2, scope: !7523, file: !3, line: 5075, type: !7)
!7528 = !DILocalVariable(name: "multi_addr", arg: 3, scope: !7523, file: !3, line: 5075, type: !703)
!7529 = !DILocalVariable(name: "sock", scope: !7523, file: !3, line: 5077, type: !1165)
!7530 = !DILocalVariable(name: "i", scope: !7523, file: !3, line: 5078, type: !80)
!7531 = !DILocation(line: 5075, column: 42, scope: !7523, inlinedAt: !7532)
!7532 = distinct !DILocation(line: 4630, column: 18, scope: !7519, inlinedAt: !7226)
!7533 = !DILocation(line: 5075, column: 58, scope: !7523, inlinedAt: !7532)
!7534 = !DILocation(line: 5075, column: 84, scope: !7523, inlinedAt: !7532)
!7535 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !7536)
!7536 = distinct !DILocation(line: 5077, column: 28, scope: !7523, inlinedAt: !7532)
!7537 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !7538)
!7538 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !7536)
!7539 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !7540)
!7540 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !7538)
!7541 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !7542)
!7542 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !7540)
!7543 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !7542)
!7544 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !7542)
!7545 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !7540)
!7546 = !DILocation(line: 1460, column: 21, scope: !1572, inlinedAt: !7538)
!7547 = !DILocation(line: 1429, column: 21, scope: !1578, inlinedAt: !7540)
!7548 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !7538)
!7549 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !7538)
!7550 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !7538)
!7551 = !DILocation(line: 1479, column: 21, scope: !1556, inlinedAt: !7536)
!7552 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !7538)
!7553 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7554)
!7554 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7536)
!7555 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7554)
!7556 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7554)
!7557 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7536)
!7558 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7559)
!7559 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7536)
!7560 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7559)
!7561 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7559)
!7562 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !7536)
!7563 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !7564)
!7564 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !7536)
!7565 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !7564)
!7566 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !7564)
!7567 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !7564)
!7568 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !7536)
!7569 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7570)
!7570 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7571)
!7571 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !7536)
!7572 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7570)
!7573 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7570)
!7574 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7571)
!7575 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7571)
!7576 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7571)
!7577 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7571)
!7578 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7571)
!7579 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !7536)
!7580 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !7536)
!7581 = !DILocation(line: 5077, column: 21, scope: !7523, inlinedAt: !7532)
!7582 = !DILocation(line: 5080, column: 7, scope: !7523, inlinedAt: !7532)
!7583 = !DILocation(line: 5078, column: 7, scope: !7523, inlinedAt: !7532)
!7584 = !DILocation(line: 5084, column: 3, scope: !7585, inlinedAt: !7532)
!7585 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 5084, column: 3)
!7586 = !DILocation(line: 5085, column: 46, scope: !7587, inlinedAt: !7532)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 5085, column: 9)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 5084, column: 53)
!7589 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 5084, column: 3)
!7590 = !DILocation(line: 5085, column: 51, scope: !7587, inlinedAt: !7532)
!7591 = !DILocation(line: 5084, column: 49, scope: !7589, inlinedAt: !7532)
!7592 = !DILocation(line: 5085, column: 9, scope: !7588, inlinedAt: !7532)
!7593 = !DILocation(line: 5095, column: 1, scope: !7523, inlinedAt: !7532)
!7594 = !DILocation(line: 4616, column: 17, scope: !7220, inlinedAt: !7226)
!7595 = !DILocation(line: 4641, column: 15, scope: !7220, inlinedAt: !7226)
!7596 = !DILocation(line: 5085, column: 9, scope: !7587, inlinedAt: !7532)
!7597 = !DILocation(line: 5086, column: 51, scope: !7598, inlinedAt: !7532)
!7598 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 5085, column: 60)
!7599 = !DILocation(line: 5087, column: 53, scope: !7598, inlinedAt: !7532)
!7600 = !DILocation(line: 5087, column: 44, scope: !7598, inlinedAt: !7532)
!7601 = !DILocation(line: 5087, column: 51, scope: !7598, inlinedAt: !7532)
!7602 = !DILocation(line: 5088, column: 7, scope: !7603, inlinedAt: !7532)
!7603 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 5088, column: 7)
!7604 = !DILocation(line: 4635, column: 26, scope: !7605, inlinedAt: !7226)
!7605 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 4634, column: 20)
!7606 = !DILocation(line: 4638, column: 24, scope: !7607, inlinedAt: !7226)
!7607 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 4637, column: 18)
!7608 = !DILocation(line: 4639, column: 60, scope: !7607, inlinedAt: !7226)
!7609 = !DILocalVariable(name: "s", arg: 1, scope: !7610, file: !3, line: 5103, type: !80)
!7610 = distinct !DISubprogram(name: "lwip_socket_unregister_mld6_membership", scope: !3, file: !3, line: 5103, type: !7611, isLocal: true, isDefinition: true, scopeLine: 5104, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7613)
!7611 = !DISubroutineType(types: !7612)
!7612 = !{null, !80, !7, !703}
!7613 = !{!7609, !7614, !7615, !7616, !7617}
!7614 = !DILocalVariable(name: "if_idx", arg: 2, scope: !7610, file: !3, line: 5103, type: !7)
!7615 = !DILocalVariable(name: "multi_addr", arg: 3, scope: !7610, file: !3, line: 5103, type: !703)
!7616 = !DILocalVariable(name: "sock", scope: !7610, file: !3, line: 5105, type: !1165)
!7617 = !DILocalVariable(name: "i", scope: !7610, file: !3, line: 5106, type: !80)
!7618 = !DILocation(line: 5103, column: 44, scope: !7610, inlinedAt: !7619)
!7619 = distinct !DILocation(line: 4639, column: 13, scope: !7607, inlinedAt: !7226)
!7620 = !DILocation(line: 5103, column: 60, scope: !7610, inlinedAt: !7619)
!7621 = !DILocation(line: 5103, column: 86, scope: !7610, inlinedAt: !7619)
!7622 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !7623)
!7623 = distinct !DILocation(line: 5105, column: 28, scope: !7610, inlinedAt: !7619)
!7624 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !7625)
!7625 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !7623)
!7626 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !7627)
!7627 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !7625)
!7628 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !7629)
!7629 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !7627)
!7630 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !7629)
!7631 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !7629)
!7632 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !7627)
!7633 = !DILocation(line: 1460, column: 21, scope: !1572, inlinedAt: !7625)
!7634 = !DILocation(line: 1429, column: 21, scope: !1578, inlinedAt: !7627)
!7635 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !7625)
!7636 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !7625)
!7637 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !7625)
!7638 = !DILocation(line: 1479, column: 21, scope: !1556, inlinedAt: !7623)
!7639 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !7625)
!7640 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7641)
!7641 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7623)
!7642 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7641)
!7643 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7641)
!7644 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7623)
!7645 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7646)
!7646 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7623)
!7647 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7646)
!7648 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7646)
!7649 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !7623)
!7650 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !7651)
!7651 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !7623)
!7652 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !7651)
!7653 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !7651)
!7654 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !7651)
!7655 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !7623)
!7656 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7657)
!7657 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7658)
!7658 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !7623)
!7659 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7657)
!7660 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7657)
!7661 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7658)
!7662 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7658)
!7663 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7658)
!7664 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7658)
!7665 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7658)
!7666 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !7623)
!7667 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !7623)
!7668 = !DILocation(line: 5105, column: 21, scope: !7610, inlinedAt: !7619)
!7669 = !DILocation(line: 5108, column: 7, scope: !7610, inlinedAt: !7619)
!7670 = !DILocation(line: 5106, column: 7, scope: !7610, inlinedAt: !7619)
!7671 = !DILocation(line: 5112, column: 3, scope: !7672, inlinedAt: !7619)
!7672 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 5112, column: 3)
!7673 = !DILocation(line: 5113, column: 47, scope: !7674, inlinedAt: !7619)
!7674 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 5113, column: 9)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 5112, column: 53)
!7676 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 5112, column: 3)
!7677 = !DILocation(line: 5113, column: 54, scope: !7674, inlinedAt: !7619)
!7678 = !DILocation(line: 5113, column: 63, scope: !7674, inlinedAt: !7619)
!7679 = !DILocation(line: 5114, column: 47, scope: !7674, inlinedAt: !7619)
!7680 = !DILocation(line: 5114, column: 10, scope: !7674, inlinedAt: !7619)
!7681 = !DILocation(line: 5114, column: 54, scope: !7674, inlinedAt: !7619)
!7682 = !DILocation(line: 5114, column: 65, scope: !7674, inlinedAt: !7619)
!7683 = !DILocation(line: 5115, column: 9, scope: !7674, inlinedAt: !7619)
!7684 = !DILocation(line: 5113, column: 9, scope: !7675, inlinedAt: !7619)
!7685 = !DILocation(line: 5116, column: 51, scope: !7686, inlinedAt: !7619)
!7686 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 5115, column: 85)
!7687 = !DILocation(line: 5117, column: 51, scope: !7686, inlinedAt: !7619)
!7688 = !DILocation(line: 5118, column: 7, scope: !7689, inlinedAt: !7619)
!7689 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 5118, column: 7)
!7690 = !DILocation(line: 5119, column: 7, scope: !7686, inlinedAt: !7619)
!7691 = !DILocation(line: 5112, column: 49, scope: !7676, inlinedAt: !7619)
!7692 = !DILocation(line: 5112, column: 17, scope: !7676, inlinedAt: !7619)
!7693 = distinct !{!7693, !7694, !7695}
!7694 = !DILocation(line: 5112, column: 3, scope: !7672)
!7695 = !DILocation(line: 5121, column: 3, scope: !7672)
!7696 = !DILocation(line: 5123, column: 1, scope: !7610, inlinedAt: !7619)
!7697 = !DILocation(line: 0, scope: !7607, inlinedAt: !7226)
!7698 = !DILocation(line: 4641, column: 24, scope: !7699, inlinedAt: !7226)
!7699 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 4641, column: 15)
!7700 = !DILocation(line: 4644, column: 9, scope: !7221, inlinedAt: !7226)
!7701 = !DILocation(line: 0, scope: !7702, inlinedAt: !7226)
!7702 = distinct !DILexicalBlock(scope: !7699, file: !3, line: 4641, column: 35)
!7703 = !DILocation(line: 0, scope: !7704, inlinedAt: !7226)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 4305, column: 14)
!7705 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 4305, column: 7)
!7706 = !DILocation(line: 4738, column: 1, scope: !7144, inlinedAt: !7226)
!7707 = !DILocation(line: 4226, column: 3, scope: !7026)
!7708 = !DILocation(line: 4269, column: 3, scope: !7046)
!7709 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7710)
!7710 = distinct !DILocation(line: 4269, column: 3, scope: !7051)
!7711 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7710)
!7712 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7710)
!7713 = !DILocation(line: 4269, column: 3, scope: !7051)
!7714 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7715)
!7715 = distinct !DILocation(line: 4269, column: 3, scope: !7051)
!7716 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7715)
!7717 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7715)
!7718 = !DILocation(line: 4269, column: 3, scope: !7052)
!7719 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !7720)
!7720 = distinct !DILocation(line: 4269, column: 3, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 4269, column: 3)
!7722 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !7720)
!7723 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !7720)
!7724 = !DILocation(line: 4269, column: 3, scope: !7721)
!7725 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7726)
!7726 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7727)
!7727 = distinct !DILocation(line: 4269, column: 3, scope: !7048)
!7728 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7726)
!7729 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7726)
!7730 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7727)
!7731 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7727)
!7732 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7727)
!7733 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7727)
!7734 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7727)
!7735 = !DILocation(line: 4269, column: 3, scope: !7048)
!7736 = !{i32 -2144588047, i32 -2144588034, i32 -2144588009, i32 -2144587985, i32 -2144587960, i32 -2144587885, i32 -2144587860, i32 -2144587716, i32 -2144585493, i32 -2144585404, i32 -2144585283, i32 -2144585188, i32 -2144585087, i32 -2144585060, i32 -2144584977, i32 -2144584888, i32 -2144584767, i32 -2144584667, i32 -2144584561, i32 -2144584453, i32 -2144587428, i32 -2144587375, i32 -2144587344, i32 -2144587313, i32 -2144587292, i32 -2144587270, i32 -2144587221, i32 -2144587200, i32 -2144584370, i32 -2144584281, i32 -2144584160, i32 -2144584061, i32 -2144583955, i32 -2144583853, i32 -2144583820, i32 -2144583747, i32 -2144583679, i32 -2144586826, i32 -2144586773, i32 -2144586742, i32 -2144586711, i32 -2144586690, i32 -2144586668, i32 -2144586619, i32 -2144586598, i32 -2144583624, i32 -2144583535, i32 -2144583414, i32 -2144583315, i32 -2144583209, i32 -2144583107, i32 -2144583074, i32 -2144582991, i32 -2144582902, i32 -2144582781, i32 -2144582681, i32 -2144582655, i32 -2144582552, i32 -2144582526, i32 -2144586340, i32 -2144586273, i32 -2144586248, i32 -2144586184, i32 -2144586068, i32 -2144586043, i32 -2144586018}
!7737 = !DILocation(line: 4271, column: 10, scope: !7026)
!7738 = !DILocation(line: 4271, column: 3, scope: !7026)
!7739 = !DILocation(line: 0, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 4212, column: 14)
!7741 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 4212, column: 7)
!7742 = !DILocation(line: 4272, column: 1, scope: !7026)
!7743 = !DILocation(line: 5084, column: 17, scope: !7589, inlinedAt: !7532)
!7744 = distinct !{!7744, !7745, !7746}
!7745 = !DILocation(line: 5084, column: 3, scope: !7585)
!7746 = !DILocation(line: 5092, column: 3, scope: !7585)
!7747 = distinct !DISubprogram(name: "connect", scope: !3, file: !3, line: 864, type: !3684, isLocal: false, isDefinition: true, scopeLine: 865, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7748)
!7748 = !{!7749, !7750, !7751, !7752, !7753, !7754, !7760, !7761, !7770}
!7749 = !DILocalVariable(name: "s", arg: 1, scope: !7747, file: !3, line: 864, type: !80)
!7750 = !DILocalVariable(name: "name", arg: 2, scope: !7747, file: !3, line: 864, type: !228)
!7751 = !DILocalVariable(name: "namelen", arg: 3, scope: !7747, file: !3, line: 864, type: !1890)
!7752 = !DILocalVariable(name: "ret", scope: !7747, file: !3, line: 866, type: !80)
!7753 = !DILocalVariable(name: "file", scope: !7747, file: !3, line: 867, type: !1077)
!7754 = !DILocalVariable(name: "tid", scope: !7755, file: !3, line: 869, type: !170)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 869, column: 2)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 869, column: 2)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 869, column: 2)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 869, column: 2)
!7759 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 869, column: 2)
!7760 = !DILocalVariable(name: "_ret", scope: !7755, file: !3, line: 869, type: !135)
!7761 = !DILocalVariable(name: "tid", scope: !7762, file: !3, line: 874, type: !170)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 874, column: 3)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 874, column: 3)
!7764 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 874, column: 3)
!7765 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 874, column: 3)
!7766 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 874, column: 3)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 874, column: 3)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 870, column: 22)
!7769 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 870, column: 6)
!7770 = !DILocalVariable(name: "tid", scope: !7771, file: !3, line: 878, type: !170)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 878, column: 2)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 878, column: 2)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 878, column: 2)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 878, column: 2)
!7775 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 878, column: 2)
!7776 = !DILocation(line: 864, column: 17, scope: !7747)
!7777 = !DILocation(line: 864, column: 43, scope: !7747)
!7778 = !DILocation(line: 864, column: 59, scope: !7747)
!7779 = !DILocation(line: 866, column: 6, scope: !7747)
!7780 = !DILocation(line: 867, column: 2, scope: !7747)
!7781 = !DILocation(line: 867, column: 24, scope: !7747)
!7782 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7783)
!7783 = distinct !DILocation(line: 869, column: 2, scope: !7758)
!7784 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7783)
!7785 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7783)
!7786 = !DILocation(line: 869, column: 2, scope: !7758)
!7787 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7788)
!7788 = distinct !DILocation(line: 869, column: 2, scope: !7758)
!7789 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7788)
!7790 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7788)
!7791 = !DILocation(line: 869, column: 2, scope: !7759)
!7792 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !7793)
!7793 = distinct !DILocation(line: 869, column: 2, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 869, column: 2)
!7795 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !7793)
!7796 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !7793)
!7797 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !7793)
!7798 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !7793)
!7799 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !7793)
!7800 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !7793)
!7801 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !7793)
!7802 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !7793)
!7803 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !7793)
!7804 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !7793)
!7805 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !7793)
!7806 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !7793)
!7807 = !DILocation(line: 0, scope: !3086, inlinedAt: !7793)
!7808 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !7793)
!7809 = !DILocation(line: 869, column: 2, scope: !7794)
!7810 = !DILocation(line: 870, column: 6, scope: !7769)
!7811 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7812)
!7812 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7813)
!7813 = distinct !DILocation(line: 869, column: 2, scope: !7755)
!7814 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7812)
!7815 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7812)
!7816 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7813)
!7817 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7813)
!7818 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7813)
!7819 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7813)
!7820 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7813)
!7821 = !DILocation(line: 869, column: 2, scope: !7755)
!7822 = !{i32 -2145425717, i32 -2145425704, i32 -2145425679, i32 -2145425655, i32 -2145425630, i32 -2145425555, i32 -2145425530, i32 -2145425386, i32 -2145422254, i32 -2145422165, i32 -2145422044, i32 -2145421949, i32 -2145421848, i32 -2145421821, i32 -2145421738, i32 -2145421649, i32 -2145421528, i32 -2145421428, i32 -2145421322, i32 -2145421214, i32 -2145425098, i32 -2145425045, i32 -2145425014, i32 -2145424983, i32 -2145424962, i32 -2145424940, i32 -2145424891, i32 -2145424870, i32 -2145421131, i32 -2145421042, i32 -2145420921, i32 -2145420822, i32 -2145420716, i32 -2145420614, i32 -2145420581, i32 -2145420508, i32 -2145420440, i32 -2145424566, i32 -2145424507, i32 -2145424454, i32 -2145424423, i32 -2145424392, i32 -2145424371, i32 -2145424349, i32 -2145424300, i32 -2145424279, i32 -2145420387, i32 -2145420298, i32 -2145420177, i32 -2145420078, i32 -2145419972, i32 -2145419870, i32 -2145419837, i32 -2145419754, i32 -2145419665, i32 -2145419544, i32 -2145419444, i32 -2145419418, i32 -2145419315, i32 -2145419289, i32 -2145424021, i32 -2145423954, i32 -2145423929, i32 -2145423865, i32 -2145423783, i32 -2145423760, i32 -2145423735, i32 -2145423710}
!7823 = !DILocation(line: 869, column: 2, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 869, column: 2)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 869, column: 2)
!7826 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 869, column: 2)
!7827 = !{i32 -2145422522, i32 -2145422506}
!7828 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7829)
!7829 = distinct !DILocation(line: 874, column: 3, scope: !7765)
!7830 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7829)
!7831 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7829)
!7832 = !DILocation(line: 874, column: 3, scope: !7765)
!7833 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7834)
!7834 = distinct !DILocation(line: 874, column: 3, scope: !7765)
!7835 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7834)
!7836 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7834)
!7837 = !DILocation(line: 874, column: 3, scope: !7766)
!7838 = !DILocation(line: 874, column: 3, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 874, column: 3)
!7840 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !7841)
!7841 = distinct !DILocation(line: 874, column: 3, scope: !7839)
!7842 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !7841)
!7843 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !7841)
!7844 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !7841)
!7845 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !7841)
!7846 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7847)
!7847 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7848)
!7848 = distinct !DILocation(line: 874, column: 3, scope: !7762)
!7849 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7847)
!7850 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7847)
!7851 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7848)
!7852 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7848)
!7853 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7848)
!7854 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7848)
!7855 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7848)
!7856 = !DILocation(line: 874, column: 3, scope: !7762)
!7857 = !{i32 -2145417034, i32 -2145417021, i32 -2145416996, i32 -2145416972, i32 -2145416947, i32 -2145416872, i32 -2145416847, i32 -2145416703, i32 -2145414462, i32 -2145414373, i32 -2145414252, i32 -2145414157, i32 -2145414056, i32 -2145414029, i32 -2145413946, i32 -2145413857, i32 -2145413736, i32 -2145413636, i32 -2145413530, i32 -2145413422, i32 -2145416415, i32 -2145416362, i32 -2145416331, i32 -2145416300, i32 -2145416279, i32 -2145416257, i32 -2145416208, i32 -2145416187, i32 -2145413339, i32 -2145413250, i32 -2145413129, i32 -2145413030, i32 -2145412924, i32 -2145412822, i32 -2145412789, i32 -2145412716, i32 -2145412648, i32 -2145415813, i32 -2145415760, i32 -2145415729, i32 -2145415698, i32 -2145415677, i32 -2145415655, i32 -2145415606, i32 -2145415585, i32 -2145412593, i32 -2145412504, i32 -2145412383, i32 -2145412284, i32 -2145412178, i32 -2145412076, i32 -2145412043, i32 -2145411960, i32 -2145411871, i32 -2145411750, i32 -2145411650, i32 -2145411624, i32 -2145411521, i32 -2145411495, i32 -2145415327, i32 -2145415260, i32 -2145415235, i32 -2145415171, i32 -2145415055, i32 -2145415030, i32 -2145415005}
!7858 = !DILocation(line: 877, column: 27, scope: !7747)
!7859 = !DILocation(line: 877, column: 8, scope: !7747)
!7860 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7861)
!7861 = distinct !DILocation(line: 878, column: 2, scope: !7774)
!7862 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7861)
!7863 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7861)
!7864 = !DILocation(line: 878, column: 2, scope: !7774)
!7865 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7866)
!7866 = distinct !DILocation(line: 878, column: 2, scope: !7774)
!7867 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7866)
!7868 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7866)
!7869 = !DILocation(line: 878, column: 2, scope: !7775)
!7870 = !DILocation(line: 878, column: 2, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 878, column: 2)
!7872 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7873)
!7873 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7874)
!7874 = distinct !DILocation(line: 878, column: 2, scope: !7771)
!7875 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7873)
!7876 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7873)
!7877 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7874)
!7878 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7874)
!7879 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7874)
!7880 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7874)
!7881 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7874)
!7882 = !DILocation(line: 878, column: 2, scope: !7771)
!7883 = !{i32 -2145409531, i32 -2145409518, i32 -2145409493, i32 -2145409469, i32 -2145409444, i32 -2145409369, i32 -2145409344, i32 -2145409200, i32 -2145406973, i32 -2145406884, i32 -2145406763, i32 -2145406668, i32 -2145406567, i32 -2145406540, i32 -2145406457, i32 -2145406368, i32 -2145406247, i32 -2145406147, i32 -2145406041, i32 -2145405933, i32 -2145408912, i32 -2145408859, i32 -2145408828, i32 -2145408797, i32 -2145408776, i32 -2145408754, i32 -2145408705, i32 -2145408684, i32 -2145405850, i32 -2145405761, i32 -2145405640, i32 -2145405541, i32 -2145405435, i32 -2145405333, i32 -2145405300, i32 -2145405227, i32 -2145405159, i32 -2145408310, i32 -2145408257, i32 -2145408226, i32 -2145408195, i32 -2145408174, i32 -2145408152, i32 -2145408103, i32 -2145408082, i32 -2145405107, i32 -2145405018, i32 -2145404897, i32 -2145404798, i32 -2145404692, i32 -2145404590, i32 -2145404557, i32 -2145404474, i32 -2145404385, i32 -2145404264, i32 -2145404164, i32 -2145404138, i32 -2145404035, i32 -2145404009, i32 -2145407824, i32 -2145407757, i32 -2145407732, i32 -2145407668, i32 -2145407552, i32 -2145407527, i32 -2145407502}
!7884 = !DILocation(line: 0, scope: !7747)
!7885 = !DILocation(line: 881, column: 1, scope: !7747)
!7886 = !DILocation(line: 880, column: 2, scope: !7747)
!7887 = distinct !DISubprogram(name: "lwip_connect", scope: !3, file: !3, line: 1811, type: !3684, isLocal: false, isDefinition: true, scopeLine: 1812, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7888)
!7888 = !{!7889, !7890, !7891, !7892, !7893, !7894, !7898, !7904, !7907, !7908, !7913, !7919, !7923, !7929, !7931}
!7889 = !DILocalVariable(name: "s", arg: 1, scope: !7887, file: !3, line: 1811, type: !80)
!7890 = !DILocalVariable(name: "name", arg: 2, scope: !7887, file: !3, line: 1811, type: !228)
!7891 = !DILocalVariable(name: "namelen", arg: 3, scope: !7887, file: !3, line: 1811, type: !1890)
!7892 = !DILocalVariable(name: "sock", scope: !7887, file: !3, line: 1813, type: !1165)
!7893 = !DILocalVariable(name: "err", scope: !7887, file: !3, line: 1814, type: !1283)
!7894 = !DILocalVariable(name: "sockerr", scope: !7895, file: !3, line: 1823, type: !1007)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 1823, column: 5)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 1821, column: 52)
!7897 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 1821, column: 7)
!7898 = !DILocalVariable(name: "tid", scope: !7899, file: !3, line: 1823, type: !170)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 1823, column: 5)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 1823, column: 5)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 1823, column: 5)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 1823, column: 5)
!7903 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 1823, column: 5)
!7904 = !DILocalVariable(name: "remote_addr", scope: !7905, file: !3, line: 1833, type: !1183)
!7905 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1832, column: 10)
!7906 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 1829, column: 7)
!7907 = !DILocalVariable(name: "remote_port", scope: !7905, file: !3, line: 1834, type: !164)
!7908 = !DILocalVariable(name: "sockerr", scope: !7909, file: !3, line: 1837, type: !1007)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 1837, column: 5)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 1837, column: 5)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 1837, column: 5)
!7912 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 1837, column: 5)
!7913 = !DILocalVariable(name: "tid", scope: !7914, file: !3, line: 1837, type: !170)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 1837, column: 5)
!7915 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 1837, column: 5)
!7916 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 1837, column: 5)
!7917 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1837, column: 5)
!7918 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 1837, column: 5)
!7919 = !DILocalVariable(name: "sockerr", scope: !7920, file: !3, line: 1859, type: !1007)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 1859, column: 5)
!7921 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 1857, column: 22)
!7922 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 1857, column: 7)
!7923 = !DILocalVariable(name: "tid", scope: !7924, file: !3, line: 1859, type: !170)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 1859, column: 5)
!7925 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 1859, column: 5)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 1859, column: 5)
!7927 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 1859, column: 5)
!7928 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 1859, column: 5)
!7929 = !DILocalVariable(name: "sockerr", scope: !7930, file: !3, line: 1865, type: !1007)
!7930 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 1865, column: 3)
!7931 = !DILocalVariable(name: "tid", scope: !7932, file: !3, line: 1865, type: !170)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 1865, column: 3)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 1865, column: 3)
!7934 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 1865, column: 3)
!7935 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 1865, column: 3)
!7936 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 1865, column: 3)
!7937 = !DILocation(line: 1811, column: 18, scope: !7887)
!7938 = !DILocation(line: 1811, column: 44, scope: !7887)
!7939 = !DILocation(line: 1811, column: 60, scope: !7887)
!7940 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !7941)
!7941 = distinct !DILocation(line: 1816, column: 10, scope: !7887)
!7942 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !7943)
!7943 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !7941)
!7944 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !7945)
!7945 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !7943)
!7946 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !7947)
!7947 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !7945)
!7948 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !7947)
!7949 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !7947)
!7950 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !7947)
!7951 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !7945)
!7952 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !7943)
!7953 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !7947)
!7954 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !7943)
!7955 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !7943)
!7956 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !7943)
!7957 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !7943)
!7958 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7959)
!7959 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7941)
!7960 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7959)
!7961 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7959)
!7962 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7941)
!7963 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7964)
!7964 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !7941)
!7965 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7964)
!7966 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7964)
!7967 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !7941)
!7968 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !7969)
!7969 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !7941)
!7970 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !7969)
!7971 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !7969)
!7972 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !7969)
!7973 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !7941)
!7974 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7975)
!7975 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7976)
!7976 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !7941)
!7977 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7975)
!7978 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7975)
!7979 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7976)
!7980 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7976)
!7981 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7976)
!7982 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7976)
!7983 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7976)
!7984 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !7941)
!7985 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !7941)
!7986 = !DILocation(line: 1817, column: 7, scope: !7887)
!7987 = !DILocation(line: 1821, column: 8, scope: !7897)
!7988 = !DILocation(line: 1821, column: 7, scope: !7887)
!7989 = !DILocation(line: 1823, column: 5, scope: !7895)
!7990 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7991)
!7991 = distinct !DILocation(line: 1823, column: 5, scope: !7902)
!7992 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7991)
!7993 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7991)
!7994 = !DILocation(line: 1823, column: 5, scope: !7902)
!7995 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7996)
!7996 = distinct !DILocation(line: 1823, column: 5, scope: !7902)
!7997 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7996)
!7998 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7996)
!7999 = !DILocation(line: 1823, column: 5, scope: !7903)
!8000 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8001)
!8001 = distinct !DILocation(line: 1823, column: 5, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 1823, column: 5)
!8003 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8001)
!8004 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8001)
!8005 = !DILocation(line: 1823, column: 5, scope: !8002)
!8006 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8007)
!8007 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8008)
!8008 = distinct !DILocation(line: 1823, column: 5, scope: !7899)
!8009 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8007)
!8010 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8007)
!8011 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8008)
!8012 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8008)
!8013 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8008)
!8014 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8008)
!8015 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8008)
!8016 = !DILocation(line: 1823, column: 5, scope: !7899)
!8017 = !{i32 -2145104348, i32 -2145104335, i32 -2145104310, i32 -2145104286, i32 -2145104261, i32 -2145104186, i32 -2145104161, i32 -2145104017, i32 -2145101794, i32 -2145101705, i32 -2145101584, i32 -2145101489, i32 -2145101388, i32 -2145101361, i32 -2145101278, i32 -2145101189, i32 -2145101068, i32 -2145100968, i32 -2145100862, i32 -2145100754, i32 -2145103729, i32 -2145103676, i32 -2145103645, i32 -2145103614, i32 -2145103593, i32 -2145103571, i32 -2145103522, i32 -2145103501, i32 -2145100671, i32 -2145100582, i32 -2145100461, i32 -2145100362, i32 -2145100256, i32 -2145100154, i32 -2145100121, i32 -2145100048, i32 -2145099980, i32 -2145103127, i32 -2145103074, i32 -2145103043, i32 -2145103012, i32 -2145102991, i32 -2145102969, i32 -2145102920, i32 -2145102899, i32 -2145099925, i32 -2145099836, i32 -2145099715, i32 -2145099616, i32 -2145099510, i32 -2145099408, i32 -2145099375, i32 -2145099292, i32 -2145099203, i32 -2145099082, i32 -2145098982, i32 -2145098956, i32 -2145098853, i32 -2145098827, i32 -2145102641, i32 -2145102574, i32 -2145102549, i32 -2145102485, i32 -2145102369, i32 -2145102344, i32 -2145102319}
!8018 = !DILocation(line: 1831, column: 11, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1829, column: 37)
!8020 = !DILocation(line: 1814, column: 9, scope: !7887)
!8021 = !DILocation(line: 1832, column: 3, scope: !8019)
!8022 = !DILocation(line: 1833, column: 5, scope: !7905)
!8023 = !DILocation(line: 1837, column: 5, scope: !7911)
!8024 = !DILocation(line: 1837, column: 5, scope: !7912)
!8025 = !DILocation(line: 1837, column: 5, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 1837, column: 5)
!8027 = !DILocation(line: 1837, column: 5, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 1837, column: 5)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 1837, column: 5)
!8030 = distinct !DILexicalBlock(scope: !8026, file: !3, line: 1837, column: 5)
!8031 = !DILocation(line: 1833, column: 15, scope: !7905)
!8032 = !DILocation(line: 1304, column: 48, scope: !3971, inlinedAt: !8033)
!8033 = distinct !DILocation(line: 1841, column: 5, scope: !7905)
!8034 = !DILocation(line: 1304, column: 69, scope: !3971, inlinedAt: !8033)
!8035 = !DILocation(line: 1306, column: 29, scope: !3983, inlinedAt: !8033)
!8036 = !DILocation(line: 1306, column: 7, scope: !3971, inlinedAt: !8033)
!8037 = !DILocation(line: 1307, column: 5, scope: !3986, inlinedAt: !8033)
!8038 = !DILocation(line: 1307, column: 5, scope: !3990, inlinedAt: !8033)
!8039 = !DILocation(line: 1307, column: 5, scope: !3992, inlinedAt: !8033)
!8040 = !DILocation(line: 1310, column: 5, scope: !3994, inlinedAt: !8033)
!8041 = !DILocation(line: 1311, column: 13, scope: !3995, inlinedAt: !8033)
!8042 = !DILocation(line: 1311, column: 18, scope: !3995, inlinedAt: !8033)
!8043 = !DILocation(line: 1313, column: 1, scope: !3971, inlinedAt: !8033)
!8044 = !DILocation(line: 1848, column: 35, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 1848, column: 9)
!8046 = !DILocation(line: 1307, column: 5, scope: !3987, inlinedAt: !8033)
!8047 = !DILocation(line: 1308, column: 13, scope: !3988, inlinedAt: !8033)
!8048 = !DILocation(line: 1308, column: 18, scope: !3988, inlinedAt: !8033)
!8049 = !DILocation(line: 1848, column: 38, scope: !8045)
!8050 = !DILocation(line: 1849, column: 7, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 1848, column: 89)
!8052 = !DILocation(line: 1850, column: 7, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 1850, column: 7)
!8054 = !DILocation(line: 1851, column: 5, scope: !8051)
!8055 = !DILocation(line: 1854, column: 33, scope: !7905)
!8056 = !DILocation(line: 1834, column: 11, scope: !7905)
!8057 = !DILocation(line: 1854, column: 11, scope: !7905)
!8058 = !DILocation(line: 1855, column: 3, scope: !7906)
!8059 = !DILocation(line: 0, scope: !7905)
!8060 = !DILocation(line: 1857, column: 11, scope: !7922)
!8061 = !DILocation(line: 1857, column: 7, scope: !7887)
!8062 = !DILocation(line: 1859, column: 5, scope: !7920)
!8063 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8064)
!8064 = distinct !DILocation(line: 1859, column: 5, scope: !7927)
!8065 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8064)
!8066 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8064)
!8067 = !DILocation(line: 1859, column: 5, scope: !7927)
!8068 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8069)
!8069 = distinct !DILocation(line: 1859, column: 5, scope: !7927)
!8070 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8069)
!8071 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8069)
!8072 = !DILocation(line: 1859, column: 5, scope: !7928)
!8073 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8074)
!8074 = distinct !DILocation(line: 1859, column: 5, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 1859, column: 5)
!8076 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8074)
!8077 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8074)
!8078 = !DILocation(line: 1859, column: 5, scope: !8075)
!8079 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8080)
!8080 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8081)
!8081 = distinct !DILocation(line: 1859, column: 5, scope: !7924)
!8082 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8080)
!8083 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8080)
!8084 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8081)
!8085 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8081)
!8086 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8081)
!8087 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8081)
!8088 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8081)
!8089 = !DILocation(line: 1859, column: 5, scope: !7924)
!8090 = !{i32 -2145079427, i32 -2145079414, i32 -2145079389, i32 -2145079365, i32 -2145079340, i32 -2145079265, i32 -2145079240, i32 -2145079096, i32 -2145076873, i32 -2145076784, i32 -2145076663, i32 -2145076568, i32 -2145076467, i32 -2145076440, i32 -2145076357, i32 -2145076268, i32 -2145076147, i32 -2145076047, i32 -2145075941, i32 -2145075833, i32 -2145078808, i32 -2145078755, i32 -2145078724, i32 -2145078693, i32 -2145078672, i32 -2145078650, i32 -2145078601, i32 -2145078580, i32 -2145075750, i32 -2145075661, i32 -2145075540, i32 -2145075441, i32 -2145075335, i32 -2145075233, i32 -2145075200, i32 -2145075127, i32 -2145075059, i32 -2145078206, i32 -2145078153, i32 -2145078122, i32 -2145078091, i32 -2145078070, i32 -2145078048, i32 -2145077999, i32 -2145077978, i32 -2145075004, i32 -2145074915, i32 -2145074794, i32 -2145074695, i32 -2145074589, i32 -2145074487, i32 -2145074454, i32 -2145074371, i32 -2145074282, i32 -2145074161, i32 -2145074061, i32 -2145074035, i32 -2145073932, i32 -2145073906, i32 -2145077720, i32 -2145077653, i32 -2145077628, i32 -2145077564, i32 -2145077448, i32 -2145077423, i32 -2145077398}
!8091 = !DILocation(line: 1865, column: 3, scope: !7930)
!8092 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8093)
!8093 = distinct !DILocation(line: 1865, column: 3, scope: !7935)
!8094 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8093)
!8095 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8093)
!8096 = !DILocation(line: 1865, column: 3, scope: !7935)
!8097 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8098)
!8098 = distinct !DILocation(line: 1865, column: 3, scope: !7935)
!8099 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8098)
!8100 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8098)
!8101 = !DILocation(line: 1865, column: 3, scope: !7936)
!8102 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !8103)
!8103 = distinct !DILocation(line: 1865, column: 3, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 1865, column: 3)
!8105 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8103)
!8106 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8103)
!8107 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8103)
!8108 = !DILocation(line: 1865, column: 3, scope: !8104)
!8109 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8110)
!8110 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8111)
!8111 = distinct !DILocation(line: 1865, column: 3, scope: !7932)
!8112 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8110)
!8113 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8110)
!8114 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8111)
!8115 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8111)
!8116 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8111)
!8117 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8111)
!8118 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8111)
!8119 = !DILocation(line: 1865, column: 3, scope: !7932)
!8120 = !{i32 -2145071870, i32 -2145071857, i32 -2145071832, i32 -2145071808, i32 -2145071783, i32 -2145071708, i32 -2145071683, i32 -2145071539, i32 -2145069316, i32 -2145069227, i32 -2145069106, i32 -2145069011, i32 -2145068910, i32 -2145068883, i32 -2145068800, i32 -2145068711, i32 -2145068590, i32 -2145068490, i32 -2145068384, i32 -2145068276, i32 -2145071251, i32 -2145071198, i32 -2145071167, i32 -2145071136, i32 -2145071115, i32 -2145071093, i32 -2145071044, i32 -2145071023, i32 -2145068193, i32 -2145068104, i32 -2145067983, i32 -2145067884, i32 -2145067778, i32 -2145067676, i32 -2145067643, i32 -2145067570, i32 -2145067502, i32 -2145070649, i32 -2145070596, i32 -2145070565, i32 -2145070534, i32 -2145070513, i32 -2145070491, i32 -2145070442, i32 -2145070421, i32 -2145067447, i32 -2145067358, i32 -2145067237, i32 -2145067138, i32 -2145067032, i32 -2145066930, i32 -2145066897, i32 -2145066814, i32 -2145066725, i32 -2145066604, i32 -2145066504, i32 -2145066478, i32 -2145066375, i32 -2145066349, i32 -2145070163, i32 -2145070096, i32 -2145070071, i32 -2145070007, i32 -2145069891, i32 -2145069866, i32 -2145069841}
!8121 = !DILocation(line: 1868, column: 1, scope: !7887)
!8122 = distinct !DISubprogram(name: "listen", scope: !3, file: !3, line: 883, type: !5679, isLocal: false, isDefinition: true, scopeLine: 884, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8123)
!8123 = !{!8124, !8125, !8126, !8127, !8128, !8134, !8135, !8144}
!8124 = !DILocalVariable(name: "s", arg: 1, scope: !8122, file: !3, line: 883, type: !80)
!8125 = !DILocalVariable(name: "backlog", arg: 2, scope: !8122, file: !3, line: 883, type: !80)
!8126 = !DILocalVariable(name: "ret", scope: !8122, file: !3, line: 885, type: !80)
!8127 = !DILocalVariable(name: "file", scope: !8122, file: !3, line: 886, type: !1077)
!8128 = !DILocalVariable(name: "tid", scope: !8129, file: !3, line: 888, type: !170)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 888, column: 2)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 888, column: 2)
!8131 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 888, column: 2)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 888, column: 2)
!8133 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 888, column: 2)
!8134 = !DILocalVariable(name: "_ret", scope: !8129, file: !3, line: 888, type: !135)
!8135 = !DILocalVariable(name: "tid", scope: !8136, file: !3, line: 893, type: !170)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 893, column: 3)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 893, column: 3)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 893, column: 3)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 893, column: 3)
!8140 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 893, column: 3)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 893, column: 3)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 889, column: 22)
!8143 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 889, column: 6)
!8144 = !DILocalVariable(name: "tid", scope: !8145, file: !3, line: 897, type: !170)
!8145 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 897, column: 2)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 897, column: 2)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 897, column: 2)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 897, column: 2)
!8149 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 897, column: 2)
!8150 = !DILocation(line: 883, column: 16, scope: !8122)
!8151 = !DILocation(line: 883, column: 23, scope: !8122)
!8152 = !DILocation(line: 885, column: 6, scope: !8122)
!8153 = !DILocation(line: 886, column: 2, scope: !8122)
!8154 = !DILocation(line: 886, column: 24, scope: !8122)
!8155 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8156)
!8156 = distinct !DILocation(line: 888, column: 2, scope: !8132)
!8157 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8156)
!8158 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8156)
!8159 = !DILocation(line: 888, column: 2, scope: !8132)
!8160 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8161)
!8161 = distinct !DILocation(line: 888, column: 2, scope: !8132)
!8162 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8161)
!8163 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8161)
!8164 = !DILocation(line: 888, column: 2, scope: !8133)
!8165 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !8166)
!8166 = distinct !DILocation(line: 888, column: 2, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 888, column: 2)
!8168 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !8166)
!8169 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !8166)
!8170 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !8166)
!8171 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !8166)
!8172 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !8166)
!8173 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !8166)
!8174 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !8166)
!8175 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !8166)
!8176 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !8166)
!8177 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !8166)
!8178 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !8166)
!8179 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !8166)
!8180 = !DILocation(line: 0, scope: !3086, inlinedAt: !8166)
!8181 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !8166)
!8182 = !DILocation(line: 888, column: 2, scope: !8167)
!8183 = !DILocation(line: 889, column: 6, scope: !8143)
!8184 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8185)
!8185 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8186)
!8186 = distinct !DILocation(line: 888, column: 2, scope: !8129)
!8187 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8185)
!8188 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8185)
!8189 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8186)
!8190 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8186)
!8191 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8186)
!8192 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8186)
!8193 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8186)
!8194 = !DILocation(line: 888, column: 2, scope: !8129)
!8195 = !{i32 -2145402026, i32 -2145402013, i32 -2145401988, i32 -2145401964, i32 -2145401939, i32 -2145401864, i32 -2145401839, i32 -2145401695, i32 -2145398563, i32 -2145398474, i32 -2145398353, i32 -2145398258, i32 -2145398157, i32 -2145398130, i32 -2145398047, i32 -2145397958, i32 -2145397837, i32 -2145397737, i32 -2145397631, i32 -2145397523, i32 -2145401407, i32 -2145401354, i32 -2145401323, i32 -2145401292, i32 -2145401271, i32 -2145401249, i32 -2145401200, i32 -2145401179, i32 -2145397440, i32 -2145397351, i32 -2145397230, i32 -2145397131, i32 -2145397025, i32 -2145396923, i32 -2145396890, i32 -2145396817, i32 -2145396749, i32 -2145400875, i32 -2145400816, i32 -2145400763, i32 -2145400732, i32 -2145400701, i32 -2145400680, i32 -2145400658, i32 -2145400609, i32 -2145400588, i32 -2145396696, i32 -2145396607, i32 -2145396486, i32 -2145396387, i32 -2145396281, i32 -2145396179, i32 -2145396146, i32 -2145396063, i32 -2145395974, i32 -2145395853, i32 -2145395753, i32 -2145395727, i32 -2145395624, i32 -2145395598, i32 -2145400330, i32 -2145400263, i32 -2145400238, i32 -2145400174, i32 -2145400092, i32 -2145400069, i32 -2145400044, i32 -2145400019}
!8196 = !DILocation(line: 888, column: 2, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 888, column: 2)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 888, column: 2)
!8199 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 888, column: 2)
!8200 = !{i32 -2145398831, i32 -2145398815}
!8201 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8202)
!8202 = distinct !DILocation(line: 893, column: 3, scope: !8139)
!8203 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8202)
!8204 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8202)
!8205 = !DILocation(line: 893, column: 3, scope: !8139)
!8206 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8207)
!8207 = distinct !DILocation(line: 893, column: 3, scope: !8139)
!8208 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8207)
!8209 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8207)
!8210 = !DILocation(line: 893, column: 3, scope: !8140)
!8211 = !DILocation(line: 893, column: 3, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 893, column: 3)
!8213 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !8214)
!8214 = distinct !DILocation(line: 893, column: 3, scope: !8212)
!8215 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !8214)
!8216 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8214)
!8217 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8214)
!8218 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8214)
!8219 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8220)
!8220 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8221)
!8221 = distinct !DILocation(line: 893, column: 3, scope: !8136)
!8222 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8220)
!8223 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8220)
!8224 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8221)
!8225 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8221)
!8226 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8221)
!8227 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8221)
!8228 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8221)
!8229 = !DILocation(line: 893, column: 3, scope: !8136)
!8230 = !{i32 -2145393343, i32 -2145393330, i32 -2145393305, i32 -2145393281, i32 -2145393256, i32 -2145393181, i32 -2145393156, i32 -2145393012, i32 -2145390771, i32 -2145390682, i32 -2145390561, i32 -2145390466, i32 -2145390365, i32 -2145390338, i32 -2145390255, i32 -2145390166, i32 -2145390045, i32 -2145389945, i32 -2145389839, i32 -2145389731, i32 -2145392724, i32 -2145392671, i32 -2145392640, i32 -2145392609, i32 -2145392588, i32 -2145392566, i32 -2145392517, i32 -2145392496, i32 -2145389648, i32 -2145389559, i32 -2145389438, i32 -2145389339, i32 -2145389233, i32 -2145389131, i32 -2145389098, i32 -2145389025, i32 -2145388957, i32 -2145392122, i32 -2145392069, i32 -2145392038, i32 -2145392007, i32 -2145391986, i32 -2145391964, i32 -2145391915, i32 -2145391894, i32 -2145388902, i32 -2145388813, i32 -2145388692, i32 -2145388593, i32 -2145388487, i32 -2145388385, i32 -2145388352, i32 -2145388269, i32 -2145388180, i32 -2145388059, i32 -2145387959, i32 -2145387933, i32 -2145387830, i32 -2145387804, i32 -2145391636, i32 -2145391569, i32 -2145391544, i32 -2145391480, i32 -2145391364, i32 -2145391339, i32 -2145391314}
!8231 = !DILocation(line: 896, column: 26, scope: !8122)
!8232 = !DILocation(line: 896, column: 8, scope: !8122)
!8233 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8234)
!8234 = distinct !DILocation(line: 897, column: 2, scope: !8148)
!8235 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8234)
!8236 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8234)
!8237 = !DILocation(line: 897, column: 2, scope: !8148)
!8238 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8239)
!8239 = distinct !DILocation(line: 897, column: 2, scope: !8148)
!8240 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8239)
!8241 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8239)
!8242 = !DILocation(line: 897, column: 2, scope: !8149)
!8243 = !DILocation(line: 897, column: 2, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 897, column: 2)
!8245 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8246)
!8246 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8247)
!8247 = distinct !DILocation(line: 897, column: 2, scope: !8145)
!8248 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8246)
!8249 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8246)
!8250 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8247)
!8251 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8247)
!8252 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8247)
!8253 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8247)
!8254 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8247)
!8255 = !DILocation(line: 897, column: 2, scope: !8145)
!8256 = !{i32 -2145385840, i32 -2145385827, i32 -2145385802, i32 -2145385778, i32 -2145385753, i32 -2145385678, i32 -2145385653, i32 -2145385509, i32 -2145383282, i32 -2145383193, i32 -2145383072, i32 -2145382977, i32 -2145382876, i32 -2145382849, i32 -2145382766, i32 -2145382677, i32 -2145382556, i32 -2145382456, i32 -2145382350, i32 -2145382242, i32 -2145385221, i32 -2145385168, i32 -2145385137, i32 -2145385106, i32 -2145385085, i32 -2145385063, i32 -2145385014, i32 -2145384993, i32 -2145382159, i32 -2145382070, i32 -2145381949, i32 -2145381850, i32 -2145381744, i32 -2145381642, i32 -2145381609, i32 -2145381536, i32 -2145381468, i32 -2145384619, i32 -2145384566, i32 -2145384535, i32 -2145384504, i32 -2145384483, i32 -2145384461, i32 -2145384412, i32 -2145384391, i32 -2145381416, i32 -2145381327, i32 -2145381206, i32 -2145381107, i32 -2145381001, i32 -2145380899, i32 -2145380866, i32 -2145380783, i32 -2145380694, i32 -2145380573, i32 -2145380473, i32 -2145380447, i32 -2145380344, i32 -2145380318, i32 -2145384133, i32 -2145384066, i32 -2145384041, i32 -2145383977, i32 -2145383861, i32 -2145383836, i32 -2145383811}
!8257 = !DILocation(line: 0, scope: !8122)
!8258 = !DILocation(line: 900, column: 1, scope: !8122)
!8259 = !DILocation(line: 899, column: 2, scope: !8122)
!8260 = distinct !DISubprogram(name: "lwip_listen", scope: !3, file: !3, line: 1879, type: !5679, isLocal: false, isDefinition: true, scopeLine: 1880, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8261)
!8261 = !{!8262, !8263, !8264, !8265, !8266, !8272, !8278, !8281, !8287, !8289}
!8262 = !DILocalVariable(name: "s", arg: 1, scope: !8260, file: !3, line: 1879, type: !80)
!8263 = !DILocalVariable(name: "backlog", arg: 2, scope: !8260, file: !3, line: 1879, type: !80)
!8264 = !DILocalVariable(name: "sock", scope: !8260, file: !3, line: 1881, type: !1165)
!8265 = !DILocalVariable(name: "err", scope: !8260, file: !3, line: 1882, type: !1283)
!8266 = !DILocalVariable(name: "sockerr", scope: !8267, file: !3, line: 1899, type: !1007)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 1899, column: 7)
!8268 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 1898, column: 69)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 1898, column: 9)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 1896, column: 22)
!8271 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 1896, column: 7)
!8272 = !DILocalVariable(name: "tid", scope: !8273, file: !3, line: 1899, type: !170)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1899, column: 7)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 1899, column: 7)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 1899, column: 7)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 1899, column: 7)
!8277 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 1899, column: 7)
!8278 = !DILocalVariable(name: "sockerr", scope: !8279, file: !3, line: 1901, type: !1007)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 1901, column: 7)
!8280 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 1900, column: 12)
!8281 = !DILocalVariable(name: "tid", scope: !8282, file: !3, line: 1901, type: !170)
!8282 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 1901, column: 7)
!8283 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 1901, column: 7)
!8284 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 1901, column: 7)
!8285 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 1901, column: 7)
!8286 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 1901, column: 7)
!8287 = !DILocalVariable(name: "sockerr", scope: !8288, file: !3, line: 1907, type: !1007)
!8288 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 1907, column: 3)
!8289 = !DILocalVariable(name: "tid", scope: !8290, file: !3, line: 1907, type: !170)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 1907, column: 3)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 1907, column: 3)
!8292 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 1907, column: 3)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 1907, column: 3)
!8294 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 1907, column: 3)
!8295 = !DILocation(line: 1879, column: 17, scope: !8260)
!8296 = !DILocation(line: 1879, column: 24, scope: !8260)
!8297 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !8298)
!8298 = distinct !DILocation(line: 1886, column: 10, scope: !8260)
!8299 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !8300)
!8300 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !8298)
!8301 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !8302)
!8302 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !8300)
!8303 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !8304)
!8304 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !8302)
!8305 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !8304)
!8306 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !8304)
!8307 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !8304)
!8308 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !8302)
!8309 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !8300)
!8310 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !8304)
!8311 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !8300)
!8312 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !8300)
!8313 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !8300)
!8314 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !8300)
!8315 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8316)
!8316 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !8298)
!8317 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8316)
!8318 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8316)
!8319 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !8298)
!8320 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8321)
!8321 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !8298)
!8322 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8321)
!8323 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8321)
!8324 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !8298)
!8325 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !8326)
!8326 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !8298)
!8327 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8326)
!8328 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8326)
!8329 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8326)
!8330 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !8298)
!8331 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8332)
!8332 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8333)
!8333 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !8298)
!8334 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8332)
!8335 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8332)
!8336 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8333)
!8337 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8333)
!8338 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8333)
!8339 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8333)
!8340 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8333)
!8341 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !8298)
!8342 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !8298)
!8343 = !DILocation(line: 1887, column: 7, scope: !8260)
!8344 = !DILocation(line: 1892, column: 13, scope: !8260)
!8345 = !DILocation(line: 1894, column: 9, scope: !8260)
!8346 = !DILocation(line: 1882, column: 9, scope: !8260)
!8347 = !DILocation(line: 1896, column: 11, scope: !8271)
!8348 = !DILocation(line: 1896, column: 7, scope: !8260)
!8349 = !DILocation(line: 1898, column: 9, scope: !8269)
!8350 = !DILocation(line: 1898, column: 53, scope: !8269)
!8351 = !DILocation(line: 1898, column: 9, scope: !8270)
!8352 = !DILocation(line: 1899, column: 7, scope: !8267)
!8353 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8354)
!8354 = distinct !DILocation(line: 1899, column: 7, scope: !8276)
!8355 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8354)
!8356 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8354)
!8357 = !DILocation(line: 1899, column: 7, scope: !8276)
!8358 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8359)
!8359 = distinct !DILocation(line: 1899, column: 7, scope: !8276)
!8360 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8359)
!8361 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8359)
!8362 = !DILocation(line: 1899, column: 7, scope: !8277)
!8363 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !8364)
!8364 = distinct !DILocation(line: 1899, column: 7, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 1899, column: 7)
!8366 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8364)
!8367 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8364)
!8368 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8364)
!8369 = !DILocation(line: 1899, column: 7, scope: !8365)
!8370 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8371)
!8371 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8372)
!8372 = distinct !DILocation(line: 1899, column: 7, scope: !8273)
!8373 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8371)
!8374 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8371)
!8375 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8372)
!8376 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8372)
!8377 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8372)
!8378 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8372)
!8379 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8372)
!8380 = !DILocation(line: 1899, column: 7, scope: !8273)
!8381 = !{i32 -2145064079, i32 -2145064066, i32 -2145064041, i32 -2145064017, i32 -2145063992, i32 -2145063917, i32 -2145063892, i32 -2145063748, i32 -2145061525, i32 -2145061436, i32 -2145061315, i32 -2145061220, i32 -2145061119, i32 -2145061092, i32 -2145061009, i32 -2145060920, i32 -2145060799, i32 -2145060699, i32 -2145060593, i32 -2145060485, i32 -2145063460, i32 -2145063407, i32 -2145063376, i32 -2145063345, i32 -2145063324, i32 -2145063302, i32 -2145063253, i32 -2145063232, i32 -2145060402, i32 -2145060313, i32 -2145060192, i32 -2145060093, i32 -2145059987, i32 -2145059885, i32 -2145059852, i32 -2145059779, i32 -2145059711, i32 -2145062858, i32 -2145062805, i32 -2145062774, i32 -2145062743, i32 -2145062722, i32 -2145062700, i32 -2145062651, i32 -2145062630, i32 -2145059656, i32 -2145059567, i32 -2145059446, i32 -2145059347, i32 -2145059241, i32 -2145059139, i32 -2145059106, i32 -2145059023, i32 -2145058934, i32 -2145058813, i32 -2145058713, i32 -2145058687, i32 -2145058584, i32 -2145058558, i32 -2145062372, i32 -2145062305, i32 -2145062280, i32 -2145062216, i32 -2145062100, i32 -2145062075, i32 -2145062050}
!8382 = !DILocation(line: 1901, column: 7, scope: !8279)
!8383 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8384)
!8384 = distinct !DILocation(line: 1901, column: 7, scope: !8285)
!8385 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8384)
!8386 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8384)
!8387 = !DILocation(line: 1901, column: 7, scope: !8285)
!8388 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8389)
!8389 = distinct !DILocation(line: 1901, column: 7, scope: !8285)
!8390 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8389)
!8391 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8389)
!8392 = !DILocation(line: 1901, column: 7, scope: !8286)
!8393 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8394)
!8394 = distinct !DILocation(line: 1901, column: 7, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 1901, column: 7)
!8396 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8394)
!8397 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8394)
!8398 = !DILocation(line: 1901, column: 7, scope: !8395)
!8399 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8400)
!8400 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8401)
!8401 = distinct !DILocation(line: 1901, column: 7, scope: !8282)
!8402 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8400)
!8403 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8400)
!8404 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8401)
!8405 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8401)
!8406 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8401)
!8407 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8401)
!8408 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8401)
!8409 = !DILocation(line: 1901, column: 7, scope: !8282)
!8410 = !{i32 -2145056506, i32 -2145056493, i32 -2145056468, i32 -2145056444, i32 -2145056419, i32 -2145056344, i32 -2145056319, i32 -2145056175, i32 -2145053952, i32 -2145053863, i32 -2145053742, i32 -2145053647, i32 -2145053546, i32 -2145053519, i32 -2145053436, i32 -2145053347, i32 -2145053226, i32 -2145053126, i32 -2145053020, i32 -2145052912, i32 -2145055887, i32 -2145055834, i32 -2145055803, i32 -2145055772, i32 -2145055751, i32 -2145055729, i32 -2145055680, i32 -2145055659, i32 -2145052829, i32 -2145052740, i32 -2145052619, i32 -2145052520, i32 -2145052414, i32 -2145052312, i32 -2145052279, i32 -2145052206, i32 -2145052138, i32 -2145055285, i32 -2145055232, i32 -2145055201, i32 -2145055170, i32 -2145055149, i32 -2145055127, i32 -2145055078, i32 -2145055057, i32 -2145052083, i32 -2145051994, i32 -2145051873, i32 -2145051774, i32 -2145051668, i32 -2145051566, i32 -2145051533, i32 -2145051450, i32 -2145051361, i32 -2145051240, i32 -2145051140, i32 -2145051114, i32 -2145051011, i32 -2145050985, i32 -2145054799, i32 -2145054732, i32 -2145054707, i32 -2145054643, i32 -2145054527, i32 -2145054502, i32 -2145054477}
!8411 = !DILocation(line: 1907, column: 3, scope: !8288)
!8412 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8413)
!8413 = distinct !DILocation(line: 1907, column: 3, scope: !8293)
!8414 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8413)
!8415 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8413)
!8416 = !DILocation(line: 1907, column: 3, scope: !8293)
!8417 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8418)
!8418 = distinct !DILocation(line: 1907, column: 3, scope: !8293)
!8419 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8418)
!8420 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8418)
!8421 = !DILocation(line: 1907, column: 3, scope: !8294)
!8422 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !8423)
!8423 = distinct !DILocation(line: 1907, column: 3, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 1907, column: 3)
!8425 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8423)
!8426 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8423)
!8427 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8423)
!8428 = !DILocation(line: 1907, column: 3, scope: !8424)
!8429 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8430)
!8430 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8431)
!8431 = distinct !DILocation(line: 1907, column: 3, scope: !8290)
!8432 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8430)
!8433 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8430)
!8434 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8431)
!8435 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8431)
!8436 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8431)
!8437 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8431)
!8438 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8431)
!8439 = !DILocation(line: 1907, column: 3, scope: !8290)
!8440 = !{i32 -2145048949, i32 -2145048936, i32 -2145048911, i32 -2145048887, i32 -2145048862, i32 -2145048787, i32 -2145048762, i32 -2145048618, i32 -2145046395, i32 -2145046306, i32 -2145046185, i32 -2145046090, i32 -2145045989, i32 -2145045962, i32 -2145045879, i32 -2145045790, i32 -2145045669, i32 -2145045569, i32 -2145045463, i32 -2145045355, i32 -2145048330, i32 -2145048277, i32 -2145048246, i32 -2145048215, i32 -2145048194, i32 -2145048172, i32 -2145048123, i32 -2145048102, i32 -2145045272, i32 -2145045183, i32 -2145045062, i32 -2145044963, i32 -2145044857, i32 -2145044755, i32 -2145044722, i32 -2145044649, i32 -2145044581, i32 -2145047728, i32 -2145047675, i32 -2145047644, i32 -2145047613, i32 -2145047592, i32 -2145047570, i32 -2145047521, i32 -2145047500, i32 -2145044526, i32 -2145044437, i32 -2145044316, i32 -2145044217, i32 -2145044111, i32 -2145044009, i32 -2145043976, i32 -2145043893, i32 -2145043804, i32 -2145043683, i32 -2145043583, i32 -2145043557, i32 -2145043454, i32 -2145043428, i32 -2145047242, i32 -2145047175, i32 -2145047150, i32 -2145047086, i32 -2145046970, i32 -2145046945, i32 -2145046920}
!8441 = !DILocation(line: 0, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 1887, column: 14)
!8443 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 1887, column: 7)
!8444 = !DILocation(line: 1910, column: 1, scope: !8260)
!8445 = distinct !DISubprogram(name: "recv", scope: !3, file: !3, line: 902, type: !8446, isLocal: false, isDefinition: true, scopeLine: 903, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8448)
!8446 = !DISubroutineType(types: !8447)
!8447 = !{!80, !80, !143, !216, !80}
!8448 = !{!8449, !8450, !8451, !8452, !8453, !8454, !8455, !8461, !8462, !8471}
!8449 = !DILocalVariable(name: "s", arg: 1, scope: !8445, file: !3, line: 902, type: !80)
!8450 = !DILocalVariable(name: "mem", arg: 2, scope: !8445, file: !3, line: 902, type: !143)
!8451 = !DILocalVariable(name: "len", arg: 3, scope: !8445, file: !3, line: 902, type: !216)
!8452 = !DILocalVariable(name: "flags", arg: 4, scope: !8445, file: !3, line: 902, type: !80)
!8453 = !DILocalVariable(name: "ret", scope: !8445, file: !3, line: 904, type: !80)
!8454 = !DILocalVariable(name: "file", scope: !8445, file: !3, line: 905, type: !1077)
!8455 = !DILocalVariable(name: "tid", scope: !8456, file: !3, line: 907, type: !170)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 907, column: 2)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 907, column: 2)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 907, column: 2)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 907, column: 2)
!8460 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 907, column: 2)
!8461 = !DILocalVariable(name: "_ret", scope: !8456, file: !3, line: 907, type: !135)
!8462 = !DILocalVariable(name: "tid", scope: !8463, file: !3, line: 912, type: !170)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 912, column: 3)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 912, column: 3)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 912, column: 3)
!8466 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 912, column: 3)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 912, column: 3)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 912, column: 3)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 908, column: 22)
!8470 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 908, column: 6)
!8471 = !DILocalVariable(name: "tid", scope: !8472, file: !3, line: 916, type: !170)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 916, column: 2)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 916, column: 2)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 916, column: 2)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 916, column: 2)
!8476 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 916, column: 2)
!8477 = !DILocation(line: 902, column: 14, scope: !8445)
!8478 = !DILocation(line: 902, column: 23, scope: !8445)
!8479 = !DILocation(line: 902, column: 35, scope: !8445)
!8480 = !DILocation(line: 902, column: 44, scope: !8445)
!8481 = !DILocation(line: 904, column: 6, scope: !8445)
!8482 = !DILocation(line: 905, column: 2, scope: !8445)
!8483 = !DILocation(line: 905, column: 24, scope: !8445)
!8484 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8485)
!8485 = distinct !DILocation(line: 907, column: 2, scope: !8459)
!8486 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8485)
!8487 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8485)
!8488 = !DILocation(line: 907, column: 2, scope: !8459)
!8489 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8490)
!8490 = distinct !DILocation(line: 907, column: 2, scope: !8459)
!8491 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8490)
!8492 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8490)
!8493 = !DILocation(line: 907, column: 2, scope: !8460)
!8494 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !8495)
!8495 = distinct !DILocation(line: 907, column: 2, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 907, column: 2)
!8497 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !8495)
!8498 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !8495)
!8499 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !8495)
!8500 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !8495)
!8501 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !8495)
!8502 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !8495)
!8503 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !8495)
!8504 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !8495)
!8505 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !8495)
!8506 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !8495)
!8507 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !8495)
!8508 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !8495)
!8509 = !DILocation(line: 0, scope: !3086, inlinedAt: !8495)
!8510 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !8495)
!8511 = !DILocation(line: 907, column: 2, scope: !8496)
!8512 = !DILocation(line: 908, column: 6, scope: !8470)
!8513 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8514)
!8514 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8515)
!8515 = distinct !DILocation(line: 907, column: 2, scope: !8456)
!8516 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8514)
!8517 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8514)
!8518 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8515)
!8519 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8515)
!8520 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8515)
!8521 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8515)
!8522 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8515)
!8523 = !DILocation(line: 907, column: 2, scope: !8456)
!8524 = !{i32 -2145378335, i32 -2145378322, i32 -2145378297, i32 -2145378273, i32 -2145378248, i32 -2145378173, i32 -2145378148, i32 -2145378004, i32 -2145374872, i32 -2145374783, i32 -2145374662, i32 -2145374567, i32 -2145374466, i32 -2145374439, i32 -2145374356, i32 -2145374267, i32 -2145374146, i32 -2145374046, i32 -2145373940, i32 -2145373832, i32 -2145377716, i32 -2145377663, i32 -2145377632, i32 -2145377601, i32 -2145377580, i32 -2145377558, i32 -2145377509, i32 -2145377488, i32 -2145373749, i32 -2145373660, i32 -2145373539, i32 -2145373440, i32 -2145373334, i32 -2145373232, i32 -2145373199, i32 -2145373126, i32 -2145373058, i32 -2145377184, i32 -2145377125, i32 -2145377072, i32 -2145377041, i32 -2145377010, i32 -2145376989, i32 -2145376967, i32 -2145376918, i32 -2145376897, i32 -2145373005, i32 -2145372916, i32 -2145372795, i32 -2145372696, i32 -2145372590, i32 -2145372488, i32 -2145372455, i32 -2145372372, i32 -2145372283, i32 -2145372162, i32 -2145372062, i32 -2145372036, i32 -2145371933, i32 -2145371907, i32 -2145376639, i32 -2145376572, i32 -2145376547, i32 -2145376483, i32 -2145376401, i32 -2145376378, i32 -2145376353, i32 -2145376328}
!8525 = !DILocation(line: 907, column: 2, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 907, column: 2)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 907, column: 2)
!8528 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 907, column: 2)
!8529 = !{i32 -2145375140, i32 -2145375124}
!8530 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8531)
!8531 = distinct !DILocation(line: 912, column: 3, scope: !8466)
!8532 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8531)
!8533 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8531)
!8534 = !DILocation(line: 912, column: 3, scope: !8466)
!8535 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8536)
!8536 = distinct !DILocation(line: 912, column: 3, scope: !8466)
!8537 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8536)
!8538 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8536)
!8539 = !DILocation(line: 912, column: 3, scope: !8467)
!8540 = !DILocation(line: 912, column: 3, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 912, column: 3)
!8542 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !8543)
!8543 = distinct !DILocation(line: 912, column: 3, scope: !8541)
!8544 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !8543)
!8545 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8543)
!8546 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8543)
!8547 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8543)
!8548 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8549)
!8549 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8550)
!8550 = distinct !DILocation(line: 912, column: 3, scope: !8463)
!8551 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8549)
!8552 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8549)
!8553 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8550)
!8554 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8550)
!8555 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8550)
!8556 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8550)
!8557 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8550)
!8558 = !DILocation(line: 912, column: 3, scope: !8463)
!8559 = !{i32 -2145369652, i32 -2145369639, i32 -2145369614, i32 -2145369590, i32 -2145369565, i32 -2145369490, i32 -2145369465, i32 -2145369321, i32 -2145367080, i32 -2145366991, i32 -2145366870, i32 -2145366775, i32 -2145366674, i32 -2145366647, i32 -2145366564, i32 -2145366475, i32 -2145366354, i32 -2145366254, i32 -2145366148, i32 -2145366040, i32 -2145369033, i32 -2145368980, i32 -2145368949, i32 -2145368918, i32 -2145368897, i32 -2145368875, i32 -2145368826, i32 -2145368805, i32 -2145365957, i32 -2145365868, i32 -2145365747, i32 -2145365648, i32 -2145365542, i32 -2145365440, i32 -2145365407, i32 -2145365334, i32 -2145365266, i32 -2145368431, i32 -2145368378, i32 -2145368347, i32 -2145368316, i32 -2145368295, i32 -2145368273, i32 -2145368224, i32 -2145368203, i32 -2145365211, i32 -2145365122, i32 -2145365001, i32 -2145364902, i32 -2145364796, i32 -2145364694, i32 -2145364661, i32 -2145364578, i32 -2145364489, i32 -2145364368, i32 -2145364268, i32 -2145364242, i32 -2145364139, i32 -2145364113, i32 -2145367945, i32 -2145367878, i32 -2145367853, i32 -2145367789, i32 -2145367673, i32 -2145367648, i32 -2145367623}
!8560 = !DILocation(line: 915, column: 24, scope: !8445)
!8561 = !DILocalVariable(name: "s", arg: 1, scope: !8562, file: !3, line: 2273, type: !80)
!8562 = distinct !DISubprogram(name: "lwip_recv", scope: !3, file: !3, line: 2273, type: !8563, isLocal: false, isDefinition: true, scopeLine: 2274, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8565)
!8563 = !DISubroutineType(types: !8564)
!8564 = !{!206, !80, !143, !216, !80}
!8565 = !{!8561, !8566, !8567, !8568}
!8566 = !DILocalVariable(name: "mem", arg: 2, scope: !8562, file: !3, line: 2273, type: !143)
!8567 = !DILocalVariable(name: "len", arg: 3, scope: !8562, file: !3, line: 2273, type: !216)
!8568 = !DILocalVariable(name: "flags", arg: 4, scope: !8562, file: !3, line: 2273, type: !80)
!8569 = !DILocation(line: 2273, column: 15, scope: !8562, inlinedAt: !8570)
!8570 = distinct !DILocation(line: 915, column: 8, scope: !8445)
!8571 = !DILocation(line: 2273, column: 24, scope: !8562, inlinedAt: !8570)
!8572 = !DILocation(line: 2273, column: 36, scope: !8562, inlinedAt: !8570)
!8573 = !DILocation(line: 2273, column: 45, scope: !8562, inlinedAt: !8570)
!8574 = !DILocation(line: 2275, column: 10, scope: !8562, inlinedAt: !8570)
!8575 = !DILocation(line: 2275, column: 3, scope: !8562, inlinedAt: !8570)
!8576 = !DILocation(line: 915, column: 8, scope: !8445)
!8577 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8578)
!8578 = distinct !DILocation(line: 916, column: 2, scope: !8475)
!8579 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8578)
!8580 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8578)
!8581 = !DILocation(line: 916, column: 2, scope: !8475)
!8582 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8583)
!8583 = distinct !DILocation(line: 916, column: 2, scope: !8475)
!8584 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8583)
!8585 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8583)
!8586 = !DILocation(line: 916, column: 2, scope: !8476)
!8587 = !DILocation(line: 916, column: 2, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 916, column: 2)
!8589 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8590)
!8590 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8591)
!8591 = distinct !DILocation(line: 916, column: 2, scope: !8472)
!8592 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8590)
!8593 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8590)
!8594 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8591)
!8595 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8591)
!8596 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8591)
!8597 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8591)
!8598 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8591)
!8599 = !DILocation(line: 916, column: 2, scope: !8472)
!8600 = !{i32 -2145362149, i32 -2145362136, i32 -2145362111, i32 -2145362087, i32 -2145362062, i32 -2145361987, i32 -2145361962, i32 -2145361818, i32 -2145359591, i32 -2145359502, i32 -2145359381, i32 -2145359286, i32 -2145359185, i32 -2145359158, i32 -2145359075, i32 -2145358986, i32 -2145358865, i32 -2145358765, i32 -2145358659, i32 -2145358551, i32 -2145361530, i32 -2145361477, i32 -2145361446, i32 -2145361415, i32 -2145361394, i32 -2145361372, i32 -2145361323, i32 -2145361302, i32 -2145358468, i32 -2145358379, i32 -2145358258, i32 -2145358159, i32 -2145358053, i32 -2145357951, i32 -2145357918, i32 -2145357845, i32 -2145357777, i32 -2145360928, i32 -2145360875, i32 -2145360844, i32 -2145360813, i32 -2145360792, i32 -2145360770, i32 -2145360721, i32 -2145360700, i32 -2145357725, i32 -2145357636, i32 -2145357515, i32 -2145357416, i32 -2145357310, i32 -2145357208, i32 -2145357175, i32 -2145357092, i32 -2145357003, i32 -2145356882, i32 -2145356782, i32 -2145356756, i32 -2145356653, i32 -2145356627, i32 -2145360442, i32 -2145360375, i32 -2145360350, i32 -2145360286, i32 -2145360170, i32 -2145360145, i32 -2145360120}
!8601 = !DILocation(line: 0, scope: !8445)
!8602 = !DILocation(line: 919, column: 1, scope: !8445)
!8603 = !DILocation(line: 918, column: 2, scope: !8445)
!8604 = !DILocation(line: 2273, column: 15, scope: !8562)
!8605 = !DILocation(line: 2273, column: 24, scope: !8562)
!8606 = !DILocation(line: 2273, column: 36, scope: !8562)
!8607 = !DILocation(line: 2273, column: 45, scope: !8562)
!8608 = !DILocation(line: 2275, column: 10, scope: !8562)
!8609 = !DILocation(line: 2275, column: 3, scope: !8562)
!8610 = distinct !DISubprogram(name: "recvfrom", scope: !3, file: !3, line: 921, type: !8611, isLocal: false, isDefinition: true, scopeLine: 923, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8613)
!8611 = !DISubroutineType(types: !8612)
!8612 = !{!80, !80, !143, !216, !80, !1004, !3003}
!8613 = !{!8614, !8615, !8616, !8617, !8618, !8619, !8620, !8621, !8622, !8628, !8629, !8638}
!8614 = !DILocalVariable(name: "s", arg: 1, scope: !8610, file: !3, line: 921, type: !80)
!8615 = !DILocalVariable(name: "mem", arg: 2, scope: !8610, file: !3, line: 921, type: !143)
!8616 = !DILocalVariable(name: "len", arg: 3, scope: !8610, file: !3, line: 921, type: !216)
!8617 = !DILocalVariable(name: "flags", arg: 4, scope: !8610, file: !3, line: 921, type: !80)
!8618 = !DILocalVariable(name: "from", arg: 5, scope: !8610, file: !3, line: 922, type: !1004)
!8619 = !DILocalVariable(name: "fromlen", arg: 6, scope: !8610, file: !3, line: 922, type: !3003)
!8620 = !DILocalVariable(name: "ret", scope: !8610, file: !3, line: 924, type: !80)
!8621 = !DILocalVariable(name: "file", scope: !8610, file: !3, line: 925, type: !1077)
!8622 = !DILocalVariable(name: "tid", scope: !8623, file: !3, line: 927, type: !170)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !3, line: 927, column: 2)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 927, column: 2)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 927, column: 2)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 927, column: 2)
!8627 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 927, column: 2)
!8628 = !DILocalVariable(name: "_ret", scope: !8623, file: !3, line: 927, type: !135)
!8629 = !DILocalVariable(name: "tid", scope: !8630, file: !3, line: 932, type: !170)
!8630 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 932, column: 3)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 932, column: 3)
!8632 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 932, column: 3)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 932, column: 3)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 932, column: 3)
!8635 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 932, column: 3)
!8636 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 928, column: 22)
!8637 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 928, column: 6)
!8638 = !DILocalVariable(name: "tid", scope: !8639, file: !3, line: 936, type: !170)
!8639 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 936, column: 2)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 936, column: 2)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 936, column: 2)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 936, column: 2)
!8643 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 936, column: 2)
!8644 = !DILocation(line: 921, column: 18, scope: !8610)
!8645 = !DILocation(line: 921, column: 27, scope: !8610)
!8646 = !DILocation(line: 921, column: 39, scope: !8610)
!8647 = !DILocation(line: 921, column: 48, scope: !8610)
!8648 = !DILocation(line: 922, column: 26, scope: !8610)
!8649 = !DILocation(line: 922, column: 43, scope: !8610)
!8650 = !DILocation(line: 924, column: 6, scope: !8610)
!8651 = !DILocation(line: 925, column: 2, scope: !8610)
!8652 = !DILocation(line: 925, column: 24, scope: !8610)
!8653 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8654)
!8654 = distinct !DILocation(line: 927, column: 2, scope: !8626)
!8655 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8654)
!8656 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8654)
!8657 = !DILocation(line: 927, column: 2, scope: !8626)
!8658 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8659)
!8659 = distinct !DILocation(line: 927, column: 2, scope: !8626)
!8660 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8659)
!8661 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8659)
!8662 = !DILocation(line: 927, column: 2, scope: !8627)
!8663 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !8664)
!8664 = distinct !DILocation(line: 927, column: 2, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 927, column: 2)
!8666 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !8664)
!8667 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !8664)
!8668 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !8664)
!8669 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !8664)
!8670 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !8664)
!8671 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !8664)
!8672 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !8664)
!8673 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !8664)
!8674 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !8664)
!8675 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !8664)
!8676 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !8664)
!8677 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !8664)
!8678 = !DILocation(line: 0, scope: !3086, inlinedAt: !8664)
!8679 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !8664)
!8680 = !DILocation(line: 927, column: 2, scope: !8665)
!8681 = !DILocation(line: 928, column: 6, scope: !8637)
!8682 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8683)
!8683 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8684)
!8684 = distinct !DILocation(line: 927, column: 2, scope: !8623)
!8685 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8683)
!8686 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8683)
!8687 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8684)
!8688 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8684)
!8689 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8684)
!8690 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8684)
!8691 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8684)
!8692 = !DILocation(line: 927, column: 2, scope: !8623)
!8693 = !{i32 -2145354644, i32 -2145354631, i32 -2145354606, i32 -2145354582, i32 -2145354557, i32 -2145354482, i32 -2145354457, i32 -2145354313, i32 -2145351181, i32 -2145351092, i32 -2145350971, i32 -2145350876, i32 -2145350775, i32 -2145350748, i32 -2145350665, i32 -2145350576, i32 -2145350455, i32 -2145350355, i32 -2145350249, i32 -2145350141, i32 -2145354025, i32 -2145353972, i32 -2145353941, i32 -2145353910, i32 -2145353889, i32 -2145353867, i32 -2145353818, i32 -2145353797, i32 -2145350058, i32 -2145349969, i32 -2145349848, i32 -2145349749, i32 -2145349643, i32 -2145349541, i32 -2145349508, i32 -2145349435, i32 -2145349367, i32 -2145353493, i32 -2145353434, i32 -2145353381, i32 -2145353350, i32 -2145353319, i32 -2145353298, i32 -2145353276, i32 -2145353227, i32 -2145353206, i32 -2145349314, i32 -2145349225, i32 -2145349104, i32 -2145349005, i32 -2145348899, i32 -2145348797, i32 -2145348764, i32 -2145348681, i32 -2145348592, i32 -2145348471, i32 -2145348371, i32 -2145348345, i32 -2145348242, i32 -2145348216, i32 -2145352948, i32 -2145352881, i32 -2145352856, i32 -2145352792, i32 -2145352710, i32 -2145352687, i32 -2145352662, i32 -2145352637}
!8694 = !DILocation(line: 927, column: 2, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 927, column: 2)
!8696 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 927, column: 2)
!8697 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 927, column: 2)
!8698 = !{i32 -2145351449, i32 -2145351433}
!8699 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8700)
!8700 = distinct !DILocation(line: 932, column: 3, scope: !8633)
!8701 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8700)
!8702 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8700)
!8703 = !DILocation(line: 932, column: 3, scope: !8633)
!8704 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8705)
!8705 = distinct !DILocation(line: 932, column: 3, scope: !8633)
!8706 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8705)
!8707 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8705)
!8708 = !DILocation(line: 932, column: 3, scope: !8634)
!8709 = !DILocation(line: 932, column: 3, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 932, column: 3)
!8711 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !8712)
!8712 = distinct !DILocation(line: 932, column: 3, scope: !8710)
!8713 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !8712)
!8714 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8712)
!8715 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8712)
!8716 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8712)
!8717 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8718)
!8718 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8719)
!8719 = distinct !DILocation(line: 932, column: 3, scope: !8630)
!8720 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8718)
!8721 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8718)
!8722 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8719)
!8723 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8719)
!8724 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8719)
!8725 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8719)
!8726 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8719)
!8727 = !DILocation(line: 932, column: 3, scope: !8630)
!8728 = !{i32 -2145345961, i32 -2145345948, i32 -2145345923, i32 -2145345899, i32 -2145345874, i32 -2145345799, i32 -2145345774, i32 -2145345630, i32 -2145343389, i32 -2145343300, i32 -2145343179, i32 -2145343084, i32 -2145342983, i32 -2145342956, i32 -2145342873, i32 -2145342784, i32 -2145342663, i32 -2145342563, i32 -2145342457, i32 -2145342349, i32 -2145345342, i32 -2145345289, i32 -2145345258, i32 -2145345227, i32 -2145345206, i32 -2145345184, i32 -2145345135, i32 -2145345114, i32 -2145342266, i32 -2145342177, i32 -2145342056, i32 -2145341957, i32 -2145341851, i32 -2145341749, i32 -2145341716, i32 -2145341643, i32 -2145341575, i32 -2145344740, i32 -2145344687, i32 -2145344656, i32 -2145344625, i32 -2145344604, i32 -2145344582, i32 -2145344533, i32 -2145344512, i32 -2145341520, i32 -2145341431, i32 -2145341310, i32 -2145341211, i32 -2145341105, i32 -2145341003, i32 -2145340970, i32 -2145340887, i32 -2145340798, i32 -2145340677, i32 -2145340577, i32 -2145340551, i32 -2145340448, i32 -2145340422, i32 -2145344254, i32 -2145344187, i32 -2145344162, i32 -2145344098, i32 -2145343982, i32 -2145343957, i32 -2145343932}
!8729 = !DILocation(line: 935, column: 28, scope: !8610)
!8730 = !DILocation(line: 935, column: 8, scope: !8610)
!8731 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8732)
!8732 = distinct !DILocation(line: 936, column: 2, scope: !8642)
!8733 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8732)
!8734 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8732)
!8735 = !DILocation(line: 936, column: 2, scope: !8642)
!8736 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8737)
!8737 = distinct !DILocation(line: 936, column: 2, scope: !8642)
!8738 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8737)
!8739 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8737)
!8740 = !DILocation(line: 936, column: 2, scope: !8643)
!8741 = !DILocation(line: 936, column: 2, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 936, column: 2)
!8743 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8744)
!8744 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8745)
!8745 = distinct !DILocation(line: 936, column: 2, scope: !8639)
!8746 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8744)
!8747 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8744)
!8748 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8745)
!8749 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8745)
!8750 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8745)
!8751 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8745)
!8752 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8745)
!8753 = !DILocation(line: 936, column: 2, scope: !8639)
!8754 = !{i32 -2145338458, i32 -2145338445, i32 -2145338420, i32 -2145338396, i32 -2145338371, i32 -2145338296, i32 -2145338271, i32 -2145338127, i32 -2145335900, i32 -2145335811, i32 -2145335690, i32 -2145335595, i32 -2145335494, i32 -2145335467, i32 -2145335384, i32 -2145335295, i32 -2145335174, i32 -2145335074, i32 -2145334968, i32 -2145334860, i32 -2145337839, i32 -2145337786, i32 -2145337755, i32 -2145337724, i32 -2145337703, i32 -2145337681, i32 -2145337632, i32 -2145337611, i32 -2145334777, i32 -2145334688, i32 -2145334567, i32 -2145334468, i32 -2145334362, i32 -2145334260, i32 -2145334227, i32 -2145334154, i32 -2145334086, i32 -2145337237, i32 -2145337184, i32 -2145337153, i32 -2145337122, i32 -2145337101, i32 -2145337079, i32 -2145337030, i32 -2145337009, i32 -2145334034, i32 -2145333945, i32 -2145333824, i32 -2145333725, i32 -2145333619, i32 -2145333517, i32 -2145333484, i32 -2145333401, i32 -2145333312, i32 -2145333191, i32 -2145333091, i32 -2145333065, i32 -2145332962, i32 -2145332936, i32 -2145336751, i32 -2145336684, i32 -2145336659, i32 -2145336595, i32 -2145336479, i32 -2145336454, i32 -2145336429}
!8755 = !DILocation(line: 0, scope: !8610)
!8756 = !DILocation(line: 939, column: 1, scope: !8610)
!8757 = !DILocation(line: 938, column: 2, scope: !8610)
!8758 = distinct !DISubprogram(name: "lwip_recvfrom", scope: !3, file: !3, line: 2197, type: !8759, isLocal: false, isDefinition: true, scopeLine: 2199, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8761)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{!206, !80, !143, !216, !80, !1004, !3003}
!8761 = !{!8762, !8763, !8764, !8765, !8766, !8767, !8768, !8769, !8770, !8773, !8774, !8775, !8776, !8780, !8786, !8788}
!8762 = !DILocalVariable(name: "s", arg: 1, scope: !8758, file: !3, line: 2197, type: !80)
!8763 = !DILocalVariable(name: "mem", arg: 2, scope: !8758, file: !3, line: 2197, type: !143)
!8764 = !DILocalVariable(name: "len", arg: 3, scope: !8758, file: !3, line: 2197, type: !216)
!8765 = !DILocalVariable(name: "flags", arg: 4, scope: !8758, file: !3, line: 2197, type: !80)
!8766 = !DILocalVariable(name: "from", arg: 5, scope: !8758, file: !3, line: 2198, type: !1004)
!8767 = !DILocalVariable(name: "fromlen", arg: 6, scope: !8758, file: !3, line: 2198, type: !3003)
!8768 = !DILocalVariable(name: "sock", scope: !8758, file: !3, line: 2200, type: !1165)
!8769 = !DILocalVariable(name: "ret", scope: !8758, file: !3, line: 2201, type: !206)
!8770 = !DILocalVariable(name: "datagram_len", scope: !8771, file: !3, line: 2217, type: !164)
!8771 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2216, column: 3)
!8772 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 2209, column: 7)
!8773 = !DILocalVariable(name: "vec", scope: !8771, file: !3, line: 2218, type: !211)
!8774 = !DILocalVariable(name: "msg", scope: !8771, file: !3, line: 2219, type: !1886)
!8775 = !DILocalVariable(name: "err", scope: !8771, file: !3, line: 2220, type: !1283)
!8776 = !DILocalVariable(name: "sockerr", scope: !8777, file: !3, line: 2234, type: !1007)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 2234, column: 7)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 2231, column: 24)
!8779 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 2231, column: 9)
!8780 = !DILocalVariable(name: "tid", scope: !8781, file: !3, line: 2234, type: !170)
!8781 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 2234, column: 7)
!8782 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2234, column: 7)
!8783 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 2234, column: 7)
!8784 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 2234, column: 7)
!8785 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 2234, column: 7)
!8786 = !DILocalVariable(name: "sockerr", scope: !8787, file: !3, line: 2244, type: !1007)
!8787 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 2244, column: 3)
!8788 = !DILocalVariable(name: "tid", scope: !8789, file: !3, line: 2244, type: !170)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 2244, column: 3)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 2244, column: 3)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 2244, column: 3)
!8792 = distinct !DILexicalBlock(scope: !8793, file: !3, line: 2244, column: 3)
!8793 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 2244, column: 3)
!8794 = !DILocation(line: 2197, column: 19, scope: !8758)
!8795 = !DILocation(line: 2197, column: 28, scope: !8758)
!8796 = !DILocation(line: 2197, column: 40, scope: !8758)
!8797 = !DILocation(line: 2197, column: 49, scope: !8758)
!8798 = !DILocation(line: 2198, column: 32, scope: !8758)
!8799 = !DILocation(line: 2198, column: 49, scope: !8758)
!8800 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !8801)
!8801 = distinct !DILocation(line: 2204, column: 10, scope: !8758)
!8802 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !8803)
!8803 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !8801)
!8804 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !8805)
!8805 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !8803)
!8806 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !8807)
!8807 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !8805)
!8808 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !8807)
!8809 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !8807)
!8810 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !8807)
!8811 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !8807)
!8812 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !8805)
!8813 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !8803)
!8814 = !DILocation(line: 1460, column: 21, scope: !1572, inlinedAt: !8803)
!8815 = !DILocation(line: 1429, column: 21, scope: !1578, inlinedAt: !8805)
!8816 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !8803)
!8817 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !8803)
!8818 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !8803)
!8819 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !8803)
!8820 = !DILocation(line: 1479, column: 21, scope: !1556, inlinedAt: !8801)
!8821 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8822)
!8822 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !8801)
!8823 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8822)
!8824 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8822)
!8825 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !8801)
!8826 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8827)
!8827 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !8801)
!8828 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8827)
!8829 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8827)
!8830 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !8801)
!8831 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !8832)
!8832 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !8801)
!8833 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8832)
!8834 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8832)
!8835 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8832)
!8836 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !8801)
!8837 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8838)
!8838 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8839)
!8839 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !8801)
!8840 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8838)
!8841 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8838)
!8842 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8839)
!8843 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8839)
!8844 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8839)
!8845 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8839)
!8846 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8839)
!8847 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !8801)
!8848 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !8801)
!8849 = !DILocation(line: 2200, column: 21, scope: !8758)
!8850 = !DILocation(line: 2205, column: 7, scope: !8758)
!8851 = !DILocation(line: 2209, column: 7, scope: !8772)
!8852 = !DILocation(line: 2209, column: 51, scope: !8772)
!8853 = !DILocation(line: 2209, column: 7, scope: !8758)
!8854 = !DILocation(line: 2210, column: 11, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2209, column: 67)
!8856 = !DILocation(line: 2201, column: 11, scope: !8758)
!8857 = !DILocalVariable(name: "sock", arg: 1, scope: !8858, file: !3, line: 2054, type: !1165)
!8858 = distinct !DISubprogram(name: "lwip_recv_tcp_from", scope: !3, file: !3, line: 2054, type: !8859, isLocal: true, isDefinition: true, scopeLine: 2055, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8861)
!8859 = !DISubroutineType(types: !8860)
!8860 = !{!80, !1165, !1004, !3003, !292, !80, !206}
!8861 = !{!8857, !8862, !8863, !8864, !8865, !8866, !8867, !8870}
!8862 = !DILocalVariable(name: "from", arg: 2, scope: !8858, file: !3, line: 2054, type: !1004)
!8863 = !DILocalVariable(name: "fromlen", arg: 3, scope: !8858, file: !3, line: 2054, type: !3003)
!8864 = !DILocalVariable(name: "dbg_fn", arg: 4, scope: !8858, file: !3, line: 2054, type: !292)
!8865 = !DILocalVariable(name: "dbg_s", arg: 5, scope: !8858, file: !3, line: 2054, type: !80)
!8866 = !DILocalVariable(name: "dbg_ret", arg: 6, scope: !8858, file: !3, line: 2054, type: !206)
!8867 = !DILocalVariable(name: "port", scope: !8868, file: !3, line: 2068, type: !164)
!8868 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 2066, column: 3)
!8869 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 2064, column: 7)
!8870 = !DILocalVariable(name: "tmpaddr", scope: !8868, file: !3, line: 2069, type: !1183)
!8871 = !DILocation(line: 2054, column: 38, scope: !8858, inlinedAt: !8872)
!8872 = distinct !DILocation(line: 2211, column: 5, scope: !8855)
!8873 = !DILocation(line: 2054, column: 61, scope: !8858, inlinedAt: !8872)
!8874 = !DILocation(line: 2054, column: 78, scope: !8858, inlinedAt: !8872)
!8875 = !DILocation(line: 2054, column: 99, scope: !8858, inlinedAt: !8872)
!8876 = !DILocation(line: 2054, column: 111, scope: !8858, inlinedAt: !8872)
!8877 = !DILocation(line: 2054, column: 126, scope: !8858, inlinedAt: !8872)
!8878 = !DILocation(line: 2064, column: 7, scope: !8869, inlinedAt: !8872)
!8879 = !DILocation(line: 2064, column: 15, scope: !8869, inlinedAt: !8872)
!8880 = !DILocation(line: 2064, column: 12, scope: !8869, inlinedAt: !8872)
!8881 = !DILocation(line: 2068, column: 5, scope: !8868, inlinedAt: !8872)
!8882 = !DILocation(line: 2069, column: 5, scope: !8868, inlinedAt: !8872)
!8883 = !DILocation(line: 2070, column: 27, scope: !8868, inlinedAt: !8872)
!8884 = !DILocation(line: 2068, column: 11, scope: !8868, inlinedAt: !8872)
!8885 = !DILocation(line: 2069, column: 15, scope: !8868, inlinedAt: !8872)
!8886 = !DILocation(line: 2070, column: 5, scope: !8868, inlinedAt: !8872)
!8887 = !DILocation(line: 2075, column: 40, scope: !8888, inlinedAt: !8872)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 2074, column: 26)
!8889 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 2074, column: 9)
!8890 = !DILocation(line: 2075, column: 56, scope: !8888, inlinedAt: !8872)
!8891 = !DILocation(line: 2075, column: 14, scope: !8888, inlinedAt: !8872)
!8892 = !DILocation(line: 2077, column: 3, scope: !8869, inlinedAt: !8872)
!8893 = !DILocation(line: 2079, column: 1, scope: !8858, inlinedAt: !8872)
!8894 = !DILocation(line: 2213, column: 5, scope: !8855)
!8895 = !DILocation(line: 2217, column: 5, scope: !8771)
!8896 = !DILocation(line: 2217, column: 11, scope: !8771)
!8897 = !DILocation(line: 2218, column: 5, scope: !8771)
!8898 = !DILocation(line: 2219, column: 5, scope: !8771)
!8899 = !DILocation(line: 2221, column: 9, scope: !8771)
!8900 = !DILocation(line: 2221, column: 18, scope: !8771)
!8901 = !{!8902, !1408, i64 0}
!8902 = !{!"iovec", !1408, i64 0, !1404, i64 8}
!8903 = !DILocation(line: 2222, column: 9, scope: !8771)
!8904 = !DILocation(line: 2222, column: 17, scope: !8771)
!8905 = !{!8902, !1404, i64 8}
!8906 = !DILocation(line: 2223, column: 9, scope: !8771)
!8907 = !DILocation(line: 2223, column: 21, scope: !8771)
!8908 = !DILocation(line: 2224, column: 9, scope: !8771)
!8909 = !DILocation(line: 2224, column: 24, scope: !8771)
!8910 = !DILocation(line: 2225, column: 9, scope: !8771)
!8911 = !DILocation(line: 2225, column: 19, scope: !8771)
!8912 = !DILocation(line: 2226, column: 9, scope: !8771)
!8913 = !DILocation(line: 2226, column: 17, scope: !8771)
!8914 = !DILocation(line: 2227, column: 9, scope: !8771)
!8915 = !DILocation(line: 2227, column: 20, scope: !8771)
!8916 = !DILocation(line: 2228, column: 20, scope: !8771)
!8917 = !DILocation(line: 2228, column: 9, scope: !8771)
!8918 = !DILocation(line: 2228, column: 18, scope: !8771)
!8919 = !DILocation(line: 2229, column: 24, scope: !8771)
!8920 = !DILocation(line: 2229, column: 34, scope: !8771)
!8921 = !DILocation(line: 2229, column: 9, scope: !8771)
!8922 = !DILocation(line: 2229, column: 21, scope: !8771)
!8923 = !DILocation(line: 2219, column: 19, scope: !8771)
!8924 = !DILocation(line: 2230, column: 11, scope: !8771)
!8925 = !DILocation(line: 2220, column: 11, scope: !8771)
!8926 = !DILocation(line: 2231, column: 13, scope: !8779)
!8927 = !DILocation(line: 2231, column: 9, scope: !8771)
!8928 = !DILocation(line: 2234, column: 7, scope: !8777)
!8929 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8930)
!8930 = distinct !DILocation(line: 2234, column: 7, scope: !8784)
!8931 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8930)
!8932 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8930)
!8933 = !DILocation(line: 2234, column: 7, scope: !8784)
!8934 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8935)
!8935 = distinct !DILocation(line: 2234, column: 7, scope: !8784)
!8936 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8935)
!8937 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8935)
!8938 = !DILocation(line: 2234, column: 7, scope: !8785)
!8939 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8940)
!8940 = distinct !DILocation(line: 2234, column: 7, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 2234, column: 7)
!8942 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8940)
!8943 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8940)
!8944 = !DILocation(line: 2234, column: 7, scope: !8941)
!8945 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8946)
!8946 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8947)
!8947 = distinct !DILocation(line: 2234, column: 7, scope: !8781)
!8948 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8946)
!8949 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8946)
!8950 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8947)
!8951 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8947)
!8952 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8947)
!8953 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8947)
!8954 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8947)
!8955 = !DILocation(line: 2234, column: 7, scope: !8781)
!8956 = !{i32 -2145006630, i32 -2145006617, i32 -2145006592, i32 -2145006568, i32 -2145006543, i32 -2145006468, i32 -2145006443, i32 -2145006299, i32 -2145004076, i32 -2145003987, i32 -2145003866, i32 -2145003771, i32 -2145003670, i32 -2145003643, i32 -2145003560, i32 -2145003471, i32 -2145003350, i32 -2145003250, i32 -2145003144, i32 -2145003036, i32 -2145006011, i32 -2145005958, i32 -2145005927, i32 -2145005896, i32 -2145005875, i32 -2145005853, i32 -2145005804, i32 -2145005783, i32 -2145002953, i32 -2145002864, i32 -2145002743, i32 -2145002644, i32 -2145002538, i32 -2145002436, i32 -2145002403, i32 -2145002330, i32 -2145002262, i32 -2145005409, i32 -2145005356, i32 -2145005325, i32 -2145005294, i32 -2145005273, i32 -2145005251, i32 -2145005202, i32 -2145005181, i32 -2145002207, i32 -2145002118, i32 -2145001997, i32 -2145001898, i32 -2145001792, i32 -2145001690, i32 -2145001657, i32 -2145001574, i32 -2145001485, i32 -2145001364, i32 -2145001264, i32 -2145001238, i32 -2145001135, i32 -2145001109, i32 -2145004923, i32 -2145004856, i32 -2145004831, i32 -2145004767, i32 -2145004651, i32 -2145004626, i32 -2145004601}
!8957 = !DILocation(line: 2238, column: 20, scope: !8771)
!8958 = !DILocation(line: 2239, column: 9, scope: !8771)
!8959 = !DILocation(line: 2240, column: 22, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 2239, column: 18)
!8961 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 2239, column: 9)
!8962 = !DILocation(line: 2240, column: 16, scope: !8960)
!8963 = !DILocation(line: 2241, column: 5, scope: !8960)
!8964 = !DILocation(line: 2242, column: 3, scope: !8772)
!8965 = !DILocation(line: 2244, column: 3, scope: !8787)
!8966 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8967)
!8967 = distinct !DILocation(line: 2244, column: 3, scope: !8792)
!8968 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8967)
!8969 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8967)
!8970 = !DILocation(line: 2244, column: 3, scope: !8792)
!8971 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8972)
!8972 = distinct !DILocation(line: 2244, column: 3, scope: !8792)
!8973 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8972)
!8974 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8972)
!8975 = !DILocation(line: 2244, column: 3, scope: !8793)
!8976 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !8977)
!8977 = distinct !DILocation(line: 2244, column: 3, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 2244, column: 3)
!8979 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !8977)
!8980 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !8977)
!8981 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !8977)
!8982 = !DILocation(line: 2244, column: 3, scope: !8978)
!8983 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8984)
!8984 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8985)
!8985 = distinct !DILocation(line: 2244, column: 3, scope: !8789)
!8986 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8984)
!8987 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8984)
!8988 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8985)
!8989 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8985)
!8990 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8985)
!8991 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8985)
!8992 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8985)
!8993 = !DILocation(line: 2244, column: 3, scope: !8789)
!8994 = !{i32 -2144998798, i32 -2144998785, i32 -2144998760, i32 -2144998736, i32 -2144998711, i32 -2144998636, i32 -2144998611, i32 -2144998467, i32 -2144996244, i32 -2144996155, i32 -2144996034, i32 -2144995939, i32 -2144995838, i32 -2144995811, i32 -2144995728, i32 -2144995639, i32 -2144995518, i32 -2144995418, i32 -2144995312, i32 -2144995204, i32 -2144998179, i32 -2144998126, i32 -2144998095, i32 -2144998064, i32 -2144998043, i32 -2144998021, i32 -2144997972, i32 -2144997951, i32 -2144995121, i32 -2144995032, i32 -2144994911, i32 -2144994812, i32 -2144994706, i32 -2144994604, i32 -2144994571, i32 -2144994498, i32 -2144994430, i32 -2144997577, i32 -2144997524, i32 -2144997493, i32 -2144997462, i32 -2144997441, i32 -2144997419, i32 -2144997370, i32 -2144997349, i32 -2144994375, i32 -2144994286, i32 -2144994165, i32 -2144994066, i32 -2144993960, i32 -2144993858, i32 -2144993825, i32 -2144993742, i32 -2144993653, i32 -2144993532, i32 -2144993432, i32 -2144993406, i32 -2144993303, i32 -2144993277, i32 -2144997091, i32 -2144997024, i32 -2144996999, i32 -2144996935, i32 -2144996819, i32 -2144996794, i32 -2144996769}
!8995 = !DILocation(line: 0, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 2205, column: 14)
!8997 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 2205, column: 7)
!8998 = !DILocation(line: 2247, column: 1, scope: !8758)
!8999 = distinct !DISubprogram(name: "recvmsg", scope: !3, file: !3, line: 941, type: !9000, isLocal: false, isDefinition: true, scopeLine: 942, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9003)
!9000 = !DISubroutineType(types: !9001)
!9001 = !{!80, !80, !9002, !80}
!9002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!9003 = !{!9004, !9005, !9006, !9007, !9008, !9009, !9015, !9016, !9025}
!9004 = !DILocalVariable(name: "s", arg: 1, scope: !8999, file: !3, line: 941, type: !80)
!9005 = !DILocalVariable(name: "msg", arg: 2, scope: !8999, file: !3, line: 941, type: !9002)
!9006 = !DILocalVariable(name: "flags", arg: 3, scope: !8999, file: !3, line: 941, type: !80)
!9007 = !DILocalVariable(name: "ret", scope: !8999, file: !3, line: 943, type: !80)
!9008 = !DILocalVariable(name: "file", scope: !8999, file: !3, line: 944, type: !1077)
!9009 = !DILocalVariable(name: "tid", scope: !9010, file: !3, line: 946, type: !170)
!9010 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 946, column: 2)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 946, column: 2)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 946, column: 2)
!9013 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 946, column: 2)
!9014 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 946, column: 2)
!9015 = !DILocalVariable(name: "_ret", scope: !9010, file: !3, line: 946, type: !135)
!9016 = !DILocalVariable(name: "tid", scope: !9017, file: !3, line: 951, type: !170)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 951, column: 3)
!9018 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 951, column: 3)
!9019 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 951, column: 3)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 951, column: 3)
!9021 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 951, column: 3)
!9022 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 951, column: 3)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 947, column: 22)
!9024 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 947, column: 6)
!9025 = !DILocalVariable(name: "tid", scope: !9026, file: !3, line: 955, type: !170)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 955, column: 2)
!9027 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 955, column: 2)
!9028 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 955, column: 2)
!9029 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 955, column: 2)
!9030 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 955, column: 2)
!9031 = !DILocation(line: 941, column: 17, scope: !8999)
!9032 = !DILocation(line: 941, column: 35, scope: !8999)
!9033 = !DILocation(line: 941, column: 44, scope: !8999)
!9034 = !DILocation(line: 943, column: 6, scope: !8999)
!9035 = !DILocation(line: 944, column: 2, scope: !8999)
!9036 = !DILocation(line: 944, column: 24, scope: !8999)
!9037 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9038)
!9038 = distinct !DILocation(line: 946, column: 2, scope: !9013)
!9039 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9038)
!9040 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9038)
!9041 = !DILocation(line: 946, column: 2, scope: !9013)
!9042 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9043)
!9043 = distinct !DILocation(line: 946, column: 2, scope: !9013)
!9044 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9043)
!9045 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9043)
!9046 = !DILocation(line: 946, column: 2, scope: !9014)
!9047 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !9048)
!9048 = distinct !DILocation(line: 946, column: 2, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 946, column: 2)
!9050 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !9048)
!9051 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !9048)
!9052 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !9048)
!9053 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !9048)
!9054 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !9048)
!9055 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !9048)
!9056 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !9048)
!9057 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !9048)
!9058 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !9048)
!9059 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !9048)
!9060 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !9048)
!9061 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !9048)
!9062 = !DILocation(line: 0, scope: !3086, inlinedAt: !9048)
!9063 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !9048)
!9064 = !DILocation(line: 946, column: 2, scope: !9049)
!9065 = !DILocation(line: 947, column: 6, scope: !9024)
!9066 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9067)
!9067 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9068)
!9068 = distinct !DILocation(line: 946, column: 2, scope: !9010)
!9069 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9067)
!9070 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9067)
!9071 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9068)
!9072 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9068)
!9073 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9068)
!9074 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9068)
!9075 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9068)
!9076 = !DILocation(line: 946, column: 2, scope: !9010)
!9077 = !{i32 -2145330953, i32 -2145330940, i32 -2145330915, i32 -2145330891, i32 -2145330866, i32 -2145330791, i32 -2145330766, i32 -2145330622, i32 -2145327490, i32 -2145327401, i32 -2145327280, i32 -2145327185, i32 -2145327084, i32 -2145327057, i32 -2145326974, i32 -2145326885, i32 -2145326764, i32 -2145326664, i32 -2145326558, i32 -2145326450, i32 -2145330334, i32 -2145330281, i32 -2145330250, i32 -2145330219, i32 -2145330198, i32 -2145330176, i32 -2145330127, i32 -2145330106, i32 -2145326367, i32 -2145326278, i32 -2145326157, i32 -2145326058, i32 -2145325952, i32 -2145325850, i32 -2145325817, i32 -2145325744, i32 -2145325676, i32 -2145329802, i32 -2145329743, i32 -2145329690, i32 -2145329659, i32 -2145329628, i32 -2145329607, i32 -2145329585, i32 -2145329536, i32 -2145329515, i32 -2145325623, i32 -2145325534, i32 -2145325413, i32 -2145325314, i32 -2145325208, i32 -2145325106, i32 -2145325073, i32 -2145324990, i32 -2145324901, i32 -2145324780, i32 -2145324680, i32 -2145324654, i32 -2145324551, i32 -2145324525, i32 -2145329257, i32 -2145329190, i32 -2145329165, i32 -2145329101, i32 -2145329019, i32 -2145328996, i32 -2145328971, i32 -2145328946}
!9078 = !DILocation(line: 946, column: 2, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 946, column: 2)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 946, column: 2)
!9081 = distinct !DILexicalBlock(scope: !9010, file: !3, line: 946, column: 2)
!9082 = !{i32 -2145327758, i32 -2145327742}
!9083 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9084)
!9084 = distinct !DILocation(line: 951, column: 3, scope: !9020)
!9085 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9084)
!9086 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9084)
!9087 = !DILocation(line: 951, column: 3, scope: !9020)
!9088 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9089)
!9089 = distinct !DILocation(line: 951, column: 3, scope: !9020)
!9090 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9089)
!9091 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9089)
!9092 = !DILocation(line: 951, column: 3, scope: !9021)
!9093 = !DILocation(line: 951, column: 3, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 951, column: 3)
!9095 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !9096)
!9096 = distinct !DILocation(line: 951, column: 3, scope: !9094)
!9097 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !9096)
!9098 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9096)
!9099 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9096)
!9100 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9096)
!9101 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9102)
!9102 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9103)
!9103 = distinct !DILocation(line: 951, column: 3, scope: !9017)
!9104 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9102)
!9105 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9102)
!9106 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9103)
!9107 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9103)
!9108 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9103)
!9109 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9103)
!9110 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9103)
!9111 = !DILocation(line: 951, column: 3, scope: !9017)
!9112 = !{i32 -2145322270, i32 -2145322257, i32 -2145322232, i32 -2145322208, i32 -2145322183, i32 -2145322108, i32 -2145322083, i32 -2145321939, i32 -2145319698, i32 -2145319609, i32 -2145319488, i32 -2145319393, i32 -2145319292, i32 -2145319265, i32 -2145319182, i32 -2145319093, i32 -2145318972, i32 -2145318872, i32 -2145318766, i32 -2145318658, i32 -2145321651, i32 -2145321598, i32 -2145321567, i32 -2145321536, i32 -2145321515, i32 -2145321493, i32 -2145321444, i32 -2145321423, i32 -2145318575, i32 -2145318486, i32 -2145318365, i32 -2145318266, i32 -2145318160, i32 -2145318058, i32 -2145318025, i32 -2145317952, i32 -2145317884, i32 -2145321049, i32 -2145320996, i32 -2145320965, i32 -2145320934, i32 -2145320913, i32 -2145320891, i32 -2145320842, i32 -2145320821, i32 -2145317829, i32 -2145317740, i32 -2145317619, i32 -2145317520, i32 -2145317414, i32 -2145317312, i32 -2145317279, i32 -2145317196, i32 -2145317107, i32 -2145316986, i32 -2145316886, i32 -2145316860, i32 -2145316757, i32 -2145316731, i32 -2145320563, i32 -2145320496, i32 -2145320471, i32 -2145320407, i32 -2145320291, i32 -2145320266, i32 -2145320241}
!9113 = !DILocation(line: 954, column: 27, scope: !8999)
!9114 = !DILocation(line: 954, column: 8, scope: !8999)
!9115 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9116)
!9116 = distinct !DILocation(line: 955, column: 2, scope: !9029)
!9117 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9116)
!9118 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9116)
!9119 = !DILocation(line: 955, column: 2, scope: !9029)
!9120 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9121)
!9121 = distinct !DILocation(line: 955, column: 2, scope: !9029)
!9122 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9121)
!9123 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9121)
!9124 = !DILocation(line: 955, column: 2, scope: !9030)
!9125 = !DILocation(line: 955, column: 2, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 955, column: 2)
!9127 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9128)
!9128 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9129)
!9129 = distinct !DILocation(line: 955, column: 2, scope: !9026)
!9130 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9128)
!9131 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9128)
!9132 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9129)
!9133 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9129)
!9134 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9129)
!9135 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9129)
!9136 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9129)
!9137 = !DILocation(line: 955, column: 2, scope: !9026)
!9138 = !{i32 -2145314767, i32 -2145314754, i32 -2145314729, i32 -2145314705, i32 -2145314680, i32 -2145314605, i32 -2145314580, i32 -2145314436, i32 -2145312209, i32 -2145312120, i32 -2145311999, i32 -2145311904, i32 -2145311803, i32 -2145311776, i32 -2145311693, i32 -2145311604, i32 -2145311483, i32 -2145311383, i32 -2145311277, i32 -2145311169, i32 -2145314148, i32 -2145314095, i32 -2145314064, i32 -2145314033, i32 -2145314012, i32 -2145313990, i32 -2145313941, i32 -2145313920, i32 -2145311086, i32 -2145310997, i32 -2145310876, i32 -2145310777, i32 -2145310671, i32 -2145310569, i32 -2145310536, i32 -2145310463, i32 -2145310395, i32 -2145313546, i32 -2145313493, i32 -2145313462, i32 -2145313431, i32 -2145313410, i32 -2145313388, i32 -2145313339, i32 -2145313318, i32 -2145310343, i32 -2145310254, i32 -2145310133, i32 -2145310034, i32 -2145309928, i32 -2145309826, i32 -2145309793, i32 -2145309710, i32 -2145309621, i32 -2145309500, i32 -2145309400, i32 -2145309374, i32 -2145309271, i32 -2145309245, i32 -2145313060, i32 -2145312993, i32 -2145312968, i32 -2145312904, i32 -2145312788, i32 -2145312763, i32 -2145312738}
!9139 = !DILocation(line: 0, scope: !8999)
!9140 = !DILocation(line: 958, column: 1, scope: !8999)
!9141 = !DILocation(line: 957, column: 2, scope: !8999)
!9142 = distinct !DISubprogram(name: "lwip_recvmsg", scope: !3, file: !3, line: 2279, type: !9143, isLocal: false, isDefinition: true, scopeLine: 2280, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9145)
!9143 = !DISubroutineType(types: !9144)
!9144 = !{!206, !80, !9002, !80}
!9145 = !{!9146, !9147, !9148, !9149, !9150, !9151, !9152, !9157, !9163, !9171, !9178, !9184, !9187, !9191, !9195, !9201, !9203, !9204, !9208, !9214, !9216}
!9146 = !DILocalVariable(name: "s", arg: 1, scope: !9142, file: !3, line: 2279, type: !80)
!9147 = !DILocalVariable(name: "message", arg: 2, scope: !9142, file: !3, line: 2279, type: !9002)
!9148 = !DILocalVariable(name: "flags", arg: 3, scope: !9142, file: !3, line: 2279, type: !80)
!9149 = !DILocalVariable(name: "sock", scope: !9142, file: !3, line: 2281, type: !1165)
!9150 = !DILocalVariable(name: "i", scope: !9142, file: !3, line: 2282, type: !80)
!9151 = !DILocalVariable(name: "buflen", scope: !9142, file: !3, line: 2283, type: !206)
!9152 = !DILocalVariable(name: "sockerr", scope: !9153, file: !3, line: 2287, type: !1007)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 2287, column: 3)
!9154 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 2287, column: 3)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 2287, column: 3)
!9156 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2287, column: 3)
!9157 = !DILocalVariable(name: "tid", scope: !9158, file: !3, line: 2287, type: !170)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 2287, column: 3)
!9159 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 2287, column: 3)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 2287, column: 3)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 2287, column: 3)
!9162 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 2287, column: 3)
!9163 = !DILocalVariable(name: "tid", scope: !9164, file: !3, line: 2291, type: !170)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 2291, column: 5)
!9165 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 2291, column: 5)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 2291, column: 5)
!9167 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 2291, column: 5)
!9168 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2291, column: 5)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 2290, column: 70)
!9170 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2290, column: 7)
!9171 = !DILocalVariable(name: "sockerr", scope: !9172, file: !3, line: 2306, type: !1007)
!9172 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2306, column: 7)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !3, line: 2305, column: 74)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 2303, column: 9)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 2302, column: 45)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 2302, column: 3)
!9177 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2302, column: 3)
!9178 = !DILocalVariable(name: "tid", scope: !9179, file: !3, line: 2306, type: !170)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !3, line: 2306, column: 7)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 2306, column: 7)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 2306, column: 7)
!9182 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 2306, column: 7)
!9183 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 2306, column: 7)
!9184 = !DILocalVariable(name: "recv_flags", scope: !9185, file: !3, line: 2315, type: !80)
!9185 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 2313, column: 67)
!9186 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2313, column: 7)
!9187 = !DILocalVariable(name: "recvd_local", scope: !9188, file: !3, line: 2321, type: !206)
!9188 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 2319, column: 47)
!9189 = distinct !DILexicalBlock(scope: !9190, file: !3, line: 2319, column: 5)
!9190 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 2319, column: 5)
!9191 = !DILocalVariable(name: "sockerr", scope: !9192, file: !3, line: 2340, type: !1007)
!9192 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 2340, column: 7)
!9193 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 2338, column: 21)
!9194 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 2338, column: 9)
!9195 = !DILocalVariable(name: "tid", scope: !9196, file: !3, line: 2340, type: !170)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 2340, column: 7)
!9197 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 2340, column: 7)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 2340, column: 7)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 2340, column: 7)
!9200 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 2340, column: 7)
!9201 = !DILocalVariable(name: "datagram_len", scope: !9202, file: !3, line: 2354, type: !164)
!9202 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2353, column: 3)
!9203 = !DILocalVariable(name: "err", scope: !9202, file: !3, line: 2355, type: !1283)
!9204 = !DILocalVariable(name: "sockerr", scope: !9205, file: !3, line: 2360, type: !1007)
!9205 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 2360, column: 7)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 2357, column: 24)
!9207 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 2357, column: 9)
!9208 = !DILocalVariable(name: "tid", scope: !9209, file: !3, line: 2360, type: !170)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 2360, column: 7)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !3, line: 2360, column: 7)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 2360, column: 7)
!9212 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 2360, column: 7)
!9213 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 2360, column: 7)
!9214 = !DILocalVariable(name: "sockerr", scope: !9215, file: !3, line: 2368, type: !1007)
!9215 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 2368, column: 5)
!9216 = !DILocalVariable(name: "tid", scope: !9217, file: !3, line: 2368, type: !170)
!9217 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 2368, column: 5)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 2368, column: 5)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 2368, column: 5)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !3, line: 2368, column: 5)
!9221 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 2368, column: 5)
!9222 = !DILocation(line: 2279, column: 18, scope: !9142)
!9223 = !DILocation(line: 2279, column: 36, scope: !9142)
!9224 = !DILocation(line: 2279, column: 49, scope: !9142)
!9225 = !DILocation(line: 2286, column: 3, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9227, file: !3, line: 2286, column: 3)
!9227 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2286, column: 3)
!9228 = !DILocation(line: 2286, column: 3, scope: !9227)
!9229 = !DILocation(line: 2286, column: 3, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 2286, column: 3)
!9231 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 2286, column: 3)
!9232 = !DILocation(line: 2286, column: 3, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 2286, column: 3)
!9234 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 2286, column: 3)
!9235 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 2286, column: 3)
!9236 = !DILocation(line: 2287, column: 3, scope: !9155)
!9237 = !DILocation(line: 2287, column: 3, scope: !9156)
!9238 = !DILocation(line: 2287, column: 3, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 2287, column: 3)
!9240 = !DILocation(line: 2287, column: 3, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 2287, column: 3)
!9242 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 2287, column: 3)
!9243 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 2287, column: 3)
!9244 = !DILocation(line: 2290, column: 17, scope: !9170)
!9245 = !DILocation(line: 2290, column: 34, scope: !9170)
!9246 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9247)
!9247 = distinct !DILocation(line: 2291, column: 5, scope: !9167)
!9248 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9247)
!9249 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9247)
!9250 = !DILocation(line: 2291, column: 5, scope: !9167)
!9251 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9252)
!9252 = distinct !DILocation(line: 2291, column: 5, scope: !9167)
!9253 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9252)
!9254 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9252)
!9255 = !DILocation(line: 2291, column: 5, scope: !9168)
!9256 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !9257)
!9257 = distinct !DILocation(line: 2291, column: 5, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 2291, column: 5)
!9259 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9257)
!9260 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9257)
!9261 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9257)
!9262 = !DILocation(line: 2291, column: 5, scope: !9258)
!9263 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9264)
!9264 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9265)
!9265 = distinct !DILocation(line: 2291, column: 5, scope: !9164)
!9266 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9264)
!9267 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9264)
!9268 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9265)
!9269 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9265)
!9270 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9265)
!9271 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9265)
!9272 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9265)
!9273 = !DILocation(line: 2291, column: 5, scope: !9164)
!9274 = !{i32 -2144975631, i32 -2144975618, i32 -2144975593, i32 -2144975569, i32 -2144975544, i32 -2144975469, i32 -2144975444, i32 -2144975300, i32 -2144973076, i32 -2144972987, i32 -2144972866, i32 -2144972771, i32 -2144972670, i32 -2144972643, i32 -2144972560, i32 -2144972471, i32 -2144972350, i32 -2144972250, i32 -2144972144, i32 -2144972036, i32 -2144975012, i32 -2144974959, i32 -2144974928, i32 -2144974897, i32 -2144974876, i32 -2144974854, i32 -2144974805, i32 -2144974784, i32 -2144971953, i32 -2144971864, i32 -2144971743, i32 -2144971644, i32 -2144971538, i32 -2144971436, i32 -2144971403, i32 -2144971330, i32 -2144971262, i32 -2144974410, i32 -2144974357, i32 -2144974326, i32 -2144974295, i32 -2144974274, i32 -2144974252, i32 -2144974203, i32 -2144974182, i32 -2144971207, i32 -2144971118, i32 -2144970997, i32 -2144970898, i32 -2144970792, i32 -2144970690, i32 -2144970657, i32 -2144970574, i32 -2144970485, i32 -2144970364, i32 -2144970264, i32 -2144970238, i32 -2144970135, i32 -2144970109, i32 -2144973924, i32 -2144973857, i32 -2144973832, i32 -2144973768, i32 -2144973652, i32 -2144973627, i32 -2144973602}
!9275 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !9276)
!9276 = distinct !DILocation(line: 2295, column: 10, scope: !9142)
!9277 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !9278)
!9278 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !9276)
!9279 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !9280)
!9280 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !9278)
!9281 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !9282)
!9282 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !9280)
!9283 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !9282)
!9284 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !9282)
!9285 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !9282)
!9286 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !9282)
!9287 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !9280)
!9288 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !9278)
!9289 = !DILocation(line: 1460, column: 21, scope: !1572, inlinedAt: !9278)
!9290 = !DILocation(line: 1429, column: 21, scope: !1578, inlinedAt: !9280)
!9291 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !9278)
!9292 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !9278)
!9293 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !9278)
!9294 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !9278)
!9295 = !DILocation(line: 1479, column: 21, scope: !1556, inlinedAt: !9276)
!9296 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9297)
!9297 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !9276)
!9298 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9297)
!9299 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9297)
!9300 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !9276)
!9301 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9302)
!9302 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !9276)
!9303 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9302)
!9304 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9302)
!9305 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !9276)
!9306 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !9307)
!9307 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !9276)
!9308 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9307)
!9309 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9307)
!9310 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9307)
!9311 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !9276)
!9312 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9313)
!9313 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9314)
!9314 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !9276)
!9315 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9313)
!9316 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9313)
!9317 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9314)
!9318 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9314)
!9319 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9314)
!9320 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9314)
!9321 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9314)
!9322 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !9276)
!9323 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !9276)
!9324 = !DILocation(line: 2281, column: 21, scope: !9142)
!9325 = !DILocation(line: 2296, column: 7, scope: !9142)
!9326 = !DILocation(line: 2282, column: 7, scope: !9142)
!9327 = !DILocation(line: 2283, column: 11, scope: !9142)
!9328 = !DILocation(line: 2302, column: 3, scope: !9177)
!9329 = !DILocation(line: 2302, column: 17, scope: !9176)
!9330 = distinct !{!9330, !9328, !9331}
!9331 = !DILocation(line: 2311, column: 3, scope: !9177)
!9332 = !DILocation(line: 2303, column: 30, scope: !9174)
!9333 = !DILocation(line: 2303, column: 39, scope: !9174)
!9334 = !DILocation(line: 2303, column: 48, scope: !9174)
!9335 = !DILocation(line: 2303, column: 81, scope: !9174)
!9336 = !DILocation(line: 2303, column: 89, scope: !9174)
!9337 = !DILocation(line: 2303, column: 95, scope: !9174)
!9338 = !DILocation(line: 2305, column: 27, scope: !9174)
!9339 = !DILocation(line: 2305, column: 67, scope: !9174)
!9340 = !DILocation(line: 2302, column: 41, scope: !9176)
!9341 = !DILocation(line: 2303, column: 9, scope: !9175)
!9342 = !DILocation(line: 2306, column: 7, scope: !9172)
!9343 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9344)
!9344 = distinct !DILocation(line: 2306, column: 7, scope: !9182)
!9345 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9344)
!9346 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9344)
!9347 = !DILocation(line: 2306, column: 7, scope: !9182)
!9348 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9349)
!9349 = distinct !DILocation(line: 2306, column: 7, scope: !9182)
!9350 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9349)
!9351 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9349)
!9352 = !DILocation(line: 2306, column: 7, scope: !9183)
!9353 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9354)
!9354 = distinct !DILocation(line: 2306, column: 7, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 2306, column: 7)
!9356 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9354)
!9357 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9354)
!9358 = !DILocation(line: 2306, column: 7, scope: !9355)
!9359 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9360)
!9360 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9361)
!9361 = distinct !DILocation(line: 2306, column: 7, scope: !9179)
!9362 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9360)
!9363 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9360)
!9364 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9361)
!9365 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9361)
!9366 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9361)
!9367 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9361)
!9368 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9361)
!9369 = !DILocation(line: 2306, column: 7, scope: !9179)
!9370 = !{i32 -2144968041, i32 -2144968028, i32 -2144968003, i32 -2144967979, i32 -2144967954, i32 -2144967879, i32 -2144967854, i32 -2144967710, i32 -2144965487, i32 -2144965398, i32 -2144965277, i32 -2144965182, i32 -2144965081, i32 -2144965054, i32 -2144964971, i32 -2144964882, i32 -2144964761, i32 -2144964661, i32 -2144964555, i32 -2144964447, i32 -2144967422, i32 -2144967369, i32 -2144967338, i32 -2144967307, i32 -2144967286, i32 -2144967264, i32 -2144967215, i32 -2144967194, i32 -2144964364, i32 -2144964275, i32 -2144964154, i32 -2144964055, i32 -2144963949, i32 -2144963847, i32 -2144963814, i32 -2144963741, i32 -2144963673, i32 -2144966820, i32 -2144966767, i32 -2144966736, i32 -2144966705, i32 -2144966684, i32 -2144966662, i32 -2144966613, i32 -2144966592, i32 -2144963618, i32 -2144963529, i32 -2144963408, i32 -2144963309, i32 -2144963203, i32 -2144963101, i32 -2144963068, i32 -2144962985, i32 -2144962896, i32 -2144962775, i32 -2144962675, i32 -2144962649, i32 -2144962546, i32 -2144962520, i32 -2144966334, i32 -2144966267, i32 -2144966242, i32 -2144966178, i32 -2144966062, i32 -2144966037, i32 -2144966012}
!9371 = !DILocation(line: 2313, column: 7, scope: !9186)
!9372 = !DILocation(line: 2313, column: 51, scope: !9186)
!9373 = !DILocation(line: 2313, column: 7, scope: !9142)
!9374 = !DILocation(line: 2315, column: 9, scope: !9185)
!9375 = !DILocation(line: 2316, column: 14, scope: !9185)
!9376 = !DILocation(line: 2316, column: 24, scope: !9185)
!9377 = !DILocation(line: 2321, column: 58, scope: !9188)
!9378 = !DILocation(line: 2319, column: 5, scope: !9190)
!9379 = !DILocation(line: 2321, column: 69, scope: !9188)
!9380 = !DILocation(line: 2321, column: 99, scope: !9188)
!9381 = !DILocation(line: 2321, column: 29, scope: !9188)
!9382 = !DILocation(line: 2321, column: 15, scope: !9188)
!9383 = !DILocation(line: 2322, column: 23, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 2322, column: 11)
!9385 = !DILocation(line: 2322, column: 11, scope: !9188)
!9386 = !DILocation(line: 2326, column: 24, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 2326, column: 11)
!9388 = !DILocation(line: 2326, column: 29, scope: !9387)
!9389 = !DILocation(line: 2326, column: 61, scope: !9387)
!9390 = !DILocation(line: 2326, column: 72, scope: !9387)
!9391 = !DILocation(line: 2326, column: 47, scope: !9387)
!9392 = !DILocation(line: 2326, column: 45, scope: !9387)
!9393 = !DILocation(line: 2326, column: 81, scope: !9387)
!9394 = !DILocation(line: 2329, column: 20, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 2329, column: 13)
!9396 = distinct !DILexicalBlock(scope: !9387, file: !3, line: 2327, column: 31)
!9397 = !DILocation(line: 2329, column: 13, scope: !9396)
!9398 = !DILocation(line: 2336, column: 18, scope: !9188)
!9399 = !DILocation(line: 2319, column: 43, scope: !9189)
!9400 = !DILocation(line: 2319, column: 30, scope: !9189)
!9401 = !DILocation(line: 2319, column: 19, scope: !9189)
!9402 = distinct !{!9402, !9378, !9403}
!9403 = !DILocation(line: 2337, column: 5, scope: !9190)
!9404 = !DILocation(line: 0, scope: !9185)
!9405 = !DILocation(line: 2338, column: 16, scope: !9194)
!9406 = !DILocation(line: 2338, column: 9, scope: !9185)
!9407 = !DILocation(line: 2340, column: 7, scope: !9192)
!9408 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9409)
!9409 = distinct !DILocation(line: 2340, column: 7, scope: !9199)
!9410 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9409)
!9411 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9409)
!9412 = !DILocation(line: 2340, column: 7, scope: !9199)
!9413 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9414)
!9414 = distinct !DILocation(line: 2340, column: 7, scope: !9199)
!9415 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9414)
!9416 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9414)
!9417 = !DILocation(line: 2340, column: 7, scope: !9200)
!9418 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !9419)
!9419 = distinct !DILocation(line: 2340, column: 7, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 2340, column: 7)
!9421 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9419)
!9422 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9419)
!9423 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9419)
!9424 = !DILocation(line: 2340, column: 7, scope: !9420)
!9425 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9426)
!9426 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9427)
!9427 = distinct !DILocation(line: 2340, column: 7, scope: !9196)
!9428 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9426)
!9429 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9426)
!9430 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9427)
!9431 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9427)
!9432 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9427)
!9433 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9427)
!9434 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9427)
!9435 = !DILocation(line: 2340, column: 7, scope: !9196)
!9436 = !{i32 -2144960416, i32 -2144960403, i32 -2144960378, i32 -2144960354, i32 -2144960329, i32 -2144960254, i32 -2144960229, i32 -2144960085, i32 -2144957862, i32 -2144957773, i32 -2144957652, i32 -2144957557, i32 -2144957456, i32 -2144957429, i32 -2144957346, i32 -2144957257, i32 -2144957136, i32 -2144957036, i32 -2144956930, i32 -2144956822, i32 -2144959797, i32 -2144959744, i32 -2144959713, i32 -2144959682, i32 -2144959661, i32 -2144959639, i32 -2144959590, i32 -2144959569, i32 -2144956739, i32 -2144956650, i32 -2144956529, i32 -2144956430, i32 -2144956324, i32 -2144956222, i32 -2144956189, i32 -2144956116, i32 -2144956048, i32 -2144959195, i32 -2144959142, i32 -2144959111, i32 -2144959080, i32 -2144959059, i32 -2144959037, i32 -2144958988, i32 -2144958967, i32 -2144955993, i32 -2144955904, i32 -2144955783, i32 -2144955684, i32 -2144955578, i32 -2144955476, i32 -2144955443, i32 -2144955360, i32 -2144955271, i32 -2144955150, i32 -2144955050, i32 -2144955024, i32 -2144954921, i32 -2144954895, i32 -2144958709, i32 -2144958642, i32 -2144958617, i32 -2144958553, i32 -2144958437, i32 -2144958412, i32 -2144958387}
!9437 = !DILocation(line: 2354, column: 5, scope: !9202)
!9438 = !DILocation(line: 2354, column: 11, scope: !9202)
!9439 = !DILocation(line: 2356, column: 11, scope: !9202)
!9440 = !DILocation(line: 2355, column: 11, scope: !9202)
!9441 = !DILocation(line: 2357, column: 13, scope: !9207)
!9442 = !DILocation(line: 2357, column: 9, scope: !9202)
!9443 = !DILocation(line: 2360, column: 7, scope: !9205)
!9444 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9445)
!9445 = distinct !DILocation(line: 2360, column: 7, scope: !9212)
!9446 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9445)
!9447 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9445)
!9448 = !DILocation(line: 2360, column: 7, scope: !9212)
!9449 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 2360, column: 7, scope: !9212)
!9451 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9450)
!9452 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9450)
!9453 = !DILocation(line: 2360, column: 7, scope: !9213)
!9454 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9455)
!9455 = distinct !DILocation(line: 2360, column: 7, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 2360, column: 7)
!9457 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9455)
!9458 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9455)
!9459 = !DILocation(line: 2360, column: 7, scope: !9456)
!9460 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9461)
!9461 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9462)
!9462 = distinct !DILocation(line: 2360, column: 7, scope: !9209)
!9463 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9461)
!9464 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9461)
!9465 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9462)
!9466 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9462)
!9467 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9462)
!9468 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9462)
!9469 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9462)
!9470 = !DILocation(line: 2360, column: 7, scope: !9209)
!9471 = !{i32 -2144952839, i32 -2144952826, i32 -2144952801, i32 -2144952777, i32 -2144952752, i32 -2144952677, i32 -2144952652, i32 -2144952508, i32 -2144950285, i32 -2144950196, i32 -2144950075, i32 -2144949980, i32 -2144949879, i32 -2144949852, i32 -2144949769, i32 -2144949680, i32 -2144949559, i32 -2144949459, i32 -2144949353, i32 -2144949245, i32 -2144952220, i32 -2144952167, i32 -2144952136, i32 -2144952105, i32 -2144952084, i32 -2144952062, i32 -2144952013, i32 -2144951992, i32 -2144949162, i32 -2144949073, i32 -2144948952, i32 -2144948853, i32 -2144948747, i32 -2144948645, i32 -2144948612, i32 -2144948539, i32 -2144948471, i32 -2144951618, i32 -2144951565, i32 -2144951534, i32 -2144951503, i32 -2144951482, i32 -2144951460, i32 -2144951411, i32 -2144951390, i32 -2144948416, i32 -2144948327, i32 -2144948206, i32 -2144948107, i32 -2144948001, i32 -2144947899, i32 -2144947866, i32 -2144947783, i32 -2144947694, i32 -2144947573, i32 -2144947473, i32 -2144947447, i32 -2144947344, i32 -2144947318, i32 -2144951132, i32 -2144951065, i32 -2144951040, i32 -2144950976, i32 -2144950860, i32 -2144950835, i32 -2144950810}
!9472 = !DILocation(line: 2364, column: 9, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 2364, column: 9)
!9474 = !DILocation(line: 2364, column: 22, scope: !9473)
!9475 = !DILocation(line: 2364, column: 9, scope: !9202)
!9476 = !DILocation(line: 2365, column: 16, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9473, file: !3, line: 2364, column: 32)
!9478 = !DILocation(line: 2365, column: 26, scope: !9477)
!9479 = !DILocation(line: 2366, column: 5, scope: !9477)
!9480 = !DILocation(line: 2368, column: 5, scope: !9215)
!9481 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9482)
!9482 = distinct !DILocation(line: 2368, column: 5, scope: !9220)
!9483 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9482)
!9484 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9482)
!9485 = !DILocation(line: 2368, column: 5, scope: !9220)
!9486 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9487)
!9487 = distinct !DILocation(line: 2368, column: 5, scope: !9220)
!9488 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9487)
!9489 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9487)
!9490 = !DILocation(line: 2368, column: 5, scope: !9221)
!9491 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !9492)
!9492 = distinct !DILocation(line: 2368, column: 5, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 2368, column: 5)
!9494 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9492)
!9495 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9492)
!9496 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9492)
!9497 = !DILocation(line: 2368, column: 5, scope: !9493)
!9498 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9499)
!9499 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9500)
!9500 = distinct !DILocation(line: 2368, column: 5, scope: !9217)
!9501 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9499)
!9502 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9499)
!9503 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9500)
!9504 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9500)
!9505 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9500)
!9506 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9500)
!9507 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9500)
!9508 = !DILocation(line: 2368, column: 5, scope: !9217)
!9509 = !{i32 -2144945277, i32 -2144945264, i32 -2144945239, i32 -2144945215, i32 -2144945190, i32 -2144945115, i32 -2144945090, i32 -2144944946, i32 -2144942723, i32 -2144942634, i32 -2144942513, i32 -2144942418, i32 -2144942317, i32 -2144942290, i32 -2144942207, i32 -2144942118, i32 -2144941997, i32 -2144941897, i32 -2144941791, i32 -2144941683, i32 -2144944658, i32 -2144944605, i32 -2144944574, i32 -2144944543, i32 -2144944522, i32 -2144944500, i32 -2144944451, i32 -2144944430, i32 -2144941600, i32 -2144941511, i32 -2144941390, i32 -2144941291, i32 -2144941185, i32 -2144941083, i32 -2144941050, i32 -2144940977, i32 -2144940909, i32 -2144944056, i32 -2144944003, i32 -2144943972, i32 -2144943941, i32 -2144943920, i32 -2144943898, i32 -2144943849, i32 -2144943828, i32 -2144940854, i32 -2144940765, i32 -2144940644, i32 -2144940545, i32 -2144940439, i32 -2144940337, i32 -2144940304, i32 -2144940221, i32 -2144940132, i32 -2144940011, i32 -2144939911, i32 -2144939885, i32 -2144939782, i32 -2144939756, i32 -2144943570, i32 -2144943503, i32 -2144943478, i32 -2144943414, i32 -2144943298, i32 -2144943273, i32 -2144943248}
!9510 = !DILocation(line: 2370, column: 17, scope: !9202)
!9511 = !DILocation(line: 2370, column: 12, scope: !9202)
!9512 = !DILocation(line: 2370, column: 5, scope: !9202)
!9513 = !DILocation(line: 0, scope: !9202)
!9514 = !DILocation(line: 2371, column: 3, scope: !9142)
!9515 = !DILocation(line: 0, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9517, file: !3, line: 2296, column: 14)
!9517 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2296, column: 7)
!9518 = !DILocation(line: 2377, column: 1, scope: !9142)
!9519 = distinct !DISubprogram(name: "send", scope: !3, file: !3, line: 960, type: !9520, isLocal: false, isDefinition: true, scopeLine: 961, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9522)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{!80, !80, !225, !216, !80}
!9522 = !{!9523, !9524, !9525, !9526, !9527, !9528, !9529, !9535, !9536, !9545}
!9523 = !DILocalVariable(name: "s", arg: 1, scope: !9519, file: !3, line: 960, type: !80)
!9524 = !DILocalVariable(name: "dataptr", arg: 2, scope: !9519, file: !3, line: 960, type: !225)
!9525 = !DILocalVariable(name: "size", arg: 3, scope: !9519, file: !3, line: 960, type: !216)
!9526 = !DILocalVariable(name: "flags", arg: 4, scope: !9519, file: !3, line: 960, type: !80)
!9527 = !DILocalVariable(name: "ret", scope: !9519, file: !3, line: 962, type: !80)
!9528 = !DILocalVariable(name: "file", scope: !9519, file: !3, line: 963, type: !1077)
!9529 = !DILocalVariable(name: "tid", scope: !9530, file: !3, line: 965, type: !170)
!9530 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 965, column: 2)
!9531 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 965, column: 2)
!9532 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 965, column: 2)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 965, column: 2)
!9534 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 965, column: 2)
!9535 = !DILocalVariable(name: "_ret", scope: !9530, file: !3, line: 965, type: !135)
!9536 = !DILocalVariable(name: "tid", scope: !9537, file: !3, line: 970, type: !170)
!9537 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 970, column: 3)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 970, column: 3)
!9539 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 970, column: 3)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 970, column: 3)
!9541 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 970, column: 3)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 970, column: 3)
!9543 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 966, column: 22)
!9544 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 966, column: 6)
!9545 = !DILocalVariable(name: "tid", scope: !9546, file: !3, line: 974, type: !170)
!9546 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 974, column: 2)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 974, column: 2)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 974, column: 2)
!9549 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 974, column: 2)
!9550 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 974, column: 2)
!9551 = !DILocation(line: 960, column: 14, scope: !9519)
!9552 = !DILocation(line: 960, column: 29, scope: !9519)
!9553 = !DILocation(line: 960, column: 45, scope: !9519)
!9554 = !DILocation(line: 960, column: 55, scope: !9519)
!9555 = !DILocation(line: 962, column: 6, scope: !9519)
!9556 = !DILocation(line: 963, column: 2, scope: !9519)
!9557 = !DILocation(line: 963, column: 24, scope: !9519)
!9558 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9559)
!9559 = distinct !DILocation(line: 965, column: 2, scope: !9533)
!9560 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9559)
!9561 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9559)
!9562 = !DILocation(line: 965, column: 2, scope: !9533)
!9563 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9564)
!9564 = distinct !DILocation(line: 965, column: 2, scope: !9533)
!9565 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9564)
!9566 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9564)
!9567 = !DILocation(line: 965, column: 2, scope: !9534)
!9568 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !9569)
!9569 = distinct !DILocation(line: 965, column: 2, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 965, column: 2)
!9571 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !9569)
!9572 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !9569)
!9573 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !9569)
!9574 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !9569)
!9575 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !9569)
!9576 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !9569)
!9577 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !9569)
!9578 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !9569)
!9579 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !9569)
!9580 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !9569)
!9581 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !9569)
!9582 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !9569)
!9583 = !DILocation(line: 0, scope: !3086, inlinedAt: !9569)
!9584 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !9569)
!9585 = !DILocation(line: 965, column: 2, scope: !9570)
!9586 = !DILocation(line: 966, column: 6, scope: !9544)
!9587 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9588)
!9588 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9589)
!9589 = distinct !DILocation(line: 965, column: 2, scope: !9530)
!9590 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9588)
!9591 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9588)
!9592 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9589)
!9593 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9589)
!9594 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9589)
!9595 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9589)
!9596 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9589)
!9597 = !DILocation(line: 965, column: 2, scope: !9530)
!9598 = !{i32 -2145303201, i32 -2145303188, i32 -2145303163, i32 -2145303139, i32 -2145303114, i32 -2145303039, i32 -2145303014, i32 -2145302870, i32 -2145299738, i32 -2145299649, i32 -2145299528, i32 -2145299433, i32 -2145299332, i32 -2145299305, i32 -2145299222, i32 -2145299133, i32 -2145299012, i32 -2145298912, i32 -2145298806, i32 -2145298698, i32 -2145302582, i32 -2145302529, i32 -2145302498, i32 -2145302467, i32 -2145302446, i32 -2145302424, i32 -2145302375, i32 -2145302354, i32 -2145298615, i32 -2145298526, i32 -2145298405, i32 -2145298306, i32 -2145298200, i32 -2145298098, i32 -2145298065, i32 -2145297992, i32 -2145297924, i32 -2145302050, i32 -2145301991, i32 -2145301938, i32 -2145301907, i32 -2145301876, i32 -2145301855, i32 -2145301833, i32 -2145301784, i32 -2145301763, i32 -2145297871, i32 -2145297782, i32 -2145297661, i32 -2145297562, i32 -2145297456, i32 -2145297354, i32 -2145297321, i32 -2145297238, i32 -2145297149, i32 -2145297028, i32 -2145296928, i32 -2145296902, i32 -2145296799, i32 -2145296773, i32 -2145301505, i32 -2145301438, i32 -2145301413, i32 -2145301349, i32 -2145301267, i32 -2145301244, i32 -2145301219, i32 -2145301194}
!9599 = !DILocation(line: 965, column: 2, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 965, column: 2)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 965, column: 2)
!9602 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 965, column: 2)
!9603 = !{i32 -2145300006, i32 -2145299990}
!9604 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9605)
!9605 = distinct !DILocation(line: 970, column: 3, scope: !9540)
!9606 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9605)
!9607 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9605)
!9608 = !DILocation(line: 970, column: 3, scope: !9540)
!9609 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9610)
!9610 = distinct !DILocation(line: 970, column: 3, scope: !9540)
!9611 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9610)
!9612 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9610)
!9613 = !DILocation(line: 970, column: 3, scope: !9541)
!9614 = !DILocation(line: 970, column: 3, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 970, column: 3)
!9616 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !9617)
!9617 = distinct !DILocation(line: 970, column: 3, scope: !9615)
!9618 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !9617)
!9619 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9617)
!9620 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9617)
!9621 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9617)
!9622 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9623)
!9623 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9624)
!9624 = distinct !DILocation(line: 970, column: 3, scope: !9537)
!9625 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9623)
!9626 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9623)
!9627 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9624)
!9628 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9624)
!9629 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9624)
!9630 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9624)
!9631 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9624)
!9632 = !DILocation(line: 970, column: 3, scope: !9537)
!9633 = !{i32 -2145294518, i32 -2145294505, i32 -2145294480, i32 -2145294456, i32 -2145294431, i32 -2145294356, i32 -2145294331, i32 -2145294187, i32 -2145291946, i32 -2145291857, i32 -2145291736, i32 -2145291641, i32 -2145291540, i32 -2145291513, i32 -2145291430, i32 -2145291341, i32 -2145291220, i32 -2145291120, i32 -2145291014, i32 -2145290906, i32 -2145293899, i32 -2145293846, i32 -2145293815, i32 -2145293784, i32 -2145293763, i32 -2145293741, i32 -2145293692, i32 -2145293671, i32 -2145290823, i32 -2145290734, i32 -2145290613, i32 -2145290514, i32 -2145290408, i32 -2145290306, i32 -2145290273, i32 -2145290200, i32 -2145290132, i32 -2145293297, i32 -2145293244, i32 -2145293213, i32 -2145293182, i32 -2145293161, i32 -2145293139, i32 -2145293090, i32 -2145293069, i32 -2145290077, i32 -2145289988, i32 -2145289867, i32 -2145289768, i32 -2145289662, i32 -2145289560, i32 -2145289527, i32 -2145289444, i32 -2145289355, i32 -2145289234, i32 -2145289134, i32 -2145289108, i32 -2145289005, i32 -2145288979, i32 -2145292811, i32 -2145292744, i32 -2145292719, i32 -2145292655, i32 -2145292539, i32 -2145292514, i32 -2145292489}
!9634 = !DILocation(line: 973, column: 24, scope: !9519)
!9635 = !DILocation(line: 973, column: 8, scope: !9519)
!9636 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9637)
!9637 = distinct !DILocation(line: 974, column: 2, scope: !9549)
!9638 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9637)
!9639 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9637)
!9640 = !DILocation(line: 974, column: 2, scope: !9549)
!9641 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9642)
!9642 = distinct !DILocation(line: 974, column: 2, scope: !9549)
!9643 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9642)
!9644 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9642)
!9645 = !DILocation(line: 974, column: 2, scope: !9550)
!9646 = !DILocation(line: 974, column: 2, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 974, column: 2)
!9648 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9649)
!9649 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9650)
!9650 = distinct !DILocation(line: 974, column: 2, scope: !9546)
!9651 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9649)
!9652 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9649)
!9653 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9650)
!9654 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9650)
!9655 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9650)
!9656 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9650)
!9657 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9650)
!9658 = !DILocation(line: 974, column: 2, scope: !9546)
!9659 = !{i32 -2145287015, i32 -2145287002, i32 -2145286977, i32 -2145286953, i32 -2145286928, i32 -2145286853, i32 -2145286828, i32 -2145286684, i32 -2145284457, i32 -2145284368, i32 -2145284247, i32 -2145284152, i32 -2145284051, i32 -2145284024, i32 -2145283941, i32 -2145283852, i32 -2145283731, i32 -2145283631, i32 -2145283525, i32 -2145283417, i32 -2145286396, i32 -2145286343, i32 -2145286312, i32 -2145286281, i32 -2145286260, i32 -2145286238, i32 -2145286189, i32 -2145286168, i32 -2145283334, i32 -2145283245, i32 -2145283124, i32 -2145283025, i32 -2145282919, i32 -2145282817, i32 -2145282784, i32 -2145282711, i32 -2145282643, i32 -2145285794, i32 -2145285741, i32 -2145285710, i32 -2145285679, i32 -2145285658, i32 -2145285636, i32 -2145285587, i32 -2145285566, i32 -2145282591, i32 -2145282502, i32 -2145282381, i32 -2145282282, i32 -2145282176, i32 -2145282074, i32 -2145282041, i32 -2145281958, i32 -2145281869, i32 -2145281748, i32 -2145281648, i32 -2145281622, i32 -2145281519, i32 -2145281493, i32 -2145285308, i32 -2145285241, i32 -2145285216, i32 -2145285152, i32 -2145285036, i32 -2145285011, i32 -2145284986}
!9660 = !DILocation(line: 0, scope: !9519)
!9661 = !DILocation(line: 977, column: 1, scope: !9519)
!9662 = !DILocation(line: 976, column: 2, scope: !9519)
!9663 = distinct !DISubprogram(name: "lwip_send", scope: !3, file: !3, line: 2380, type: !9664, isLocal: false, isDefinition: true, scopeLine: 2381, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9666)
!9664 = !DISubroutineType(types: !9665)
!9665 = !{!206, !80, !225, !216, !80}
!9666 = !{!9667, !9668, !9669, !9670, !9671, !9672, !9673, !9674, !9675, !9677}
!9667 = !DILocalVariable(name: "s", arg: 1, scope: !9663, file: !3, line: 2380, type: !80)
!9668 = !DILocalVariable(name: "data", arg: 2, scope: !9663, file: !3, line: 2380, type: !225)
!9669 = !DILocalVariable(name: "size", arg: 3, scope: !9663, file: !3, line: 2380, type: !216)
!9670 = !DILocalVariable(name: "flags", arg: 4, scope: !9663, file: !3, line: 2380, type: !80)
!9671 = !DILocalVariable(name: "sock", scope: !9663, file: !3, line: 2382, type: !1165)
!9672 = !DILocalVariable(name: "err", scope: !9663, file: !3, line: 2383, type: !1283)
!9673 = !DILocalVariable(name: "write_flags", scope: !9663, file: !3, line: 2384, type: !156)
!9674 = !DILocalVariable(name: "written", scope: !9663, file: !3, line: 2385, type: !216)
!9675 = !DILocalVariable(name: "sockerr", scope: !9676, file: !3, line: 2413, type: !1007)
!9676 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 2413, column: 3)
!9677 = !DILocalVariable(name: "tid", scope: !9678, file: !3, line: 2413, type: !170)
!9678 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 2413, column: 3)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 2413, column: 3)
!9680 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 2413, column: 3)
!9681 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 2413, column: 3)
!9682 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 2413, column: 3)
!9683 = !DILocation(line: 2380, column: 15, scope: !9663)
!9684 = !DILocation(line: 2380, column: 30, scope: !9663)
!9685 = !DILocation(line: 2380, column: 43, scope: !9663)
!9686 = !DILocation(line: 2380, column: 53, scope: !9663)
!9687 = !DILocation(line: 2385, column: 3, scope: !9663)
!9688 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !9689)
!9689 = distinct !DILocation(line: 2390, column: 10, scope: !9663)
!9690 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !9691)
!9691 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !9689)
!9692 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !9693)
!9693 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !9691)
!9694 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !9695)
!9695 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !9693)
!9696 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !9695)
!9697 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !9695)
!9698 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !9695)
!9699 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !9693)
!9700 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !9691)
!9701 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !9695)
!9702 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !9691)
!9703 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !9691)
!9704 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !9691)
!9705 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !9691)
!9706 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9707)
!9707 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !9689)
!9708 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9707)
!9709 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9707)
!9710 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !9689)
!9711 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9712)
!9712 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !9689)
!9713 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9712)
!9714 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9712)
!9715 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !9689)
!9716 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !9717)
!9717 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !9689)
!9718 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9717)
!9719 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9717)
!9720 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9717)
!9721 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !9689)
!9722 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9723)
!9723 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9724)
!9724 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !9689)
!9725 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9723)
!9726 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9723)
!9727 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9724)
!9728 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9724)
!9729 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9724)
!9730 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9724)
!9731 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9724)
!9732 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !9689)
!9733 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !9689)
!9734 = !DILocation(line: 2391, column: 7, scope: !9663)
!9735 = !DILocation(line: 2395, column: 7, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 2395, column: 7)
!9737 = !DILocation(line: 2395, column: 51, scope: !9736)
!9738 = !DILocation(line: 2395, column: 7, scope: !9663)
!9739 = !DILocation(line: 2398, column: 12, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 2395, column: 67)
!9741 = !DILocation(line: 2398, column: 5, scope: !9740)
!9742 = !DILocation(line: 2407, column: 25, scope: !9663)
!9743 = !DILocation(line: 2408, column: 25, scope: !9663)
!9744 = !DILocation(line: 2407, column: 73, scope: !9663)
!9745 = !DILocation(line: 2406, column: 17, scope: !9663)
!9746 = !DILocation(line: 2384, column: 8, scope: !9663)
!9747 = !DILocation(line: 2385, column: 10, scope: !9663)
!9748 = !DILocation(line: 2409, column: 11, scope: !9663)
!9749 = !DILocation(line: 2410, column: 9, scope: !9663)
!9750 = !DILocation(line: 2383, column: 9, scope: !9663)
!9751 = !DILocation(line: 2413, column: 3, scope: !9676)
!9752 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9753)
!9753 = distinct !DILocation(line: 2413, column: 3, scope: !9681)
!9754 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9753)
!9755 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9753)
!9756 = !DILocation(line: 2413, column: 3, scope: !9681)
!9757 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9758)
!9758 = distinct !DILocation(line: 2413, column: 3, scope: !9681)
!9759 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9758)
!9760 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9758)
!9761 = !DILocation(line: 2413, column: 3, scope: !9682)
!9762 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9763)
!9763 = distinct !DILocation(line: 2413, column: 3, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 2413, column: 3)
!9765 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9763)
!9766 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9763)
!9767 = !DILocation(line: 2413, column: 3, scope: !9764)
!9768 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9769)
!9769 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9770)
!9770 = distinct !DILocation(line: 2413, column: 3, scope: !9678)
!9771 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9769)
!9772 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9769)
!9773 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9770)
!9774 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9770)
!9775 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9770)
!9776 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9770)
!9777 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9770)
!9778 = !DILocation(line: 2413, column: 3, scope: !9678)
!9779 = !{i32 -2144937607, i32 -2144937594, i32 -2144937569, i32 -2144937545, i32 -2144937520, i32 -2144937445, i32 -2144937420, i32 -2144937276, i32 -2144935053, i32 -2144934964, i32 -2144934843, i32 -2144934748, i32 -2144934647, i32 -2144934620, i32 -2144934537, i32 -2144934448, i32 -2144934327, i32 -2144934227, i32 -2144934121, i32 -2144934013, i32 -2144936988, i32 -2144936935, i32 -2144936904, i32 -2144936873, i32 -2144936852, i32 -2144936830, i32 -2144936781, i32 -2144936760, i32 -2144933930, i32 -2144933841, i32 -2144933720, i32 -2144933621, i32 -2144933515, i32 -2144933413, i32 -2144933380, i32 -2144933307, i32 -2144933239, i32 -2144936386, i32 -2144936333, i32 -2144936302, i32 -2144936271, i32 -2144936250, i32 -2144936228, i32 -2144936179, i32 -2144936158, i32 -2144933184, i32 -2144933095, i32 -2144932974, i32 -2144932875, i32 -2144932769, i32 -2144932667, i32 -2144932634, i32 -2144932551, i32 -2144932462, i32 -2144932341, i32 -2144932241, i32 -2144932215, i32 -2144932112, i32 -2144932086, i32 -2144935900, i32 -2144935833, i32 -2144935808, i32 -2144935744, i32 -2144935628, i32 -2144935603, i32 -2144935578}
!9780 = !DILocation(line: 2416, column: 15, scope: !9663)
!9781 = !DILocation(line: 2416, column: 36, scope: !9663)
!9782 = !DILocation(line: 2416, column: 11, scope: !9663)
!9783 = !DILocation(line: 2416, column: 3, scope: !9663)
!9784 = !DILocation(line: 0, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 2391, column: 14)
!9786 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 2391, column: 7)
!9787 = !DILocation(line: 2417, column: 1, scope: !9663)
!9788 = distinct !DISubprogram(name: "sendmsg", scope: !3, file: !3, line: 979, type: !9789, isLocal: false, isDefinition: true, scopeLine: 980, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9793)
!9789 = !DISubroutineType(types: !9790)
!9790 = !{!80, !80, !9791, !80}
!9791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9792, size: 64)
!9792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!9793 = !{!9794, !9795, !9796, !9797, !9798, !9799, !9805, !9806, !9815}
!9794 = !DILocalVariable(name: "s", arg: 1, scope: !9788, file: !3, line: 979, type: !80)
!9795 = !DILocalVariable(name: "message", arg: 2, scope: !9788, file: !3, line: 979, type: !9791)
!9796 = !DILocalVariable(name: "flags", arg: 3, scope: !9788, file: !3, line: 979, type: !80)
!9797 = !DILocalVariable(name: "ret", scope: !9788, file: !3, line: 981, type: !80)
!9798 = !DILocalVariable(name: "file", scope: !9788, file: !3, line: 982, type: !1077)
!9799 = !DILocalVariable(name: "tid", scope: !9800, file: !3, line: 984, type: !170)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 984, column: 2)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 984, column: 2)
!9802 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 984, column: 2)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 984, column: 2)
!9804 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 984, column: 2)
!9805 = !DILocalVariable(name: "_ret", scope: !9800, file: !3, line: 984, type: !135)
!9806 = !DILocalVariable(name: "tid", scope: !9807, file: !3, line: 989, type: !170)
!9807 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 989, column: 3)
!9808 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 989, column: 3)
!9809 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 989, column: 3)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 989, column: 3)
!9811 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 989, column: 3)
!9812 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 989, column: 3)
!9813 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 985, column: 22)
!9814 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 985, column: 6)
!9815 = !DILocalVariable(name: "tid", scope: !9816, file: !3, line: 993, type: !170)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 993, column: 2)
!9817 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 993, column: 2)
!9818 = distinct !DILexicalBlock(scope: !9819, file: !3, line: 993, column: 2)
!9819 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 993, column: 2)
!9820 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 993, column: 2)
!9821 = !DILocation(line: 979, column: 17, scope: !9788)
!9822 = !DILocation(line: 979, column: 41, scope: !9788)
!9823 = !DILocation(line: 979, column: 54, scope: !9788)
!9824 = !DILocation(line: 981, column: 6, scope: !9788)
!9825 = !DILocation(line: 982, column: 2, scope: !9788)
!9826 = !DILocation(line: 982, column: 24, scope: !9788)
!9827 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9828)
!9828 = distinct !DILocation(line: 984, column: 2, scope: !9803)
!9829 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9828)
!9830 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9828)
!9831 = !DILocation(line: 984, column: 2, scope: !9803)
!9832 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9833)
!9833 = distinct !DILocation(line: 984, column: 2, scope: !9803)
!9834 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9833)
!9835 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9833)
!9836 = !DILocation(line: 984, column: 2, scope: !9804)
!9837 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !9838)
!9838 = distinct !DILocation(line: 984, column: 2, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 984, column: 2)
!9840 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !9838)
!9841 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !9838)
!9842 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !9838)
!9843 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !9838)
!9844 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !9838)
!9845 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !9838)
!9846 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !9838)
!9847 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !9838)
!9848 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !9838)
!9849 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !9838)
!9850 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !9838)
!9851 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !9838)
!9852 = !DILocation(line: 0, scope: !3086, inlinedAt: !9838)
!9853 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !9838)
!9854 = !DILocation(line: 984, column: 2, scope: !9839)
!9855 = !DILocation(line: 985, column: 6, scope: !9814)
!9856 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9857)
!9857 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9858)
!9858 = distinct !DILocation(line: 984, column: 2, scope: !9800)
!9859 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9857)
!9860 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9857)
!9861 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9858)
!9862 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9858)
!9863 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9858)
!9864 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9858)
!9865 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9858)
!9866 = !DILocation(line: 984, column: 2, scope: !9800)
!9867 = !{i32 -2145279510, i32 -2145279497, i32 -2145279472, i32 -2145279448, i32 -2145279423, i32 -2145279348, i32 -2145279323, i32 -2145279179, i32 -2145276047, i32 -2145275958, i32 -2145275837, i32 -2145275742, i32 -2145275641, i32 -2145275614, i32 -2145275531, i32 -2145275442, i32 -2145275321, i32 -2145275221, i32 -2145275115, i32 -2145275007, i32 -2145278891, i32 -2145278838, i32 -2145278807, i32 -2145278776, i32 -2145278755, i32 -2145278733, i32 -2145278684, i32 -2145278663, i32 -2145274924, i32 -2145274835, i32 -2145274714, i32 -2145274615, i32 -2145274509, i32 -2145274407, i32 -2145274374, i32 -2145274301, i32 -2145274233, i32 -2145278359, i32 -2145278300, i32 -2145278247, i32 -2145278216, i32 -2145278185, i32 -2145278164, i32 -2145278142, i32 -2145278093, i32 -2145278072, i32 -2145274180, i32 -2145274091, i32 -2145273970, i32 -2145273871, i32 -2145273765, i32 -2145273663, i32 -2145273630, i32 -2145273547, i32 -2145273458, i32 -2145273337, i32 -2145273237, i32 -2145273211, i32 -2145273108, i32 -2145273082, i32 -2145277814, i32 -2145277747, i32 -2145277722, i32 -2145277658, i32 -2145277576, i32 -2145277553, i32 -2145277528, i32 -2145277503}
!9868 = !DILocation(line: 984, column: 2, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 984, column: 2)
!9870 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 984, column: 2)
!9871 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 984, column: 2)
!9872 = !{i32 -2145276315, i32 -2145276299}
!9873 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9874)
!9874 = distinct !DILocation(line: 989, column: 3, scope: !9810)
!9875 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9874)
!9876 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9874)
!9877 = !DILocation(line: 989, column: 3, scope: !9810)
!9878 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9879)
!9879 = distinct !DILocation(line: 989, column: 3, scope: !9810)
!9880 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9879)
!9881 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9879)
!9882 = !DILocation(line: 989, column: 3, scope: !9811)
!9883 = !DILocation(line: 989, column: 3, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 989, column: 3)
!9885 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !9886)
!9886 = distinct !DILocation(line: 989, column: 3, scope: !9884)
!9887 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !9886)
!9888 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !9886)
!9889 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !9886)
!9890 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !9886)
!9891 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9892)
!9892 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9893)
!9893 = distinct !DILocation(line: 989, column: 3, scope: !9807)
!9894 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9892)
!9895 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9892)
!9896 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9893)
!9897 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9893)
!9898 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9893)
!9899 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9893)
!9900 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9893)
!9901 = !DILocation(line: 989, column: 3, scope: !9807)
!9902 = !{i32 -2145270827, i32 -2145270814, i32 -2145270789, i32 -2145270765, i32 -2145270740, i32 -2145270665, i32 -2145270640, i32 -2145270496, i32 -2145268255, i32 -2145268166, i32 -2145268045, i32 -2145267950, i32 -2145267849, i32 -2145267822, i32 -2145267739, i32 -2145267650, i32 -2145267529, i32 -2145267429, i32 -2145267323, i32 -2145267215, i32 -2145270208, i32 -2145270155, i32 -2145270124, i32 -2145270093, i32 -2145270072, i32 -2145270050, i32 -2145270001, i32 -2145269980, i32 -2145267132, i32 -2145267043, i32 -2145266922, i32 -2145266823, i32 -2145266717, i32 -2145266615, i32 -2145266582, i32 -2145266509, i32 -2145266441, i32 -2145269606, i32 -2145269553, i32 -2145269522, i32 -2145269491, i32 -2145269470, i32 -2145269448, i32 -2145269399, i32 -2145269378, i32 -2145266386, i32 -2145266297, i32 -2145266176, i32 -2145266077, i32 -2145265971, i32 -2145265869, i32 -2145265836, i32 -2145265753, i32 -2145265664, i32 -2145265543, i32 -2145265443, i32 -2145265417, i32 -2145265314, i32 -2145265288, i32 -2145269120, i32 -2145269053, i32 -2145269028, i32 -2145268964, i32 -2145268848, i32 -2145268823, i32 -2145268798}
!9903 = !DILocation(line: 992, column: 27, scope: !9788)
!9904 = !DILocation(line: 992, column: 8, scope: !9788)
!9905 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9906)
!9906 = distinct !DILocation(line: 993, column: 2, scope: !9819)
!9907 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9906)
!9908 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9906)
!9909 = !DILocation(line: 993, column: 2, scope: !9819)
!9910 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9911)
!9911 = distinct !DILocation(line: 993, column: 2, scope: !9819)
!9912 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9911)
!9913 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9911)
!9914 = !DILocation(line: 993, column: 2, scope: !9820)
!9915 = !DILocation(line: 993, column: 2, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9819, file: !3, line: 993, column: 2)
!9917 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9918)
!9918 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9919)
!9919 = distinct !DILocation(line: 993, column: 2, scope: !9816)
!9920 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9918)
!9921 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9918)
!9922 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9919)
!9923 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9919)
!9924 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9919)
!9925 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9919)
!9926 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9919)
!9927 = !DILocation(line: 993, column: 2, scope: !9816)
!9928 = !{i32 -2145263324, i32 -2145263311, i32 -2145263286, i32 -2145263262, i32 -2145263237, i32 -2145263162, i32 -2145263137, i32 -2145262993, i32 -2145260766, i32 -2145260677, i32 -2145260556, i32 -2145260461, i32 -2145260360, i32 -2145260333, i32 -2145260250, i32 -2145260161, i32 -2145260040, i32 -2145259940, i32 -2145259834, i32 -2145259726, i32 -2145262705, i32 -2145262652, i32 -2145262621, i32 -2145262590, i32 -2145262569, i32 -2145262547, i32 -2145262498, i32 -2145262477, i32 -2145259643, i32 -2145259554, i32 -2145259433, i32 -2145259334, i32 -2145259228, i32 -2145259126, i32 -2145259093, i32 -2145259020, i32 -2145258952, i32 -2145262103, i32 -2145262050, i32 -2145262019, i32 -2145261988, i32 -2145261967, i32 -2145261945, i32 -2145261896, i32 -2145261875, i32 -2145258900, i32 -2145258811, i32 -2145258690, i32 -2145258591, i32 -2145258485, i32 -2145258383, i32 -2145258350, i32 -2145258267, i32 -2145258178, i32 -2145258057, i32 -2145257957, i32 -2145257931, i32 -2145257828, i32 -2145257802, i32 -2145261617, i32 -2145261550, i32 -2145261525, i32 -2145261461, i32 -2145261345, i32 -2145261320, i32 -2145261295}
!9929 = !DILocation(line: 0, scope: !9788)
!9930 = !DILocation(line: 996, column: 1, scope: !9788)
!9931 = !DILocation(line: 995, column: 2, scope: !9788)
!9932 = distinct !DISubprogram(name: "lwip_sendmsg", scope: !3, file: !3, line: 2420, type: !9933, isLocal: false, isDefinition: true, scopeLine: 2421, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9935)
!9933 = !DISubroutineType(types: !9934)
!9934 = !{!206, !80, !9791, !80}
!9935 = !{!9936, !9937, !9938, !9939, !9940, !9941, !9942, !9943, !9948, !9954, !9959, !9965, !9970, !9976, !9981, !9987, !9991, !9997, !9999, !10000, !10001, !10006, !10012, !10015, !10019, !10021, !10027, !10029}
!9936 = !DILocalVariable(name: "s", arg: 1, scope: !9932, file: !3, line: 2420, type: !80)
!9937 = !DILocalVariable(name: "msg", arg: 2, scope: !9932, file: !3, line: 2420, type: !9791)
!9938 = !DILocalVariable(name: "flags", arg: 3, scope: !9932, file: !3, line: 2420, type: !80)
!9939 = !DILocalVariable(name: "sock", scope: !9932, file: !3, line: 2422, type: !1165)
!9940 = !DILocalVariable(name: "write_flags", scope: !9932, file: !3, line: 2424, type: !156)
!9941 = !DILocalVariable(name: "written", scope: !9932, file: !3, line: 2425, type: !216)
!9942 = !DILocalVariable(name: "err", scope: !9932, file: !3, line: 2427, type: !1283)
!9943 = !DILocalVariable(name: "sockerr", scope: !9944, file: !3, line: 2434, type: !1007)
!9944 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 2434, column: 3)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 2434, column: 3)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 2434, column: 3)
!9947 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 2434, column: 3)
!9948 = !DILocalVariable(name: "tid", scope: !9949, file: !3, line: 2434, type: !170)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !3, line: 2434, column: 3)
!9950 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 2434, column: 3)
!9951 = distinct !DILexicalBlock(scope: !9952, file: !3, line: 2434, column: 3)
!9952 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 2434, column: 3)
!9953 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 2434, column: 3)
!9954 = !DILocalVariable(name: "sockerr", scope: !9955, file: !3, line: 2436, type: !1007)
!9955 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 2436, column: 3)
!9956 = distinct !DILexicalBlock(scope: !9957, file: !3, line: 2436, column: 3)
!9957 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 2436, column: 3)
!9958 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 2436, column: 3)
!9959 = !DILocalVariable(name: "tid", scope: !9960, file: !3, line: 2436, type: !170)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 2436, column: 3)
!9961 = distinct !DILexicalBlock(scope: !9962, file: !3, line: 2436, column: 3)
!9962 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 2436, column: 3)
!9963 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 2436, column: 3)
!9964 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 2436, column: 3)
!9965 = !DILocalVariable(name: "sockerr", scope: !9966, file: !3, line: 2438, type: !1007)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 2438, column: 3)
!9967 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2438, column: 3)
!9968 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 2438, column: 3)
!9969 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 2438, column: 3)
!9970 = !DILocalVariable(name: "tid", scope: !9971, file: !3, line: 2438, type: !170)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 2438, column: 3)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 2438, column: 3)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 2438, column: 3)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 2438, column: 3)
!9975 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 2438, column: 3)
!9976 = !DILocalVariable(name: "sockerr", scope: !9977, file: !3, line: 2440, type: !1007)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 2440, column: 3)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 2440, column: 3)
!9979 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 2440, column: 3)
!9980 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 2440, column: 3)
!9981 = !DILocalVariable(name: "tid", scope: !9982, file: !3, line: 2440, type: !170)
!9982 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 2440, column: 3)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 2440, column: 3)
!9984 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 2440, column: 3)
!9985 = distinct !DILexicalBlock(scope: !9986, file: !3, line: 2440, column: 3)
!9986 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 2440, column: 3)
!9987 = !DILocalVariable(name: "sockerr", scope: !9988, file: !3, line: 2455, type: !1007)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 2455, column: 5)
!9989 = distinct !DILexicalBlock(scope: !9990, file: !3, line: 2447, column: 67)
!9990 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 2447, column: 7)
!9991 = !DILocalVariable(name: "tid", scope: !9992, file: !3, line: 2455, type: !170)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 2455, column: 5)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 2455, column: 5)
!9994 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 2455, column: 5)
!9995 = distinct !DILexicalBlock(scope: !9996, file: !3, line: 2455, column: 5)
!9996 = distinct !DILexicalBlock(scope: !9988, file: !3, line: 2455, column: 5)
!9997 = !DILocalVariable(name: "chain_buf", scope: !9998, file: !3, line: 2468, type: !1371)
!9998 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 2467, column: 3)
!9999 = !DILocalVariable(name: "i", scope: !9998, file: !3, line: 2469, type: !80)
!10000 = !DILocalVariable(name: "size", scope: !9998, file: !3, line: 2470, type: !206)
!10001 = !DILocalVariable(name: "sockerr", scope: !10002, file: !3, line: 2473, type: !1007)
!10002 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 2473, column: 5)
!10003 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2473, column: 5)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 2473, column: 5)
!10005 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2473, column: 5)
!10006 = !DILocalVariable(name: "tid", scope: !10007, file: !3, line: 2473, type: !170)
!10007 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 2473, column: 5)
!10008 = distinct !DILexicalBlock(scope: !10009, file: !3, line: 2473, column: 5)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 2473, column: 5)
!10010 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 2473, column: 5)
!10011 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 2473, column: 5)
!10012 = !DILocalVariable(name: "remote_port", scope: !10013, file: !3, line: 2480, type: !164)
!10013 = distinct !DILexicalBlock(scope: !10014, file: !3, line: 2479, column: 24)
!10014 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2479, column: 9)
!10015 = !DILocalVariable(name: "p", scope: !10016, file: !3, line: 2519, type: !1252)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 2518, column: 43)
!10017 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 2518, column: 5)
!10018 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2518, column: 5)
!10019 = !DILocalVariable(name: "sockerr", scope: !10020, file: !3, line: 2566, type: !1007)
!10020 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2566, column: 5)
!10021 = !DILocalVariable(name: "tid", scope: !10022, file: !3, line: 2566, type: !170)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 2566, column: 5)
!10023 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 2566, column: 5)
!10024 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 2566, column: 5)
!10025 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 2566, column: 5)
!10026 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 2566, column: 5)
!10027 = !DILocalVariable(name: "sockerr", scope: !10028, file: !3, line: 2570, type: !1007)
!10028 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2570, column: 5)
!10029 = !DILocalVariable(name: "tid", scope: !10030, file: !3, line: 2570, type: !170)
!10030 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 2570, column: 5)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 2570, column: 5)
!10032 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 2570, column: 5)
!10033 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 2570, column: 5)
!10034 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 2570, column: 5)
!10035 = !DILocation(line: 2420, column: 18, scope: !9932)
!10036 = !DILocation(line: 2420, column: 42, scope: !9932)
!10037 = !DILocation(line: 2420, column: 51, scope: !9932)
!10038 = !DILocation(line: 2425, column: 3, scope: !9932)
!10039 = !DILocation(line: 2427, column: 9, scope: !9932)
!10040 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !10041)
!10041 = distinct !DILocation(line: 2429, column: 10, scope: !9932)
!10042 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !10043)
!10043 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !10041)
!10044 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !10045)
!10045 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !10043)
!10046 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !10047)
!10047 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !10045)
!10048 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !10047)
!10049 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !10047)
!10050 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !10047)
!10051 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !10045)
!10052 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !10043)
!10053 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !10047)
!10054 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !10043)
!10055 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !10043)
!10056 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !10043)
!10057 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !10043)
!10058 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10059)
!10059 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !10041)
!10060 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10059)
!10061 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10059)
!10062 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !10041)
!10063 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10064)
!10064 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !10041)
!10065 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10064)
!10066 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10064)
!10067 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !10041)
!10068 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !10069)
!10069 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !10041)
!10070 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !10069)
!10071 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !10069)
!10072 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !10069)
!10073 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !10041)
!10074 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10075)
!10075 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10076)
!10076 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !10041)
!10077 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10075)
!10078 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10075)
!10079 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10076)
!10080 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10076)
!10081 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10076)
!10082 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10076)
!10083 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10076)
!10084 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !10041)
!10085 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !10041)
!10086 = !DILocation(line: 2430, column: 7, scope: !9932)
!10087 = !DILocation(line: 2434, column: 3, scope: !9946)
!10088 = !DILocation(line: 2434, column: 3, scope: !9947)
!10089 = !DILocation(line: 2434, column: 3, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 2434, column: 3)
!10091 = !DILocation(line: 2434, column: 3, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10093, file: !3, line: 2434, column: 3)
!10093 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 2434, column: 3)
!10094 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 2434, column: 3)
!10095 = !DILocation(line: 2436, column: 3, scope: !9957)
!10096 = !DILocation(line: 2436, column: 3, scope: !9958)
!10097 = !DILocation(line: 2436, column: 3, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 2436, column: 3)
!10099 = !DILocation(line: 2436, column: 3, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 2436, column: 3)
!10101 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 2436, column: 3)
!10102 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 2436, column: 3)
!10103 = !DILocation(line: 2438, column: 3, scope: !9968)
!10104 = !DILocation(line: 2438, column: 3, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 2438, column: 3)
!10106 = !DILocation(line: 2438, column: 3, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10108, file: !3, line: 2438, column: 3)
!10108 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 2438, column: 3)
!10109 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 2438, column: 3)
!10110 = !DILocation(line: 2440, column: 3, scope: !9979)
!10111 = !DILocation(line: 2440, column: 3, scope: !9980)
!10112 = !DILocation(line: 2440, column: 3, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 2440, column: 3)
!10114 = !DILocation(line: 2440, column: 3, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 2440, column: 3)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 2440, column: 3)
!10117 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 2440, column: 3)
!10118 = !DILocation(line: 2447, column: 7, scope: !9990)
!10119 = !DILocation(line: 2447, column: 51, scope: !9990)
!10120 = !DILocation(line: 2447, column: 7, scope: !9932)
!10121 = !DILocation(line: 2450, column: 27, scope: !9989)
!10122 = !DILocation(line: 2451, column: 27, scope: !9989)
!10123 = !DILocation(line: 2450, column: 75, scope: !9989)
!10124 = !DILocation(line: 2449, column: 19, scope: !9989)
!10125 = !DILocation(line: 2424, column: 8, scope: !9932)
!10126 = !DILocation(line: 2425, column: 10, scope: !9932)
!10127 = !DILocation(line: 2453, column: 13, scope: !9989)
!10128 = !DILocation(line: 2454, column: 86, scope: !9989)
!10129 = !DILocation(line: 2454, column: 11, scope: !9989)
!10130 = !DILocation(line: 2455, column: 5, scope: !9988)
!10131 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10132)
!10132 = distinct !DILocation(line: 2455, column: 5, scope: !9995)
!10133 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10132)
!10134 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10132)
!10135 = !DILocation(line: 2455, column: 5, scope: !9995)
!10136 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10137)
!10137 = distinct !DILocation(line: 2455, column: 5, scope: !9995)
!10138 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10137)
!10139 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10137)
!10140 = !DILocation(line: 2455, column: 5, scope: !9996)
!10141 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !10142)
!10142 = distinct !DILocation(line: 2455, column: 5, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 2455, column: 5)
!10144 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !10142)
!10145 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !10142)
!10146 = !DILocation(line: 2455, column: 5, scope: !10143)
!10147 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10148)
!10148 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10149)
!10149 = distinct !DILocation(line: 2455, column: 5, scope: !9992)
!10150 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10148)
!10151 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10148)
!10152 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10149)
!10153 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10149)
!10154 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10149)
!10155 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10149)
!10156 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10149)
!10157 = !DILocation(line: 2455, column: 5, scope: !9992)
!10158 = !{i32 -2144886236, i32 -2144886223, i32 -2144886198, i32 -2144886174, i32 -2144886149, i32 -2144886074, i32 -2144886049, i32 -2144885905, i32 -2144883682, i32 -2144883593, i32 -2144883472, i32 -2144883377, i32 -2144883276, i32 -2144883249, i32 -2144883166, i32 -2144883077, i32 -2144882956, i32 -2144882856, i32 -2144882750, i32 -2144882642, i32 -2144885617, i32 -2144885564, i32 -2144885533, i32 -2144885502, i32 -2144885481, i32 -2144885459, i32 -2144885410, i32 -2144885389, i32 -2144882559, i32 -2144882470, i32 -2144882349, i32 -2144882250, i32 -2144882144, i32 -2144882042, i32 -2144882009, i32 -2144881936, i32 -2144881868, i32 -2144885015, i32 -2144884962, i32 -2144884931, i32 -2144884900, i32 -2144884879, i32 -2144884857, i32 -2144884808, i32 -2144884787, i32 -2144881813, i32 -2144881724, i32 -2144881603, i32 -2144881504, i32 -2144881398, i32 -2144881296, i32 -2144881263, i32 -2144881180, i32 -2144881091, i32 -2144880970, i32 -2144880870, i32 -2144880844, i32 -2144880741, i32 -2144880715, i32 -2144884529, i32 -2144884462, i32 -2144884437, i32 -2144884373, i32 -2144884257, i32 -2144884232, i32 -2144884207}
!10159 = !DILocation(line: 2458, column: 17, scope: !9989)
!10160 = !DILocation(line: 2458, column: 38, scope: !9989)
!10161 = !DILocation(line: 2458, column: 13, scope: !9989)
!10162 = !DILocation(line: 2458, column: 5, scope: !9989)
!10163 = !DILocation(line: 2468, column: 5, scope: !9998)
!10164 = !DILocation(line: 2470, column: 13, scope: !9998)
!10165 = !DILocation(line: 2473, column: 5, scope: !10004)
!10166 = !DILocation(line: 2473, column: 5, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 2473, column: 5)
!10168 = !DILocation(line: 2473, column: 5, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 2473, column: 5)
!10170 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 2473, column: 5)
!10171 = distinct !DILexicalBlock(scope: !10167, file: !3, line: 2473, column: 5)
!10172 = !DILocation(line: 2478, column: 5, scope: !9998)
!10173 = !DILocation(line: 2479, column: 14, scope: !10014)
!10174 = !DILocation(line: 2479, column: 9, scope: !10014)
!10175 = !DILocation(line: 2479, column: 9, scope: !9998)
!10176 = !DILocation(line: 2481, column: 7, scope: !10013)
!10177 = !DILocation(line: 1304, column: 48, scope: !3971, inlinedAt: !10178)
!10178 = distinct !DILocation(line: 2481, column: 7, scope: !10013)
!10179 = !DILocation(line: 1304, column: 69, scope: !3971, inlinedAt: !10178)
!10180 = !DILocation(line: 1306, column: 18, scope: !3983, inlinedAt: !10178)
!10181 = !DILocation(line: 1306, column: 29, scope: !3983, inlinedAt: !10178)
!10182 = !DILocation(line: 1306, column: 7, scope: !3971, inlinedAt: !10178)
!10183 = !DILocation(line: 1307, column: 5, scope: !3986, inlinedAt: !10178)
!10184 = !DILocation(line: 1307, column: 5, scope: !3990, inlinedAt: !10178)
!10185 = !DILocation(line: 1307, column: 5, scope: !3992, inlinedAt: !10178)
!10186 = !DILocation(line: 1310, column: 5, scope: !3994, inlinedAt: !10178)
!10187 = !DILocation(line: 0, scope: !10013)
!10188 = !DILocation(line: 1313, column: 1, scope: !3971, inlinedAt: !10178)
!10189 = !DILocation(line: 2480, column: 13, scope: !10013)
!10190 = !DILocation(line: 2482, column: 7, scope: !10013)
!10191 = !DILocation(line: 2482, column: 35, scope: !10013)
!10192 = !{!10193, !1604, i64 40}
!10193 = !{!"netbuf", !1408, i64 0, !1408, i64 8, !1701, i64 16, !1604, i64 40}
!10194 = !DILocation(line: 2483, column: 5, scope: !10013)
!10195 = !DILocation(line: 2469, column: 9, scope: !9998)
!10196 = !DILocation(line: 2518, column: 26, scope: !10017)
!10197 = !DILocation(line: 2518, column: 19, scope: !10017)
!10198 = !DILocation(line: 2518, column: 5, scope: !10018)
!10199 = !DILocation(line: 2520, column: 16, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 2520, column: 11)
!10201 = !DILocation(line: 2520, column: 27, scope: !10200)
!10202 = !DILocation(line: 2520, column: 35, scope: !10200)
!10203 = !DILocation(line: 2520, column: 11, scope: !10016)
!10204 = !DILocation(line: 2524, column: 11, scope: !10016)
!10205 = !DILocation(line: 2519, column: 20, scope: !10016)
!10206 = !DILocation(line: 2525, column: 13, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 2525, column: 11)
!10208 = !DILocation(line: 2525, column: 11, scope: !10016)
!10209 = !DILocation(line: 2529, column: 25, scope: !10016)
!10210 = !DILocation(line: 2529, column: 36, scope: !10016)
!10211 = !DILocation(line: 2529, column: 10, scope: !10016)
!10212 = !DILocation(line: 2529, column: 18, scope: !10016)
!10213 = !{!10214, !1408, i64 8}
!10214 = !{!"pbuf", !1408, i64 0, !1408, i64 8, !1604, i64 16, !1604, i64 18, !1405, i64 20, !1405, i64 21, !1405, i64 22, !1405, i64 23}
!10215 = !DILocation(line: 2530, column: 52, scope: !10016)
!10216 = !DILocation(line: 2530, column: 29, scope: !10016)
!10217 = !DILocation(line: 2530, column: 19, scope: !10016)
!10218 = !DILocation(line: 2530, column: 27, scope: !10016)
!10219 = !{!10214, !1604, i64 16}
!10220 = !DILocation(line: 2530, column: 10, scope: !10016)
!10221 = !DILocation(line: 2530, column: 14, scope: !10016)
!10222 = !{!10214, !1604, i64 18}
!10223 = !DILocation(line: 2532, column: 21, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 2532, column: 11)
!10225 = !{!10193, !1408, i64 0}
!10226 = !DILocation(line: 2532, column: 23, scope: !10224)
!10227 = !DILocation(line: 2532, column: 11, scope: !10016)
!10228 = !DILocation(line: 2533, column: 37, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10224, file: !3, line: 2532, column: 32)
!10230 = !{!10193, !1408, i64 8}
!10231 = !DILocation(line: 2533, column: 21, scope: !10229)
!10232 = !DILocation(line: 2535, column: 7, scope: !10229)
!10233 = !DILocation(line: 2536, column: 26, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 2536, column: 13)
!10235 = distinct !DILexicalBlock(scope: !10224, file: !3, line: 2535, column: 14)
!10236 = !DILocation(line: 2536, column: 13, scope: !10234)
!10237 = !DILocation(line: 2536, column: 36, scope: !10234)
!10238 = !DILocation(line: 2536, column: 34, scope: !10234)
!10239 = !DILocation(line: 2536, column: 43, scope: !10234)
!10240 = !DILocation(line: 2536, column: 13, scope: !10235)
!10241 = !DILocation(line: 2538, column: 11, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 2536, column: 53)
!10243 = !DILocation(line: 2539, column: 11, scope: !10242)
!10244 = !DILocation(line: 2541, column: 9, scope: !10235)
!10245 = !DILocation(line: 2518, column: 39, scope: !10017)
!10246 = distinct !{!10246, !10198, !10247}
!10247 = !DILocation(line: 2543, column: 5, scope: !10018)
!10248 = !DILocation(line: 2546, column: 14, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10250, file: !3, line: 2545, column: 24)
!10250 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2545, column: 9)
!10251 = !DILocation(line: 2553, column: 11, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10253, file: !3, line: 2553, column: 11)
!10253 = distinct !DILexicalBlock(scope: !10254, file: !3, line: 2550, column: 24)
!10254 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2550, column: 9)
!10255 = !{!10193, !1405, i64 36}
!10256 = !DILocation(line: 2553, column: 40, scope: !10252)
!10257 = !DILocation(line: 2553, column: 43, scope: !10252)
!10258 = !DILocation(line: 2553, column: 11, scope: !10253)
!10259 = !DILocation(line: 2554, column: 9, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 2553, column: 97)
!10261 = !DILocation(line: 2555, column: 9, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10260, file: !3, line: 2555, column: 9)
!10263 = !DILocation(line: 2556, column: 7, scope: !10260)
!10264 = !DILocation(line: 2560, column: 32, scope: !10253)
!10265 = !DILocation(line: 2468, column: 19, scope: !9998)
!10266 = !DILocation(line: 2560, column: 13, scope: !10253)
!10267 = !DILocation(line: 2561, column: 5, scope: !10253)
!10268 = !DILocation(line: 0, scope: !9932)
!10269 = !DILocation(line: 2564, column: 5, scope: !9998)
!10270 = !DILocation(line: 2566, column: 5, scope: !10020)
!10271 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10272)
!10272 = distinct !DILocation(line: 2566, column: 5, scope: !10025)
!10273 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10272)
!10274 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10272)
!10275 = !DILocation(line: 2566, column: 5, scope: !10025)
!10276 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10277)
!10277 = distinct !DILocation(line: 2566, column: 5, scope: !10025)
!10278 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10277)
!10279 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10277)
!10280 = !DILocation(line: 2566, column: 5, scope: !10026)
!10281 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !10282)
!10282 = distinct !DILocation(line: 2566, column: 5, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 2566, column: 5)
!10284 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !10282)
!10285 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !10282)
!10286 = !DILocation(line: 2566, column: 5, scope: !10283)
!10287 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10288)
!10288 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10289)
!10289 = distinct !DILocation(line: 2566, column: 5, scope: !10022)
!10290 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10288)
!10291 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10288)
!10292 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10289)
!10293 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10289)
!10294 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10289)
!10295 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10289)
!10296 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10289)
!10297 = !DILocation(line: 2566, column: 5, scope: !10022)
!10298 = !{i32 -2144866257, i32 -2144866244, i32 -2144866219, i32 -2144866195, i32 -2144866170, i32 -2144866095, i32 -2144866070, i32 -2144865926, i32 -2144863703, i32 -2144863614, i32 -2144863493, i32 -2144863398, i32 -2144863297, i32 -2144863270, i32 -2144863187, i32 -2144863098, i32 -2144862977, i32 -2144862877, i32 -2144862771, i32 -2144862663, i32 -2144865638, i32 -2144865585, i32 -2144865554, i32 -2144865523, i32 -2144865502, i32 -2144865480, i32 -2144865431, i32 -2144865410, i32 -2144862580, i32 -2144862491, i32 -2144862370, i32 -2144862271, i32 -2144862165, i32 -2144862063, i32 -2144862030, i32 -2144861957, i32 -2144861889, i32 -2144865036, i32 -2144864983, i32 -2144864952, i32 -2144864921, i32 -2144864900, i32 -2144864878, i32 -2144864829, i32 -2144864808, i32 -2144861834, i32 -2144861745, i32 -2144861624, i32 -2144861525, i32 -2144861419, i32 -2144861317, i32 -2144861284, i32 -2144861201, i32 -2144861112, i32 -2144860991, i32 -2144860891, i32 -2144860865, i32 -2144860762, i32 -2144860736, i32 -2144864550, i32 -2144864483, i32 -2144864458, i32 -2144864394, i32 -2144864278, i32 -2144864253, i32 -2144864228}
!10299 = !DILocation(line: 2568, column: 17, scope: !9998)
!10300 = !DILocation(line: 2568, column: 13, scope: !9998)
!10301 = !DILocation(line: 2568, column: 5, scope: !9998)
!10302 = !DILocation(line: 2570, column: 5, scope: !10028)
!10303 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10304)
!10304 = distinct !DILocation(line: 2570, column: 5, scope: !10033)
!10305 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10304)
!10306 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10304)
!10307 = !DILocation(line: 2570, column: 5, scope: !10033)
!10308 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10309)
!10309 = distinct !DILocation(line: 2570, column: 5, scope: !10033)
!10310 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10309)
!10311 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10309)
!10312 = !DILocation(line: 2570, column: 5, scope: !10034)
!10313 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !10314)
!10314 = distinct !DILocation(line: 2570, column: 5, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 2570, column: 5)
!10316 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !10314)
!10317 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !10314)
!10318 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !10314)
!10319 = !DILocation(line: 2570, column: 5, scope: !10315)
!10320 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10321)
!10321 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10322)
!10322 = distinct !DILocation(line: 2570, column: 5, scope: !10030)
!10323 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10321)
!10324 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10321)
!10325 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10322)
!10326 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10322)
!10327 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10322)
!10328 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10322)
!10329 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10322)
!10330 = !DILocation(line: 2570, column: 5, scope: !10030)
!10331 = !{i32 -2144858694, i32 -2144858681, i32 -2144858656, i32 -2144858632, i32 -2144858607, i32 -2144858532, i32 -2144858507, i32 -2144858363, i32 -2144856140, i32 -2144856051, i32 -2144855930, i32 -2144855835, i32 -2144855734, i32 -2144855707, i32 -2144855624, i32 -2144855535, i32 -2144855414, i32 -2144855314, i32 -2144855208, i32 -2144855100, i32 -2144858075, i32 -2144858022, i32 -2144857991, i32 -2144857960, i32 -2144857939, i32 -2144857917, i32 -2144857868, i32 -2144857847, i32 -2144855017, i32 -2144854928, i32 -2144854807, i32 -2144854708, i32 -2144854602, i32 -2144854500, i32 -2144854467, i32 -2144854394, i32 -2144854326, i32 -2144857473, i32 -2144857420, i32 -2144857389, i32 -2144857358, i32 -2144857337, i32 -2144857315, i32 -2144857266, i32 -2144857245, i32 -2144854271, i32 -2144854182, i32 -2144854061, i32 -2144853962, i32 -2144853856, i32 -2144853754, i32 -2144853721, i32 -2144853638, i32 -2144853549, i32 -2144853428, i32 -2144853328, i32 -2144853302, i32 -2144853199, i32 -2144853173, i32 -2144856987, i32 -2144856920, i32 -2144856895, i32 -2144856831, i32 -2144856715, i32 -2144856690, i32 -2144856665}
!10332 = !DILocation(line: 2571, column: 5, scope: !9998)
!10333 = !DILocation(line: 2573, column: 5, scope: !9998)
!10334 = !DILocation(line: 2574, column: 3, scope: !9932)
!10335 = !DILocation(line: 2580, column: 1, scope: !9932)
!10336 = distinct !DISubprogram(name: "sendto", scope: !3, file: !3, line: 998, type: !10337, isLocal: false, isDefinition: true, scopeLine: 1000, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10339)
!10337 = !DISubroutineType(types: !10338)
!10338 = !{!80, !80, !225, !216, !80, !228, !1890}
!10339 = !{!10340, !10341, !10342, !10343, !10344, !10345, !10346, !10347, !10348, !10354, !10355, !10364}
!10340 = !DILocalVariable(name: "s", arg: 1, scope: !10336, file: !3, line: 998, type: !80)
!10341 = !DILocalVariable(name: "dataptr", arg: 2, scope: !10336, file: !3, line: 998, type: !225)
!10342 = !DILocalVariable(name: "size", arg: 3, scope: !10336, file: !3, line: 998, type: !216)
!10343 = !DILocalVariable(name: "flags", arg: 4, scope: !10336, file: !3, line: 998, type: !80)
!10344 = !DILocalVariable(name: "to", arg: 5, scope: !10336, file: !3, line: 999, type: !228)
!10345 = !DILocalVariable(name: "tolen", arg: 6, scope: !10336, file: !3, line: 999, type: !1890)
!10346 = !DILocalVariable(name: "ret", scope: !10336, file: !3, line: 1001, type: !80)
!10347 = !DILocalVariable(name: "file", scope: !10336, file: !3, line: 1002, type: !1077)
!10348 = !DILocalVariable(name: "tid", scope: !10349, file: !3, line: 1004, type: !170)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1004, column: 2)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 1004, column: 2)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 1004, column: 2)
!10352 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 1004, column: 2)
!10353 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 1004, column: 2)
!10354 = !DILocalVariable(name: "_ret", scope: !10349, file: !3, line: 1004, type: !135)
!10355 = !DILocalVariable(name: "tid", scope: !10356, file: !3, line: 1009, type: !170)
!10356 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 1009, column: 3)
!10357 = distinct !DILexicalBlock(scope: !10358, file: !3, line: 1009, column: 3)
!10358 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 1009, column: 3)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 1009, column: 3)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 1009, column: 3)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !3, line: 1009, column: 3)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 1005, column: 22)
!10363 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 1005, column: 6)
!10364 = !DILocalVariable(name: "tid", scope: !10365, file: !3, line: 1013, type: !170)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 1013, column: 2)
!10366 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1013, column: 2)
!10367 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 1013, column: 2)
!10368 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 1013, column: 2)
!10369 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 1013, column: 2)
!10370 = !DILocation(line: 998, column: 16, scope: !10336)
!10371 = !DILocation(line: 998, column: 31, scope: !10336)
!10372 = !DILocation(line: 998, column: 47, scope: !10336)
!10373 = !DILocation(line: 998, column: 57, scope: !10336)
!10374 = !DILocation(line: 999, column: 30, scope: !10336)
!10375 = !DILocation(line: 999, column: 44, scope: !10336)
!10376 = !DILocation(line: 1001, column: 6, scope: !10336)
!10377 = !DILocation(line: 1002, column: 2, scope: !10336)
!10378 = !DILocation(line: 1002, column: 24, scope: !10336)
!10379 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10380)
!10380 = distinct !DILocation(line: 1004, column: 2, scope: !10352)
!10381 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10380)
!10382 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10380)
!10383 = !DILocation(line: 1004, column: 2, scope: !10352)
!10384 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10385)
!10385 = distinct !DILocation(line: 1004, column: 2, scope: !10352)
!10386 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10385)
!10387 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10385)
!10388 = !DILocation(line: 1004, column: 2, scope: !10353)
!10389 = !DILocation(line: 166, column: 45, scope: !3059, inlinedAt: !10390)
!10390 = distinct !DILocation(line: 1004, column: 2, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 1004, column: 2)
!10392 = !DILocation(line: 168, column: 24, scope: !3059, inlinedAt: !10390)
!10393 = !DILocation(line: 171, column: 8, scope: !3059, inlinedAt: !10390)
!10394 = !DILocation(line: 169, column: 23, scope: !3059, inlinedAt: !10390)
!10395 = !DILocation(line: 172, column: 7, scope: !3072, inlinedAt: !10390)
!10396 = !DILocation(line: 172, column: 6, scope: !3059, inlinedAt: !10390)
!10397 = !DILocation(line: 178, column: 11, scope: !3075, inlinedAt: !10390)
!10398 = !DILocation(line: 178, column: 21, scope: !3075, inlinedAt: !10390)
!10399 = !DILocation(line: 178, column: 30, scope: !3075, inlinedAt: !10390)
!10400 = !DILocation(line: 178, column: 37, scope: !3075, inlinedAt: !10390)
!10401 = !DILocation(line: 178, column: 6, scope: !3059, inlinedAt: !10390)
!10402 = !DILocation(line: 184, column: 14, scope: !3059, inlinedAt: !10390)
!10403 = !DILocation(line: 184, column: 2, scope: !3059, inlinedAt: !10390)
!10404 = !DILocation(line: 0, scope: !3086, inlinedAt: !10390)
!10405 = !DILocation(line: 186, column: 2, scope: !3059, inlinedAt: !10390)
!10406 = !DILocation(line: 1004, column: 2, scope: !10391)
!10407 = !DILocation(line: 1005, column: 6, scope: !10363)
!10408 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10409)
!10409 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10410)
!10410 = distinct !DILocation(line: 1004, column: 2, scope: !10349)
!10411 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10409)
!10412 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10409)
!10413 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10410)
!10414 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10410)
!10415 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10410)
!10416 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10410)
!10417 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10410)
!10418 = !DILocation(line: 1004, column: 2, scope: !10349)
!10419 = !{i32 -2145255815, i32 -2145255802, i32 -2145255777, i32 -2145255753, i32 -2145255728, i32 -2145255653, i32 -2145255628, i32 -2145255484, i32 -2145252352, i32 -2145252263, i32 -2145252142, i32 -2145252047, i32 -2145251946, i32 -2145251919, i32 -2145251836, i32 -2145251747, i32 -2145251626, i32 -2145251526, i32 -2145251420, i32 -2145251312, i32 -2145255196, i32 -2145255143, i32 -2145255112, i32 -2145255081, i32 -2145255060, i32 -2145255038, i32 -2145254989, i32 -2145254968, i32 -2145251229, i32 -2145251140, i32 -2145251019, i32 -2145250920, i32 -2145250814, i32 -2145250712, i32 -2145250679, i32 -2145250606, i32 -2145250538, i32 -2145254664, i32 -2145254605, i32 -2145254552, i32 -2145254521, i32 -2145254490, i32 -2145254469, i32 -2145254447, i32 -2145254398, i32 -2145254377, i32 -2145250485, i32 -2145250396, i32 -2145250275, i32 -2145250176, i32 -2145250070, i32 -2145249968, i32 -2145249935, i32 -2145249852, i32 -2145249763, i32 -2145249642, i32 -2145249542, i32 -2145249516, i32 -2145249413, i32 -2145249387, i32 -2145254119, i32 -2145254052, i32 -2145254027, i32 -2145253963, i32 -2145253881, i32 -2145253858, i32 -2145253833, i32 -2145253808}
!10420 = !DILocation(line: 1004, column: 2, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 1004, column: 2)
!10422 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 1004, column: 2)
!10423 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 1004, column: 2)
!10424 = !{i32 -2145252620, i32 -2145252604}
!10425 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10426)
!10426 = distinct !DILocation(line: 1009, column: 3, scope: !10359)
!10427 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10426)
!10428 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10426)
!10429 = !DILocation(line: 1009, column: 3, scope: !10359)
!10430 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10431)
!10431 = distinct !DILocation(line: 1009, column: 3, scope: !10359)
!10432 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10431)
!10433 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10431)
!10434 = !DILocation(line: 1009, column: 3, scope: !10360)
!10435 = !DILocation(line: 1009, column: 3, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 1009, column: 3)
!10437 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !10438)
!10438 = distinct !DILocation(line: 1009, column: 3, scope: !10436)
!10439 = !DILocation(line: 90, column: 11, scope: !1620, inlinedAt: !10438)
!10440 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !10438)
!10441 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !10438)
!10442 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !10438)
!10443 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10444)
!10444 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10445)
!10445 = distinct !DILocation(line: 1009, column: 3, scope: !10356)
!10446 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10444)
!10447 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10444)
!10448 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10445)
!10449 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10445)
!10450 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10445)
!10451 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10445)
!10452 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10445)
!10453 = !DILocation(line: 1009, column: 3, scope: !10356)
!10454 = !{i32 -2145247128, i32 -2145247115, i32 -2145247090, i32 -2145247066, i32 -2145247041, i32 -2145246966, i32 -2145246941, i32 -2145246797, i32 -2145244556, i32 -2145244467, i32 -2145244346, i32 -2145244251, i32 -2145244150, i32 -2145244123, i32 -2145244040, i32 -2145243951, i32 -2145243830, i32 -2145243730, i32 -2145243624, i32 -2145243516, i32 -2145246509, i32 -2145246456, i32 -2145246425, i32 -2145246394, i32 -2145246373, i32 -2145246351, i32 -2145246302, i32 -2145246281, i32 -2145243433, i32 -2145243344, i32 -2145243223, i32 -2145243124, i32 -2145243018, i32 -2145242916, i32 -2145242883, i32 -2145242810, i32 -2145242742, i32 -2145245907, i32 -2145245854, i32 -2145245823, i32 -2145245792, i32 -2145245771, i32 -2145245749, i32 -2145245700, i32 -2145245679, i32 -2145242687, i32 -2145242598, i32 -2145242477, i32 -2145242378, i32 -2145242272, i32 -2145242170, i32 -2145242137, i32 -2145242054, i32 -2145241965, i32 -2145241844, i32 -2145241744, i32 -2145241718, i32 -2145241615, i32 -2145241589, i32 -2145245421, i32 -2145245354, i32 -2145245329, i32 -2145245265, i32 -2145245149, i32 -2145245124, i32 -2145245099}
!10455 = !DILocation(line: 1012, column: 26, scope: !10336)
!10456 = !DILocation(line: 1012, column: 8, scope: !10336)
!10457 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10458)
!10458 = distinct !DILocation(line: 1013, column: 2, scope: !10368)
!10459 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10458)
!10460 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10458)
!10461 = !DILocation(line: 1013, column: 2, scope: !10368)
!10462 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10463)
!10463 = distinct !DILocation(line: 1013, column: 2, scope: !10368)
!10464 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10463)
!10465 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10463)
!10466 = !DILocation(line: 1013, column: 2, scope: !10369)
!10467 = !DILocation(line: 1013, column: 2, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 1013, column: 2)
!10469 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10470)
!10470 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10471)
!10471 = distinct !DILocation(line: 1013, column: 2, scope: !10365)
!10472 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10470)
!10473 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10470)
!10474 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10471)
!10475 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10471)
!10476 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10471)
!10477 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10471)
!10478 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10471)
!10479 = !DILocation(line: 1013, column: 2, scope: !10365)
!10480 = !{i32 -2145239621, i32 -2145239608, i32 -2145239583, i32 -2145239559, i32 -2145239534, i32 -2145239459, i32 -2145239434, i32 -2145239290, i32 -2145237063, i32 -2145236974, i32 -2145236853, i32 -2145236758, i32 -2145236657, i32 -2145236630, i32 -2145236547, i32 -2145236458, i32 -2145236337, i32 -2145236237, i32 -2145236131, i32 -2145236023, i32 -2145239002, i32 -2145238949, i32 -2145238918, i32 -2145238887, i32 -2145238866, i32 -2145238844, i32 -2145238795, i32 -2145238774, i32 -2145235940, i32 -2145235851, i32 -2145235730, i32 -2145235631, i32 -2145235525, i32 -2145235423, i32 -2145235390, i32 -2145235317, i32 -2145235249, i32 -2145238400, i32 -2145238347, i32 -2145238316, i32 -2145238285, i32 -2145238264, i32 -2145238242, i32 -2145238193, i32 -2145238172, i32 -2145235197, i32 -2145235108, i32 -2145234987, i32 -2145234888, i32 -2145234782, i32 -2145234680, i32 -2145234647, i32 -2145234564, i32 -2145234475, i32 -2145234354, i32 -2145234254, i32 -2145234228, i32 -2145234125, i32 -2145234099, i32 -2145237914, i32 -2145237847, i32 -2145237822, i32 -2145237758, i32 -2145237642, i32 -2145237617, i32 -2145237592}
!10481 = !DILocation(line: 0, scope: !10336)
!10482 = !DILocation(line: 1016, column: 1, scope: !10336)
!10483 = !DILocation(line: 1015, column: 2, scope: !10336)
!10484 = distinct !DISubprogram(name: "lwip_sendto", scope: !3, file: !3, line: 2583, type: !10485, isLocal: false, isDefinition: true, scopeLine: 2585, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10487)
!10485 = !DISubroutineType(types: !10486)
!10486 = !{!206, !80, !225, !216, !80, !228, !1890}
!10487 = !{!10488, !10489, !10490, !10491, !10492, !10493, !10494, !10495, !10496, !10497, !10498, !10499, !10503, !10509, !10514, !10520, !10522}
!10488 = !DILocalVariable(name: "s", arg: 1, scope: !10484, file: !3, line: 2583, type: !80)
!10489 = !DILocalVariable(name: "data", arg: 2, scope: !10484, file: !3, line: 2583, type: !225)
!10490 = !DILocalVariable(name: "size", arg: 3, scope: !10484, file: !3, line: 2583, type: !216)
!10491 = !DILocalVariable(name: "flags", arg: 4, scope: !10484, file: !3, line: 2583, type: !80)
!10492 = !DILocalVariable(name: "to", arg: 5, scope: !10484, file: !3, line: 2584, type: !228)
!10493 = !DILocalVariable(name: "tolen", arg: 6, scope: !10484, file: !3, line: 2584, type: !1890)
!10494 = !DILocalVariable(name: "sock", scope: !10484, file: !3, line: 2586, type: !1165)
!10495 = !DILocalVariable(name: "err", scope: !10484, file: !3, line: 2587, type: !1283)
!10496 = !DILocalVariable(name: "short_size", scope: !10484, file: !3, line: 2588, type: !164)
!10497 = !DILocalVariable(name: "remote_port", scope: !10484, file: !3, line: 2589, type: !164)
!10498 = !DILocalVariable(name: "buf", scope: !10484, file: !3, line: 2590, type: !1371)
!10499 = !DILocalVariable(name: "sockerr", scope: !10500, file: !3, line: 2611, type: !1007)
!10500 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 2611, column: 5)
!10501 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 2609, column: 43)
!10502 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 2609, column: 7)
!10503 = !DILocalVariable(name: "tid", scope: !10504, file: !3, line: 2611, type: !170)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 2611, column: 5)
!10505 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 2611, column: 5)
!10506 = distinct !DILexicalBlock(scope: !10507, file: !3, line: 2611, column: 5)
!10507 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2611, column: 5)
!10508 = distinct !DILexicalBlock(scope: !10500, file: !3, line: 2611, column: 5)
!10509 = !DILocalVariable(name: "sockerr", scope: !10510, file: !3, line: 2616, type: !1007)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 2616, column: 3)
!10511 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 2616, column: 3)
!10512 = distinct !DILexicalBlock(scope: !10513, file: !3, line: 2616, column: 3)
!10513 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 2616, column: 3)
!10514 = !DILocalVariable(name: "tid", scope: !10515, file: !3, line: 2616, type: !170)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 2616, column: 3)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 2616, column: 3)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 2616, column: 3)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 2616, column: 3)
!10519 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 2616, column: 3)
!10520 = !DILocalVariable(name: "sockerr", scope: !10521, file: !3, line: 2677, type: !1007)
!10521 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 2677, column: 3)
!10522 = !DILocalVariable(name: "tid", scope: !10523, file: !3, line: 2677, type: !170)
!10523 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 2677, column: 3)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 2677, column: 3)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 2677, column: 3)
!10526 = distinct !DILexicalBlock(scope: !10527, file: !3, line: 2677, column: 3)
!10527 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 2677, column: 3)
!10528 = !DILocation(line: 2583, column: 17, scope: !10484)
!10529 = !DILocation(line: 2583, column: 32, scope: !10484)
!10530 = !DILocation(line: 2583, column: 45, scope: !10484)
!10531 = !DILocation(line: 2583, column: 55, scope: !10484)
!10532 = !DILocation(line: 2584, column: 36, scope: !10484)
!10533 = !DILocation(line: 2584, column: 50, scope: !10484)
!10534 = !DILocation(line: 2590, column: 3, scope: !10484)
!10535 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !10536)
!10536 = distinct !DILocation(line: 2592, column: 10, scope: !10484)
!10537 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !10538)
!10538 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !10536)
!10539 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !10540)
!10540 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !10538)
!10541 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !10542)
!10542 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !10540)
!10543 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !10542)
!10544 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !10542)
!10545 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !10542)
!10546 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !10540)
!10547 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !10538)
!10548 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !10542)
!10549 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !10538)
!10550 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !10538)
!10551 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !10538)
!10552 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !10538)
!10553 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10554)
!10554 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !10536)
!10555 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10554)
!10556 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10554)
!10557 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !10536)
!10558 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10559)
!10559 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !10536)
!10560 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10559)
!10561 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10559)
!10562 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !10536)
!10563 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !10564)
!10564 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !10536)
!10565 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !10564)
!10566 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !10564)
!10567 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !10564)
!10568 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !10536)
!10569 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10570)
!10570 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10571)
!10571 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !10536)
!10572 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10570)
!10573 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10570)
!10574 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10571)
!10575 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10571)
!10576 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10571)
!10577 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10571)
!10578 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10571)
!10579 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !10536)
!10580 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !10536)
!10581 = !DILocation(line: 2593, column: 7, scope: !10484)
!10582 = !DILocation(line: 2597, column: 7, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 2597, column: 7)
!10584 = !DILocation(line: 2597, column: 51, scope: !10583)
!10585 = !DILocation(line: 2597, column: 7, scope: !10484)
!10586 = !DILocation(line: 2600, column: 12, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 2597, column: 67)
!10588 = !DILocation(line: 2600, column: 5, scope: !10587)
!10589 = !DILocation(line: 2609, column: 12, scope: !10502)
!10590 = !DILocation(line: 2609, column: 7, scope: !10484)
!10591 = !DILocation(line: 2611, column: 5, scope: !10500)
!10592 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10593)
!10593 = distinct !DILocation(line: 2611, column: 5, scope: !10507)
!10594 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10593)
!10595 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10593)
!10596 = !DILocation(line: 2611, column: 5, scope: !10507)
!10597 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10598)
!10598 = distinct !DILocation(line: 2611, column: 5, scope: !10507)
!10599 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10598)
!10600 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10598)
!10601 = !DILocation(line: 2611, column: 5, scope: !10508)
!10602 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !10603)
!10603 = distinct !DILocation(line: 2611, column: 5, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10507, file: !3, line: 2611, column: 5)
!10605 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !10603)
!10606 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !10603)
!10607 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !10603)
!10608 = !DILocation(line: 2611, column: 5, scope: !10604)
!10609 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10610)
!10610 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10611)
!10611 = distinct !DILocation(line: 2611, column: 5, scope: !10504)
!10612 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10610)
!10613 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10610)
!10614 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10611)
!10615 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10611)
!10616 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10611)
!10617 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10611)
!10618 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10611)
!10619 = !DILocation(line: 2611, column: 5, scope: !10504)
!10620 = !{i32 -2144850964, i32 -2144850951, i32 -2144850926, i32 -2144850902, i32 -2144850877, i32 -2144850802, i32 -2144850777, i32 -2144850633, i32 -2144848410, i32 -2144848321, i32 -2144848200, i32 -2144848105, i32 -2144848004, i32 -2144847977, i32 -2144847894, i32 -2144847805, i32 -2144847684, i32 -2144847584, i32 -2144847478, i32 -2144847370, i32 -2144850345, i32 -2144850292, i32 -2144850261, i32 -2144850230, i32 -2144850209, i32 -2144850187, i32 -2144850138, i32 -2144850117, i32 -2144847287, i32 -2144847198, i32 -2144847077, i32 -2144846978, i32 -2144846872, i32 -2144846770, i32 -2144846737, i32 -2144846664, i32 -2144846596, i32 -2144849743, i32 -2144849690, i32 -2144849659, i32 -2144849628, i32 -2144849607, i32 -2144849585, i32 -2144849536, i32 -2144849515, i32 -2144846541, i32 -2144846452, i32 -2144846331, i32 -2144846232, i32 -2144846126, i32 -2144846024, i32 -2144845991, i32 -2144845908, i32 -2144845819, i32 -2144845698, i32 -2144845598, i32 -2144845572, i32 -2144845469, i32 -2144845443, i32 -2144849257, i32 -2144849190, i32 -2144849165, i32 -2144849101, i32 -2144848985, i32 -2144848960, i32 -2144848935}
!10621 = !DILocation(line: 2615, column: 16, scope: !10484)
!10622 = !DILocation(line: 2588, column: 9, scope: !10484)
!10623 = !DILocation(line: 2616, column: 3, scope: !10512)
!10624 = !DILocation(line: 2616, column: 3, scope: !10513)
!10625 = !DILocation(line: 2616, column: 3, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 2616, column: 3)
!10627 = !DILocation(line: 2616, column: 3, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 2616, column: 3)
!10629 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 2616, column: 3)
!10630 = distinct !DILexicalBlock(scope: !10626, file: !3, line: 2616, column: 3)
!10631 = !DILocation(line: 2623, column: 9, scope: !10484)
!10632 = !DILocation(line: 2627, column: 7, scope: !10484)
!10633 = !DILocation(line: 2628, column: 5, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 2627, column: 11)
!10635 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 2627, column: 7)
!10636 = !DILocation(line: 1304, column: 48, scope: !3971, inlinedAt: !10637)
!10637 = distinct !DILocation(line: 2628, column: 5, scope: !10634)
!10638 = !DILocation(line: 1304, column: 69, scope: !3971, inlinedAt: !10637)
!10639 = !DILocation(line: 1306, column: 18, scope: !3983, inlinedAt: !10637)
!10640 = !DILocation(line: 1306, column: 29, scope: !3983, inlinedAt: !10637)
!10641 = !DILocation(line: 1306, column: 7, scope: !3971, inlinedAt: !10637)
!10642 = !DILocation(line: 1307, column: 5, scope: !3986, inlinedAt: !10637)
!10643 = !DILocation(line: 1307, column: 5, scope: !3990, inlinedAt: !10637)
!10644 = !DILocation(line: 1307, column: 5, scope: !3992, inlinedAt: !10637)
!10645 = !DILocation(line: 1307, column: 5, scope: !3987, inlinedAt: !10637)
!10646 = !DILocation(line: 1308, column: 13, scope: !3988, inlinedAt: !10637)
!10647 = !DILocation(line: 1308, column: 18, scope: !3988, inlinedAt: !10637)
!10648 = !DILocation(line: 1309, column: 3, scope: !3988, inlinedAt: !10637)
!10649 = !DILocation(line: 1310, column: 5, scope: !3994, inlinedAt: !10637)
!10650 = !DILocation(line: 1311, column: 13, scope: !3995, inlinedAt: !10637)
!10651 = !DILocation(line: 1311, column: 18, scope: !3995, inlinedAt: !10637)
!10652 = !DILocation(line: 2638, column: 3, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 2638, column: 3)
!10654 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 2638, column: 3)
!10655 = !DILocation(line: 0, scope: !10634)
!10656 = !DILocation(line: 1313, column: 1, scope: !3971, inlinedAt: !10637)
!10657 = !DILocation(line: 2629, column: 3, scope: !10634)
!10658 = !DILocation(line: 2589, column: 9, scope: !10484)
!10659 = !DILocation(line: 2631, column: 5, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 2631, column: 5)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 2631, column: 5)
!10662 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 2629, column: 10)
!10663 = !DILocation(line: 2631, column: 5, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 2631, column: 5)
!10665 = !DILocation(line: 2631, column: 5, scope: !10661)
!10666 = !DILocation(line: 2631, column: 5, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 2631, column: 5)
!10668 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 2631, column: 5)
!10669 = !DILocation(line: 2631, column: 5, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2631, column: 5)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 2631, column: 5)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 2631, column: 5)
!10673 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 2631, column: 5)
!10674 = !DILocation(line: 2631, column: 5, scope: !10668)
!10675 = !DILocation(line: 2631, column: 5, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 2631, column: 5)
!10677 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 2631, column: 5)
!10678 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 2631, column: 5)
!10679 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 2631, column: 5)
!10680 = !DILocation(line: 2631, column: 5, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 2631, column: 5)
!10682 = !DILocation(line: 2633, column: 3, scope: !10484)
!10683 = !DILocation(line: 2633, column: 25, scope: !10484)
!10684 = !DILocation(line: 2590, column: 17, scope: !10484)
!10685 = !DILocation(line: 2659, column: 9, scope: !10484)
!10686 = !DILocation(line: 2587, column: 9, scope: !10484)
!10687 = !DILocation(line: 2661, column: 11, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 2661, column: 7)
!10689 = !DILocation(line: 2661, column: 7, scope: !10484)
!10690 = !DILocation(line: 2664, column: 9, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 2664, column: 9)
!10692 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2661, column: 22)
!10693 = !DILocation(line: 2664, column: 32, scope: !10691)
!10694 = !DILocation(line: 2664, column: 35, scope: !10691)
!10695 = !DILocation(line: 2664, column: 9, scope: !10692)
!10696 = !DILocation(line: 2665, column: 7, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 2664, column: 83)
!10698 = !DILocation(line: 2666, column: 7, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 2666, column: 7)
!10700 = !DILocation(line: 2667, column: 5, scope: !10697)
!10701 = !DILocation(line: 2671, column: 30, scope: !10692)
!10702 = !DILocation(line: 2671, column: 11, scope: !10692)
!10703 = !DILocation(line: 2672, column: 3, scope: !10692)
!10704 = !DILocation(line: 0, scope: !10484)
!10705 = !DILocation(line: 2675, column: 3, scope: !10484)
!10706 = !DILocation(line: 2677, column: 3, scope: !10521)
!10707 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10708)
!10708 = distinct !DILocation(line: 2677, column: 3, scope: !10526)
!10709 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10708)
!10710 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10708)
!10711 = !DILocation(line: 2677, column: 3, scope: !10526)
!10712 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10713)
!10713 = distinct !DILocation(line: 2677, column: 3, scope: !10526)
!10714 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10713)
!10715 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10713)
!10716 = !DILocation(line: 2677, column: 3, scope: !10527)
!10717 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !10718)
!10718 = distinct !DILocation(line: 2677, column: 3, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 2677, column: 3)
!10720 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !10718)
!10721 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !10718)
!10722 = !DILocation(line: 2677, column: 3, scope: !10719)
!10723 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10724)
!10724 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10725)
!10725 = distinct !DILocation(line: 2677, column: 3, scope: !10523)
!10726 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10724)
!10727 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10724)
!10728 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10725)
!10729 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10725)
!10730 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10725)
!10731 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10725)
!10732 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10725)
!10733 = !DILocation(line: 2677, column: 3, scope: !10523)
!10734 = !{i32 -2144824245, i32 -2144824232, i32 -2144824207, i32 -2144824183, i32 -2144824158, i32 -2144824083, i32 -2144824058, i32 -2144823914, i32 -2144821691, i32 -2144821602, i32 -2144821481, i32 -2144821386, i32 -2144821285, i32 -2144821258, i32 -2144821175, i32 -2144821086, i32 -2144820965, i32 -2144820865, i32 -2144820759, i32 -2144820651, i32 -2144823626, i32 -2144823573, i32 -2144823542, i32 -2144823511, i32 -2144823490, i32 -2144823468, i32 -2144823419, i32 -2144823398, i32 -2144820568, i32 -2144820479, i32 -2144820358, i32 -2144820259, i32 -2144820153, i32 -2144820051, i32 -2144820018, i32 -2144819945, i32 -2144819877, i32 -2144823024, i32 -2144822971, i32 -2144822940, i32 -2144822909, i32 -2144822888, i32 -2144822866, i32 -2144822817, i32 -2144822796, i32 -2144819822, i32 -2144819733, i32 -2144819612, i32 -2144819513, i32 -2144819407, i32 -2144819305, i32 -2144819272, i32 -2144819189, i32 -2144819100, i32 -2144818979, i32 -2144818879, i32 -2144818853, i32 -2144818750, i32 -2144818724, i32 -2144822538, i32 -2144822471, i32 -2144822446, i32 -2144822382, i32 -2144822266, i32 -2144822241, i32 -2144822216}
!10735 = !DILocation(line: 2679, column: 15, scope: !10484)
!10736 = !DILocation(line: 2679, column: 27, scope: !10484)
!10737 = !DILocation(line: 2679, column: 10, scope: !10484)
!10738 = !DILocation(line: 2679, column: 3, scope: !10484)
!10739 = !DILocation(line: 0, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10741, file: !3, line: 2593, column: 14)
!10741 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 2593, column: 7)
!10742 = !DILocation(line: 2680, column: 1, scope: !10484)
!10743 = distinct !DISubprogram(name: "socketpair", scope: !3, file: !3, line: 1018, type: !10744, isLocal: false, isDefinition: true, scopeLine: 1019, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10746)
!10744 = !DISubroutineType(types: !10745)
!10745 = !{!80, !80, !80, !80, !369}
!10746 = !{!10747, !10748, !10749, !10750}
!10747 = !DILocalVariable(name: "domain", arg: 1, scope: !10743, file: !3, line: 1018, type: !80)
!10748 = !DILocalVariable(name: "type", arg: 2, scope: !10743, file: !3, line: 1018, type: !80)
!10749 = !DILocalVariable(name: "protocol", arg: 3, scope: !10743, file: !3, line: 1018, type: !80)
!10750 = !DILocalVariable(name: "sv", arg: 4, scope: !10743, file: !3, line: 1018, type: !369)
!10751 = !DILocation(line: 1018, column: 20, scope: !10743)
!10752 = !DILocation(line: 1018, column: 32, scope: !10743)
!10753 = !DILocation(line: 1018, column: 42, scope: !10743)
!10754 = !DILocation(line: 1018, column: 56, scope: !10743)
!10755 = !DILocation(line: 1020, column: 2, scope: !10743)
!10756 = !DILocation(line: 1020, column: 8, scope: !10743)
!10757 = !DILocation(line: 1021, column: 2, scope: !10743)
!10758 = distinct !DISubprogram(name: "if_nametoindex", scope: !3, file: !3, line: 1025, type: !10759, isLocal: false, isDefinition: true, scopeLine: 1026, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10761)
!10759 = !DISubroutineType(types: !10760)
!10760 = !{!7, !292}
!10761 = !{!10762, !10763}
!10762 = !DILocalVariable(name: "ifname", arg: 1, scope: !10758, file: !3, line: 1025, type: !292)
!10763 = !DILocalVariable(name: "ret", scope: !10758, file: !3, line: 1027, type: !80)
!10764 = !DILocation(line: 1025, column: 41, scope: !10758)
!10765 = !DILocation(line: 1029, column: 8, scope: !10758)
!10766 = !DILocation(line: 1027, column: 6, scope: !10758)
!10767 = !DILocation(line: 1031, column: 2, scope: !10758)
!10768 = distinct !DISubprogram(name: "if_indextoname", scope: !3, file: !3, line: 1034, type: !10769, isLocal: false, isDefinition: true, scopeLine: 1035, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10771)
!10769 = !DISubroutineType(types: !10770)
!10770 = !{!144, !7, !144}
!10771 = !{!10772, !10773, !10774}
!10772 = !DILocalVariable(name: "ifindex", arg: 1, scope: !10768, file: !3, line: 1034, type: !7)
!10773 = !DILocalVariable(name: "ifname", arg: 2, scope: !10768, file: !3, line: 1034, type: !144)
!10774 = !DILocalVariable(name: "ret", scope: !10768, file: !3, line: 1036, type: !144)
!10775 = !DILocation(line: 1034, column: 35, scope: !10768)
!10776 = !DILocation(line: 1034, column: 50, scope: !10768)
!10777 = !DILocation(line: 1038, column: 8, scope: !10768)
!10778 = !DILocation(line: 1036, column: 8, scope: !10768)
!10779 = !DILocation(line: 1040, column: 2, scope: !10768)
!10780 = distinct !DISubprogram(name: "lwip_socket_thread_init", scope: !3, file: !3, line: 1318, type: !632, isLocal: false, isDefinition: true, scopeLine: 1319, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1489)
!10781 = !DILocation(line: 1321, column: 1, scope: !10780)
!10782 = distinct !DISubprogram(name: "lwip_socket_thread_cleanup", scope: !3, file: !3, line: 1325, type: !632, isLocal: false, isDefinition: true, scopeLine: 1326, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1489)
!10783 = !DILocation(line: 1328, column: 1, scope: !10782)
!10784 = distinct !DISubprogram(name: "lwip_socket_dbg_get_socket", scope: !3, file: !3, line: 1420, type: !1557, isLocal: false, isDefinition: true, scopeLine: 1421, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10785)
!10785 = !{!10786}
!10786 = !DILocalVariable(name: "fd", arg: 1, scope: !10784, file: !3, line: 1420, type: !80)
!10787 = !DILocation(line: 1420, column: 32, scope: !10784)
!10788 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !10789)
!10789 = distinct !DILocation(line: 1422, column: 10, scope: !10784)
!10790 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !10789)
!10791 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !10789)
!10792 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !10789)
!10793 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !10789)
!10794 = !DILocation(line: 1422, column: 3, scope: !10784)
!10795 = distinct !DISubprogram(name: "alloc_socket", scope: !3, file: !3, line: 1499, type: !10796, isLocal: true, isDefinition: true, scopeLine: 1500, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10798)
!10796 = !DISubroutineType(types: !10797)
!10797 = !{!80, !1169, !80}
!10798 = !{!10799, !10800, !10801, !10802}
!10799 = !DILocalVariable(name: "newconn", arg: 1, scope: !10795, file: !3, line: 1499, type: !1169)
!10800 = !DILocalVariable(name: "accepted", arg: 2, scope: !10795, file: !3, line: 1499, type: !80)
!10801 = !DILocalVariable(name: "i", scope: !10795, file: !3, line: 1501, type: !80)
!10802 = !DILocalVariable(name: "lev", scope: !10795, file: !3, line: 1502, type: !134)
!10803 = !DILocation(line: 1499, column: 30, scope: !10795)
!10804 = !DILocation(line: 1499, column: 43, scope: !10795)
!10805 = !DILocation(line: 1501, column: 7, scope: !10795)
!10806 = !DILocation(line: 1506, column: 3, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 1506, column: 3)
!10808 = !DILocation(line: 1508, column: 5, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 1508, column: 5)
!10810 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 1506, column: 37)
!10811 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 1506, column: 3)
!10812 = !DILocation(line: 1502, column: 3, scope: !10795)
!10813 = !DILocation(line: 1509, column: 21, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 1509, column: 9)
!10815 = !DILocation(line: 1509, column: 10, scope: !10814)
!10816 = !DILocation(line: 1509, column: 9, scope: !10810)
!10817 = !DILocation(line: 1518, column: 29, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 1509, column: 27)
!10819 = !DILocation(line: 1521, column: 7, scope: !10818)
!10820 = !DILocation(line: 1522, column: 18, scope: !10818)
!10821 = !DILocation(line: 1522, column: 27, scope: !10818)
!10822 = !DILocation(line: 1522, column: 32, scope: !10818)
!10823 = !DILocation(line: 1524, column: 7, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 1524, column: 7)
!10825 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 1524, column: 7)
!10826 = !DILocation(line: 1524, column: 7, scope: !10825)
!10827 = !DILocation(line: 1524, column: 7, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 1524, column: 7)
!10829 = distinct !DILexicalBlock(scope: !10824, file: !3, line: 1524, column: 7)
!10830 = !DILocation(line: 1524, column: 7, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !3, line: 1524, column: 7)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 1524, column: 7)
!10833 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 1524, column: 7)
!10834 = !DILocation(line: 1525, column: 18, scope: !10818)
!10835 = !DILocation(line: 1525, column: 29, scope: !10818)
!10836 = !{!1603, !1604, i64 16}
!10837 = !DILocation(line: 1528, column: 32, scope: !10818)
!10838 = !DILocation(line: 1528, column: 65, scope: !10818)
!10839 = !DILocation(line: 1528, column: 92, scope: !10818)
!10840 = !DILocation(line: 1528, column: 31, scope: !10818)
!10841 = !DILocation(line: 1528, column: 18, scope: !10818)
!10842 = !DILocation(line: 1528, column: 29, scope: !10818)
!10843 = !{!1603, !1604, i64 18}
!10844 = !DILocation(line: 1529, column: 18, scope: !10818)
!10845 = !DILocation(line: 1529, column: 29, scope: !10818)
!10846 = !{!1603, !1604, i64 20}
!10847 = !DILocation(line: 1531, column: 7, scope: !10818)
!10848 = !DILocation(line: 1533, column: 5, scope: !10810)
!10849 = !DILocation(line: 1506, column: 32, scope: !10811)
!10850 = !DILocation(line: 1506, column: 17, scope: !10811)
!10851 = distinct !{!10851, !10806, !10852}
!10852 = !DILocation(line: 1534, column: 3, scope: !10807)
!10853 = !DILocation(line: 0, scope: !10795)
!10854 = !DILocation(line: 1536, column: 1, scope: !10795)
!10855 = distinct !DISubprogram(name: "lwip_recv_tcp", scope: !3, file: !3, line: 1918, type: !10856, isLocal: true, isDefinition: true, scopeLine: 1919, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10858)
!10856 = !DISubroutineType(types: !10857)
!10857 = !{!206, !1165, !143, !216, !80}
!10858 = !{!10859, !10860, !10861, !10862, !10863, !10864, !10865, !10866, !10868, !10869, !10870, !10876, !10882, !10884}
!10859 = !DILocalVariable(name: "sock", arg: 1, scope: !10855, file: !3, line: 1918, type: !1165)
!10860 = !DILocalVariable(name: "mem", arg: 2, scope: !10855, file: !3, line: 1918, type: !143)
!10861 = !DILocalVariable(name: "len", arg: 3, scope: !10855, file: !3, line: 1918, type: !216)
!10862 = !DILocalVariable(name: "flags", arg: 4, scope: !10855, file: !3, line: 1918, type: !80)
!10863 = !DILocalVariable(name: "apiflags", scope: !10855, file: !3, line: 1920, type: !156)
!10864 = !DILocalVariable(name: "recvd", scope: !10855, file: !3, line: 1921, type: !206)
!10865 = !DILocalVariable(name: "recv_left", scope: !10855, file: !3, line: 1922, type: !206)
!10866 = !DILocalVariable(name: "p", scope: !10867, file: !3, line: 1932, type: !1252)
!10867 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 1931, column: 6)
!10868 = !DILocalVariable(name: "err", scope: !10867, file: !3, line: 1933, type: !1283)
!10869 = !DILocalVariable(name: "copylen", scope: !10867, file: !3, line: 1934, type: !164)
!10870 = !DILocalVariable(name: "sockerr", scope: !10871, file: !3, line: 1956, type: !1007)
!10871 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 1956, column: 9)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1947, column: 26)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 1947, column: 11)
!10874 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 1940, column: 12)
!10875 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 1938, column: 9)
!10876 = !DILocalVariable(name: "tid", scope: !10877, file: !3, line: 1956, type: !170)
!10877 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 1956, column: 9)
!10878 = distinct !DILexicalBlock(scope: !10879, file: !3, line: 1956, column: 9)
!10879 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 1956, column: 9)
!10880 = distinct !DILexicalBlock(scope: !10881, file: !3, line: 1956, column: 9)
!10881 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 1956, column: 9)
!10882 = !DILocalVariable(name: "sockerr", scope: !10883, file: !3, line: 2014, type: !1007)
!10883 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 2014, column: 3)
!10884 = !DILocalVariable(name: "tid", scope: !10885, file: !3, line: 2014, type: !170)
!10885 = distinct !DILexicalBlock(scope: !10886, file: !3, line: 2014, column: 3)
!10886 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 2014, column: 3)
!10887 = distinct !DILexicalBlock(scope: !10888, file: !3, line: 2014, column: 3)
!10888 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 2014, column: 3)
!10889 = distinct !DILexicalBlock(scope: !10883, file: !3, line: 2014, column: 3)
!10890 = !DILocation(line: 1918, column: 33, scope: !10855)
!10891 = !DILocation(line: 1918, column: 45, scope: !10855)
!10892 = !DILocation(line: 1918, column: 57, scope: !10855)
!10893 = !DILocation(line: 1918, column: 66, scope: !10855)
!10894 = !DILocation(line: 1920, column: 8, scope: !10855)
!10895 = !DILocation(line: 1921, column: 11, scope: !10855)
!10896 = !DILocation(line: 1922, column: 28, scope: !10855)
!10897 = !DILocation(line: 1922, column: 23, scope: !10855)
!10898 = !DILocation(line: 1922, column: 11, scope: !10855)
!10899 = !DILocation(line: 1924, column: 3, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 1924, column: 3)
!10901 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 1924, column: 3)
!10902 = !DILocation(line: 1924, column: 3, scope: !10901)
!10903 = !DILocation(line: 1924, column: 3, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 1924, column: 3)
!10905 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 1924, column: 3)
!10906 = !DILocation(line: 1924, column: 3, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 1924, column: 3)
!10908 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 1924, column: 3)
!10909 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 1924, column: 3)
!10910 = !DILocation(line: 1925, column: 3, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 1925, column: 3)
!10912 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 1925, column: 3)
!10913 = !DILocation(line: 1925, column: 3, scope: !10912)
!10914 = !DILocation(line: 1925, column: 3, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !3, line: 1925, column: 3)
!10916 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1925, column: 3)
!10917 = !DILocation(line: 1925, column: 3, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 1925, column: 3)
!10919 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 1925, column: 3)
!10920 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 1925, column: 3)
!10921 = !DILocation(line: 1927, column: 13, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 1927, column: 7)
!10923 = !DILocation(line: 1927, column: 7, scope: !10855)
!10924 = !DILocation(line: 1931, column: 3, scope: !10855)
!10925 = !DILocation(line: 0, scope: !10867)
!10926 = !DILocation(line: 1932, column: 5, scope: !10867)
!10927 = !DILocation(line: 1938, column: 24, scope: !10875)
!10928 = !DILocation(line: 1938, column: 9, scope: !10875)
!10929 = !DILocation(line: 1938, column: 9, scope: !10867)
!10930 = !DILocation(line: 1932, column: 18, scope: !10867)
!10931 = !DILocation(line: 1939, column: 9, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 1938, column: 30)
!10933 = !DILocation(line: 1940, column: 5, scope: !10932)
!10934 = !DILocation(line: 1943, column: 47, scope: !10874)
!10935 = !DILocation(line: 1943, column: 13, scope: !10874)
!10936 = !DILocation(line: 1933, column: 11, scope: !10867)
!10937 = !DILocation(line: 1947, column: 15, scope: !10873)
!10938 = !DILocation(line: 1947, column: 11, scope: !10874)
!10939 = !DILocation(line: 1948, column: 19, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 1948, column: 13)
!10941 = !DILocation(line: 1948, column: 13, scope: !10872)
!10942 = !DILocation(line: 1956, column: 9, scope: !10871)
!10943 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10944)
!10944 = distinct !DILocation(line: 1956, column: 9, scope: !10880)
!10945 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10944)
!10946 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10944)
!10947 = !DILocation(line: 1956, column: 9, scope: !10880)
!10948 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10949)
!10949 = distinct !DILocation(line: 1956, column: 9, scope: !10880)
!10950 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10949)
!10951 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10949)
!10952 = !DILocation(line: 1956, column: 9, scope: !10881)
!10953 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !10954)
!10954 = distinct !DILocation(line: 1956, column: 9, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 1956, column: 9)
!10956 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !10954)
!10957 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !10954)
!10958 = !DILocation(line: 1956, column: 9, scope: !10955)
!10959 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10960)
!10960 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10961)
!10961 = distinct !DILocation(line: 1956, column: 9, scope: !10877)
!10962 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10960)
!10963 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10960)
!10964 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10961)
!10965 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10961)
!10966 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10961)
!10967 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10961)
!10968 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10961)
!10969 = !DILocation(line: 1956, column: 9, scope: !10877)
!10970 = !{i32 -2145040168, i32 -2145040155, i32 -2145040130, i32 -2145040106, i32 -2145040081, i32 -2145040006, i32 -2145039981, i32 -2145039837, i32 -2145037614, i32 -2145037525, i32 -2145037404, i32 -2145037309, i32 -2145037208, i32 -2145037181, i32 -2145037098, i32 -2145037009, i32 -2145036888, i32 -2145036788, i32 -2145036682, i32 -2145036574, i32 -2145039549, i32 -2145039496, i32 -2145039465, i32 -2145039434, i32 -2145039413, i32 -2145039391, i32 -2145039342, i32 -2145039321, i32 -2145036491, i32 -2145036402, i32 -2145036281, i32 -2145036182, i32 -2145036076, i32 -2145035974, i32 -2145035941, i32 -2145035868, i32 -2145035800, i32 -2145038947, i32 -2145038894, i32 -2145038863, i32 -2145038832, i32 -2145038811, i32 -2145038789, i32 -2145038740, i32 -2145038719, i32 -2145035745, i32 -2145035656, i32 -2145035535, i32 -2145035436, i32 -2145035330, i32 -2145035228, i32 -2145035195, i32 -2145035112, i32 -2145035023, i32 -2145034902, i32 -2145034802, i32 -2145034776, i32 -2145034673, i32 -2145034647, i32 -2145038461, i32 -2145038394, i32 -2145038369, i32 -2145038305, i32 -2145038189, i32 -2145038164, i32 -2145038139}
!10971 = !DILocation(line: 1957, column: 17, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 1957, column: 13)
!10973 = !DILocation(line: 1958, column: 11, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 1957, column: 30)
!10975 = !DILocation(line: 2008, column: 3, scope: !10855)
!10976 = !DILocation(line: 1963, column: 7, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 1963, column: 7)
!10978 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 1963, column: 7)
!10979 = !DILocation(line: 1963, column: 7, scope: !10978)
!10980 = !DILocation(line: 1963, column: 7, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !3, line: 1963, column: 7)
!10982 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 1963, column: 7)
!10983 = !DILocation(line: 1963, column: 7, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 1963, column: 7)
!10985 = distinct !DILexicalBlock(scope: !10986, file: !3, line: 1963, column: 7)
!10986 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 1963, column: 7)
!10987 = !DILocation(line: 1964, column: 27, scope: !10874)
!10988 = !DILocation(line: 1970, column: 21, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 1970, column: 9)
!10990 = !DILocation(line: 1970, column: 24, scope: !10989)
!10991 = !DILocation(line: 1970, column: 19, scope: !10989)
!10992 = !DILocation(line: 1973, column: 17, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 1972, column: 12)
!10994 = !DILocation(line: 1934, column: 11, scope: !10867)
!10995 = !DILocation(line: 1970, column: 9, scope: !10867)
!10996 = !DILocation(line: 1982, column: 38, scope: !10867)
!10997 = !DILocation(line: 1982, column: 5, scope: !10867)
!10998 = !DILocation(line: 1984, column: 14, scope: !10867)
!10999 = !DILocation(line: 1984, column: 11, scope: !10867)
!11000 = !DILocation(line: 1987, column: 5, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 1987, column: 5)
!11002 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 1987, column: 5)
!11003 = !DILocation(line: 1987, column: 5, scope: !11002)
!11004 = !DILocation(line: 1987, column: 5, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 1987, column: 5)
!11006 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 1987, column: 5)
!11007 = !DILocation(line: 1987, column: 5, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 1987, column: 5)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 1987, column: 5)
!11010 = distinct !DILexicalBlock(scope: !11005, file: !3, line: 1987, column: 5)
!11011 = !DILocation(line: 1988, column: 15, scope: !10867)
!11012 = !DILocation(line: 1991, column: 9, scope: !10867)
!11013 = !DILocation(line: 2010, column: 19, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 2010, column: 7)
!11015 = !DILocation(line: 1993, column: 7, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 1993, column: 7)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 1993, column: 7)
!11018 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 1991, column: 34)
!11019 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 1991, column: 9)
!11020 = !DILocation(line: 1993, column: 7, scope: !11017)
!11021 = !DILocation(line: 1993, column: 7, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 1993, column: 7)
!11023 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 1993, column: 7)
!11024 = !DILocation(line: 1993, column: 7, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !3, line: 1993, column: 7)
!11026 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 1993, column: 7)
!11027 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 1993, column: 7)
!11028 = !DILocation(line: 1994, column: 32, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 1994, column: 11)
!11030 = !DILocation(line: 1994, column: 11, scope: !11018)
!11031 = !DILocation(line: 1997, column: 31, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 1994, column: 37)
!11033 = !DILocation(line: 1997, column: 29, scope: !11032)
!11034 = !DILocation(line: 1999, column: 7, scope: !11032)
!11035 = !DILocation(line: 2000, column: 29, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 1999, column: 14)
!11037 = !DILocation(line: 2002, column: 9, scope: !11036)
!11038 = !DILocation(line: 2006, column: 14, scope: !10867)
!11039 = !DILocation(line: 2008, column: 23, scope: !10855)
!11040 = !DILocation(line: 2008, column: 28, scope: !10855)
!11041 = distinct !{!11041, !10924, !11042}
!11042 = !DILocation(line: 2008, column: 50, scope: !10855)
!11043 = !DILocation(line: 2010, column: 14, scope: !11014)
!11044 = !DILocation(line: 2012, column: 29, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 2010, column: 43)
!11046 = !DILocation(line: 2012, column: 5, scope: !11045)
!11047 = !DILocation(line: 2013, column: 3, scope: !11045)
!11048 = !DILocation(line: 2014, column: 3, scope: !10883)
!11049 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11050)
!11050 = distinct !DILocation(line: 2014, column: 3, scope: !10888)
!11051 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11050)
!11052 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11050)
!11053 = !DILocation(line: 2014, column: 3, scope: !10888)
!11054 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11055)
!11055 = distinct !DILocation(line: 2014, column: 3, scope: !10888)
!11056 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11055)
!11057 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11055)
!11058 = !DILocation(line: 2014, column: 3, scope: !10889)
!11059 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !11060)
!11060 = distinct !DILocation(line: 2014, column: 3, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !10888, file: !3, line: 2014, column: 3)
!11062 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !11060)
!11063 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !11060)
!11064 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !11060)
!11065 = !DILocation(line: 2014, column: 3, scope: !11061)
!11066 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11067)
!11067 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11068)
!11068 = distinct !DILocation(line: 2014, column: 3, scope: !10885)
!11069 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11067)
!11070 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11067)
!11071 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11068)
!11072 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11068)
!11073 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11068)
!11074 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11068)
!11075 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11068)
!11076 = !DILocation(line: 2014, column: 3, scope: !10885)
!11077 = !{i32 -2145031000, i32 -2145030987, i32 -2145030962, i32 -2145030938, i32 -2145030913, i32 -2145030838, i32 -2145030813, i32 -2145030669, i32 -2145028446, i32 -2145028357, i32 -2145028236, i32 -2145028141, i32 -2145028040, i32 -2145028013, i32 -2145027930, i32 -2145027841, i32 -2145027720, i32 -2145027620, i32 -2145027514, i32 -2145027406, i32 -2145030381, i32 -2145030328, i32 -2145030297, i32 -2145030266, i32 -2145030245, i32 -2145030223, i32 -2145030174, i32 -2145030153, i32 -2145027323, i32 -2145027234, i32 -2145027113, i32 -2145027014, i32 -2145026908, i32 -2145026806, i32 -2145026773, i32 -2145026700, i32 -2145026632, i32 -2145029779, i32 -2145029726, i32 -2145029695, i32 -2145029664, i32 -2145029643, i32 -2145029621, i32 -2145029572, i32 -2145029551, i32 -2145026577, i32 -2145026488, i32 -2145026367, i32 -2145026268, i32 -2145026162, i32 -2145026060, i32 -2145026027, i32 -2145025944, i32 -2145025855, i32 -2145025734, i32 -2145025634, i32 -2145025608, i32 -2145025505, i32 -2145025479, i32 -2145029293, i32 -2145029226, i32 -2145029201, i32 -2145029137, i32 -2145029021, i32 -2145028996, i32 -2145028971}
!11078 = !DILocation(line: 2016, column: 1, scope: !10855)
!11079 = distinct !DISubprogram(name: "lwip_recvfrom_udp_raw", scope: !3, file: !3, line: 2086, type: !11080, isLocal: true, isDefinition: true, scopeLine: 2087, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11082)
!11080 = !DISubroutineType(types: !11081)
!11081 = !{!1283, !1165, !80, !9002, !3975, !80}
!11082 = !{!11083, !11084, !11085, !11086, !11087, !11088, !11089, !11090, !11091, !11092, !11093, !11094, !11095, !11099}
!11083 = !DILocalVariable(name: "sock", arg: 1, scope: !11079, file: !3, line: 2086, type: !1165)
!11084 = !DILocalVariable(name: "flags", arg: 2, scope: !11079, file: !3, line: 2086, type: !80)
!11085 = !DILocalVariable(name: "msg", arg: 3, scope: !11079, file: !3, line: 2086, type: !9002)
!11086 = !DILocalVariable(name: "datagram_len", arg: 4, scope: !11079, file: !3, line: 2086, type: !3975)
!11087 = !DILocalVariable(name: "dbg_s", arg: 5, scope: !11079, file: !3, line: 2086, type: !80)
!11088 = !DILocalVariable(name: "buf", scope: !11079, file: !3, line: 2088, type: !1370)
!11089 = !DILocalVariable(name: "apiflags", scope: !11079, file: !3, line: 2089, type: !156)
!11090 = !DILocalVariable(name: "err", scope: !11079, file: !3, line: 2090, type: !1283)
!11091 = !DILocalVariable(name: "buflen", scope: !11079, file: !3, line: 2091, type: !164)
!11092 = !DILocalVariable(name: "copylen", scope: !11079, file: !3, line: 2091, type: !164)
!11093 = !DILocalVariable(name: "copied", scope: !11079, file: !3, line: 2091, type: !164)
!11094 = !DILocalVariable(name: "i", scope: !11079, file: !3, line: 2092, type: !80)
!11095 = !DILocalVariable(name: "len_left", scope: !11096, file: !3, line: 2125, type: !164)
!11096 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 2124, column: 64)
!11097 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2124, column: 3)
!11098 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2124, column: 3)
!11099 = !DILocalVariable(name: "wrote_msg", scope: !11100, file: !3, line: 2156, type: !156)
!11100 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 2155, column: 25)
!11101 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2155, column: 7)
!11102 = !DILocation(line: 2086, column: 41, scope: !11079)
!11103 = !DILocation(line: 2086, column: 51, scope: !11079)
!11104 = !DILocation(line: 2086, column: 73, scope: !11079)
!11105 = !DILocation(line: 2086, column: 85, scope: !11079)
!11106 = !DILocation(line: 2086, column: 103, scope: !11079)
!11107 = !DILocation(line: 2088, column: 3, scope: !11079)
!11108 = !DILocation(line: 2095, column: 3, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 2095, column: 3)
!11110 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2095, column: 3)
!11111 = !DILocation(line: 2095, column: 3, scope: !11110)
!11112 = !DILocation(line: 2095, column: 3, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 2095, column: 3)
!11114 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 2095, column: 3)
!11115 = !DILocation(line: 2095, column: 3, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 2095, column: 3)
!11117 = distinct !DILexicalBlock(scope: !11118, file: !3, line: 2095, column: 3)
!11118 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 2095, column: 3)
!11119 = !DILocation(line: 2105, column: 24, scope: !11079)
!11120 = !DILocation(line: 2088, column: 18, scope: !11079)
!11121 = !DILocation(line: 2105, column: 7, scope: !11079)
!11122 = !DILocation(line: 2106, column: 11, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2106, column: 7)
!11124 = !DILocation(line: 2106, column: 7, scope: !11079)
!11125 = !DILocation(line: 2089, column: 8, scope: !11079)
!11126 = !DILocation(line: 2109, column: 51, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 2106, column: 20)
!11128 = !DILocation(line: 2109, column: 11, scope: !11127)
!11129 = !DILocation(line: 2090, column: 9, scope: !11079)
!11130 = !DILocation(line: 2113, column: 13, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 2113, column: 9)
!11132 = !DILocation(line: 2113, column: 9, scope: !11127)
!11133 = !DILocation(line: 2116, column: 5, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11135, file: !3, line: 2116, column: 5)
!11135 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 2116, column: 5)
!11136 = !DILocation(line: 2116, column: 5, scope: !11135)
!11137 = !DILocation(line: 2116, column: 5, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 2116, column: 5)
!11139 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 2116, column: 5)
!11140 = !DILocation(line: 2116, column: 5, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !3, line: 2116, column: 5)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 2116, column: 5)
!11143 = distinct !DILexicalBlock(scope: !11138, file: !3, line: 2116, column: 5)
!11144 = !DILocation(line: 2117, column: 27, scope: !11127)
!11145 = !DILocation(line: 2118, column: 3, scope: !11127)
!11146 = !DILocation(line: 2119, column: 12, scope: !11079)
!11147 = !DILocation(line: 2119, column: 17, scope: !11079)
!11148 = !DILocation(line: 2119, column: 20, scope: !11079)
!11149 = !DILocation(line: 2091, column: 9, scope: !11079)
!11150 = !DILocation(line: 2091, column: 26, scope: !11079)
!11151 = !DILocation(line: 2092, column: 7, scope: !11079)
!11152 = !DILocation(line: 2124, column: 25, scope: !11097)
!11153 = !DILocation(line: 2124, column: 18, scope: !11097)
!11154 = !DILocation(line: 2124, column: 48, scope: !11097)
!11155 = !DILocation(line: 2124, column: 37, scope: !11097)
!11156 = !DILocation(line: 2134, column: 28, scope: !11096)
!11157 = !DILocation(line: 2125, column: 37, scope: !11096)
!11158 = !DILocation(line: 2125, column: 11, scope: !11096)
!11159 = !DILocation(line: 2126, column: 14, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 2126, column: 9)
!11161 = !DILocation(line: 2126, column: 25, scope: !11160)
!11162 = !DILocation(line: 2126, column: 35, scope: !11160)
!11163 = !DILocation(line: 2126, column: 33, scope: !11160)
!11164 = !DILocation(line: 2129, column: 17, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11160, file: !3, line: 2128, column: 12)
!11166 = !DILocation(line: 2091, column: 17, scope: !11079)
!11167 = !DILocation(line: 2126, column: 9, scope: !11096)
!11168 = !DILocation(line: 2134, column: 55, scope: !11096)
!11169 = !DILocation(line: 2134, column: 5, scope: !11096)
!11170 = !DILocation(line: 2135, column: 29, scope: !11096)
!11171 = !DILocation(line: 2124, column: 60, scope: !11097)
!11172 = distinct !{!11172, !11173, !11174}
!11173 = !DILocation(line: 2124, column: 3, scope: !11098)
!11174 = !DILocation(line: 2136, column: 3, scope: !11098)
!11175 = !DILocation(line: 2134, column: 23, scope: !11096)
!11176 = !DILocation(line: 2140, column: 12, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2140, column: 7)
!11178 = !DILocation(line: 2140, column: 7, scope: !11177)
!11179 = !DILocation(line: 2140, column: 21, scope: !11177)
!11180 = !DILocation(line: 2140, column: 29, scope: !11177)
!11181 = !DILocation(line: 2140, column: 24, scope: !11177)
!11182 = !DILocation(line: 2140, column: 7, scope: !11079)
!11183 = !DILocation(line: 2147, column: 33, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11185, file: !3, line: 2146, column: 44)
!11185 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 2146, column: 9)
!11186 = distinct !DILexicalBlock(scope: !11177, file: !3, line: 2142, column: 3)
!11187 = !DILocation(line: 2147, column: 39, scope: !11184)
!11188 = !DILocation(line: 2147, column: 61, scope: !11184)
!11189 = !DILocation(line: 2148, column: 27, scope: !11184)
!11190 = !DILocation(line: 2147, column: 7, scope: !11184)
!11191 = !DILocation(line: 2149, column: 5, scope: !11184)
!11192 = !DILocation(line: 2153, column: 8, scope: !11079)
!11193 = !DILocation(line: 2153, column: 18, scope: !11079)
!11194 = !DILocation(line: 2155, column: 12, scope: !11101)
!11195 = !DILocation(line: 2155, column: 7, scope: !11101)
!11196 = !DILocation(line: 2155, column: 7, scope: !11079)
!11197 = !DILocation(line: 2156, column: 10, scope: !11100)
!11198 = !DILocation(line: 2181, column: 12, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11200, file: !3, line: 2180, column: 21)
!11200 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 2180, column: 9)
!11201 = !DILocation(line: 2181, column: 27, scope: !11199)
!11202 = !DILocation(line: 2183, column: 3, scope: !11100)
!11203 = !DILocation(line: 2186, column: 14, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2186, column: 7)
!11205 = !DILocation(line: 2186, column: 26, scope: !11204)
!11206 = !DILocation(line: 2186, column: 7, scope: !11079)
!11207 = !DILocation(line: 2187, column: 27, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 2186, column: 32)
!11209 = !DILocation(line: 2188, column: 19, scope: !11208)
!11210 = !DILocation(line: 2188, column: 5, scope: !11208)
!11211 = !DILocation(line: 2189, column: 3, scope: !11208)
!11212 = !DILocation(line: 2190, column: 7, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2190, column: 7)
!11214 = !DILocation(line: 2190, column: 7, scope: !11079)
!11215 = !DILocation(line: 2191, column: 19, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 2190, column: 21)
!11217 = !DILocation(line: 2192, column: 3, scope: !11216)
!11218 = !DILocation(line: 0, scope: !11079)
!11219 = !DILocation(line: 2194, column: 1, scope: !11079)
!11220 = distinct !DISubprogram(name: "lwip_read", scope: !3, file: !3, line: 2250, type: !11221, isLocal: false, isDefinition: true, scopeLine: 2251, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11223)
!11221 = !DISubroutineType(types: !11222)
!11222 = !{!206, !80, !143, !216}
!11223 = !{!11224, !11225, !11226}
!11224 = !DILocalVariable(name: "s", arg: 1, scope: !11220, file: !3, line: 2250, type: !80)
!11225 = !DILocalVariable(name: "mem", arg: 2, scope: !11220, file: !3, line: 2250, type: !143)
!11226 = !DILocalVariable(name: "len", arg: 3, scope: !11220, file: !3, line: 2250, type: !216)
!11227 = !DILocation(line: 2250, column: 15, scope: !11220)
!11228 = !DILocation(line: 2250, column: 24, scope: !11220)
!11229 = !DILocation(line: 2250, column: 36, scope: !11220)
!11230 = !DILocation(line: 2252, column: 10, scope: !11220)
!11231 = !DILocation(line: 2252, column: 3, scope: !11220)
!11232 = distinct !DISubprogram(name: "event_callback", scope: !3, file: !3, line: 3475, type: !1364, isLocal: true, isDefinition: true, scopeLine: 3476, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11233)
!11233 = !{!11234, !11235, !11236, !11237, !11238, !11239, !11240, !11241, !11244, !11245}
!11234 = !DILocalVariable(name: "conn", arg: 1, scope: !11232, file: !3, line: 3475, type: !1169)
!11235 = !DILocalVariable(name: "evt", arg: 2, scope: !11232, file: !3, line: 3475, type: !71)
!11236 = !DILocalVariable(name: "len", arg: 3, scope: !11232, file: !3, line: 3475, type: !164)
!11237 = !DILocalVariable(name: "s", scope: !11232, file: !3, line: 3477, type: !80)
!11238 = !DILocalVariable(name: "check_waiters", scope: !11232, file: !3, line: 3477, type: !80)
!11239 = !DILocalVariable(name: "sock", scope: !11232, file: !3, line: 3478, type: !1165)
!11240 = !DILocalVariable(name: "lev", scope: !11232, file: !3, line: 3479, type: !134)
!11241 = !DILocalVariable(name: "has_recvevent", scope: !11242, file: !3, line: 3548, type: !80)
!11242 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 3546, column: 46)
!11243 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 3546, column: 7)
!11244 = !DILocalVariable(name: "has_sendevent", scope: !11242, file: !3, line: 3548, type: !80)
!11245 = !DILocalVariable(name: "has_errevent", scope: !11242, file: !3, line: 3548, type: !80)
!11246 = !DILocation(line: 3475, column: 32, scope: !11232)
!11247 = !DILocation(line: 3475, column: 55, scope: !11232)
!11248 = !DILocation(line: 3475, column: 66, scope: !11232)
!11249 = !DILocation(line: 3484, column: 7, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 3484, column: 7)
!11251 = !DILocation(line: 3484, column: 7, scope: !11232)
!11252 = !DILocation(line: 3485, column: 15, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11250, file: !3, line: 3484, column: 13)
!11254 = !DILocation(line: 3477, column: 7, scope: !11232)
!11255 = !DILocation(line: 3486, column: 11, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11253, file: !3, line: 3486, column: 9)
!11257 = !DILocation(line: 3486, column: 9, scope: !11253)
!11258 = !DILocation(line: 3492, column: 7, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11260, file: !3, line: 3492, column: 7)
!11260 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 3486, column: 16)
!11261 = !DILocation(line: 3479, column: 3, scope: !11232)
!11262 = !DILocation(line: 3493, column: 17, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11260, file: !3, line: 3493, column: 11)
!11264 = !DILocation(line: 3493, column: 24, scope: !11263)
!11265 = !DILocation(line: 3493, column: 11, scope: !11260)
!11266 = !DILocation(line: 3494, column: 17, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11268, file: !3, line: 3494, column: 13)
!11268 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 3493, column: 29)
!11269 = !DILocation(line: 3494, column: 13, scope: !11268)
!11270 = !DILocation(line: 3497, column: 23, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11267, file: !3, line: 3494, column: 41)
!11272 = !DILocation(line: 3498, column: 9, scope: !11271)
!11273 = !DILocation(line: 3499, column: 9, scope: !11268)
!11274 = !DILocation(line: 3500, column: 9, scope: !11268)
!11275 = !DILocation(line: 3503, column: 7, scope: !11260)
!11276 = !DILocation(line: 3504, column: 5, scope: !11260)
!11277 = !DILocation(line: 0, scope: !11253)
!11278 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !11279)
!11279 = distinct !DILocation(line: 3506, column: 12, scope: !11253)
!11280 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !11281)
!11281 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !11279)
!11282 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !11283)
!11283 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !11281)
!11284 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !11285)
!11285 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !11283)
!11286 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !11285)
!11287 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !11285)
!11288 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !11285)
!11289 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !11285)
!11290 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !11283)
!11291 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !11281)
!11292 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !11281)
!11293 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !11281)
!11294 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !11281)
!11295 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !11281)
!11296 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11297)
!11297 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !11279)
!11298 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11297)
!11299 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11297)
!11300 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !11279)
!11301 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11302)
!11302 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !11279)
!11303 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11302)
!11304 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11302)
!11305 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !11279)
!11306 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !11307)
!11307 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !11279)
!11308 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !11307)
!11309 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !11307)
!11310 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !11307)
!11311 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !11279)
!11312 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11313)
!11313 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11314)
!11314 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !11279)
!11315 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11313)
!11316 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11313)
!11317 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11314)
!11318 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11314)
!11319 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11314)
!11320 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11314)
!11321 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11314)
!11322 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !11279)
!11323 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !11279)
!11324 = !DILocation(line: 3507, column: 9, scope: !11253)
!11325 = !DILocation(line: 3477, column: 10, scope: !11232)
!11326 = !DILocation(line: 3515, column: 3, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 3515, column: 3)
!11328 = !DILocation(line: 3517, column: 3, scope: !11232)
!11329 = !DILocation(line: 3519, column: 13, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 3517, column: 16)
!11331 = !DILocation(line: 3519, column: 21, scope: !11330)
!11332 = !DILocation(line: 3520, column: 26, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 3520, column: 11)
!11334 = !DILocation(line: 3520, column: 11, scope: !11330)
!11335 = !DILocation(line: 3525, column: 13, scope: !11330)
!11336 = !DILocation(line: 3525, column: 21, scope: !11330)
!11337 = !DILocation(line: 3527, column: 7, scope: !11330)
!11338 = !DILocation(line: 3529, column: 17, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 3529, column: 11)
!11340 = !DILocation(line: 3529, column: 11, scope: !11339)
!11341 = !DILocation(line: 3532, column: 23, scope: !11330)
!11342 = !DILocation(line: 3533, column: 7, scope: !11330)
!11343 = !DILocation(line: 3535, column: 13, scope: !11330)
!11344 = !DILocation(line: 3535, column: 23, scope: !11330)
!11345 = !DILocation(line: 3537, column: 7, scope: !11330)
!11346 = !DILocation(line: 3539, column: 13, scope: !11330)
!11347 = !DILocation(line: 3539, column: 22, scope: !11330)
!11348 = !DILocation(line: 3540, column: 7, scope: !11330)
!11349 = !DILocation(line: 3542, column: 7, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11351, file: !3, line: 3542, column: 7)
!11351 = distinct !DILexicalBlock(scope: !11352, file: !3, line: 3542, column: 7)
!11352 = distinct !DILexicalBlock(scope: !11353, file: !3, line: 3542, column: 7)
!11353 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 3542, column: 7)
!11354 = !DILocation(line: 3542, column: 7, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11356, file: !3, line: 3542, column: 7)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !3, line: 3542, column: 7)
!11357 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 3542, column: 7)
!11358 = !DILocation(line: 3546, column: 13, scope: !11243)
!11359 = !DILocation(line: 3546, column: 7, scope: !11243)
!11360 = !DILocation(line: 3546, column: 28, scope: !11243)
!11361 = !DILocation(line: 3549, column: 27, scope: !11242)
!11362 = !DILocation(line: 3550, column: 27, scope: !11242)
!11363 = !DILocation(line: 3551, column: 26, scope: !11242)
!11364 = !DILocation(line: 3552, column: 5, scope: !11242)
!11365 = !DILocalVariable(name: "s", arg: 1, scope: !11366, file: !3, line: 3574, type: !80)
!11366 = distinct !DISubprogram(name: "select_check_waiters", scope: !3, file: !3, line: 3574, type: !11367, isLocal: true, isDefinition: true, scopeLine: 3575, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11369)
!11367 = !DISubroutineType(types: !11368)
!11368 = !{null, !80, !80, !80, !80}
!11369 = !{!11365, !11370, !11371, !11372, !11373, !11374}
!11370 = !DILocalVariable(name: "has_recvevent", arg: 2, scope: !11366, file: !3, line: 3574, type: !80)
!11371 = !DILocalVariable(name: "has_sendevent", arg: 3, scope: !11366, file: !3, line: 3574, type: !80)
!11372 = !DILocalVariable(name: "has_errevent", arg: 4, scope: !11366, file: !3, line: 3574, type: !80)
!11373 = !DILocalVariable(name: "scb", scope: !11366, file: !3, line: 3576, type: !238)
!11374 = !DILocalVariable(name: "do_signal", scope: !11375, file: !3, line: 3593, type: !80)
!11375 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 3591, column: 34)
!11376 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 3591, column: 9)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 3590, column: 60)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 3590, column: 3)
!11379 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 3590, column: 3)
!11380 = !DILocation(line: 3574, column: 38, scope: !11366, inlinedAt: !11381)
!11381 = distinct !DILocation(line: 3554, column: 5, scope: !11242)
!11382 = !DILocation(line: 3576, column: 26, scope: !11366, inlinedAt: !11381)
!11383 = !DILocation(line: 0, scope: !11378, inlinedAt: !11381)
!11384 = !DILocation(line: 3590, column: 34, scope: !11378, inlinedAt: !11381)
!11385 = !DILocation(line: 3590, column: 3, scope: !11379, inlinedAt: !11381)
!11386 = !DILocation(line: 3551, column: 35, scope: !11242)
!11387 = !DILocation(line: 3550, column: 37, scope: !11242)
!11388 = !DILocation(line: 3549, column: 36, scope: !11242)
!11389 = !DILocation(line: 3591, column: 14, scope: !11376, inlinedAt: !11381)
!11390 = !{!4373, !1409, i64 52}
!11391 = !DILocation(line: 3591, column: 28, scope: !11376, inlinedAt: !11381)
!11392 = !DILocation(line: 3591, column: 9, scope: !11377, inlinedAt: !11381)
!11393 = !DILocation(line: 3593, column: 11, scope: !11375, inlinedAt: !11381)
!11394 = !DILocation(line: 3595, column: 16, scope: !11395, inlinedAt: !11381)
!11395 = distinct !DILexicalBlock(scope: !11375, file: !3, line: 3595, column: 11)
!11396 = !DILocation(line: 3595, column: 25, scope: !11395, inlinedAt: !11381)
!11397 = !DILocation(line: 3595, column: 11, scope: !11375, inlinedAt: !11381)
!11398 = !DILocalVariable(name: "scb", arg: 1, scope: !11399, file: !3, line: 3436, type: !11402)
!11399 = distinct !DISubprogram(name: "lwip_poll_should_wake", scope: !3, file: !3, line: 3436, type: !11400, isLocal: true, isDefinition: true, scopeLine: 3437, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11404)
!11400 = !DISubroutineType(types: !11401)
!11401 = !{!80, !11402, !80, !80, !80, !80}
!11402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11403, size: 64)
!11403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!11404 = !{!11398, !11405, !11406, !11407, !11408, !11409, !11410}
!11405 = !DILocalVariable(name: "fd", arg: 2, scope: !11399, file: !3, line: 3436, type: !80)
!11406 = !DILocalVariable(name: "has_recvevent", arg: 3, scope: !11399, file: !3, line: 3436, type: !80)
!11407 = !DILocalVariable(name: "has_sendevent", arg: 4, scope: !11399, file: !3, line: 3436, type: !80)
!11408 = !DILocalVariable(name: "has_errevent", arg: 5, scope: !11399, file: !3, line: 3436, type: !80)
!11409 = !DILocalVariable(name: "fdi", scope: !11399, file: !3, line: 3438, type: !265)
!11410 = !DILocalVariable(name: "pollfd", scope: !11411, file: !3, line: 3440, type: !11414)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !3, line: 3439, column: 46)
!11412 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 3439, column: 3)
!11413 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 3439, column: 3)
!11414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11415, size: 64)
!11415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!11416 = !DILocation(line: 3436, column: 52, scope: !11399, inlinedAt: !11417)
!11417 = distinct !DILocation(line: 3596, column: 21, scope: !11418, inlinedAt: !11381)
!11418 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 3595, column: 34)
!11419 = !DILocation(line: 3436, column: 61, scope: !11399, inlinedAt: !11417)
!11420 = !DILocation(line: 3438, column: 10, scope: !11399, inlinedAt: !11417)
!11421 = !DILocation(line: 3439, column: 28, scope: !11412, inlinedAt: !11417)
!11422 = !DILocation(line: 3439, column: 21, scope: !11412, inlinedAt: !11417)
!11423 = !DILocation(line: 3439, column: 3, scope: !11413, inlinedAt: !11417)
!11424 = !DILocation(line: 3441, column: 17, scope: !11425, inlinedAt: !11417)
!11425 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 3441, column: 9)
!11426 = !DILocation(line: 3441, column: 20, scope: !11425, inlinedAt: !11417)
!11427 = !DILocation(line: 3441, column: 9, scope: !11411, inlinedAt: !11417)
!11428 = !DILocation(line: 3445, column: 25, scope: !11429, inlinedAt: !11417)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 3445, column: 11)
!11430 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 3441, column: 27)
!11431 = !DILocation(line: 3445, column: 37, scope: !11429, inlinedAt: !11417)
!11432 = !DILocation(line: 3445, column: 44, scope: !11429, inlinedAt: !11417)
!11433 = !DILocation(line: 3445, column: 54, scope: !11429, inlinedAt: !11417)
!11434 = !DILocation(line: 3445, column: 11, scope: !11430, inlinedAt: !11417)
!11435 = !DILocation(line: 3448, column: 25, scope: !11436, inlinedAt: !11417)
!11436 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 3448, column: 11)
!11437 = !DILocation(line: 3448, column: 37, scope: !11436, inlinedAt: !11417)
!11438 = !DILocation(line: 3448, column: 44, scope: !11436, inlinedAt: !11417)
!11439 = !DILocation(line: 3448, column: 11, scope: !11430, inlinedAt: !11417)
!11440 = !DILocation(line: 3451, column: 11, scope: !11430, inlinedAt: !11417)
!11441 = !DILocation(line: 3439, column: 42, scope: !11412, inlinedAt: !11417)
!11442 = distinct !{!11442, !11443, !11444}
!11443 = !DILocation(line: 3439, column: 3, scope: !11413)
!11444 = !DILocation(line: 3456, column: 3, scope: !11413)
!11445 = !DILocation(line: 0, scope: !11399, inlinedAt: !11417)
!11446 = !DILocation(line: 3458, column: 1, scope: !11399, inlinedAt: !11417)
!11447 = !DILocation(line: 3597, column: 7, scope: !11418, inlinedAt: !11381)
!11448 = !DILocation(line: 3605, column: 13, scope: !11449, inlinedAt: !11381)
!11449 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 3603, column: 7)
!11450 = !DILocation(line: 3606, column: 20, scope: !11451, inlinedAt: !11381)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 3606, column: 15)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 3605, column: 28)
!11453 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 3605, column: 13)
!11454 = !DILocation(line: 3606, column: 15, scope: !11451, inlinedAt: !11381)
!11455 = !DILocation(line: 3606, column: 28, scope: !11451, inlinedAt: !11381)
!11456 = !DILocation(line: 3606, column: 31, scope: !11451, inlinedAt: !11381)
!11457 = !DILocation(line: 3606, column: 15, scope: !11452, inlinedAt: !11381)
!11458 = !DILocation(line: 0, scope: !11375, inlinedAt: !11381)
!11459 = !DILocation(line: 3611, column: 16, scope: !11460, inlinedAt: !11381)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 3611, column: 15)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !3, line: 3610, column: 28)
!11462 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 3610, column: 13)
!11463 = !DILocation(line: 3610, column: 13, scope: !11449, inlinedAt: !11381)
!11464 = !DILocation(line: 3611, column: 34, scope: !11460, inlinedAt: !11381)
!11465 = !DILocation(line: 3611, column: 29, scope: !11460, inlinedAt: !11381)
!11466 = !DILocation(line: 3611, column: 43, scope: !11460, inlinedAt: !11381)
!11467 = !DILocation(line: 3611, column: 46, scope: !11460, inlinedAt: !11381)
!11468 = !DILocation(line: 3611, column: 15, scope: !11461, inlinedAt: !11381)
!11469 = !DILocation(line: 0, scope: !11470, inlinedAt: !11381)
!11470 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 3606, column: 58)
!11471 = !DILocation(line: 3616, column: 16, scope: !11472, inlinedAt: !11381)
!11472 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 3616, column: 15)
!11473 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 3615, column: 27)
!11474 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 3615, column: 13)
!11475 = !DILocation(line: 3615, column: 13, scope: !11449, inlinedAt: !11381)
!11476 = !DILocation(line: 3616, column: 34, scope: !11472, inlinedAt: !11381)
!11477 = !DILocation(line: 3616, column: 29, scope: !11472, inlinedAt: !11381)
!11478 = !DILocation(line: 3616, column: 44, scope: !11472, inlinedAt: !11381)
!11479 = !DILocation(line: 3616, column: 47, scope: !11472, inlinedAt: !11381)
!11480 = !DILocation(line: 3622, column: 11, scope: !11481, inlinedAt: !11381)
!11481 = distinct !DILexicalBlock(scope: !11375, file: !3, line: 3622, column: 11)
!11482 = !DILocation(line: 3622, column: 11, scope: !11375, inlinedAt: !11381)
!11483 = !DILocation(line: 3623, column: 28, scope: !11484, inlinedAt: !11381)
!11484 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 3622, column: 22)
!11485 = !DILocation(line: 3627, column: 24, scope: !11484, inlinedAt: !11381)
!11486 = !DILocation(line: 3627, column: 9, scope: !11484, inlinedAt: !11381)
!11487 = !DILocation(line: 3628, column: 7, scope: !11484, inlinedAt: !11381)
!11488 = !DILocation(line: 3590, column: 54, scope: !11378, inlinedAt: !11381)
!11489 = distinct !{!11489, !11490, !11491}
!11490 = !DILocation(line: 3590, column: 3, scope: !11379)
!11491 = !DILocation(line: 3631, column: 3, scope: !11379)
!11492 = !DILocation(line: 3646, column: 1, scope: !11366, inlinedAt: !11381)
!11493 = !DILocation(line: 3555, column: 3, scope: !11242)
!11494 = !DILocation(line: 3556, column: 5, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 3555, column: 10)
!11496 = !DILocation(line: 3559, column: 1, scope: !11232)
!11497 = distinct !DISubprogram(name: "lwip_write", scope: !3, file: !3, line: 2744, type: !11498, isLocal: false, isDefinition: true, scopeLine: 2745, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11500)
!11498 = !DISubroutineType(types: !11499)
!11499 = !{!206, !80, !225, !216}
!11500 = !{!11501, !11502, !11503}
!11501 = !DILocalVariable(name: "s", arg: 1, scope: !11497, file: !3, line: 2744, type: !80)
!11502 = !DILocalVariable(name: "data", arg: 2, scope: !11497, file: !3, line: 2744, type: !225)
!11503 = !DILocalVariable(name: "size", arg: 3, scope: !11497, file: !3, line: 2744, type: !216)
!11504 = !DILocation(line: 2744, column: 16, scope: !11497)
!11505 = !DILocation(line: 2744, column: 31, scope: !11497)
!11506 = !DILocation(line: 2744, column: 44, scope: !11497)
!11507 = !DILocation(line: 2746, column: 10, scope: !11497)
!11508 = !DILocation(line: 2746, column: 3, scope: !11497)
!11509 = distinct !DISubprogram(name: "lwip_selscan", scope: !3, file: !3, line: 2833, type: !11510, isLocal: true, isDefinition: true, scopeLine: 2835, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11512)
!11510 = !DISubroutineType(types: !11511)
!11511 = !{!80, !80, !245, !245, !245, !245, !245, !245}
!11512 = !{!11513, !11514, !11515, !11516, !11517, !11518, !11519, !11520, !11521, !11522, !11523, !11524, !11525, !11526, !11527, !11529, !11530, !11532, !11533, !11535, !11536, !11542, !11543, !11544}
!11513 = !DILocalVariable(name: "maxfdp1", arg: 1, scope: !11509, file: !3, line: 2833, type: !80)
!11514 = !DILocalVariable(name: "readset_in", arg: 2, scope: !11509, file: !3, line: 2833, type: !245)
!11515 = !DILocalVariable(name: "writeset_in", arg: 3, scope: !11509, file: !3, line: 2833, type: !245)
!11516 = !DILocalVariable(name: "exceptset_in", arg: 4, scope: !11509, file: !3, line: 2833, type: !245)
!11517 = !DILocalVariable(name: "readset_out", arg: 5, scope: !11509, file: !3, line: 2834, type: !245)
!11518 = !DILocalVariable(name: "writeset_out", arg: 6, scope: !11509, file: !3, line: 2834, type: !245)
!11519 = !DILocalVariable(name: "exceptset_out", arg: 7, scope: !11509, file: !3, line: 2834, type: !245)
!11520 = !DILocalVariable(name: "i", scope: !11509, file: !3, line: 2836, type: !80)
!11521 = !DILocalVariable(name: "nready", scope: !11509, file: !3, line: 2836, type: !80)
!11522 = !DILocalVariable(name: "lreadset", scope: !11509, file: !3, line: 2837, type: !246)
!11523 = !DILocalVariable(name: "lwriteset", scope: !11509, file: !3, line: 2837, type: !246)
!11524 = !DILocalVariable(name: "lexceptset", scope: !11509, file: !3, line: 2837, type: !246)
!11525 = !DILocalVariable(name: "sock", scope: !11509, file: !3, line: 2838, type: !1165)
!11526 = !DILocalVariable(name: "lev", scope: !11509, file: !3, line: 2839, type: !134)
!11527 = !DILocalVariable(name: "__i", scope: !11528, file: !3, line: 2841, type: !216)
!11528 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 2841, column: 3)
!11529 = !DILocalVariable(name: "__tmp", scope: !11528, file: !3, line: 2841, type: !144)
!11530 = !DILocalVariable(name: "__i", scope: !11531, file: !3, line: 2842, type: !216)
!11531 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 2842, column: 3)
!11532 = !DILocalVariable(name: "__tmp", scope: !11531, file: !3, line: 2842, type: !144)
!11533 = !DILocalVariable(name: "__i", scope: !11534, file: !3, line: 2843, type: !216)
!11534 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 2843, column: 3)
!11535 = !DILocalVariable(name: "__tmp", scope: !11534, file: !3, line: 2843, type: !144)
!11536 = !DILocalVariable(name: "lastdata", scope: !11537, file: !3, line: 2858, type: !143)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 2857, column: 23)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 2857, column: 9)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 2847, column: 50)
!11540 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 2847, column: 3)
!11541 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 2847, column: 3)
!11542 = !DILocalVariable(name: "rcvevent", scope: !11537, file: !3, line: 2859, type: !146)
!11543 = !DILocalVariable(name: "sendevent", scope: !11537, file: !3, line: 2860, type: !164)
!11544 = !DILocalVariable(name: "errevent", scope: !11537, file: !3, line: 2861, type: !164)
!11545 = !DILocation(line: 2833, column: 18, scope: !11509)
!11546 = !DILocation(line: 2833, column: 35, scope: !11509)
!11547 = !DILocation(line: 2833, column: 55, scope: !11509)
!11548 = !DILocation(line: 2833, column: 76, scope: !11509)
!11549 = !DILocation(line: 2834, column: 22, scope: !11509)
!11550 = !DILocation(line: 2834, column: 43, scope: !11509)
!11551 = !DILocation(line: 2834, column: 65, scope: !11509)
!11552 = !DILocation(line: 2836, column: 10, scope: !11509)
!11553 = !DILocation(line: 2837, column: 3, scope: !11509)
!11554 = !DILocation(line: 2841, column: 3, scope: !11528)
!11555 = !DILocation(line: 2841, column: 3, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 2841, column: 3)
!11557 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 2841, column: 3)
!11558 = !DILocation(line: 2842, column: 3, scope: !11531)
!11559 = !DILocation(line: 2842, column: 3, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11561, file: !3, line: 2842, column: 3)
!11561 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 2842, column: 3)
!11562 = !DILocation(line: 2843, column: 3, scope: !11534)
!11563 = !DILocation(line: 2843, column: 3, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 2843, column: 3)
!11565 = distinct !DILexicalBlock(scope: !11534, file: !3, line: 2843, column: 3)
!11566 = !DILocation(line: 2836, column: 7, scope: !11509)
!11567 = !DILocation(line: 2847, column: 34, scope: !11540)
!11568 = !DILocation(line: 2847, column: 3, scope: !11541)
!11569 = !DILocation(line: 2891, column: 18, scope: !11509)
!11570 = !DILocation(line: 2892, column: 19, scope: !11509)
!11571 = !DILocation(line: 2893, column: 20, scope: !11509)
!11572 = !DILocation(line: 2867, column: 9, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11574, file: !3, line: 2866, column: 92)
!11574 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 2866, column: 11)
!11575 = !DILocation(line: 2873, column: 9, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11577, file: !3, line: 2872, column: 72)
!11577 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 2872, column: 11)
!11578 = !DILocation(line: 2879, column: 9, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 2878, column: 73)
!11580 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 2878, column: 11)
!11581 = !DILocation(line: 2849, column: 22, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 2849, column: 9)
!11583 = !DILocation(line: 2849, column: 25, scope: !11582)
!11584 = !DILocation(line: 2849, column: 50, scope: !11582)
!11585 = !DILocation(line: 2850, column: 23, scope: !11582)
!11586 = !DILocation(line: 2850, column: 26, scope: !11582)
!11587 = !DILocation(line: 2850, column: 52, scope: !11582)
!11588 = !DILocation(line: 2851, column: 24, scope: !11582)
!11589 = !DILocation(line: 2851, column: 27, scope: !11582)
!11590 = !DILocation(line: 2849, column: 9, scope: !11539)
!11591 = !DILocation(line: 2855, column: 5, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 2855, column: 5)
!11593 = !DILocation(line: 2839, column: 3, scope: !11509)
!11594 = !DILocation(line: 1440, column: 33, scope: !5430, inlinedAt: !11595)
!11595 = distinct !DILocation(line: 2856, column: 12, scope: !11539)
!11596 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !11597)
!11597 = distinct !DILocation(line: 1442, column: 27, scope: !5430, inlinedAt: !11595)
!11598 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !11597)
!11599 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !11597)
!11600 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !11597)
!11601 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !11597)
!11602 = !DILocation(line: 1442, column: 21, scope: !5430, inlinedAt: !11595)
!11603 = !DILocation(line: 1448, column: 3, scope: !5430, inlinedAt: !11595)
!11604 = !DILocation(line: 2838, column: 21, scope: !11509)
!11605 = !DILocation(line: 2857, column: 9, scope: !11539)
!11606 = !DILocation(line: 2858, column: 30, scope: !11537)
!11607 = !DILocation(line: 2858, column: 39, scope: !11537)
!11608 = !DILocation(line: 2858, column: 13, scope: !11537)
!11609 = !DILocation(line: 2859, column: 30, scope: !11537)
!11610 = !DILocation(line: 2859, column: 13, scope: !11537)
!11611 = !DILocation(line: 2860, column: 31, scope: !11537)
!11612 = !DILocation(line: 2860, column: 13, scope: !11537)
!11613 = !DILocation(line: 2861, column: 30, scope: !11537)
!11614 = !DILocation(line: 2861, column: 13, scope: !11537)
!11615 = !DILocation(line: 2862, column: 7, scope: !11537)
!11616 = !DILocation(line: 2866, column: 22, scope: !11574)
!11617 = !DILocation(line: 2866, column: 25, scope: !11574)
!11618 = !DILocation(line: 2866, column: 49, scope: !11574)
!11619 = !DILocation(line: 2866, column: 63, scope: !11574)
!11620 = !DILocation(line: 2866, column: 85, scope: !11574)
!11621 = !DILocation(line: 2866, column: 72, scope: !11574)
!11622 = !DILocation(line: 2869, column: 15, scope: !11573)
!11623 = !DILocation(line: 2870, column: 7, scope: !11573)
!11624 = !DILocation(line: 0, scope: !11509)
!11625 = !DILocation(line: 2872, column: 23, scope: !11577)
!11626 = !DILocation(line: 2872, column: 26, scope: !11577)
!11627 = !DILocation(line: 2872, column: 65, scope: !11577)
!11628 = !DILocation(line: 2872, column: 51, scope: !11577)
!11629 = !DILocation(line: 2875, column: 15, scope: !11576)
!11630 = !DILocation(line: 2876, column: 7, scope: !11576)
!11631 = !DILocation(line: 0, scope: !11573)
!11632 = !DILocation(line: 2878, column: 24, scope: !11580)
!11633 = !DILocation(line: 2878, column: 27, scope: !11580)
!11634 = !DILocation(line: 2878, column: 66, scope: !11580)
!11635 = !DILocation(line: 2878, column: 53, scope: !11580)
!11636 = !DILocation(line: 2881, column: 15, scope: !11579)
!11637 = !DILocation(line: 2882, column: 7, scope: !11579)
!11638 = !DILocation(line: 2885, column: 7, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 2884, column: 12)
!11640 = !DILocation(line: 2887, column: 7, scope: !11639)
!11641 = !DILocation(line: 2847, column: 46, scope: !11540)
!11642 = distinct !{!11642, !11568, !11643}
!11643 = !DILocation(line: 2889, column: 3, scope: !11541)
!11644 = !DILocation(line: 0, scope: !11579)
!11645 = !DILocation(line: 2895, column: 3, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 2895, column: 3)
!11647 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 2895, column: 3)
!11648 = !DILocation(line: 2895, column: 3, scope: !11647)
!11649 = !DILocation(line: 2895, column: 3, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11651, file: !3, line: 2895, column: 3)
!11651 = distinct !DILexicalBlock(scope: !11646, file: !3, line: 2895, column: 3)
!11652 = !DILocation(line: 2895, column: 3, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 2895, column: 3)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 2895, column: 3)
!11655 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 2895, column: 3)
!11656 = !DILocation(line: 2897, column: 1, scope: !11509)
!11657 = distinct !DISubprogram(name: "lwip_unlink_select_cb", scope: !3, file: !3, line: 2793, type: !4427, isLocal: true, isDefinition: true, scopeLine: 2794, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11658)
!11658 = !{!11659}
!11659 = !DILocalVariable(name: "select_cb", arg: 1, scope: !11657, file: !3, line: 2793, type: !238)
!11660 = !DILocation(line: 2793, column: 46, scope: !11657)
!11661 = !DILocation(line: 2798, column: 3, scope: !11657)
!11662 = !DILocation(line: 2799, column: 18, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 2799, column: 7)
!11664 = !DILocation(line: 2799, column: 23, scope: !11663)
!11665 = !DILocation(line: 2799, column: 7, scope: !11657)
!11666 = !DILocation(line: 0, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 2799, column: 32)
!11668 = !DILocation(line: 2800, column: 40, scope: !11667)
!11669 = !DILocation(line: 2800, column: 22, scope: !11667)
!11670 = !DILocation(line: 2800, column: 27, scope: !11667)
!11671 = !DILocation(line: 2801, column: 3, scope: !11667)
!11672 = !DILocation(line: 2802, column: 7, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 2802, column: 7)
!11674 = !DILocation(line: 2802, column: 22, scope: !11673)
!11675 = !DILocation(line: 0, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 2806, column: 5)
!11677 = distinct !DILexicalBlock(scope: !11678, file: !3, line: 2806, column: 5)
!11678 = distinct !DILexicalBlock(scope: !11673, file: !3, line: 2805, column: 10)
!11679 = !DILocation(line: 2802, column: 7, scope: !11657)
!11680 = !DILocation(line: 2803, column: 5, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 2803, column: 5)
!11682 = distinct !DILexicalBlock(scope: !11673, file: !3, line: 2802, column: 36)
!11683 = !DILocation(line: 2803, column: 5, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11685, file: !3, line: 2803, column: 5)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !3, line: 2803, column: 5)
!11686 = distinct !DILexicalBlock(scope: !11681, file: !3, line: 2803, column: 5)
!11687 = !DILocation(line: 2803, column: 5, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11689, file: !3, line: 2803, column: 5)
!11689 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 2803, column: 5)
!11690 = distinct !DILexicalBlock(scope: !11684, file: !3, line: 2803, column: 5)
!11691 = !DILocation(line: 2806, column: 5, scope: !11677)
!11692 = !DILocation(line: 2806, column: 5, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 2806, column: 5)
!11694 = distinct !DILexicalBlock(scope: !11676, file: !3, line: 2806, column: 5)
!11695 = !DILocation(line: 2806, column: 5, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 2806, column: 5)
!11697 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 2806, column: 5)
!11698 = distinct !DILexicalBlock(scope: !11693, file: !3, line: 2806, column: 5)
!11699 = !DILocation(line: 2807, column: 27, scope: !11678)
!11700 = !DILocation(line: 0, scope: !11682)
!11701 = !DILocation(line: 2813, column: 3, scope: !11657)
!11702 = !DILocation(line: 2814, column: 1, scope: !11657)
!11703 = distinct !DISubprogram(name: "lwip_pollscan", scope: !3, file: !3, line: 3191, type: !11704, isLocal: true, isDefinition: true, scopeLine: 3192, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11706)
!11704 = !DISubroutineType(types: !11705)
!11705 = !{!80, !258, !265, !119}
!11706 = !{!11707, !11708, !11709, !11710, !11711, !11712, !11713, !11714, !11722, !11723, !11724}
!11707 = !DILocalVariable(name: "fds", arg: 1, scope: !11703, file: !3, line: 3191, type: !258)
!11708 = !DILocalVariable(name: "nfds", arg: 2, scope: !11703, file: !3, line: 3191, type: !265)
!11709 = !DILocalVariable(name: "opts", arg: 3, scope: !11703, file: !3, line: 3191, type: !119)
!11710 = !DILocalVariable(name: "nready", scope: !11703, file: !3, line: 3193, type: !80)
!11711 = !DILocalVariable(name: "fdi", scope: !11703, file: !3, line: 3194, type: !265)
!11712 = !DILocalVariable(name: "sock", scope: !11703, file: !3, line: 3195, type: !1165)
!11713 = !DILocalVariable(name: "lev", scope: !11703, file: !3, line: 3196, type: !134)
!11714 = !DILocalVariable(name: "lastdata", scope: !11715, file: !3, line: 3213, type: !143)
!11715 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 3212, column: 25)
!11716 = distinct !DILexicalBlock(scope: !11717, file: !3, line: 3212, column: 11)
!11717 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 3208, column: 65)
!11718 = distinct !DILexicalBlock(scope: !11719, file: !3, line: 3208, column: 9)
!11719 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 3199, column: 36)
!11720 = distinct !DILexicalBlock(scope: !11721, file: !3, line: 3199, column: 3)
!11721 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 3199, column: 3)
!11722 = !DILocalVariable(name: "rcvevent", scope: !11715, file: !3, line: 3214, type: !146)
!11723 = !DILocalVariable(name: "sendevent", scope: !11715, file: !3, line: 3215, type: !164)
!11724 = !DILocalVariable(name: "errevent", scope: !11715, file: !3, line: 3216, type: !164)
!11725 = !DILocation(line: 3191, column: 30, scope: !11703)
!11726 = !DILocation(line: 3191, column: 42, scope: !11703)
!11727 = !DILocation(line: 3191, column: 72, scope: !11703)
!11728 = !DILocation(line: 3193, column: 7, scope: !11703)
!11729 = !DILocation(line: 3194, column: 10, scope: !11703)
!11730 = !DILocation(line: 3199, column: 21, scope: !11720)
!11731 = !DILocation(line: 3199, column: 3, scope: !11721)
!11732 = !DILocation(line: 3200, column: 9, scope: !11719)
!11733 = !DILocation(line: 3201, column: 16, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 3200, column: 44)
!11735 = distinct !DILexicalBlock(scope: !11719, file: !3, line: 3200, column: 9)
!11736 = !DILocation(line: 3201, column: 24, scope: !11734)
!11737 = !DILocation(line: 3202, column: 5, scope: !11734)
!11738 = !DILocation(line: 3208, column: 18, scope: !11718)
!11739 = !DILocation(line: 3208, column: 21, scope: !11718)
!11740 = !DILocation(line: 0, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11719, file: !3, line: 3266, column: 9)
!11742 = !DILocation(line: 3208, column: 26, scope: !11718)
!11743 = !DILocation(line: 3208, column: 39, scope: !11718)
!11744 = !DILocation(line: 3208, column: 47, scope: !11718)
!11745 = !DILocation(line: 3208, column: 59, scope: !11718)
!11746 = !DILocation(line: 3208, column: 9, scope: !11719)
!11747 = !DILocation(line: 3210, column: 7, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11717, file: !3, line: 3210, column: 7)
!11749 = !DILocation(line: 3196, column: 3, scope: !11703)
!11750 = !DILocation(line: 3211, column: 51, scope: !11717)
!11751 = !DILocation(line: 1440, column: 33, scope: !5430, inlinedAt: !11752)
!11752 = distinct !DILocation(line: 3211, column: 14, scope: !11717)
!11753 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !11754)
!11754 = distinct !DILocation(line: 1442, column: 27, scope: !5430, inlinedAt: !11752)
!11755 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !11754)
!11756 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !11754)
!11757 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !11754)
!11758 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !11754)
!11759 = !DILocation(line: 1442, column: 21, scope: !5430, inlinedAt: !11752)
!11760 = !DILocation(line: 1448, column: 3, scope: !5430, inlinedAt: !11752)
!11761 = !DILocation(line: 3195, column: 21, scope: !11703)
!11762 = !DILocation(line: 3212, column: 11, scope: !11717)
!11763 = !DILocation(line: 3213, column: 32, scope: !11715)
!11764 = !DILocation(line: 3213, column: 41, scope: !11715)
!11765 = !DILocation(line: 3213, column: 15, scope: !11715)
!11766 = !DILocation(line: 3214, column: 32, scope: !11715)
!11767 = !DILocation(line: 3214, column: 15, scope: !11715)
!11768 = !DILocation(line: 3215, column: 33, scope: !11715)
!11769 = !DILocation(line: 3215, column: 15, scope: !11715)
!11770 = !DILocation(line: 3216, column: 32, scope: !11715)
!11771 = !DILocation(line: 3216, column: 15, scope: !11715)
!11772 = !DILocation(line: 3218, column: 13, scope: !11715)
!11773 = !DILocation(line: 3219, column: 17, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !3, line: 3218, column: 51)
!11775 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 3218, column: 13)
!11776 = !DILocation(line: 3219, column: 31, scope: !11774)
!11777 = !DILocation(line: 3220, column: 36, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11774, file: !3, line: 3220, column: 15)
!11779 = !DILocation(line: 3220, column: 15, scope: !11774)
!11780 = !DILocation(line: 3228, column: 20, scope: !11775)
!11781 = !DILocation(line: 3230, column: 11, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !3, line: 3230, column: 11)
!11783 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 3230, column: 11)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 3228, column: 58)
!11785 = distinct !DILexicalBlock(scope: !11775, file: !3, line: 3228, column: 20)
!11786 = !DILocation(line: 3230, column: 11, scope: !11783)
!11787 = !DILocation(line: 3230, column: 11, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 3230, column: 11)
!11789 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 3230, column: 11)
!11790 = !DILocation(line: 3230, column: 11, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 3230, column: 11)
!11792 = distinct !DILexicalBlock(scope: !11793, file: !3, line: 3230, column: 11)
!11793 = distinct !DILexicalBlock(scope: !11788, file: !3, line: 3230, column: 11)
!11794 = !DILocation(line: 3232, column: 33, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11796, file: !3, line: 3231, column: 41)
!11796 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 3231, column: 15)
!11797 = !DILocation(line: 3233, column: 11, scope: !11795)
!11798 = !DILocation(line: 3235, column: 9, scope: !11715)
!11799 = !DILocation(line: 3240, column: 23, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 3240, column: 13)
!11801 = !DILocation(line: 3240, column: 30, scope: !11800)
!11802 = !DILocation(line: 3240, column: 40, scope: !11800)
!11803 = !DILocation(line: 3240, column: 45, scope: !11800)
!11804 = !DILocation(line: 3240, column: 59, scope: !11800)
!11805 = !DILocation(line: 3240, column: 81, scope: !11800)
!11806 = !DILocation(line: 3240, column: 68, scope: !11800)
!11807 = !DILocation(line: 3241, column: 28, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11800, file: !3, line: 3240, column: 88)
!11809 = !DILocation(line: 3243, column: 9, scope: !11808)
!11810 = !DILocation(line: 3245, column: 30, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 3245, column: 13)
!11812 = !DILocation(line: 3245, column: 41, scope: !11811)
!11813 = !DILocation(line: 3245, column: 60, scope: !11811)
!11814 = !DILocation(line: 3245, column: 46, scope: !11811)
!11815 = !DILocation(line: 3246, column: 28, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11811, file: !3, line: 3245, column: 67)
!11817 = !DILocation(line: 3248, column: 9, scope: !11816)
!11818 = !DILocation(line: 3250, column: 22, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 3250, column: 13)
!11820 = !DILocation(line: 3250, column: 13, scope: !11715)
!11821 = !DILocation(line: 3252, column: 28, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 3250, column: 28)
!11823 = !DILocation(line: 3254, column: 9, scope: !11822)
!11824 = !DILocation(line: 3222, column: 33, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11778, file: !3, line: 3220, column: 42)
!11826 = !DILocation(line: 3224, column: 13, scope: !11825)
!11827 = !DILocation(line: 3271, column: 3, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 3271, column: 3)
!11829 = distinct !DILexicalBlock(scope: !11830, file: !3, line: 3271, column: 3)
!11830 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 3271, column: 3)
!11831 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 3271, column: 3)
!11832 = !DILocation(line: 3271, column: 3, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11834, file: !3, line: 3271, column: 3)
!11834 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 3271, column: 3)
!11835 = distinct !DILexicalBlock(scope: !11828, file: !3, line: 3271, column: 3)
!11836 = !DILocation(line: 3257, column: 9, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 3255, column: 14)
!11838 = !DILocation(line: 3259, column: 26, scope: !11837)
!11839 = !DILocation(line: 3260, column: 9, scope: !11837)
!11840 = !DILocation(line: 3266, column: 18, scope: !11741)
!11841 = !DILocation(line: 3266, column: 26, scope: !11741)
!11842 = !DILocation(line: 3266, column: 9, scope: !11719)
!11843 = !DILocation(line: 3199, column: 32, scope: !11720)
!11844 = distinct !{!11844, !11731, !11845}
!11845 = !DILocation(line: 3269, column: 3, scope: !11721)
!11846 = !DILocation(line: 0, scope: !11837)
!11847 = !DILocation(line: 3273, column: 1, scope: !11703)
!11848 = distinct !DISubprogram(name: "lwip_getaddrname", scope: !3, file: !3, line: 3698, type: !11849, isLocal: true, isDefinition: true, scopeLine: 3699, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11851)
!11849 = !DISubroutineType(types: !11850)
!11850 = !{!80, !80, !1004, !3003, !156}
!11851 = !{!11852, !11853, !11854, !11855, !11856, !11857, !11858, !11859, !11860, !11861, !11865, !11871, !11873}
!11852 = !DILocalVariable(name: "s", arg: 1, scope: !11848, file: !3, line: 3698, type: !80)
!11853 = !DILocalVariable(name: "name", arg: 2, scope: !11848, file: !3, line: 3698, type: !1004)
!11854 = !DILocalVariable(name: "namelen", arg: 3, scope: !11848, file: !3, line: 3698, type: !3003)
!11855 = !DILocalVariable(name: "local", arg: 4, scope: !11848, file: !3, line: 3698, type: !156)
!11856 = !DILocalVariable(name: "sock", scope: !11848, file: !3, line: 3700, type: !1165)
!11857 = !DILocalVariable(name: "saddr", scope: !11848, file: !3, line: 3701, type: !3282)
!11858 = !DILocalVariable(name: "naddr", scope: !11848, file: !3, line: 3702, type: !1183)
!11859 = !DILocalVariable(name: "port", scope: !11848, file: !3, line: 3703, type: !164)
!11860 = !DILocalVariable(name: "err", scope: !11848, file: !3, line: 3704, type: !1283)
!11861 = !DILocalVariable(name: "sockerr", scope: !11862, file: !3, line: 3714, type: !1007)
!11862 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 3714, column: 5)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 3713, column: 22)
!11864 = distinct !DILexicalBlock(scope: !11848, file: !3, line: 3713, column: 7)
!11865 = !DILocalVariable(name: "tid", scope: !11866, file: !3, line: 3714, type: !170)
!11866 = distinct !DILexicalBlock(scope: !11867, file: !3, line: 3714, column: 5)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 3714, column: 5)
!11868 = distinct !DILexicalBlock(scope: !11869, file: !3, line: 3714, column: 5)
!11869 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 3714, column: 5)
!11870 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 3714, column: 5)
!11871 = !DILocalVariable(name: "sockerr", scope: !11872, file: !3, line: 3739, type: !1007)
!11872 = distinct !DILexicalBlock(scope: !11848, file: !3, line: 3739, column: 3)
!11873 = !DILocalVariable(name: "tid", scope: !11874, file: !3, line: 3739, type: !170)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 3739, column: 3)
!11875 = distinct !DILexicalBlock(scope: !11876, file: !3, line: 3739, column: 3)
!11876 = distinct !DILexicalBlock(scope: !11877, file: !3, line: 3739, column: 3)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 3739, column: 3)
!11878 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 3739, column: 3)
!11879 = !DILocation(line: 3698, column: 22, scope: !11848)
!11880 = !DILocation(line: 3698, column: 42, scope: !11848)
!11881 = !DILocation(line: 3698, column: 59, scope: !11848)
!11882 = !DILocation(line: 3698, column: 73, scope: !11848)
!11883 = !DILocation(line: 3701, column: 3, scope: !11848)
!11884 = !DILocation(line: 3702, column: 3, scope: !11848)
!11885 = !DILocation(line: 3703, column: 3, scope: !11848)
!11886 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !11887)
!11887 = distinct !DILocation(line: 3706, column: 10, scope: !11848)
!11888 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !11889)
!11889 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !11887)
!11890 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !11891)
!11891 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !11889)
!11892 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !11893)
!11893 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !11891)
!11894 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !11893)
!11895 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !11893)
!11896 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !11893)
!11897 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !11891)
!11898 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !11889)
!11899 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !11893)
!11900 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !11889)
!11901 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !11889)
!11902 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !11889)
!11903 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !11889)
!11904 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11905)
!11905 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !11887)
!11906 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11905)
!11907 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11905)
!11908 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !11887)
!11909 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11910)
!11910 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !11887)
!11911 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11910)
!11912 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11910)
!11913 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !11887)
!11914 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !11915)
!11915 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !11887)
!11916 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !11915)
!11917 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !11915)
!11918 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !11915)
!11919 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !11887)
!11920 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11921)
!11921 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11922)
!11922 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !11887)
!11923 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11921)
!11924 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11921)
!11925 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11922)
!11926 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11922)
!11927 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11922)
!11928 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11922)
!11929 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11922)
!11930 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !11887)
!11931 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !11887)
!11932 = !DILocation(line: 3707, column: 7, scope: !11848)
!11933 = !DILocation(line: 3702, column: 13, scope: !11848)
!11934 = !DILocation(line: 3703, column: 9, scope: !11848)
!11935 = !DILocation(line: 3712, column: 9, scope: !11848)
!11936 = !DILocation(line: 3704, column: 9, scope: !11848)
!11937 = !DILocation(line: 3713, column: 11, scope: !11864)
!11938 = !DILocation(line: 3713, column: 7, scope: !11848)
!11939 = !DILocation(line: 3714, column: 5, scope: !11862)
!11940 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11941)
!11941 = distinct !DILocation(line: 3714, column: 5, scope: !11869)
!11942 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11941)
!11943 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11941)
!11944 = !DILocation(line: 3714, column: 5, scope: !11869)
!11945 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11946)
!11946 = distinct !DILocation(line: 3714, column: 5, scope: !11869)
!11947 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11946)
!11948 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11946)
!11949 = !DILocation(line: 3714, column: 5, scope: !11870)
!11950 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !11951)
!11951 = distinct !DILocation(line: 3714, column: 5, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11869, file: !3, line: 3714, column: 5)
!11953 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !11951)
!11954 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !11951)
!11955 = !DILocation(line: 3714, column: 5, scope: !11952)
!11956 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11957)
!11957 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11958)
!11958 = distinct !DILocation(line: 3714, column: 5, scope: !11866)
!11959 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11957)
!11960 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11957)
!11961 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11958)
!11962 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11958)
!11963 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11958)
!11964 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11958)
!11965 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11958)
!11966 = !DILocation(line: 3714, column: 5, scope: !11866)
!11967 = !{i32 -2144640149, i32 -2144640136, i32 -2144640111, i32 -2144640087, i32 -2144640062, i32 -2144639987, i32 -2144639962, i32 -2144639818, i32 -2144637595, i32 -2144637506, i32 -2144637385, i32 -2144637290, i32 -2144637189, i32 -2144637162, i32 -2144637079, i32 -2144636990, i32 -2144636869, i32 -2144636769, i32 -2144636663, i32 -2144636555, i32 -2144639530, i32 -2144639477, i32 -2144639446, i32 -2144639415, i32 -2144639394, i32 -2144639372, i32 -2144639323, i32 -2144639302, i32 -2144636472, i32 -2144636383, i32 -2144636262, i32 -2144636163, i32 -2144636057, i32 -2144635955, i32 -2144635922, i32 -2144635849, i32 -2144635781, i32 -2144638928, i32 -2144638875, i32 -2144638844, i32 -2144638813, i32 -2144638792, i32 -2144638770, i32 -2144638721, i32 -2144638700, i32 -2144635726, i32 -2144635637, i32 -2144635516, i32 -2144635417, i32 -2144635311, i32 -2144635209, i32 -2144635176, i32 -2144635093, i32 -2144635004, i32 -2144634883, i32 -2144634783, i32 -2144634757, i32 -2144634654, i32 -2144634628, i32 -2144638442, i32 -2144638375, i32 -2144638350, i32 -2144638286, i32 -2144638170, i32 -2144638145, i32 -2144638120}
!11968 = !DILocation(line: 3721, column: 7, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11848, file: !3, line: 3721, column: 7)
!11970 = !DILocation(line: 0, scope: !11969)
!11971 = !DILocation(line: 3722, column: 7, scope: !11969)
!11972 = !DILocation(line: 3721, column: 52, scope: !11969)
!11973 = !DILocation(line: 3723, column: 5, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 3723, column: 5)
!11975 = distinct !DILexicalBlock(scope: !11969, file: !3, line: 3722, column: 28)
!11976 = !DILocation(line: 3724, column: 5, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 3724, column: 5)
!11978 = !DILocation(line: 3728, column: 3, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11980, file: !3, line: 3728, column: 3)
!11980 = distinct !DILexicalBlock(scope: !11848, file: !3, line: 3728, column: 3)
!11981 = !DILocation(line: 3728, column: 3, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 3728, column: 3)
!11983 = distinct !DILexicalBlock(scope: !11979, file: !3, line: 3728, column: 3)
!11984 = !DILocation(line: 3728, column: 3, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 3728, column: 3)
!11986 = !DILocation(line: 3728, column: 3, scope: !11983)
!11987 = !DILocation(line: 3728, column: 3, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 3728, column: 3)
!11989 = distinct !DILexicalBlock(scope: !11979, file: !3, line: 3728, column: 3)
!11990 = !DILocation(line: 3734, column: 7, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11848, file: !3, line: 3734, column: 7)
!11992 = !DILocation(line: 3734, column: 27, scope: !11991)
!11993 = !DILocation(line: 3734, column: 18, scope: !11991)
!11994 = !DILocation(line: 3734, column: 16, scope: !11991)
!11995 = !DILocation(line: 3734, column: 7, scope: !11848)
!11996 = !DILocation(line: 3735, column: 14, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 3734, column: 35)
!11998 = !DILocation(line: 3736, column: 3, scope: !11997)
!11999 = !DILocation(line: 3737, column: 3, scope: !11848)
!12000 = !DILocation(line: 3739, column: 3, scope: !11872)
!12001 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12002)
!12002 = distinct !DILocation(line: 3739, column: 3, scope: !11877)
!12003 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12002)
!12004 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12002)
!12005 = !DILocation(line: 3739, column: 3, scope: !11877)
!12006 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12007)
!12007 = distinct !DILocation(line: 3739, column: 3, scope: !11877)
!12008 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12007)
!12009 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12007)
!12010 = !DILocation(line: 3739, column: 3, scope: !11878)
!12011 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12012)
!12012 = distinct !DILocation(line: 3739, column: 3, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !11877, file: !3, line: 3739, column: 3)
!12014 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12012)
!12015 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12012)
!12016 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12012)
!12017 = !DILocation(line: 3739, column: 3, scope: !12013)
!12018 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12019)
!12019 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12020)
!12020 = distinct !DILocation(line: 3739, column: 3, scope: !11874)
!12021 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12019)
!12022 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12019)
!12023 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12020)
!12024 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12020)
!12025 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12020)
!12026 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12020)
!12027 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12020)
!12028 = !DILocation(line: 3739, column: 3, scope: !11874)
!12029 = !{i32 -2144624411, i32 -2144624398, i32 -2144624373, i32 -2144624349, i32 -2144624324, i32 -2144624249, i32 -2144624224, i32 -2144624080, i32 -2144621857, i32 -2144621768, i32 -2144621647, i32 -2144621552, i32 -2144621451, i32 -2144621424, i32 -2144621341, i32 -2144621252, i32 -2144621131, i32 -2144621031, i32 -2144620925, i32 -2144620817, i32 -2144623792, i32 -2144623739, i32 -2144623708, i32 -2144623677, i32 -2144623656, i32 -2144623634, i32 -2144623585, i32 -2144623564, i32 -2144620734, i32 -2144620645, i32 -2144620524, i32 -2144620425, i32 -2144620319, i32 -2144620217, i32 -2144620184, i32 -2144620111, i32 -2144620043, i32 -2144623190, i32 -2144623137, i32 -2144623106, i32 -2144623075, i32 -2144623054, i32 -2144623032, i32 -2144622983, i32 -2144622962, i32 -2144619988, i32 -2144619899, i32 -2144619778, i32 -2144619679, i32 -2144619573, i32 -2144619471, i32 -2144619438, i32 -2144619355, i32 -2144619266, i32 -2144619145, i32 -2144619045, i32 -2144619019, i32 -2144618916, i32 -2144618890, i32 -2144622704, i32 -2144622637, i32 -2144622612, i32 -2144622548, i32 -2144622432, i32 -2144622407, i32 -2144622382}
!12030 = !DILocation(line: 0, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 3707, column: 14)
!12032 = distinct !DILexicalBlock(scope: !11848, file: !3, line: 3707, column: 7)
!12033 = !DILocation(line: 3742, column: 1, scope: !11848)
!12034 = distinct !DISubprogram(name: "lwip_fcntl", scope: !3, file: !3, line: 4834, type: !2283, isLocal: false, isDefinition: true, scopeLine: 4835, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12035)
!12035 = !{!12036, !12037, !12038, !12039, !12040, !12041, !12042, !12045, !12051, !12055, !12061, !12064, !12070, !12072}
!12036 = !DILocalVariable(name: "s", arg: 1, scope: !12034, file: !3, line: 4834, type: !80)
!12037 = !DILocalVariable(name: "cmd", arg: 2, scope: !12034, file: !3, line: 4834, type: !80)
!12038 = !DILocalVariable(name: "val", arg: 3, scope: !12034, file: !3, line: 4834, type: !80)
!12039 = !DILocalVariable(name: "sock", scope: !12034, file: !3, line: 4836, type: !1165)
!12040 = !DILocalVariable(name: "ret", scope: !12034, file: !3, line: 4837, type: !80)
!12041 = !DILocalVariable(name: "op_mode", scope: !12034, file: !3, line: 4838, type: !80)
!12042 = !DILocalVariable(name: "sockerr", scope: !12043, file: !3, line: 4847, type: !1007)
!12043 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 4847, column: 7)
!12044 = distinct !DILexicalBlock(scope: !12034, file: !3, line: 4844, column: 16)
!12045 = !DILocalVariable(name: "tid", scope: !12046, file: !3, line: 4847, type: !170)
!12046 = distinct !DILexicalBlock(scope: !12047, file: !3, line: 4847, column: 7)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !3, line: 4847, column: 7)
!12048 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 4847, column: 7)
!12049 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 4847, column: 7)
!12050 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 4847, column: 7)
!12051 = !DILocalVariable(name: "sockerr", scope: !12052, file: !3, line: 4888, type: !1007)
!12052 = distinct !DILexicalBlock(scope: !12053, file: !3, line: 4888, column: 9)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 4884, column: 37)
!12054 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 4884, column: 11)
!12055 = !DILocalVariable(name: "tid", scope: !12056, file: !3, line: 4888, type: !170)
!12056 = distinct !DILexicalBlock(scope: !12057, file: !3, line: 4888, column: 9)
!12057 = distinct !DILexicalBlock(scope: !12058, file: !3, line: 4888, column: 9)
!12058 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 4888, column: 9)
!12059 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 4888, column: 9)
!12060 = distinct !DILexicalBlock(scope: !12052, file: !3, line: 4888, column: 9)
!12061 = !DILocalVariable(name: "sockerr", scope: !12062, file: !3, line: 4890, type: !1007)
!12062 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 4890, column: 9)
!12063 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 4889, column: 14)
!12064 = !DILocalVariable(name: "tid", scope: !12065, file: !3, line: 4890, type: !170)
!12065 = distinct !DILexicalBlock(scope: !12066, file: !3, line: 4890, column: 9)
!12066 = distinct !DILexicalBlock(scope: !12067, file: !3, line: 4890, column: 9)
!12067 = distinct !DILexicalBlock(scope: !12068, file: !3, line: 4890, column: 9)
!12068 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 4890, column: 9)
!12069 = distinct !DILexicalBlock(scope: !12062, file: !3, line: 4890, column: 9)
!12070 = !DILocalVariable(name: "sockerr", scope: !12071, file: !3, line: 4895, type: !1007)
!12071 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 4895, column: 7)
!12072 = !DILocalVariable(name: "tid", scope: !12073, file: !3, line: 4895, type: !170)
!12073 = distinct !DILexicalBlock(scope: !12074, file: !3, line: 4895, column: 7)
!12074 = distinct !DILexicalBlock(scope: !12075, file: !3, line: 4895, column: 7)
!12075 = distinct !DILexicalBlock(scope: !12076, file: !3, line: 4895, column: 7)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !3, line: 4895, column: 7)
!12077 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 4895, column: 7)
!12078 = !DILocation(line: 4834, column: 16, scope: !12034)
!12079 = !DILocation(line: 4834, column: 23, scope: !12034)
!12080 = !DILocation(line: 4834, column: 32, scope: !12034)
!12081 = !DILocation(line: 1477, column: 16, scope: !1556, inlinedAt: !12082)
!12082 = distinct !DILocation(line: 4836, column: 28, scope: !12034)
!12083 = !DILocation(line: 1458, column: 19, scope: !1572, inlinedAt: !12084)
!12084 = distinct !DILocation(line: 1479, column: 28, scope: !1556, inlinedAt: !12082)
!12085 = !DILocation(line: 1427, column: 26, scope: !1578, inlinedAt: !12086)
!12086 = distinct !DILocation(line: 1460, column: 28, scope: !1572, inlinedAt: !12084)
!12087 = !DILocation(line: 1409, column: 32, scope: !1584, inlinedAt: !12088)
!12088 = distinct !DILocation(line: 1429, column: 27, scope: !1578, inlinedAt: !12086)
!12089 = !DILocation(line: 1411, column: 7, scope: !1584, inlinedAt: !12088)
!12090 = !DILocation(line: 1412, column: 15, scope: !1591, inlinedAt: !12088)
!12091 = !DILocation(line: 1417, column: 1, scope: !1584, inlinedAt: !12088)
!12092 = !DILocation(line: 1435, column: 3, scope: !1578, inlinedAt: !12086)
!12093 = !DILocation(line: 1461, column: 7, scope: !1572, inlinedAt: !12084)
!12094 = !DILocation(line: 1416, column: 11, scope: !1584, inlinedAt: !12088)
!12095 = !DILocation(line: 1462, column: 15, scope: !1599, inlinedAt: !12084)
!12096 = !DILocation(line: 1462, column: 9, scope: !1599, inlinedAt: !12084)
!12097 = !DILocation(line: 1462, column: 9, scope: !1600, inlinedAt: !12084)
!12098 = !DILocation(line: 1468, column: 1, scope: !1572, inlinedAt: !12084)
!12099 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12100)
!12100 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !12082)
!12101 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12100)
!12102 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12100)
!12103 = !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !12082)
!12104 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12105)
!12105 = distinct !DILocation(line: 1484, column: 5, scope: !1565, inlinedAt: !12082)
!12106 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12105)
!12107 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12105)
!12108 = !DILocation(line: 1484, column: 5, scope: !1566, inlinedAt: !12082)
!12109 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12110)
!12110 = distinct !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !12082)
!12111 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12110)
!12112 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12110)
!12113 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12110)
!12114 = !DILocation(line: 1484, column: 5, scope: !1624, inlinedAt: !12082)
!12115 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12116)
!12116 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12117)
!12117 = distinct !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !12082)
!12118 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12116)
!12119 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12116)
!12120 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12117)
!12121 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12117)
!12122 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12117)
!12123 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12117)
!12124 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12117)
!12125 = !DILocation(line: 1484, column: 5, scope: !1562, inlinedAt: !12082)
!12126 = !DILocation(line: 1488, column: 1, scope: !1556, inlinedAt: !12082)
!12127 = !DILocation(line: 4837, column: 7, scope: !12034)
!12128 = !DILocation(line: 4838, column: 7, scope: !12034)
!12129 = !DILocation(line: 4840, column: 7, scope: !12034)
!12130 = !DILocation(line: 4844, column: 3, scope: !12034)
!12131 = !DILocation(line: 4846, column: 13, scope: !12044)
!12132 = !DILocation(line: 4847, column: 7, scope: !12043)
!12133 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12134)
!12134 = distinct !DILocation(line: 4847, column: 7, scope: !12049)
!12135 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12134)
!12136 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12134)
!12137 = !DILocation(line: 4847, column: 7, scope: !12049)
!12138 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12139)
!12139 = distinct !DILocation(line: 4847, column: 7, scope: !12049)
!12140 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12139)
!12141 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12139)
!12142 = !DILocation(line: 4847, column: 7, scope: !12050)
!12143 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12144)
!12144 = distinct !DILocation(line: 4847, column: 7, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 4847, column: 7)
!12146 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12144)
!12147 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12144)
!12148 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12144)
!12149 = !DILocation(line: 4847, column: 7, scope: !12145)
!12150 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12151)
!12151 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12152)
!12152 = distinct !DILocation(line: 4847, column: 7, scope: !12046)
!12153 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12151)
!12154 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12151)
!12155 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12152)
!12156 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12152)
!12157 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12152)
!12158 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12152)
!12159 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12152)
!12160 = !DILocation(line: 4847, column: 7, scope: !12046)
!12161 = !{i32 -2144554849, i32 -2144554836, i32 -2144554811, i32 -2144554787, i32 -2144554762, i32 -2144554687, i32 -2144554662, i32 -2144554518, i32 -2144552295, i32 -2144552206, i32 -2144552085, i32 -2144551990, i32 -2144551889, i32 -2144551862, i32 -2144551779, i32 -2144551690, i32 -2144551569, i32 -2144551469, i32 -2144551363, i32 -2144551255, i32 -2144554230, i32 -2144554177, i32 -2144554146, i32 -2144554115, i32 -2144554094, i32 -2144554072, i32 -2144554023, i32 -2144554002, i32 -2144551172, i32 -2144551083, i32 -2144550962, i32 -2144550863, i32 -2144550757, i32 -2144550655, i32 -2144550622, i32 -2144550549, i32 -2144550481, i32 -2144553628, i32 -2144553575, i32 -2144553544, i32 -2144553513, i32 -2144553492, i32 -2144553470, i32 -2144553421, i32 -2144553400, i32 -2144550426, i32 -2144550337, i32 -2144550216, i32 -2144550117, i32 -2144550011, i32 -2144549909, i32 -2144549876, i32 -2144549793, i32 -2144549704, i32 -2144549583, i32 -2144549483, i32 -2144549457, i32 -2144549354, i32 -2144549328, i32 -2144553142, i32 -2144553075, i32 -2144553050, i32 -2144552986, i32 -2144552870, i32 -2144552845, i32 -2144552820}
!12162 = !DILocation(line: 4849, column: 11, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 4849, column: 11)
!12164 = !DILocation(line: 4849, column: 55, scope: !12163)
!12165 = !DILocation(line: 4849, column: 11, scope: !12044)
!12166 = !DILocation(line: 4851, column: 9, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12163, file: !3, line: 4849, column: 71)
!12168 = !DILocation(line: 4859, column: 19, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12167, file: !3, line: 4859, column: 13)
!12170 = !DILocation(line: 4859, column: 25, scope: !12169)
!12171 = !DILocation(line: 4859, column: 29, scope: !12169)
!12172 = !DILocation(line: 4859, column: 13, scope: !12169)
!12173 = !DILocation(line: 4859, column: 13, scope: !12167)
!12174 = !DILocation(line: 4860, column: 38, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 4860, column: 15)
!12176 = distinct !DILexicalBlock(scope: !12169, file: !3, line: 4859, column: 34)
!12177 = !DILocation(line: 4863, column: 44, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 4863, column: 15)
!12179 = !DILocation(line: 4869, column: 9, scope: !12167)
!12180 = !DILocation(line: 4878, column: 14, scope: !12044)
!12181 = !DILocation(line: 4878, column: 11, scope: !12044)
!12182 = !DILocation(line: 4880, column: 7, scope: !12044)
!12183 = !DILocation(line: 4884, column: 16, scope: !12054)
!12184 = !DILocation(line: 4884, column: 31, scope: !12054)
!12185 = !DILocation(line: 4884, column: 11, scope: !12044)
!12186 = !DILocation(line: 4886, column: 9, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 4886, column: 9)
!12188 = distinct !DILexicalBlock(scope: !12053, file: !3, line: 4886, column: 9)
!12189 = !DILocation(line: 4886, column: 9, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 4886, column: 9)
!12191 = distinct !DILexicalBlock(scope: !12187, file: !3, line: 4886, column: 9)
!12192 = !DILocation(line: 4886, column: 9, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12194, file: !3, line: 4886, column: 9)
!12194 = distinct !DILexicalBlock(scope: !12187, file: !3, line: 4886, column: 9)
!12195 = !DILocation(line: 4886, column: 9, scope: !12188)
!12196 = !DILocation(line: 4888, column: 9, scope: !12052)
!12197 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12198)
!12198 = distinct !DILocation(line: 4888, column: 9, scope: !12059)
!12199 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12198)
!12200 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12198)
!12201 = !DILocation(line: 4888, column: 9, scope: !12059)
!12202 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12203)
!12203 = distinct !DILocation(line: 4888, column: 9, scope: !12059)
!12204 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12203)
!12205 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12203)
!12206 = !DILocation(line: 4888, column: 9, scope: !12060)
!12207 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12208)
!12208 = distinct !DILocation(line: 4888, column: 9, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 4888, column: 9)
!12210 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12208)
!12211 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12208)
!12212 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12208)
!12213 = !DILocation(line: 4888, column: 9, scope: !12209)
!12214 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12215)
!12215 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12216)
!12216 = distinct !DILocation(line: 4888, column: 9, scope: !12056)
!12217 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12215)
!12218 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12215)
!12219 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12216)
!12220 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12216)
!12221 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12216)
!12222 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12216)
!12223 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12216)
!12224 = !DILocation(line: 4888, column: 9, scope: !12056)
!12225 = !{i32 -2144546685, i32 -2144546672, i32 -2144546647, i32 -2144546623, i32 -2144546598, i32 -2144546523, i32 -2144546498, i32 -2144546354, i32 -2144544131, i32 -2144544042, i32 -2144543921, i32 -2144543826, i32 -2144543725, i32 -2144543698, i32 -2144543615, i32 -2144543526, i32 -2144543405, i32 -2144543305, i32 -2144543199, i32 -2144543091, i32 -2144546066, i32 -2144546013, i32 -2144545982, i32 -2144545951, i32 -2144545930, i32 -2144545908, i32 -2144545859, i32 -2144545838, i32 -2144543008, i32 -2144542919, i32 -2144542798, i32 -2144542699, i32 -2144542593, i32 -2144542491, i32 -2144542458, i32 -2144542385, i32 -2144542317, i32 -2144545464, i32 -2144545411, i32 -2144545380, i32 -2144545349, i32 -2144545328, i32 -2144545306, i32 -2144545257, i32 -2144545236, i32 -2144542262, i32 -2144542173, i32 -2144542052, i32 -2144541953, i32 -2144541847, i32 -2144541745, i32 -2144541712, i32 -2144541629, i32 -2144541540, i32 -2144541419, i32 -2144541319, i32 -2144541293, i32 -2144541190, i32 -2144541164, i32 -2144544978, i32 -2144544911, i32 -2144544886, i32 -2144544822, i32 -2144544706, i32 -2144544681, i32 -2144544656}
!12226 = !DILocation(line: 4890, column: 9, scope: !12062)
!12227 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12228)
!12228 = distinct !DILocation(line: 4890, column: 9, scope: !12068)
!12229 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12228)
!12230 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12228)
!12231 = !DILocation(line: 4890, column: 9, scope: !12068)
!12232 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12233)
!12233 = distinct !DILocation(line: 4890, column: 9, scope: !12068)
!12234 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12233)
!12235 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12233)
!12236 = !DILocation(line: 4890, column: 9, scope: !12069)
!12237 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12238)
!12238 = distinct !DILocation(line: 4890, column: 9, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12068, file: !3, line: 4890, column: 9)
!12240 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12238)
!12241 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12238)
!12242 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12238)
!12243 = !DILocation(line: 4890, column: 9, scope: !12239)
!12244 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12245)
!12245 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12246)
!12246 = distinct !DILocation(line: 4890, column: 9, scope: !12065)
!12247 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12245)
!12248 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12245)
!12249 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12246)
!12250 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12246)
!12251 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12246)
!12252 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12246)
!12253 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12246)
!12254 = !DILocation(line: 4890, column: 9, scope: !12065)
!12255 = !{i32 -2144539124, i32 -2144539111, i32 -2144539086, i32 -2144539062, i32 -2144539037, i32 -2144538962, i32 -2144538937, i32 -2144538793, i32 -2144536570, i32 -2144536481, i32 -2144536360, i32 -2144536265, i32 -2144536164, i32 -2144536137, i32 -2144536054, i32 -2144535965, i32 -2144535844, i32 -2144535744, i32 -2144535638, i32 -2144535530, i32 -2144538505, i32 -2144538452, i32 -2144538421, i32 -2144538390, i32 -2144538369, i32 -2144538347, i32 -2144538298, i32 -2144538277, i32 -2144535447, i32 -2144535358, i32 -2144535237, i32 -2144535138, i32 -2144535032, i32 -2144534930, i32 -2144534897, i32 -2144534824, i32 -2144534756, i32 -2144537903, i32 -2144537850, i32 -2144537819, i32 -2144537788, i32 -2144537767, i32 -2144537745, i32 -2144537696, i32 -2144537675, i32 -2144534701, i32 -2144534612, i32 -2144534491, i32 -2144534392, i32 -2144534286, i32 -2144534184, i32 -2144534151, i32 -2144534068, i32 -2144533979, i32 -2144533858, i32 -2144533758, i32 -2144533732, i32 -2144533629, i32 -2144533603, i32 -2144537417, i32 -2144537350, i32 -2144537325, i32 -2144537261, i32 -2144537145, i32 -2144537120, i32 -2144537095}
!12256 = !DILocation(line: 4895, column: 7, scope: !12071)
!12257 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12258)
!12258 = distinct !DILocation(line: 4895, column: 7, scope: !12076)
!12259 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12258)
!12260 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12258)
!12261 = !DILocation(line: 4895, column: 7, scope: !12076)
!12262 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12263)
!12263 = distinct !DILocation(line: 4895, column: 7, scope: !12076)
!12264 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12263)
!12265 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12263)
!12266 = !DILocation(line: 4895, column: 7, scope: !12077)
!12267 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12268)
!12268 = distinct !DILocation(line: 4895, column: 7, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12076, file: !3, line: 4895, column: 7)
!12270 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12268)
!12271 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12268)
!12272 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12268)
!12273 = !DILocation(line: 4895, column: 7, scope: !12269)
!12274 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12275)
!12275 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12276)
!12276 = distinct !DILocation(line: 4895, column: 7, scope: !12073)
!12277 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12275)
!12278 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12275)
!12279 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12276)
!12280 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12276)
!12281 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12276)
!12282 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12276)
!12283 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12276)
!12284 = !DILocation(line: 4895, column: 7, scope: !12073)
!12285 = !{i32 -2144531563, i32 -2144531550, i32 -2144531525, i32 -2144531501, i32 -2144531476, i32 -2144531401, i32 -2144531376, i32 -2144531232, i32 -2144529009, i32 -2144528920, i32 -2144528799, i32 -2144528704, i32 -2144528603, i32 -2144528576, i32 -2144528493, i32 -2144528404, i32 -2144528283, i32 -2144528183, i32 -2144528077, i32 -2144527969, i32 -2144530944, i32 -2144530891, i32 -2144530860, i32 -2144530829, i32 -2144530808, i32 -2144530786, i32 -2144530737, i32 -2144530716, i32 -2144527886, i32 -2144527797, i32 -2144527676, i32 -2144527577, i32 -2144527471, i32 -2144527369, i32 -2144527336, i32 -2144527263, i32 -2144527195, i32 -2144530342, i32 -2144530289, i32 -2144530258, i32 -2144530227, i32 -2144530206, i32 -2144530184, i32 -2144530135, i32 -2144530114, i32 -2144527140, i32 -2144527051, i32 -2144526930, i32 -2144526831, i32 -2144526725, i32 -2144526623, i32 -2144526590, i32 -2144526507, i32 -2144526418, i32 -2144526297, i32 -2144526197, i32 -2144526171, i32 -2144526068, i32 -2144526042, i32 -2144529856, i32 -2144529789, i32 -2144529764, i32 -2144529700, i32 -2144529584, i32 -2144529559, i32 -2144529534}
!12286 = !DILocation(line: 0, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12288, file: !3, line: 4840, column: 14)
!12288 = distinct !DILexicalBlock(scope: !12034, file: !3, line: 4840, column: 7)
!12289 = !DILocation(line: 4900, column: 1, scope: !12034)
!12290 = distinct !DISubprogram(name: "lwip_inet_ntop", scope: !3, file: !3, line: 4917, type: !12291, isLocal: false, isDefinition: true, scopeLine: 4918, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12293)
!12291 = !DISubroutineType(types: !12292)
!12292 = !{!292, !80, !225, !144, !1890}
!12293 = !{!12294, !12295, !12296, !12297, !12298, !12299, !12300, !12308, !12317, !12325}
!12294 = !DILocalVariable(name: "af", arg: 1, scope: !12290, file: !3, line: 4917, type: !80)
!12295 = !DILocalVariable(name: "src", arg: 2, scope: !12290, file: !3, line: 4917, type: !225)
!12296 = !DILocalVariable(name: "dst", arg: 3, scope: !12290, file: !3, line: 4917, type: !144)
!12297 = !DILocalVariable(name: "size", arg: 4, scope: !12290, file: !3, line: 4917, type: !1890)
!12298 = !DILocalVariable(name: "ret", scope: !12290, file: !3, line: 4919, type: !292)
!12299 = !DILocalVariable(name: "size_int", scope: !12290, file: !3, line: 4920, type: !80)
!12300 = !DILocalVariable(name: "tid", scope: !12301, file: !3, line: 4922, type: !170)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 4922, column: 5)
!12302 = distinct !DILexicalBlock(scope: !12303, file: !3, line: 4922, column: 5)
!12303 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 4922, column: 5)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !3, line: 4922, column: 5)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !3, line: 4922, column: 5)
!12306 = distinct !DILexicalBlock(scope: !12307, file: !3, line: 4921, column: 21)
!12307 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 4921, column: 7)
!12308 = !DILocalVariable(name: "tid", scope: !12309, file: !3, line: 4930, type: !170)
!12309 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 4930, column: 9)
!12310 = distinct !DILexicalBlock(scope: !12311, file: !3, line: 4930, column: 9)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 4930, column: 9)
!12312 = distinct !DILexicalBlock(scope: !12313, file: !3, line: 4930, column: 9)
!12313 = distinct !DILexicalBlock(scope: !12314, file: !3, line: 4930, column: 9)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 4929, column: 24)
!12315 = distinct !DILexicalBlock(scope: !12316, file: !3, line: 4929, column: 11)
!12316 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 4925, column: 15)
!12317 = !DILocalVariable(name: "tid", scope: !12318, file: !3, line: 4938, type: !170)
!12318 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 4938, column: 9)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !3, line: 4938, column: 9)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 4938, column: 9)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 4938, column: 9)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !3, line: 4938, column: 9)
!12323 = distinct !DILexicalBlock(scope: !12324, file: !3, line: 4937, column: 24)
!12324 = distinct !DILexicalBlock(scope: !12316, file: !3, line: 4937, column: 11)
!12325 = !DILocalVariable(name: "tid", scope: !12326, file: !3, line: 4943, type: !170)
!12326 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 4943, column: 7)
!12327 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 4943, column: 7)
!12328 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 4943, column: 7)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !3, line: 4943, column: 7)
!12330 = distinct !DILexicalBlock(scope: !12316, file: !3, line: 4943, column: 7)
!12331 = !DILocation(line: 4917, column: 20, scope: !12290)
!12332 = !DILocation(line: 4917, column: 36, scope: !12290)
!12333 = !DILocation(line: 4917, column: 47, scope: !12290)
!12334 = !DILocation(line: 4917, column: 62, scope: !12290)
!12335 = !DILocation(line: 4919, column: 15, scope: !12290)
!12336 = !DILocation(line: 4920, column: 7, scope: !12290)
!12337 = !DILocation(line: 4921, column: 16, scope: !12307)
!12338 = !DILocation(line: 4921, column: 7, scope: !12290)
!12339 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12340)
!12340 = distinct !DILocation(line: 4922, column: 5, scope: !12304)
!12341 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12340)
!12342 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12340)
!12343 = !DILocation(line: 4922, column: 5, scope: !12304)
!12344 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12345)
!12345 = distinct !DILocation(line: 4922, column: 5, scope: !12304)
!12346 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12345)
!12347 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12345)
!12348 = !DILocation(line: 4922, column: 5, scope: !12305)
!12349 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12350)
!12350 = distinct !DILocation(line: 4922, column: 5, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 4922, column: 5)
!12352 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12350)
!12353 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12350)
!12354 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12350)
!12355 = !DILocation(line: 4922, column: 5, scope: !12351)
!12356 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12357)
!12357 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12358)
!12358 = distinct !DILocation(line: 4922, column: 5, scope: !12301)
!12359 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12357)
!12360 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12357)
!12361 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12358)
!12362 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12358)
!12363 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12358)
!12364 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12358)
!12365 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12358)
!12366 = !DILocation(line: 4922, column: 5, scope: !12301)
!12367 = !{i32 -2144524115, i32 -2144524102, i32 -2144524077, i32 -2144524053, i32 -2144524028, i32 -2144523953, i32 -2144523928, i32 -2144523784, i32 -2144521562, i32 -2144521473, i32 -2144521352, i32 -2144521257, i32 -2144521156, i32 -2144521129, i32 -2144521046, i32 -2144520957, i32 -2144520836, i32 -2144520736, i32 -2144520630, i32 -2144520522, i32 -2144523496, i32 -2144523443, i32 -2144523412, i32 -2144523381, i32 -2144523360, i32 -2144523338, i32 -2144523289, i32 -2144523268, i32 -2144520439, i32 -2144520350, i32 -2144520229, i32 -2144520130, i32 -2144520024, i32 -2144519922, i32 -2144519889, i32 -2144519816, i32 -2144519748, i32 -2144522894, i32 -2144522841, i32 -2144522810, i32 -2144522779, i32 -2144522758, i32 -2144522736, i32 -2144522687, i32 -2144522666, i32 -2144519693, i32 -2144519604, i32 -2144519483, i32 -2144519384, i32 -2144519278, i32 -2144519176, i32 -2144519143, i32 -2144519060, i32 -2144518971, i32 -2144518850, i32 -2144518750, i32 -2144518724, i32 -2144518621, i32 -2144518595, i32 -2144522408, i32 -2144522341, i32 -2144522316, i32 -2144522252, i32 -2144522136, i32 -2144522111, i32 -2144522086}
!12368 = !DILocation(line: 4925, column: 3, scope: !12290)
!12369 = !DILocation(line: 4928, column: 28, scope: !12316)
!12370 = !DILocation(line: 4928, column: 13, scope: !12316)
!12371 = !DILocation(line: 4929, column: 15, scope: !12315)
!12372 = !DILocation(line: 4929, column: 11, scope: !12316)
!12373 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12374)
!12374 = distinct !DILocation(line: 4930, column: 9, scope: !12312)
!12375 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12374)
!12376 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12374)
!12377 = !DILocation(line: 4930, column: 9, scope: !12312)
!12378 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12379)
!12379 = distinct !DILocation(line: 4930, column: 9, scope: !12312)
!12380 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12379)
!12381 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12379)
!12382 = !DILocation(line: 4930, column: 9, scope: !12313)
!12383 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12384)
!12384 = distinct !DILocation(line: 4930, column: 9, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 4930, column: 9)
!12386 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12384)
!12387 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12384)
!12388 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12384)
!12389 = !DILocation(line: 4930, column: 9, scope: !12385)
!12390 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12391)
!12391 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12392)
!12392 = distinct !DILocation(line: 4930, column: 9, scope: !12309)
!12393 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12391)
!12394 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12391)
!12395 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12392)
!12396 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12392)
!12397 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12392)
!12398 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12392)
!12399 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12392)
!12400 = !DILocation(line: 4930, column: 9, scope: !12309)
!12401 = !{i32 -2144516656, i32 -2144516643, i32 -2144516618, i32 -2144516594, i32 -2144516569, i32 -2144516494, i32 -2144516469, i32 -2144516325, i32 -2144514103, i32 -2144514014, i32 -2144513893, i32 -2144513798, i32 -2144513697, i32 -2144513670, i32 -2144513587, i32 -2144513498, i32 -2144513377, i32 -2144513277, i32 -2144513171, i32 -2144513063, i32 -2144516037, i32 -2144515984, i32 -2144515953, i32 -2144515922, i32 -2144515901, i32 -2144515879, i32 -2144515830, i32 -2144515809, i32 -2144512980, i32 -2144512891, i32 -2144512770, i32 -2144512671, i32 -2144512565, i32 -2144512463, i32 -2144512430, i32 -2144512357, i32 -2144512289, i32 -2144515435, i32 -2144515382, i32 -2144515351, i32 -2144515320, i32 -2144515299, i32 -2144515277, i32 -2144515228, i32 -2144515207, i32 -2144512234, i32 -2144512145, i32 -2144512024, i32 -2144511925, i32 -2144511819, i32 -2144511717, i32 -2144511684, i32 -2144511601, i32 -2144511512, i32 -2144511391, i32 -2144511291, i32 -2144511265, i32 -2144511162, i32 -2144511136, i32 -2144514949, i32 -2144514882, i32 -2144514857, i32 -2144514793, i32 -2144514677, i32 -2144514652, i32 -2144514627}
!12402 = !DILocation(line: 4936, column: 28, scope: !12316)
!12403 = !DILocation(line: 4936, column: 13, scope: !12316)
!12404 = !DILocation(line: 4937, column: 15, scope: !12324)
!12405 = !DILocation(line: 4937, column: 11, scope: !12316)
!12406 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12407)
!12407 = distinct !DILocation(line: 4938, column: 9, scope: !12321)
!12408 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12407)
!12409 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12407)
!12410 = !DILocation(line: 4938, column: 9, scope: !12321)
!12411 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12412)
!12412 = distinct !DILocation(line: 4938, column: 9, scope: !12321)
!12413 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12412)
!12414 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12412)
!12415 = !DILocation(line: 4938, column: 9, scope: !12322)
!12416 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12417)
!12417 = distinct !DILocation(line: 4938, column: 9, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 4938, column: 9)
!12419 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12417)
!12420 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12417)
!12421 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12417)
!12422 = !DILocation(line: 4938, column: 9, scope: !12418)
!12423 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12424)
!12424 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12425)
!12425 = distinct !DILocation(line: 4938, column: 9, scope: !12318)
!12426 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12424)
!12427 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12424)
!12428 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12425)
!12429 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12425)
!12430 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12425)
!12431 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12425)
!12432 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12425)
!12433 = !DILocation(line: 4938, column: 9, scope: !12318)
!12434 = !{i32 -2144509208, i32 -2144509195, i32 -2144509170, i32 -2144509146, i32 -2144509121, i32 -2144509046, i32 -2144509021, i32 -2144508877, i32 -2144506655, i32 -2144506566, i32 -2144506445, i32 -2144506350, i32 -2144506249, i32 -2144506222, i32 -2144502078, i32 -2144501989, i32 -2144501868, i32 -2144501768, i32 -2144501662, i32 -2144501554, i32 -2144508589, i32 -2144508536, i32 -2144508505, i32 -2144508474, i32 -2144508453, i32 -2144508431, i32 -2144508382, i32 -2144508361, i32 -2144501471, i32 -2144501382, i32 -2144501261, i32 -2144501162, i32 -2144501056, i32 -2144500954, i32 -2144500921, i32 -2144500848, i32 -2144500780, i32 -2144507987, i32 -2144507934, i32 -2144507903, i32 -2144507872, i32 -2144507851, i32 -2144507829, i32 -2144507780, i32 -2144507759, i32 -2144500725, i32 -2144500636, i32 -2144500515, i32 -2144500416, i32 -2144500310, i32 -2144500208, i32 -2144500175, i32 -2144500092, i32 -2144500003, i32 -2144499882, i32 -2144499782, i32 -2144499756, i32 -2144499653, i32 -2144499627, i32 -2144507501, i32 -2144507434, i32 -2144507409, i32 -2144507345, i32 -2144507229, i32 -2144507204, i32 -2144507179}
!12435 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12436)
!12436 = distinct !DILocation(line: 4943, column: 7, scope: !12329)
!12437 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12436)
!12438 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12436)
!12439 = !DILocation(line: 4943, column: 7, scope: !12329)
!12440 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12441)
!12441 = distinct !DILocation(line: 4943, column: 7, scope: !12329)
!12442 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12441)
!12443 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12441)
!12444 = !DILocation(line: 4943, column: 7, scope: !12330)
!12445 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12446)
!12446 = distinct !DILocation(line: 4943, column: 7, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 4943, column: 7)
!12448 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12446)
!12449 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12446)
!12450 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12446)
!12451 = !DILocation(line: 4943, column: 7, scope: !12447)
!12452 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12453)
!12453 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12454)
!12454 = distinct !DILocation(line: 4943, column: 7, scope: !12326)
!12455 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12453)
!12456 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12453)
!12457 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12454)
!12458 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12454)
!12459 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12454)
!12460 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12454)
!12461 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12454)
!12462 = !DILocation(line: 4943, column: 7, scope: !12326)
!12463 = !{i32 -2144497694, i32 -2144497681, i32 -2144497656, i32 -2144497632, i32 -2144497607, i32 -2144497532, i32 -2144497507, i32 -2144497363, i32 -2144495139, i32 -2144495050, i32 -2144494929, i32 -2144494834, i32 -2144494733, i32 -2144494706, i32 -2144494623, i32 -2144494534, i32 -2144494413, i32 -2144494313, i32 -2144494207, i32 -2144494099, i32 -2144497075, i32 -2144497022, i32 -2144496991, i32 -2144496960, i32 -2144496939, i32 -2144496917, i32 -2144496868, i32 -2144496847, i32 -2144494016, i32 -2144493927, i32 -2144493806, i32 -2144493707, i32 -2144493601, i32 -2144493499, i32 -2144493466, i32 -2144493393, i32 -2144493325, i32 -2144496473, i32 -2144496420, i32 -2144496389, i32 -2144496358, i32 -2144496337, i32 -2144496315, i32 -2144496266, i32 -2144496245, i32 -2144493270, i32 -2144493181, i32 -2144493060, i32 -2144492961, i32 -2144492855, i32 -2144492753, i32 -2144492720, i32 -2144492637, i32 -2144492548, i32 -2144492427, i32 -2144492327, i32 -2144492301, i32 -2144492198, i32 -2144492172, i32 -2144495987, i32 -2144495920, i32 -2144495895, i32 -2144495831, i32 -2144495715, i32 -2144495690, i32 -2144495665}
!12464 = !DILocation(line: 0, scope: !12290)
!12465 = !DILocation(line: 4947, column: 1, scope: !12290)
!12466 = distinct !DISubprogram(name: "lwip_inet_pton", scope: !3, file: !3, line: 4950, type: !12467, isLocal: false, isDefinition: true, scopeLine: 4951, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12469)
!12467 = !DISubroutineType(types: !12468)
!12468 = !{!80, !80, !292, !143}
!12469 = !{!12470, !12471, !12472, !12473, !12474, !12477}
!12470 = !DILocalVariable(name: "af", arg: 1, scope: !12466, file: !3, line: 4950, type: !80)
!12471 = !DILocalVariable(name: "src", arg: 2, scope: !12466, file: !3, line: 4950, type: !292)
!12472 = !DILocalVariable(name: "dst", arg: 3, scope: !12466, file: !3, line: 4950, type: !143)
!12473 = !DILocalVariable(name: "err", scope: !12466, file: !3, line: 4952, type: !80)
!12474 = !DILocalVariable(name: "addr", scope: !12475, file: !3, line: 4963, type: !705)
!12475 = distinct !DILexicalBlock(scope: !12476, file: !3, line: 4960, column: 20)
!12476 = distinct !DILexicalBlock(scope: !12466, file: !3, line: 4953, column: 15)
!12477 = !DILocalVariable(name: "tid", scope: !12478, file: !3, line: 4973, type: !170)
!12478 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 4973, column: 7)
!12479 = distinct !DILexicalBlock(scope: !12480, file: !3, line: 4973, column: 7)
!12480 = distinct !DILexicalBlock(scope: !12481, file: !3, line: 4973, column: 7)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 4973, column: 7)
!12482 = distinct !DILexicalBlock(scope: !12476, file: !3, line: 4973, column: 7)
!12483 = !DILocation(line: 4950, column: 20, scope: !12466)
!12484 = !DILocation(line: 4950, column: 36, scope: !12466)
!12485 = !DILocation(line: 4950, column: 47, scope: !12466)
!12486 = !DILocation(line: 4953, column: 3, scope: !12466)
!12487 = !DILocation(line: 4956, column: 31, scope: !12476)
!12488 = !DILocation(line: 4956, column: 13, scope: !12476)
!12489 = !DILocation(line: 4952, column: 7, scope: !12466)
!12490 = !DILocation(line: 4957, column: 7, scope: !12476)
!12491 = !DILocation(line: 4963, column: 7, scope: !12475)
!12492 = !DILocation(line: 4963, column: 18, scope: !12475)
!12493 = !DILocation(line: 4964, column: 13, scope: !12475)
!12494 = !DILocation(line: 4965, column: 11, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12475, file: !3, line: 4965, column: 11)
!12496 = !DILocation(line: 4965, column: 11, scope: !12475)
!12497 = !DILocation(line: 4966, column: 9, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 4965, column: 16)
!12499 = !DILocation(line: 4967, column: 7, scope: !12498)
!12500 = !DILocation(line: 4969, column: 5, scope: !12476)
!12501 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12502)
!12502 = distinct !DILocation(line: 4973, column: 7, scope: !12481)
!12503 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12502)
!12504 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12502)
!12505 = !DILocation(line: 4973, column: 7, scope: !12481)
!12506 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12507)
!12507 = distinct !DILocation(line: 4973, column: 7, scope: !12481)
!12508 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12507)
!12509 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12507)
!12510 = !DILocation(line: 4973, column: 7, scope: !12482)
!12511 = !DILocation(line: 88, column: 30, scope: !1620, inlinedAt: !12512)
!12512 = distinct !DILocation(line: 4973, column: 7, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12481, file: !3, line: 4973, column: 7)
!12514 = !DILocation(line: 90, column: 3, scope: !1620, inlinedAt: !12512)
!12515 = !DILocation(line: 90, column: 9, scope: !1620, inlinedAt: !12512)
!12516 = !DILocation(line: 91, column: 1, scope: !1620, inlinedAt: !12512)
!12517 = !DILocation(line: 4973, column: 7, scope: !12513)
!12518 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12519)
!12519 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12520)
!12520 = distinct !DILocation(line: 4973, column: 7, scope: !12478)
!12521 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12519)
!12522 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12519)
!12523 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12520)
!12524 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12520)
!12525 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12520)
!12526 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12520)
!12527 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12520)
!12528 = !DILocation(line: 4973, column: 7, scope: !12478)
!12529 = !{i32 -2144490230, i32 -2144490217, i32 -2144490192, i32 -2144490168, i32 -2144490143, i32 -2144490068, i32 -2144490043, i32 -2144489899, i32 -2144487675, i32 -2144487586, i32 -2144487465, i32 -2144487370, i32 -2144487269, i32 -2144487242, i32 -2144487159, i32 -2144487070, i32 -2144486949, i32 -2144486849, i32 -2144486743, i32 -2144486635, i32 -2144489611, i32 -2144489558, i32 -2144489527, i32 -2144489496, i32 -2144489475, i32 -2144489453, i32 -2144489404, i32 -2144489383, i32 -2144486552, i32 -2144486463, i32 -2144486342, i32 -2144486243, i32 -2144486137, i32 -2144486035, i32 -2144486002, i32 -2144485929, i32 -2144485861, i32 -2144489009, i32 -2144488956, i32 -2144488925, i32 -2144488894, i32 -2144488873, i32 -2144488851, i32 -2144488802, i32 -2144488781, i32 -2144485806, i32 -2144485717, i32 -2144485596, i32 -2144485497, i32 -2144485391, i32 -2144485289, i32 -2144485256, i32 -2144485173, i32 -2144485084, i32 -2144484963, i32 -2144484863, i32 -2144484837, i32 -2144484734, i32 -2144484708, i32 -2144488523, i32 -2144488456, i32 -2144488431, i32 -2144488367, i32 -2144488251, i32 -2144488226, i32 -2144488201}
!12530 = !DILocation(line: 0, scope: !12476)
!12531 = !DILocation(line: 4976, column: 3, scope: !12466)
!12532 = !DILocation(line: 100, column: 9, scope: !1488)
!12533 = !DILocation(line: 100, column: 2, scope: !1488)
!12534 = !DILocation(line: 149, column: 53, scope: !2688)
!12535 = !DILocation(line: 153, column: 28, scope: !2688)
!12536 = !DILocation(line: 155, column: 2, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12538, file: !817, line: 155, column: 2)
!12538 = distinct !DILexicalBlock(scope: !2688, file: !817, line: 155, column: 2)
!12539 = !DILocation(line: 155, column: 2, scope: !12538)
!12540 = !DILocation(line: 155, column: 2, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12537, file: !817, line: 155, column: 2)
!12542 = !DILocation(line: 157, column: 9, scope: !2688)
!12543 = !DILocation(line: 151, column: 16, scope: !2688)
!12544 = !DILocation(line: 158, column: 2, scope: !2703)
!12545 = !DILocation(line: 158, column: 2, scope: !2704)
!12546 = !DILocation(line: 158, column: 2, scope: !2708)
!12547 = !DILocation(line: 159, column: 6, scope: !2710)
!12548 = !DILocation(line: 159, column: 22, scope: !2710)
!12549 = !DILocation(line: 159, column: 6, scope: !2688)
!12550 = !DILocation(line: 160, column: 6, scope: !2714)
!12551 = !DILocation(line: 160, column: 12, scope: !2714)
!12552 = !DILocation(line: 99, column: 40, scope: !2718, inlinedAt: !12553)
!12553 = distinct !DILocation(line: 161, column: 3, scope: !2714)
!12554 = !DILocation(line: 104, column: 10, scope: !2718, inlinedAt: !12553)
!12555 = !DILocation(line: 101, column: 16, scope: !2718, inlinedAt: !12553)
!12556 = !DILocation(line: 105, column: 2, scope: !2732, inlinedAt: !12553)
!12557 = !DILocation(line: 102, column: 25, scope: !2718, inlinedAt: !12553)
!12558 = !DILocation(line: 105, column: 2, scope: !2736, inlinedAt: !12553)
!12559 = !DILocation(line: 102, column: 32, scope: !2718, inlinedAt: !12553)
!12560 = !DILocation(line: 106, column: 24, scope: !2736, inlinedAt: !12553)
!12561 = !DILocation(line: 106, column: 3, scope: !2736, inlinedAt: !12553)
!12562 = !DILocation(line: 107, column: 2, scope: !2718, inlinedAt: !12553)
!12563 = !DILocation(line: 108, column: 1, scope: !2718, inlinedAt: !12553)
!12564 = !DILocation(line: 162, column: 2, scope: !2714)
!12565 = !DILocation(line: 163, column: 2, scope: !2688)
!12566 = !DILocation(line: 164, column: 1, scope: !2688)
!12567 = distinct !DISubprogram(name: "sock_net_close", scope: !3, file: !3, line: 302, type: !828, isLocal: true, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12568)
!12568 = !{!12569, !12570, !12571, !12572, !12578}
!12569 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !12567, file: !3, line: 302, type: !713)
!12570 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !12567, file: !3, line: 303, type: !785)
!12571 = !DILocalVariable(name: "ret", scope: !12567, file: !3, line: 304, type: !80)
!12572 = !DILocalVariable(name: "tid", scope: !12573, file: !3, line: 305, type: !170)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !3, line: 305, column: 2)
!12574 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 305, column: 2)
!12575 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 305, column: 2)
!12576 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 305, column: 2)
!12577 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 305, column: 2)
!12578 = !DILocalVariable(name: "_ret", scope: !12573, file: !3, line: 305, type: !135)
!12579 = !DILocation(line: 302, column: 34, scope: !12567)
!12580 = !DILocation(line: 303, column: 25, scope: !12567)
!12581 = !DILocation(line: 304, column: 2, scope: !12567)
!12582 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12583)
!12583 = distinct !DILocation(line: 305, column: 2, scope: !12576)
!12584 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12583)
!12585 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12583)
!12586 = !DILocation(line: 305, column: 2, scope: !12576)
!12587 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12588)
!12588 = distinct !DILocation(line: 305, column: 2, scope: !12576)
!12589 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12588)
!12590 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12588)
!12591 = !DILocation(line: 305, column: 2, scope: !12577)
!12592 = !DILocation(line: 305, column: 2, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 305, column: 2)
!12594 = !DILocation(line: 304, column: 6, scope: !12567)
!12595 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12596)
!12596 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12597)
!12597 = distinct !DILocation(line: 305, column: 2, scope: !12573)
!12598 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12596)
!12599 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12596)
!12600 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12597)
!12601 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12597)
!12602 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12597)
!12603 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12597)
!12604 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12597)
!12605 = !DILocation(line: 305, column: 2, scope: !12573)
!12606 = !{i32 -2145731839, i32 -2145731826, i32 -2145731801, i32 -2145731777, i32 -2145731752, i32 -2145731677, i32 -2145731652, i32 -2145731508, i32 -2145728328, i32 -2145728239, i32 -2145728118, i32 -2145728023, i32 -2145727922, i32 -2145727895, i32 -2145727812, i32 -2145727723, i32 -2145727602, i32 -2145727502, i32 -2145727396, i32 -2145727288, i32 -2145731216, i32 -2145731163, i32 -2145731132, i32 -2145731101, i32 -2145731080, i32 -2145731058, i32 -2145731009, i32 -2145730988, i32 -2145727205, i32 -2145727116, i32 -2145726995, i32 -2145726896, i32 -2145726790, i32 -2145726688, i32 -2145726655, i32 -2145726582, i32 -2145726514, i32 -2145730681, i32 -2145730622, i32 -2145730569, i32 -2145730538, i32 -2145730507, i32 -2145730486, i32 -2145730464, i32 -2145730415, i32 -2145730394, i32 -2145726463, i32 -2145726374, i32 -2145726253, i32 -2145726154, i32 -2145726048, i32 -2145725946, i32 -2145725913, i32 -2145725830, i32 -2145725741, i32 -2145725620, i32 -2145725520, i32 -2145725494, i32 -2145725391, i32 -2145725365, i32 -2145730136, i32 -2145730069, i32 -2145730044, i32 -2145729980, i32 -2145729898, i32 -2145729875, i32 -2145729850, i32 -2145729825}
!12607 = !DILocation(line: 305, column: 2, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 305, column: 2)
!12609 = distinct !DILexicalBlock(scope: !12573, file: !3, line: 305, column: 2)
!12610 = !{i32 -2145728810, i32 -2145728793}
!12611 = !DILocation(line: 307, column: 9, scope: !12567)
!12612 = !DILocation(line: 308, column: 1, scope: !12567)
!12613 = !DILocation(line: 307, column: 2, scope: !12567)
!12614 = distinct !DISubprogram(name: "sock_net_read", scope: !3, file: !3, line: 383, type: !833, isLocal: true, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12615)
!12615 = !{!12616, !12617, !12618, !12619, !12620, !12621, !12627, !12628, !12629}
!12616 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !12614, file: !3, line: 383, type: !713)
!12617 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !12614, file: !3, line: 384, type: !785)
!12618 = !DILocalVariable(name: "buf", arg: 3, scope: !12614, file: !3, line: 385, type: !835)
!12619 = !DILocalVariable(name: "ioflag", arg: 4, scope: !12614, file: !3, line: 385, type: !80)
!12620 = !DILocalVariable(name: "ret", scope: !12614, file: !3, line: 386, type: !80)
!12621 = !DILocalVariable(name: "tid", scope: !12622, file: !3, line: 387, type: !170)
!12622 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 387, column: 2)
!12623 = distinct !DILexicalBlock(scope: !12624, file: !3, line: 387, column: 2)
!12624 = distinct !DILexicalBlock(scope: !12625, file: !3, line: 387, column: 2)
!12625 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 387, column: 2)
!12626 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 387, column: 2)
!12627 = !DILocalVariable(name: "_ret", scope: !12622, file: !3, line: 387, type: !135)
!12628 = !DILocalVariable(name: "_arg3", scope: !12622, file: !3, line: 387, type: !135)
!12629 = !DILocalVariable(name: "_arg4", scope: !12622, file: !3, line: 387, type: !135)
!12630 = !DILocation(line: 383, column: 33, scope: !12614)
!12631 = !DILocation(line: 384, column: 25, scope: !12614)
!12632 = !DILocation(line: 385, column: 16, scope: !12614)
!12633 = !DILocation(line: 385, column: 25, scope: !12614)
!12634 = !DILocation(line: 386, column: 2, scope: !12614)
!12635 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12636)
!12636 = distinct !DILocation(line: 387, column: 2, scope: !12625)
!12637 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12636)
!12638 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12636)
!12639 = !DILocation(line: 387, column: 2, scope: !12625)
!12640 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12641)
!12641 = distinct !DILocation(line: 387, column: 2, scope: !12625)
!12642 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12641)
!12643 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12641)
!12644 = !DILocation(line: 387, column: 2, scope: !12626)
!12645 = !DILocation(line: 387, column: 2, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12625, file: !3, line: 387, column: 2)
!12647 = !DILocation(line: 386, column: 6, scope: !12614)
!12648 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12649)
!12649 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12650)
!12650 = distinct !DILocation(line: 387, column: 2, scope: !12622)
!12651 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12649)
!12652 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12649)
!12653 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12650)
!12654 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12650)
!12655 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12650)
!12656 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12650)
!12657 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12650)
!12658 = !DILocation(line: 387, column: 2, scope: !12622)
!12659 = !{i32 -2145709674, i32 -2145709661, i32 -2145709636, i32 -2145709612, i32 -2145709587, i32 -2145709512, i32 -2145709487, i32 -2145709343, i32 -2145709318, i32 -2145705995, i32 -2145705906, i32 -2145705785, i32 -2145705690, i32 -2145705589, i32 -2145705562, i32 -2145705479, i32 -2145705390, i32 -2145705269, i32 -2145705169, i32 -2145705063, i32 -2145704955, i32 -2145708981, i32 -2145708928, i32 -2145708897, i32 -2145708866, i32 -2145708845, i32 -2145708823, i32 -2145708774, i32 -2145708753, i32 -2145708650, i32 -2145708618, i32 -2145704872, i32 -2145704783, i32 -2145704662, i32 -2145704563, i32 -2145704457, i32 -2145704355, i32 -2145704322, i32 -2145704249, i32 -2145704181, i32 -2145708428, i32 -2145708369, i32 -2145708316, i32 -2145708285, i32 -2145708254, i32 -2145708233, i32 -2145708211, i32 -2145708162, i32 -2145708141, i32 -2145704131, i32 -2145704042, i32 -2145703921, i32 -2145703822, i32 -2145703716, i32 -2145703614, i32 -2145703581, i32 -2145703498, i32 -2145703409, i32 -2145703288, i32 -2145703188, i32 -2145703162, i32 -2145703059, i32 -2145703033, i32 -2145707883, i32 -2145707858, i32 -2145707791, i32 -2145707766, i32 -2145707702, i32 -2145707620, i32 -2145707597, i32 -2145707572, i32 -2145707547}
!12660 = !DILocation(line: 387, column: 2, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12662, file: !3, line: 387, column: 2)
!12662 = distinct !DILexicalBlock(scope: !12622, file: !3, line: 387, column: 2)
!12663 = !{i32 -2145706486, i32 -2145706469}
!12664 = !DILocation(line: 389, column: 9, scope: !12614)
!12665 = !DILocation(line: 390, column: 1, scope: !12614)
!12666 = !DILocation(line: 389, column: 2, scope: !12614)
!12667 = distinct !DISubprogram(name: "sock_net_write", scope: !3, file: !3, line: 349, type: !846, isLocal: true, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12668)
!12668 = !{!12669, !12670, !12671, !12672, !12673, !12679, !12680}
!12669 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !12667, file: !3, line: 349, type: !713)
!12670 = !DILocalVariable(name: "buf", arg: 2, scope: !12667, file: !3, line: 350, type: !835)
!12671 = !DILocalVariable(name: "ioflag", arg: 3, scope: !12667, file: !3, line: 350, type: !80)
!12672 = !DILocalVariable(name: "ret", scope: !12667, file: !3, line: 351, type: !80)
!12673 = !DILocalVariable(name: "tid", scope: !12674, file: !3, line: 352, type: !170)
!12674 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 352, column: 2)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !3, line: 352, column: 2)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !3, line: 352, column: 2)
!12677 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 352, column: 2)
!12678 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 352, column: 2)
!12679 = !DILocalVariable(name: "_ret", scope: !12674, file: !3, line: 352, type: !135)
!12680 = !DILocalVariable(name: "_arg3", scope: !12674, file: !3, line: 352, type: !135)
!12681 = !DILocation(line: 349, column: 34, scope: !12667)
!12682 = !DILocation(line: 350, column: 16, scope: !12667)
!12683 = !DILocation(line: 350, column: 25, scope: !12667)
!12684 = !DILocation(line: 351, column: 2, scope: !12667)
!12685 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12686)
!12686 = distinct !DILocation(line: 352, column: 2, scope: !12677)
!12687 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12686)
!12688 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12686)
!12689 = !DILocation(line: 352, column: 2, scope: !12677)
!12690 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12691)
!12691 = distinct !DILocation(line: 352, column: 2, scope: !12677)
!12692 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12691)
!12693 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12691)
!12694 = !DILocation(line: 352, column: 2, scope: !12678)
!12695 = !DILocation(line: 352, column: 2, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12677, file: !3, line: 352, column: 2)
!12697 = !DILocation(line: 351, column: 6, scope: !12667)
!12698 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12699)
!12699 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12700)
!12700 = distinct !DILocation(line: 352, column: 2, scope: !12674)
!12701 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12699)
!12702 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12699)
!12703 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12700)
!12704 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12700)
!12705 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12700)
!12706 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12700)
!12707 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12700)
!12708 = !DILocation(line: 352, column: 2, scope: !12674)
!12709 = !{i32 -2145718628, i32 -2145718615, i32 -2145718590, i32 -2145718566, i32 -2145718541, i32 -2145718466, i32 -2145718441, i32 -2145718297, i32 -2145715072, i32 -2145714983, i32 -2145714862, i32 -2145714767, i32 -2145714666, i32 -2145714639, i32 -2145714556, i32 -2145714467, i32 -2145714346, i32 -2145714246, i32 -2145714140, i32 -2145714032, i32 -2145717967, i32 -2145717914, i32 -2145717883, i32 -2145717852, i32 -2145717831, i32 -2145717809, i32 -2145717760, i32 -2145717739, i32 -2145717636, i32 -2145713949, i32 -2145713860, i32 -2145713739, i32 -2145713640, i32 -2145713534, i32 -2145713432, i32 -2145713399, i32 -2145713326, i32 -2145713258, i32 -2145717446, i32 -2145717387, i32 -2145717334, i32 -2145717303, i32 -2145717272, i32 -2145717251, i32 -2145717229, i32 -2145717180, i32 -2145717159, i32 -2145713207, i32 -2145713118, i32 -2145712997, i32 -2145712898, i32 -2145712792, i32 -2145712690, i32 -2145712657, i32 -2145712574, i32 -2145712485, i32 -2145712364, i32 -2145712264, i32 -2145712238, i32 -2145712135, i32 -2145712109, i32 -2145716901, i32 -2145716834, i32 -2145716809, i32 -2145716745, i32 -2145716663, i32 -2145716640, i32 -2145716615, i32 -2145716590}
!12710 = !DILocation(line: 352, column: 2, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12712, file: !3, line: 352, column: 2)
!12712 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 352, column: 2)
!12713 = !{i32 -2145715552, i32 -2145715535}
!12714 = !DILocation(line: 354, column: 9, scope: !12667)
!12715 = !DILocation(line: 355, column: 1, scope: !12667)
!12716 = !DILocation(line: 354, column: 2, scope: !12667)
!12717 = distinct !DISubprogram(name: "sock_net_ioctl", scope: !3, file: !3, line: 419, type: !856, isLocal: true, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12718)
!12718 = !{!12719, !12720, !12721, !12722, !12723, !12724, !12730, !12731, !12732}
!12719 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !12717, file: !3, line: 419, type: !713)
!12720 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !12717, file: !3, line: 420, type: !785)
!12721 = !DILocalVariable(name: "request", arg: 3, scope: !12717, file: !3, line: 421, type: !134)
!12722 = !DILocalVariable(name: "buf", arg: 4, scope: !12717, file: !3, line: 422, type: !143)
!12723 = !DILocalVariable(name: "ret", scope: !12717, file: !3, line: 423, type: !80)
!12724 = !DILocalVariable(name: "tid", scope: !12725, file: !3, line: 424, type: !170)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !3, line: 424, column: 2)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 424, column: 2)
!12727 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 424, column: 2)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !3, line: 424, column: 2)
!12729 = distinct !DILexicalBlock(scope: !12717, file: !3, line: 424, column: 2)
!12730 = !DILocalVariable(name: "_ret", scope: !12725, file: !3, line: 424, type: !135)
!12731 = !DILocalVariable(name: "_arg3", scope: !12725, file: !3, line: 424, type: !135)
!12732 = !DILocalVariable(name: "_arg4", scope: !12725, file: !3, line: 424, type: !135)
!12733 = !DILocation(line: 419, column: 34, scope: !12717)
!12734 = !DILocation(line: 420, column: 25, scope: !12717)
!12735 = !DILocation(line: 421, column: 18, scope: !12717)
!12736 = !DILocation(line: 422, column: 10, scope: !12717)
!12737 = !DILocation(line: 423, column: 2, scope: !12717)
!12738 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12739)
!12739 = distinct !DILocation(line: 424, column: 2, scope: !12728)
!12740 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12739)
!12741 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12739)
!12742 = !DILocation(line: 424, column: 2, scope: !12728)
!12743 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12744)
!12744 = distinct !DILocation(line: 424, column: 2, scope: !12728)
!12745 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12744)
!12746 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12744)
!12747 = !DILocation(line: 424, column: 2, scope: !12729)
!12748 = !DILocation(line: 429, column: 35, scope: !2107, inlinedAt: !12749)
!12749 = distinct !DILocation(line: 424, column: 2, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 424, column: 2)
!12751 = !DILocation(line: 429, column: 65, scope: !2107, inlinedAt: !12749)
!12752 = !DILocation(line: 430, column: 21, scope: !2107, inlinedAt: !12749)
!12753 = !DILocation(line: 430, column: 36, scope: !2107, inlinedAt: !12749)
!12754 = !DILocation(line: 431, column: 24, scope: !2107, inlinedAt: !12749)
!12755 = !DILocation(line: 433, column: 18, scope: !2107, inlinedAt: !12749)
!12756 = !DILocation(line: 438, column: 29, scope: !2107, inlinedAt: !12749)
!12757 = !DILocation(line: 438, column: 12, scope: !2107, inlinedAt: !12749)
!12758 = !DILocation(line: 438, column: 6, scope: !2107, inlinedAt: !12749)
!12759 = !DILocation(line: 439, column: 2, scope: !2107, inlinedAt: !12749)
!12760 = !DILocation(line: 423, column: 6, scope: !12717)
!12761 = !DILocation(line: 424, column: 2, scope: !12750)
!12762 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12763)
!12763 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12764)
!12764 = distinct !DILocation(line: 424, column: 2, scope: !12725)
!12765 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12763)
!12766 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12763)
!12767 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12764)
!12768 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12764)
!12769 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12764)
!12770 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12764)
!12771 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12764)
!12772 = !DILocation(line: 424, column: 2, scope: !12725)
!12773 = !{i32 -2145700587, i32 -2145700574, i32 -2145700549, i32 -2145700525, i32 -2145700500, i32 -2145700425, i32 -2145700400, i32 -2145700256, i32 -2145700231, i32 -2145696905, i32 -2145696816, i32 -2145696695, i32 -2145696600, i32 -2145696499, i32 -2145696472, i32 -2145696389, i32 -2145696300, i32 -2145696179, i32 -2145696079, i32 -2145695973, i32 -2145695865, i32 -2145699894, i32 -2145699841, i32 -2145699810, i32 -2145699779, i32 -2145699758, i32 -2145699736, i32 -2145699687, i32 -2145699666, i32 -2145699563, i32 -2145699531, i32 -2145695782, i32 -2145695693, i32 -2145695572, i32 -2145695473, i32 -2145695367, i32 -2145695265, i32 -2145695232, i32 -2145695159, i32 -2145695091, i32 -2145699341, i32 -2145699282, i32 -2145699229, i32 -2145699198, i32 -2145699167, i32 -2145699146, i32 -2145699124, i32 -2145699075, i32 -2145699054, i32 -2145695040, i32 -2145694951, i32 -2145694830, i32 -2145694731, i32 -2145694625, i32 -2145694523, i32 -2145694490, i32 -2145694407, i32 -2145694318, i32 -2145694197, i32 -2145694097, i32 -2145694071, i32 -2145693968, i32 -2145693942, i32 -2145698796, i32 -2145698771, i32 -2145698704, i32 -2145698679, i32 -2145698615, i32 -2145698533, i32 -2145698510, i32 -2145698485, i32 -2145698460}
!12774 = !DILocation(line: 424, column: 2, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12776, file: !3, line: 424, column: 2)
!12776 = distinct !DILexicalBlock(scope: !12725, file: !3, line: 424, column: 2)
!12777 = !{i32 -2145697399, i32 -2145697382}
!12778 = !DILocation(line: 426, column: 9, scope: !12717)
!12779 = !DILocation(line: 427, column: 1, scope: !12717)
!12780 = !DILocation(line: 426, column: 2, scope: !12717)
!12781 = distinct !DISubprogram(name: "lwip_sock_make_addr", scope: !3, file: !3, line: 2021, type: !12782, isLocal: true, isDefinition: true, scopeLine: 2023, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12784)
!12782 = !DISubroutineType(types: !12783)
!12783 = !{!80, !1169, !3974, !164, !1004, !3003}
!12784 = !{!12785, !12786, !12787, !12788, !12789, !12790, !12791}
!12785 = !DILocalVariable(name: "conn", arg: 1, scope: !12781, file: !3, line: 2021, type: !1169)
!12786 = !DILocalVariable(name: "fromaddr", arg: 2, scope: !12781, file: !3, line: 2021, type: !3974)
!12787 = !DILocalVariable(name: "port", arg: 3, scope: !12781, file: !3, line: 2021, type: !164)
!12788 = !DILocalVariable(name: "from", arg: 4, scope: !12781, file: !3, line: 2022, type: !1004)
!12789 = !DILocalVariable(name: "fromlen", arg: 5, scope: !12781, file: !3, line: 2022, type: !3003)
!12790 = !DILocalVariable(name: "truncated", scope: !12781, file: !3, line: 2024, type: !80)
!12791 = !DILocalVariable(name: "saddr", scope: !12781, file: !3, line: 2025, type: !3282)
!12792 = !DILocation(line: 2021, column: 37, scope: !12781)
!12793 = !DILocation(line: 2021, column: 54, scope: !12781)
!12794 = !DILocation(line: 2021, column: 70, scope: !12781)
!12795 = !DILocation(line: 2022, column: 38, scope: !12781)
!12796 = !DILocation(line: 2022, column: 55, scope: !12781)
!12797 = !DILocation(line: 2024, column: 7, scope: !12781)
!12798 = !DILocation(line: 2025, column: 3, scope: !12781)
!12799 = !DILocation(line: 2029, column: 3, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12801, file: !3, line: 2029, column: 3)
!12801 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 2029, column: 3)
!12802 = !DILocation(line: 2029, column: 3, scope: !12801)
!12803 = !DILocation(line: 2029, column: 3, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12805, file: !3, line: 2029, column: 3)
!12805 = distinct !DILexicalBlock(scope: !12800, file: !3, line: 2029, column: 3)
!12806 = !DILocation(line: 2029, column: 3, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12808, file: !3, line: 2029, column: 3)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 2029, column: 3)
!12809 = distinct !DILexicalBlock(scope: !12804, file: !3, line: 2029, column: 3)
!12810 = !DILocation(line: 2030, column: 3, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12812, file: !3, line: 2030, column: 3)
!12812 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 2030, column: 3)
!12813 = !DILocation(line: 2030, column: 3, scope: !12812)
!12814 = !DILocation(line: 2030, column: 3, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12816, file: !3, line: 2030, column: 3)
!12816 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 2030, column: 3)
!12817 = !DILocation(line: 2030, column: 3, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 2030, column: 3)
!12819 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 2030, column: 3)
!12820 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 2030, column: 3)
!12821 = !DILocation(line: 2031, column: 3, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12823, file: !3, line: 2031, column: 3)
!12823 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 2031, column: 3)
!12824 = !DILocation(line: 2031, column: 3, scope: !12823)
!12825 = !DILocation(line: 2031, column: 3, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 2031, column: 3)
!12827 = distinct !DILexicalBlock(scope: !12822, file: !3, line: 2031, column: 3)
!12828 = !DILocation(line: 2031, column: 3, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 2031, column: 3)
!12830 = distinct !DILexicalBlock(scope: !12831, file: !3, line: 2031, column: 3)
!12831 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 2031, column: 3)
!12832 = !DILocation(line: 2035, column: 7, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 2035, column: 7)
!12834 = !DILocation(line: 0, scope: !12833)
!12835 = !DILocation(line: 2035, column: 49, scope: !12833)
!12836 = !DILocation(line: 2035, column: 46, scope: !12833)
!12837 = !DILocation(line: 2036, column: 5, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 2036, column: 5)
!12839 = distinct !DILexicalBlock(scope: !12833, file: !3, line: 2035, column: 69)
!12840 = !DILocation(line: 2037, column: 5, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12842, file: !3, line: 2037, column: 5)
!12842 = distinct !DILexicalBlock(scope: !12843, file: !3, line: 2037, column: 5)
!12843 = distinct !DILexicalBlock(scope: !12844, file: !3, line: 2037, column: 5)
!12844 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 2037, column: 5)
!12845 = !DILocation(line: 2041, column: 3, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !3, line: 2041, column: 3)
!12847 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 2041, column: 3)
!12848 = !DILocation(line: 2041, column: 3, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 2041, column: 3)
!12850 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 2041, column: 3)
!12851 = !DILocation(line: 2041, column: 3, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 2041, column: 3)
!12853 = !DILocation(line: 2041, column: 3, scope: !12850)
!12854 = !DILocation(line: 2041, column: 3, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !3, line: 2041, column: 3)
!12856 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 2041, column: 3)
!12857 = !DILocation(line: 2042, column: 27, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 2042, column: 7)
!12859 = !DILocation(line: 2042, column: 7, scope: !12858)
!12860 = !DILocation(line: 2042, column: 16, scope: !12858)
!12861 = !DILocation(line: 2042, column: 7, scope: !12781)
!12862 = !DILocation(line: 2044, column: 23, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 2044, column: 14)
!12864 = !DILocation(line: 2044, column: 14, scope: !12858)
!12865 = !DILocation(line: 2045, column: 14, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12863, file: !3, line: 2044, column: 42)
!12867 = !DILocation(line: 2046, column: 3, scope: !12866)
!12868 = !DILocation(line: 2047, column: 3, scope: !12781)
!12869 = !DILocation(line: 0, scope: !12781)
!12870 = !DILocation(line: 2049, column: 1, scope: !12781)
!12871 = !DILocation(line: 2048, column: 3, scope: !12781)
