; ModuleID = '/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rdb.c'
source_filename = "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rdb.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.redisServer = type { i32, i8*, i8*, i8**, i32, i32, i32, %struct.redisDb*, %struct.dict*, %struct.dict*, %struct.aeEventLoop*, i32, i32, i32, i32, i8*, i8*, i32, i32, [41 x i8], i32, i64, i32, %struct.dict*, %struct.dict*, %struct.list*, [2 x i32], i32, i32, [16 x i8*], i32, i8*, i32, [16 x i32], i32, i32, [16 x i32], i32, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.client*, %struct.rax*, i32, i64, [256 x i8], %struct.dict*, i64, i32, i32, i64, i64, i64, i64, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, i64, i64, i64, i64, double, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, i64, i64, i64, i64, %struct.list*, i64, i64, i64, %struct.malloc_stats, i64, i64, i64, i64, [3 x %struct.anon], i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, [3 x %struct.clientBufferLimitsConfig], i32, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, %struct.list*, i8*, i32, i32, i64, i64, i64, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, i32, %struct.saveparam*, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, [2 x i32], %struct.anon.0, %struct.redisOpArray, i8*, i32, i8*, i32, [41 x i8], [41 x i8], i64, i64, i32, i32, i8*, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.client*, %struct.client*, i32, i32, i64, i64, i64, i32, i32, i8*, i64, i32, i32, i32, i64, i32, i32, i32, i8*, [41 x i8], i64, i32, %struct.dict*, %struct.list*, i32, %struct.list*, i32, i32, i64, i32, i32, i32, i32, i64, i32, [6 x i32], %struct.list*, %struct.list*, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i32, i64, %struct.dict*, %struct.list*, i32, i32, i64, i8*, %struct.clusterState*, i32, i32, i32, i32, i8*, i32, i32, i32, %struct.lua_State*, %struct.client*, %struct.client*, %struct.dict*, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, %struct.dict*, i8*, i8*, i32, i32, i32, i64, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_* }
%struct.redisDb = type { %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, i32, i64, %struct.list* }
%struct.aeEventLoop = type { i32, i32, i64, i64, %struct.aeFileEvent*, %struct.aeFiredEvent*, %struct.aeTimeEvent*, i32, i8*, void (%struct.aeEventLoop*)*, void (%struct.aeEventLoop*)* }
%struct.aeFileEvent = type { i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8* }
%struct.aeFiredEvent = type { i32, i32 }
%struct.aeTimeEvent = type { i64, i64, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, void (%struct.aeEventLoop*, i8*)*, i8*, %struct.aeTimeEvent*, %struct.aeTimeEvent* }
%struct.rax = type { %struct.raxNode*, i64, i64 }
%struct.raxNode = type { i32, [0 x i8] }
%struct.redisCommand = type { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }
%struct.redisObject = type { i32, i32, i8* }
%struct.malloc_stats = type { i64, i64, i64, i64, i64 }
%struct.anon = type { i64, i64, [16 x i64], i32 }
%struct.clientBufferLimitsConfig = type { i64, i64, i64 }
%struct.saveparam = type { i64, i32 }
%struct.anon.0 = type { i32, i64, i64 }
%struct.redisOpArray = type { %struct.redisOp*, i32 }
%struct.redisOp = type { %struct.redisObject**, i32, i32, i32, %struct.redisCommand* }
%struct.list = type { %struct.listNode*, %struct.listNode*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i64 }
%struct.listNode = type { %struct.listNode*, %struct.listNode*, i8* }
%struct.clusterState = type opaque
%struct.lua_State = type opaque
%struct.client = type { i64, i32, %struct.redisDb*, %struct.redisObject*, i8*, i64, i8*, i64, i32, %struct.redisObject**, %struct.redisCommand*, %struct.redisCommand*, i32, i32, i64, %struct.list*, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i8*, i64, i64, i64, i64, i64, [41 x i8], i32, [46 x i8], i32, %struct.multiState, i32, %struct.blockingState, i64, %struct.list*, %struct.dict*, %struct.list*, i8*, %struct.listNode*, i32, [16384 x i8] }
%struct.multiState = type { %struct.multiCmd*, i32, i32, i32, i64 }
%struct.multiCmd = type { %struct.redisObject**, i32, %struct.redisCommand* }
%struct.blockingState = type { i64, %struct.dict*, %struct.redisObject*, i64, %struct.redisObject*, %struct.redisObject*, i64, i64, i32, i32, i64, i8* }
%struct.dict = type { %struct.dictType*, i8*, [2 x %struct.dictht], i64, i64 }
%struct.dictType = type { i64 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.dictht = type { %struct.dictEntry**, i64, i64, i64 }
%struct.dictEntry = type { i8*, %union.anon, %struct.dictEntry* }
%union.anon = type { i8* }
%struct.pthread_mutex_t_ = type opaque
%struct.sharedObjectsStruct = type { %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, [10 x %struct.redisObject*], [10000 x %struct.redisObject*], [32 x %struct.redisObject*], [32 x %struct.redisObject*], i8*, i8* }
%struct.rdbSaveInfo = type { i32, i32, [41 x i8], i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i64, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64, %struct._reent*, i32, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, [25 x i8], i32, %struct.__locale_t*, i32, void (%struct._reent*)*, %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint**, i32, i8*, %union.anon.2, %struct._atexit*, %struct._atexit, void (i32)**, %struct._glue, [3 x %struct.__sFILE] }
%struct.__locale_t = type opaque
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%union.anon.2 = type { %struct.anon.4 }
%struct.anon.4 = type { [30 x i8*], [30 x i32] }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct._mbstate_t = type { i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct._rio = type { i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*)*, i32 (%struct._rio*)*, void (%struct._rio*, i8*, i64)*, i64, i64, i64, %union.anon.5 }
%union.anon.5 = type { %struct.anon.8 }
%struct.anon.8 = type { i32*, i32*, i32, i64, i8* }
%struct.raxIterator = type { i32, %struct.rax*, i8*, i8*, i64, i64, [128 x i8], %struct.raxNode*, %struct.raxStack, i32 (%struct.raxNode**)* }
%struct.raxStack = type { i8**, i64, i64, [32 x i8*], i32 }
%struct.streamNACK = type { i64, i64, %struct.streamConsumer* }
%struct.streamConsumer = type { i64, i8*, %struct.rax* }
%struct.streamCG = type { %struct.streamID, %struct.rax*, %struct.rax* }
%struct.streamID = type { i64, i64 }
%struct.RedisModuleIO = type { i64, %struct._rio*, %struct.RedisModuleType*, i32, i32, %struct.RedisModuleCtx*, %struct.redisObject* }
%struct.RedisModuleType = type { i64, %struct.RedisModule*, i8* (%struct.RedisModuleIO*, i32)*, void (%struct.RedisModuleIO*, i8*)*, void (%struct.RedisModuleIO*, %struct.redisObject*, i8*)*, i64 (i8*)*, void (%struct.RedisModuleDigest*, i8*)*, void (i8*)*, i32 (%struct.RedisModuleIO*, i32, i32)*, void (%struct.RedisModuleIO*, i32)*, i32, [10 x i8] }
%struct.RedisModule = type opaque
%struct.RedisModuleDigest = type { [20 x i8], [20 x i8] }
%struct.RedisModuleCtx = type opaque
%struct.quicklist = type { %struct.quicklistNode*, %struct.quicklistNode*, i64, i64, i32 }
%struct.quicklistNode = type { %struct.quicklistNode*, %struct.quicklistNode*, i8*, i32, i32 }
%struct.dictIterator = type { %struct.dict*, i64, i32, i32, %struct.dictEntry*, %struct.dictEntry*, i64 }
%struct.intset = type { i32, i32, [0 x i8] }
%struct.zset = type { %struct.dict*, %struct.zskiplist* }
%struct.zskiplist = type { %struct.zskiplistNode*, %struct.zskiplistNode*, i64, i32 }
%struct.zskiplistNode = type { i8*, double, %struct.zskiplistNode*, [0 x %struct.zskiplistLevel] }
%struct.zskiplistLevel = type { %struct.zskiplistNode*, i64 }
%struct.stream = type { %struct.rax*, i64, %struct.streamID, %struct.rax* }
%struct.moduleValue = type { %struct.RedisModuleType*, i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i64, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64 }
%struct.timespec = type { i64, i64 }
%struct.listIter = type { %struct.listNode*, i32 }

@.str = private unnamed_addr constant [55 x i8] c"Internal error in RDB reading function at rdb.c:%d -> \00", align 1
@rdbCheckMode = external dso_local local_unnamed_addr global i32, align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@server = external dso_local global %struct.redisServer, align 8
@.str.3 = private unnamed_addr constant [46 x i8] c"Impossible to read %llu bytes in rdbLoadRaw()\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"Unknown length encoding %d in rdbLoadLen()\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"Unknown RDB integer encoding type %d\00", align 1
@SDS_NOINIT = external dso_local local_unnamed_addr global i8*, align 8
@.str.6 = private unnamed_addr constant [30 x i8] c"Invalid LZF compressed string\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"enclen < 32\00", align 1
@.str.8 = private unnamed_addr constant [71 x i8] c"/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rdb.c\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"sdsEncodedObject(obj)\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"Unknown RDB string encoding type %d\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"%.17g\00", align 1
@R_NegInf = external dso_local local_unnamed_addr global double, align 8
@R_PosInf = external dso_local local_unnamed_addr global double, align 8
@R_Nan = external dso_local local_unnamed_addr global double, align 8
@.str.12 = private unnamed_addr constant [4 x i8] c"%lg\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"Unknown list encoding\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"Unknown set encoding\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"Unknown sorted set encoding\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"Unknown hash encoding\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"Unknown object type\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"len != -1\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"redis-ver\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"5.0.6\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"redis-bits\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"ctime\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"used-mem\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"repl-stream-db\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"repl-id\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"repl-offset\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"aof-preamble\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"REDIS%04d\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"lua\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"$EOF:\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"temp-%d.rdb\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.35 = private unnamed_addr constant [70 x i8] c"Failed opening the RDB file %s (in server root dir %s) for saving: %s\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.37 = private unnamed_addr constant [85 x i8] c"Error moving temp DB file %s on the final destination %s (in server root dir %s): %s\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"DB saved on disk\00", align 1
@.str.39 = private unnamed_addr constant [34 x i8] c"Write error saving DB on disk: %s\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"redis-rdb-bgsave\00", align 1
@.str.41 = private unnamed_addr constant [44 x i8] c"RDB: %zu MB of memory used by copy-on-write\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"fork\00", align 1
@.str.43 = private unnamed_addr constant [35 x i8] c"Can't save in background: fork: %s\00", align 1
@.str.44 = private unnamed_addr constant [36 x i8] c"Background saving started by pid %d\00", align 1
@.str.45 = private unnamed_addr constant [43 x i8] c"Error reading integer from module %s value\00", align 1
@.str.46 = private unnamed_addr constant [42 x i8] c"Error reading string from module %s value\00", align 1
@.str.47 = private unnamed_addr constant [41 x i8] c"Error reading float from module %s value\00", align 1
@.str.48 = private unnamed_addr constant [42 x i8] c"Error reading double from module %s value\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"module-dummy-value\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"Duplicate keys detected\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"len == 0\00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"Unknown RDB encoding type %d\00", align 1
@.str.53 = private unnamed_addr constant [64 x i8] c"Stream master ID loading failed: invalid encoding or I/O error.\00", align 1
@.str.54 = private unnamed_addr constant [53 x i8] c"Stream node key entry is not the size of a stream ID\00", align 1
@.str.55 = private unnamed_addr constant [29 x i8] c"Empty listpack inside stream\00", align 1
@.str.56 = private unnamed_addr constant [36 x i8] c"Listpack re-added with existing key\00", align 1
@.str.57 = private unnamed_addr constant [50 x i8] c"Error reading the consumer group name from Stream\00", align 1
@.str.58 = private unnamed_addr constant [34 x i8] c"Duplicated consumer group name %s\00", align 1
@.str.59 = private unnamed_addr constant [57 x i8] c"Duplicated gobal PEL entry loading stream consumer group\00", align 1
@.str.60 = private unnamed_addr constant [50 x i8] c"Error reading the consumer name from Stream group\00", align 1
@raxNotFound = external dso_local local_unnamed_addr global i8*, align 8
@.str.61 = private unnamed_addr constant [45 x i8] c"Consumer entry not found in group global PEL\00", align 1
@.str.62 = private unnamed_addr constant [63 x i8] c"Duplicated consumer PEL entry  loading a stream consumer group\00", align 1
@.str.63 = private unnamed_addr constant [72 x i8] c"The RDB file contains module data I can't load: no matching module '%s'\00", align 1
@.str.64 = private unnamed_addr constant [115 x i8] c"The RDB file contains module data for the module '%s' that is not terminated by the proper module value EOF marker\00", align 1
@.str.65 = private unnamed_addr constant [159 x i8] c"The RDB file contains module data for the module type '%s', that the responsible module is not able to load. Check for modules log above for additional clues.\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"REDIS\00", align 1
@.str.67 = private unnamed_addr constant [44 x i8] c"Wrong signature trying to load DB from file\00", align 1
@.str.68 = private unnamed_addr constant [35 x i8] c"Can't handle RDB format version %d\00", align 1
@.str.69 = private unnamed_addr constant [103 x i8] c"FATAL: Data file was created with a Redis server configured to handle more than %d databases. Exiting\0A\00", align 1
@.str.70 = private unnamed_addr constant [13 x i8] c"RDB '%s': %s\00", align 1
@.str.71 = private unnamed_addr constant [46 x i8] c"Can't load Lua script from RDB file! BODY: %s\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"Unrecognized RDB AUX field: '%s'\00", align 1
@.str.73 = private unnamed_addr constant [16 x i8] c"bad when_opcode\00", align 1
@.str.74 = private unnamed_addr constant [76 x i8] c"The RDB file contains AUX module data I can't load: no matching module '%s'\00", align 1
@.str.75 = private unnamed_addr constant [87 x i8] c"The RDB file contains module AUX data, but the module '%s' doesn't seem to support it.\00", align 1
@.str.76 = private unnamed_addr constant [163 x i8] c"The RDB file contains module AUX data for the module type '%s', that the responsible module is not able to load. Check for modules log above for additional clues.\00", align 1
@.str.77 = private unnamed_addr constant [119 x i8] c"The RDB file contains module AUX data for the module '%s' that is not terminated by the proper module value EOF marker\00", align 1
@.str.78 = private unnamed_addr constant [63 x i8] c"RDB file was saved with checksum disabled: no check performed.\00", align 1
@.str.79 = private unnamed_addr constant [34 x i8] c"Wrong RDB checksum. Aborting now.\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"RDB CRC error\00", align 1
@.str.81 = private unnamed_addr constant [65 x i8] c"Short read or OOM loading DB. Unrecoverable error, aborting now.\00", align 1
@.str.82 = private unnamed_addr constant [32 x i8] c"Unexpected EOF reading RDB file\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.84 = private unnamed_addr constant [42 x i8] c"Background saving terminated with success\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"Background saving error\00", align 1
@.str.86 = private unnamed_addr constant [42 x i8] c"Background saving terminated by signal %d\00", align 1
@.str.87 = private unnamed_addr constant [21 x i8] c"rdb-unlink-temp-file\00", align 1
@.str.88 = private unnamed_addr constant [48 x i8] c"Background RDB transfer terminated with success\00", align 1
@.str.89 = private unnamed_addr constant [26 x i8] c"Background transfer error\00", align 1
@.str.90 = private unnamed_addr constant [44 x i8] c"Background transfer terminated by signal %d\00", align 1
@.str.91 = private unnamed_addr constant [55 x i8] c"Closing slave %s: child->slave RDB transfer failed: %s\00", align 1
@.str.92 = private unnamed_addr constant [27 x i8] c"RDB transfer child aborted\00", align 1
@.str.93 = private unnamed_addr constant [51 x i8] c"Slave %s correctly received the streamed RDB file.\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"Unknown RDB child type.\00", align 1
@.str.95 = private unnamed_addr constant [20 x i8] c"redis-rdb-to-slaves\00", align 1
@.str.96 = private unnamed_addr constant [42 x i8] c"Background RDB transfer started by pid %d\00", align 1
@.str.97 = private unnamed_addr constant [36 x i8] c"Background save already in progress\00", align 1
@shared = external dso_local local_unnamed_addr global %struct.sharedObjectsStruct, align 8
@.str.98 = private unnamed_addr constant [9 x i8] c"schedule\00", align 1
@.str.99 = private unnamed_addr constant [28 x i8] c"Background saving scheduled\00", align 1
@.str.100 = private unnamed_addr constant [127 x i8] c"An AOF log rewriting in progress: can't BGSAVE right now. Use BGSAVE SCHEDULE in order to schedule a BGSAVE whenever possible.\00", align 1
@.str.101 = private unnamed_addr constant [26 x i8] c"Background saving started\00", align 1
@rdbPopulateSaveInfo.rsi_init = private unnamed_addr constant %struct.rdbSaveInfo { i32 -1, i32 0, [41 x i8] c"000000000000000000000000000000\00\00\00\00\00\00\00\00\00\00\00", i64 -1 }, align 8
@__A_VARIABLE = internal global i32 0
@switch.table.rdbLoadObjectType = private unnamed_addr constant [16 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 -1, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15]

; Function Attrs: noredzone noreturn nounwind
define dso_local void @rdbCheckThenExit(i32, i8*, ...) local_unnamed_addr #0 !dbg !147 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca [1024 x i8], align 16
  %5 = alloca [2 x i8*], align 16
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !179
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #4, !dbg !179
  %7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0, !dbg !181
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %7) #4, !dbg !181
  %8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %7, i64 1024, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 %0) #9, !dbg !183
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !185
  call void @llvm.va_start(i8* nonnull %6), !dbg !185
  %10 = sext i32 %8 to i64, !dbg !186
  %11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 %10, !dbg !186
  %12 = sub nsw i64 1024, %10, !dbg !187
  %13 = call i32 @vsnprintf(i8* nonnull %11, i64 %12, i8* %1, %struct.__va_list_tag* nonnull %9) #9, !dbg !188
  call void @llvm.va_end(i8* nonnull %6), !dbg !189
  %14 = load i32, i32* @rdbCheckMode, align 4, !dbg !190, !tbaa !191
  %15 = icmp eq i32 %14, 0, !dbg !190
  br i1 %15, label %16, label %23, !dbg !195

; <label>:16:                                     ; preds = %2
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %7) #9, !dbg !196
  %17 = bitcast [2 x i8*]* %5 to i8*, !dbg !197
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #4, !dbg !197
  %18 = getelementptr inbounds [2 x i8*], [2 x i8*]* %5, i64 0, i64 0, !dbg !199
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %18, align 16, !dbg !199, !tbaa !200
  %19 = getelementptr inbounds [2 x i8*], [2 x i8*]* %5, i64 0, i64 1, !dbg !199
  %20 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157) to i64*), align 8, !dbg !202, !tbaa !203
  %21 = bitcast i8** %19 to i64*, !dbg !199
  store i64 %20, i64* %21, align 8, !dbg !199, !tbaa !200
  %22 = call i32 @redis_check_rdb_main(i32 2, i8** nonnull %18, %struct.__sFILE* null) #9, !dbg !211
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #4, !dbg !212
  br label %24, !dbg !213

; <label>:23:                                     ; preds = %2
  call void (i8*, ...) @rdbCheckError(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %7) #9, !dbg !214
  br label %24

; <label>:24:                                     ; preds = %23, %16
  call void @exit(i32 1) #10, !dbg !216
  unreachable, !dbg !216
}

; Function Attrs: nounwind readnone speculatable

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

; Function Attrs: noredzone
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: noredzone
declare dso_local void @serverLog(i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @redis_check_rdb_main(i32, i8**, %struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone
declare dso_local void @rdbCheckError(i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone noreturn
declare dso_local void @exit(i32) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local void @rdbLoadRaw(%struct._rio*, i8*, i64) local_unnamed_addr #6 !dbg !217 {
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !504
  %5 = icmp eq i64 %2, 0, !dbg !505
  br i1 %5, label %32, label %6, !dbg !505

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %10, !dbg !505

; <label>:10:                                     ; preds = %25, %6
  %11 = phi i64 [ %2, %6 ], [ %27, %25 ]
  %12 = phi i8* [ %1, %6 ], [ %26, %25 ]
  %13 = load i64, i64* %4, align 8, !dbg !504, !tbaa !506
  %14 = icmp ne i64 %13, 0, !dbg !508
  %15 = icmp ult i64 %13, %11, !dbg !509
  %16 = and i1 %14, %15, !dbg !510
  %17 = select i1 %16, i64 %13, i64 %11, !dbg !510
  %18 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %7, align 8, !dbg !512, !tbaa !514
  %19 = tail call i64 %18(%struct._rio* %0, i8* %12, i64 %17) #9, !dbg !515
  %20 = icmp eq i64 %19, 0, !dbg !516
  br i1 %20, label %31, label %21, !dbg !517

; <label>:21:                                     ; preds = %10
  %22 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !518, !tbaa !520
  %23 = icmp eq void (%struct._rio*, i8*, i64)* %22, null, !dbg !521
  br i1 %23, label %25, label %24, !dbg !522

; <label>:24:                                     ; preds = %21
  tail call void %22(%struct._rio* nonnull %0, i8* %12, i64 %17) #9, !dbg !523
  br label %25, !dbg !523

; <label>:25:                                     ; preds = %24, %21
  %26 = getelementptr inbounds i8, i8* %12, i64 %17, !dbg !524
  %27 = sub i64 %11, %17, !dbg !525
  %28 = load i64, i64* %9, align 8, !dbg !526, !tbaa !527
  %29 = add i64 %28, %17, !dbg !526
  store i64 %29, i64* %9, align 8, !dbg !526, !tbaa !527
  %30 = icmp eq i64 %27, 0, !dbg !505
  br i1 %30, label %32, label %10, !dbg !505

; <label>:31:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !528
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 %2) #11, !dbg !529
  unreachable

; <label>:32:                                     ; preds = %25, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !531
  ret void, !dbg !531
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveType(%struct._rio*, i8 zeroext) local_unnamed_addr #6 !dbg !532 {
  %3 = alloca i8, align 1
  store i8 %1, i8* %3, align 1, !tbaa !540
  %4 = icmp eq %struct._rio* %0, null, !dbg !555
  br i1 %4, label %33, label %5, !dbg !557

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %10, !dbg !571

; <label>:10:                                     ; preds = %25, %5
  %11 = phi i64 [ 1, %5 ], [ %27, %25 ]
  %12 = phi i8* [ %3, %5 ], [ %26, %25 ]
  %13 = load i64, i64* %6, align 8, !dbg !572, !tbaa !506
  %14 = icmp ne i64 %13, 0, !dbg !573
  %15 = icmp ult i64 %13, %11, !dbg !574
  %16 = and i1 %14, %15, !dbg !575
  %17 = select i1 %16, i64 %13, i64 %11, !dbg !575
  %18 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %7, align 8, !dbg !577, !tbaa !520
  %19 = icmp eq void (%struct._rio*, i8*, i64)* %18, null, !dbg !579
  br i1 %19, label %21, label %20, !dbg !580

; <label>:20:                                     ; preds = %10
  call void %18(%struct._rio* nonnull %0, i8* %12, i64 %17) #9, !dbg !581
  br label %21, !dbg !581

; <label>:21:                                     ; preds = %20, %10
  %22 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %8, align 8, !dbg !582, !tbaa !584
  %23 = call i64 %22(%struct._rio* nonnull %0, i8* %12, i64 %17) #9, !dbg !585
  %24 = icmp eq i64 %23, 0, !dbg !586
  br i1 %24, label %31, label %25, !dbg !587

; <label>:25:                                     ; preds = %21
  %26 = getelementptr inbounds i8, i8* %12, i64 %17, !dbg !588
  %27 = sub i64 %11, %17, !dbg !589
  %28 = load i64, i64* %9, align 8, !dbg !590, !tbaa !527
  %29 = add i64 %28, %17, !dbg !590
  store i64 %29, i64* %9, align 8, !dbg !590, !tbaa !527
  %30 = icmp eq i64 %27, 0, !dbg !571
  br i1 %30, label %31, label %10, !dbg !571

; <label>:31:                                     ; preds = %21, %25
  %32 = phi i32 [ 1, %25 ], [ -1, %21 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !591
  br label %33, !dbg !592

; <label>:33:                                     ; preds = %31, %2
  %34 = phi i32 [ 1, %2 ], [ %32, %31 ], !dbg !593
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !592
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !594
  ret i32 %34, !dbg !594
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadType(%struct._rio*) local_unnamed_addr #6 !dbg !595 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #4, !dbg !603
  %3 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !609
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %7, !dbg !610

; <label>:7:                                      ; preds = %22, %1
  %8 = phi i64 [ 1, %1 ], [ %24, %22 ]
  %9 = phi i8* [ %2, %1 ], [ %23, %22 ]
  %10 = load i64, i64* %3, align 8, !dbg !609, !tbaa !506
  %11 = icmp ne i64 %10, 0, !dbg !611
  %12 = icmp ult i64 %10, %8, !dbg !612
  %13 = and i1 %11, %12, !dbg !613
  %14 = select i1 %13, i64 %10, i64 %8, !dbg !613
  %15 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %4, align 8, !dbg !615, !tbaa !514
  %16 = call i64 %15(%struct._rio* %0, i8* %9, i64 %14) #9, !dbg !616
  %17 = icmp eq i64 %16, 0, !dbg !617
  br i1 %17, label %31, label %18, !dbg !618

; <label>:18:                                     ; preds = %7
  %19 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %5, align 8, !dbg !619, !tbaa !520
  %20 = icmp eq void (%struct._rio*, i8*, i64)* %19, null, !dbg !620
  br i1 %20, label %22, label %21, !dbg !621

; <label>:21:                                     ; preds = %18
  call void %19(%struct._rio* nonnull %0, i8* %9, i64 %14) #9, !dbg !622
  br label %22, !dbg !622

; <label>:22:                                     ; preds = %21, %18
  %23 = getelementptr inbounds i8, i8* %9, i64 %14, !dbg !623
  %24 = sub i64 %8, %14, !dbg !624
  %25 = load i64, i64* %6, align 8, !dbg !625, !tbaa !527
  %26 = add i64 %25, %14, !dbg !625
  store i64 %26, i64* %6, align 8, !dbg !625, !tbaa !527
  %27 = icmp eq i64 %24, 0, !dbg !610
  br i1 %27, label %28, label %7, !dbg !610

; <label>:28:                                     ; preds = %22
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !626
  %29 = load i8, i8* %2, align 1, !dbg !627
  %30 = zext i8 %29 to i32, !dbg !627
  br label %32

; <label>:31:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !626
  br label %32, !dbg !628

; <label>:32:                                     ; preds = %28, %31
  %33 = phi i32 [ -1, %31 ], [ %30, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #4, !dbg !629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !629
  ret i32 %33, !dbg !629
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbLoadTime(%struct._rio*) local_unnamed_addr #6 !dbg !630 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*, !dbg !637
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #4, !dbg !637
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !646
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %8, !dbg !647

; <label>:8:                                      ; preds = %23, %1
  %9 = phi i64 [ 4, %1 ], [ %25, %23 ]
  %10 = phi i8* [ %3, %1 ], [ %24, %23 ]
  %11 = load i64, i64* %4, align 8, !dbg !646, !tbaa !506
  %12 = icmp ne i64 %11, 0, !dbg !648
  %13 = icmp ult i64 %11, %9, !dbg !649
  %14 = and i1 %12, %13, !dbg !650
  %15 = select i1 %14, i64 %11, i64 %9, !dbg !650
  %16 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %5, align 8, !dbg !652, !tbaa !514
  %17 = call i64 %16(%struct._rio* %0, i8* %10, i64 %15) #9, !dbg !653
  %18 = icmp eq i64 %17, 0, !dbg !654
  br i1 %18, label %29, label %19, !dbg !655

; <label>:19:                                     ; preds = %8
  %20 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %6, align 8, !dbg !656, !tbaa !520
  %21 = icmp eq void (%struct._rio*, i8*, i64)* %20, null, !dbg !657
  br i1 %21, label %23, label %22, !dbg !658

; <label>:22:                                     ; preds = %19
  call void %20(%struct._rio* nonnull %0, i8* %10, i64 %15) #9, !dbg !659
  br label %23, !dbg !659

; <label>:23:                                     ; preds = %22, %19
  %24 = getelementptr inbounds i8, i8* %10, i64 %15, !dbg !660
  %25 = sub i64 %9, %15, !dbg !661
  %26 = load i64, i64* %7, align 8, !dbg !662, !tbaa !527
  %27 = add i64 %26, %15, !dbg !662
  store i64 %27, i64* %7, align 8, !dbg !662, !tbaa !527
  %28 = icmp eq i64 %25, 0, !dbg !647
  br i1 %28, label %30, label %8, !dbg !647

; <label>:29:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !663
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 4) #9, !dbg !664
  unreachable

; <label>:30:                                     ; preds = %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !663
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !665
  %31 = load i32, i32* %2, align 4, !dbg !666, !tbaa !191
  %32 = sext i32 %31 to i64, !dbg !668
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #4, !dbg !669
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !670
  ret i64 %32, !dbg !670
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveMillisecondTime(%struct._rio*, i64) local_unnamed_addr #6 !dbg !671 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !680
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4, !dbg !680
  store i64 %1, i64* %3, align 8, !dbg !681, !tbaa !682
  %5 = icmp eq %struct._rio* %0, null, !dbg !687
  br i1 %5, label %34, label %6, !dbg !688

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %11, !dbg !693

; <label>:11:                                     ; preds = %26, %6
  %12 = phi i64 [ 8, %6 ], [ %28, %26 ]
  %13 = phi i8* [ %4, %6 ], [ %27, %26 ]
  %14 = load i64, i64* %7, align 8, !dbg !694, !tbaa !506
  %15 = icmp ne i64 %14, 0, !dbg !695
  %16 = icmp ult i64 %14, %12, !dbg !696
  %17 = and i1 %15, %16, !dbg !697
  %18 = select i1 %17, i64 %14, i64 %12, !dbg !697
  %19 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !699, !tbaa !520
  %20 = icmp eq void (%struct._rio*, i8*, i64)* %19, null, !dbg !700
  br i1 %20, label %22, label %21, !dbg !701

; <label>:21:                                     ; preds = %11
  call void %19(%struct._rio* nonnull %0, i8* %13, i64 %18) #9, !dbg !702
  br label %22, !dbg !702

; <label>:22:                                     ; preds = %21, %11
  %23 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %9, align 8, !dbg !703, !tbaa !584
  %24 = call i64 %23(%struct._rio* nonnull %0, i8* %13, i64 %18) #9, !dbg !704
  %25 = icmp eq i64 %24, 0, !dbg !705
  br i1 %25, label %32, label %26, !dbg !706

; <label>:26:                                     ; preds = %22
  %27 = getelementptr inbounds i8, i8* %13, i64 %18, !dbg !707
  %28 = sub i64 %12, %18, !dbg !708
  %29 = load i64, i64* %10, align 8, !dbg !709, !tbaa !527
  %30 = add i64 %29, %18, !dbg !709
  store i64 %30, i64* %10, align 8, !dbg !709, !tbaa !527
  %31 = icmp eq i64 %28, 0, !dbg !693
  br i1 %31, label %32, label %11, !dbg !693

; <label>:32:                                     ; preds = %22, %26
  %33 = phi i32 [ 8, %26 ], [ -1, %22 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !710
  br label %34, !dbg !711

; <label>:34:                                     ; preds = %32, %2
  %35 = phi i32 [ 8, %2 ], [ %33, %32 ], !dbg !712
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !711
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4, !dbg !713
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !714
  ret i32 %35, !dbg !714
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbLoadMillisecondTime(%struct._rio*, i32) local_unnamed_addr #6 !dbg !715 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !724
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4, !dbg !724
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !733
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %9, !dbg !734

; <label>:9:                                      ; preds = %24, %2
  %10 = phi i64 [ 8, %2 ], [ %26, %24 ]
  %11 = phi i8* [ %4, %2 ], [ %25, %24 ]
  %12 = load i64, i64* %5, align 8, !dbg !733, !tbaa !506
  %13 = icmp ne i64 %12, 0, !dbg !735
  %14 = icmp ult i64 %12, %10, !dbg !736
  %15 = and i1 %13, %14, !dbg !737
  %16 = select i1 %15, i64 %12, i64 %10, !dbg !737
  %17 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %6, align 8, !dbg !739, !tbaa !514
  %18 = call i64 %17(%struct._rio* %0, i8* %11, i64 %16) #9, !dbg !740
  %19 = icmp eq i64 %18, 0, !dbg !741
  br i1 %19, label %30, label %20, !dbg !742

; <label>:20:                                     ; preds = %9
  %21 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %7, align 8, !dbg !743, !tbaa !520
  %22 = icmp eq void (%struct._rio*, i8*, i64)* %21, null, !dbg !744
  br i1 %22, label %24, label %23, !dbg !745

; <label>:23:                                     ; preds = %20
  call void %21(%struct._rio* nonnull %0, i8* %11, i64 %16) #9, !dbg !746
  br label %24, !dbg !746

; <label>:24:                                     ; preds = %23, %20
  %25 = getelementptr inbounds i8, i8* %11, i64 %16, !dbg !747
  %26 = sub i64 %10, %16, !dbg !748
  %27 = load i64, i64* %8, align 8, !dbg !749, !tbaa !527
  %28 = add i64 %27, %16, !dbg !749
  store i64 %28, i64* %8, align 8, !dbg !749, !tbaa !527
  %29 = icmp eq i64 %26, 0, !dbg !734
  br i1 %29, label %31, label %9, !dbg !734

; <label>:30:                                     ; preds = %9
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !750
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 8) #9, !dbg !751
  unreachable

; <label>:31:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !752
  %32 = load i64, i64* %3, align 8, !dbg !753, !tbaa !682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4, !dbg !755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !756
  ret i64 %32, !dbg !756
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveLen(%struct._rio*, i64) local_unnamed_addr #6 !dbg !757 {
  %3 = alloca i64, align 8
  %4 = alloca [2 x i8], align 1
  %5 = alloca i32, align 4
  store i64 %1, i64* %3, align 8, !tbaa !682
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0, !dbg !773
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #4, !dbg !773
  %7 = icmp ult i64 %1, 64, !dbg !775
  br i1 %7, label %8, label %40, !dbg !776

; <label>:8:                                      ; preds = %2
  %9 = trunc i64 %1 to i8, !dbg !777
  store i8 %9, i8* %6, align 1, !dbg !779, !tbaa !540
  %10 = icmp eq %struct._rio* %0, null, !dbg !785
  br i1 %10, label %38, label %11, !dbg !786

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %13 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %14 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %15 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %16, !dbg !791

; <label>:16:                                     ; preds = %31, %11
  %17 = phi i64 [ 1, %11 ], [ %33, %31 ]
  %18 = phi i8* [ %6, %11 ], [ %32, %31 ]
  %19 = load i64, i64* %12, align 8, !dbg !792, !tbaa !506
  %20 = icmp ne i64 %19, 0, !dbg !793
  %21 = icmp ult i64 %19, %17, !dbg !794
  %22 = and i1 %20, %21, !dbg !795
  %23 = select i1 %22, i64 %19, i64 %17, !dbg !795
  %24 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !797, !tbaa !520
  %25 = icmp eq void (%struct._rio*, i8*, i64)* %24, null, !dbg !798
  br i1 %25, label %27, label %26, !dbg !799

; <label>:26:                                     ; preds = %16
  call void %24(%struct._rio* nonnull %0, i8* %18, i64 %23) #9, !dbg !800
  br label %27, !dbg !800

; <label>:27:                                     ; preds = %26, %16
  %28 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %14, align 8, !dbg !801, !tbaa !584
  %29 = call i64 %28(%struct._rio* nonnull %0, i8* %18, i64 %23) #9, !dbg !802
  %30 = icmp eq i64 %29, 0, !dbg !803
  br i1 %30, label %39, label %31, !dbg !804

; <label>:31:                                     ; preds = %27
  %32 = getelementptr inbounds i8, i8* %18, i64 %23, !dbg !805
  %33 = sub i64 %17, %23, !dbg !806
  %34 = load i64, i64* %15, align 8, !dbg !807, !tbaa !527
  %35 = add i64 %34, %23, !dbg !807
  store i64 %35, i64* %15, align 8, !dbg !807, !tbaa !527
  %36 = icmp eq i64 %33, 0, !dbg !791
  br i1 %36, label %37, label %16, !dbg !791

; <label>:37:                                     ; preds = %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !808
  br label %38, !dbg !809

; <label>:38:                                     ; preds = %37, %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !810
  br label %204, !dbg !811

; <label>:39:                                     ; preds = %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !810
  br label %204, !dbg !811

; <label>:40:                                     ; preds = %2
  %41 = icmp ult i64 %1, 16384, !dbg !812
  br i1 %41, label %42, label %78, !dbg !813

; <label>:42:                                     ; preds = %40
  %43 = lshr i64 %1, 8, !dbg !814
  %44 = trunc i64 %43 to i8, !dbg !816
  %45 = or i8 %44, 64, !dbg !816
  store i8 %45, i8* %6, align 1, !dbg !817, !tbaa !540
  %46 = trunc i64 %1 to i8, !dbg !818
  %47 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1, !dbg !819
  store i8 %46, i8* %47, align 1, !dbg !820, !tbaa !540
  %48 = icmp eq %struct._rio* %0, null, !dbg !826
  br i1 %48, label %76, label %49, !dbg !827

; <label>:49:                                     ; preds = %42
  %50 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %51 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %52 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %53 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %54, !dbg !832

; <label>:54:                                     ; preds = %69, %49
  %55 = phi i64 [ 2, %49 ], [ %71, %69 ]
  %56 = phi i8* [ %6, %49 ], [ %70, %69 ]
  %57 = load i64, i64* %50, align 8, !dbg !833, !tbaa !506
  %58 = icmp ne i64 %57, 0, !dbg !834
  %59 = icmp ult i64 %57, %55, !dbg !835
  %60 = and i1 %58, %59, !dbg !836
  %61 = select i1 %60, i64 %57, i64 %55, !dbg !836
  %62 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %51, align 8, !dbg !838, !tbaa !520
  %63 = icmp eq void (%struct._rio*, i8*, i64)* %62, null, !dbg !839
  br i1 %63, label %65, label %64, !dbg !840

; <label>:64:                                     ; preds = %54
  call void %62(%struct._rio* nonnull %0, i8* %56, i64 %61) #9, !dbg !841
  br label %65, !dbg !841

; <label>:65:                                     ; preds = %64, %54
  %66 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %52, align 8, !dbg !842, !tbaa !584
  %67 = call i64 %66(%struct._rio* nonnull %0, i8* %56, i64 %61) #9, !dbg !843
  %68 = icmp eq i64 %67, 0, !dbg !844
  br i1 %68, label %77, label %69, !dbg !845

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds i8, i8* %56, i64 %61, !dbg !846
  %71 = sub i64 %55, %61, !dbg !847
  %72 = load i64, i64* %53, align 8, !dbg !848, !tbaa !527
  %73 = add i64 %72, %61, !dbg !848
  store i64 %73, i64* %53, align 8, !dbg !848, !tbaa !527
  %74 = icmp eq i64 %71, 0, !dbg !832
  br i1 %74, label %75, label %54, !dbg !832

; <label>:75:                                     ; preds = %69
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !849
  br label %76, !dbg !850

; <label>:76:                                     ; preds = %75, %42
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !851
  br label %204, !dbg !852

; <label>:77:                                     ; preds = %65
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !851
  br label %204, !dbg !852

; <label>:78:                                     ; preds = %40
  %79 = icmp ult i64 %1, 4294967296, !dbg !853
  br i1 %79, label %80, label %145, !dbg !854

; <label>:80:                                     ; preds = %78
  store i8 -128, i8* %6, align 1, !dbg !855, !tbaa !540
  %81 = icmp eq %struct._rio* %0, null, !dbg !861
  br i1 %81, label %111, label %82, !dbg !862

; <label>:82:                                     ; preds = %80
  %83 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %84 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %85 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %86 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %87, !dbg !867

; <label>:87:                                     ; preds = %102, %82
  %88 = phi i64 [ 1, %82 ], [ %104, %102 ]
  %89 = phi i8* [ %6, %82 ], [ %103, %102 ]
  %90 = load i64, i64* %83, align 8, !dbg !868, !tbaa !506
  %91 = icmp ne i64 %90, 0, !dbg !869
  %92 = icmp ult i64 %90, %88, !dbg !870
  %93 = and i1 %91, %92, !dbg !871
  %94 = select i1 %93, i64 %90, i64 %88, !dbg !871
  %95 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %84, align 8, !dbg !873, !tbaa !520
  %96 = icmp eq void (%struct._rio*, i8*, i64)* %95, null, !dbg !874
  br i1 %96, label %98, label %97, !dbg !875

; <label>:97:                                     ; preds = %87
  call void %95(%struct._rio* nonnull %0, i8* %89, i64 %94) #9, !dbg !876
  br label %98, !dbg !876

; <label>:98:                                     ; preds = %97, %87
  %99 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %85, align 8, !dbg !877, !tbaa !584
  %100 = call i64 %99(%struct._rio* nonnull %0, i8* %89, i64 %94) #9, !dbg !878
  %101 = icmp eq i64 %100, 0, !dbg !879
  br i1 %101, label %110, label %102, !dbg !880

; <label>:102:                                    ; preds = %98
  %103 = getelementptr inbounds i8, i8* %89, i64 %94, !dbg !881
  %104 = sub i64 %88, %94, !dbg !882
  %105 = load i64, i64* %86, align 8, !dbg !883, !tbaa !527
  %106 = add i64 %105, %94, !dbg !883
  store i64 %106, i64* %86, align 8, !dbg !883, !tbaa !527
  %107 = icmp eq i64 %104, 0, !dbg !867
  br i1 %107, label %108, label %87, !dbg !867

; <label>:108:                                    ; preds = %102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !884
  %109 = load i64, i64* %3, align 8, !dbg !885, !tbaa !682
  br label %111, !dbg !886

; <label>:110:                                    ; preds = %98
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !887
  br label %204, !dbg !888

; <label>:111:                                    ; preds = %108, %80
  %112 = phi i64 [ %109, %108 ], [ %1, %80 ], !dbg !885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !887
  %113 = bitcast i32* %5 to i8*, !dbg !889
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #4, !dbg !889
  %114 = trunc i64 %112 to i32, !dbg !885
  %115 = call i32 @lwip_htonl(i32 %114) #9, !dbg !885
  store i32 %115, i32* %5, align 4, !dbg !890, !tbaa !191
  br i1 %81, label %143, label %116, !dbg !896

; <label>:116:                                    ; preds = %111
  %117 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %118 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %119 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %120 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %121, !dbg !901

; <label>:121:                                    ; preds = %136, %116
  %122 = phi i64 [ 4, %116 ], [ %138, %136 ]
  %123 = phi i8* [ %113, %116 ], [ %137, %136 ]
  %124 = load i64, i64* %117, align 8, !dbg !902, !tbaa !506
  %125 = icmp ne i64 %124, 0, !dbg !903
  %126 = icmp ult i64 %124, %122, !dbg !904
  %127 = and i1 %125, %126, !dbg !905
  %128 = select i1 %127, i64 %124, i64 %122, !dbg !905
  %129 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %118, align 8, !dbg !907, !tbaa !520
  %130 = icmp eq void (%struct._rio*, i8*, i64)* %129, null, !dbg !908
  br i1 %130, label %132, label %131, !dbg !909

; <label>:131:                                    ; preds = %121
  call void %129(%struct._rio* nonnull %0, i8* %123, i64 %128) #9, !dbg !910
  br label %132, !dbg !910

; <label>:132:                                    ; preds = %131, %121
  %133 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %119, align 8, !dbg !911, !tbaa !584
  %134 = call i64 %133(%struct._rio* nonnull %0, i8* %123, i64 %128) #9, !dbg !912
  %135 = icmp eq i64 %134, 0, !dbg !913
  br i1 %135, label %144, label %136, !dbg !914

; <label>:136:                                    ; preds = %132
  %137 = getelementptr inbounds i8, i8* %123, i64 %128, !dbg !915
  %138 = sub i64 %122, %128, !dbg !916
  %139 = load i64, i64* %120, align 8, !dbg !917, !tbaa !527
  %140 = add i64 %139, %128, !dbg !917
  store i64 %140, i64* %120, align 8, !dbg !917, !tbaa !527
  %141 = icmp eq i64 %138, 0, !dbg !901
  br i1 %141, label %142, label %121, !dbg !901

; <label>:142:                                    ; preds = %136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !918
  br label %143, !dbg !919

; <label>:143:                                    ; preds = %111, %142
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #4, !dbg !922
  br label %204

; <label>:144:                                    ; preds = %132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !918
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #4, !dbg !922
  br label %204

; <label>:145:                                    ; preds = %78
  store i8 -127, i8* %6, align 1, !dbg !923, !tbaa !540
  %146 = icmp eq %struct._rio* %0, null, !dbg !930
  br i1 %146, label %200, label %147, !dbg !931

; <label>:147:                                    ; preds = %145
  %148 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %149 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %150 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %151 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %152, !dbg !936

; <label>:152:                                    ; preds = %167, %147
  %153 = phi i64 [ 1, %147 ], [ %169, %167 ]
  %154 = phi i8* [ %6, %147 ], [ %168, %167 ]
  %155 = load i64, i64* %148, align 8, !dbg !937, !tbaa !506
  %156 = icmp ne i64 %155, 0, !dbg !938
  %157 = icmp ult i64 %155, %153, !dbg !939
  %158 = and i1 %156, %157, !dbg !940
  %159 = select i1 %158, i64 %155, i64 %153, !dbg !940
  %160 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %149, align 8, !dbg !942, !tbaa !520
  %161 = icmp eq void (%struct._rio*, i8*, i64)* %160, null, !dbg !943
  br i1 %161, label %163, label %162, !dbg !944

; <label>:162:                                    ; preds = %152
  call void %160(%struct._rio* nonnull %0, i8* %154, i64 %159) #9, !dbg !945
  br label %163, !dbg !945

; <label>:163:                                    ; preds = %162, %152
  %164 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %150, align 8, !dbg !946, !tbaa !584
  %165 = call i64 %164(%struct._rio* nonnull %0, i8* %154, i64 %159) #9, !dbg !947
  %166 = icmp eq i64 %165, 0, !dbg !948
  br i1 %166, label %173, label %167, !dbg !949

; <label>:167:                                    ; preds = %163
  %168 = getelementptr inbounds i8, i8* %154, i64 %159, !dbg !950
  %169 = sub i64 %153, %159, !dbg !951
  %170 = load i64, i64* %151, align 8, !dbg !952, !tbaa !527
  %171 = add i64 %170, %159, !dbg !952
  store i64 %171, i64* %151, align 8, !dbg !952, !tbaa !527
  %172 = icmp eq i64 %169, 0, !dbg !936
  br i1 %172, label %174, label %152, !dbg !936

; <label>:173:                                    ; preds = %163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !953
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !954
  br label %204, !dbg !955

; <label>:174:                                    ; preds = %167
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !953
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !954
  %175 = load i64, i64* %3, align 8, !dbg !956, !tbaa !682
  %176 = call i64 @intrev64(i64 %175) #9, !dbg !956
  store i64 %176, i64* %3, align 8, !dbg !957, !tbaa !682
  %177 = bitcast i64* %3 to i8*, !dbg !962
  br label %178, !dbg !968

; <label>:178:                                    ; preds = %193, %174
  %179 = phi i64 [ 8, %174 ], [ %195, %193 ]
  %180 = phi i8* [ %177, %174 ], [ %194, %193 ]
  %181 = load i64, i64* %148, align 8, !dbg !969, !tbaa !506
  %182 = icmp ne i64 %181, 0, !dbg !970
  %183 = icmp ult i64 %181, %179, !dbg !971
  %184 = and i1 %182, %183, !dbg !972
  %185 = select i1 %184, i64 %181, i64 %179, !dbg !972
  %186 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %149, align 8, !dbg !974, !tbaa !520
  %187 = icmp eq void (%struct._rio*, i8*, i64)* %186, null, !dbg !975
  br i1 %187, label %189, label %188, !dbg !976

; <label>:188:                                    ; preds = %178
  call void %186(%struct._rio* nonnull %0, i8* %180, i64 %185) #9, !dbg !977
  br label %189, !dbg !977

; <label>:189:                                    ; preds = %188, %178
  %190 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %150, align 8, !dbg !978, !tbaa !584
  %191 = call i64 %190(%struct._rio* nonnull %0, i8* %180, i64 %185) #9, !dbg !979
  %192 = icmp eq i64 %191, 0, !dbg !980
  br i1 %192, label %203, label %193, !dbg !981

; <label>:193:                                    ; preds = %189
  %194 = getelementptr inbounds i8, i8* %180, i64 %185, !dbg !982
  %195 = sub i64 %179, %185, !dbg !983
  %196 = load i64, i64* %151, align 8, !dbg !984, !tbaa !527
  %197 = add i64 %196, %185, !dbg !984
  store i64 %197, i64* %151, align 8, !dbg !984, !tbaa !527
  %198 = icmp eq i64 %195, 0, !dbg !968
  br i1 %198, label %199, label %178, !dbg !968

; <label>:199:                                    ; preds = %193
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !985
  br label %202, !dbg !986

; <label>:200:                                    ; preds = %145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !954
  %201 = call i64 @intrev64(i64 %1) #9, !dbg !956
  store i64 %201, i64* %3, align 8, !dbg !957, !tbaa !682
  br label %202

; <label>:202:                                    ; preds = %200, %199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !987
  br label %204, !dbg !988

; <label>:203:                                    ; preds = %189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !985
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !987
  br label %204, !dbg !988

; <label>:204:                                    ; preds = %38, %76, %143, %202, %203, %173, %144, %110, %77, %39
  %205 = phi i32 [ -1, %144 ], [ -1, %39 ], [ -1, %77 ], [ -1, %110 ], [ -1, %173 ], [ -1, %203 ], [ 1, %38 ], [ 2, %76 ], [ 5, %143 ], [ 9, %202 ], !dbg !989
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #4, !dbg !990
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !990
  ret i32 %205, !dbg !990
}

; Function Attrs: noredzone
declare dso_local i32 @lwip_htonl(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @intrev64(i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadLenByRef(%struct._rio*, i32*, i64* nocapture) local_unnamed_addr #6 !dbg !991 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0, !dbg !1013
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #4, !dbg !1013
  %8 = icmp ne i32* %1, null, !dbg !1015
  br i1 %8, label %9, label %10, !dbg !1017

; <label>:9:                                      ; preds = %3
  store i32 0, i32* %1, align 4, !dbg !1018, !tbaa !191
  br label %10, !dbg !1019

; <label>:10:                                     ; preds = %9, %3
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !1025
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %13 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %14 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %15, !dbg !1026

; <label>:15:                                     ; preds = %31, %10
  %16 = phi i64 [ 1, %10 ], [ %33, %31 ]
  %17 = phi i8* [ %7, %10 ], [ %32, %31 ]
  %18 = load i64, i64* %11, align 8, !dbg !1025, !tbaa !506
  %19 = icmp ne i64 %18, 0, !dbg !1027
  %20 = icmp ult i64 %18, %16, !dbg !1028
  %21 = and i1 %19, %20, !dbg !1029
  %22 = select i1 %21, i64 %18, i64 %16, !dbg !1029
  %23 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !1031, !tbaa !514
  %24 = call i64 %23(%struct._rio* %0, i8* %17, i64 %22) #9, !dbg !1032
  %25 = icmp eq i64 %24, 0, !dbg !1033
  br i1 %25, label %26, label %27, !dbg !1034

; <label>:26:                                     ; preds = %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1035
  br label %139, !dbg !1036

; <label>:27:                                     ; preds = %15
  %28 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1037, !tbaa !520
  %29 = icmp eq void (%struct._rio*, i8*, i64)* %28, null, !dbg !1038
  br i1 %29, label %31, label %30, !dbg !1039

; <label>:30:                                     ; preds = %27
  call void %28(%struct._rio* nonnull %0, i8* %17, i64 %22) #9, !dbg !1040
  br label %31, !dbg !1040

; <label>:31:                                     ; preds = %30, %27
  %32 = getelementptr inbounds i8, i8* %17, i64 %22, !dbg !1041
  %33 = sub i64 %16, %22, !dbg !1042
  %34 = load i64, i64* %14, align 8, !dbg !1043, !tbaa !527
  %35 = add i64 %34, %22, !dbg !1043
  store i64 %35, i64* %14, align 8, !dbg !1043, !tbaa !527
  %36 = icmp eq i64 %33, 0, !dbg !1026
  br i1 %36, label %37, label %15, !dbg !1026

; <label>:37:                                     ; preds = %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1035
  %38 = load i8, i8* %7, align 1, !dbg !1044, !tbaa !540
  %39 = zext i8 %38 to i32, !dbg !1044
  %40 = lshr i32 %39, 6, !dbg !1045
  %41 = trunc i32 %40 to i2, !dbg !1047
  switch i2 %41, label %82 [
    i2 -1, label %42
    i2 0, label %47
    i2 1, label %50
  ], !dbg !1047

; <label>:42:                                     ; preds = %37
  br i1 %8, label %43, label %44, !dbg !1048

; <label>:43:                                     ; preds = %42
  store i32 1, i32* %1, align 4, !dbg !1050, !tbaa !191
  br label %44, !dbg !1052

; <label>:44:                                     ; preds = %43, %42
  %45 = and i8 %38, 63, !dbg !1053
  %46 = zext i8 %45 to i64, !dbg !1054
  store i64 %46, i64* %2, align 8, !dbg !1055, !tbaa !682
  br label %139, !dbg !1056

; <label>:47:                                     ; preds = %37
  %48 = and i32 %39, 63, !dbg !1057
  %49 = zext i32 %48 to i64, !dbg !1059
  store i64 %49, i64* %2, align 8, !dbg !1060, !tbaa !682
  br label %139, !dbg !1061

; <label>:50:                                     ; preds = %37
  %51 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1, !dbg !1062
  br label %52, !dbg !1069

; <label>:52:                                     ; preds = %68, %50
  %53 = phi i64 [ 1, %50 ], [ %70, %68 ]
  %54 = phi i8* [ %51, %50 ], [ %69, %68 ]
  %55 = load i64, i64* %11, align 8, !dbg !1070, !tbaa !506
  %56 = icmp ne i64 %55, 0, !dbg !1071
  %57 = icmp ult i64 %55, %53, !dbg !1072
  %58 = and i1 %56, %57, !dbg !1073
  %59 = select i1 %58, i64 %55, i64 %53, !dbg !1073
  %60 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !1075, !tbaa !514
  %61 = call i64 %60(%struct._rio* nonnull %0, i8* %54, i64 %59) #9, !dbg !1076
  %62 = icmp eq i64 %61, 0, !dbg !1077
  br i1 %62, label %63, label %64, !dbg !1078

; <label>:63:                                     ; preds = %52
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1079
  br label %139, !dbg !1080

; <label>:64:                                     ; preds = %52
  %65 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1081, !tbaa !520
  %66 = icmp eq void (%struct._rio*, i8*, i64)* %65, null, !dbg !1082
  br i1 %66, label %68, label %67, !dbg !1083

; <label>:67:                                     ; preds = %64
  call void %65(%struct._rio* nonnull %0, i8* %54, i64 %59) #9, !dbg !1084
  br label %68, !dbg !1084

; <label>:68:                                     ; preds = %67, %64
  %69 = getelementptr inbounds i8, i8* %54, i64 %59, !dbg !1085
  %70 = sub i64 %53, %59, !dbg !1086
  %71 = load i64, i64* %14, align 8, !dbg !1087, !tbaa !527
  %72 = add i64 %71, %59, !dbg !1087
  store i64 %72, i64* %14, align 8, !dbg !1087, !tbaa !527
  %73 = icmp eq i64 %70, 0, !dbg !1069
  br i1 %73, label %74, label %52, !dbg !1069

; <label>:74:                                     ; preds = %68
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1079
  %75 = load i8, i8* %7, align 1, !dbg !1088, !tbaa !540
  %76 = and i8 %75, 63, !dbg !1089
  %77 = zext i8 %76 to i64, !dbg !1089
  %78 = shl nuw nsw i64 %77, 8, !dbg !1090
  %79 = load i8, i8* %51, align 1, !dbg !1091, !tbaa !540
  %80 = zext i8 %79 to i64, !dbg !1091
  %81 = or i64 %78, %80, !dbg !1092
  store i64 %81, i64* %2, align 8, !dbg !1093, !tbaa !682
  br label %139, !dbg !1094

; <label>:82:                                     ; preds = %37
  switch i8 %38, label %138 [
    i8 -128, label %83
    i8 -127, label %111
  ], !dbg !1095

; <label>:83:                                     ; preds = %82
  %84 = bitcast i32* %5 to i8*, !dbg !1096
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #4, !dbg !1096
  br label %85, !dbg !1102

; <label>:85:                                     ; preds = %100, %83
  %86 = phi i64 [ 4, %83 ], [ %102, %100 ]
  %87 = phi i8* [ %84, %83 ], [ %101, %100 ]
  %88 = load i64, i64* %11, align 8, !dbg !1103, !tbaa !506
  %89 = icmp ne i64 %88, 0, !dbg !1104
  %90 = icmp ult i64 %88, %86, !dbg !1105
  %91 = and i1 %89, %90, !dbg !1106
  %92 = select i1 %91, i64 %88, i64 %86, !dbg !1106
  %93 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !1108, !tbaa !514
  %94 = call i64 %93(%struct._rio* nonnull %0, i8* %87, i64 %92) #9, !dbg !1109
  %95 = icmp eq i64 %94, 0, !dbg !1110
  br i1 %95, label %110, label %96, !dbg !1111

; <label>:96:                                     ; preds = %85
  %97 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1112, !tbaa !520
  %98 = icmp eq void (%struct._rio*, i8*, i64)* %97, null, !dbg !1113
  br i1 %98, label %100, label %99, !dbg !1114

; <label>:99:                                     ; preds = %96
  call void %97(%struct._rio* nonnull %0, i8* %87, i64 %92) #9, !dbg !1115
  br label %100, !dbg !1115

; <label>:100:                                    ; preds = %99, %96
  %101 = getelementptr inbounds i8, i8* %87, i64 %92, !dbg !1116
  %102 = sub i64 %86, %92, !dbg !1117
  %103 = load i64, i64* %14, align 8, !dbg !1118, !tbaa !527
  %104 = add i64 %103, %92, !dbg !1118
  store i64 %104, i64* %14, align 8, !dbg !1118, !tbaa !527
  %105 = icmp eq i64 %102, 0, !dbg !1102
  br i1 %105, label %106, label %85, !dbg !1102

; <label>:106:                                    ; preds = %100
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1119
  %107 = load i32, i32* %5, align 4, !dbg !1120, !tbaa !191
  %108 = call i32 @lwip_htonl(i32 %107) #9, !dbg !1120
  %109 = zext i32 %108 to i64, !dbg !1120
  store i64 %109, i64* %2, align 8, !dbg !1122, !tbaa !682
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #4, !dbg !1123
  br label %139

; <label>:110:                                    ; preds = %85
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #4, !dbg !1123
  br label %139

; <label>:111:                                    ; preds = %82
  %112 = bitcast i64* %6 to i8*, !dbg !1124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #4, !dbg !1124
  br label %113, !dbg !1130

; <label>:113:                                    ; preds = %128, %111
  %114 = phi i64 [ 8, %111 ], [ %130, %128 ]
  %115 = phi i8* [ %112, %111 ], [ %129, %128 ]
  %116 = load i64, i64* %11, align 8, !dbg !1131, !tbaa !506
  %117 = icmp ne i64 %116, 0, !dbg !1132
  %118 = icmp ult i64 %116, %114, !dbg !1133
  %119 = and i1 %117, %118, !dbg !1134
  %120 = select i1 %119, i64 %116, i64 %114, !dbg !1134
  %121 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !1136, !tbaa !514
  %122 = call i64 %121(%struct._rio* nonnull %0, i8* %115, i64 %120) #9, !dbg !1137
  %123 = icmp eq i64 %122, 0, !dbg !1138
  br i1 %123, label %137, label %124, !dbg !1139

; <label>:124:                                    ; preds = %113
  %125 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1140, !tbaa !520
  %126 = icmp eq void (%struct._rio*, i8*, i64)* %125, null, !dbg !1141
  br i1 %126, label %128, label %127, !dbg !1142

; <label>:127:                                    ; preds = %124
  call void %125(%struct._rio* nonnull %0, i8* %115, i64 %120) #9, !dbg !1143
  br label %128, !dbg !1143

; <label>:128:                                    ; preds = %127, %124
  %129 = getelementptr inbounds i8, i8* %115, i64 %120, !dbg !1144
  %130 = sub i64 %114, %120, !dbg !1145
  %131 = load i64, i64* %14, align 8, !dbg !1146, !tbaa !527
  %132 = add i64 %131, %120, !dbg !1146
  store i64 %132, i64* %14, align 8, !dbg !1146, !tbaa !527
  %133 = icmp eq i64 %130, 0, !dbg !1130
  br i1 %133, label %134, label %113, !dbg !1130

; <label>:134:                                    ; preds = %128
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1147
  %135 = load i64, i64* %6, align 8, !dbg !1148, !tbaa !682
  %136 = call i64 @intrev64(i64 %135) #9, !dbg !1148
  store i64 %136, i64* %2, align 8, !dbg !1150, !tbaa !682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #4, !dbg !1151
  br label %139

; <label>:137:                                    ; preds = %113
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #4, !dbg !1151
  br label %139

; <label>:138:                                    ; preds = %82
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 213, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i32 %40) #11, !dbg !1152
  unreachable

; <label>:139:                                    ; preds = %63, %26, %44, %74, %47, %106, %134, %137, %110
  %140 = phi i32 [ -1, %110 ], [ -1, %137 ], [ 0, %134 ], [ 0, %106 ], [ 0, %47 ], [ 0, %74 ], [ 0, %44 ], [ -1, %26 ], [ -1, %63 ], !dbg !1154
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #4, !dbg !1155
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1155
  ret i32 %140, !dbg !1155
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbLoadLen(%struct._rio*, i32*) local_unnamed_addr #6 !dbg !1156 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !1165
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4, !dbg !1165
  %5 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* %1, i64* nonnull %3) #11, !dbg !1167
  %6 = icmp eq i32 %5, -1, !dbg !1169
  %7 = load i64, i64* %3, align 8, !dbg !1170
  %8 = select i1 %6, i64 -1, i64 %7, !dbg !1171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4, !dbg !1172
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1172
  ret i64 %8, !dbg !1172
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbEncodeInteger(i64, i8* nocapture) local_unnamed_addr #6 !dbg !1173 {
  %3 = add i64 %0, 128, !dbg !1181
  %4 = icmp ult i64 %3, 256, !dbg !1181
  br i1 %4, label %5, label %6, !dbg !1181

; <label>:5:                                      ; preds = %2
  store i8 -64, i8* %1, align 1, !dbg !1183, !tbaa !540
  br label %26, !dbg !1185

; <label>:6:                                      ; preds = %2
  %7 = add i64 %0, 32768, !dbg !1186
  %8 = icmp ult i64 %7, 65536, !dbg !1186
  br i1 %8, label %9, label %13, !dbg !1186

; <label>:9:                                      ; preds = %6
  store i8 -63, i8* %1, align 1, !dbg !1188, !tbaa !540
  %10 = trunc i64 %0 to i8, !dbg !1190
  %11 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1191
  store i8 %10, i8* %11, align 1, !dbg !1192, !tbaa !540
  %12 = lshr i64 %0, 8, !dbg !1193
  br label %26, !dbg !1194

; <label>:13:                                     ; preds = %6
  %14 = add i64 %0, 2147483648, !dbg !1195
  %15 = icmp ult i64 %14, 4294967296, !dbg !1195
  br i1 %15, label %16, label %32, !dbg !1195

; <label>:16:                                     ; preds = %13
  store i8 -62, i8* %1, align 1, !dbg !1197, !tbaa !540
  %17 = trunc i64 %0 to i8, !dbg !1199
  %18 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1200
  store i8 %17, i8* %18, align 1, !dbg !1201, !tbaa !540
  %19 = lshr i64 %0, 8, !dbg !1202
  %20 = trunc i64 %19 to i8, !dbg !1203
  %21 = getelementptr inbounds i8, i8* %1, i64 2, !dbg !1204
  store i8 %20, i8* %21, align 1, !dbg !1205, !tbaa !540
  %22 = lshr i64 %0, 16, !dbg !1206
  %23 = trunc i64 %22 to i8, !dbg !1207
  %24 = getelementptr inbounds i8, i8* %1, i64 3, !dbg !1208
  store i8 %23, i8* %24, align 1, !dbg !1209, !tbaa !540
  %25 = lshr i64 %0, 24, !dbg !1210
  br label %26, !dbg !1211

; <label>:26:                                     ; preds = %5, %9, %16
  %27 = phi i64 [ %25, %16 ], [ %12, %9 ], [ %0, %5 ]
  %28 = phi i64 [ 4, %16 ], [ 2, %9 ], [ 1, %5 ]
  %29 = phi i32 [ 5, %16 ], [ 3, %9 ], [ 2, %5 ]
  %30 = trunc i64 %27 to i8, !dbg !1212
  %31 = getelementptr inbounds i8, i8* %1, i64 %28, !dbg !1212
  store i8 %30, i8* %31, align 1, !dbg !1212, !tbaa !540
  br label %32, !dbg !1213

; <label>:32:                                     ; preds = %26, %13
  %33 = phi i32 [ 0, %13 ], [ %29, %26 ], !dbg !1214
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1213
  ret i32 %33, !dbg !1213
}

; Function Attrs: noredzone nounwind
define dso_local i8* @rdbLoadIntegerObject(%struct._rio*, i32, i32, i64*) local_unnamed_addr #6 !dbg !1216 {
  %5 = alloca [4 x i8], align 1
  %6 = alloca [21 x i8], align 16
  %7 = and i32 %2, 2, !dbg !1249
  %8 = and i32 %2, 1, !dbg !1252
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 0, !dbg !1254
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #4, !dbg !1254
  switch i32 %1, label %122 [
    i32 0, label %10
    i32 1, label %40
    i32 2, label %76
  ], !dbg !1256

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !1263
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %13 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %14 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %15, !dbg !1264

; <label>:15:                                     ; preds = %31, %10
  %16 = phi i64 [ 1, %10 ], [ %33, %31 ]
  %17 = phi i8* [ %9, %10 ], [ %32, %31 ]
  %18 = load i64, i64* %11, align 8, !dbg !1263, !tbaa !506
  %19 = icmp ne i64 %18, 0, !dbg !1265
  %20 = icmp ult i64 %18, %16, !dbg !1266
  %21 = and i1 %19, %20, !dbg !1267
  %22 = select i1 %21, i64 %18, i64 %16, !dbg !1267
  %23 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !1269, !tbaa !514
  %24 = call i64 %23(%struct._rio* %0, i8* %17, i64 %22) #9, !dbg !1270
  %25 = icmp eq i64 %24, 0, !dbg !1271
  br i1 %25, label %26, label %27, !dbg !1272

; <label>:26:                                     ; preds = %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1273
  br label %155, !dbg !1274

; <label>:27:                                     ; preds = %15
  %28 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1275, !tbaa !520
  %29 = icmp eq void (%struct._rio*, i8*, i64)* %28, null, !dbg !1276
  br i1 %29, label %31, label %30, !dbg !1277

; <label>:30:                                     ; preds = %27
  call void %28(%struct._rio* nonnull %0, i8* %17, i64 %22) #9, !dbg !1278
  br label %31, !dbg !1278

; <label>:31:                                     ; preds = %30, %27
  %32 = getelementptr inbounds i8, i8* %17, i64 %22, !dbg !1279
  %33 = sub i64 %16, %22, !dbg !1280
  %34 = load i64, i64* %14, align 8, !dbg !1281, !tbaa !527
  %35 = add i64 %34, %22, !dbg !1281
  store i64 %35, i64* %14, align 8, !dbg !1281, !tbaa !527
  %36 = icmp eq i64 %33, 0, !dbg !1264
  br i1 %36, label %37, label %15, !dbg !1264

; <label>:37:                                     ; preds = %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1273
  %38 = load i8, i8* %9, align 1, !dbg !1282, !tbaa !540
  %39 = sext i8 %38 to i64, !dbg !1283
  br label %123, !dbg !1285

; <label>:40:                                     ; preds = %4
  %41 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !1291
  %42 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %43 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %44 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %45, !dbg !1292

; <label>:45:                                     ; preds = %60, %40
  %46 = phi i64 [ 2, %40 ], [ %62, %60 ]
  %47 = phi i8* [ %9, %40 ], [ %61, %60 ]
  %48 = load i64, i64* %41, align 8, !dbg !1291, !tbaa !506
  %49 = icmp ne i64 %48, 0, !dbg !1293
  %50 = icmp ult i64 %48, %46, !dbg !1294
  %51 = and i1 %49, %50, !dbg !1295
  %52 = select i1 %51, i64 %48, i64 %46, !dbg !1295
  %53 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %42, align 8, !dbg !1297, !tbaa !514
  %54 = call i64 %53(%struct._rio* %0, i8* %47, i64 %52) #9, !dbg !1298
  %55 = icmp eq i64 %54, 0, !dbg !1299
  br i1 %55, label %75, label %56, !dbg !1300

; <label>:56:                                     ; preds = %45
  %57 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %43, align 8, !dbg !1301, !tbaa !520
  %58 = icmp eq void (%struct._rio*, i8*, i64)* %57, null, !dbg !1302
  br i1 %58, label %60, label %59, !dbg !1303

; <label>:59:                                     ; preds = %56
  call void %57(%struct._rio* nonnull %0, i8* %47, i64 %52) #9, !dbg !1304
  br label %60, !dbg !1304

; <label>:60:                                     ; preds = %59, %56
  %61 = getelementptr inbounds i8, i8* %47, i64 %52, !dbg !1305
  %62 = sub i64 %46, %52, !dbg !1306
  %63 = load i64, i64* %44, align 8, !dbg !1307, !tbaa !527
  %64 = add i64 %63, %52, !dbg !1307
  store i64 %64, i64* %44, align 8, !dbg !1307, !tbaa !527
  %65 = icmp eq i64 %62, 0, !dbg !1292
  br i1 %65, label %66, label %45, !dbg !1292

; <label>:66:                                     ; preds = %60
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1308
  %67 = load i8, i8* %9, align 1, !dbg !1309, !tbaa !540
  %68 = zext i8 %67 to i16, !dbg !1309
  %69 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 1, !dbg !1310
  %70 = load i8, i8* %69, align 1, !dbg !1310, !tbaa !540
  %71 = zext i8 %70 to i16, !dbg !1310
  %72 = shl nuw i16 %71, 8, !dbg !1311
  %73 = or i16 %72, %68, !dbg !1312
  %74 = sext i16 %73 to i64, !dbg !1314
  br label %123

; <label>:75:                                     ; preds = %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1308
  br label %155

; <label>:76:                                     ; preds = %4
  %77 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !1320
  %78 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %79 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %80 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %81, !dbg !1321

; <label>:81:                                     ; preds = %96, %76
  %82 = phi i64 [ 4, %76 ], [ %98, %96 ]
  %83 = phi i8* [ %9, %76 ], [ %97, %96 ]
  %84 = load i64, i64* %77, align 8, !dbg !1320, !tbaa !506
  %85 = icmp ne i64 %84, 0, !dbg !1322
  %86 = icmp ult i64 %84, %82, !dbg !1323
  %87 = and i1 %85, %86, !dbg !1324
  %88 = select i1 %87, i64 %84, i64 %82, !dbg !1324
  %89 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %78, align 8, !dbg !1326, !tbaa !514
  %90 = call i64 %89(%struct._rio* %0, i8* %83, i64 %88) #9, !dbg !1327
  %91 = icmp eq i64 %90, 0, !dbg !1328
  br i1 %91, label %121, label %92, !dbg !1329

; <label>:92:                                     ; preds = %81
  %93 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %79, align 8, !dbg !1330, !tbaa !520
  %94 = icmp eq void (%struct._rio*, i8*, i64)* %93, null, !dbg !1331
  br i1 %94, label %96, label %95, !dbg !1332

; <label>:95:                                     ; preds = %92
  call void %93(%struct._rio* nonnull %0, i8* %83, i64 %88) #9, !dbg !1333
  br label %96, !dbg !1333

; <label>:96:                                     ; preds = %95, %92
  %97 = getelementptr inbounds i8, i8* %83, i64 %88, !dbg !1334
  %98 = sub i64 %82, %88, !dbg !1335
  %99 = load i64, i64* %80, align 8, !dbg !1336, !tbaa !527
  %100 = add i64 %99, %88, !dbg !1336
  store i64 %100, i64* %80, align 8, !dbg !1336, !tbaa !527
  %101 = icmp eq i64 %98, 0, !dbg !1321
  br i1 %101, label %102, label %81, !dbg !1321

; <label>:102:                                    ; preds = %96
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1337
  %103 = load i8, i8* %9, align 1, !dbg !1338, !tbaa !540
  %104 = zext i8 %103 to i32, !dbg !1338
  %105 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 1, !dbg !1339
  %106 = load i8, i8* %105, align 1, !dbg !1339, !tbaa !540
  %107 = zext i8 %106 to i32, !dbg !1339
  %108 = shl nuw nsw i32 %107, 8, !dbg !1340
  %109 = or i32 %108, %104, !dbg !1341
  %110 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 2, !dbg !1342
  %111 = load i8, i8* %110, align 1, !dbg !1342, !tbaa !540
  %112 = zext i8 %111 to i32, !dbg !1342
  %113 = shl nuw nsw i32 %112, 16, !dbg !1343
  %114 = or i32 %109, %113, !dbg !1344
  %115 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 3, !dbg !1345
  %116 = load i8, i8* %115, align 1, !dbg !1345, !tbaa !540
  %117 = zext i8 %116 to i32, !dbg !1345
  %118 = shl nuw i32 %117, 24, !dbg !1346
  %119 = or i32 %114, %118, !dbg !1347
  %120 = sext i32 %119 to i64, !dbg !1349
  br label %123

; <label>:121:                                    ; preds = %81
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1337
  br label %155

; <label>:122:                                    ; preds = %4
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 281, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0), i32 %1) #11, !dbg !1350
  unreachable

; <label>:123:                                    ; preds = %102, %66, %37
  %124 = phi i64 [ %39, %37 ], [ %74, %66 ], [ %120, %102 ]
  %125 = icmp eq i32 %7, 0, !dbg !1352
  %126 = and i32 %2, 6, !dbg !1353
  %127 = icmp eq i32 %126, 0, !dbg !1353
  br i1 %127, label %146, label %128, !dbg !1353

; <label>:128:                                    ; preds = %123
  %129 = getelementptr inbounds [21 x i8], [21 x i8]* %6, i64 0, i64 0, !dbg !1354
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %129) #4, !dbg !1354
  %130 = call i32 @ll2string(i8* nonnull %129, i64 21, i64 %124) #9, !dbg !1356
  %131 = icmp eq i64* %3, null, !dbg !1358
  br i1 %131, label %134, label %132, !dbg !1360

; <label>:132:                                    ; preds = %128
  %133 = sext i32 %130 to i64, !dbg !1361
  store i64 %133, i64* %3, align 8, !dbg !1362, !tbaa !682
  br label %134, !dbg !1363

; <label>:134:                                    ; preds = %128, %132
  br i1 %125, label %138, label %135, !dbg !1364

; <label>:135:                                    ; preds = %134
  %136 = sext i32 %130 to i64, !dbg !1365
  %137 = call i8* @zmalloc(i64 %136) #9, !dbg !1366
  br label %142, !dbg !1364

; <label>:138:                                    ; preds = %134
  %139 = load i8*, i8** @SDS_NOINIT, align 8, !dbg !1367, !tbaa !200
  %140 = sext i32 %130 to i64, !dbg !1368
  %141 = call i8* @sdsnewlen(i8* %139, i64 %140) #9, !dbg !1369
  br label %142, !dbg !1364

; <label>:142:                                    ; preds = %138, %135
  %143 = phi i64 [ %140, %138 ], [ %136, %135 ], !dbg !1370
  %144 = phi i8* [ %141, %138 ], [ %137, %135 ], !dbg !1364
  %145 = call i8* @memcpy(i8* %144, i8* nonnull %129, i64 %143) #9, !dbg !1372
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %129) #4, !dbg !1373
  br label %155

; <label>:146:                                    ; preds = %123
  %147 = icmp eq i32 %8, 0, !dbg !1374
  br i1 %147, label %151, label %148, !dbg !1376

; <label>:148:                                    ; preds = %146
  %149 = call %struct.redisObject* @createStringObjectFromLongLongForValue(i64 %124) #9, !dbg !1377
  %150 = bitcast %struct.redisObject* %149 to i8*, !dbg !1377
  br label %155, !dbg !1379

; <label>:151:                                    ; preds = %146
  %152 = call i8* @sdsfromlonglong(i64 %124) #9, !dbg !1380
  %153 = call %struct.redisObject* @createObject(i32 0, i8* %152) #9, !dbg !1382
  %154 = bitcast %struct.redisObject* %153 to i8*, !dbg !1382
  br label %155, !dbg !1383

; <label>:155:                                    ; preds = %121, %75, %26, %151, %148, %142
  %156 = phi i8* [ %144, %142 ], [ %150, %148 ], [ %154, %151 ], [ null, %75 ], [ null, %121 ], [ null, %26 ], !dbg !1384
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #4, !dbg !1385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1385
  ret i8* %156, !dbg !1385
}

; Function Attrs: noredzone
declare dso_local i32 @ll2string(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zmalloc(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsnewlen(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStringObjectFromLongLongForValue(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createObject(i32, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsfromlonglong(i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbTryIntegerEncoding(i8*, i64, i8* nocapture) local_unnamed_addr #6 !dbg !1386 {
  %4 = alloca i8*, align 8
  %5 = alloca [32 x i8], align 16
  %6 = bitcast i8** %4 to i8*, !dbg !1400
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4, !dbg !1400
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0, !dbg !1400
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4, !dbg !1400
  %8 = call i64 @strtoll(i8* %0, i8** nonnull %4, i32 10) #9, !dbg !1403
  %9 = load i8*, i8** %4, align 8, !dbg !1405, !tbaa !200
  %10 = load i8, i8* %9, align 1, !dbg !1405, !tbaa !540
  %11 = icmp eq i8 %10, 0, !dbg !1407
  br i1 %11, label %12, label %51, !dbg !1408

; <label>:12:                                     ; preds = %3
  %13 = call i32 @ll2string(i8* nonnull %7, i64 32, i64 %8) #9, !dbg !1409
  %14 = call i64 @strlen(i8* nonnull %7) #9, !dbg !1410
  %15 = icmp eq i64 %14, %1, !dbg !1412
  br i1 %15, label %16, label %51, !dbg !1413

; <label>:16:                                     ; preds = %12
  %17 = call i32 @memcmp(i8* nonnull %7, i8* %0, i64 %1) #9, !dbg !1414
  %18 = icmp eq i32 %17, 0, !dbg !1414
  br i1 %18, label %19, label %51, !dbg !1415

; <label>:19:                                     ; preds = %16
  %20 = add i64 %8, 128, !dbg !1419
  %21 = icmp ult i64 %20, 256, !dbg !1419
  br i1 %21, label %22, label %23, !dbg !1419

; <label>:22:                                     ; preds = %19
  store i8 -64, i8* %2, align 1, !dbg !1420, !tbaa !540
  br label %43, !dbg !1421

; <label>:23:                                     ; preds = %19
  %24 = add i64 %8, 32768, !dbg !1422
  %25 = icmp ult i64 %24, 65536, !dbg !1422
  br i1 %25, label %26, label %30, !dbg !1422

; <label>:26:                                     ; preds = %23
  store i8 -63, i8* %2, align 1, !dbg !1423, !tbaa !540
  %27 = trunc i64 %8 to i8, !dbg !1424
  %28 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !1425
  store i8 %27, i8* %28, align 1, !dbg !1426, !tbaa !540
  %29 = lshr i64 %8, 8, !dbg !1427
  br label %43, !dbg !1428

; <label>:30:                                     ; preds = %23
  %31 = add i64 %8, 2147483648, !dbg !1429
  %32 = icmp ult i64 %31, 4294967296, !dbg !1429
  br i1 %32, label %33, label %49, !dbg !1429

; <label>:33:                                     ; preds = %30
  store i8 -62, i8* %2, align 1, !dbg !1430, !tbaa !540
  %34 = trunc i64 %8 to i8, !dbg !1431
  %35 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !1432
  store i8 %34, i8* %35, align 1, !dbg !1433, !tbaa !540
  %36 = lshr i64 %8, 8, !dbg !1434
  %37 = trunc i64 %36 to i8, !dbg !1435
  %38 = getelementptr inbounds i8, i8* %2, i64 2, !dbg !1436
  store i8 %37, i8* %38, align 1, !dbg !1437, !tbaa !540
  %39 = lshr i64 %8, 16, !dbg !1438
  %40 = trunc i64 %39 to i8, !dbg !1439
  %41 = getelementptr inbounds i8, i8* %2, i64 3, !dbg !1440
  store i8 %40, i8* %41, align 1, !dbg !1441, !tbaa !540
  %42 = lshr i64 %8, 24, !dbg !1442
  br label %43, !dbg !1443

; <label>:43:                                     ; preds = %33, %26, %22
  %44 = phi i64 [ %8, %22 ], [ %29, %26 ], [ %42, %33 ]
  %45 = phi i64 [ 1, %22 ], [ 2, %26 ], [ 4, %33 ]
  %46 = phi i32 [ 2, %22 ], [ 3, %26 ], [ 5, %33 ]
  %47 = trunc i64 %44 to i8, !dbg !1444
  %48 = getelementptr inbounds i8, i8* %2, i64 %45, !dbg !1444
  store i8 %47, i8* %48, align 1, !dbg !1444, !tbaa !540
  br label %49, !dbg !1445

; <label>:49:                                     ; preds = %43, %30
  %50 = phi i32 [ 0, %30 ], [ %46, %43 ], !dbg !1446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1445
  br label %51, !dbg !1447

; <label>:51:                                     ; preds = %12, %16, %3, %49
  %52 = phi i32 [ %50, %49 ], [ 0, %3 ], [ 0, %16 ], [ 0, %12 ], !dbg !1444
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4, !dbg !1448
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4, !dbg !1448
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1448
  ret i32 %52, !dbg !1448
}

; Function Attrs: noredzone
declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveLzfBlob(%struct._rio*, i8*, i64, i64) local_unnamed_addr #6 !dbg !1449 {
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #4, !dbg !1465
  store i8 -61, i8* %5, align 1, !dbg !1467, !tbaa !540
  %6 = icmp eq %struct._rio* %0, null, !dbg !1473
  br i1 %6, label %35, label %7, !dbg !1474

; <label>:7:                                      ; preds = %4
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %12, !dbg !1479

; <label>:12:                                     ; preds = %27, %7
  %13 = phi i64 [ 1, %7 ], [ %29, %27 ]
  %14 = phi i8* [ %5, %7 ], [ %28, %27 ]
  %15 = load i64, i64* %8, align 8, !dbg !1480, !tbaa !506
  %16 = icmp ne i64 %15, 0, !dbg !1481
  %17 = icmp ult i64 %15, %13, !dbg !1482
  %18 = and i1 %16, %17, !dbg !1483
  %19 = select i1 %18, i64 %15, i64 %13, !dbg !1483
  %20 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %9, align 8, !dbg !1485, !tbaa !520
  %21 = icmp eq void (%struct._rio*, i8*, i64)* %20, null, !dbg !1486
  br i1 %21, label %23, label %22, !dbg !1487

; <label>:22:                                     ; preds = %12
  call void %20(%struct._rio* nonnull %0, i8* %14, i64 %19) #9, !dbg !1488
  br label %23, !dbg !1488

; <label>:23:                                     ; preds = %22, %12
  %24 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %10, align 8, !dbg !1489, !tbaa !584
  %25 = call i64 %24(%struct._rio* nonnull %0, i8* %14, i64 %19) #9, !dbg !1490
  %26 = icmp eq i64 %25, 0, !dbg !1491
  br i1 %26, label %34, label %27, !dbg !1492

; <label>:27:                                     ; preds = %23
  %28 = getelementptr inbounds i8, i8* %14, i64 %19, !dbg !1493
  %29 = sub i64 %13, %19, !dbg !1494
  %30 = load i64, i64* %11, align 8, !dbg !1495, !tbaa !527
  %31 = add i64 %30, %19, !dbg !1495
  store i64 %31, i64* %11, align 8, !dbg !1495, !tbaa !527
  %32 = icmp eq i64 %29, 0, !dbg !1479
  br i1 %32, label %33, label %12, !dbg !1479

; <label>:33:                                     ; preds = %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1496
  br label %35, !dbg !1497

; <label>:34:                                     ; preds = %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1496
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1498
  br label %83, !dbg !1499

; <label>:35:                                     ; preds = %33, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1498
  %36 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %2) #11, !dbg !1500
  %37 = icmp eq i32 %36, -1, !dbg !1502
  br i1 %37, label %83, label %38, !dbg !1503

; <label>:38:                                     ; preds = %35
  %39 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %3) #11, !dbg !1504
  %40 = icmp eq i32 %39, -1, !dbg !1506
  br i1 %40, label %83, label %41, !dbg !1507

; <label>:41:                                     ; preds = %38
  br i1 %6, label %72, label %42, !dbg !1513

; <label>:42:                                     ; preds = %41
  %43 = icmp eq i64 %2, 0, !dbg !1518
  br i1 %43, label %70, label %44, !dbg !1518

; <label>:44:                                     ; preds = %42
  %45 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %46 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %47 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %48 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %49, !dbg !1518

; <label>:49:                                     ; preds = %64, %44
  %50 = phi i64 [ %2, %44 ], [ %66, %64 ]
  %51 = phi i8* [ %1, %44 ], [ %65, %64 ]
  %52 = load i64, i64* %45, align 8, !dbg !1519, !tbaa !506
  %53 = icmp ne i64 %52, 0, !dbg !1520
  %54 = icmp ult i64 %52, %50, !dbg !1521
  %55 = and i1 %53, %54, !dbg !1522
  %56 = select i1 %55, i64 %52, i64 %50, !dbg !1522
  %57 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %46, align 8, !dbg !1524, !tbaa !520
  %58 = icmp eq void (%struct._rio*, i8*, i64)* %57, null, !dbg !1525
  br i1 %58, label %60, label %59, !dbg !1526

; <label>:59:                                     ; preds = %49
  call void %57(%struct._rio* nonnull %0, i8* %51, i64 %56) #9, !dbg !1527
  br label %60, !dbg !1527

; <label>:60:                                     ; preds = %59, %49
  %61 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %47, align 8, !dbg !1528, !tbaa !584
  %62 = call i64 %61(%struct._rio* nonnull %0, i8* %51, i64 %56) #9, !dbg !1529
  %63 = icmp eq i64 %62, 0, !dbg !1530
  br i1 %63, label %71, label %64, !dbg !1531

; <label>:64:                                     ; preds = %60
  %65 = getelementptr inbounds i8, i8* %51, i64 %56, !dbg !1532
  %66 = sub i64 %50, %56, !dbg !1533
  %67 = load i64, i64* %48, align 8, !dbg !1534, !tbaa !527
  %68 = add i64 %67, %56, !dbg !1534
  store i64 %68, i64* %48, align 8, !dbg !1534, !tbaa !527
  %69 = icmp eq i64 %66, 0, !dbg !1518
  br i1 %69, label %70, label %49, !dbg !1518

; <label>:70:                                     ; preds = %64, %42
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1535
  br label %72, !dbg !1536

; <label>:71:                                     ; preds = %60
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1537
  br label %83, !dbg !1538

; <label>:72:                                     ; preds = %41, %70
  %73 = trunc i64 %2 to i32, !dbg !1539
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1537
  %74 = icmp eq i32 %73, -1, !dbg !1540
  br i1 %74, label %83, label %75, !dbg !1538

; <label>:75:                                     ; preds = %72
  %76 = shl i64 %2, 32, !dbg !1541
  %77 = ashr exact i64 %76, 32, !dbg !1541
  %78 = sext i32 %36 to i64, !dbg !1500
  %79 = sext i32 %39 to i64, !dbg !1504
  %80 = add nsw i64 %77, 1, !dbg !1543
  %81 = add nsw i64 %80, %78, !dbg !1544
  %82 = add nsw i64 %81, %79, !dbg !1545
  br label %83, !dbg !1546

; <label>:83:                                     ; preds = %71, %34, %35, %38, %72, %75
  %84 = phi i64 [ %82, %75 ], [ -1, %72 ], [ -1, %38 ], [ -1, %35 ], [ -1, %34 ], [ -1, %71 ], !dbg !1547
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #4, !dbg !1548
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1548
  ret i64 %84, !dbg !1548
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveLzfStringObject(%struct._rio*, i8*, i64) local_unnamed_addr #6 !dbg !1549 {
  %4 = icmp ult i64 %2, 5, !dbg !1563
  br i1 %4, label %18, label %5, !dbg !1565

; <label>:5:                                      ; preds = %3
  %6 = add i64 %2, -3, !dbg !1567
  %7 = tail call i8* @zmalloc(i64 %6) #9, !dbg !1569
  %8 = icmp eq i8* %7, null, !dbg !1571
  br i1 %8, label %18, label %9, !dbg !1572

; <label>:9:                                      ; preds = %5
  %10 = trunc i64 %2 to i32, !dbg !1573
  %11 = add i32 %10, -4, !dbg !1574
  %12 = tail call i32 @lzf_compress(i8* %1, i32 %10, i8* nonnull %7, i32 %11) #9, !dbg !1575
  %13 = icmp eq i32 %12, 0, !dbg !1576
  br i1 %13, label %14, label %15, !dbg !1578

; <label>:14:                                     ; preds = %9
  tail call void @zfree(i8* nonnull %7) #9, !dbg !1579
  br label %18, !dbg !1581

; <label>:15:                                     ; preds = %9
  %16 = zext i32 %12 to i64, !dbg !1575
  %17 = tail call i64 @rdbSaveLzfBlob(%struct._rio* %0, i8* nonnull %7, i64 %16, i64 %2) #11, !dbg !1583
  tail call void @zfree(i8* nonnull %7) #9, !dbg !1585
  br label %18

; <label>:18:                                     ; preds = %5, %3, %15, %14
  %19 = phi i64 [ 0, %14 ], [ %17, %15 ], [ 0, %3 ], [ 0, %5 ], !dbg !1586
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1587
  ret i64 %19, !dbg !1587
}

; Function Attrs: noredzone
declare dso_local i32 @lzf_compress(i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @zfree(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i8* @rdbLoadLzfStringObject(%struct._rio*, i32, i64*) local_unnamed_addr #6 !dbg !1588 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = and i32 %1, 2, !dbg !1604
  %7 = bitcast i64* %5 to i8*, !dbg !1613
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4, !dbg !1613
  %8 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* null, i64* nonnull %5) #9, !dbg !1615
  %9 = icmp eq i32 %8, -1, !dbg !1616
  %10 = load i64, i64* %5, align 8, !dbg !1617
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4, !dbg !1618
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1618
  %11 = icmp eq i64 %10, -1, !dbg !1619
  %12 = or i1 %9, %11, !dbg !1619
  br i1 %12, label %83, label %13, !dbg !1620

; <label>:13:                                     ; preds = %3
  %14 = bitcast i64* %4 to i8*, !dbg !1625
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #4, !dbg !1625
  %15 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* null, i64* nonnull %4) #9, !dbg !1627
  %16 = icmp eq i32 %15, -1, !dbg !1628
  %17 = load i64, i64* %4, align 8, !dbg !1629
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4, !dbg !1630
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1630
  %18 = icmp eq i64 %17, -1, !dbg !1631
  %19 = or i1 %16, %18, !dbg !1631
  br i1 %19, label %83, label %20, !dbg !1632

; <label>:20:                                     ; preds = %13
  %21 = tail call i8* @zmalloc(i64 %10) #9, !dbg !1633
  %22 = icmp eq i8* %21, null, !dbg !1635
  br i1 %22, label %78, label %23, !dbg !1636

; <label>:23:                                     ; preds = %20
  %24 = icmp eq i32 %6, 0, !dbg !1637
  br i1 %24, label %27, label %25, !dbg !1639

; <label>:25:                                     ; preds = %23
  %26 = tail call i8* @zmalloc(i64 %17) #9, !dbg !1640
  br label %30, !dbg !1642

; <label>:27:                                     ; preds = %23
  %28 = load i8*, i8** @SDS_NOINIT, align 8, !dbg !1643, !tbaa !200
  %29 = tail call i8* @sdsnewlen(i8* %28, i64 %17) #9, !dbg !1645
  br label %30

; <label>:30:                                     ; preds = %27, %25
  %31 = phi i8* [ %26, %25 ], [ %29, %27 ], !dbg !1646
  %32 = icmp eq i64* %2, null, !dbg !1647
  br i1 %32, label %34, label %33, !dbg !1649

; <label>:33:                                     ; preds = %30
  store i64 %17, i64* %2, align 8, !dbg !1650, !tbaa !682
  br label %34, !dbg !1651

; <label>:34:                                     ; preds = %30, %33
  %35 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !1656
  %36 = icmp eq i64 %10, 0, !dbg !1657
  br i1 %36, label %63, label %37, !dbg !1657

; <label>:37:                                     ; preds = %34
  %38 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %39 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %40 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %41, !dbg !1657

; <label>:41:                                     ; preds = %56, %37
  %42 = phi i64 [ %10, %37 ], [ %58, %56 ]
  %43 = phi i8* [ %21, %37 ], [ %57, %56 ]
  %44 = load i64, i64* %35, align 8, !dbg !1656, !tbaa !506
  %45 = icmp ne i64 %44, 0, !dbg !1659
  %46 = icmp ult i64 %44, %42, !dbg !1660
  %47 = and i1 %45, %46, !dbg !1661
  %48 = select i1 %47, i64 %44, i64 %42, !dbg !1661
  %49 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %38, align 8, !dbg !1663, !tbaa !514
  %50 = tail call i64 %49(%struct._rio* %0, i8* %43, i64 %48) #9, !dbg !1664
  %51 = icmp eq i64 %50, 0, !dbg !1665
  br i1 %51, label %62, label %52, !dbg !1666

; <label>:52:                                     ; preds = %41
  %53 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %39, align 8, !dbg !1667, !tbaa !520
  %54 = icmp eq void (%struct._rio*, i8*, i64)* %53, null, !dbg !1668
  br i1 %54, label %56, label %55, !dbg !1669

; <label>:55:                                     ; preds = %52
  tail call void %53(%struct._rio* nonnull %0, i8* %43, i64 %48) #9, !dbg !1670
  br label %56, !dbg !1670

; <label>:56:                                     ; preds = %55, %52
  %57 = getelementptr inbounds i8, i8* %43, i64 %48, !dbg !1671
  %58 = sub i64 %42, %48, !dbg !1672
  %59 = load i64, i64* %40, align 8, !dbg !1673, !tbaa !527
  %60 = add i64 %59, %48, !dbg !1673
  store i64 %60, i64* %40, align 8, !dbg !1673, !tbaa !527
  %61 = icmp eq i64 %58, 0, !dbg !1657
  br i1 %61, label %63, label %41, !dbg !1657

; <label>:62:                                     ; preds = %41
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1674
  br label %78

; <label>:63:                                     ; preds = %56, %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1674
  %64 = trunc i64 %10 to i32, !dbg !1675
  %65 = trunc i64 %17 to i32, !dbg !1677
  %66 = tail call i32 @lzf_decompress(i8* nonnull %21, i32 %64, i8* %31, i32 %65) #9, !dbg !1678
  %67 = icmp eq i32 %66, 0, !dbg !1679
  br i1 %67, label %68, label %72, !dbg !1680

; <label>:68:                                     ; preds = %63
  %69 = load i32, i32* @rdbCheckMode, align 4, !dbg !1681, !tbaa !191
  %70 = icmp eq i32 %69, 0, !dbg !1681
  br i1 %70, label %78, label %71, !dbg !1684

; <label>:71:                                     ; preds = %68
  tail call void (i8*, ...) @rdbCheckSetError(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !1685
  br label %78, !dbg !1685

; <label>:72:                                     ; preds = %63
  tail call void @zfree(i8* nonnull %21) #9, !dbg !1686
  %73 = and i32 %1, 6, !dbg !1687
  %74 = icmp eq i32 %73, 0, !dbg !1687
  br i1 %74, label %75, label %83, !dbg !1687

; <label>:75:                                     ; preds = %72
  %76 = tail call %struct.redisObject* @createObject(i32 0, i8* %31) #9, !dbg !1689
  %77 = bitcast %struct.redisObject* %76 to i8*, !dbg !1689
  br label %83, !dbg !1691

; <label>:78:                                     ; preds = %62, %68, %71, %20
  %79 = phi i8* [ null, %20 ], [ %31, %62 ], [ %31, %71 ], [ %31, %68 ], !dbg !1692
  tail call void @zfree(i8* %21) #9, !dbg !1693
  %80 = icmp eq i32 %6, 0, !dbg !1694
  br i1 %80, label %82, label %81, !dbg !1696

; <label>:81:                                     ; preds = %78
  tail call void @zfree(i8* %79) #9, !dbg !1697
  br label %83, !dbg !1697

; <label>:82:                                     ; preds = %78
  tail call void @sdsfree(i8* %79) #9, !dbg !1698
  br label %83

; <label>:83:                                     ; preds = %81, %82, %72, %13, %3, %75
  %84 = phi i8* [ %77, %75 ], [ null, %3 ], [ null, %13 ], [ %31, %72 ], [ null, %82 ], [ null, %81 ], !dbg !1699
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1700
  ret i8* %84, !dbg !1700
}

; Function Attrs: noredzone
declare dso_local i32 @lzf_decompress(i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rdbCheckSetError(i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sdsfree(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveRawString(%struct._rio*, i8*, i64) local_unnamed_addr #6 !dbg !1701 {
  %4 = alloca [5 x i8], align 1
  %5 = icmp ult i64 %2, 12, !dbg !1719
  br i1 %5, label %6, label %47, !dbg !1720

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 0, !dbg !1721
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %7) #4, !dbg !1721
  %8 = call i32 @rdbTryIntegerEncoding(i8* %1, i64 %2, i8* nonnull %7) #11, !dbg !1723
  %9 = icmp sgt i32 %8, 0, !dbg !1726
  br i1 %9, label %10, label %46, !dbg !1727

; <label>:10:                                     ; preds = %6
  %11 = sext i32 %8 to i64, !dbg !1728
  %12 = icmp eq %struct._rio* %0, null, !dbg !1735
  br i1 %12, label %13, label %14, !dbg !1736

; <label>:13:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1737
  br label %44, !dbg !1738

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %16 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %17 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %18 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %19, !dbg !1743

; <label>:19:                                     ; preds = %34, %14
  %20 = phi i64 [ %11, %14 ], [ %36, %34 ]
  %21 = phi i8* [ %7, %14 ], [ %35, %34 ]
  %22 = load i64, i64* %15, align 8, !dbg !1744, !tbaa !506
  %23 = icmp ne i64 %22, 0, !dbg !1745
  %24 = icmp ult i64 %22, %20, !dbg !1746
  %25 = and i1 %23, %24, !dbg !1747
  %26 = select i1 %25, i64 %22, i64 %20, !dbg !1747
  %27 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %16, align 8, !dbg !1749, !tbaa !520
  %28 = icmp eq void (%struct._rio*, i8*, i64)* %27, null, !dbg !1750
  br i1 %28, label %30, label %29, !dbg !1751

; <label>:29:                                     ; preds = %19
  call void %27(%struct._rio* nonnull %0, i8* %21, i64 %26) #9, !dbg !1752
  br label %30, !dbg !1752

; <label>:30:                                     ; preds = %29, %19
  %31 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %17, align 8, !dbg !1753, !tbaa !584
  %32 = call i64 %31(%struct._rio* nonnull %0, i8* %21, i64 %26) #9, !dbg !1754
  %33 = icmp eq i64 %32, 0, !dbg !1755
  br i1 %33, label %40, label %34, !dbg !1756

; <label>:34:                                     ; preds = %30
  %35 = getelementptr inbounds i8, i8* %21, i64 %26, !dbg !1757
  %36 = sub i64 %20, %26, !dbg !1758
  %37 = load i64, i64* %18, align 8, !dbg !1759, !tbaa !527
  %38 = add i64 %37, %26, !dbg !1759
  store i64 %38, i64* %18, align 8, !dbg !1759, !tbaa !527
  %39 = icmp eq i64 %36, 0, !dbg !1743
  br i1 %39, label %41, label %19, !dbg !1743

; <label>:40:                                     ; preds = %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1737
  br label %43, !dbg !1738

; <label>:41:                                     ; preds = %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1737
  %42 = icmp eq i32 %8, -1, !dbg !1761
  br i1 %42, label %43, label %44, !dbg !1738

; <label>:43:                                     ; preds = %40, %41
  br label %44, !dbg !1738

; <label>:44:                                     ; preds = %13, %41, %43
  %45 = phi i64 [ %11, %13 ], [ %11, %41 ], [ -1, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %7) #4, !dbg !1762
  br label %110

; <label>:46:                                     ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %7) #4, !dbg !1762
  br label %69, !dbg !1763

; <label>:47:                                     ; preds = %3
  %48 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 158), align 8, !dbg !1765, !tbaa !1766
  %49 = icmp ne i32 %48, 0, !dbg !1767
  %50 = icmp ugt i64 %2, 20, !dbg !1768
  %51 = and i1 %50, %49, !dbg !1763
  br i1 %51, label %52, label %69, !dbg !1763

; <label>:52:                                     ; preds = %47
  %53 = add i64 %2, -3, !dbg !1775
  %54 = tail call i8* @zmalloc(i64 %53) #9, !dbg !1776
  %55 = icmp eq i8* %54, null, !dbg !1778
  br i1 %55, label %62, label %56, !dbg !1779

; <label>:56:                                     ; preds = %52
  %57 = trunc i64 %2 to i32, !dbg !1780
  %58 = add i32 %57, -4, !dbg !1781
  %59 = tail call i32 @lzf_compress(i8* %1, i32 %57, i8* nonnull %54, i32 %58) #9, !dbg !1782
  %60 = icmp eq i32 %59, 0, !dbg !1783
  br i1 %60, label %61, label %63, !dbg !1784

; <label>:61:                                     ; preds = %56
  tail call void @zfree(i8* nonnull %54) #9, !dbg !1785
  br label %62, !dbg !1786

; <label>:62:                                     ; preds = %52, %61
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1787
  br label %69, !dbg !1789

; <label>:63:                                     ; preds = %56
  %64 = zext i32 %59 to i64, !dbg !1782
  %65 = tail call i64 @rdbSaveLzfBlob(%struct._rio* %0, i8* nonnull %54, i64 %64, i64 %2) #9, !dbg !1791
  tail call void @zfree(i8* nonnull %54) #9, !dbg !1793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1787
  %66 = icmp eq i64 %65, -1, !dbg !1794
  br i1 %66, label %110, label %67, !dbg !1796

; <label>:67:                                     ; preds = %63
  %68 = icmp sgt i64 %65, 0, !dbg !1797
  br i1 %68, label %110, label %69, !dbg !1789

; <label>:69:                                     ; preds = %62, %46, %67, %47
  %70 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %2) #11, !dbg !1799
  %71 = sext i32 %70 to i64, !dbg !1799
  %72 = icmp eq i32 %70, -1, !dbg !1801
  br i1 %72, label %110, label %73, !dbg !1802

; <label>:73:                                     ; preds = %69
  %74 = icmp eq i64 %2, 0, !dbg !1803
  br i1 %74, label %110, label %75, !dbg !1805

; <label>:75:                                     ; preds = %73
  %76 = icmp eq %struct._rio* %0, null, !dbg !1812
  br i1 %76, label %105, label %77, !dbg !1813

; <label>:77:                                     ; preds = %75
  %78 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %79 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %80 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %81 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %82, !dbg !1818

; <label>:82:                                     ; preds = %97, %77
  %83 = phi i64 [ %2, %77 ], [ %99, %97 ]
  %84 = phi i8* [ %1, %77 ], [ %98, %97 ]
  %85 = load i64, i64* %78, align 8, !dbg !1819, !tbaa !506
  %86 = icmp ne i64 %85, 0, !dbg !1820
  %87 = icmp ult i64 %85, %83, !dbg !1821
  %88 = and i1 %86, %87, !dbg !1822
  %89 = select i1 %88, i64 %85, i64 %83, !dbg !1822
  %90 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %79, align 8, !dbg !1824, !tbaa !520
  %91 = icmp eq void (%struct._rio*, i8*, i64)* %90, null, !dbg !1825
  br i1 %91, label %93, label %92, !dbg !1826

; <label>:92:                                     ; preds = %82
  tail call void %90(%struct._rio* nonnull %0, i8* %84, i64 %89) #9, !dbg !1827
  br label %93, !dbg !1827

; <label>:93:                                     ; preds = %92, %82
  %94 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %80, align 8, !dbg !1828, !tbaa !584
  %95 = tail call i64 %94(%struct._rio* nonnull %0, i8* %84, i64 %89) #9, !dbg !1829
  %96 = icmp eq i64 %95, 0, !dbg !1830
  br i1 %96, label %104, label %97, !dbg !1831

; <label>:97:                                     ; preds = %93
  %98 = getelementptr inbounds i8, i8* %84, i64 %89, !dbg !1832
  %99 = sub i64 %83, %89, !dbg !1833
  %100 = load i64, i64* %81, align 8, !dbg !1834, !tbaa !527
  %101 = add i64 %100, %89, !dbg !1834
  store i64 %101, i64* %81, align 8, !dbg !1834, !tbaa !527
  %102 = icmp eq i64 %99, 0, !dbg !1818
  br i1 %102, label %103, label %82, !dbg !1818

; <label>:103:                                    ; preds = %97
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1835
  br label %105, !dbg !1836

; <label>:104:                                    ; preds = %93
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1835
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1837
  br label %109, !dbg !1838

; <label>:105:                                    ; preds = %75, %103
  %106 = trunc i64 %2 to i32, !dbg !1839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1837
  %107 = icmp eq i32 %106, -1, !dbg !1840
  %108 = add i64 %71, %2, !dbg !1841
  br i1 %107, label %109, label %110, !dbg !1838

; <label>:109:                                    ; preds = %104, %105
  br label %110, !dbg !1838

; <label>:110:                                    ; preds = %109, %105, %44, %73, %69, %67, %63
  %111 = phi i64 [ -1, %63 ], [ %65, %67 ], [ -1, %69 ], [ %71, %73 ], [ %45, %44 ], [ -1, %109 ], [ %108, %105 ], !dbg !1842
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1843
  ret i64 %111, !dbg !1843
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveLongLongAsStringObject(%struct._rio*, i64) local_unnamed_addr #6 !dbg !1844 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0, !dbg !1857
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #4, !dbg !1857
  %5 = add i64 %1, 128, !dbg !1863
  %6 = icmp ult i64 %5, 256, !dbg !1863
  br i1 %6, label %7, label %10, !dbg !1863

; <label>:7:                                      ; preds = %2
  store i8 -64, i8* %4, align 16, !dbg !1864, !tbaa !540
  %8 = trunc i64 %1 to i8, !dbg !1865
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 1, !dbg !1866
  store i8 %8, i8* %9, align 1, !dbg !1867, !tbaa !540
  br label %34, !dbg !1868

; <label>:10:                                     ; preds = %2
  %11 = add i64 %1, 32768, !dbg !1869
  %12 = icmp ult i64 %11, 65536, !dbg !1869
  br i1 %12, label %13, label %19, !dbg !1869

; <label>:13:                                     ; preds = %10
  store i8 -63, i8* %4, align 16, !dbg !1870, !tbaa !540
  %14 = trunc i64 %1 to i8, !dbg !1871
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 1, !dbg !1872
  store i8 %14, i8* %15, align 1, !dbg !1873, !tbaa !540
  %16 = lshr i64 %1, 8, !dbg !1874
  %17 = trunc i64 %16 to i8, !dbg !1875
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 2, !dbg !1876
  store i8 %17, i8* %18, align 2, !dbg !1877, !tbaa !540
  br label %34, !dbg !1878

; <label>:19:                                     ; preds = %10
  %20 = add i64 %1, 2147483648, !dbg !1879
  %21 = icmp ult i64 %20, 4294967296, !dbg !1879
  br i1 %21, label %22, label %69, !dbg !1879

; <label>:22:                                     ; preds = %19
  store i8 -62, i8* %4, align 16, !dbg !1880, !tbaa !540
  %23 = trunc i64 %1 to i8, !dbg !1881
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 1, !dbg !1882
  store i8 %23, i8* %24, align 1, !dbg !1883, !tbaa !540
  %25 = lshr i64 %1, 8, !dbg !1884
  %26 = trunc i64 %25 to i8, !dbg !1885
  %27 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 2, !dbg !1886
  store i8 %26, i8* %27, align 2, !dbg !1887, !tbaa !540
  %28 = lshr i64 %1, 16, !dbg !1888
  %29 = trunc i64 %28 to i8, !dbg !1889
  %30 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 3, !dbg !1890
  store i8 %29, i8* %30, align 1, !dbg !1891, !tbaa !540
  %31 = lshr i64 %1, 24, !dbg !1892
  %32 = trunc i64 %31 to i8, !dbg !1893
  %33 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 4, !dbg !1894
  store i8 %32, i8* %33, align 4, !dbg !1895, !tbaa !540
  br label %34, !dbg !1896

; <label>:34:                                     ; preds = %7, %13, %22
  %35 = phi i32 [ 5, %22 ], [ 3, %13 ], [ 2, %7 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1897
  %36 = icmp eq %struct._rio* %0, null, !dbg !1904
  br i1 %36, label %66, label %37, !dbg !1905

; <label>:37:                                     ; preds = %34
  %38 = zext i32 %35 to i64, !dbg !1906
  %39 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %40 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %41 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %42 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %43, !dbg !1912

; <label>:43:                                     ; preds = %58, %37
  %44 = phi i64 [ %38, %37 ], [ %60, %58 ]
  %45 = phi i8* [ %4, %37 ], [ %59, %58 ]
  %46 = load i64, i64* %39, align 8, !dbg !1913, !tbaa !506
  %47 = icmp ne i64 %46, 0, !dbg !1914
  %48 = icmp ult i64 %46, %44, !dbg !1915
  %49 = and i1 %47, %48, !dbg !1916
  %50 = select i1 %49, i64 %46, i64 %44, !dbg !1916
  %51 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %40, align 8, !dbg !1918, !tbaa !520
  %52 = icmp eq void (%struct._rio*, i8*, i64)* %51, null, !dbg !1919
  br i1 %52, label %54, label %53, !dbg !1920

; <label>:53:                                     ; preds = %43
  call void %51(%struct._rio* nonnull %0, i8* %45, i64 %50) #9, !dbg !1921
  br label %54, !dbg !1921

; <label>:54:                                     ; preds = %53, %43
  %55 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %41, align 8, !dbg !1922, !tbaa !584
  %56 = call i64 %55(%struct._rio* nonnull %0, i8* %45, i64 %50) #9, !dbg !1923
  %57 = icmp eq i64 %56, 0, !dbg !1924
  br i1 %57, label %64, label %58, !dbg !1925

; <label>:58:                                     ; preds = %54
  %59 = getelementptr inbounds i8, i8* %45, i64 %50, !dbg !1926
  %60 = sub i64 %44, %50, !dbg !1927
  %61 = load i64, i64* %42, align 8, !dbg !1928, !tbaa !527
  %62 = add i64 %61, %50, !dbg !1928
  store i64 %62, i64* %42, align 8, !dbg !1928, !tbaa !527
  %63 = icmp eq i64 %60, 0, !dbg !1912
  br i1 %63, label %64, label %43, !dbg !1912

; <label>:64:                                     ; preds = %54, %58
  %65 = phi i32 [ %35, %58 ], [ -1, %54 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1929
  br label %66, !dbg !1930

; <label>:66:                                     ; preds = %64, %34
  %67 = phi i32 [ %35, %34 ], [ %65, %64 ], !dbg !1931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1930
  %68 = sext i32 %67 to i64, !dbg !1932
  br label %114, !dbg !1933

; <label>:69:                                     ; preds = %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1897
  %70 = call i32 @ll2string(i8* nonnull %4, i64 32, i64 %1) #9, !dbg !1934
  %71 = icmp slt i32 %70, 32, !dbg !1936
  br i1 %71, label %73, label %72, !dbg !1936

; <label>:72:                                     ; preds = %69
  call void @_serverAssert(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 447) #9, !dbg !1936
  call void @_exit(i32 1) #10, !dbg !1936
  unreachable, !dbg !1936

; <label>:73:                                     ; preds = %69
  %74 = sext i32 %70 to i64, !dbg !1937
  %75 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %74) #11, !dbg !1939
  %76 = sext i32 %75 to i64, !dbg !1939
  %77 = icmp eq i32 %75, -1, !dbg !1941
  br i1 %77, label %114, label %78, !dbg !1942

; <label>:78:                                     ; preds = %73
  %79 = icmp eq %struct._rio* %0, null, !dbg !1948
  br i1 %79, label %110, label %80, !dbg !1949

; <label>:80:                                     ; preds = %78
  %81 = icmp eq i32 %70, 0, !dbg !1954
  br i1 %81, label %108, label %82, !dbg !1954

; <label>:82:                                     ; preds = %80
  %83 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %84 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %85 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %86 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %87, !dbg !1954

; <label>:87:                                     ; preds = %102, %82
  %88 = phi i64 [ %74, %82 ], [ %104, %102 ]
  %89 = phi i8* [ %4, %82 ], [ %103, %102 ]
  %90 = load i64, i64* %83, align 8, !dbg !1955, !tbaa !506
  %91 = icmp ne i64 %90, 0, !dbg !1956
  %92 = icmp ult i64 %90, %88, !dbg !1957
  %93 = and i1 %91, %92, !dbg !1958
  %94 = select i1 %93, i64 %90, i64 %88, !dbg !1958
  %95 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %84, align 8, !dbg !1960, !tbaa !520
  %96 = icmp eq void (%struct._rio*, i8*, i64)* %95, null, !dbg !1961
  br i1 %96, label %98, label %97, !dbg !1962

; <label>:97:                                     ; preds = %87
  call void %95(%struct._rio* nonnull %0, i8* %89, i64 %94) #9, !dbg !1963
  br label %98, !dbg !1963

; <label>:98:                                     ; preds = %97, %87
  %99 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %85, align 8, !dbg !1964, !tbaa !584
  %100 = call i64 %99(%struct._rio* nonnull %0, i8* %89, i64 %94) #9, !dbg !1965
  %101 = icmp eq i64 %100, 0, !dbg !1966
  br i1 %101, label %109, label %102, !dbg !1967

; <label>:102:                                    ; preds = %98
  %103 = getelementptr inbounds i8, i8* %89, i64 %94, !dbg !1968
  %104 = sub i64 %88, %94, !dbg !1969
  %105 = load i64, i64* %86, align 8, !dbg !1970, !tbaa !527
  %106 = add i64 %105, %94, !dbg !1970
  store i64 %106, i64* %86, align 8, !dbg !1970, !tbaa !527
  %107 = icmp eq i64 %104, 0, !dbg !1954
  br i1 %107, label %108, label %87, !dbg !1954

; <label>:108:                                    ; preds = %102, %80
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1971
  br label %110, !dbg !1972

; <label>:109:                                    ; preds = %98
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1971
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1973
  br label %114, !dbg !1974

; <label>:110:                                    ; preds = %78, %108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1973
  %111 = icmp eq i32 %70, -1, !dbg !1975
  %112 = add nsw i64 %76, %74, !dbg !1976
  %113 = select i1 %111, i64 -1, i64 %112, !dbg !1974
  br label %114, !dbg !1974

; <label>:114:                                    ; preds = %110, %109, %73, %66
  %115 = phi i64 [ %68, %66 ], [ -1, %73 ], [ -1, %109 ], [ %113, %110 ], !dbg !1977
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #4, !dbg !1978
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1978
  ret i64 %115, !dbg !1978
}

; Function Attrs: noredzone
declare dso_local void @_serverAssert(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone noreturn
declare dso_local void @_exit(i32) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveStringObject(%struct._rio*, %struct.redisObject*) local_unnamed_addr #6 !dbg !1979 {
  %3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !1997
  %4 = load i32, i32* %3, align 8, !dbg !1997
  %5 = lshr i32 %4, 4, !dbg !1997
  %6 = trunc i32 %5 to i4, !dbg !1999
  switch i4 %6, label %12 [
    i4 1, label %7
    i4 0, label %13
    i4 -8, label %13
  ], !dbg !1999

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !2000
  %9 = bitcast i8** %8 to i64*, !dbg !2000
  %10 = load i64, i64* %9, align 8, !dbg !2000, !tbaa !2002
  %11 = tail call i64 @rdbSaveLongLongAsStringObject(%struct._rio* %0, i64 %10) #11, !dbg !2004
  br label %43, !dbg !2005

; <label>:12:                                     ; preds = %2
  tail call void @_serverAssertWithInfo(%struct.client* null, %struct.redisObject* nonnull %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 463) #9, !dbg !2006
  tail call void @_exit(i32 1) #10, !dbg !2006
  unreachable, !dbg !2006

; <label>:13:                                     ; preds = %2, %2
  %14 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !2008
  %15 = load i8*, i8** %14, align 8, !dbg !2008, !tbaa !2002
  %16 = getelementptr inbounds i8, i8* %15, i64 -1, !dbg !2018
  %17 = load i8, i8* %16, align 1, !dbg !2018, !tbaa !540
  %18 = trunc i8 %17 to i3, !dbg !2020
  switch i3 %18, label %40 [
    i3 0, label %19
    i3 1, label %22
    i3 2, label %26
    i3 3, label %31
    i3 -4, label %36
  ], !dbg !2020

; <label>:19:                                     ; preds = %13
  %20 = lshr i8 %17, 3, !dbg !2021
  %21 = zext i8 %20 to i64, !dbg !2021
  br label %40, !dbg !2023

; <label>:22:                                     ; preds = %13
  %23 = getelementptr inbounds i8, i8* %15, i64 -3, !dbg !2024
  %24 = load i8, i8* %23, align 1, !dbg !2025, !tbaa !540
  %25 = zext i8 %24 to i64, !dbg !2024
  br label %40, !dbg !2026

; <label>:26:                                     ; preds = %13
  %27 = getelementptr inbounds i8, i8* %15, i64 -5, !dbg !2027
  %28 = bitcast i8* %27 to i16*, !dbg !2028
  %29 = load i16, i16* %28, align 1, !dbg !2028, !tbaa !2029
  %30 = zext i16 %29 to i64, !dbg !2027
  br label %40, !dbg !2031

; <label>:31:                                     ; preds = %13
  %32 = getelementptr inbounds i8, i8* %15, i64 -9, !dbg !2032
  %33 = bitcast i8* %32 to i32*, !dbg !2033
  %34 = load i32, i32* %33, align 1, !dbg !2033, !tbaa !191
  %35 = zext i32 %34 to i64, !dbg !2032
  br label %40, !dbg !2034

; <label>:36:                                     ; preds = %13
  %37 = getelementptr inbounds i8, i8* %15, i64 -17, !dbg !2035
  %38 = bitcast i8* %37 to i64*, !dbg !2036
  %39 = load i64, i64* %38, align 1, !dbg !2036, !tbaa !682
  br label %40, !dbg !2037

; <label>:40:                                     ; preds = %13, %19, %22, %26, %31, %36
  %41 = phi i64 [ %39, %36 ], [ %35, %31 ], [ %30, %26 ], [ %25, %22 ], [ %21, %19 ], [ 0, %13 ], !dbg !2038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2039
  %42 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %15, i64 %41) #11, !dbg !2040
  br label %43, !dbg !2041

; <label>:43:                                     ; preds = %40, %7
  %44 = phi i64 [ %11, %7 ], [ %42, %40 ], !dbg !2042
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2043
  ret i64 %44, !dbg !2043
}

; Function Attrs: noredzone
declare dso_local void @_serverAssertWithInfo(%struct.client*, %struct.redisObject*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i8* @rdbGenericLoadStringObject(%struct._rio*, i32, i64*) local_unnamed_addr #6 !dbg !2044 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = and i32 %1, 1, !dbg !2062
  %7 = and i32 %1, 2, !dbg !2064
  %8 = bitcast i32* %5 to i8*, !dbg !2067
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #4, !dbg !2067
  %9 = bitcast i64* %4 to i8*, !dbg !2072
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !dbg !2072
  %10 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* nonnull %5, i64* nonnull %4) #9, !dbg !2074
  %11 = icmp eq i32 %10, -1, !dbg !2075
  %12 = load i64, i64* %4, align 8, !dbg !2076
  %13 = select i1 %11, i64 -1, i64 %12, !dbg !2077
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !dbg !2078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2078
  %14 = load i32, i32* %5, align 4, !dbg !2080, !tbaa !191
  %15 = icmp eq i32 %14, 0, !dbg !2080
  br i1 %15, label %23, label %16, !dbg !2082

; <label>:16:                                     ; preds = %3
  switch i64 %13, label %22 [
    i64 0, label %17
    i64 1, label %17
    i64 2, label %17
    i64 3, label %20
  ], !dbg !2083

; <label>:17:                                     ; preds = %16, %16, %16
  %18 = trunc i64 %13 to i32, !dbg !2085
  %19 = call i8* @rdbLoadIntegerObject(%struct._rio* %0, i32 %18, i32 %1, i64* %2) #11, !dbg !2087
  br label %113, !dbg !2088

; <label>:20:                                     ; preds = %16
  %21 = call i8* @rdbLoadLzfStringObject(%struct._rio* %0, i32 %1, i64* %2) #11, !dbg !2089
  br label %113, !dbg !2090

; <label>:22:                                     ; preds = %16
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 498, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i64 %13) #11, !dbg !2091
  unreachable

; <label>:23:                                     ; preds = %3
  %24 = icmp eq i64 %13, -1, !dbg !2092
  br i1 %24, label %113, label %25, !dbg !2094

; <label>:25:                                     ; preds = %23
  %26 = icmp ne i32 %7, 0, !dbg !2095
  %27 = and i32 %1, 6, !dbg !2096
  %28 = icmp eq i32 %27, 0, !dbg !2096
  br i1 %28, label %71, label %29, !dbg !2096

; <label>:29:                                     ; preds = %25
  br i1 %26, label %30, label %32, !dbg !2097

; <label>:30:                                     ; preds = %29
  %31 = call i8* @zmalloc(i64 %13) #9, !dbg !2098
  br label %35, !dbg !2097

; <label>:32:                                     ; preds = %29
  %33 = load i8*, i8** @SDS_NOINIT, align 8, !dbg !2099, !tbaa !200
  %34 = call i8* @sdsnewlen(i8* %33, i64 %13) #9, !dbg !2100
  br label %35, !dbg !2097

; <label>:35:                                     ; preds = %32, %30
  %36 = phi i8* [ %31, %30 ], [ %34, %32 ], !dbg !2097
  %37 = icmp eq i64* %2, null, !dbg !2102
  br i1 %37, label %39, label %38, !dbg !2104

; <label>:38:                                     ; preds = %35
  store i64 %13, i64* %2, align 8, !dbg !2105, !tbaa !682
  br label %39, !dbg !2106

; <label>:39:                                     ; preds = %35, %38
  %40 = icmp eq i64 %13, 0, !dbg !2107
  br i1 %40, label %113, label %41, !dbg !2109

; <label>:41:                                     ; preds = %39
  %42 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !2114
  %43 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %44 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %45 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %46, !dbg !2115

; <label>:46:                                     ; preds = %61, %41
  %47 = phi i64 [ %13, %41 ], [ %63, %61 ]
  %48 = phi i8* [ %36, %41 ], [ %62, %61 ]
  %49 = load i64, i64* %42, align 8, !dbg !2114, !tbaa !506
  %50 = icmp ne i64 %49, 0, !dbg !2116
  %51 = icmp ult i64 %49, %47, !dbg !2117
  %52 = and i1 %50, %51, !dbg !2118
  %53 = select i1 %52, i64 %49, i64 %47, !dbg !2118
  %54 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %43, align 8, !dbg !2120, !tbaa !514
  %55 = call i64 %54(%struct._rio* %0, i8* %48, i64 %53) #9, !dbg !2121
  %56 = icmp eq i64 %55, 0, !dbg !2122
  br i1 %56, label %68, label %57, !dbg !2123

; <label>:57:                                     ; preds = %46
  %58 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %44, align 8, !dbg !2124, !tbaa !520
  %59 = icmp eq void (%struct._rio*, i8*, i64)* %58, null, !dbg !2125
  br i1 %59, label %61, label %60, !dbg !2126

; <label>:60:                                     ; preds = %57
  call void %58(%struct._rio* nonnull %0, i8* %48, i64 %53) #9, !dbg !2127
  br label %61, !dbg !2127

; <label>:61:                                     ; preds = %60, %57
  %62 = getelementptr inbounds i8, i8* %48, i64 %53, !dbg !2128
  %63 = sub i64 %47, %53, !dbg !2129
  %64 = load i64, i64* %45, align 8, !dbg !2130, !tbaa !527
  %65 = add i64 %64, %53, !dbg !2130
  store i64 %65, i64* %45, align 8, !dbg !2130, !tbaa !527
  %66 = icmp eq i64 %63, 0, !dbg !2115
  br i1 %66, label %67, label %46, !dbg !2115

; <label>:67:                                     ; preds = %61
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2131
  br label %113

; <label>:68:                                     ; preds = %46
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2131
  br i1 %26, label %69, label %70, !dbg !2132

; <label>:69:                                     ; preds = %68
  call void @zfree(i8* %36) #9, !dbg !2134
  br label %113, !dbg !2134

; <label>:70:                                     ; preds = %68
  call void @sdsfree(i8* %36) #9, !dbg !2136
  br label %113

; <label>:71:                                     ; preds = %25
  %72 = icmp eq i32 %6, 0, !dbg !2137
  %73 = load i8*, i8** @SDS_NOINIT, align 8, !dbg !2138, !tbaa !200
  br i1 %72, label %76, label %74, !dbg !2137

; <label>:74:                                     ; preds = %71
  %75 = call %struct.redisObject* @createStringObject(i8* %73, i64 %13) #9, !dbg !2139
  br label %78, !dbg !2137

; <label>:76:                                     ; preds = %71
  %77 = call %struct.redisObject* @createRawStringObject(i8* %73, i64 %13) #9, !dbg !2140
  br label %78, !dbg !2137

; <label>:78:                                     ; preds = %76, %74
  %79 = phi %struct.redisObject* [ %75, %74 ], [ %77, %76 ], !dbg !2137
  %80 = icmp eq i64 %13, 0, !dbg !2142
  br i1 %80, label %111, label %81, !dbg !2144

; <label>:81:                                     ; preds = %78
  %82 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %79, i64 0, i32 2, !dbg !2145
  %83 = load i8*, i8** %82, align 8, !dbg !2145, !tbaa !2002
  %84 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !2150
  %85 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %86 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %87 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %88, !dbg !2151

; <label>:88:                                     ; preds = %103, %81
  %89 = phi i64 [ %13, %81 ], [ %105, %103 ]
  %90 = phi i8* [ %83, %81 ], [ %104, %103 ]
  %91 = load i64, i64* %84, align 8, !dbg !2150, !tbaa !506
  %92 = icmp ne i64 %91, 0, !dbg !2152
  %93 = icmp ult i64 %91, %89, !dbg !2153
  %94 = and i1 %92, %93, !dbg !2154
  %95 = select i1 %94, i64 %91, i64 %89, !dbg !2154
  %96 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %85, align 8, !dbg !2156, !tbaa !514
  %97 = call i64 %96(%struct._rio* %0, i8* %90, i64 %95) #9, !dbg !2157
  %98 = icmp eq i64 %97, 0, !dbg !2158
  br i1 %98, label %110, label %99, !dbg !2159

; <label>:99:                                     ; preds = %88
  %100 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %86, align 8, !dbg !2160, !tbaa !520
  %101 = icmp eq void (%struct._rio*, i8*, i64)* %100, null, !dbg !2161
  br i1 %101, label %103, label %102, !dbg !2162

; <label>:102:                                    ; preds = %99
  call void %100(%struct._rio* nonnull %0, i8* %90, i64 %95) #9, !dbg !2163
  br label %103, !dbg !2163

; <label>:103:                                    ; preds = %102, %99
  %104 = getelementptr inbounds i8, i8* %90, i64 %95, !dbg !2164
  %105 = sub i64 %89, %95, !dbg !2165
  %106 = load i64, i64* %87, align 8, !dbg !2166, !tbaa !527
  %107 = add i64 %106, %95, !dbg !2166
  store i64 %107, i64* %87, align 8, !dbg !2166, !tbaa !527
  %108 = icmp eq i64 %105, 0, !dbg !2151
  br i1 %108, label %109, label %88, !dbg !2151

; <label>:109:                                    ; preds = %103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2167
  br label %111

; <label>:110:                                    ; preds = %88
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2167
  call void @decrRefCount(%struct.redisObject* %79) #9, !dbg !2168
  br label %113, !dbg !2170

; <label>:111:                                    ; preds = %109, %78
  %112 = bitcast %struct.redisObject* %79 to i8*, !dbg !2171
  br label %113, !dbg !2172

; <label>:113:                                    ; preds = %67, %110, %111, %70, %69, %39, %23, %20, %17
  %114 = phi i8* [ %21, %20 ], [ %19, %17 ], [ null, %23 ], [ null, %70 ], [ null, %69 ], [ %36, %39 ], [ %36, %67 ], [ null, %110 ], [ %112, %111 ], !dbg !2173
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #4, !dbg !2174
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2174
  ret i8* %114, !dbg !2174
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStringObject(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createRawStringObject(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @decrRefCount(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @rdbLoadStringObject(%struct._rio*) local_unnamed_addr #6 !dbg !2175 {
  %2 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %0, i32 0, i64* null) #11, !dbg !2181
  %3 = bitcast i8* %2 to %struct.redisObject*, !dbg !2181
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2182
  ret %struct.redisObject* %3, !dbg !2182
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @rdbLoadEncodedStringObject(%struct._rio*) local_unnamed_addr #6 !dbg !2183 {
  %2 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %0, i32 1, i64* null) #11, !dbg !2187
  %3 = bitcast i8* %2 to %struct.redisObject*, !dbg !2187
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2188
  ret %struct.redisObject* %3, !dbg !2188
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveDoubleValue(%struct._rio*, double) local_unnamed_addr #6 !dbg !2189 {
  %3 = alloca [128 x i8], align 16
  %4 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 0, !dbg !2206
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #4, !dbg !2206
  %5 = tail call i32 @__fpclassifyd(double %1) #9, !dbg !2208
  %6 = icmp eq i32 %5, 0, !dbg !2208
  br i1 %6, label %7, label %8, !dbg !2209

; <label>:7:                                      ; preds = %2
  store i8 -3, i8* %4, align 16, !dbg !2210, !tbaa !540
  br label %21, !dbg !2213

; <label>:8:                                      ; preds = %2
  %9 = tail call i32 @__fpclassifyd(double %1) #9, !dbg !2214
  %10 = icmp ugt i32 %9, 1, !dbg !2214
  br i1 %10, label %14, label %11, !dbg !2215

; <label>:11:                                     ; preds = %8
  %12 = fcmp olt double %1, 0.000000e+00, !dbg !2216
  %13 = select i1 %12, i8 -1, i8 -2, !dbg !2218
  store i8 %13, i8* %4, align 16, !dbg !2219, !tbaa !540
  br label %21, !dbg !2220

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 1, !dbg !2221
  %16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %15, i64 127, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), double %1) #9, !dbg !2223
  %17 = call i64 @strlen(i8* nonnull %15) #9, !dbg !2224
  %18 = trunc i64 %17 to i8, !dbg !2224
  store i8 %18, i8* %4, align 16, !dbg !2225, !tbaa !540
  %19 = and i64 %17, 255, !dbg !2226
  %20 = add nuw nsw i64 %19, 1, !dbg !2227
  br label %21

; <label>:21:                                     ; preds = %11, %14, %7
  %22 = phi i64 [ 1, %7 ], [ %20, %14 ], [ 1, %11 ]
  %23 = icmp eq %struct._rio* %0, null, !dbg !2232
  br i1 %23, label %52, label %24, !dbg !2233

; <label>:24:                                     ; preds = %21
  %25 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %26 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %27 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %28 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %29, !dbg !2238

; <label>:29:                                     ; preds = %44, %24
  %30 = phi i64 [ %22, %24 ], [ %46, %44 ]
  %31 = phi i8* [ %4, %24 ], [ %45, %44 ]
  %32 = load i64, i64* %25, align 8, !dbg !2239, !tbaa !506
  %33 = icmp ne i64 %32, 0, !dbg !2240
  %34 = icmp ult i64 %32, %30, !dbg !2241
  %35 = and i1 %33, %34, !dbg !2242
  %36 = select i1 %35, i64 %32, i64 %30, !dbg !2242
  %37 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %26, align 8, !dbg !2244, !tbaa !520
  %38 = icmp eq void (%struct._rio*, i8*, i64)* %37, null, !dbg !2245
  br i1 %38, label %40, label %39, !dbg !2246

; <label>:39:                                     ; preds = %29
  call void %37(%struct._rio* nonnull %0, i8* %31, i64 %36) #9, !dbg !2247
  br label %40, !dbg !2247

; <label>:40:                                     ; preds = %39, %29
  %41 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %27, align 8, !dbg !2248, !tbaa !584
  %42 = call i64 %41(%struct._rio* nonnull %0, i8* %31, i64 %36) #9, !dbg !2249
  %43 = icmp eq i64 %42, 0, !dbg !2250
  br i1 %43, label %51, label %44, !dbg !2251

; <label>:44:                                     ; preds = %40
  %45 = getelementptr inbounds i8, i8* %31, i64 %36, !dbg !2252
  %46 = sub i64 %30, %36, !dbg !2253
  %47 = load i64, i64* %28, align 8, !dbg !2254, !tbaa !527
  %48 = add i64 %47, %36, !dbg !2254
  store i64 %48, i64* %28, align 8, !dbg !2254, !tbaa !527
  %49 = icmp eq i64 %46, 0, !dbg !2238
  br i1 %49, label %50, label %29, !dbg !2238

; <label>:50:                                     ; preds = %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2255
  br label %52, !dbg !2256

; <label>:51:                                     ; preds = %40
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2255
  br label %54

; <label>:52:                                     ; preds = %50, %21
  %53 = trunc i64 %22 to i32, !dbg !2257
  br label %54, !dbg !2258

; <label>:54:                                     ; preds = %51, %52
  %55 = phi i32 [ %53, %52 ], [ -1, %51 ], !dbg !2259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2260
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #4, !dbg !2261
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2262
  ret i32 %55, !dbg !2262
}

; Function Attrs: noredzone
declare dso_local i32 @__fpclassifyd(double) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadDoubleValue(%struct._rio*, double*) local_unnamed_addr #6 !dbg !2263 {
  %3 = alloca [256 x i8], align 16
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0, !dbg !2277
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %5) #4, !dbg !2277
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #4, !dbg !2280
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !2286
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %10, !dbg !2287

; <label>:10:                                     ; preds = %26, %2
  %11 = phi i64 [ 1, %2 ], [ %28, %26 ]
  %12 = phi i8* [ %4, %2 ], [ %27, %26 ]
  %13 = load i64, i64* %6, align 8, !dbg !2286, !tbaa !506
  %14 = icmp ne i64 %13, 0, !dbg !2288
  %15 = icmp ult i64 %13, %11, !dbg !2289
  %16 = and i1 %14, %15, !dbg !2290
  %17 = select i1 %16, i64 %13, i64 %11, !dbg !2290
  %18 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %7, align 8, !dbg !2292, !tbaa !514
  %19 = call i64 %18(%struct._rio* %0, i8* %12, i64 %17) #9, !dbg !2293
  %20 = icmp eq i64 %19, 0, !dbg !2294
  br i1 %20, label %21, label %22, !dbg !2295

; <label>:21:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2296
  br label %74, !dbg !2297

; <label>:22:                                     ; preds = %10
  %23 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !2298, !tbaa !520
  %24 = icmp eq void (%struct._rio*, i8*, i64)* %23, null, !dbg !2299
  br i1 %24, label %26, label %25, !dbg !2300

; <label>:25:                                     ; preds = %22
  call void %23(%struct._rio* nonnull %0, i8* %12, i64 %17) #9, !dbg !2301
  br label %26, !dbg !2301

; <label>:26:                                     ; preds = %25, %22
  %27 = getelementptr inbounds i8, i8* %12, i64 %17, !dbg !2302
  %28 = sub i64 %11, %17, !dbg !2303
  %29 = load i64, i64* %9, align 8, !dbg !2304, !tbaa !527
  %30 = add i64 %29, %17, !dbg !2304
  store i64 %30, i64* %9, align 8, !dbg !2304, !tbaa !527
  %31 = icmp eq i64 %28, 0, !dbg !2287
  br i1 %31, label %32, label %10, !dbg !2287

; <label>:32:                                     ; preds = %26
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2296
  %33 = load i8, i8* %4, align 1, !dbg !2305, !tbaa !540
  switch i8 %33, label %43 [
    i8 -1, label %34
    i8 -2, label %37
    i8 -3, label %40
    i8 0, label %70
  ], !dbg !2306

; <label>:34:                                     ; preds = %32
  %35 = load i64, i64* bitcast (double* @R_NegInf to i64*), align 8, !dbg !2307, !tbaa !2309
  %36 = bitcast double* %1 to i64*, !dbg !2310
  store i64 %35, i64* %36, align 8, !dbg !2310, !tbaa !2309
  br label %74, !dbg !2311

; <label>:37:                                     ; preds = %32
  %38 = load i64, i64* bitcast (double* @R_PosInf to i64*), align 8, !dbg !2312, !tbaa !2309
  %39 = bitcast double* %1 to i64*, !dbg !2313
  store i64 %38, i64* %39, align 8, !dbg !2313, !tbaa !2309
  br label %74, !dbg !2314

; <label>:40:                                     ; preds = %32
  %41 = load i64, i64* bitcast (double* @R_Nan to i64*), align 8, !dbg !2315, !tbaa !2309
  %42 = bitcast double* %1 to i64*, !dbg !2316
  store i64 %41, i64* %42, align 8, !dbg !2316, !tbaa !2309
  br label %74, !dbg !2317

; <label>:43:                                     ; preds = %32
  %44 = zext i8 %33 to i64, !dbg !2318
  br label %45, !dbg !2322

; <label>:45:                                     ; preds = %43, %60
  %46 = phi i64 [ %62, %60 ], [ %44, %43 ]
  %47 = phi i8* [ %61, %60 ], [ %5, %43 ]
  %48 = load i64, i64* %6, align 8, !dbg !2322, !tbaa !506
  %49 = icmp ne i64 %48, 0, !dbg !2324
  %50 = icmp ult i64 %48, %46, !dbg !2325
  %51 = and i1 %49, %50, !dbg !2326
  %52 = select i1 %51, i64 %48, i64 %46, !dbg !2326
  %53 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %7, align 8, !dbg !2328, !tbaa !514
  %54 = call i64 %53(%struct._rio* nonnull %0, i8* %47, i64 %52) #9, !dbg !2329
  %55 = icmp eq i64 %54, 0, !dbg !2330
  br i1 %55, label %66, label %56, !dbg !2331

; <label>:56:                                     ; preds = %45
  %57 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !2332, !tbaa !520
  %58 = icmp eq void (%struct._rio*, i8*, i64)* %57, null, !dbg !2333
  br i1 %58, label %60, label %59, !dbg !2334

; <label>:59:                                     ; preds = %56
  call void %57(%struct._rio* nonnull %0, i8* %47, i64 %52) #9, !dbg !2335
  br label %60, !dbg !2335

; <label>:60:                                     ; preds = %59, %56
  %61 = getelementptr inbounds i8, i8* %47, i64 %52, !dbg !2336
  %62 = sub i64 %46, %52, !dbg !2337
  %63 = load i64, i64* %9, align 8, !dbg !2338, !tbaa !527
  %64 = add i64 %63, %52, !dbg !2338
  store i64 %64, i64* %9, align 8, !dbg !2338, !tbaa !527
  %65 = icmp eq i64 %62, 0, !dbg !2339
  br i1 %65, label %67, label %45, !dbg !2339

; <label>:66:                                     ; preds = %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2340
  br label %74

; <label>:67:                                     ; preds = %60
  %68 = load i8, i8* %4, align 1, !dbg !2341, !tbaa !540
  %69 = zext i8 %68 to i64, !dbg !2340
  br label %70, !dbg !2340

; <label>:70:                                     ; preds = %32, %67
  %71 = phi i64 [ %69, %67 ], [ 0, %32 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2340
  %72 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %71, !dbg !2342
  store i8 0, i8* %72, align 1, !dbg !2343, !tbaa !540
  %73 = call i32 (i8*, i8*, ...) @sscanf(i8* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), double* %1) #9, !dbg !2344
  br label %74, !dbg !2345

; <label>:74:                                     ; preds = %66, %21, %70, %40, %37, %34
  %75 = phi i32 [ 0, %70 ], [ 0, %40 ], [ 0, %37 ], [ 0, %34 ], [ -1, %66 ], [ -1, %21 ], !dbg !2346
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #4, !dbg !2347
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %5) #4, !dbg !2347
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2347
  ret i32 %75, !dbg !2347
}

; Function Attrs: noredzone
declare dso_local i32 @sscanf(i8*, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveBinaryDoubleValue(%struct._rio*, double) local_unnamed_addr #6 !dbg !2348 {
  %3 = alloca double, align 8
  store double %1, double* %3, align 8, !tbaa !2309
  %4 = icmp eq %struct._rio* %0, null, !dbg !2357
  br i1 %4, label %34, label %5, !dbg !2358

; <label>:5:                                      ; preds = %2
  %6 = bitcast double* %3 to i8*, !dbg !2359
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %11, !dbg !2365

; <label>:11:                                     ; preds = %26, %5
  %12 = phi i64 [ 8, %5 ], [ %28, %26 ]
  %13 = phi i8* [ %6, %5 ], [ %27, %26 ]
  %14 = load i64, i64* %7, align 8, !dbg !2366, !tbaa !506
  %15 = icmp ne i64 %14, 0, !dbg !2367
  %16 = icmp ult i64 %14, %12, !dbg !2368
  %17 = and i1 %15, %16, !dbg !2369
  %18 = select i1 %17, i64 %14, i64 %12, !dbg !2369
  %19 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !2371, !tbaa !520
  %20 = icmp eq void (%struct._rio*, i8*, i64)* %19, null, !dbg !2372
  br i1 %20, label %22, label %21, !dbg !2373

; <label>:21:                                     ; preds = %11
  call void %19(%struct._rio* nonnull %0, i8* %13, i64 %18) #9, !dbg !2374
  br label %22, !dbg !2374

; <label>:22:                                     ; preds = %21, %11
  %23 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %9, align 8, !dbg !2375, !tbaa !584
  %24 = call i64 %23(%struct._rio* nonnull %0, i8* %13, i64 %18) #9, !dbg !2376
  %25 = icmp eq i64 %24, 0, !dbg !2377
  br i1 %25, label %32, label %26, !dbg !2378

; <label>:26:                                     ; preds = %22
  %27 = getelementptr inbounds i8, i8* %13, i64 %18, !dbg !2379
  %28 = sub i64 %12, %18, !dbg !2380
  %29 = load i64, i64* %10, align 8, !dbg !2381, !tbaa !527
  %30 = add i64 %29, %18, !dbg !2381
  store i64 %30, i64* %10, align 8, !dbg !2381, !tbaa !527
  %31 = icmp eq i64 %28, 0, !dbg !2365
  br i1 %31, label %32, label %11, !dbg !2365

; <label>:32:                                     ; preds = %22, %26
  %33 = phi i32 [ 8, %26 ], [ -1, %22 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2382
  br label %34, !dbg !2383

; <label>:34:                                     ; preds = %32, %2
  %35 = phi i32 [ 8, %2 ], [ %33, %32 ], !dbg !2384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2383
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2385
  ret i32 %35, !dbg !2385
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadBinaryDoubleValue(%struct._rio*, double*) local_unnamed_addr #6 !dbg !2386 {
  %3 = bitcast double* %1 to i8*, !dbg !2392
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !2398
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %8, !dbg !2399

; <label>:8:                                      ; preds = %23, %2
  %9 = phi i64 [ 8, %2 ], [ %25, %23 ]
  %10 = phi i8* [ %3, %2 ], [ %24, %23 ]
  %11 = load i64, i64* %4, align 8, !dbg !2398, !tbaa !506
  %12 = icmp ne i64 %11, 0, !dbg !2400
  %13 = icmp ult i64 %11, %9, !dbg !2401
  %14 = and i1 %12, %13, !dbg !2402
  %15 = select i1 %14, i64 %11, i64 %9, !dbg !2402
  %16 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %5, align 8, !dbg !2404, !tbaa !514
  %17 = tail call i64 %16(%struct._rio* %0, i8* %10, i64 %15) #9, !dbg !2405
  %18 = icmp eq i64 %17, 0, !dbg !2406
  br i1 %18, label %29, label %19, !dbg !2407

; <label>:19:                                     ; preds = %8
  %20 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %6, align 8, !dbg !2408, !tbaa !520
  %21 = icmp eq void (%struct._rio*, i8*, i64)* %20, null, !dbg !2409
  br i1 %21, label %23, label %22, !dbg !2410

; <label>:22:                                     ; preds = %19
  tail call void %20(%struct._rio* nonnull %0, i8* %10, i64 %15) #9, !dbg !2411
  br label %23, !dbg !2411

; <label>:23:                                     ; preds = %22, %19
  %24 = getelementptr inbounds i8, i8* %10, i64 %15, !dbg !2412
  %25 = sub i64 %9, %15, !dbg !2413
  %26 = load i64, i64* %7, align 8, !dbg !2414, !tbaa !527
  %27 = add i64 %26, %15, !dbg !2414
  store i64 %27, i64* %7, align 8, !dbg !2414, !tbaa !527
  %28 = icmp eq i64 %25, 0, !dbg !2399
  br i1 %28, label %29, label %8, !dbg !2399

; <label>:29:                                     ; preds = %8, %23
  %30 = phi i32 [ 0, %23 ], [ -1, %8 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2416
  ret i32 %30, !dbg !2416
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveBinaryFloatValue(%struct._rio*, float) local_unnamed_addr #6 !dbg !2417 {
  %3 = alloca float, align 4
  store float %1, float* %3, align 4, !tbaa !2426
  %4 = icmp eq %struct._rio* %0, null, !dbg !2431
  br i1 %4, label %34, label %5, !dbg !2432

; <label>:5:                                      ; preds = %2
  %6 = bitcast float* %3 to i8*, !dbg !2433
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %11, !dbg !2439

; <label>:11:                                     ; preds = %26, %5
  %12 = phi i64 [ 4, %5 ], [ %28, %26 ]
  %13 = phi i8* [ %6, %5 ], [ %27, %26 ]
  %14 = load i64, i64* %7, align 8, !dbg !2440, !tbaa !506
  %15 = icmp ne i64 %14, 0, !dbg !2441
  %16 = icmp ult i64 %14, %12, !dbg !2442
  %17 = and i1 %15, %16, !dbg !2443
  %18 = select i1 %17, i64 %14, i64 %12, !dbg !2443
  %19 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !2445, !tbaa !520
  %20 = icmp eq void (%struct._rio*, i8*, i64)* %19, null, !dbg !2446
  br i1 %20, label %22, label %21, !dbg !2447

; <label>:21:                                     ; preds = %11
  call void %19(%struct._rio* nonnull %0, i8* %13, i64 %18) #9, !dbg !2448
  br label %22, !dbg !2448

; <label>:22:                                     ; preds = %21, %11
  %23 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %9, align 8, !dbg !2449, !tbaa !584
  %24 = call i64 %23(%struct._rio* nonnull %0, i8* %13, i64 %18) #9, !dbg !2450
  %25 = icmp eq i64 %24, 0, !dbg !2451
  br i1 %25, label %32, label %26, !dbg !2452

; <label>:26:                                     ; preds = %22
  %27 = getelementptr inbounds i8, i8* %13, i64 %18, !dbg !2453
  %28 = sub i64 %12, %18, !dbg !2454
  %29 = load i64, i64* %10, align 8, !dbg !2455, !tbaa !527
  %30 = add i64 %29, %18, !dbg !2455
  store i64 %30, i64* %10, align 8, !dbg !2455, !tbaa !527
  %31 = icmp eq i64 %28, 0, !dbg !2439
  br i1 %31, label %32, label %11, !dbg !2439

; <label>:32:                                     ; preds = %22, %26
  %33 = phi i32 [ 4, %26 ], [ -1, %22 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2456
  br label %34, !dbg !2457

; <label>:34:                                     ; preds = %32, %2
  %35 = phi i32 [ 4, %2 ], [ %33, %32 ], !dbg !2458
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2459
  ret i32 %35, !dbg !2459
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadBinaryFloatValue(%struct._rio*, float*) local_unnamed_addr #6 !dbg !2460 {
  %3 = bitcast float* %1 to i8*, !dbg !2469
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !2475
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %8, !dbg !2476

; <label>:8:                                      ; preds = %23, %2
  %9 = phi i64 [ 4, %2 ], [ %25, %23 ]
  %10 = phi i8* [ %3, %2 ], [ %24, %23 ]
  %11 = load i64, i64* %4, align 8, !dbg !2475, !tbaa !506
  %12 = icmp ne i64 %11, 0, !dbg !2477
  %13 = icmp ult i64 %11, %9, !dbg !2478
  %14 = and i1 %12, %13, !dbg !2479
  %15 = select i1 %14, i64 %11, i64 %9, !dbg !2479
  %16 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %5, align 8, !dbg !2481, !tbaa !514
  %17 = tail call i64 %16(%struct._rio* %0, i8* %10, i64 %15) #9, !dbg !2482
  %18 = icmp eq i64 %17, 0, !dbg !2483
  br i1 %18, label %29, label %19, !dbg !2484

; <label>:19:                                     ; preds = %8
  %20 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %6, align 8, !dbg !2485, !tbaa !520
  %21 = icmp eq void (%struct._rio*, i8*, i64)* %20, null, !dbg !2486
  br i1 %21, label %23, label %22, !dbg !2487

; <label>:22:                                     ; preds = %19
  tail call void %20(%struct._rio* nonnull %0, i8* %10, i64 %15) #9, !dbg !2488
  br label %23, !dbg !2488

; <label>:23:                                     ; preds = %22, %19
  %24 = getelementptr inbounds i8, i8* %10, i64 %15, !dbg !2489
  %25 = sub i64 %9, %15, !dbg !2490
  %26 = load i64, i64* %7, align 8, !dbg !2491, !tbaa !527
  %27 = add i64 %26, %15, !dbg !2491
  store i64 %27, i64* %7, align 8, !dbg !2491, !tbaa !527
  %28 = icmp eq i64 %25, 0, !dbg !2476
  br i1 %28, label %29, label %8, !dbg !2476

; <label>:29:                                     ; preds = %8, %23
  %30 = phi i32 [ 0, %23 ], [ -1, %8 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2493
  ret i32 %30, !dbg !2493
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveObjectType(%struct._rio*, %struct.redisObject* nocapture readonly) local_unnamed_addr #6 !dbg !2494 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !2502
  %14 = load i32, i32* %13, align 8, !dbg !2502
  %15 = trunc i32 %14 to i4, !dbg !2503
  switch i4 %15, label %352 [
    i4 0, label %16
    i4 1, label %48
    i4 2, label %84
    i4 3, label %152
    i4 4, label %220
    i4 6, label %288
    i4 5, label %320
  ], !dbg !2503

; <label>:16:                                     ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12), !dbg !2504
  store i8 0, i8* %12, align 1, !tbaa !540
  %17 = icmp eq %struct._rio* %0, null, !dbg !2512
  br i1 %17, label %46, label %18, !dbg !2513

; <label>:18:                                     ; preds = %16
  %19 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %20 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %21 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %22 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %23, !dbg !2518

; <label>:23:                                     ; preds = %38, %18
  %24 = phi i64 [ 1, %18 ], [ %40, %38 ]
  %25 = phi i8* [ %12, %18 ], [ %39, %38 ]
  %26 = load i64, i64* %19, align 8, !dbg !2519, !tbaa !506
  %27 = icmp ne i64 %26, 0, !dbg !2520
  %28 = icmp ult i64 %26, %24, !dbg !2521
  %29 = and i1 %27, %28, !dbg !2522
  %30 = select i1 %29, i64 %26, i64 %24, !dbg !2522
  %31 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %20, align 8, !dbg !2524, !tbaa !520
  %32 = icmp eq void (%struct._rio*, i8*, i64)* %31, null, !dbg !2525
  br i1 %32, label %34, label %33, !dbg !2526

; <label>:33:                                     ; preds = %23
  call void %31(%struct._rio* nonnull %0, i8* %25, i64 %30) #9, !dbg !2527
  br label %34, !dbg !2527

; <label>:34:                                     ; preds = %33, %23
  %35 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %21, align 8, !dbg !2528, !tbaa !584
  %36 = call i64 %35(%struct._rio* nonnull %0, i8* %25, i64 %30) #9, !dbg !2529
  %37 = icmp eq i64 %36, 0, !dbg !2530
  br i1 %37, label %44, label %38, !dbg !2531

; <label>:38:                                     ; preds = %34
  %39 = getelementptr inbounds i8, i8* %25, i64 %30, !dbg !2532
  %40 = sub i64 %24, %30, !dbg !2533
  %41 = load i64, i64* %22, align 8, !dbg !2534, !tbaa !527
  %42 = add i64 %41, %30, !dbg !2534
  store i64 %42, i64* %22, align 8, !dbg !2534, !tbaa !527
  %43 = icmp eq i64 %40, 0, !dbg !2518
  br i1 %43, label %44, label %23, !dbg !2518

; <label>:44:                                     ; preds = %34, %38
  %45 = phi i32 [ 1, %38 ], [ -1, %34 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2535
  br label %46, !dbg !2536

; <label>:46:                                     ; preds = %44, %16
  %47 = phi i32 [ 1, %16 ], [ %45, %44 ], !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2536
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2538
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12), !dbg !2538
  br label %353, !dbg !2539

; <label>:48:                                     ; preds = %2
  %49 = and i32 %14, 240, !dbg !2540
  %50 = icmp eq i32 %49, 144, !dbg !2542
  br i1 %50, label %51, label %83, !dbg !2543

; <label>:51:                                     ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11), !dbg !2544
  store i8 14, i8* %11, align 1, !tbaa !540
  %52 = icmp eq %struct._rio* %0, null, !dbg !2551
  br i1 %52, label %81, label %53, !dbg !2552

; <label>:53:                                     ; preds = %51
  %54 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %55 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %56 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %57 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %58, !dbg !2557

; <label>:58:                                     ; preds = %73, %53
  %59 = phi i64 [ 1, %53 ], [ %75, %73 ]
  %60 = phi i8* [ %11, %53 ], [ %74, %73 ]
  %61 = load i64, i64* %54, align 8, !dbg !2558, !tbaa !506
  %62 = icmp ne i64 %61, 0, !dbg !2559
  %63 = icmp ult i64 %61, %59, !dbg !2560
  %64 = and i1 %62, %63, !dbg !2561
  %65 = select i1 %64, i64 %61, i64 %59, !dbg !2561
  %66 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %55, align 8, !dbg !2563, !tbaa !520
  %67 = icmp eq void (%struct._rio*, i8*, i64)* %66, null, !dbg !2564
  br i1 %67, label %69, label %68, !dbg !2565

; <label>:68:                                     ; preds = %58
  call void %66(%struct._rio* nonnull %0, i8* %60, i64 %65) #9, !dbg !2566
  br label %69, !dbg !2566

; <label>:69:                                     ; preds = %68, %58
  %70 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %56, align 8, !dbg !2567, !tbaa !584
  %71 = call i64 %70(%struct._rio* nonnull %0, i8* %60, i64 %65) #9, !dbg !2568
  %72 = icmp eq i64 %71, 0, !dbg !2569
  br i1 %72, label %79, label %73, !dbg !2570

; <label>:73:                                     ; preds = %69
  %74 = getelementptr inbounds i8, i8* %60, i64 %65, !dbg !2571
  %75 = sub i64 %59, %65, !dbg !2572
  %76 = load i64, i64* %57, align 8, !dbg !2573, !tbaa !527
  %77 = add i64 %76, %65, !dbg !2573
  store i64 %77, i64* %57, align 8, !dbg !2573, !tbaa !527
  %78 = icmp eq i64 %75, 0, !dbg !2557
  br i1 %78, label %79, label %58, !dbg !2557

; <label>:79:                                     ; preds = %69, %73
  %80 = phi i32 [ 1, %73 ], [ -1, %69 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2574
  br label %81, !dbg !2575

; <label>:81:                                     ; preds = %79, %51
  %82 = phi i32 [ 1, %51 ], [ %80, %79 ], !dbg !2576
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2575
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2577
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11), !dbg !2577
  br label %353, !dbg !2578

; <label>:83:                                     ; preds = %48
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 633, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !2579
  tail call void @_exit(i32 1) #10, !dbg !2579
  unreachable, !dbg !2579

; <label>:84:                                     ; preds = %2
  %85 = lshr i32 %14, 4, !dbg !2580
  %86 = trunc i32 %85 to i4, !dbg !2582
  switch i4 %86, label %151 [
    i4 6, label %87
    i4 2, label %119
  ], !dbg !2582

; <label>:87:                                     ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10), !dbg !2583
  store i8 11, i8* %10, align 1, !tbaa !540
  %88 = icmp eq %struct._rio* %0, null, !dbg !2590
  br i1 %88, label %117, label %89, !dbg !2591

; <label>:89:                                     ; preds = %87
  %90 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %91 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %92 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %93 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %94, !dbg !2596

; <label>:94:                                     ; preds = %109, %89
  %95 = phi i64 [ 1, %89 ], [ %111, %109 ]
  %96 = phi i8* [ %10, %89 ], [ %110, %109 ]
  %97 = load i64, i64* %90, align 8, !dbg !2597, !tbaa !506
  %98 = icmp ne i64 %97, 0, !dbg !2598
  %99 = icmp ult i64 %97, %95, !dbg !2599
  %100 = and i1 %98, %99, !dbg !2600
  %101 = select i1 %100, i64 %97, i64 %95, !dbg !2600
  %102 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %91, align 8, !dbg !2602, !tbaa !520
  %103 = icmp eq void (%struct._rio*, i8*, i64)* %102, null, !dbg !2603
  br i1 %103, label %105, label %104, !dbg !2604

; <label>:104:                                    ; preds = %94
  call void %102(%struct._rio* nonnull %0, i8* %96, i64 %101) #9, !dbg !2605
  br label %105, !dbg !2605

; <label>:105:                                    ; preds = %104, %94
  %106 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %92, align 8, !dbg !2606, !tbaa !584
  %107 = call i64 %106(%struct._rio* nonnull %0, i8* %96, i64 %101) #9, !dbg !2607
  %108 = icmp eq i64 %107, 0, !dbg !2608
  br i1 %108, label %115, label %109, !dbg !2609

; <label>:109:                                    ; preds = %105
  %110 = getelementptr inbounds i8, i8* %96, i64 %101, !dbg !2610
  %111 = sub i64 %95, %101, !dbg !2611
  %112 = load i64, i64* %93, align 8, !dbg !2612, !tbaa !527
  %113 = add i64 %112, %101, !dbg !2612
  store i64 %113, i64* %93, align 8, !dbg !2612, !tbaa !527
  %114 = icmp eq i64 %111, 0, !dbg !2596
  br i1 %114, label %115, label %94, !dbg !2596

; <label>:115:                                    ; preds = %105, %109
  %116 = phi i32 [ 1, %109 ], [ -1, %105 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2613
  br label %117, !dbg !2614

; <label>:117:                                    ; preds = %115, %87
  %118 = phi i32 [ 1, %87 ], [ %116, %115 ], !dbg !2615
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2614
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2616
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10), !dbg !2616
  br label %353, !dbg !2617

; <label>:119:                                    ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9), !dbg !2618
  store i8 2, i8* %9, align 1, !tbaa !540
  %120 = icmp eq %struct._rio* %0, null, !dbg !2626
  br i1 %120, label %149, label %121, !dbg !2627

; <label>:121:                                    ; preds = %119
  %122 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %123 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %124 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %125 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %126, !dbg !2632

; <label>:126:                                    ; preds = %141, %121
  %127 = phi i64 [ 1, %121 ], [ %143, %141 ]
  %128 = phi i8* [ %9, %121 ], [ %142, %141 ]
  %129 = load i64, i64* %122, align 8, !dbg !2633, !tbaa !506
  %130 = icmp ne i64 %129, 0, !dbg !2634
  %131 = icmp ult i64 %129, %127, !dbg !2635
  %132 = and i1 %130, %131, !dbg !2636
  %133 = select i1 %132, i64 %129, i64 %127, !dbg !2636
  %134 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %123, align 8, !dbg !2638, !tbaa !520
  %135 = icmp eq void (%struct._rio*, i8*, i64)* %134, null, !dbg !2639
  br i1 %135, label %137, label %136, !dbg !2640

; <label>:136:                                    ; preds = %126
  call void %134(%struct._rio* nonnull %0, i8* %128, i64 %133) #9, !dbg !2641
  br label %137, !dbg !2641

; <label>:137:                                    ; preds = %136, %126
  %138 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %124, align 8, !dbg !2642, !tbaa !584
  %139 = call i64 %138(%struct._rio* nonnull %0, i8* %128, i64 %133) #9, !dbg !2643
  %140 = icmp eq i64 %139, 0, !dbg !2644
  br i1 %140, label %147, label %141, !dbg !2645

; <label>:141:                                    ; preds = %137
  %142 = getelementptr inbounds i8, i8* %128, i64 %133, !dbg !2646
  %143 = sub i64 %127, %133, !dbg !2647
  %144 = load i64, i64* %125, align 8, !dbg !2648, !tbaa !527
  %145 = add i64 %144, %133, !dbg !2648
  store i64 %145, i64* %125, align 8, !dbg !2648, !tbaa !527
  %146 = icmp eq i64 %143, 0, !dbg !2632
  br i1 %146, label %147, label %126, !dbg !2632

; <label>:147:                                    ; preds = %137, %141
  %148 = phi i32 [ 1, %141 ], [ -1, %137 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2649
  br label %149, !dbg !2650

; <label>:149:                                    ; preds = %147, %119
  %150 = phi i32 [ 1, %119 ], [ %148, %147 ], !dbg !2651
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2652
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9), !dbg !2652
  br label %353, !dbg !2653

; <label>:151:                                    ; preds = %84
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 640, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !2654
  tail call void @_exit(i32 1) #10, !dbg !2654
  unreachable, !dbg !2654

; <label>:152:                                    ; preds = %2
  %153 = lshr i32 %14, 4, !dbg !2655
  %154 = trunc i32 %153 to i4, !dbg !2657
  switch i4 %154, label %219 [
    i4 5, label %155
    i4 7, label %187
  ], !dbg !2657

; <label>:155:                                    ; preds = %152
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8), !dbg !2658
  store i8 12, i8* %8, align 1, !tbaa !540
  %156 = icmp eq %struct._rio* %0, null, !dbg !2665
  br i1 %156, label %185, label %157, !dbg !2666

; <label>:157:                                    ; preds = %155
  %158 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %159 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %160 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %161 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %162, !dbg !2671

; <label>:162:                                    ; preds = %177, %157
  %163 = phi i64 [ 1, %157 ], [ %179, %177 ]
  %164 = phi i8* [ %8, %157 ], [ %178, %177 ]
  %165 = load i64, i64* %158, align 8, !dbg !2672, !tbaa !506
  %166 = icmp ne i64 %165, 0, !dbg !2673
  %167 = icmp ult i64 %165, %163, !dbg !2674
  %168 = and i1 %166, %167, !dbg !2675
  %169 = select i1 %168, i64 %165, i64 %163, !dbg !2675
  %170 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %159, align 8, !dbg !2677, !tbaa !520
  %171 = icmp eq void (%struct._rio*, i8*, i64)* %170, null, !dbg !2678
  br i1 %171, label %173, label %172, !dbg !2679

; <label>:172:                                    ; preds = %162
  call void %170(%struct._rio* nonnull %0, i8* %164, i64 %169) #9, !dbg !2680
  br label %173, !dbg !2680

; <label>:173:                                    ; preds = %172, %162
  %174 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %160, align 8, !dbg !2681, !tbaa !584
  %175 = call i64 %174(%struct._rio* nonnull %0, i8* %164, i64 %169) #9, !dbg !2682
  %176 = icmp eq i64 %175, 0, !dbg !2683
  br i1 %176, label %183, label %177, !dbg !2684

; <label>:177:                                    ; preds = %173
  %178 = getelementptr inbounds i8, i8* %164, i64 %169, !dbg !2685
  %179 = sub i64 %163, %169, !dbg !2686
  %180 = load i64, i64* %161, align 8, !dbg !2687, !tbaa !527
  %181 = add i64 %180, %169, !dbg !2687
  store i64 %181, i64* %161, align 8, !dbg !2687, !tbaa !527
  %182 = icmp eq i64 %179, 0, !dbg !2671
  br i1 %182, label %183, label %162, !dbg !2671

; <label>:183:                                    ; preds = %173, %177
  %184 = phi i32 [ 1, %177 ], [ -1, %173 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2688
  br label %185, !dbg !2689

; <label>:185:                                    ; preds = %183, %155
  %186 = phi i32 [ 1, %155 ], [ %184, %183 ], !dbg !2690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2691
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8), !dbg !2691
  br label %353, !dbg !2692

; <label>:187:                                    ; preds = %152
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7), !dbg !2693
  store i8 5, i8* %7, align 1, !tbaa !540
  %188 = icmp eq %struct._rio* %0, null, !dbg !2701
  br i1 %188, label %217, label %189, !dbg !2702

; <label>:189:                                    ; preds = %187
  %190 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %191 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %192 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %193 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %194, !dbg !2707

; <label>:194:                                    ; preds = %209, %189
  %195 = phi i64 [ 1, %189 ], [ %211, %209 ]
  %196 = phi i8* [ %7, %189 ], [ %210, %209 ]
  %197 = load i64, i64* %190, align 8, !dbg !2708, !tbaa !506
  %198 = icmp ne i64 %197, 0, !dbg !2709
  %199 = icmp ult i64 %197, %195, !dbg !2710
  %200 = and i1 %198, %199, !dbg !2711
  %201 = select i1 %200, i64 %197, i64 %195, !dbg !2711
  %202 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %191, align 8, !dbg !2713, !tbaa !520
  %203 = icmp eq void (%struct._rio*, i8*, i64)* %202, null, !dbg !2714
  br i1 %203, label %205, label %204, !dbg !2715

; <label>:204:                                    ; preds = %194
  call void %202(%struct._rio* nonnull %0, i8* %196, i64 %201) #9, !dbg !2716
  br label %205, !dbg !2716

; <label>:205:                                    ; preds = %204, %194
  %206 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %192, align 8, !dbg !2717, !tbaa !584
  %207 = call i64 %206(%struct._rio* nonnull %0, i8* %196, i64 %201) #9, !dbg !2718
  %208 = icmp eq i64 %207, 0, !dbg !2719
  br i1 %208, label %215, label %209, !dbg !2720

; <label>:209:                                    ; preds = %205
  %210 = getelementptr inbounds i8, i8* %196, i64 %201, !dbg !2721
  %211 = sub i64 %195, %201, !dbg !2722
  %212 = load i64, i64* %193, align 8, !dbg !2723, !tbaa !527
  %213 = add i64 %212, %201, !dbg !2723
  store i64 %213, i64* %193, align 8, !dbg !2723, !tbaa !527
  %214 = icmp eq i64 %211, 0, !dbg !2707
  br i1 %214, label %215, label %194, !dbg !2707

; <label>:215:                                    ; preds = %205, %209
  %216 = phi i32 [ 1, %209 ], [ -1, %205 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2724
  br label %217, !dbg !2725

; <label>:217:                                    ; preds = %215, %187
  %218 = phi i32 [ 1, %187 ], [ %216, %215 ], !dbg !2726
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2725
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2727
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7), !dbg !2727
  br label %353, !dbg !2728

; <label>:219:                                    ; preds = %152
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 647, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !2729
  tail call void @_exit(i32 1) #10, !dbg !2729
  unreachable, !dbg !2729

; <label>:220:                                    ; preds = %2
  %221 = lshr i32 %14, 4, !dbg !2730
  %222 = trunc i32 %221 to i4, !dbg !2732
  switch i4 %222, label %287 [
    i4 5, label %223
    i4 2, label %255
  ], !dbg !2732

; <label>:223:                                    ; preds = %220
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6), !dbg !2733
  store i8 13, i8* %6, align 1, !tbaa !540
  %224 = icmp eq %struct._rio* %0, null, !dbg !2740
  br i1 %224, label %253, label %225, !dbg !2741

; <label>:225:                                    ; preds = %223
  %226 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %227 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %228 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %229 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %230, !dbg !2746

; <label>:230:                                    ; preds = %245, %225
  %231 = phi i64 [ 1, %225 ], [ %247, %245 ]
  %232 = phi i8* [ %6, %225 ], [ %246, %245 ]
  %233 = load i64, i64* %226, align 8, !dbg !2747, !tbaa !506
  %234 = icmp ne i64 %233, 0, !dbg !2748
  %235 = icmp ult i64 %233, %231, !dbg !2749
  %236 = and i1 %234, %235, !dbg !2750
  %237 = select i1 %236, i64 %233, i64 %231, !dbg !2750
  %238 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %227, align 8, !dbg !2752, !tbaa !520
  %239 = icmp eq void (%struct._rio*, i8*, i64)* %238, null, !dbg !2753
  br i1 %239, label %241, label %240, !dbg !2754

; <label>:240:                                    ; preds = %230
  call void %238(%struct._rio* nonnull %0, i8* %232, i64 %237) #9, !dbg !2755
  br label %241, !dbg !2755

; <label>:241:                                    ; preds = %240, %230
  %242 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %228, align 8, !dbg !2756, !tbaa !584
  %243 = call i64 %242(%struct._rio* nonnull %0, i8* %232, i64 %237) #9, !dbg !2757
  %244 = icmp eq i64 %243, 0, !dbg !2758
  br i1 %244, label %251, label %245, !dbg !2759

; <label>:245:                                    ; preds = %241
  %246 = getelementptr inbounds i8, i8* %232, i64 %237, !dbg !2760
  %247 = sub i64 %231, %237, !dbg !2761
  %248 = load i64, i64* %229, align 8, !dbg !2762, !tbaa !527
  %249 = add i64 %248, %237, !dbg !2762
  store i64 %249, i64* %229, align 8, !dbg !2762, !tbaa !527
  %250 = icmp eq i64 %247, 0, !dbg !2746
  br i1 %250, label %251, label %230, !dbg !2746

; <label>:251:                                    ; preds = %241, %245
  %252 = phi i32 [ 1, %245 ], [ -1, %241 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2763
  br label %253, !dbg !2764

; <label>:253:                                    ; preds = %251, %223
  %254 = phi i32 [ 1, %223 ], [ %252, %251 ], !dbg !2765
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2764
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2766
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6), !dbg !2766
  br label %353, !dbg !2767

; <label>:255:                                    ; preds = %220
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5), !dbg !2768
  store i8 4, i8* %5, align 1, !tbaa !540
  %256 = icmp eq %struct._rio* %0, null, !dbg !2776
  br i1 %256, label %285, label %257, !dbg !2777

; <label>:257:                                    ; preds = %255
  %258 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %259 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %260 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %261 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %262, !dbg !2782

; <label>:262:                                    ; preds = %277, %257
  %263 = phi i64 [ 1, %257 ], [ %279, %277 ]
  %264 = phi i8* [ %5, %257 ], [ %278, %277 ]
  %265 = load i64, i64* %258, align 8, !dbg !2783, !tbaa !506
  %266 = icmp ne i64 %265, 0, !dbg !2784
  %267 = icmp ult i64 %265, %263, !dbg !2785
  %268 = and i1 %266, %267, !dbg !2786
  %269 = select i1 %268, i64 %265, i64 %263, !dbg !2786
  %270 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %259, align 8, !dbg !2788, !tbaa !520
  %271 = icmp eq void (%struct._rio*, i8*, i64)* %270, null, !dbg !2789
  br i1 %271, label %273, label %272, !dbg !2790

; <label>:272:                                    ; preds = %262
  call void %270(%struct._rio* nonnull %0, i8* %264, i64 %269) #9, !dbg !2791
  br label %273, !dbg !2791

; <label>:273:                                    ; preds = %272, %262
  %274 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %260, align 8, !dbg !2792, !tbaa !584
  %275 = call i64 %274(%struct._rio* nonnull %0, i8* %264, i64 %269) #9, !dbg !2793
  %276 = icmp eq i64 %275, 0, !dbg !2794
  br i1 %276, label %283, label %277, !dbg !2795

; <label>:277:                                    ; preds = %273
  %278 = getelementptr inbounds i8, i8* %264, i64 %269, !dbg !2796
  %279 = sub i64 %263, %269, !dbg !2797
  %280 = load i64, i64* %261, align 8, !dbg !2798, !tbaa !527
  %281 = add i64 %280, %269, !dbg !2798
  store i64 %281, i64* %261, align 8, !dbg !2798, !tbaa !527
  %282 = icmp eq i64 %279, 0, !dbg !2782
  br i1 %282, label %283, label %262, !dbg !2782

; <label>:283:                                    ; preds = %273, %277
  %284 = phi i32 [ 1, %277 ], [ -1, %273 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2799
  br label %285, !dbg !2800

; <label>:285:                                    ; preds = %283, %255
  %286 = phi i32 [ 1, %255 ], [ %284, %283 ], !dbg !2801
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2800
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2802
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5), !dbg !2802
  br label %353, !dbg !2803

; <label>:287:                                    ; preds = %220
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 654, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !2804
  tail call void @_exit(i32 1) #10, !dbg !2804
  unreachable, !dbg !2804

; <label>:288:                                    ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4), !dbg !2805
  store i8 15, i8* %4, align 1, !tbaa !540
  %289 = icmp eq %struct._rio* %0, null, !dbg !2812
  br i1 %289, label %318, label %290, !dbg !2813

; <label>:290:                                    ; preds = %288
  %291 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %292 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %293 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %294 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %295, !dbg !2818

; <label>:295:                                    ; preds = %310, %290
  %296 = phi i64 [ 1, %290 ], [ %312, %310 ]
  %297 = phi i8* [ %4, %290 ], [ %311, %310 ]
  %298 = load i64, i64* %291, align 8, !dbg !2819, !tbaa !506
  %299 = icmp ne i64 %298, 0, !dbg !2820
  %300 = icmp ult i64 %298, %296, !dbg !2821
  %301 = and i1 %299, %300, !dbg !2822
  %302 = select i1 %301, i64 %298, i64 %296, !dbg !2822
  %303 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %292, align 8, !dbg !2824, !tbaa !520
  %304 = icmp eq void (%struct._rio*, i8*, i64)* %303, null, !dbg !2825
  br i1 %304, label %306, label %305, !dbg !2826

; <label>:305:                                    ; preds = %295
  call void %303(%struct._rio* nonnull %0, i8* %297, i64 %302) #9, !dbg !2827
  br label %306, !dbg !2827

; <label>:306:                                    ; preds = %305, %295
  %307 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %293, align 8, !dbg !2828, !tbaa !584
  %308 = call i64 %307(%struct._rio* nonnull %0, i8* %297, i64 %302) #9, !dbg !2829
  %309 = icmp eq i64 %308, 0, !dbg !2830
  br i1 %309, label %316, label %310, !dbg !2831

; <label>:310:                                    ; preds = %306
  %311 = getelementptr inbounds i8, i8* %297, i64 %302, !dbg !2832
  %312 = sub i64 %296, %302, !dbg !2833
  %313 = load i64, i64* %294, align 8, !dbg !2834, !tbaa !527
  %314 = add i64 %313, %302, !dbg !2834
  store i64 %314, i64* %294, align 8, !dbg !2834, !tbaa !527
  %315 = icmp eq i64 %312, 0, !dbg !2818
  br i1 %315, label %316, label %295, !dbg !2818

; <label>:316:                                    ; preds = %306, %310
  %317 = phi i32 [ 1, %310 ], [ -1, %306 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2835
  br label %318, !dbg !2836

; <label>:318:                                    ; preds = %316, %288
  %319 = phi i32 [ 1, %288 ], [ %317, %316 ], !dbg !2837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2838
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4), !dbg !2838
  br label %353, !dbg !2839

; <label>:320:                                    ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3), !dbg !2840
  store i8 7, i8* %3, align 1, !tbaa !540
  %321 = icmp eq %struct._rio* %0, null, !dbg !2847
  br i1 %321, label %350, label %322, !dbg !2848

; <label>:322:                                    ; preds = %320
  %323 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %324 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %325 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %326 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %327, !dbg !2853

; <label>:327:                                    ; preds = %342, %322
  %328 = phi i64 [ 1, %322 ], [ %344, %342 ]
  %329 = phi i8* [ %3, %322 ], [ %343, %342 ]
  %330 = load i64, i64* %323, align 8, !dbg !2854, !tbaa !506
  %331 = icmp ne i64 %330, 0, !dbg !2855
  %332 = icmp ult i64 %330, %328, !dbg !2856
  %333 = and i1 %331, %332, !dbg !2857
  %334 = select i1 %333, i64 %330, i64 %328, !dbg !2857
  %335 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %324, align 8, !dbg !2859, !tbaa !520
  %336 = icmp eq void (%struct._rio*, i8*, i64)* %335, null, !dbg !2860
  br i1 %336, label %338, label %337, !dbg !2861

; <label>:337:                                    ; preds = %327
  call void %335(%struct._rio* nonnull %0, i8* %329, i64 %334) #9, !dbg !2862
  br label %338, !dbg !2862

; <label>:338:                                    ; preds = %337, %327
  %339 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %325, align 8, !dbg !2863, !tbaa !584
  %340 = call i64 %339(%struct._rio* nonnull %0, i8* %329, i64 %334) #9, !dbg !2864
  %341 = icmp eq i64 %340, 0, !dbg !2865
  br i1 %341, label %348, label %342, !dbg !2866

; <label>:342:                                    ; preds = %338
  %343 = getelementptr inbounds i8, i8* %329, i64 %334, !dbg !2867
  %344 = sub i64 %328, %334, !dbg !2868
  %345 = load i64, i64* %326, align 8, !dbg !2869, !tbaa !527
  %346 = add i64 %345, %334, !dbg !2869
  store i64 %346, i64* %326, align 8, !dbg !2869, !tbaa !527
  %347 = icmp eq i64 %344, 0, !dbg !2853
  br i1 %347, label %348, label %327, !dbg !2853

; <label>:348:                                    ; preds = %338, %342
  %349 = phi i32 [ 1, %342 ], [ -1, %338 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2870
  br label %350, !dbg !2871

; <label>:350:                                    ; preds = %348, %320
  %351 = phi i32 [ 1, %320 ], [ %349, %348 ], !dbg !2872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2871
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2873
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3), !dbg !2873
  br label %353, !dbg !2874

; <label>:352:                                    ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 660, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #9, !dbg !2875
  tail call void @_exit(i32 1) #10, !dbg !2875
  unreachable, !dbg !2875

; <label>:353:                                    ; preds = %350, %318, %285, %253, %217, %185, %149, %117, %81, %46
  %354 = phi i32 [ %351, %350 ], [ %319, %318 ], [ %254, %253 ], [ %286, %285 ], [ %186, %185 ], [ %218, %217 ], [ %118, %117 ], [ %150, %149 ], [ %82, %81 ], [ %47, %46 ], !dbg !2876
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2877
  ret i32 %354, !dbg !2877
}

; Function Attrs: noredzone
declare dso_local void @_serverPanic(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadObjectType(%struct._rio*) local_unnamed_addr #6 !dbg !2878 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #4, !dbg !2887
  %3 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !2892
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %7, !dbg !2893

; <label>:7:                                      ; preds = %22, %1
  %8 = phi i64 [ 1, %1 ], [ %24, %22 ]
  %9 = phi i8* [ %2, %1 ], [ %23, %22 ]
  %10 = load i64, i64* %3, align 8, !dbg !2892, !tbaa !506
  %11 = icmp ne i64 %10, 0, !dbg !2894
  %12 = icmp ult i64 %10, %8, !dbg !2895
  %13 = and i1 %11, %12, !dbg !2896
  %14 = select i1 %13, i64 %10, i64 %8, !dbg !2896
  %15 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %4, align 8, !dbg !2898, !tbaa !514
  %16 = call i64 %15(%struct._rio* %0, i8* %9, i64 %14) #9, !dbg !2899
  %17 = icmp eq i64 %16, 0, !dbg !2900
  br i1 %17, label %28, label %18, !dbg !2901

; <label>:18:                                     ; preds = %7
  %19 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %5, align 8, !dbg !2902, !tbaa !520
  %20 = icmp eq void (%struct._rio*, i8*, i64)* %19, null, !dbg !2903
  br i1 %20, label %22, label %21, !dbg !2904

; <label>:21:                                     ; preds = %18
  call void %19(%struct._rio* nonnull %0, i8* %9, i64 %14) #9, !dbg !2905
  br label %22, !dbg !2905

; <label>:22:                                     ; preds = %21, %18
  %23 = getelementptr inbounds i8, i8* %9, i64 %14, !dbg !2906
  %24 = sub i64 %8, %14, !dbg !2907
  %25 = load i64, i64* %6, align 8, !dbg !2908, !tbaa !527
  %26 = add i64 %25, %14, !dbg !2908
  store i64 %26, i64* %6, align 8, !dbg !2908, !tbaa !527
  %27 = icmp eq i64 %24, 0, !dbg !2893
  br i1 %27, label %29, label %7, !dbg !2893

; <label>:28:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2909
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #4, !dbg !2910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2910
  br label %36, !dbg !2911

; <label>:29:                                     ; preds = %22
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2909
  %30 = load i8, i8* %2, align 1, !dbg !2912
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #4, !dbg !2910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2910
  %31 = icmp ult i8 %30, 16, !dbg !2911
  br i1 %31, label %32, label %36, !dbg !2911

; <label>:32:                                     ; preds = %29
  %33 = sext i8 %30 to i64, !dbg !2911
  %34 = getelementptr inbounds [16 x i32], [16 x i32]* @switch.table.rdbLoadObjectType, i64 0, i64 %33, !dbg !2911
  %35 = load i32, i32* %34, align 4, !dbg !2911
  br label %36, !dbg !2911

; <label>:36:                                     ; preds = %32, %29, %28
  %37 = phi i32 [ -1, %29 ], [ -1, %28 ], [ %35, %32 ], !dbg !2913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2915
  ret i32 %37, !dbg !2915
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveStreamPEL(%struct._rio*, %struct.rax*, i32) local_unnamed_addr #6 !dbg !2916 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.raxIterator, align 8
  %6 = tail call i64 @raxSize(%struct.rax* %1) #9, !dbg !2995
  %7 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %6) #11, !dbg !2997
  %8 = icmp eq i32 %7, -1, !dbg !2998
  br i1 %8, label %99, label %9, !dbg !2999

; <label>:9:                                      ; preds = %3
  %10 = sext i32 %7 to i64, !dbg !2997
  %11 = bitcast %struct.raxIterator* %5 to i8*, !dbg !3001
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %11) #4, !dbg !3001
  call void @raxStart(%struct.raxIterator* nonnull %5, %struct.rax* %1) #9, !dbg !3003
  %12 = call i32 @raxSeek(%struct.raxIterator* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0) #9, !dbg !3004
  %13 = call i32 @raxNext(%struct.raxIterator* nonnull %5) #9, !dbg !3005
  %14 = icmp eq i32 %13, 0, !dbg !3006
  br i1 %14, label %95, label %15, !dbg !3006

; <label>:15:                                     ; preds = %9
  %16 = icmp eq %struct._rio* %0, null
  %17 = icmp eq i32 %2, 0
  %18 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %5, i64 0, i32 2
  %19 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %20 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %21 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %22 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  %23 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %5, i64 0, i32 3
  %24 = bitcast i8** %23 to %struct.streamNACK**
  %25 = bitcast i64* %4 to i8*
  br label %26, !dbg !3006

; <label>:26:                                     ; preds = %15, %91
  %27 = phi i64 [ %10, %15 ], [ %92, %91 ]
  br i1 %16, label %53, label %28, !dbg !3011

; <label>:28:                                     ; preds = %26
  %29 = load i8*, i8** %18, align 8, !dbg !3012, !tbaa !3013
  br label %30, !dbg !3021

; <label>:30:                                     ; preds = %45, %28
  %31 = phi i64 [ 16, %28 ], [ %47, %45 ]
  %32 = phi i8* [ %29, %28 ], [ %46, %45 ]
  %33 = load i64, i64* %19, align 8, !dbg !3022, !tbaa !506
  %34 = icmp ne i64 %33, 0, !dbg !3023
  %35 = icmp ult i64 %33, %31, !dbg !3024
  %36 = and i1 %34, %35, !dbg !3025
  %37 = select i1 %36, i64 %33, i64 %31, !dbg !3025
  %38 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %20, align 8, !dbg !3027, !tbaa !520
  %39 = icmp eq void (%struct._rio*, i8*, i64)* %38, null, !dbg !3028
  br i1 %39, label %41, label %40, !dbg !3029

; <label>:40:                                     ; preds = %30
  call void %38(%struct._rio* nonnull %0, i8* %32, i64 %37) #9, !dbg !3030
  br label %41, !dbg !3030

; <label>:41:                                     ; preds = %40, %30
  %42 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %21, align 8, !dbg !3031, !tbaa !584
  %43 = call i64 %42(%struct._rio* nonnull %0, i8* %32, i64 %37) #9, !dbg !3032
  %44 = icmp eq i64 %43, 0, !dbg !3033
  br i1 %44, label %52, label %45, !dbg !3034

; <label>:45:                                     ; preds = %41
  %46 = getelementptr inbounds i8, i8* %32, i64 %37, !dbg !3035
  %47 = sub i64 %31, %37, !dbg !3036
  %48 = load i64, i64* %22, align 8, !dbg !3037, !tbaa !527
  %49 = add i64 %48, %37, !dbg !3037
  store i64 %49, i64* %22, align 8, !dbg !3037, !tbaa !527
  %50 = icmp eq i64 %47, 0, !dbg !3021
  br i1 %50, label %51, label %30, !dbg !3021

; <label>:51:                                     ; preds = %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3038
  br label %53, !dbg !3039

; <label>:52:                                     ; preds = %41
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3040
  br label %97, !dbg !3041

; <label>:53:                                     ; preds = %51, %26
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3040
  %54 = add nsw i64 %27, 16, !dbg !3042
  br i1 %17, label %91, label %55, !dbg !3043

; <label>:55:                                     ; preds = %53
  %56 = load %struct.streamNACK*, %struct.streamNACK** %24, align 8, !dbg !3044, !tbaa !3045
  %57 = getelementptr inbounds %struct.streamNACK, %struct.streamNACK* %56, i64 0, i32 0, !dbg !3047
  %58 = load i64, i64* %57, align 8, !dbg !3047, !tbaa !3049
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4, !dbg !3054
  store i64 %58, i64* %4, align 8, !dbg !3055, !tbaa !682
  br i1 %16, label %82, label %59, !dbg !3060

; <label>:59:                                     ; preds = %55, %74
  %60 = phi i64 [ %76, %74 ], [ 8, %55 ]
  %61 = phi i8* [ %75, %74 ], [ %25, %55 ]
  %62 = load i64, i64* %19, align 8, !dbg !3064, !tbaa !506
  %63 = icmp ne i64 %62, 0, !dbg !3065
  %64 = icmp ult i64 %62, %60, !dbg !3066
  %65 = and i1 %63, %64, !dbg !3067
  %66 = select i1 %65, i64 %62, i64 %60, !dbg !3067
  %67 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %20, align 8, !dbg !3069, !tbaa !520
  %68 = icmp eq void (%struct._rio*, i8*, i64)* %67, null, !dbg !3070
  br i1 %68, label %70, label %69, !dbg !3071

; <label>:69:                                     ; preds = %59
  call void %67(%struct._rio* nonnull %0, i8* %61, i64 %66) #9, !dbg !3072
  br label %70, !dbg !3072

; <label>:70:                                     ; preds = %69, %59
  %71 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %21, align 8, !dbg !3073, !tbaa !584
  %72 = call i64 %71(%struct._rio* nonnull %0, i8* %61, i64 %66) #9, !dbg !3074
  %73 = icmp eq i64 %72, 0, !dbg !3075
  br i1 %73, label %81, label %74, !dbg !3076

; <label>:74:                                     ; preds = %70
  %75 = getelementptr inbounds i8, i8* %61, i64 %66, !dbg !3077
  %76 = sub i64 %60, %66, !dbg !3078
  %77 = load i64, i64* %22, align 8, !dbg !3079, !tbaa !527
  %78 = add i64 %77, %66, !dbg !3079
  store i64 %78, i64* %22, align 8, !dbg !3079, !tbaa !527
  %79 = icmp eq i64 %76, 0, !dbg !3080
  br i1 %79, label %80, label %59, !dbg !3080

; <label>:80:                                     ; preds = %74
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3081
  br label %82, !dbg !3082

; <label>:81:                                     ; preds = %70
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3081
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3083
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4, !dbg !3084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3085
  br label %97, !dbg !3086

; <label>:82:                                     ; preds = %80, %55
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3083
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4, !dbg !3084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3085
  %83 = getelementptr inbounds %struct.streamNACK, %struct.streamNACK* %56, i64 0, i32 1, !dbg !3087
  %84 = load i64, i64* %83, align 8, !dbg !3087, !tbaa !3089
  %85 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %84) #11, !dbg !3090
  %86 = icmp eq i32 %85, -1, !dbg !3091
  br i1 %86, label %97, label %87, !dbg !3092

; <label>:87:                                     ; preds = %82
  %88 = add nsw i64 %27, 24, !dbg !3093
  %89 = sext i32 %85 to i64, !dbg !3090
  %90 = add nsw i64 %88, %89, !dbg !3094
  br label %91

; <label>:91:                                     ; preds = %87, %53
  %92 = phi i64 [ %90, %87 ], [ %54, %53 ], !dbg !3042
  %93 = call i32 @raxNext(%struct.raxIterator* nonnull %5) #9, !dbg !3005
  %94 = icmp eq i32 %93, 0, !dbg !3006
  br i1 %94, label %95, label %26, !dbg !3006, !llvm.loop !3095

; <label>:95:                                     ; preds = %91, %9
  %96 = phi i64 [ %10, %9 ], [ %92, %91 ], !dbg !3097
  call void @raxStop(%struct.raxIterator* nonnull %5) #9, !dbg !3098
  br label %97, !dbg !3099

; <label>:97:                                     ; preds = %82, %81, %52, %95
  %98 = phi i64 [ %96, %95 ], [ -1, %52 ], [ -1, %81 ], [ -1, %82 ], !dbg !3100
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %11) #4, !dbg !3101
  br label %99

; <label>:99:                                     ; preds = %3, %97
  %100 = phi i64 [ %98, %97 ], [ -1, %3 ], !dbg !3102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3101
  ret i64 %100, !dbg !3101
}

; Function Attrs: noredzone
declare dso_local i64 @raxSize(%struct.rax*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @raxStart(%struct.raxIterator*, %struct.rax*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @raxSeek(%struct.raxIterator*, i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @raxNext(%struct.raxIterator*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @raxStop(%struct.raxIterator*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveStreamConsumers(%struct._rio*, %struct.streamCG* nocapture readonly) local_unnamed_addr #6 !dbg !3103 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.raxIterator, align 8
  %5 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %1, i64 0, i32 2, !dbg !3129
  %6 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !3129, !tbaa !3131
  %7 = tail call i64 @raxSize(%struct.rax* %6) #9, !dbg !3134
  %8 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %7) #11, !dbg !3135
  %9 = icmp eq i32 %8, -1, !dbg !3136
  br i1 %9, label %73, label %10, !dbg !3137

; <label>:10:                                     ; preds = %2
  %11 = sext i32 %8 to i64, !dbg !3135
  %12 = bitcast %struct.raxIterator* %4 to i8*, !dbg !3139
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %12) #4, !dbg !3139
  %13 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !3140, !tbaa !3131
  call void @raxStart(%struct.raxIterator* nonnull %4, %struct.rax* %13) #9, !dbg !3142
  %14 = call i32 @raxSeek(%struct.raxIterator* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0) #9, !dbg !3143
  %15 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 3
  %16 = bitcast i8** %15 to %struct.streamConsumer**
  %17 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 2
  %18 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 4
  %19 = bitcast i64* %3 to i8*
  %20 = icmp eq %struct._rio* %0, null
  %21 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %22 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %23 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %24 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %25, !dbg !3144

; <label>:25:                                     ; preds = %61, %10
  %26 = phi i64 [ %11, %10 ], [ %69, %61 ], !dbg !3145
  %27 = call i32 @raxNext(%struct.raxIterator* nonnull %4) #9, !dbg !3146
  %28 = icmp eq i32 %27, 0, !dbg !3144
  br i1 %28, label %70, label %29, !dbg !3144

; <label>:29:                                     ; preds = %25
  %30 = load %struct.streamConsumer*, %struct.streamConsumer** %16, align 8, !dbg !3147, !tbaa !3045
  %31 = load i8*, i8** %17, align 8, !dbg !3149, !tbaa !3013
  %32 = load i64, i64* %18, align 8, !dbg !3151, !tbaa !3152
  %33 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %31, i64 %32) #11, !dbg !3153
  %34 = icmp eq i64 %33, -1, !dbg !3154
  br i1 %34, label %71, label %35, !dbg !3155

; <label>:35:                                     ; preds = %29
  %36 = getelementptr inbounds %struct.streamConsumer, %struct.streamConsumer* %30, i64 0, i32 0, !dbg !3156
  %37 = load i64, i64* %36, align 8, !dbg !3156, !tbaa !3158
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #4, !dbg !3163
  store i64 %37, i64* %3, align 8, !dbg !3164, !tbaa !682
  br i1 %20, label %61, label %38, !dbg !3169

; <label>:38:                                     ; preds = %35, %53
  %39 = phi i64 [ %55, %53 ], [ 8, %35 ]
  %40 = phi i8* [ %54, %53 ], [ %19, %35 ]
  %41 = load i64, i64* %21, align 8, !dbg !3173, !tbaa !506
  %42 = icmp ne i64 %41, 0, !dbg !3174
  %43 = icmp ult i64 %41, %39, !dbg !3175
  %44 = and i1 %42, %43, !dbg !3176
  %45 = select i1 %44, i64 %41, i64 %39, !dbg !3176
  %46 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !3178, !tbaa !520
  %47 = icmp eq void (%struct._rio*, i8*, i64)* %46, null, !dbg !3179
  br i1 %47, label %49, label %48, !dbg !3180

; <label>:48:                                     ; preds = %38
  call void %46(%struct._rio* nonnull %0, i8* %40, i64 %45) #9, !dbg !3181
  br label %49, !dbg !3181

; <label>:49:                                     ; preds = %48, %38
  %50 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %23, align 8, !dbg !3182, !tbaa !584
  %51 = call i64 %50(%struct._rio* nonnull %0, i8* %40, i64 %45) #9, !dbg !3183
  %52 = icmp eq i64 %51, 0, !dbg !3184
  br i1 %52, label %60, label %53, !dbg !3185

; <label>:53:                                     ; preds = %49
  %54 = getelementptr inbounds i8, i8* %40, i64 %45, !dbg !3186
  %55 = sub i64 %39, %45, !dbg !3187
  %56 = load i64, i64* %24, align 8, !dbg !3188, !tbaa !527
  %57 = add i64 %56, %45, !dbg !3188
  store i64 %57, i64* %24, align 8, !dbg !3188, !tbaa !527
  %58 = icmp eq i64 %55, 0, !dbg !3189
  br i1 %58, label %59, label %38, !dbg !3189

; <label>:59:                                     ; preds = %53
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3190
  br label %61, !dbg !3191

; <label>:60:                                     ; preds = %49
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3190
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4, !dbg !3193
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3194
  br label %71, !dbg !3195

; <label>:61:                                     ; preds = %35, %59
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4, !dbg !3193
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3194
  %62 = getelementptr inbounds %struct.streamConsumer, %struct.streamConsumer* %30, i64 0, i32 2, !dbg !3196
  %63 = load %struct.rax*, %struct.rax** %62, align 8, !dbg !3196, !tbaa !3198
  %64 = call i64 @rdbSaveStreamPEL(%struct._rio* %0, %struct.rax* %63, i32 0) #11, !dbg !3199
  %65 = icmp eq i64 %64, -1, !dbg !3200
  %66 = select i1 %65, i64 0, i64 %64, !dbg !3201
  %67 = add i64 %26, 8, !dbg !3202
  %68 = add i64 %67, %33, !dbg !3203
  %69 = add i64 %68, %66, !dbg !3201
  br i1 %65, label %71, label %25, !llvm.loop !3204

; <label>:70:                                     ; preds = %25
  call void @raxStop(%struct.raxIterator* nonnull %4) #9, !dbg !3206
  br label %71, !dbg !3207

; <label>:71:                                     ; preds = %61, %29, %60, %70
  %72 = phi i64 [ %26, %70 ], [ -1, %60 ], [ -1, %29 ], [ -1, %61 ], !dbg !3208
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %12) #4, !dbg !3209
  br label %73

; <label>:73:                                     ; preds = %2, %71
  %74 = phi i64 [ %72, %71 ], [ -1, %2 ], !dbg !3210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3209
  ret i64 %74, !dbg !3209
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveObject(%struct._rio*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #6 !dbg !3211 {
  %4 = alloca double, align 8
  %5 = alloca [2 x i8], align 1
  %6 = alloca i8*, align 8
  %7 = alloca %struct.raxIterator, align 8
  %8 = alloca %struct.RedisModuleIO, align 8
  %9 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !3446
  %10 = load i32, i32* %9, align 8, !dbg !3446
  %11 = trunc i32 %10 to i4, !dbg !3447
  switch i4 %11, label %514 [
    i4 0, label %12
    i4 1, label %15
    i4 2, label %63
    i4 3, label %132
    i4 4, label %232
    i4 6, label %334
    i4 5, label %445
  ], !dbg !3447

; <label>:12:                                     ; preds = %3
  %13 = tail call i64 @rdbSaveStringObject(%struct._rio* %0, %struct.redisObject* nonnull %1) #11, !dbg !3448
  %14 = icmp eq i64 %13, -1, !dbg !3451
  br i1 %14, label %517, label %515, !dbg !3452

; <label>:15:                                     ; preds = %3
  %16 = and i32 %10, 240, !dbg !3453
  %17 = icmp eq i32 %16, 144, !dbg !3454
  br i1 %17, label %18, label %62, !dbg !3455

; <label>:18:                                     ; preds = %15
  %19 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3456
  %20 = bitcast i8** %19 to %struct.quicklist**, !dbg !3456
  %21 = load %struct.quicklist*, %struct.quicklist** %20, align 8, !dbg !3456, !tbaa !2002
  %22 = getelementptr inbounds %struct.quicklist, %struct.quicklist* %21, i64 0, i32 0, !dbg !3458
  %23 = load %struct.quicklistNode*, %struct.quicklistNode** %22, align 8, !dbg !3458, !tbaa !3459
  %24 = getelementptr inbounds %struct.quicklist, %struct.quicklist* %21, i64 0, i32 3, !dbg !3462
  %25 = load i64, i64* %24, align 8, !dbg !3462, !tbaa !3464
  %26 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %25) #11, !dbg !3465
  %27 = icmp eq i32 %26, -1, !dbg !3466
  br i1 %27, label %517, label %28, !dbg !3467

; <label>:28:                                     ; preds = %18
  %29 = sext i32 %26 to i64, !dbg !3465
  %30 = icmp eq %struct.quicklistNode* %23, null, !dbg !3468
  br i1 %30, label %515, label %31, !dbg !3468

; <label>:31:                                     ; preds = %28
  %32 = bitcast i8** %6 to i8*
  br label %33, !dbg !3468

; <label>:33:                                     ; preds = %31, %56
  %34 = phi i64 [ %29, %31 ], [ %58, %56 ]
  %35 = phi %struct.quicklistNode* [ %23, %31 ], [ %60, %56 ]
  %36 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %35, i64 0, i32 4, !dbg !3469
  %37 = load i32, i32* %36, align 4, !dbg !3469
  %38 = and i32 %37, 196608, !dbg !3469
  %39 = icmp eq i32 %38, 131072, !dbg !3469
  br i1 %39, label %40, label %48, !dbg !3470

; <label>:40:                                     ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #4, !dbg !3471
  %41 = call i64 @quicklistGetLzf(%struct.quicklistNode* nonnull %35, i8** nonnull %6) #9, !dbg !3473
  %42 = load i8*, i8** %6, align 8, !dbg !3475, !tbaa !200
  %43 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %35, i64 0, i32 3, !dbg !3477
  %44 = load i32, i32* %43, align 8, !dbg !3477, !tbaa !3478
  %45 = zext i32 %44 to i64, !dbg !3480
  %46 = call i64 @rdbSaveLzfBlob(%struct._rio* %0, i8* %42, i64 %41, i64 %45) #11, !dbg !3481
  %47 = icmp eq i64 %46, -1, !dbg !3482
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #4, !dbg !3483
  br i1 %47, label %517, label %56

; <label>:48:                                     ; preds = %33
  %49 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %35, i64 0, i32 2, !dbg !3484
  %50 = load i8*, i8** %49, align 8, !dbg !3484, !tbaa !3487
  %51 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %35, i64 0, i32 3, !dbg !3488
  %52 = load i32, i32* %51, align 8, !dbg !3488, !tbaa !3478
  %53 = zext i32 %52 to i64, !dbg !3489
  %54 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %50, i64 %53) #11, !dbg !3490
  %55 = icmp eq i64 %54, -1, !dbg !3491
  br i1 %55, label %517, label %56, !dbg !3492

; <label>:56:                                     ; preds = %48, %40
  %57 = phi i64 [ %46, %40 ], [ %54, %48 ]
  %58 = add nsw i64 %57, %34, !dbg !3493
  %59 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %35, i64 0, i32 1, !dbg !3494
  %60 = load %struct.quicklistNode*, %struct.quicklistNode** %59, align 8, !dbg !3494, !tbaa !3495
  %61 = icmp eq %struct.quicklistNode* %60, null, !dbg !3468
  br i1 %61, label %515, label %33, !dbg !3468, !llvm.loop !3496

; <label>:62:                                     ; preds = %15
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 783, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !3498
  tail call void @_exit(i32 1) #10, !dbg !3498
  unreachable, !dbg !3498

; <label>:63:                                     ; preds = %3
  %64 = lshr i32 %10, 4, !dbg !3500
  %65 = trunc i32 %64 to i4, !dbg !3501
  switch i4 %65, label %131 [
    i4 2, label %66
    i4 6, label %123
  ], !dbg !3501

; <label>:66:                                     ; preds = %63
  %67 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3502
  %68 = bitcast i8** %67 to %struct.dict**, !dbg !3502
  %69 = load %struct.dict*, %struct.dict** %68, align 8, !dbg !3502, !tbaa !2002
  %70 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %69) #9, !dbg !3504
  %71 = getelementptr inbounds %struct.dict, %struct.dict* %69, i64 0, i32 2, i64 0, i32 3, !dbg !3506
  %72 = load i64, i64* %71, align 8, !dbg !3506, !tbaa !3508
  %73 = getelementptr inbounds %struct.dict, %struct.dict* %69, i64 0, i32 2, i64 1, i32 3, !dbg !3506
  %74 = load i64, i64* %73, align 8, !dbg !3506, !tbaa !3508
  %75 = add i64 %74, %72, !dbg !3506
  %76 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %75) #11, !dbg !3510
  %77 = icmp eq i32 %76, -1, !dbg !3511
  br i1 %77, label %78, label %79, !dbg !3512

; <label>:78:                                     ; preds = %66
  tail call void @dictReleaseIterator(%struct.dictIterator* %70) #9, !dbg !3513
  br label %517, !dbg !3515

; <label>:79:                                     ; preds = %66
  %80 = sext i32 %76 to i64, !dbg !3510
  %81 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %70) #9, !dbg !3516
  %82 = icmp eq %struct.dictEntry* %81, null, !dbg !3518
  br i1 %82, label %121, label %86, !dbg !3519

; <label>:83:                                     ; preds = %115
  %84 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %70) #9, !dbg !3516
  %85 = icmp eq %struct.dictEntry* %84, null, !dbg !3518
  br i1 %85, label %121, label %86, !dbg !3519

; <label>:86:                                     ; preds = %79, %83
  %87 = phi %struct.dictEntry* [ %84, %83 ], [ %81, %79 ]
  %88 = phi i64 [ %119, %83 ], [ %80, %79 ]
  %89 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %87, i64 0, i32 0, !dbg !3520
  %90 = load i8*, i8** %89, align 8, !dbg !3520, !tbaa !3521
  %91 = getelementptr inbounds i8, i8* %90, i64 -1, !dbg !3527
  %92 = load i8, i8* %91, align 1, !dbg !3527, !tbaa !540
  %93 = trunc i8 %92 to i3, !dbg !3529
  switch i3 %93, label %115 [
    i3 0, label %94
    i3 1, label %97
    i3 2, label %101
    i3 3, label %106
    i3 -4, label %111
  ], !dbg !3529

; <label>:94:                                     ; preds = %86
  %95 = lshr i8 %92, 3, !dbg !3530
  %96 = zext i8 %95 to i64, !dbg !3530
  br label %115, !dbg !3531

; <label>:97:                                     ; preds = %86
  %98 = getelementptr inbounds i8, i8* %90, i64 -3, !dbg !3532
  %99 = load i8, i8* %98, align 1, !dbg !3533, !tbaa !540
  %100 = zext i8 %99 to i64, !dbg !3532
  br label %115, !dbg !3534

; <label>:101:                                    ; preds = %86
  %102 = getelementptr inbounds i8, i8* %90, i64 -5, !dbg !3535
  %103 = bitcast i8* %102 to i16*, !dbg !3536
  %104 = load i16, i16* %103, align 1, !dbg !3536, !tbaa !2029
  %105 = zext i16 %104 to i64, !dbg !3535
  br label %115, !dbg !3537

; <label>:106:                                    ; preds = %86
  %107 = getelementptr inbounds i8, i8* %90, i64 -9, !dbg !3538
  %108 = bitcast i8* %107 to i32*, !dbg !3539
  %109 = load i32, i32* %108, align 1, !dbg !3539, !tbaa !191
  %110 = zext i32 %109 to i64, !dbg !3538
  br label %115, !dbg !3540

; <label>:111:                                    ; preds = %86
  %112 = getelementptr inbounds i8, i8* %90, i64 -17, !dbg !3541
  %113 = bitcast i8* %112 to i64*, !dbg !3542
  %114 = load i64, i64* %113, align 1, !dbg !3542, !tbaa !682
  br label %115, !dbg !3543

; <label>:115:                                    ; preds = %86, %94, %97, %101, %106, %111
  %116 = phi i64 [ %114, %111 ], [ %110, %106 ], [ %105, %101 ], [ %100, %97 ], [ %96, %94 ], [ 0, %86 ], !dbg !3544
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3545
  %117 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %90, i64 %116) #11, !dbg !3546
  %118 = icmp eq i64 %117, -1, !dbg !3547
  %119 = add nsw i64 %117, %88, !dbg !3548
  br i1 %118, label %120, label %83, !dbg !3549

; <label>:120:                                    ; preds = %115
  tail call void @dictReleaseIterator(%struct.dictIterator* %70) #9, !dbg !3550
  br label %517

; <label>:121:                                    ; preds = %83, %79
  %122 = phi i64 [ %80, %79 ], [ %119, %83 ], !dbg !3552
  tail call void @dictReleaseIterator(%struct.dictIterator* %70) #9, !dbg !3553
  br label %515

; <label>:123:                                    ; preds = %63
  %124 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3554
  %125 = bitcast i8** %124 to %struct.intset**, !dbg !3554
  %126 = load %struct.intset*, %struct.intset** %125, align 8, !dbg !3554, !tbaa !2002
  %127 = tail call i64 @intsetBlobLen(%struct.intset* %126) #9, !dbg !3555
  %128 = load i8*, i8** %124, align 8, !dbg !3557, !tbaa !2002
  %129 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %128, i64 %127) #11, !dbg !3559
  %130 = icmp eq i64 %129, -1, !dbg !3560
  br i1 %130, label %517, label %515

; <label>:131:                                    ; preds = %63
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 815, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !3561
  tail call void @_exit(i32 1) #10, !dbg !3561
  unreachable, !dbg !3561

; <label>:132:                                    ; preds = %3
  %133 = lshr i32 %10, 4, !dbg !3563
  %134 = trunc i32 %133 to i4, !dbg !3564
  switch i4 %134, label %231 [
    i4 5, label %135
    i4 7, label %142
  ], !dbg !3564

; <label>:135:                                    ; preds = %132
  %136 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3565
  %137 = load i8*, i8** %136, align 8, !dbg !3565, !tbaa !2002
  %138 = tail call i64 @ziplistBlobLen(i8* %137) #9, !dbg !3566
  %139 = load i8*, i8** %136, align 8, !dbg !3568, !tbaa !2002
  %140 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %139, i64 %138) #11, !dbg !3570
  %141 = icmp eq i64 %140, -1, !dbg !3571
  br i1 %141, label %517, label %515

; <label>:142:                                    ; preds = %132
  %143 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3572
  %144 = bitcast i8** %143 to %struct.zset**, !dbg !3572
  %145 = load %struct.zset*, %struct.zset** %144, align 8, !dbg !3572, !tbaa !2002
  %146 = getelementptr inbounds %struct.zset, %struct.zset* %145, i64 0, i32 1, !dbg !3574
  %147 = load %struct.zskiplist*, %struct.zskiplist** %146, align 8, !dbg !3574, !tbaa !3575
  %148 = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %147, i64 0, i32 2, !dbg !3578
  %149 = load i64, i64* %148, align 8, !dbg !3578, !tbaa !3580
  %150 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %149) #11, !dbg !3582
  %151 = icmp eq i32 %150, -1, !dbg !3583
  br i1 %151, label %517, label %152, !dbg !3584

; <label>:152:                                    ; preds = %142
  %153 = sext i32 %150 to i64, !dbg !3582
  %154 = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %147, i64 0, i32 1, !dbg !3585
  %155 = load %struct.zskiplistNode*, %struct.zskiplistNode** %154, align 8, !dbg !3587, !tbaa !200
  %156 = icmp eq %struct.zskiplistNode* %155, null, !dbg !3589
  br i1 %156, label %515, label %157, !dbg !3590

; <label>:157:                                    ; preds = %152
  %158 = bitcast double* %4 to i8*
  %159 = bitcast double* %4 to i64*
  %160 = icmp eq %struct._rio* %0, null
  %161 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %162 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %163 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %164 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %165, !dbg !3590

; <label>:165:                                    ; preds = %157, %225
  %166 = phi %struct.zskiplistNode* [ %155, %157 ], [ %229, %225 ]
  %167 = phi i64 [ %153, %157 ], [ %227, %225 ]
  %168 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %166, i64 0, i32 0, !dbg !3591
  %169 = load i8*, i8** %168, align 8, !dbg !3591, !tbaa !200
  %170 = getelementptr inbounds i8, i8* %169, i64 -1, !dbg !3595
  %171 = load i8, i8* %170, align 1, !dbg !3595, !tbaa !540
  %172 = trunc i8 %171 to i3, !dbg !3597
  switch i3 %172, label %194 [
    i3 0, label %173
    i3 1, label %176
    i3 2, label %180
    i3 3, label %185
    i3 -4, label %190
  ], !dbg !3597

; <label>:173:                                    ; preds = %165
  %174 = lshr i8 %171, 3, !dbg !3598
  %175 = zext i8 %174 to i64, !dbg !3598
  br label %194, !dbg !3599

; <label>:176:                                    ; preds = %165
  %177 = getelementptr inbounds i8, i8* %169, i64 -3, !dbg !3600
  %178 = load i8, i8* %177, align 1, !dbg !3601, !tbaa !540
  %179 = zext i8 %178 to i64, !dbg !3600
  br label %194, !dbg !3602

; <label>:180:                                    ; preds = %165
  %181 = getelementptr inbounds i8, i8* %169, i64 -5, !dbg !3603
  %182 = bitcast i8* %181 to i16*, !dbg !3604
  %183 = load i16, i16* %182, align 1, !dbg !3604, !tbaa !2029
  %184 = zext i16 %183 to i64, !dbg !3603
  br label %194, !dbg !3605

; <label>:185:                                    ; preds = %165
  %186 = getelementptr inbounds i8, i8* %169, i64 -9, !dbg !3606
  %187 = bitcast i8* %186 to i32*, !dbg !3607
  %188 = load i32, i32* %187, align 1, !dbg !3607, !tbaa !191
  %189 = zext i32 %188 to i64, !dbg !3606
  br label %194, !dbg !3608

; <label>:190:                                    ; preds = %165
  %191 = getelementptr inbounds i8, i8* %169, i64 -17, !dbg !3609
  %192 = bitcast i8* %191 to i64*, !dbg !3610
  %193 = load i64, i64* %192, align 1, !dbg !3610, !tbaa !682
  br label %194, !dbg !3611

; <label>:194:                                    ; preds = %165, %173, %176, %180, %185, %190
  %195 = phi i64 [ %193, %190 ], [ %189, %185 ], [ %184, %180 ], [ %179, %176 ], [ %175, %173 ], [ 0, %165 ], !dbg !3612
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3613
  %196 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %169, i64 %195) #11, !dbg !3614
  %197 = icmp eq i64 %196, -1, !dbg !3615
  br i1 %197, label %517, label %198, !dbg !3616

; <label>:198:                                    ; preds = %194
  %199 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %166, i64 0, i32 1, !dbg !3617
  %200 = bitcast double* %199 to i64*, !dbg !3617
  %201 = load i64, i64* %200, align 8, !dbg !3617, !tbaa !2309
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158), !dbg !3619
  store i64 %201, i64* %159, align 8, !tbaa !2309
  br i1 %160, label %225, label %202, !dbg !3625

; <label>:202:                                    ; preds = %198, %217
  %203 = phi i64 [ %219, %217 ], [ 8, %198 ]
  %204 = phi i8* [ %218, %217 ], [ %158, %198 ]
  %205 = load i64, i64* %161, align 8, !dbg !3629, !tbaa !506
  %206 = icmp ne i64 %205, 0, !dbg !3630
  %207 = icmp ult i64 %205, %203, !dbg !3631
  %208 = and i1 %206, %207, !dbg !3632
  %209 = select i1 %208, i64 %205, i64 %203, !dbg !3632
  %210 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %162, align 8, !dbg !3634, !tbaa !520
  %211 = icmp eq void (%struct._rio*, i8*, i64)* %210, null, !dbg !3635
  br i1 %211, label %213, label %212, !dbg !3636

; <label>:212:                                    ; preds = %202
  call void %210(%struct._rio* nonnull %0, i8* %204, i64 %209) #9, !dbg !3637
  br label %213, !dbg !3637

; <label>:213:                                    ; preds = %212, %202
  %214 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %163, align 8, !dbg !3638, !tbaa !584
  %215 = call i64 %214(%struct._rio* nonnull %0, i8* %204, i64 %209) #9, !dbg !3639
  %216 = icmp eq i64 %215, 0, !dbg !3640
  br i1 %216, label %224, label %217, !dbg !3641

; <label>:217:                                    ; preds = %213
  %218 = getelementptr inbounds i8, i8* %204, i64 %209, !dbg !3642
  %219 = sub i64 %203, %209, !dbg !3643
  %220 = load i64, i64* %164, align 8, !dbg !3644, !tbaa !527
  %221 = add i64 %220, %209, !dbg !3644
  store i64 %221, i64* %164, align 8, !dbg !3644, !tbaa !527
  %222 = icmp eq i64 %219, 0, !dbg !3645
  br i1 %222, label %223, label %202, !dbg !3645

; <label>:223:                                    ; preds = %217
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3646
  br label %225, !dbg !3647

; <label>:224:                                    ; preds = %213
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3646
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3648
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3649
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158), !dbg !3649
  br label %517, !dbg !3650

; <label>:225:                                    ; preds = %223, %198
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3648
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3649
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158), !dbg !3649
  %226 = add i64 %167, 8, !dbg !3651
  %227 = add i64 %226, %196, !dbg !3652
  %228 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %166, i64 0, i32 2, !dbg !3653
  %229 = load %struct.zskiplistNode*, %struct.zskiplistNode** %228, align 8, !dbg !3587, !tbaa !200
  %230 = icmp eq %struct.zskiplistNode* %229, null, !dbg !3589
  br i1 %230, label %515, label %165, !dbg !3590, !llvm.loop !3654

; <label>:231:                                    ; preds = %132
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !3656
  tail call void @_exit(i32 1) #10, !dbg !3656
  unreachable, !dbg !3656

; <label>:232:                                    ; preds = %3
  %233 = lshr i32 %10, 4, !dbg !3658
  %234 = trunc i32 %233 to i4, !dbg !3659
  switch i4 %234, label %333 [
    i4 5, label %235
    i4 2, label %242
  ], !dbg !3659

; <label>:235:                                    ; preds = %232
  %236 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3660
  %237 = load i8*, i8** %236, align 8, !dbg !3660, !tbaa !2002
  %238 = tail call i64 @ziplistBlobLen(i8* %237) #9, !dbg !3661
  %239 = load i8*, i8** %236, align 8, !dbg !3663, !tbaa !2002
  %240 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %239, i64 %238) #11, !dbg !3665
  %241 = icmp eq i64 %240, -1, !dbg !3666
  br i1 %241, label %517, label %515

; <label>:242:                                    ; preds = %232
  %243 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3667
  %244 = bitcast i8** %243 to %struct.dict**, !dbg !3667
  %245 = load %struct.dict*, %struct.dict** %244, align 8, !dbg !3667, !tbaa !2002
  %246 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %245) #9, !dbg !3668
  %247 = load %struct.dict*, %struct.dict** %244, align 8, !dbg !3670, !tbaa !2002
  %248 = getelementptr inbounds %struct.dict, %struct.dict* %247, i64 0, i32 2, i64 0, i32 3, !dbg !3670
  %249 = load i64, i64* %248, align 8, !dbg !3670, !tbaa !3508
  %250 = getelementptr inbounds %struct.dict, %struct.dict* %247, i64 0, i32 2, i64 1, i32 3, !dbg !3670
  %251 = load i64, i64* %250, align 8, !dbg !3670, !tbaa !3508
  %252 = add i64 %251, %249, !dbg !3670
  %253 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %252) #11, !dbg !3672
  %254 = icmp eq i32 %253, -1, !dbg !3673
  br i1 %254, label %255, label %256, !dbg !3674

; <label>:255:                                    ; preds = %242
  tail call void @dictReleaseIterator(%struct.dictIterator* %246) #9, !dbg !3675
  br label %517, !dbg !3677

; <label>:256:                                    ; preds = %242
  %257 = sext i32 %253 to i64, !dbg !3672
  %258 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %246) #9, !dbg !3678
  %259 = icmp eq %struct.dictEntry* %258, null, !dbg !3680
  br i1 %259, label %331, label %263, !dbg !3681

; <label>:260:                                    ; preds = %325
  %261 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %246) #9, !dbg !3678
  %262 = icmp eq %struct.dictEntry* %261, null, !dbg !3680
  br i1 %262, label %331, label %263, !dbg !3681

; <label>:263:                                    ; preds = %256, %260
  %264 = phi %struct.dictEntry* [ %261, %260 ], [ %258, %256 ]
  %265 = phi i64 [ %329, %260 ], [ %257, %256 ]
  %266 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %264, i64 0, i32 0, !dbg !3682
  %267 = load i8*, i8** %266, align 8, !dbg !3682, !tbaa !3521
  %268 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %264, i64 0, i32 1, i32 0, !dbg !3684
  %269 = load i8*, i8** %268, align 8, !dbg !3684, !tbaa !540
  %270 = getelementptr inbounds i8, i8* %267, i64 -1, !dbg !3689
  %271 = load i8, i8* %270, align 1, !dbg !3689, !tbaa !540
  %272 = trunc i8 %271 to i3, !dbg !3691
  switch i3 %272, label %294 [
    i3 0, label %273
    i3 1, label %276
    i3 2, label %280
    i3 3, label %285
    i3 -4, label %290
  ], !dbg !3691

; <label>:273:                                    ; preds = %263
  %274 = lshr i8 %271, 3, !dbg !3692
  %275 = zext i8 %274 to i64, !dbg !3692
  br label %294, !dbg !3693

; <label>:276:                                    ; preds = %263
  %277 = getelementptr inbounds i8, i8* %267, i64 -3, !dbg !3694
  %278 = load i8, i8* %277, align 1, !dbg !3695, !tbaa !540
  %279 = zext i8 %278 to i64, !dbg !3694
  br label %294, !dbg !3696

; <label>:280:                                    ; preds = %263
  %281 = getelementptr inbounds i8, i8* %267, i64 -5, !dbg !3697
  %282 = bitcast i8* %281 to i16*, !dbg !3698
  %283 = load i16, i16* %282, align 1, !dbg !3698, !tbaa !2029
  %284 = zext i16 %283 to i64, !dbg !3697
  br label %294, !dbg !3699

; <label>:285:                                    ; preds = %263
  %286 = getelementptr inbounds i8, i8* %267, i64 -9, !dbg !3700
  %287 = bitcast i8* %286 to i32*, !dbg !3701
  %288 = load i32, i32* %287, align 1, !dbg !3701, !tbaa !191
  %289 = zext i32 %288 to i64, !dbg !3700
  br label %294, !dbg !3702

; <label>:290:                                    ; preds = %263
  %291 = getelementptr inbounds i8, i8* %267, i64 -17, !dbg !3703
  %292 = bitcast i8* %291 to i64*, !dbg !3704
  %293 = load i64, i64* %292, align 1, !dbg !3704, !tbaa !682
  br label %294, !dbg !3705

; <label>:294:                                    ; preds = %263, %273, %276, %280, %285, %290
  %295 = phi i64 [ %293, %290 ], [ %289, %285 ], [ %284, %280 ], [ %279, %276 ], [ %275, %273 ], [ 0, %263 ], !dbg !3706
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3707
  %296 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %267, i64 %295) #11, !dbg !3708
  %297 = icmp eq i64 %296, -1, !dbg !3709
  br i1 %297, label %298, label %299, !dbg !3710

; <label>:298:                                    ; preds = %294
  tail call void @dictReleaseIterator(%struct.dictIterator* %246) #9, !dbg !3711
  br label %517, !dbg !3713

; <label>:299:                                    ; preds = %294
  %300 = add nsw i64 %296, %265, !dbg !3714
  %301 = getelementptr inbounds i8, i8* %269, i64 -1, !dbg !3718
  %302 = load i8, i8* %301, align 1, !dbg !3718, !tbaa !540
  %303 = trunc i8 %302 to i3, !dbg !3720
  switch i3 %303, label %325 [
    i3 0, label %304
    i3 1, label %307
    i3 2, label %311
    i3 3, label %316
    i3 -4, label %321
  ], !dbg !3720

; <label>:304:                                    ; preds = %299
  %305 = lshr i8 %302, 3, !dbg !3721
  %306 = zext i8 %305 to i64, !dbg !3721
  br label %325, !dbg !3722

; <label>:307:                                    ; preds = %299
  %308 = getelementptr inbounds i8, i8* %269, i64 -3, !dbg !3723
  %309 = load i8, i8* %308, align 1, !dbg !3724, !tbaa !540
  %310 = zext i8 %309 to i64, !dbg !3723
  br label %325, !dbg !3725

; <label>:311:                                    ; preds = %299
  %312 = getelementptr inbounds i8, i8* %269, i64 -5, !dbg !3726
  %313 = bitcast i8* %312 to i16*, !dbg !3727
  %314 = load i16, i16* %313, align 1, !dbg !3727, !tbaa !2029
  %315 = zext i16 %314 to i64, !dbg !3726
  br label %325, !dbg !3728

; <label>:316:                                    ; preds = %299
  %317 = getelementptr inbounds i8, i8* %269, i64 -9, !dbg !3729
  %318 = bitcast i8* %317 to i32*, !dbg !3730
  %319 = load i32, i32* %318, align 1, !dbg !3730, !tbaa !191
  %320 = zext i32 %319 to i64, !dbg !3729
  br label %325, !dbg !3731

; <label>:321:                                    ; preds = %299
  %322 = getelementptr inbounds i8, i8* %269, i64 -17, !dbg !3732
  %323 = bitcast i8* %322 to i64*, !dbg !3733
  %324 = load i64, i64* %323, align 1, !dbg !3733, !tbaa !682
  br label %325, !dbg !3734

; <label>:325:                                    ; preds = %299, %304, %307, %311, %316, %321
  %326 = phi i64 [ %324, %321 ], [ %320, %316 ], [ %315, %311 ], [ %310, %307 ], [ %306, %304 ], [ 0, %299 ], !dbg !3735
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3736
  %327 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* nonnull %269, i64 %326) #11, !dbg !3737
  %328 = icmp eq i64 %327, -1, !dbg !3738
  %329 = add nsw i64 %300, %327, !dbg !3739
  br i1 %328, label %330, label %260, !dbg !3740

; <label>:330:                                    ; preds = %325
  tail call void @dictReleaseIterator(%struct.dictIterator* %246) #9, !dbg !3741
  br label %517, !dbg !3743

; <label>:331:                                    ; preds = %260, %256
  %332 = phi i64 [ %257, %256 ], [ %329, %260 ], !dbg !3744
  tail call void @dictReleaseIterator(%struct.dictIterator* %246) #9, !dbg !3745
  br label %515

; <label>:333:                                    ; preds = %232
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 892, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !3746
  tail call void @_exit(i32 1) #10, !dbg !3746
  unreachable, !dbg !3746

; <label>:334:                                    ; preds = %3
  %335 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3748
  %336 = bitcast i8** %335 to %struct.stream**, !dbg !3748
  %337 = load %struct.stream*, %struct.stream** %336, align 8, !dbg !3748, !tbaa !2002
  %338 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 0, !dbg !3750
  %339 = load %struct.rax*, %struct.rax** %338, align 8, !dbg !3750, !tbaa !3751
  %340 = tail call i64 @raxSize(%struct.rax* %339) #9, !dbg !3754
  %341 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %340) #11, !dbg !3756
  %342 = icmp eq i32 %341, -1, !dbg !3757
  br i1 %342, label %517, label %343, !dbg !3758

; <label>:343:                                    ; preds = %334
  %344 = sext i32 %341 to i64, !dbg !3756
  %345 = bitcast %struct.raxIterator* %7 to i8*, !dbg !3759
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %345) #4, !dbg !3759
  call void @raxStart(%struct.raxIterator* nonnull %7, %struct.rax* %339) #9, !dbg !3761
  %346 = call i32 @raxSeek(%struct.raxIterator* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0) #9, !dbg !3762
  %347 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %7, i64 0, i32 3
  %348 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %7, i64 0, i32 2
  %349 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %7, i64 0, i32 4
  br label %350, !dbg !3763

; <label>:350:                                    ; preds = %361, %343
  %351 = phi i64 [ %344, %343 ], [ %366, %361 ], !dbg !3764
  %352 = call i32 @raxNext(%struct.raxIterator* nonnull %7) #9, !dbg !3765
  %353 = icmp eq i32 %352, 0, !dbg !3763
  br i1 %353, label %367, label %354, !dbg !3763

; <label>:354:                                    ; preds = %350
  %355 = load i8*, i8** %347, align 8, !dbg !3766, !tbaa !3045
  %356 = call i32 @lpBytes(i8* %355) #9, !dbg !3768
  %357 = load i8*, i8** %348, align 8, !dbg !3769, !tbaa !3013
  %358 = load i64, i64* %349, align 8, !dbg !3771, !tbaa !3152
  %359 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %357, i64 %358) #11, !dbg !3772
  %360 = icmp eq i64 %359, -1, !dbg !3773
  br i1 %360, label %442, label %361, !dbg !3774

; <label>:361:                                    ; preds = %354
  %362 = zext i32 %356 to i64, !dbg !3768
  %363 = add nsw i64 %359, %351, !dbg !3776
  %364 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %355, i64 %362) #11, !dbg !3777
  %365 = icmp eq i64 %364, -1, !dbg !3779
  %366 = add nsw i64 %363, %364, !dbg !3780
  br i1 %365, label %442, label %350

; <label>:367:                                    ; preds = %350
  call void @raxStop(%struct.raxIterator* nonnull %7) #9, !dbg !3781
  %368 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 1, !dbg !3782
  %369 = load i64, i64* %368, align 8, !dbg !3782, !tbaa !3784
  %370 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %369) #11, !dbg !3785
  %371 = icmp eq i32 %370, -1, !dbg !3786
  br i1 %371, label %442, label %372, !dbg !3787

; <label>:372:                                    ; preds = %367
  %373 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 2, i32 0, !dbg !3788
  %374 = load i64, i64* %373, align 8, !dbg !3788, !tbaa !3790
  %375 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %374) #11, !dbg !3791
  %376 = icmp eq i32 %375, -1, !dbg !3792
  br i1 %376, label %442, label %377, !dbg !3793

; <label>:377:                                    ; preds = %372
  %378 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 2, i32 1, !dbg !3794
  %379 = load i64, i64* %378, align 8, !dbg !3794, !tbaa !3796
  %380 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %379) #11, !dbg !3797
  %381 = icmp eq i32 %380, -1, !dbg !3798
  br i1 %381, label %442, label %382, !dbg !3799

; <label>:382:                                    ; preds = %377
  %383 = sext i32 %370 to i64, !dbg !3785
  %384 = add nsw i64 %351, %383, !dbg !3800
  %385 = sext i32 %375 to i64, !dbg !3791
  %386 = add nsw i64 %384, %385, !dbg !3801
  %387 = sext i32 %380 to i64, !dbg !3797
  %388 = add nsw i64 %386, %387, !dbg !3802
  %389 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 3, !dbg !3803
  %390 = load %struct.rax*, %struct.rax** %389, align 8, !dbg !3803, !tbaa !3804
  %391 = icmp eq %struct.rax* %390, null, !dbg !3805
  br i1 %391, label %394, label %392, !dbg !3805

; <label>:392:                                    ; preds = %382
  %393 = call i64 @raxSize(%struct.rax* nonnull %390) #9, !dbg !3806
  br label %394, !dbg !3805

; <label>:394:                                    ; preds = %382, %392
  %395 = phi i64 [ %393, %392 ], [ 0, %382 ], !dbg !3805
  %396 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %395) #11, !dbg !3808
  %397 = icmp eq i32 %396, -1, !dbg !3810
  br i1 %397, label %442, label %398, !dbg !3811

; <label>:398:                                    ; preds = %394
  %399 = sext i32 %396 to i64, !dbg !3808
  %400 = add nsw i64 %388, %399, !dbg !3812
  %401 = icmp eq i64 %395, 0, !dbg !3813
  br i1 %401, label %443, label %402, !dbg !3814

; <label>:402:                                    ; preds = %398
  %403 = load %struct.rax*, %struct.rax** %389, align 8, !dbg !3815, !tbaa !3804
  call void @raxStart(%struct.raxIterator* nonnull %7, %struct.rax* %403) #9, !dbg !3816
  %404 = call i32 @raxSeek(%struct.raxIterator* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0) #9, !dbg !3817
  %405 = bitcast i8** %347 to %struct.streamCG**
  br label %406, !dbg !3818

; <label>:406:                                    ; preds = %431, %402
  %407 = phi i64 [ %400, %402 ], [ %440, %431 ], !dbg !3812
  %408 = call i32 @raxNext(%struct.raxIterator* nonnull %7) #9, !dbg !3819
  %409 = icmp eq i32 %408, 0, !dbg !3818
  br i1 %409, label %441, label %410, !dbg !3818

; <label>:410:                                    ; preds = %406
  %411 = load %struct.streamCG*, %struct.streamCG** %405, align 8, !dbg !3820, !tbaa !3045
  %412 = load i8*, i8** %348, align 8, !dbg !3822, !tbaa !3013
  %413 = load i64, i64* %349, align 8, !dbg !3824, !tbaa !3152
  %414 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %412, i64 %413) #11, !dbg !3825
  %415 = icmp eq i64 %414, -1, !dbg !3826
  br i1 %415, label %442, label %416, !dbg !3827

; <label>:416:                                    ; preds = %410
  %417 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %411, i64 0, i32 0, i32 0, !dbg !3828
  %418 = load i64, i64* %417, align 8, !dbg !3828, !tbaa !3830
  %419 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %418) #11, !dbg !3831
  %420 = icmp eq i32 %419, -1, !dbg !3832
  br i1 %420, label %442, label %421, !dbg !3833

; <label>:421:                                    ; preds = %416
  %422 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %411, i64 0, i32 0, i32 1, !dbg !3834
  %423 = load i64, i64* %422, align 8, !dbg !3834, !tbaa !3836
  %424 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %423) #11, !dbg !3837
  %425 = icmp eq i32 %424, -1, !dbg !3838
  br i1 %425, label %442, label %426, !dbg !3839

; <label>:426:                                    ; preds = %421
  %427 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %411, i64 0, i32 1, !dbg !3840
  %428 = load %struct.rax*, %struct.rax** %427, align 8, !dbg !3840, !tbaa !3842
  %429 = call i64 @rdbSaveStreamPEL(%struct._rio* %0, %struct.rax* %428, i32 1) #11, !dbg !3843
  %430 = icmp eq i64 %429, -1, !dbg !3844
  br i1 %430, label %442, label %431, !dbg !3845

; <label>:431:                                    ; preds = %426
  %432 = add nsw i64 %414, %407, !dbg !3846
  %433 = sext i32 %419 to i64, !dbg !3831
  %434 = add nsw i64 %432, %433, !dbg !3847
  %435 = sext i32 %424 to i64, !dbg !3837
  %436 = add nsw i64 %434, %435, !dbg !3848
  %437 = add nsw i64 %436, %429, !dbg !3849
  %438 = call i64 @rdbSaveStreamConsumers(%struct._rio* %0, %struct.streamCG* nonnull %411) #11, !dbg !3850
  %439 = icmp eq i64 %438, -1, !dbg !3852
  %440 = add nsw i64 %437, %438, !dbg !3853
  br i1 %439, label %442, label %406

; <label>:441:                                    ; preds = %406
  call void @raxStop(%struct.raxIterator* nonnull %7) #9, !dbg !3854
  br label %443, !dbg !3855

; <label>:442:                                    ; preds = %354, %361, %410, %416, %421, %426, %431, %367, %372, %377, %394
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %345) #4, !dbg !3856
  br label %517

; <label>:443:                                    ; preds = %441, %398
  %444 = phi i64 [ %407, %441 ], [ %400, %398 ], !dbg !3857
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %345) #4, !dbg !3856
  br label %515

; <label>:445:                                    ; preds = %3
  %446 = bitcast %struct.RedisModuleIO* %8 to i8*, !dbg !3858
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %446) #4, !dbg !3858
  %447 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3859
  %448 = bitcast i8** %447 to %struct.moduleValue**, !dbg !3859
  %449 = load %struct.moduleValue*, %struct.moduleValue** %448, align 8, !dbg !3859, !tbaa !2002
  %450 = getelementptr inbounds %struct.moduleValue, %struct.moduleValue* %449, i64 0, i32 0, !dbg !3861
  %451 = load %struct.RedisModuleType*, %struct.RedisModuleType** %450, align 8, !dbg !3861, !tbaa !3862
  %452 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %451, i64 0, i32 0, !dbg !3865
  %453 = load i64, i64* %452, align 8, !dbg !3865, !tbaa !3866
  %454 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %453) #11, !dbg !3868
  %455 = icmp eq i32 %454, -1, !dbg !3870
  br i1 %455, label %512, label %456, !dbg !3872

; <label>:456:                                    ; preds = %445
  %457 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %8, i64 0, i32 0, !dbg !3873
  %458 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %8, i64 0, i32 1, !dbg !3874
  store %struct._rio* %0, %struct._rio** %458, align 8, !dbg !3874, !tbaa !3876
  %459 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %8, i64 0, i32 2, !dbg !3874
  store %struct.RedisModuleType* %451, %struct.RedisModuleType** %459, align 8, !dbg !3874, !tbaa !3878
  store i64 0, i64* %457, align 8, !dbg !3874, !tbaa !3879
  %460 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %8, i64 0, i32 3, !dbg !3874
  store i32 0, i32* %460, align 8, !dbg !3874, !tbaa !3880
  %461 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %8, i64 0, i32 4, !dbg !3874
  store i32 0, i32* %461, align 4, !dbg !3874, !tbaa !3881
  %462 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %8, i64 0, i32 6, !dbg !3874
  store %struct.redisObject* %2, %struct.redisObject** %462, align 8, !dbg !3874, !tbaa !3882
  %463 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %8, i64 0, i32 5, !dbg !3874
  store %struct.RedisModuleCtx* null, %struct.RedisModuleCtx** %463, align 8, !dbg !3874, !tbaa !3883
  %464 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %451, i64 0, i32 3, !dbg !3884
  %465 = load void (%struct.RedisModuleIO*, i8*)*, void (%struct.RedisModuleIO*, i8*)** %464, align 8, !dbg !3884, !tbaa !3885
  %466 = getelementptr inbounds %struct.moduleValue, %struct.moduleValue* %449, i64 0, i32 1, !dbg !3886
  %467 = load i8*, i8** %466, align 8, !dbg !3886, !tbaa !3887
  call void %465(%struct.RedisModuleIO* nonnull %8, i8* %467) #9, !dbg !3889
  %468 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !3892
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %468) #4, !dbg !3892
  store i8 0, i8* %468, align 1, !dbg !3893, !tbaa !540
  %469 = icmp eq %struct._rio* %0, null, !dbg !3898
  br i1 %469, label %498, label %470, !dbg !3899

; <label>:470:                                    ; preds = %456
  %471 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %472 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %473 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %474 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %475, !dbg !3904

; <label>:475:                                    ; preds = %490, %470
  %476 = phi i64 [ 1, %470 ], [ %492, %490 ]
  %477 = phi i8* [ %468, %470 ], [ %491, %490 ]
  %478 = load i64, i64* %471, align 8, !dbg !3905, !tbaa !506
  %479 = icmp ne i64 %478, 0, !dbg !3906
  %480 = icmp ult i64 %478, %476, !dbg !3907
  %481 = and i1 %479, %480, !dbg !3908
  %482 = select i1 %481, i64 %478, i64 %476, !dbg !3908
  %483 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %472, align 8, !dbg !3910, !tbaa !520
  %484 = icmp eq void (%struct._rio*, i8*, i64)* %483, null, !dbg !3911
  br i1 %484, label %486, label %485, !dbg !3912

; <label>:485:                                    ; preds = %475
  call void %483(%struct._rio* nonnull %0, i8* %477, i64 %482) #9, !dbg !3913
  br label %486, !dbg !3913

; <label>:486:                                    ; preds = %485, %475
  %487 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %473, align 8, !dbg !3914, !tbaa !584
  %488 = call i64 %487(%struct._rio* nonnull %0, i8* %477, i64 %482) #9, !dbg !3915
  %489 = icmp eq i64 %488, 0, !dbg !3916
  br i1 %489, label %497, label %490, !dbg !3917

; <label>:490:                                    ; preds = %486
  %491 = getelementptr inbounds i8, i8* %477, i64 %482, !dbg !3918
  %492 = sub i64 %476, %482, !dbg !3919
  %493 = load i64, i64* %474, align 8, !dbg !3920, !tbaa !527
  %494 = add i64 %493, %482, !dbg !3920
  store i64 %494, i64* %474, align 8, !dbg !3920, !tbaa !527
  %495 = icmp eq i64 %492, 0, !dbg !3904
  br i1 %495, label %496, label %475, !dbg !3904

; <label>:496:                                    ; preds = %490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3921
  br label %498, !dbg !3922

; <label>:497:                                    ; preds = %486
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3921
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3923
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %468) #4, !dbg !3924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3924
  store i32 1, i32* %460, align 8, !dbg !3925, !tbaa !3880
  br label %501, !dbg !3927

; <label>:498:                                    ; preds = %496, %456
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3923
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %468) #4, !dbg !3924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3924
  %499 = load i64, i64* %457, align 8, !dbg !3928, !tbaa !3879
  %500 = add i64 %499, 1, !dbg !3928
  store i64 %500, i64* %457, align 8, !dbg !3928, !tbaa !3879
  br label %501

; <label>:501:                                    ; preds = %498, %497
  %502 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %463, align 8, !dbg !3929, !tbaa !3883
  %503 = icmp eq %struct.RedisModuleCtx* %502, null, !dbg !3931
  br i1 %503, label %507, label %504, !dbg !3932

; <label>:504:                                    ; preds = %501
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %502) #9, !dbg !3933
  %505 = bitcast %struct.RedisModuleCtx** %463 to i8**, !dbg !3935
  %506 = load i8*, i8** %505, align 8, !dbg !3935, !tbaa !3883
  call void @zfree(i8* %506) #9, !dbg !3936
  br label %507, !dbg !3937

; <label>:507:                                    ; preds = %501, %504
  %508 = load i32, i32* %460, align 8, !dbg !3938, !tbaa !3880
  %509 = icmp eq i32 %508, 0, !dbg !3939
  %510 = load i64, i64* %457, align 8, !dbg !3940
  %511 = select i1 %509, i64 %510, i64 -1, !dbg !3939
  br label %512, !dbg !3941

; <label>:512:                                    ; preds = %445, %507
  %513 = phi i64 [ %511, %507 ], [ -1, %445 ], !dbg !3942
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %446) #4, !dbg !3943
  br label %517

; <label>:514:                                    ; preds = %3
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 991, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #9, !dbg !3944
  tail call void @_exit(i32 1) #10, !dbg !3944
  unreachable, !dbg !3944

; <label>:515:                                    ; preds = %225, %56, %152, %28, %123, %135, %235, %443, %331, %121, %12
  %516 = phi i64 [ %122, %121 ], [ %129, %123 ], [ %140, %135 ], [ %240, %235 ], [ %332, %331 ], [ %444, %443 ], [ %13, %12 ], [ %29, %28 ], [ %153, %152 ], [ %58, %56 ], [ %227, %225 ], !dbg !3946
  br label %517, !dbg !3947

; <label>:517:                                    ; preds = %194, %40, %48, %123, %135, %235, %334, %330, %298, %255, %224, %142, %120, %78, %18, %442, %12, %515, %512
  %518 = phi i64 [ %516, %515 ], [ -1, %123 ], [ -1, %135 ], [ -1, %235 ], [ %513, %512 ], [ -1, %12 ], [ -1, %442 ], [ -1, %18 ], [ -1, %78 ], [ -1, %120 ], [ -1, %142 ], [ -1, %224 ], [ -1, %255 ], [ -1, %298 ], [ -1, %330 ], [ -1, %334 ], [ -1, %48 ], [ -1, %40 ], [ -1, %194 ], !dbg !3948
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3949
  ret i64 %518, !dbg !3949
}

; Function Attrs: noredzone
declare dso_local i64 @quicklistGetLzf(%struct.quicklistNode*, i8**) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetIterator(%struct.dict*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @dictReleaseIterator(%struct.dictIterator*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictNext(%struct.dictIterator*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @intsetBlobLen(%struct.intset*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @ziplistBlobLen(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @lpBytes(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @moduleFreeContext(%struct.RedisModuleCtx*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSavedObjectLen(%struct.redisObject*) local_unnamed_addr #6 !dbg !3950 {
  %2 = tail call i64 @rdbSaveObject(%struct._rio* null, %struct.redisObject* %0, %struct.redisObject* null) #11, !dbg !3957
  %3 = icmp eq i64 %2, -1, !dbg !3959
  br i1 %3, label %4, label %5, !dbg !3959

; <label>:4:                                      ; preds = %1
  tail call void @_serverAssertWithInfo(%struct.client* null, %struct.redisObject* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 1002) #9, !dbg !3959
  tail call void @_exit(i32 1) #10, !dbg !3959
  unreachable, !dbg !3959

; <label>:5:                                      ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3960
  ret i64 %2, !dbg !3960
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveKeyValuePair(%struct._rio*, %struct.redisObject*, %struct.redisObject*, i64) local_unnamed_addr #6 !dbg !3961 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca [1 x i8], align 1
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 228), align 8, !dbg !3982, !tbaa !3983
  %11 = and i32 %10, 1, !dbg !3984
  %12 = and i32 %10, 2, !dbg !3986
  %13 = icmp eq i64 %3, -1, !dbg !3988
  br i1 %13, label %75, label %14, !dbg !3990

; <label>:14:                                     ; preds = %4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8), !dbg !3991
  store i8 -4, i8* %8, align 1, !tbaa !540
  %15 = icmp eq %struct._rio* %0, null, !dbg !4000
  br i1 %15, label %44, label %16, !dbg !4001

; <label>:16:                                     ; preds = %14
  %17 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %18 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %19 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %20 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %21, !dbg !4006

; <label>:21:                                     ; preds = %36, %16
  %22 = phi i64 [ 1, %16 ], [ %38, %36 ]
  %23 = phi i8* [ %8, %16 ], [ %37, %36 ]
  %24 = load i64, i64* %17, align 8, !dbg !4007, !tbaa !506
  %25 = icmp ne i64 %24, 0, !dbg !4008
  %26 = icmp ult i64 %24, %22, !dbg !4009
  %27 = and i1 %25, %26, !dbg !4010
  %28 = select i1 %27, i64 %24, i64 %22, !dbg !4010
  %29 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %18, align 8, !dbg !4012, !tbaa !520
  %30 = icmp eq void (%struct._rio*, i8*, i64)* %29, null, !dbg !4013
  br i1 %30, label %32, label %31, !dbg !4014

; <label>:31:                                     ; preds = %21
  call void %29(%struct._rio* nonnull %0, i8* %23, i64 %28) #9, !dbg !4015
  br label %32, !dbg !4015

; <label>:32:                                     ; preds = %31, %21
  %33 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %19, align 8, !dbg !4016, !tbaa !584
  %34 = call i64 %33(%struct._rio* nonnull %0, i8* %23, i64 %28) #9, !dbg !4017
  %35 = icmp eq i64 %34, 0, !dbg !4018
  br i1 %35, label %43, label %36, !dbg !4019

; <label>:36:                                     ; preds = %32
  %37 = getelementptr inbounds i8, i8* %23, i64 %28, !dbg !4020
  %38 = sub i64 %22, %28, !dbg !4021
  %39 = load i64, i64* %20, align 8, !dbg !4022, !tbaa !527
  %40 = add i64 %39, %28, !dbg !4022
  store i64 %40, i64* %20, align 8, !dbg !4022, !tbaa !527
  %41 = icmp eq i64 %38, 0, !dbg !4006
  br i1 %41, label %42, label %21, !dbg !4006

; <label>:42:                                     ; preds = %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4023
  br label %44, !dbg !4024

; <label>:43:                                     ; preds = %32
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4026
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8), !dbg !4026
  br label %182, !dbg !4027

; <label>:44:                                     ; preds = %42, %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4026
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8), !dbg !4026
  %45 = bitcast i64* %7 to i8*, !dbg !4032
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #4, !dbg !4032
  store i64 %3, i64* %7, align 8, !dbg !4033, !tbaa !682
  br i1 %15, label %73, label %46, !dbg !4038

; <label>:46:                                     ; preds = %44
  %47 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %48 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %49 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %50 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %51, !dbg !4043

; <label>:51:                                     ; preds = %66, %46
  %52 = phi i64 [ 8, %46 ], [ %68, %66 ]
  %53 = phi i8* [ %45, %46 ], [ %67, %66 ]
  %54 = load i64, i64* %47, align 8, !dbg !4044, !tbaa !506
  %55 = icmp ne i64 %54, 0, !dbg !4045
  %56 = icmp ult i64 %54, %52, !dbg !4046
  %57 = and i1 %55, %56, !dbg !4047
  %58 = select i1 %57, i64 %54, i64 %52, !dbg !4047
  %59 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %48, align 8, !dbg !4049, !tbaa !520
  %60 = icmp eq void (%struct._rio*, i8*, i64)* %59, null, !dbg !4050
  br i1 %60, label %62, label %61, !dbg !4051

; <label>:61:                                     ; preds = %51
  call void %59(%struct._rio* nonnull %0, i8* %53, i64 %58) #9, !dbg !4052
  br label %62, !dbg !4052

; <label>:62:                                     ; preds = %61, %51
  %63 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %49, align 8, !dbg !4053, !tbaa !584
  %64 = call i64 %63(%struct._rio* nonnull %0, i8* %53, i64 %58) #9, !dbg !4054
  %65 = icmp eq i64 %64, 0, !dbg !4055
  br i1 %65, label %74, label %66, !dbg !4056

; <label>:66:                                     ; preds = %62
  %67 = getelementptr inbounds i8, i8* %53, i64 %58, !dbg !4057
  %68 = sub i64 %52, %58, !dbg !4058
  %69 = load i64, i64* %50, align 8, !dbg !4059, !tbaa !527
  %70 = add i64 %69, %58, !dbg !4059
  store i64 %70, i64* %50, align 8, !dbg !4059, !tbaa !527
  %71 = icmp eq i64 %68, 0, !dbg !4043
  br i1 %71, label %72, label %51, !dbg !4043

; <label>:72:                                     ; preds = %66
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4060
  br label %73, !dbg !4061

; <label>:73:                                     ; preds = %72, %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4062
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #4, !dbg !4063
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4064
  br label %75, !dbg !4065

; <label>:74:                                     ; preds = %62
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4060
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4062
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #4, !dbg !4063
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4064
  br label %182, !dbg !4065

; <label>:75:                                     ; preds = %73, %4
  %76 = icmp eq i32 %11, 0, !dbg !4066
  br i1 %76, label %112, label %77, !dbg !4067

; <label>:77:                                     ; preds = %75
  %78 = call i64 @estimateObjectIdleTime(%struct.redisObject* %2) #9, !dbg !4068
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6), !dbg !4070
  store i8 -8, i8* %6, align 1, !tbaa !540
  %79 = icmp eq %struct._rio* %0, null, !dbg !4078
  br i1 %79, label %108, label %80, !dbg !4079

; <label>:80:                                     ; preds = %77
  %81 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %82 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %83 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %84 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %85, !dbg !4084

; <label>:85:                                     ; preds = %100, %80
  %86 = phi i64 [ 1, %80 ], [ %102, %100 ]
  %87 = phi i8* [ %6, %80 ], [ %101, %100 ]
  %88 = load i64, i64* %81, align 8, !dbg !4085, !tbaa !506
  %89 = icmp ne i64 %88, 0, !dbg !4086
  %90 = icmp ult i64 %88, %86, !dbg !4087
  %91 = and i1 %89, %90, !dbg !4088
  %92 = select i1 %91, i64 %88, i64 %86, !dbg !4088
  %93 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %82, align 8, !dbg !4090, !tbaa !520
  %94 = icmp eq void (%struct._rio*, i8*, i64)* %93, null, !dbg !4091
  br i1 %94, label %96, label %95, !dbg !4092

; <label>:95:                                     ; preds = %85
  call void %93(%struct._rio* nonnull %0, i8* %87, i64 %92) #9, !dbg !4093
  br label %96, !dbg !4093

; <label>:96:                                     ; preds = %95, %85
  %97 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %83, align 8, !dbg !4094, !tbaa !584
  %98 = call i64 %97(%struct._rio* nonnull %0, i8* %87, i64 %92) #9, !dbg !4095
  %99 = icmp eq i64 %98, 0, !dbg !4096
  br i1 %99, label %107, label %100, !dbg !4097

; <label>:100:                                    ; preds = %96
  %101 = getelementptr inbounds i8, i8* %87, i64 %92, !dbg !4098
  %102 = sub i64 %86, %92, !dbg !4099
  %103 = load i64, i64* %84, align 8, !dbg !4100, !tbaa !527
  %104 = add i64 %103, %92, !dbg !4100
  store i64 %104, i64* %84, align 8, !dbg !4100, !tbaa !527
  %105 = icmp eq i64 %102, 0, !dbg !4084
  br i1 %105, label %106, label %85, !dbg !4084

; <label>:106:                                    ; preds = %100
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4101
  br label %108, !dbg !4102

; <label>:107:                                    ; preds = %96
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4104
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6), !dbg !4104
  br label %182, !dbg !4105

; <label>:108:                                    ; preds = %106, %77
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4104
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6), !dbg !4104
  %109 = udiv i64 %78, 1000, !dbg !4106
  %110 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %109) #11, !dbg !4107
  %111 = icmp eq i32 %110, -1, !dbg !4109
  br i1 %111, label %182, label %112

; <label>:112:                                    ; preds = %108, %75
  %113 = icmp eq i32 %12, 0, !dbg !4110
  br i1 %113, label %171, label %114, !dbg !4111

; <label>:114:                                    ; preds = %112
  %115 = getelementptr inbounds [1 x i8], [1 x i8]* %9, i64 0, i64 0, !dbg !4112
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %115) #4, !dbg !4112
  %116 = call i64 @LFUDecrAndReturn(%struct.redisObject* %2) #9, !dbg !4114
  %117 = trunc i64 %116 to i8, !dbg !4114
  store i8 %117, i8* %115, align 1, !dbg !4115, !tbaa !540
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5), !dbg !4116
  store i8 -7, i8* %5, align 1, !tbaa !540
  %118 = icmp eq %struct._rio* %0, null, !dbg !4124
  br i1 %118, label %119, label %120, !dbg !4125

; <label>:119:                                    ; preds = %114
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4127
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5), !dbg !4127
  br label %169, !dbg !4133

; <label>:120:                                    ; preds = %114
  %121 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %122 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %123 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %124 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %125, !dbg !4138

; <label>:125:                                    ; preds = %140, %120
  %126 = phi i64 [ 1, %120 ], [ %142, %140 ]
  %127 = phi i8* [ %5, %120 ], [ %141, %140 ]
  %128 = load i64, i64* %121, align 8, !dbg !4139, !tbaa !506
  %129 = icmp ne i64 %128, 0, !dbg !4140
  %130 = icmp ult i64 %128, %126, !dbg !4141
  %131 = and i1 %129, %130, !dbg !4142
  %132 = select i1 %131, i64 %128, i64 %126, !dbg !4142
  %133 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %122, align 8, !dbg !4144, !tbaa !520
  %134 = icmp eq void (%struct._rio*, i8*, i64)* %133, null, !dbg !4145
  br i1 %134, label %136, label %135, !dbg !4146

; <label>:135:                                    ; preds = %125
  call void %133(%struct._rio* nonnull %0, i8* %127, i64 %132) #9, !dbg !4147
  br label %136, !dbg !4147

; <label>:136:                                    ; preds = %135, %125
  %137 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %123, align 8, !dbg !4148, !tbaa !584
  %138 = call i64 %137(%struct._rio* nonnull %0, i8* %127, i64 %132) #9, !dbg !4149
  %139 = icmp eq i64 %138, 0, !dbg !4150
  br i1 %139, label %181, label %140, !dbg !4151

; <label>:140:                                    ; preds = %136
  %141 = getelementptr inbounds i8, i8* %127, i64 %132, !dbg !4152
  %142 = sub i64 %126, %132, !dbg !4153
  %143 = load i64, i64* %124, align 8, !dbg !4154, !tbaa !527
  %144 = add i64 %143, %132, !dbg !4154
  store i64 %144, i64* %124, align 8, !dbg !4154, !tbaa !527
  %145 = icmp eq i64 %142, 0, !dbg !4138
  br i1 %145, label %146, label %125, !dbg !4138

; <label>:146:                                    ; preds = %140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4155
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4127
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5), !dbg !4127
  br label %147, !dbg !4160

; <label>:147:                                    ; preds = %162, %146
  %148 = phi i64 [ 1, %146 ], [ %164, %162 ]
  %149 = phi i8* [ %115, %146 ], [ %163, %162 ]
  %150 = load i64, i64* %121, align 8, !dbg !4161, !tbaa !506
  %151 = icmp ne i64 %150, 0, !dbg !4162
  %152 = icmp ult i64 %150, %148, !dbg !4163
  %153 = and i1 %151, %152, !dbg !4164
  %154 = select i1 %153, i64 %150, i64 %148, !dbg !4164
  %155 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %122, align 8, !dbg !4166, !tbaa !520
  %156 = icmp eq void (%struct._rio*, i8*, i64)* %155, null, !dbg !4167
  br i1 %156, label %158, label %157, !dbg !4168

; <label>:157:                                    ; preds = %147
  call void %155(%struct._rio* nonnull %0, i8* %149, i64 %154) #9, !dbg !4169
  br label %158, !dbg !4169

; <label>:158:                                    ; preds = %157, %147
  %159 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %123, align 8, !dbg !4170, !tbaa !584
  %160 = call i64 %159(%struct._rio* nonnull %0, i8* %149, i64 %154) #9, !dbg !4171
  %161 = icmp eq i64 %160, 0, !dbg !4172
  br i1 %161, label %170, label %162, !dbg !4173

; <label>:162:                                    ; preds = %158
  %163 = getelementptr inbounds i8, i8* %149, i64 %154, !dbg !4174
  %164 = sub i64 %148, %154, !dbg !4175
  %165 = load i64, i64* %124, align 8, !dbg !4176, !tbaa !527
  %166 = add i64 %165, %154, !dbg !4176
  store i64 %166, i64* %124, align 8, !dbg !4176, !tbaa !527
  %167 = icmp eq i64 %164, 0, !dbg !4160
  br i1 %167, label %168, label %147, !dbg !4160

; <label>:168:                                    ; preds = %162
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4177
  br label %169, !dbg !4178

; <label>:169:                                    ; preds = %168, %119
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4179
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %115) #4, !dbg !4180
  br label %171

; <label>:170:                                    ; preds = %158
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4179
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %115) #4, !dbg !4180
  br label %182

; <label>:171:                                    ; preds = %169, %112
  %172 = call i32 @rdbSaveObjectType(%struct._rio* %0, %struct.redisObject* %2) #11, !dbg !4181
  %173 = icmp eq i32 %172, -1, !dbg !4183
  br i1 %173, label %182, label %174, !dbg !4184

; <label>:174:                                    ; preds = %171
  %175 = call i64 @rdbSaveStringObject(%struct._rio* %0, %struct.redisObject* %1) #11, !dbg !4185
  %176 = icmp eq i64 %175, -1, !dbg !4187
  br i1 %176, label %182, label %177, !dbg !4188

; <label>:177:                                    ; preds = %174
  %178 = call i64 @rdbSaveObject(%struct._rio* %0, %struct.redisObject* %2, %struct.redisObject* %1) #11, !dbg !4189
  %179 = icmp eq i64 %178, -1, !dbg !4191
  %180 = select i1 %179, i32 -1, i32 1, !dbg !4192
  br label %182, !dbg !4192

; <label>:181:                                    ; preds = %136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4155
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4127
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5), !dbg !4127
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %115) #4, !dbg !4180
  br label %182

; <label>:182:                                    ; preds = %108, %170, %107, %74, %43, %177, %174, %171, %181
  %183 = phi i32 [ -1, %170 ], [ -1, %108 ], [ -1, %43 ], [ -1, %74 ], [ -1, %181 ], [ -1, %171 ], [ -1, %174 ], [ %180, %177 ], [ -1, %107 ], !dbg !4193
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4194
  ret i32 %183, !dbg !4194
}

; Function Attrs: noredzone
declare dso_local i64 @estimateObjectIdleTime(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @LFUDecrAndReturn(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveAuxField(%struct._rio*, i8*, i64, i8*, i64) local_unnamed_addr #6 !dbg !4195 {
  %6 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6), !dbg !4212
  store i8 -6, i8* %6, align 1, !tbaa !540
  %7 = icmp eq %struct._rio* %0, null, !dbg !4220
  br i1 %7, label %36, label %8, !dbg !4221

; <label>:8:                                      ; preds = %5
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %13, !dbg !4226

; <label>:13:                                     ; preds = %28, %8
  %14 = phi i64 [ 1, %8 ], [ %30, %28 ]
  %15 = phi i8* [ %6, %8 ], [ %29, %28 ]
  %16 = load i64, i64* %9, align 8, !dbg !4227, !tbaa !506
  %17 = icmp ne i64 %16, 0, !dbg !4228
  %18 = icmp ult i64 %16, %14, !dbg !4229
  %19 = and i1 %17, %18, !dbg !4230
  %20 = select i1 %19, i64 %16, i64 %14, !dbg !4230
  %21 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %10, align 8, !dbg !4232, !tbaa !520
  %22 = icmp eq void (%struct._rio*, i8*, i64)* %21, null, !dbg !4233
  br i1 %22, label %24, label %23, !dbg !4234

; <label>:23:                                     ; preds = %13
  call void %21(%struct._rio* nonnull %0, i8* %15, i64 %20) #9, !dbg !4235
  br label %24, !dbg !4235

; <label>:24:                                     ; preds = %23, %13
  %25 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !4236, !tbaa !584
  %26 = call i64 %25(%struct._rio* nonnull %0, i8* %15, i64 %20) #9, !dbg !4237
  %27 = icmp eq i64 %26, 0, !dbg !4238
  br i1 %27, label %35, label %28, !dbg !4239

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds i8, i8* %15, i64 %20, !dbg !4240
  %30 = sub i64 %14, %20, !dbg !4241
  %31 = load i64, i64* %12, align 8, !dbg !4242, !tbaa !527
  %32 = add i64 %31, %20, !dbg !4242
  store i64 %32, i64* %12, align 8, !dbg !4242, !tbaa !527
  %33 = icmp eq i64 %30, 0, !dbg !4226
  br i1 %33, label %34, label %13, !dbg !4226

; <label>:34:                                     ; preds = %28
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4243
  br label %36, !dbg !4244

; <label>:35:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4243
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4245
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4246
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6), !dbg !4246
  br label %45, !dbg !4247

; <label>:36:                                     ; preds = %34, %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4245
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4246
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6), !dbg !4246
  %37 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %1, i64 %2) #11, !dbg !4248
  %38 = icmp eq i64 %37, -1, !dbg !4251
  br i1 %38, label %45, label %39, !dbg !4252

; <label>:39:                                     ; preds = %36
  %40 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %3, i64 %4) #11, !dbg !4253
  %41 = icmp eq i64 %40, -1, !dbg !4255
  br i1 %41, label %45, label %42, !dbg !4256

; <label>:42:                                     ; preds = %39
  %43 = add nsw i64 %37, 1, !dbg !4257
  %44 = add nsw i64 %43, %40, !dbg !4258
  br label %45, !dbg !4259

; <label>:45:                                     ; preds = %35, %39, %36, %42
  %46 = phi i64 [ %44, %42 ], [ -1, %35 ], [ -1, %36 ], [ -1, %39 ], !dbg !4260
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4261
  ret i64 %46, !dbg !4261
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveAuxFieldStrStr(%struct._rio*, i8*, i8*) local_unnamed_addr #6 !dbg !4262 {
  %4 = tail call i64 @strlen(i8* %1) #9, !dbg !4272
  %5 = tail call i64 @strlen(i8* %2) #9, !dbg !4273
  %6 = tail call i64 @rdbSaveAuxField(%struct._rio* %0, i8* %1, i64 %4, i8* %2, i64 %5) #11, !dbg !4274
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4275
  ret i64 %6, !dbg !4275
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveAuxFieldStrInt(%struct._rio*, i8*, i64) local_unnamed_addr #6 !dbg !4276 {
  %4 = alloca [21 x i8], align 16
  %5 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 0, !dbg !4288
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %5) #4, !dbg !4288
  %6 = call i32 @ll2string(i8* nonnull %5, i64 21, i64 %2) #9, !dbg !4290
  %7 = call i64 @strlen(i8* %1) #9, !dbg !4292
  %8 = sext i32 %6 to i64, !dbg !4293
  %9 = call i64 @rdbSaveAuxField(%struct._rio* %0, i8* %1, i64 %7, i8* nonnull %5, i64 %8) #11, !dbg !4294
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %5) #4, !dbg !4295
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4296
  ret i64 %9, !dbg !4296
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveInfoAuxFields(%struct._rio*, i32, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !4297 {
  %4 = alloca [21 x i8], align 16
  %5 = and i32 %1, 1, !dbg !4341
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0)) #9, !dbg !4348
  %7 = tail call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !4349
  %8 = tail call i64 @rdbSaveAuxField(%struct._rio* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i64 %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i64 %7) #9, !dbg !4350
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4351
  %9 = icmp eq i64 %8, -1, !dbg !4352
  br i1 %9, label %62, label %10, !dbg !4353

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 0, !dbg !4357
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4357
  %12 = call i32 @ll2string(i8* nonnull %11, i64 21, i64 64) #9, !dbg !4358
  %13 = call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !4360
  %14 = sext i32 %12 to i64, !dbg !4361
  %15 = call i64 @rdbSaveAuxField(%struct._rio* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i64 %13, i8* nonnull %11, i64 %14) #9, !dbg !4362
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4363
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4364
  %16 = icmp eq i64 %15, -1, !dbg !4365
  br i1 %16, label %62, label %17, !dbg !4366

; <label>:17:                                     ; preds = %10
  %18 = call i64 @time(i64* null) #9, !dbg !4367
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4371
  %19 = call i32 @ll2string(i8* nonnull %11, i64 21, i64 %18) #9, !dbg !4372
  %20 = call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !4374
  %21 = sext i32 %19 to i64, !dbg !4375
  %22 = call i64 @rdbSaveAuxField(%struct._rio* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), i64 %20, i8* nonnull %11, i64 %21) #9, !dbg !4376
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4377
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4378
  %23 = icmp eq i64 %22, -1, !dbg !4379
  br i1 %23, label %62, label %24, !dbg !4380

; <label>:24:                                     ; preds = %17
  %25 = call i64 @zmalloc_used_memory() #9, !dbg !4381
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4385
  %26 = call i32 @ll2string(i8* nonnull %11, i64 21, i64 %25) #9, !dbg !4386
  %27 = call i64 @strlen(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0)) #9, !dbg !4388
  %28 = sext i32 %26 to i64, !dbg !4389
  %29 = call i64 @rdbSaveAuxField(%struct._rio* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i64 %27, i8* nonnull %11, i64 %28) #9, !dbg !4390
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4392
  %30 = icmp eq i64 %29, -1, !dbg !4393
  br i1 %30, label %62, label %31, !dbg !4394

; <label>:31:                                     ; preds = %24
  %32 = icmp eq %struct.rdbSaveInfo* %2, null, !dbg !4395
  br i1 %32, label %54, label %33, !dbg !4396

; <label>:33:                                     ; preds = %31
  %34 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %2, i64 0, i32 0, !dbg !4397
  %35 = load i32, i32* %34, align 8, !dbg !4397, !tbaa !4398
  %36 = sext i32 %35 to i64, !dbg !4400
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4404
  %37 = call i32 @ll2string(i8* nonnull %11, i64 21, i64 %36) #9, !dbg !4405
  %38 = call i64 @strlen(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !4407
  %39 = sext i32 %37 to i64, !dbg !4408
  %40 = call i64 @rdbSaveAuxField(%struct._rio* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i64 %38, i8* nonnull %11, i64 %39) #9, !dbg !4409
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4410
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4411
  %41 = icmp eq i64 %40, -1, !dbg !4412
  br i1 %41, label %62, label %42, !dbg !4413

; <label>:42:                                     ; preds = %33
  %43 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !4419
  %44 = call i64 @strlen(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 177, i64 0)) #9, !dbg !4420
  %45 = call i64 @rdbSaveAuxField(%struct._rio* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0), i64 %43, i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 177, i64 0), i64 %44) #9, !dbg !4421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4422
  %46 = icmp eq i64 %45, -1, !dbg !4423
  br i1 %46, label %62, label %47, !dbg !4424

; <label>:47:                                     ; preds = %42
  %48 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 179), align 8, !dbg !4425, !tbaa !4426
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4430
  %49 = call i32 @ll2string(i8* nonnull %11, i64 21, i64 %48) #9, !dbg !4431
  %50 = call i64 @strlen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0)) #9, !dbg !4433
  %51 = sext i32 %49 to i64, !dbg !4434
  %52 = call i64 @rdbSaveAuxField(%struct._rio* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i64 %50, i8* nonnull %11, i64 %51) #9, !dbg !4435
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4437
  %53 = icmp eq i64 %52, -1, !dbg !4438
  br i1 %53, label %62, label %54, !dbg !4439

; <label>:54:                                     ; preds = %31, %47
  %55 = zext i32 %5 to i64, !dbg !4440
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4444
  %56 = call i32 @ll2string(i8* nonnull %11, i64 21, i64 %55) #9, !dbg !4445
  %57 = call i64 @strlen(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0)) #9, !dbg !4447
  %58 = sext i32 %56 to i64, !dbg !4448
  %59 = call i64 @rdbSaveAuxField(%struct._rio* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i64 %57, i8* nonnull %11, i64 %58) #9, !dbg !4449
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %11) #4, !dbg !4450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4451
  %60 = icmp eq i64 %59, -1, !dbg !4452
  %61 = select i1 %60, i32 -1, i32 1, !dbg !4453
  br label %62, !dbg !4453

; <label>:62:                                     ; preds = %54, %47, %42, %33, %24, %17, %10, %3
  %63 = phi i32 [ -1, %3 ], [ -1, %10 ], [ -1, %17 ], [ -1, %24 ], [ -1, %33 ], [ -1, %42 ], [ -1, %47 ], [ %61, %54 ], !dbg !4454
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4455
  ret i32 %63, !dbg !4455
}

; Function Attrs: noredzone
declare dso_local i64 @time(i64*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @zmalloc_used_memory() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveSingleModuleAux(%struct._rio*, i32, %struct.RedisModuleType*) local_unnamed_addr #6 !dbg !4456 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca i8, align 1
  %6 = alloca %struct.RedisModuleIO, align 8
  %7 = bitcast %struct.RedisModuleIO* %6 to i8*, !dbg !4472
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #4, !dbg !4472
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5), !dbg !4473
  store i8 -9, i8* %5, align 1, !tbaa !540
  %8 = icmp eq %struct._rio* %0, null, !dbg !4480
  br i1 %8, label %36, label %9, !dbg !4481

; <label>:9:                                      ; preds = %3
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %13 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %14, !dbg !4486

; <label>:14:                                     ; preds = %29, %9
  %15 = phi i64 [ 1, %9 ], [ %31, %29 ]
  %16 = phi i8* [ %5, %9 ], [ %30, %29 ]
  %17 = load i64, i64* %10, align 8, !dbg !4487, !tbaa !506
  %18 = icmp ne i64 %17, 0, !dbg !4488
  %19 = icmp ult i64 %17, %15, !dbg !4489
  %20 = and i1 %18, %19, !dbg !4490
  %21 = select i1 %20, i64 %17, i64 %15, !dbg !4490
  %22 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %11, align 8, !dbg !4492, !tbaa !520
  %23 = icmp eq void (%struct._rio*, i8*, i64)* %22, null, !dbg !4493
  br i1 %23, label %25, label %24, !dbg !4494

; <label>:24:                                     ; preds = %14
  call void %22(%struct._rio* nonnull %0, i8* %16, i64 %21) #9, !dbg !4495
  br label %25, !dbg !4495

; <label>:25:                                     ; preds = %24, %14
  %26 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !4496, !tbaa !584
  %27 = call i64 %26(%struct._rio* nonnull %0, i8* %16, i64 %21) #9, !dbg !4497
  %28 = icmp eq i64 %27, 0, !dbg !4498
  br i1 %28, label %35, label %29, !dbg !4499

; <label>:29:                                     ; preds = %25
  %30 = getelementptr inbounds i8, i8* %16, i64 %21, !dbg !4500
  %31 = sub i64 %15, %21, !dbg !4501
  %32 = load i64, i64* %13, align 8, !dbg !4502, !tbaa !527
  %33 = add i64 %32, %21, !dbg !4502
  store i64 %33, i64* %13, align 8, !dbg !4502, !tbaa !527
  %34 = icmp eq i64 %31, 0, !dbg !4486
  br i1 %34, label %35, label %14, !dbg !4486

; <label>:35:                                     ; preds = %25, %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4503
  br label %36, !dbg !4504

; <label>:36:                                     ; preds = %35, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4504
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4505
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5), !dbg !4505
  %37 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %2, i64 0, i32 0, !dbg !4506
  %38 = load i64, i64* %37, align 8, !dbg !4506, !tbaa !3866
  %39 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %38) #11, !dbg !4507
  %40 = icmp eq i32 %39, -1, !dbg !4509
  br i1 %40, label %133, label %41, !dbg !4511

; <label>:41:                                     ; preds = %36
  %42 = sext i32 %39 to i64, !dbg !4512
  %43 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 0, !dbg !4513
  %44 = load i64, i64* %43, align 8, !dbg !4514, !tbaa !3879
  %45 = add i64 %44, %42, !dbg !4514
  store i64 %45, i64* %43, align 8, !dbg !4514, !tbaa !3879
  %46 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0, !dbg !4517
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %46) #4, !dbg !4517
  store i8 2, i8* %46, align 1, !dbg !4518, !tbaa !540
  br i1 %8, label %76, label %47, !dbg !4523

; <label>:47:                                     ; preds = %41
  %48 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %49 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %50 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %51 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %52, !dbg !4528

; <label>:52:                                     ; preds = %67, %47
  %53 = phi i64 [ 1, %47 ], [ %69, %67 ]
  %54 = phi i8* [ %46, %47 ], [ %68, %67 ]
  %55 = load i64, i64* %48, align 8, !dbg !4529, !tbaa !506
  %56 = icmp ne i64 %55, 0, !dbg !4530
  %57 = icmp ult i64 %55, %53, !dbg !4531
  %58 = and i1 %56, %57, !dbg !4532
  %59 = select i1 %58, i64 %55, i64 %53, !dbg !4532
  %60 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %49, align 8, !dbg !4534, !tbaa !520
  %61 = icmp eq void (%struct._rio*, i8*, i64)* %60, null, !dbg !4535
  br i1 %61, label %63, label %62, !dbg !4536

; <label>:62:                                     ; preds = %52
  call void %60(%struct._rio* nonnull %0, i8* %54, i64 %59) #9, !dbg !4537
  br label %63, !dbg !4537

; <label>:63:                                     ; preds = %62, %52
  %64 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %50, align 8, !dbg !4538, !tbaa !584
  %65 = call i64 %64(%struct._rio* nonnull %0, i8* %54, i64 %59) #9, !dbg !4539
  %66 = icmp eq i64 %65, 0, !dbg !4540
  br i1 %66, label %75, label %67, !dbg !4541

; <label>:67:                                     ; preds = %63
  %68 = getelementptr inbounds i8, i8* %54, i64 %59, !dbg !4542
  %69 = sub i64 %53, %59, !dbg !4543
  %70 = load i64, i64* %51, align 8, !dbg !4544, !tbaa !527
  %71 = add i64 %70, %59, !dbg !4544
  store i64 %71, i64* %51, align 8, !dbg !4544, !tbaa !527
  %72 = icmp eq i64 %69, 0, !dbg !4528
  br i1 %72, label %73, label %52, !dbg !4528

; <label>:73:                                     ; preds = %67
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4545
  %74 = load i64, i64* %43, align 8, !dbg !4546, !tbaa !3879
  br label %76, !dbg !4547

; <label>:75:                                     ; preds = %63
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4548
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %46) #4, !dbg !4549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4549
  br label %133, !dbg !4550

; <label>:76:                                     ; preds = %73, %41
  %77 = phi i64 [ %74, %73 ], [ %45, %41 ], !dbg !4546
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4548
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %46) #4, !dbg !4549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4549
  %78 = add i64 %77, 1, !dbg !4546
  store i64 %78, i64* %43, align 8, !dbg !4546, !tbaa !3879
  %79 = sext i32 %1 to i64, !dbg !4551
  %80 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %79) #11, !dbg !4552
  %81 = icmp eq i32 %80, -1, !dbg !4553
  br i1 %81, label %133, label %82, !dbg !4555

; <label>:82:                                     ; preds = %76
  %83 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 1, !dbg !4556
  store %struct._rio* %0, %struct._rio** %83, align 8, !dbg !4556, !tbaa !3876
  %84 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 2, !dbg !4556
  store %struct.RedisModuleType* %2, %struct.RedisModuleType** %84, align 8, !dbg !4556, !tbaa !3878
  store i64 0, i64* %43, align 8, !dbg !4556, !tbaa !3879
  %85 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 3, !dbg !4556
  store i32 0, i32* %85, align 8, !dbg !4556, !tbaa !3880
  %86 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 4, !dbg !4556
  store i32 0, i32* %86, align 4, !dbg !4556, !tbaa !3881
  %87 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 6, !dbg !4556
  store %struct.redisObject* null, %struct.redisObject** %87, align 8, !dbg !4556, !tbaa !3882
  %88 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 5, !dbg !4556
  store %struct.RedisModuleCtx* null, %struct.RedisModuleCtx** %88, align 8, !dbg !4556, !tbaa !3883
  %89 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %2, i64 0, i32 9, !dbg !4558
  %90 = load void (%struct.RedisModuleIO*, i32)*, void (%struct.RedisModuleIO*, i32)** %89, align 8, !dbg !4558, !tbaa !4559
  call void %90(%struct.RedisModuleIO* nonnull %6, i32 %1) #9, !dbg !4561
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %46) #4, !dbg !4564
  store i8 0, i8* %46, align 1, !dbg !4565, !tbaa !540
  br i1 %8, label %119, label %91, !dbg !4570

; <label>:91:                                     ; preds = %82
  %92 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %93 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %94 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %95 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %96, !dbg !4575

; <label>:96:                                     ; preds = %111, %91
  %97 = phi i64 [ 1, %91 ], [ %113, %111 ]
  %98 = phi i8* [ %46, %91 ], [ %112, %111 ]
  %99 = load i64, i64* %92, align 8, !dbg !4576, !tbaa !506
  %100 = icmp ne i64 %99, 0, !dbg !4577
  %101 = icmp ult i64 %99, %97, !dbg !4578
  %102 = and i1 %100, %101, !dbg !4579
  %103 = select i1 %102, i64 %99, i64 %97, !dbg !4579
  %104 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %93, align 8, !dbg !4581, !tbaa !520
  %105 = icmp eq void (%struct._rio*, i8*, i64)* %104, null, !dbg !4582
  br i1 %105, label %107, label %106, !dbg !4583

; <label>:106:                                    ; preds = %96
  call void %104(%struct._rio* nonnull %0, i8* %98, i64 %103) #9, !dbg !4584
  br label %107, !dbg !4584

; <label>:107:                                    ; preds = %106, %96
  %108 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %94, align 8, !dbg !4585, !tbaa !584
  %109 = call i64 %108(%struct._rio* nonnull %0, i8* %98, i64 %103) #9, !dbg !4586
  %110 = icmp eq i64 %109, 0, !dbg !4587
  br i1 %110, label %118, label %111, !dbg !4588

; <label>:111:                                    ; preds = %107
  %112 = getelementptr inbounds i8, i8* %98, i64 %103, !dbg !4589
  %113 = sub i64 %97, %103, !dbg !4590
  %114 = load i64, i64* %95, align 8, !dbg !4591, !tbaa !527
  %115 = add i64 %114, %103, !dbg !4591
  store i64 %115, i64* %95, align 8, !dbg !4591, !tbaa !527
  %116 = icmp eq i64 %113, 0, !dbg !4575
  br i1 %116, label %117, label %96, !dbg !4575

; <label>:117:                                    ; preds = %111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4592
  br label %119, !dbg !4593

; <label>:118:                                    ; preds = %107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4592
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4594
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %46) #4, !dbg !4595
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4595
  store i32 1, i32* %85, align 8, !dbg !4596, !tbaa !3880
  br label %122, !dbg !4598

; <label>:119:                                    ; preds = %117, %82
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4594
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %46) #4, !dbg !4595
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4595
  %120 = load i64, i64* %43, align 8, !dbg !4599, !tbaa !3879
  %121 = add i64 %120, 1, !dbg !4599
  store i64 %121, i64* %43, align 8, !dbg !4599, !tbaa !3879
  br label %122

; <label>:122:                                    ; preds = %119, %118
  %123 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %88, align 8, !dbg !4600, !tbaa !3883
  %124 = icmp eq %struct.RedisModuleCtx* %123, null, !dbg !4602
  br i1 %124, label %128, label %125, !dbg !4603

; <label>:125:                                    ; preds = %122
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %123) #9, !dbg !4604
  %126 = bitcast %struct.RedisModuleCtx** %88 to i8**, !dbg !4606
  %127 = load i8*, i8** %126, align 8, !dbg !4606, !tbaa !3883
  call void @zfree(i8* %127) #9, !dbg !4607
  br label %128, !dbg !4608

; <label>:128:                                    ; preds = %122, %125
  %129 = load i32, i32* %85, align 8, !dbg !4609, !tbaa !3880
  %130 = icmp eq i32 %129, 0, !dbg !4611
  %131 = load i64, i64* %43, align 8, !dbg !4612
  %132 = select i1 %130, i64 %131, i64 -1, !dbg !4613
  br label %133, !dbg !4613

; <label>:133:                                    ; preds = %75, %128, %76, %36
  %134 = phi i64 [ -1, %36 ], [ -1, %76 ], [ %132, %128 ], [ -1, %75 ], !dbg !4614
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #4, !dbg !4615
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4615
  ret i64 %134, !dbg !4615
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveRio(%struct._rio*, i32*, i32, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !4616 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca [10 x i8], align 1
  %9 = alloca i64, align 8
  %10 = alloca %struct.redisObject, align 8
  %11 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 0, !dbg !4688
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %11) #4, !dbg !4688
  %12 = bitcast i64* %9 to i8*, !dbg !4690
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #4, !dbg !4690
  %13 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 159), align 4, !dbg !4692, !tbaa !4694
  %14 = icmp eq i32 %13, 0, !dbg !4695
  br i1 %14, label %19, label %15, !dbg !4696

; <label>:15:                                     ; preds = %4
  %16 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4, !dbg !4697
  store void (%struct._rio*, i8*, i64)* @rioGenericUpdateChecksum, void (%struct._rio*, i8*, i64)** %16, align 8, !dbg !4698, !tbaa !520
  %17 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %11, i64 10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0), i32 9) #9, !dbg !4699
  %18 = icmp eq %struct._rio* %0, null, !dbg !4705
  br label %24, !dbg !4706

; <label>:19:                                     ; preds = %4
  %20 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %11, i64 10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0), i32 9) #9, !dbg !4699
  %21 = icmp eq %struct._rio* %0, null, !dbg !4705
  br i1 %21, label %53, label %22, !dbg !4706

; <label>:22:                                     ; preds = %19
  %23 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  br label %24, !dbg !4706

; <label>:24:                                     ; preds = %22, %15
  %25 = phi void (%struct._rio*, i8*, i64)** [ %23, %22 ], [ %16, %15 ]
  %26 = phi i1 [ false, %22 ], [ %18, %15 ]
  %27 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %28 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %29 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %30, !dbg !4711

; <label>:30:                                     ; preds = %45, %24
  %31 = phi i64 [ 9, %24 ], [ %47, %45 ]
  %32 = phi i8* [ %11, %24 ], [ %46, %45 ]
  %33 = load i64, i64* %27, align 8, !dbg !4712, !tbaa !506
  %34 = icmp ne i64 %33, 0, !dbg !4713
  %35 = icmp ult i64 %33, %31, !dbg !4714
  %36 = and i1 %34, %35, !dbg !4715
  %37 = select i1 %36, i64 %33, i64 %31, !dbg !4715
  %38 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %25, align 8, !dbg !4717, !tbaa !520
  %39 = icmp eq void (%struct._rio*, i8*, i64)* %38, null, !dbg !4718
  br i1 %39, label %41, label %40, !dbg !4719

; <label>:40:                                     ; preds = %30
  call void %38(%struct._rio* nonnull %0, i8* %32, i64 %37) #9, !dbg !4720
  br label %41, !dbg !4720

; <label>:41:                                     ; preds = %40, %30
  %42 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %28, align 8, !dbg !4721, !tbaa !584
  %43 = call i64 %42(%struct._rio* nonnull %0, i8* %32, i64 %37) #9, !dbg !4722
  %44 = icmp eq i64 %43, 0, !dbg !4723
  br i1 %44, label %52, label %45, !dbg !4724

; <label>:45:                                     ; preds = %41
  %46 = getelementptr inbounds i8, i8* %32, i64 %37, !dbg !4725
  %47 = sub i64 %31, %37, !dbg !4726
  %48 = load i64, i64* %29, align 8, !dbg !4727, !tbaa !527
  %49 = add i64 %48, %37, !dbg !4727
  store i64 %49, i64* %29, align 8, !dbg !4727, !tbaa !527
  %50 = icmp eq i64 %47, 0, !dbg !4711
  br i1 %50, label %51, label %30, !dbg !4711

; <label>:51:                                     ; preds = %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4728
  br label %53, !dbg !4729

; <label>:52:                                     ; preds = %41
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4728
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4730
  br label %302, !dbg !4731

; <label>:53:                                     ; preds = %51, %19
  %54 = phi i1 [ true, %19 ], [ %26, %51 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4730
  %55 = call i32 @rdbSaveInfoAuxFields(%struct._rio* %0, i32 %2, %struct.rdbSaveInfo* %3) #11, !dbg !4732
  %56 = icmp eq i32 %55, -1, !dbg !4734
  br i1 %56, label %302, label %57, !dbg !4735

; <label>:57:                                     ; preds = %53
  %58 = call i64 @rdbSaveModulesAux(%struct._rio* %0, i32 1) #9, !dbg !4736
  %59 = icmp eq i64 %58, -1, !dbg !4738
  br i1 %59, label %302, label %60, !dbg !4739

; <label>:60:                                     ; preds = %57
  %61 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !4741, !tbaa !4742
  %62 = icmp sgt i32 %61, 0, !dbg !4743
  br i1 %62, label %63, label %195, !dbg !4744

; <label>:63:                                     ; preds = %60
  %64 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %65 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %66 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %67 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  %68 = bitcast %struct.redisObject* %10 to i8*
  %69 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 1
  %70 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 0
  %71 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 2
  %72 = bitcast i8** %71 to i64*
  %73 = and i32 %2, 1
  %74 = icmp eq i32 %73, 0
  br label %75, !dbg !4744

; <label>:75:                                     ; preds = %63, %189
  %76 = phi i32 [ %61, %63 ], [ %190, %189 ]
  %77 = phi i64 [ 0, %63 ], [ %192, %189 ]
  %78 = phi i64 [ 0, %63 ], [ %191, %189 ]
  %79 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4745, !tbaa !4746
  %80 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %79, i64 %77, !dbg !4747
  %81 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %80, i64 0, i32 0, !dbg !4749
  %82 = load %struct.dict*, %struct.dict** %81, align 8, !dbg !4749, !tbaa !4750
  %83 = getelementptr inbounds %struct.dict, %struct.dict* %82, i64 0, i32 2, i64 0, i32 3, !dbg !4753
  %84 = load i64, i64* %83, align 8, !dbg !4753, !tbaa !3508
  %85 = getelementptr inbounds %struct.dict, %struct.dict* %82, i64 0, i32 2, i64 1, i32 3, !dbg !4753
  %86 = load i64, i64* %85, align 8, !dbg !4753, !tbaa !3508
  %87 = sub i64 0, %86, !dbg !4755
  %88 = icmp eq i64 %84, %87, !dbg !4755
  br i1 %88, label %189, label %89, !dbg !4756

; <label>:89:                                     ; preds = %75
  %90 = call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %82) #9, !dbg !4757
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7), !dbg !4758
  store i8 -2, i8* %7, align 1, !tbaa !540
  br i1 %54, label %114, label %91, !dbg !4766

; <label>:91:                                     ; preds = %89, %106
  %92 = phi i64 [ %108, %106 ], [ 1, %89 ]
  %93 = phi i8* [ %107, %106 ], [ %7, %89 ]
  %94 = load i64, i64* %64, align 8, !dbg !4770, !tbaa !506
  %95 = icmp ne i64 %94, 0, !dbg !4771
  %96 = icmp ult i64 %94, %92, !dbg !4772
  %97 = and i1 %95, %96, !dbg !4773
  %98 = select i1 %97, i64 %94, i64 %92, !dbg !4773
  %99 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %65, align 8, !dbg !4775, !tbaa !520
  %100 = icmp eq void (%struct._rio*, i8*, i64)* %99, null, !dbg !4776
  br i1 %100, label %102, label %101, !dbg !4777

; <label>:101:                                    ; preds = %91
  call void %99(%struct._rio* nonnull %0, i8* %93, i64 %98) #9, !dbg !4778
  br label %102, !dbg !4778

; <label>:102:                                    ; preds = %101, %91
  %103 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %66, align 8, !dbg !4779, !tbaa !584
  %104 = call i64 %103(%struct._rio* nonnull %0, i8* %93, i64 %98) #9, !dbg !4780
  %105 = icmp eq i64 %104, 0, !dbg !4781
  br i1 %105, label %113, label %106, !dbg !4782

; <label>:106:                                    ; preds = %102
  %107 = getelementptr inbounds i8, i8* %93, i64 %98, !dbg !4783
  %108 = sub i64 %92, %98, !dbg !4784
  %109 = load i64, i64* %67, align 8, !dbg !4785, !tbaa !527
  %110 = add i64 %109, %98, !dbg !4785
  store i64 %110, i64* %67, align 8, !dbg !4785, !tbaa !527
  %111 = icmp eq i64 %108, 0, !dbg !4786
  br i1 %111, label %112, label %91, !dbg !4786

; <label>:112:                                    ; preds = %106
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4787
  br label %114, !dbg !4788

; <label>:113:                                    ; preds = %102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4787
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4790
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7), !dbg !4790
  br label %302, !dbg !4791

; <label>:114:                                    ; preds = %112, %89
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4790
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7), !dbg !4790
  %115 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %77) #11, !dbg !4792
  %116 = icmp eq i32 %115, -1, !dbg !4794
  br i1 %116, label %302, label %117, !dbg !4795

; <label>:117:                                    ; preds = %114
  %118 = load %struct.dict*, %struct.dict** %81, align 8, !dbg !4796, !tbaa !4750
  %119 = getelementptr inbounds %struct.dict, %struct.dict* %118, i64 0, i32 2, i64 0, i32 3, !dbg !4796
  %120 = load i64, i64* %119, align 8, !dbg !4796, !tbaa !3508
  %121 = getelementptr inbounds %struct.dict, %struct.dict* %118, i64 0, i32 2, i64 1, i32 3, !dbg !4796
  %122 = load i64, i64* %121, align 8, !dbg !4796, !tbaa !3508
  %123 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %79, i64 %77, i32 1, !dbg !4797
  %124 = load %struct.dict*, %struct.dict** %123, align 8, !dbg !4797, !tbaa !4798
  %125 = getelementptr inbounds %struct.dict, %struct.dict* %124, i64 0, i32 2, i64 0, i32 3, !dbg !4797
  %126 = load i64, i64* %125, align 8, !dbg !4797, !tbaa !3508
  %127 = getelementptr inbounds %struct.dict, %struct.dict* %124, i64 0, i32 2, i64 1, i32 3, !dbg !4797
  %128 = load i64, i64* %127, align 8, !dbg !4797, !tbaa !3508
  %129 = add i64 %128, %126, !dbg !4797
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6), !dbg !4800
  store i8 -5, i8* %6, align 1, !tbaa !540
  br i1 %54, label %153, label %130, !dbg !4808

; <label>:130:                                    ; preds = %117, %145
  %131 = phi i64 [ %147, %145 ], [ 1, %117 ]
  %132 = phi i8* [ %146, %145 ], [ %6, %117 ]
  %133 = load i64, i64* %64, align 8, !dbg !4812, !tbaa !506
  %134 = icmp ne i64 %133, 0, !dbg !4813
  %135 = icmp ult i64 %133, %131, !dbg !4814
  %136 = and i1 %134, %135, !dbg !4815
  %137 = select i1 %136, i64 %133, i64 %131, !dbg !4815
  %138 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %65, align 8, !dbg !4817, !tbaa !520
  %139 = icmp eq void (%struct._rio*, i8*, i64)* %138, null, !dbg !4818
  br i1 %139, label %141, label %140, !dbg !4819

; <label>:140:                                    ; preds = %130
  call void %138(%struct._rio* nonnull %0, i8* %132, i64 %137) #9, !dbg !4820
  br label %141, !dbg !4820

; <label>:141:                                    ; preds = %140, %130
  %142 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %66, align 8, !dbg !4821, !tbaa !584
  %143 = call i64 %142(%struct._rio* nonnull %0, i8* %132, i64 %137) #9, !dbg !4822
  %144 = icmp eq i64 %143, 0, !dbg !4823
  br i1 %144, label %152, label %145, !dbg !4824

; <label>:145:                                    ; preds = %141
  %146 = getelementptr inbounds i8, i8* %132, i64 %137, !dbg !4825
  %147 = sub i64 %131, %137, !dbg !4826
  %148 = load i64, i64* %67, align 8, !dbg !4827, !tbaa !527
  %149 = add i64 %148, %137, !dbg !4827
  store i64 %149, i64* %67, align 8, !dbg !4827, !tbaa !527
  %150 = icmp eq i64 %147, 0, !dbg !4828
  br i1 %150, label %151, label %130, !dbg !4828

; <label>:151:                                    ; preds = %145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4829
  br label %153, !dbg !4830

; <label>:152:                                    ; preds = %141
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4832
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6), !dbg !4832
  br label %302, !dbg !4833

; <label>:153:                                    ; preds = %151, %117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4832
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6), !dbg !4832
  %154 = add i64 %122, %120, !dbg !4796
  %155 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %154) #11, !dbg !4835
  %156 = icmp eq i32 %155, -1, !dbg !4837
  br i1 %156, label %302, label %157, !dbg !4838

; <label>:157:                                    ; preds = %153
  %158 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %129) #11, !dbg !4839
  %159 = icmp eq i32 %158, -1, !dbg !4841
  br i1 %159, label %302, label %160, !dbg !4842

; <label>:160:                                    ; preds = %157
  %161 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %90) #9, !dbg !4843
  %162 = icmp eq %struct.dictEntry* %161, null, !dbg !4845
  br i1 %162, label %186, label %163, !dbg !4846

; <label>:163:                                    ; preds = %160, %182
  %164 = phi %struct.dictEntry* [ %184, %182 ], [ %161, %160 ]
  %165 = phi i64 [ %183, %182 ], [ %78, %160 ]
  %166 = bitcast %struct.dictEntry* %164 to i64*, !dbg !4847
  %167 = load i64, i64* %166, align 8, !dbg !4847, !tbaa !3521
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #4, !dbg !4849
  %168 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %164, i64 0, i32 1, i32 0, !dbg !4850
  %169 = bitcast i8** %168 to %struct.redisObject**, !dbg !4850
  %170 = load %struct.redisObject*, %struct.redisObject** %169, align 8, !dbg !4850, !tbaa !540
  store i32 1, i32* %69, align 4, !dbg !4852, !tbaa !4854
  store i32 0, i32* %70, align 8, !dbg !4852
  store i64 %167, i64* %72, align 8, !dbg !4852, !tbaa !2002
  %171 = call i64 @getExpire(%struct.redisDb* %80, %struct.redisObject* nonnull %10) #9, !dbg !4856
  %172 = call i32 @rdbSaveKeyValuePair(%struct._rio* %0, %struct.redisObject* nonnull %10, %struct.redisObject* %170, i64 %171) #11, !dbg !4858
  %173 = icmp eq i32 %172, -1, !dbg !4860
  br i1 %173, label %174, label %175, !dbg !4861

; <label>:174:                                    ; preds = %163
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #4, !dbg !4862
  br label %302

; <label>:175:                                    ; preds = %163
  br i1 %74, label %182, label %176, !dbg !4863

; <label>:176:                                    ; preds = %175
  %177 = load i64, i64* %67, align 8, !dbg !4865, !tbaa !527
  %178 = add i64 %165, 10240, !dbg !4866
  %179 = icmp ugt i64 %177, %178, !dbg !4867
  br i1 %179, label %180, label %182, !dbg !4868

; <label>:180:                                    ; preds = %176
  %181 = call i64 @aofReadDiffFromParent() #9, !dbg !4869
  br label %182, !dbg !4871

; <label>:182:                                    ; preds = %176, %180, %175
  %183 = phi i64 [ %177, %180 ], [ %165, %176 ], [ %165, %175 ], !dbg !4872
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #4, !dbg !4862
  %184 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %90) #9, !dbg !4843
  %185 = icmp eq %struct.dictEntry* %184, null, !dbg !4845
  br i1 %185, label %186, label %163, !dbg !4846

; <label>:186:                                    ; preds = %182, %160
  %187 = phi i64 [ %78, %160 ], [ %183, %182 ], !dbg !4691
  call void @dictReleaseIterator(%struct.dictIterator* %90) #9, !dbg !4873
  %188 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !4741, !tbaa !4742
  br label %189, !dbg !4874

; <label>:189:                                    ; preds = %75, %186
  %190 = phi i32 [ %76, %75 ], [ %188, %186 ], !dbg !4741
  %191 = phi i64 [ %78, %75 ], [ %187, %186 ], !dbg !4691
  %192 = add nuw nsw i64 %77, 1, !dbg !4875
  %193 = sext i32 %190 to i64, !dbg !4743
  %194 = icmp slt i64 %192, %193, !dbg !4743
  br i1 %194, label %75, label %195, !dbg !4744, !llvm.loop !4876

; <label>:195:                                    ; preds = %189, %60
  %196 = icmp eq %struct.rdbSaveInfo* %3, null, !dbg !4878
  br i1 %196, label %245, label %197, !dbg !4879

; <label>:197:                                    ; preds = %195
  %198 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 273), align 8, !dbg !4880, !tbaa !4881
  %199 = getelementptr inbounds %struct.dict, %struct.dict* %198, i64 0, i32 2, i64 0, i32 3, !dbg !4880
  %200 = load i64, i64* %199, align 8, !dbg !4880, !tbaa !3508
  %201 = getelementptr inbounds %struct.dict, %struct.dict* %198, i64 0, i32 2, i64 1, i32 3, !dbg !4880
  %202 = load i64, i64* %201, align 8, !dbg !4880, !tbaa !3508
  %203 = sub i64 0, %202, !dbg !4880
  %204 = icmp eq i64 %200, %203, !dbg !4880
  br i1 %204, label %245, label %205, !dbg !4882

; <label>:205:                                    ; preds = %197
  %206 = call %struct.dictIterator* @dictGetIterator(%struct.dict* %198) #9, !dbg !4883
  br label %207, !dbg !4884

; <label>:207:                                    ; preds = %240, %205
  %208 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %206) #9, !dbg !4885
  %209 = icmp eq %struct.dictEntry* %208, null, !dbg !4886
  br i1 %209, label %244, label %210, !dbg !4884

; <label>:210:                                    ; preds = %207
  %211 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %208, i64 0, i32 1, i32 0, !dbg !4887
  %212 = bitcast i8** %211 to %struct.redisObject**, !dbg !4887
  %213 = load %struct.redisObject*, %struct.redisObject** %212, align 8, !dbg !4887, !tbaa !540
  %214 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %213, i64 0, i32 2, !dbg !4889
  %215 = load i8*, i8** %214, align 8, !dbg !4889, !tbaa !2002
  %216 = getelementptr inbounds i8, i8* %215, i64 -1, !dbg !4893
  %217 = load i8, i8* %216, align 1, !dbg !4893, !tbaa !540
  %218 = trunc i8 %217 to i3, !dbg !4895
  switch i3 %218, label %240 [
    i3 0, label %219
    i3 1, label %222
    i3 2, label %226
    i3 3, label %231
    i3 -4, label %236
  ], !dbg !4895

; <label>:219:                                    ; preds = %210
  %220 = lshr i8 %217, 3, !dbg !4896
  %221 = zext i8 %220 to i64, !dbg !4896
  br label %240, !dbg !4897

; <label>:222:                                    ; preds = %210
  %223 = getelementptr inbounds i8, i8* %215, i64 -3, !dbg !4898
  %224 = load i8, i8* %223, align 1, !dbg !4899, !tbaa !540
  %225 = zext i8 %224 to i64, !dbg !4898
  br label %240, !dbg !4900

; <label>:226:                                    ; preds = %210
  %227 = getelementptr inbounds i8, i8* %215, i64 -5, !dbg !4901
  %228 = bitcast i8* %227 to i16*, !dbg !4902
  %229 = load i16, i16* %228, align 1, !dbg !4902, !tbaa !2029
  %230 = zext i16 %229 to i64, !dbg !4901
  br label %240, !dbg !4903

; <label>:231:                                    ; preds = %210
  %232 = getelementptr inbounds i8, i8* %215, i64 -9, !dbg !4904
  %233 = bitcast i8* %232 to i32*, !dbg !4905
  %234 = load i32, i32* %233, align 1, !dbg !4905, !tbaa !191
  %235 = zext i32 %234 to i64, !dbg !4904
  br label %240, !dbg !4906

; <label>:236:                                    ; preds = %210
  %237 = getelementptr inbounds i8, i8* %215, i64 -17, !dbg !4907
  %238 = bitcast i8* %237 to i64*, !dbg !4908
  %239 = load i64, i64* %238, align 1, !dbg !4908, !tbaa !682
  br label %240, !dbg !4909

; <label>:240:                                    ; preds = %210, %219, %222, %226, %231, %236
  %241 = phi i64 [ %239, %236 ], [ %235, %231 ], [ %230, %226 ], [ %225, %222 ], [ %221, %219 ], [ 0, %210 ], !dbg !4910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4911
  %242 = call i64 @rdbSaveAuxField(%struct._rio* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i64 3, i8* %215, i64 %241) #11, !dbg !4912
  %243 = icmp eq i64 %242, -1, !dbg !4913
  br i1 %243, label %302, label %207

; <label>:244:                                    ; preds = %207
  call void @dictReleaseIterator(%struct.dictIterator* %206) #9, !dbg !4914
  br label %245, !dbg !4915

; <label>:245:                                    ; preds = %197, %195, %244
  %246 = call i64 @rdbSaveModulesAux(%struct._rio* %0, i32 2) #9, !dbg !4916
  %247 = icmp eq i64 %246, -1, !dbg !4918
  br i1 %247, label %302, label %248, !dbg !4919

; <label>:248:                                    ; preds = %245
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5), !dbg !4920
  store i8 -1, i8* %5, align 1, !tbaa !540
  %249 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %250 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %251 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %252 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br i1 %54, label %276, label %253, !dbg !4928

; <label>:253:                                    ; preds = %248, %268
  %254 = phi i64 [ %270, %268 ], [ 1, %248 ]
  %255 = phi i8* [ %269, %268 ], [ %5, %248 ]
  %256 = load i64, i64* %249, align 8, !dbg !4932, !tbaa !506
  %257 = icmp ne i64 %256, 0, !dbg !4933
  %258 = icmp ult i64 %256, %254, !dbg !4934
  %259 = and i1 %257, %258, !dbg !4935
  %260 = select i1 %259, i64 %256, i64 %254, !dbg !4935
  %261 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %250, align 8, !dbg !4937, !tbaa !520
  %262 = icmp eq void (%struct._rio*, i8*, i64)* %261, null, !dbg !4938
  br i1 %262, label %264, label %263, !dbg !4939

; <label>:263:                                    ; preds = %253
  call void %261(%struct._rio* nonnull %0, i8* %255, i64 %260) #9, !dbg !4940
  br label %264, !dbg !4940

; <label>:264:                                    ; preds = %263, %253
  %265 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %251, align 8, !dbg !4941, !tbaa !584
  %266 = call i64 %265(%struct._rio* nonnull %0, i8* %255, i64 %260) #9, !dbg !4942
  %267 = icmp eq i64 %266, 0, !dbg !4943
  br i1 %267, label %275, label %268, !dbg !4944

; <label>:268:                                    ; preds = %264
  %269 = getelementptr inbounds i8, i8* %255, i64 %260, !dbg !4945
  %270 = sub i64 %254, %260, !dbg !4946
  %271 = load i64, i64* %252, align 8, !dbg !4947, !tbaa !527
  %272 = add i64 %271, %260, !dbg !4947
  store i64 %272, i64* %252, align 8, !dbg !4947, !tbaa !527
  %273 = icmp eq i64 %270, 0, !dbg !4948
  br i1 %273, label %274, label %253, !dbg !4948

; <label>:274:                                    ; preds = %268
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4949
  br label %276, !dbg !4950

; <label>:275:                                    ; preds = %264
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4949
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4951
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4952
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5), !dbg !4952
  br label %302, !dbg !4953

; <label>:276:                                    ; preds = %248, %274
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4951
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4952
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5), !dbg !4952
  %277 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 5, !dbg !4954
  %278 = load i64, i64* %277, align 8, !dbg !4954, !tbaa !4955
  store i64 %278, i64* %9, align 8, !dbg !4957, !tbaa !682
  br label %279, !dbg !4963

; <label>:279:                                    ; preds = %295, %276
  %280 = phi i64 [ 8, %276 ], [ %297, %295 ]
  %281 = phi i8* [ %12, %276 ], [ %296, %295 ]
  %282 = load i64, i64* %249, align 8, !dbg !4964, !tbaa !506
  %283 = icmp ne i64 %282, 0, !dbg !4965
  %284 = icmp ult i64 %282, %280, !dbg !4966
  %285 = and i1 %283, %284, !dbg !4967
  %286 = select i1 %285, i64 %282, i64 %280, !dbg !4967
  %287 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %250, align 8, !dbg !4969, !tbaa !520
  %288 = icmp eq void (%struct._rio*, i8*, i64)* %287, null, !dbg !4970
  br i1 %288, label %290, label %289, !dbg !4971

; <label>:289:                                    ; preds = %279
  call void %287(%struct._rio* nonnull %0, i8* %281, i64 %286) #9, !dbg !4972
  br label %290, !dbg !4972

; <label>:290:                                    ; preds = %289, %279
  %291 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %251, align 8, !dbg !4973, !tbaa !584
  %292 = call i64 %291(%struct._rio* nonnull %0, i8* %281, i64 %286) #9, !dbg !4974
  %293 = icmp eq i64 %292, 0, !dbg !4975
  br i1 %293, label %294, label %295, !dbg !4976

; <label>:294:                                    ; preds = %290
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4977
  br label %302, !dbg !4978

; <label>:295:                                    ; preds = %290
  %296 = getelementptr inbounds i8, i8* %281, i64 %286, !dbg !4979
  %297 = sub i64 %280, %286, !dbg !4980
  %298 = load i64, i64* %252, align 8, !dbg !4981, !tbaa !527
  %299 = add i64 %298, %286, !dbg !4981
  store i64 %299, i64* %252, align 8, !dbg !4981, !tbaa !527
  %300 = icmp eq i64 %297, 0, !dbg !4963
  br i1 %300, label %301, label %279, !dbg !4963

; <label>:301:                                    ; preds = %295
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4977
  br label %311

; <label>:302:                                    ; preds = %157, %153, %114, %240, %174, %152, %113, %294, %275, %52, %245, %57, %53
  %303 = phi %struct.dictIterator* [ null, %52 ], [ null, %53 ], [ null, %57 ], [ null, %245 ], [ null, %275 ], [ null, %294 ], [ %90, %113 ], [ %90, %152 ], [ %90, %174 ], [ %206, %240 ], [ %90, %114 ], [ %90, %153 ], [ %90, %157 ], !dbg !4982
  %304 = icmp eq i32* %1, null, !dbg !4983
  br i1 %304, label %308, label %305, !dbg !4985

; <label>:305:                                    ; preds = %302
  %306 = call i32* @__errno() #9, !dbg !4986
  %307 = load i32, i32* %306, align 4, !dbg !4986, !tbaa !191
  store i32 %307, i32* %1, align 4, !dbg !4987, !tbaa !191
  br label %308, !dbg !4988

; <label>:308:                                    ; preds = %302, %305
  %309 = icmp eq %struct.dictIterator* %303, null, !dbg !4989
  br i1 %309, label %311, label %310, !dbg !4991

; <label>:310:                                    ; preds = %308
  call void @dictReleaseIterator(%struct.dictIterator* nonnull %303) #9, !dbg !4992
  br label %311, !dbg !4992

; <label>:311:                                    ; preds = %301, %310, %308
  %312 = phi i32 [ 0, %301 ], [ -1, %308 ], [ -1, %310 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #4, !dbg !4993
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %11) #4, !dbg !4993
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4993
  ret i32 %312, !dbg !4993
}

; Function Attrs: noredzone
declare dso_local void @rioGenericUpdateChecksum(%struct._rio*, i8*, i64) #3

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveModulesAux(%struct._rio*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetSafeIterator(%struct.dict*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @getExpire(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @aofReadDiffFromParent() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32* @__errno() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveRioWithEOFMark(%struct._rio*, i32*, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !4994 {
  %4 = alloca [40 x i8], align 16
  %5 = getelementptr inbounds [40 x i8], [40 x i8]* %4, i64 0, i64 0, !dbg !5008
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #4, !dbg !5008
  call void @getRandomHexChars(i8* nonnull %5, i64 40) #9, !dbg !5010
  %6 = icmp ne i32* %1, null, !dbg !5011
  br i1 %6, label %7, label %8, !dbg !5013

; <label>:7:                                      ; preds = %3
  store i32 0, i32* %1, align 4, !dbg !5014, !tbaa !191
  br label %8, !dbg !5015

; <label>:8:                                      ; preds = %7, %3
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %13, !dbg !5021

; <label>:13:                                     ; preds = %28, %8
  %14 = phi i64 [ 5, %8 ], [ %30, %28 ]
  %15 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), %8 ], [ %29, %28 ]
  %16 = load i64, i64* %9, align 8, !dbg !5022, !tbaa !506
  %17 = icmp ne i64 %16, 0, !dbg !5023
  %18 = icmp ult i64 %16, %14, !dbg !5024
  %19 = and i1 %17, %18, !dbg !5025
  %20 = select i1 %19, i64 %16, i64 %14, !dbg !5025
  %21 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %10, align 8, !dbg !5027, !tbaa !520
  %22 = icmp eq void (%struct._rio*, i8*, i64)* %21, null, !dbg !5028
  br i1 %22, label %24, label %23, !dbg !5029

; <label>:23:                                     ; preds = %13
  call void %21(%struct._rio* nonnull %0, i8* %15, i64 %20) #9, !dbg !5030
  br label %24, !dbg !5030

; <label>:24:                                     ; preds = %23, %13
  %25 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !5031, !tbaa !584
  %26 = call i64 %25(%struct._rio* nonnull %0, i8* %15, i64 %20) #9, !dbg !5032
  %27 = icmp eq i64 %26, 0, !dbg !5033
  br i1 %27, label %104, label %28, !dbg !5034

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds i8, i8* %15, i64 %20, !dbg !5035
  %30 = sub i64 %14, %20, !dbg !5036
  %31 = load i64, i64* %12, align 8, !dbg !5037, !tbaa !527
  %32 = add i64 %31, %20, !dbg !5037
  store i64 %32, i64* %12, align 8, !dbg !5037, !tbaa !527
  %33 = icmp eq i64 %30, 0, !dbg !5021
  br i1 %33, label %34, label %13, !dbg !5021

; <label>:34:                                     ; preds = %28
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5038
  br label %35, !dbg !5044

; <label>:35:                                     ; preds = %50, %34
  %36 = phi i64 [ 40, %34 ], [ %52, %50 ]
  %37 = phi i8* [ %5, %34 ], [ %51, %50 ]
  %38 = load i64, i64* %9, align 8, !dbg !5045, !tbaa !506
  %39 = icmp ne i64 %38, 0, !dbg !5046
  %40 = icmp ult i64 %38, %36, !dbg !5047
  %41 = and i1 %39, %40, !dbg !5048
  %42 = select i1 %41, i64 %38, i64 %36, !dbg !5048
  %43 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %10, align 8, !dbg !5050, !tbaa !520
  %44 = icmp eq void (%struct._rio*, i8*, i64)* %43, null, !dbg !5051
  br i1 %44, label %46, label %45, !dbg !5052

; <label>:45:                                     ; preds = %35
  call void %43(%struct._rio* nonnull %0, i8* %37, i64 %42) #9, !dbg !5053
  br label %46, !dbg !5053

; <label>:46:                                     ; preds = %45, %35
  %47 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !5054, !tbaa !584
  %48 = call i64 %47(%struct._rio* nonnull %0, i8* %37, i64 %42) #9, !dbg !5055
  %49 = icmp eq i64 %48, 0, !dbg !5056
  br i1 %49, label %104, label %50, !dbg !5057

; <label>:50:                                     ; preds = %46
  %51 = getelementptr inbounds i8, i8* %37, i64 %42, !dbg !5058
  %52 = sub i64 %36, %42, !dbg !5059
  %53 = load i64, i64* %12, align 8, !dbg !5060, !tbaa !527
  %54 = add i64 %53, %42, !dbg !5060
  store i64 %54, i64* %12, align 8, !dbg !5060, !tbaa !527
  %55 = icmp eq i64 %52, 0, !dbg !5044
  br i1 %55, label %56, label %35, !dbg !5044

; <label>:56:                                     ; preds = %50
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5061
  br label %57, !dbg !5067

; <label>:57:                                     ; preds = %72, %56
  %58 = phi i64 [ 2, %56 ], [ %74, %72 ]
  %59 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0), %56 ], [ %73, %72 ]
  %60 = load i64, i64* %9, align 8, !dbg !5068, !tbaa !506
  %61 = icmp ne i64 %60, 0, !dbg !5069
  %62 = icmp ult i64 %60, %58, !dbg !5070
  %63 = and i1 %61, %62, !dbg !5071
  %64 = select i1 %63, i64 %60, i64 %58, !dbg !5071
  %65 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %10, align 8, !dbg !5073, !tbaa !520
  %66 = icmp eq void (%struct._rio*, i8*, i64)* %65, null, !dbg !5074
  br i1 %66, label %68, label %67, !dbg !5075

; <label>:67:                                     ; preds = %57
  call void %65(%struct._rio* nonnull %0, i8* %59, i64 %64) #9, !dbg !5076
  br label %68, !dbg !5076

; <label>:68:                                     ; preds = %67, %57
  %69 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !5077, !tbaa !584
  %70 = call i64 %69(%struct._rio* nonnull %0, i8* %59, i64 %64) #9, !dbg !5078
  %71 = icmp eq i64 %70, 0, !dbg !5079
  br i1 %71, label %104, label %72, !dbg !5080

; <label>:72:                                     ; preds = %68
  %73 = getelementptr inbounds i8, i8* %59, i64 %64, !dbg !5081
  %74 = sub i64 %58, %64, !dbg !5082
  %75 = load i64, i64* %12, align 8, !dbg !5083, !tbaa !527
  %76 = add i64 %75, %64, !dbg !5083
  store i64 %76, i64* %12, align 8, !dbg !5083, !tbaa !527
  %77 = icmp eq i64 %74, 0, !dbg !5067
  br i1 %77, label %78, label %57, !dbg !5067

; <label>:78:                                     ; preds = %72
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5084
  %79 = call i32 @rdbSaveRio(%struct._rio* nonnull %0, i32* %1, i32 0, %struct.rdbSaveInfo* %2) #11, !dbg !5085
  %80 = icmp eq i32 %79, -1, !dbg !5087
  br i1 %80, label %105, label %81, !dbg !5088

; <label>:81:                                     ; preds = %78, %96
  %82 = phi i64 [ %98, %96 ], [ 40, %78 ]
  %83 = phi i8* [ %97, %96 ], [ %5, %78 ]
  %84 = load i64, i64* %9, align 8, !dbg !5093, !tbaa !506
  %85 = icmp ne i64 %84, 0, !dbg !5094
  %86 = icmp ult i64 %84, %82, !dbg !5095
  %87 = and i1 %85, %86, !dbg !5096
  %88 = select i1 %87, i64 %84, i64 %82, !dbg !5096
  %89 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %10, align 8, !dbg !5098, !tbaa !520
  %90 = icmp eq void (%struct._rio*, i8*, i64)* %89, null, !dbg !5099
  br i1 %90, label %92, label %91, !dbg !5100

; <label>:91:                                     ; preds = %81
  call void %89(%struct._rio* nonnull %0, i8* %83, i64 %88) #9, !dbg !5101
  br label %92, !dbg !5101

; <label>:92:                                     ; preds = %91, %81
  %93 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !5102, !tbaa !584
  %94 = call i64 %93(%struct._rio* nonnull %0, i8* %83, i64 %88) #9, !dbg !5103
  %95 = icmp eq i64 %94, 0, !dbg !5104
  br i1 %95, label %103, label %96, !dbg !5105

; <label>:96:                                     ; preds = %92
  %97 = getelementptr inbounds i8, i8* %83, i64 %88, !dbg !5106
  %98 = sub i64 %82, %88, !dbg !5107
  %99 = load i64, i64* %12, align 8, !dbg !5108, !tbaa !527
  %100 = add i64 %99, %88, !dbg !5108
  store i64 %100, i64* %12, align 8, !dbg !5108, !tbaa !527
  %101 = icmp eq i64 %98, 0, !dbg !5109
  br i1 %101, label %102, label %81, !dbg !5109

; <label>:102:                                    ; preds = %96
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5110
  br label %112, !dbg !5111

; <label>:103:                                    ; preds = %92
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5110
  br i1 %6, label %106, label %112, !dbg !5111

; <label>:104:                                    ; preds = %24, %46, %68
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5084
  br label %105, !dbg !5112

; <label>:105:                                    ; preds = %104, %78
  br i1 %6, label %106, label %112, !dbg !5112

; <label>:106:                                    ; preds = %103, %105
  %107 = load i32, i32* %1, align 4, !dbg !5114, !tbaa !191
  %108 = icmp eq i32 %107, 0, !dbg !5115
  br i1 %108, label %109, label %112, !dbg !5116

; <label>:109:                                    ; preds = %106
  %110 = call i32* @__errno() #9, !dbg !5117
  %111 = load i32, i32* %110, align 4, !dbg !5117, !tbaa !191
  store i32 %111, i32* %1, align 4, !dbg !5118, !tbaa !191
  br label %112, !dbg !5119

; <label>:112:                                    ; preds = %103, %102, %105, %106, %109
  %113 = phi i32 [ -1, %103 ], [ -1, %109 ], [ -1, %106 ], [ -1, %105 ], [ 0, %102 ], !dbg !5120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #4, !dbg !5121
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5121
  ret i32 %113, !dbg !5121
}

; Function Attrs: noredzone
declare dso_local void @getRandomHexChars(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSave(i8*, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !5122 {
  %3 = alloca [256 x i8], align 16
  %4 = alloca [1024 x i8], align 16
  %5 = alloca %struct._rio, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0, !dbg !5141
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %7) #4, !dbg !5141
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0, !dbg !5143
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #4, !dbg !5143
  %9 = bitcast %struct._rio* %5 to i8*, !dbg !5145
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #4, !dbg !5145
  %10 = bitcast i32* %6 to i8*, !dbg !5146
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #4, !dbg !5146
  store i32 0, i32* %6, align 4, !dbg !5147, !tbaa !191
  %11 = tail call i32 @getpid() #9, !dbg !5148
  %12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %7, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i32 %11) #9, !dbg !5149
  %13 = call %struct.__sFILE* @fopen(i8* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !5150
  %14 = icmp eq %struct.__sFILE* %13, null, !dbg !5152
  br i1 %14, label %15, label %22, !dbg !5153

; <label>:15:                                     ; preds = %2
  %16 = call i8* @getcwd(i8* nonnull %8, i64 1024) #9, !dbg !5154
  %17 = icmp eq i8* %16, null, !dbg !5156
  %18 = select i1 %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i8* %16, !dbg !5156
  %19 = call i32* @__errno() #9, !dbg !5157
  %20 = load i32, i32* %19, align 4, !dbg !5157, !tbaa !191
  %21 = call i8* @strerror(i32 %20) #9, !dbg !5158
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.35, i64 0, i64 0), i8* %0, i8* %18, i8* %21) #9, !dbg !5159
  br label %61

; <label>:22:                                     ; preds = %2
  call void @rioInitWithFile(%struct._rio* nonnull %5, %struct.__sFILE* nonnull %13) #9, !dbg !5161
  %23 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 139), align 4, !dbg !5162, !tbaa !5164
  %24 = icmp eq i32 %23, 0, !dbg !5165
  br i1 %24, label %26, label %25, !dbg !5166

; <label>:25:                                     ; preds = %22
  call void @rioSetAutoSync(%struct._rio* nonnull %5, i64 33554432) #9, !dbg !5167
  br label %26, !dbg !5167

; <label>:26:                                     ; preds = %22, %25
  %27 = call i32 @rdbSaveRio(%struct._rio* nonnull %5, i32* nonnull %6, i32 0, %struct.rdbSaveInfo* %1) #11, !dbg !5168
  %28 = icmp eq i32 %27, -1, !dbg !5170
  br i1 %28, label %29, label %32, !dbg !5171

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* %6, align 4, !dbg !5172, !tbaa !191
  %31 = call i32* @__errno() #9, !dbg !5174
  store i32 %30, i32* %31, align 4, !dbg !5175, !tbaa !191
  br label %55, !dbg !5176

; <label>:32:                                     ; preds = %26
  %33 = call i32 @fflush(%struct.__sFILE* nonnull %13) #9, !dbg !5177
  %34 = icmp eq i32 %33, -1, !dbg !5179
  br i1 %34, label %55, label %35, !dbg !5180

; <label>:35:                                     ; preds = %32
  %36 = call i32 @fileno(%struct.__sFILE* nonnull %13) #9, !dbg !5181
  %37 = call i32 @fsync(i32 %36) #9, !dbg !5183
  %38 = icmp eq i32 %37, -1, !dbg !5184
  br i1 %38, label %55, label %39, !dbg !5185

; <label>:39:                                     ; preds = %35
  %40 = call i32 @fclose(%struct.__sFILE* nonnull %13) #9, !dbg !5186
  %41 = icmp eq i32 %40, -1, !dbg !5188
  br i1 %41, label %55, label %42, !dbg !5189

; <label>:42:                                     ; preds = %39
  %43 = call i32 @rename(i8* nonnull %7, i8* %0) #9, !dbg !5190
  %44 = icmp eq i32 %43, -1, !dbg !5191
  br i1 %44, label %45, label %53, !dbg !5192

; <label>:45:                                     ; preds = %42
  %46 = call i8* @getcwd(i8* nonnull %8, i64 1024) #9, !dbg !5193
  %47 = icmp eq i8* %46, null, !dbg !5195
  %48 = select i1 %47, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i8* %46, !dbg !5195
  %49 = call i32* @__errno() #9, !dbg !5196
  %50 = load i32, i32* %49, align 4, !dbg !5196, !tbaa !191
  %51 = call i8* @strerror(i32 %50) #9, !dbg !5197
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.37, i64 0, i64 0), i8* nonnull %7, i8* %0, i8* %48, i8* %51) #9, !dbg !5198
  %52 = call i32 @unlink(i8* nonnull %7) #9, !dbg !5199
  br label %61

; <label>:53:                                     ; preds = %42
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #9, !dbg !5200
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !5201, !tbaa !5202
  %54 = call i64 @time(i64* null) #9, !dbg !5203
  store i64 %54, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 160), align 8, !dbg !5204, !tbaa !5205
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !5206, !tbaa !5207
  br label %61, !dbg !5208

; <label>:55:                                     ; preds = %39, %35, %32, %29
  %56 = call i32* @__errno() #9, !dbg !5209
  %57 = load i32, i32* %56, align 4, !dbg !5209, !tbaa !191
  %58 = call i8* @strerror(i32 %57) #9, !dbg !5210
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.39, i64 0, i64 0), i8* %58) #9, !dbg !5211
  %59 = call i32 @fclose(%struct.__sFILE* nonnull %13) #9, !dbg !5212
  %60 = call i32 @unlink(i8* nonnull %7) #9, !dbg !5213
  br label %61, !dbg !5214

; <label>:61:                                     ; preds = %55, %53, %45, %15
  %62 = phi i32 [ -1, %55 ], [ -1, %45 ], [ 0, %53 ], [ -1, %15 ], !dbg !5215
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #4, !dbg !5216
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #4, !dbg !5216
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #4, !dbg !5216
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %7) #4, !dbg !5216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5216
  ret i32 %62, !dbg !5216
}

; Function Attrs: noredzone
declare dso_local i32 @getpid() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.__sFILE* @fopen(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @getcwd(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @strerror(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rioInitWithFile(%struct._rio*, %struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rioSetAutoSync(%struct._rio*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fflush(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fsync(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fileno(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fclose(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @rename(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @unlink(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveBackground(i8*, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !5217 {
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !5233, !tbaa !5235
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !5236
  %5 = and i32 %4, %3, !dbg !5237
  %6 = icmp eq i32 %5, -1, !dbg !5237
  br i1 %6, label %7, label %49, !dbg !5237

; <label>:7:                                      ; preds = %2
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !5238, !tbaa !5202
  store i64 %8, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 153), align 8, !dbg !5239, !tbaa !5240
  %9 = tail call i64 @time(i64* null) #9, !dbg !5241
  store i64 %9, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 161), align 8, !dbg !5242, !tbaa !5243
  tail call void @openChildInfoPipe() #9, !dbg !5244
  %10 = tail call i64 @ustime() #9, !dbg !5245
  %11 = tail call i32 @fork() #9, !dbg !5247
  %12 = icmp eq i32 %11, 0, !dbg !5249
  br i1 %12, label %13, label %25, !dbg !5250

; <label>:13:                                     ; preds = %7
  tail call void @closeListeningSockets(i32 0) #9, !dbg !5251
  tail call void @redisSetProcTitle(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #9, !dbg !5252
  %14 = tail call i32 @rdbSave(i8* %0, %struct.rdbSaveInfo* %1) #11, !dbg !5253
  %15 = icmp eq i32 %14, 0, !dbg !5255
  br i1 %15, label %16, label %22, !dbg !5256

; <label>:16:                                     ; preds = %13
  %17 = tail call i64 @zmalloc_get_private_dirty(i64 -1) #9, !dbg !5257
  %18 = icmp eq i64 %17, 0, !dbg !5259
  br i1 %18, label %21, label %19, !dbg !5261

; <label>:19:                                     ; preds = %16
  %20 = lshr i64 %17, 20, !dbg !5262
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i64 %20) #9, !dbg !5264
  br label %21, !dbg !5265

; <label>:21:                                     ; preds = %16, %19
  store i64 %17, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 171, i32 1), align 8, !dbg !5266, !tbaa !5267
  tail call void @sendChildInfo(i32 0) #9, !dbg !5268
  br label %22, !dbg !5269

; <label>:22:                                     ; preds = %21, %13
  %23 = xor i1 %15, true, !dbg !5270
  %24 = zext i1 %23 to i32, !dbg !5270
  tail call void @exitFromChild(i32 %24) #9, !dbg !5271
  br label %49, !dbg !5272

; <label>:25:                                     ; preds = %7
  %26 = tail call i64 @ustime() #9, !dbg !5273
  %27 = sub nsw i64 %26, %10, !dbg !5275
  store i64 %27, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !5276, !tbaa !5277
  %28 = tail call i64 @zmalloc_used_memory() #9, !dbg !5278
  %29 = uitofp i64 %28 to double, !dbg !5279
  %30 = fmul double %29, 1.000000e+06, !dbg !5280
  %31 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !5281, !tbaa !5277
  %32 = sitofp i64 %31 to double, !dbg !5282
  %33 = fdiv double %30, %32, !dbg !5283
  %34 = fmul double %33, 0x3E10000000000000, !dbg !5284
  store double %34, double* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !5285, !tbaa !5286
  %35 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !5287, !tbaa !5289
  %36 = icmp eq i64 %35, 0, !dbg !5287
  br i1 %36, label %41, label %37, !dbg !5287

; <label>:37:                                     ; preds = %25
  %38 = sdiv i64 %31, 1000, !dbg !5287
  %39 = icmp slt i64 %38, %35, !dbg !5287
  br i1 %39, label %41, label %40, !dbg !5290

; <label>:40:                                     ; preds = %37
  tail call void @latencyAddSample(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i64 %38) #9, !dbg !5287
  br label %41, !dbg !5287

; <label>:41:                                     ; preds = %37, %25, %40
  %42 = icmp eq i32 %11, -1, !dbg !5291
  br i1 %42, label %43, label %47, !dbg !5293

; <label>:43:                                     ; preds = %41
  tail call void @closeChildInfoPipe() #9, !dbg !5294
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !5296, !tbaa !5207
  %44 = tail call i32* @__errno() #9, !dbg !5297
  %45 = load i32, i32* %44, align 4, !dbg !5297, !tbaa !191
  %46 = tail call i8* @strerror(i32 %45) #9, !dbg !5298
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0), i8* %46) #9, !dbg !5299
  br label %49, !dbg !5300

; <label>:47:                                     ; preds = %41
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.44, i64 0, i64 0), i32 %11) #9, !dbg !5301
  %48 = tail call i64 @time(i64* null) #9, !dbg !5302
  store i64 %48, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !5303, !tbaa !5304
  store i32 %11, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !5305, !tbaa !5306
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !5307, !tbaa !5308
  tail call void @updateDictResizePolicy() #9, !dbg !5309
  br label %49, !dbg !5310

; <label>:49:                                     ; preds = %2, %22, %47, %43
  %50 = phi i32 [ 0, %22 ], [ -1, %43 ], [ 0, %47 ], [ -1, %2 ], !dbg !5311
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5312
  ret i32 %50, !dbg !5312
}

; Function Attrs: noredzone
declare dso_local void @openChildInfoPipe() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @ustime() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fork() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @closeListeningSockets(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @redisSetProcTitle(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @zmalloc_get_private_dirty(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sendChildInfo(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @exitFromChild(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @latencyAddSample(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @closeChildInfoPipe() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @updateDictResizePolicy() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @rdbRemoveTempFile(i32) local_unnamed_addr #6 !dbg !5313 {
  %2 = alloca [256 x i8], align 16
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0, !dbg !5320
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3) #4, !dbg !5320
  %4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i32 %0) #9, !dbg !5322
  %5 = call i32 @unlink(i8* nonnull %3) #9, !dbg !5323
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3) #4, !dbg !5324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5324
  ret void, !dbg !5324
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @rdbLoadCheckModuleValue(%struct._rio*, i8*) local_unnamed_addr #6 !dbg !5325 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca float, align 4
  %6 = alloca double, align 8
  %7 = bitcast i64* %3 to i8*, !dbg !5350
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4, !dbg !5350
  %8 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* null, i64* nonnull %3) #9, !dbg !5352
  %9 = icmp eq i32 %8, -1, !dbg !5353
  %10 = load i64, i64* %3, align 8, !dbg !5354
  %11 = select i1 %9, i64 -1, i64 %10, !dbg !5355
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4, !dbg !5356
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5356
  %12 = icmp eq i64 %11, 0, !dbg !5358
  br i1 %12, label %91, label %13, !dbg !5359

; <label>:13:                                     ; preds = %2
  %14 = bitcast i64* %4 to i8*
  %15 = bitcast float* %5 to i8*
  %16 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %17 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %18 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %19 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  %20 = bitcast double* %6 to i8*
  br label %21, !dbg !5359

; <label>:21:                                     ; preds = %13, %85
  %22 = phi i64 [ %11, %13 ], [ %89, %85 ]
  %23 = add i64 %22, -1, !dbg !5360
  %24 = icmp ult i64 %23, 2, !dbg !5360
  br i1 %24, label %25, label %30, !dbg !5360

; <label>:25:                                     ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #4, !dbg !5361
  %26 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* null, i64* nonnull %4) #11, !dbg !5363
  %27 = icmp eq i32 %26, -1, !dbg !5365
  br i1 %27, label %28, label %29, !dbg !5366

; <label>:28:                                     ; preds = %25
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1399, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.45, i64 0, i64 0), i8* %1) #11, !dbg !5367
  unreachable

; <label>:29:                                     ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4, !dbg !5369
  br label %85, !dbg !5370

; <label>:30:                                     ; preds = %21
  switch i64 %22, label %85 [
    i64 5, label %31
    i64 3, label %37
    i64 4, label %61
  ], !dbg !5371

; <label>:31:                                     ; preds = %30
  %32 = call i8* @rdbGenericLoadStringObject(%struct._rio* %0, i32 0, i64* null) #11, !dbg !5372
  %33 = icmp eq i8* %32, null, !dbg !5373
  br i1 %33, label %34, label %35, !dbg !5375

; <label>:34:                                     ; preds = %31
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1405, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46, i64 0, i64 0), i8* %1) #11, !dbg !5376
  unreachable

; <label>:35:                                     ; preds = %31
  %36 = bitcast i8* %32 to %struct.redisObject*, !dbg !5372
  call void @decrRefCount(%struct.redisObject* %36) #9, !dbg !5379
  br label %85, !dbg !5380

; <label>:37:                                     ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #4, !dbg !5381
  br label %38, !dbg !5391

; <label>:38:                                     ; preds = %53, %37
  %39 = phi i64 [ 4, %37 ], [ %55, %53 ]
  %40 = phi i8* [ %15, %37 ], [ %54, %53 ]
  %41 = load i64, i64* %16, align 8, !dbg !5392, !tbaa !506
  %42 = icmp ne i64 %41, 0, !dbg !5393
  %43 = icmp ult i64 %41, %39, !dbg !5394
  %44 = and i1 %42, %43, !dbg !5395
  %45 = select i1 %44, i64 %41, i64 %39, !dbg !5395
  %46 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %17, align 8, !dbg !5397, !tbaa !514
  %47 = call i64 %46(%struct._rio* %0, i8* %40, i64 %45) #9, !dbg !5398
  %48 = icmp eq i64 %47, 0, !dbg !5399
  br i1 %48, label %59, label %49, !dbg !5400

; <label>:49:                                     ; preds = %38
  %50 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %18, align 8, !dbg !5401, !tbaa !520
  %51 = icmp eq void (%struct._rio*, i8*, i64)* %50, null, !dbg !5402
  br i1 %51, label %53, label %52, !dbg !5403

; <label>:52:                                     ; preds = %49
  call void %50(%struct._rio* nonnull %0, i8* %40, i64 %45) #9, !dbg !5404
  br label %53, !dbg !5404

; <label>:53:                                     ; preds = %52, %49
  %54 = getelementptr inbounds i8, i8* %40, i64 %45, !dbg !5405
  %55 = sub i64 %39, %45, !dbg !5406
  %56 = load i64, i64* %19, align 8, !dbg !5407, !tbaa !527
  %57 = add i64 %56, %45, !dbg !5407
  store i64 %57, i64* %19, align 8, !dbg !5407, !tbaa !527
  %58 = icmp eq i64 %55, 0, !dbg !5391
  br i1 %58, label %60, label %38, !dbg !5391

; <label>:59:                                     ; preds = %38
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5408
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5409
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1412, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.47, i64 0, i64 0), i8* %1) #11, !dbg !5410
  unreachable

; <label>:60:                                     ; preds = %53
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5408
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5409
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #4, !dbg !5412
  br label %85, !dbg !5413

; <label>:61:                                     ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #4, !dbg !5414
  br label %62, !dbg !5424

; <label>:62:                                     ; preds = %77, %61
  %63 = phi i64 [ 8, %61 ], [ %79, %77 ]
  %64 = phi i8* [ %20, %61 ], [ %78, %77 ]
  %65 = load i64, i64* %16, align 8, !dbg !5425, !tbaa !506
  %66 = icmp ne i64 %65, 0, !dbg !5426
  %67 = icmp ult i64 %65, %63, !dbg !5427
  %68 = and i1 %66, %67, !dbg !5428
  %69 = select i1 %68, i64 %65, i64 %63, !dbg !5428
  %70 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %17, align 8, !dbg !5430, !tbaa !514
  %71 = call i64 %70(%struct._rio* %0, i8* %64, i64 %69) #9, !dbg !5431
  %72 = icmp eq i64 %71, 0, !dbg !5432
  br i1 %72, label %83, label %73, !dbg !5433

; <label>:73:                                     ; preds = %62
  %74 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %18, align 8, !dbg !5434, !tbaa !520
  %75 = icmp eq void (%struct._rio*, i8*, i64)* %74, null, !dbg !5435
  br i1 %75, label %77, label %76, !dbg !5436

; <label>:76:                                     ; preds = %73
  call void %74(%struct._rio* nonnull %0, i8* %64, i64 %69) #9, !dbg !5437
  br label %77, !dbg !5437

; <label>:77:                                     ; preds = %76, %73
  %78 = getelementptr inbounds i8, i8* %64, i64 %69, !dbg !5438
  %79 = sub i64 %63, %69, !dbg !5439
  %80 = load i64, i64* %19, align 8, !dbg !5440, !tbaa !527
  %81 = add i64 %80, %69, !dbg !5440
  store i64 %81, i64* %19, align 8, !dbg !5440, !tbaa !527
  %82 = icmp eq i64 %79, 0, !dbg !5424
  br i1 %82, label %84, label %62, !dbg !5424

; <label>:83:                                     ; preds = %62
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5442
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1418, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.48, i64 0, i64 0), i8* %1) #11, !dbg !5443
  unreachable

; <label>:84:                                     ; preds = %77
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #4, !dbg !5445
  br label %85, !dbg !5446

; <label>:85:                                     ; preds = %30, %35, %84, %60, %29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4, !dbg !5350
  %86 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* null, i64* nonnull %3) #9, !dbg !5352
  %87 = icmp eq i32 %86, -1, !dbg !5353
  %88 = load i64, i64* %3, align 8, !dbg !5354
  %89 = select i1 %87, i64 -1, i64 %88, !dbg !5355
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4, !dbg !5356
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5356
  %90 = icmp eq i64 %89, 0, !dbg !5358
  br i1 %90, label %91, label %21, !dbg !5359, !llvm.loop !5447

; <label>:91:                                     ; preds = %85, %2
  %92 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0), i64 18) #9, !dbg !5449
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5450
  ret %struct.redisObject* %92, !dbg !5450
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @rdbLoadObject(i32, %struct._rio*, %struct.redisObject*) local_unnamed_addr #6 !dbg !5451 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca double, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %struct.streamID, align 8
  %31 = alloca [16 x i8], align 16
  %32 = alloca [16 x i8], align 16
  %33 = alloca [10 x i8], align 1
  %34 = alloca %struct.RedisModuleIO, align 8
  switch i32 %0, label %153 [
    i32 0, label %35
    i32 1, label %41
    i32 2, label %95
  ], !dbg !5548

; <label>:35:                                     ; preds = %3
  %36 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 1, i64* null) #9, !dbg !5553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5554
  %37 = icmp eq i8* %36, null, !dbg !5555
  br i1 %37, label %963, label %38, !dbg !5556

; <label>:38:                                     ; preds = %35
  %39 = bitcast i8* %36 to %struct.redisObject*, !dbg !5553
  %40 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* nonnull %39) #9, !dbg !5557
  br label %963, !dbg !5558

; <label>:41:                                     ; preds = %3
  %42 = bitcast i64* %23 to i8*, !dbg !5563
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #4, !dbg !5563
  %43 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %23) #9, !dbg !5565
  %44 = icmp eq i32 %43, -1, !dbg !5566
  %45 = load i64, i64* %23, align 8, !dbg !5567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #4, !dbg !5568
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5568
  %46 = icmp eq i64 %45, -1, !dbg !5569
  %47 = or i1 %44, %46, !dbg !5569
  br i1 %47, label %963, label %48, !dbg !5570

; <label>:48:                                     ; preds = %41
  %49 = tail call %struct.redisObject* @createQuicklistObject() #9, !dbg !5571
  %50 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %49, i64 0, i32 2, !dbg !5572
  %51 = bitcast i8** %50 to %struct.quicklist**, !dbg !5572
  %52 = load %struct.quicklist*, %struct.quicklist** %51, align 8, !dbg !5572, !tbaa !2002
  %53 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 249), align 8, !dbg !5573, !tbaa !5574
  %54 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 250), align 4, !dbg !5575, !tbaa !5576
  tail call void @quicklistSetOptions(%struct.quicklist* %52, i32 %53, i32 %54) #9, !dbg !5577
  %55 = icmp eq i64 %45, 0, !dbg !5579
  br i1 %55, label %963, label %56, !dbg !5579

; <label>:56:                                     ; preds = %48, %90
  %57 = phi i64 [ %58, %90 ], [ %45, %48 ]
  %58 = add i64 %57, -1, !dbg !5580
  %59 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 1, i64* null) #9, !dbg !5584
  %60 = bitcast i8* %59 to %struct.redisObject*, !dbg !5584
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5585
  %61 = icmp eq i8* %59, null, !dbg !5587
  br i1 %61, label %963, label %62, !dbg !5588

; <label>:62:                                     ; preds = %56
  %63 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* nonnull %60) #9, !dbg !5589
  %64 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %63, i64 0, i32 2, !dbg !5591
  %65 = load i8*, i8** %64, align 8, !dbg !5591, !tbaa !2002
  %66 = getelementptr inbounds i8, i8* %65, i64 -1, !dbg !5594
  %67 = load i8, i8* %66, align 1, !dbg !5594, !tbaa !540
  %68 = trunc i8 %67 to i3, !dbg !5596
  switch i3 %68, label %90 [
    i3 0, label %69
    i3 1, label %72
    i3 2, label %76
    i3 3, label %81
    i3 -4, label %86
  ], !dbg !5596

; <label>:69:                                     ; preds = %62
  %70 = lshr i8 %67, 3, !dbg !5597
  %71 = zext i8 %70 to i64, !dbg !5597
  br label %90, !dbg !5598

; <label>:72:                                     ; preds = %62
  %73 = getelementptr inbounds i8, i8* %65, i64 -3, !dbg !5599
  %74 = load i8, i8* %73, align 1, !dbg !5600, !tbaa !540
  %75 = zext i8 %74 to i64, !dbg !5599
  br label %90, !dbg !5601

; <label>:76:                                     ; preds = %62
  %77 = getelementptr inbounds i8, i8* %65, i64 -5, !dbg !5602
  %78 = bitcast i8* %77 to i16*, !dbg !5603
  %79 = load i16, i16* %78, align 1, !dbg !5603, !tbaa !2029
  %80 = zext i16 %79 to i64, !dbg !5602
  br label %90, !dbg !5604

; <label>:81:                                     ; preds = %62
  %82 = getelementptr inbounds i8, i8* %65, i64 -9, !dbg !5605
  %83 = bitcast i8* %82 to i32*, !dbg !5606
  %84 = load i32, i32* %83, align 1, !dbg !5606, !tbaa !191
  %85 = zext i32 %84 to i64, !dbg !5605
  br label %90, !dbg !5607

; <label>:86:                                     ; preds = %62
  %87 = getelementptr inbounds i8, i8* %65, i64 -17, !dbg !5608
  %88 = bitcast i8* %87 to i64*, !dbg !5609
  %89 = load i64, i64* %88, align 1, !dbg !5609, !tbaa !682
  br label %90, !dbg !5610

; <label>:90:                                     ; preds = %62, %69, %72, %76, %81, %86
  %91 = phi i64 [ %89, %86 ], [ %85, %81 ], [ %80, %76 ], [ %75, %72 ], [ %71, %69 ], [ 0, %62 ], !dbg !5611
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5612
  %92 = load %struct.quicklist*, %struct.quicklist** %51, align 8, !dbg !5614, !tbaa !2002
  %93 = tail call i32 @quicklistPushTail(%struct.quicklist* %92, i8* %65, i64 %91) #9, !dbg !5615
  tail call void @decrRefCount(%struct.redisObject* %63) #9, !dbg !5616
  tail call void @decrRefCount(%struct.redisObject* nonnull %60) #9, !dbg !5617
  %94 = icmp eq i64 %58, 0, !dbg !5579
  br i1 %94, label %963, label %56, !dbg !5579, !llvm.loop !5618

; <label>:95:                                     ; preds = %3
  %96 = bitcast i64* %22 to i8*, !dbg !5624
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #4, !dbg !5624
  %97 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %22) #9, !dbg !5626
  %98 = icmp eq i32 %97, -1, !dbg !5627
  %99 = load i64, i64* %22, align 8, !dbg !5628
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #4, !dbg !5629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5629
  %100 = icmp eq i64 %99, -1, !dbg !5630
  %101 = or i1 %98, %100, !dbg !5630
  br i1 %101, label %963, label %102, !dbg !5631

; <label>:102:                                    ; preds = %95
  %103 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 243), align 8, !dbg !5632, !tbaa !5634
  %104 = icmp ugt i64 %99, %103, !dbg !5635
  br i1 %104, label %105, label %113, !dbg !5636

; <label>:105:                                    ; preds = %102
  %106 = tail call %struct.redisObject* @createSetObject() #9, !dbg !5637
  %107 = icmp ugt i64 %99, 4, !dbg !5639
  br i1 %107, label %108, label %116, !dbg !5641

; <label>:108:                                    ; preds = %105
  %109 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %106, i64 0, i32 2, !dbg !5642
  %110 = bitcast i8** %109 to %struct.dict**, !dbg !5642
  %111 = load %struct.dict*, %struct.dict** %110, align 8, !dbg !5642, !tbaa !2002
  %112 = tail call i32 @dictExpand(%struct.dict* %111, i64 %99) #9, !dbg !5643
  br label %116, !dbg !5643

; <label>:113:                                    ; preds = %102
  %114 = tail call %struct.redisObject* @createIntsetObject() #9, !dbg !5644
  %115 = icmp eq i64 %99, 0, !dbg !5647
  br i1 %115, label %963, label %116, !dbg !5648

; <label>:116:                                    ; preds = %108, %105, %113
  %117 = phi %struct.redisObject* [ %114, %113 ], [ %106, %105 ], [ %106, %108 ]
  %118 = bitcast i64* %24 to i8*
  %119 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %117, i64 0, i32 0
  %120 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %117, i64 0, i32 2
  %121 = bitcast i8** %120 to %struct.intset**
  %122 = bitcast i8** %120 to %struct.dict**
  br label %123, !dbg !5648

; <label>:123:                                    ; preds = %116, %149
  %124 = phi i32 [ 0, %116 ], [ %150, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #4, !dbg !5649
  %125 = call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5650
  %126 = icmp eq i8* %125, null, !dbg !5653
  br i1 %126, label %962, label %127, !dbg !5654

; <label>:127:                                    ; preds = %123
  %128 = load i32, i32* %119, align 8, !dbg !5655
  %129 = and i32 %128, 240, !dbg !5655
  %130 = icmp eq i32 %129, 96, !dbg !5657
  br i1 %130, label %131, label %141, !dbg !5658

; <label>:131:                                    ; preds = %127
  %132 = call i32 @isSdsRepresentableAsLongLong(i8* nonnull %125, i64* nonnull %24) #9, !dbg !5660
  %133 = icmp eq i32 %132, 0, !dbg !5663
  br i1 %133, label %134, label %138, !dbg !5664

; <label>:134:                                    ; preds = %131
  %135 = load %struct.intset*, %struct.intset** %121, align 8, !dbg !5665, !tbaa !2002
  %136 = load i64, i64* %24, align 8, !dbg !5667, !tbaa !5668
  %137 = call %struct.intset* @intsetAdd(%struct.intset* %135, i64 %136, i8* null) #9, !dbg !5669
  store %struct.intset* %137, %struct.intset** %121, align 8, !dbg !5670, !tbaa !2002
  br label %141, !dbg !5671

; <label>:138:                                    ; preds = %131
  call void @setTypeConvert(%struct.redisObject* nonnull %117, i32 2) #9, !dbg !5672
  %139 = load %struct.dict*, %struct.dict** %122, align 8, !dbg !5674, !tbaa !2002
  %140 = call i32 @dictExpand(%struct.dict* %139, i64 %99) #9, !dbg !5675
  br label %141

; <label>:141:                                    ; preds = %134, %138, %127
  %142 = load i32, i32* %119, align 8, !dbg !5676
  %143 = and i32 %142, 240, !dbg !5676
  %144 = icmp eq i32 %143, 32, !dbg !5678
  br i1 %144, label %145, label %148, !dbg !5679

; <label>:145:                                    ; preds = %141
  %146 = load %struct.dict*, %struct.dict** %122, align 8, !dbg !5680, !tbaa !2002
  %147 = call i32 @dictAdd(%struct.dict* %146, i8* nonnull %125, i8* null) #9, !dbg !5682
  br label %149, !dbg !5683

; <label>:148:                                    ; preds = %141
  call void @sdsfree(i8* nonnull %125) #9, !dbg !5684
  br label %149

; <label>:149:                                    ; preds = %145, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #4, !dbg !5686
  %150 = add i32 %124, 1, !dbg !5687
  %151 = zext i32 %150 to i64, !dbg !5688
  %152 = icmp ugt i64 %99, %151, !dbg !5647
  br i1 %152, label %123, label %963, !dbg !5648, !llvm.loop !5689

; <label>:153:                                    ; preds = %3
  %154 = icmp eq i32 %0, 5, !dbg !5691
  switch i32 %0, label %498 [
    i32 5, label %155
    i32 3, label %155
    i32 4, label %287
    i32 14, label %475
  ], !dbg !5692

; <label>:155:                                    ; preds = %153, %153
  %156 = bitcast i64* %21 to i8*, !dbg !5698
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #4, !dbg !5698
  %157 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %21) #9, !dbg !5700
  %158 = icmp eq i32 %157, -1, !dbg !5701
  %159 = load i64, i64* %21, align 8, !dbg !5702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #4, !dbg !5703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5703
  %160 = icmp eq i64 %159, -1, !dbg !5704
  %161 = or i1 %158, %160, !dbg !5704
  br i1 %161, label %963, label %162, !dbg !5705

; <label>:162:                                    ; preds = %155
  %163 = tail call %struct.redisObject* @createZsetObject() #9, !dbg !5706
  %164 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %163, i64 0, i32 2, !dbg !5707
  %165 = bitcast i8** %164 to %struct.zset**, !dbg !5707
  %166 = load %struct.zset*, %struct.zset** %165, align 8, !dbg !5707, !tbaa !2002
  %167 = icmp ugt i64 %159, 4, !dbg !5709
  br i1 %167, label %168, label %172, !dbg !5711

; <label>:168:                                    ; preds = %162
  %169 = getelementptr inbounds %struct.zset, %struct.zset* %166, i64 0, i32 0, !dbg !5712
  %170 = load %struct.dict*, %struct.dict** %169, align 8, !dbg !5712, !tbaa !5713
  %171 = tail call i32 @dictExpand(%struct.dict* %170, i64 %159) #9, !dbg !5714
  br label %174, !dbg !5716

; <label>:172:                                    ; preds = %162
  %173 = icmp eq i64 %159, 0, !dbg !5716
  br i1 %173, label %278, label %174, !dbg !5716

; <label>:174:                                    ; preds = %168, %172
  %175 = bitcast double* %25 to i8*
  %176 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 7
  %177 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 0
  %178 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 4
  %179 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 6
  %180 = getelementptr inbounds %struct.zset, %struct.zset* %166, i64 0, i32 1
  %181 = getelementptr inbounds %struct.zset, %struct.zset* %166, i64 0, i32 0
  br label %182, !dbg !5716

; <label>:182:                                    ; preds = %174, %268
  %183 = phi i64 [ %159, %174 ], [ %185, %268 ]
  %184 = phi i64 [ 0, %174 ], [ %269, %268 ]
  %185 = add i64 %183, -1, !dbg !5717
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #4, !dbg !5718
  %186 = call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5719
  %187 = icmp eq i8* %186, null, !dbg !5722
  br i1 %187, label %265, label %188, !dbg !5723

; <label>:188:                                    ; preds = %182
  br i1 %154, label %189, label %212, !dbg !5725

; <label>:189:                                    ; preds = %188, %204
  %190 = phi i64 [ %206, %204 ], [ 8, %188 ]
  %191 = phi i8* [ %205, %204 ], [ %175, %188 ]
  %192 = load i64, i64* %176, align 8, !dbg !5733, !tbaa !506
  %193 = icmp ne i64 %192, 0, !dbg !5734
  %194 = icmp ult i64 %192, %190, !dbg !5735
  %195 = and i1 %193, %194, !dbg !5736
  %196 = select i1 %195, i64 %192, i64 %190, !dbg !5736
  %197 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %177, align 8, !dbg !5738, !tbaa !514
  %198 = call i64 %197(%struct._rio* %1, i8* %191, i64 %196) #9, !dbg !5739
  %199 = icmp eq i64 %198, 0, !dbg !5740
  br i1 %199, label %210, label %200, !dbg !5741

; <label>:200:                                    ; preds = %189
  %201 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %178, align 8, !dbg !5742, !tbaa !520
  %202 = icmp eq void (%struct._rio*, i8*, i64)* %201, null, !dbg !5743
  br i1 %202, label %204, label %203, !dbg !5744

; <label>:203:                                    ; preds = %200
  call void %201(%struct._rio* nonnull %1, i8* %191, i64 %196) #9, !dbg !5745
  br label %204, !dbg !5745

; <label>:204:                                    ; preds = %203, %200
  %205 = getelementptr inbounds i8, i8* %191, i64 %196, !dbg !5746
  %206 = sub i64 %190, %196, !dbg !5747
  %207 = load i64, i64* %179, align 8, !dbg !5748, !tbaa !527
  %208 = add i64 %207, %196, !dbg !5748
  store i64 %208, i64* %179, align 8, !dbg !5748, !tbaa !527
  %209 = icmp eq i64 %206, 0, !dbg !5749
  br i1 %209, label %211, label %189, !dbg !5749

; <label>:210:                                    ; preds = %189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5751
  br label %265, !dbg !5752

; <label>:211:                                    ; preds = %204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5751
  br label %215, !dbg !5752

; <label>:212:                                    ; preds = %188
  %213 = call i32 @rdbLoadDoubleValue(%struct._rio* %1, double* nonnull %25) #11, !dbg !5753
  %214 = icmp eq i32 %213, -1, !dbg !5756
  br i1 %214, label %265, label %215, !dbg !5757

; <label>:215:                                    ; preds = %211, %212
  %216 = getelementptr inbounds i8, i8* %186, i64 -1, !dbg !5761
  %217 = load i8, i8* %216, align 1, !dbg !5761, !tbaa !540
  %218 = trunc i8 %217 to i3, !dbg !5763
  switch i3 %218, label %266 [
    i3 0, label %219
    i3 1, label %222
    i3 2, label %226
    i3 3, label %231
    i3 -4, label %236
  ], !dbg !5763

; <label>:219:                                    ; preds = %215
  %220 = lshr i8 %217, 3, !dbg !5764
  %221 = zext i8 %220 to i64, !dbg !5764
  br label %240, !dbg !5765

; <label>:222:                                    ; preds = %215
  %223 = getelementptr inbounds i8, i8* %186, i64 -3, !dbg !5766
  %224 = load i8, i8* %223, align 1, !dbg !5767, !tbaa !540
  %225 = zext i8 %224 to i64, !dbg !5766
  br label %240, !dbg !5768

; <label>:226:                                    ; preds = %215
  %227 = getelementptr inbounds i8, i8* %186, i64 -5, !dbg !5769
  %228 = bitcast i8* %227 to i16*, !dbg !5770
  %229 = load i16, i16* %228, align 1, !dbg !5770, !tbaa !2029
  %230 = zext i16 %229 to i64, !dbg !5769
  br label %240, !dbg !5771

; <label>:231:                                    ; preds = %215
  %232 = getelementptr inbounds i8, i8* %186, i64 -9, !dbg !5772
  %233 = bitcast i8* %232 to i32*, !dbg !5773
  %234 = load i32, i32* %233, align 1, !dbg !5773, !tbaa !191
  %235 = zext i32 %234 to i64, !dbg !5772
  br label %240, !dbg !5774

; <label>:236:                                    ; preds = %215
  %237 = getelementptr inbounds i8, i8* %186, i64 -17, !dbg !5775
  %238 = bitcast i8* %237 to i64*, !dbg !5776
  %239 = load i64, i64* %238, align 1, !dbg !5776, !tbaa !682
  br label %240, !dbg !5777

; <label>:240:                                    ; preds = %219, %222, %226, %231, %236
  %241 = phi i64 [ %239, %236 ], [ %235, %231 ], [ %230, %226 ], [ %225, %222 ], [ %221, %219 ], !dbg !5778
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5779
  %242 = icmp ugt i64 %241, %184, !dbg !5780
  br i1 %242, label %243, label %268, !dbg !5781

; <label>:243:                                    ; preds = %240
  switch i3 %218, label %266 [
    i3 0, label %244
    i3 1, label %247
    i3 2, label %251
    i3 3, label %256
    i3 -4, label %261
  ], !dbg !5785

; <label>:244:                                    ; preds = %243
  %245 = lshr i8 %217, 3, !dbg !5786
  %246 = zext i8 %245 to i64, !dbg !5786
  br label %266, !dbg !5787

; <label>:247:                                    ; preds = %243
  %248 = getelementptr inbounds i8, i8* %186, i64 -3, !dbg !5788
  %249 = load i8, i8* %248, align 1, !dbg !5789, !tbaa !540
  %250 = zext i8 %249 to i64, !dbg !5788
  br label %266, !dbg !5790

; <label>:251:                                    ; preds = %243
  %252 = getelementptr inbounds i8, i8* %186, i64 -5, !dbg !5791
  %253 = bitcast i8* %252 to i16*, !dbg !5792
  %254 = load i16, i16* %253, align 1, !dbg !5792, !tbaa !2029
  %255 = zext i16 %254 to i64, !dbg !5791
  br label %266, !dbg !5793

; <label>:256:                                    ; preds = %243
  %257 = getelementptr inbounds i8, i8* %186, i64 -9, !dbg !5794
  %258 = bitcast i8* %257 to i32*, !dbg !5795
  %259 = load i32, i32* %258, align 1, !dbg !5795, !tbaa !191
  %260 = zext i32 %259 to i64, !dbg !5794
  br label %266, !dbg !5796

; <label>:261:                                    ; preds = %243
  %262 = getelementptr inbounds i8, i8* %186, i64 -17, !dbg !5797
  %263 = bitcast i8* %262 to i64*, !dbg !5798
  %264 = load i64, i64* %263, align 1, !dbg !5798, !tbaa !682
  br label %266, !dbg !5799

; <label>:265:                                    ; preds = %182, %212, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #4, !dbg !5800
  br label %963

; <label>:266:                                    ; preds = %261, %256, %251, %247, %244, %243, %215
  %267 = phi i64 [ %184, %215 ], [ %264, %261 ], [ %260, %256 ], [ %255, %251 ], [ %250, %247 ], [ %246, %244 ], [ 0, %243 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5801
  br label %268, !dbg !5802

; <label>:268:                                    ; preds = %266, %240
  %269 = phi i64 [ %184, %240 ], [ %267, %266 ], !dbg !5803
  %270 = load %struct.zskiplist*, %struct.zskiplist** %180, align 8, !dbg !5802, !tbaa !3575
  %271 = load double, double* %25, align 8, !dbg !5804, !tbaa !2309
  %272 = call %struct.zskiplistNode* @zslInsert(%struct.zskiplist* %270, double %271, i8* nonnull %186) #9, !dbg !5805
  %273 = load %struct.dict*, %struct.dict** %181, align 8, !dbg !5807, !tbaa !5713
  %274 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %272, i64 0, i32 1, !dbg !5808
  %275 = bitcast double* %274 to i8*, !dbg !5809
  %276 = call i32 @dictAdd(%struct.dict* %273, i8* nonnull %186, i8* nonnull %275) #9, !dbg !5810
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #4, !dbg !5800
  %277 = icmp eq i64 %185, 0, !dbg !5716
  br i1 %277, label %278, label %182, !dbg !5716

; <label>:278:                                    ; preds = %268, %172
  %279 = phi i64 [ 0, %172 ], [ %269, %268 ], !dbg !5693
  %280 = call i64 @zsetLength(%struct.redisObject* %163) #9, !dbg !5811
  %281 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 244), align 8, !dbg !5813, !tbaa !5814
  %282 = icmp ugt i64 %280, %281, !dbg !5815
  %283 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 245), align 8, !dbg !5816
  %284 = icmp ugt i64 %279, %283, !dbg !5817
  %285 = or i1 %282, %284, !dbg !5818
  br i1 %285, label %963, label %286, !dbg !5818

; <label>:286:                                    ; preds = %278
  call void @zsetConvert(%struct.redisObject* %163, i32 5) #9, !dbg !5819
  br label %963, !dbg !5819

; <label>:287:                                    ; preds = %153
  %288 = bitcast i64* %19 to i8*, !dbg !5823
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288) #4, !dbg !5823
  %289 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %19) #9, !dbg !5825
  %290 = icmp eq i32 %289, -1, !dbg !5826
  %291 = load i64, i64* %19, align 8, !dbg !5827
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288) #4, !dbg !5828
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5828
  %292 = icmp eq i64 %291, -1, !dbg !5829
  %293 = or i1 %290, %292, !dbg !5829
  br i1 %293, label %963, label %294, !dbg !5831

; <label>:294:                                    ; preds = %287
  %295 = tail call %struct.redisObject* @createHashObject() #9, !dbg !5832
  %296 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 241), align 8, !dbg !5833, !tbaa !5835
  %297 = icmp ugt i64 %291, %296, !dbg !5836
  br i1 %297, label %298, label %299, !dbg !5837

; <label>:298:                                    ; preds = %294
  tail call void @hashTypeConvert(%struct.redisObject* %295, i32 2) #9, !dbg !5838
  br label %299, !dbg !5838

; <label>:299:                                    ; preds = %298, %294
  %300 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %295, i64 0, i32 0, !dbg !5840
  %301 = load i32, i32* %300, align 8, !dbg !5840
  %302 = and i32 %301, 240, !dbg !5840
  %303 = icmp eq i32 %302, 80, !dbg !5841
  %304 = icmp ne i64 %291, 0, !dbg !5842
  %305 = and i1 %304, %303, !dbg !5843
  br i1 %305, label %306, label %440, !dbg !5844

; <label>:306:                                    ; preds = %299
  %307 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %295, i64 0, i32 2
  br label %308, !dbg !5844

; <label>:308:                                    ; preds = %306, %434
  %309 = phi i64 [ %291, %306 ], [ %310, %434 ]
  %310 = add i64 %309, -1, !dbg !5845
  %311 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5847
  %312 = icmp eq i8* %311, null, !dbg !5850
  br i1 %312, label %963, label %313, !dbg !5851

; <label>:313:                                    ; preds = %308
  %314 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5852
  %315 = icmp eq i8* %314, null, !dbg !5855
  br i1 %315, label %963, label %316, !dbg !5856

; <label>:316:                                    ; preds = %313
  %317 = load i8*, i8** %307, align 8, !dbg !5857, !tbaa !2002
  %318 = getelementptr inbounds i8, i8* %311, i64 -1, !dbg !5860
  %319 = load i8, i8* %318, align 1, !dbg !5860, !tbaa !540
  %320 = trunc i8 %319 to i3, !dbg !5862
  switch i3 %320, label %342 [
    i3 0, label %321
    i3 1, label %324
    i3 2, label %328
    i3 3, label %333
    i3 -4, label %338
  ], !dbg !5862

; <label>:321:                                    ; preds = %316
  %322 = lshr i8 %319, 3, !dbg !5863
  %323 = zext i8 %322 to i64, !dbg !5863
  br label %342, !dbg !5864

; <label>:324:                                    ; preds = %316
  %325 = getelementptr inbounds i8, i8* %311, i64 -3, !dbg !5865
  %326 = load i8, i8* %325, align 1, !dbg !5866, !tbaa !540
  %327 = zext i8 %326 to i64, !dbg !5865
  br label %342, !dbg !5867

; <label>:328:                                    ; preds = %316
  %329 = getelementptr inbounds i8, i8* %311, i64 -5, !dbg !5868
  %330 = bitcast i8* %329 to i16*, !dbg !5869
  %331 = load i16, i16* %330, align 1, !dbg !5869, !tbaa !2029
  %332 = zext i16 %331 to i64, !dbg !5868
  br label %342, !dbg !5870

; <label>:333:                                    ; preds = %316
  %334 = getelementptr inbounds i8, i8* %311, i64 -9, !dbg !5871
  %335 = bitcast i8* %334 to i32*, !dbg !5872
  %336 = load i32, i32* %335, align 1, !dbg !5872, !tbaa !191
  %337 = zext i32 %336 to i64, !dbg !5871
  br label %342, !dbg !5873

; <label>:338:                                    ; preds = %316
  %339 = getelementptr inbounds i8, i8* %311, i64 -17, !dbg !5874
  %340 = bitcast i8* %339 to i64*, !dbg !5875
  %341 = load i64, i64* %340, align 1, !dbg !5875, !tbaa !682
  br label %342, !dbg !5876

; <label>:342:                                    ; preds = %316, %321, %324, %328, %333, %338
  %343 = phi i64 [ %341, %338 ], [ %337, %333 ], [ %332, %328 ], [ %327, %324 ], [ %323, %321 ], [ 0, %316 ], !dbg !5877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5878
  %344 = trunc i64 %343 to i32, !dbg !5879
  %345 = tail call i8* @ziplistPush(i8* %317, i8* nonnull %311, i32 %344, i32 1) #9, !dbg !5880
  store i8* %345, i8** %307, align 8, !dbg !5881, !tbaa !2002
  %346 = getelementptr inbounds i8, i8* %314, i64 -1, !dbg !5884
  %347 = load i8, i8* %346, align 1, !dbg !5884, !tbaa !540
  %348 = trunc i8 %347 to i3, !dbg !5886
  switch i3 %348, label %370 [
    i3 0, label %349
    i3 1, label %352
    i3 2, label %356
    i3 3, label %361
    i3 -4, label %366
  ], !dbg !5886

; <label>:349:                                    ; preds = %342
  %350 = lshr i8 %347, 3, !dbg !5887
  %351 = zext i8 %350 to i64, !dbg !5887
  br label %370, !dbg !5888

; <label>:352:                                    ; preds = %342
  %353 = getelementptr inbounds i8, i8* %314, i64 -3, !dbg !5889
  %354 = load i8, i8* %353, align 1, !dbg !5890, !tbaa !540
  %355 = zext i8 %354 to i64, !dbg !5889
  br label %370, !dbg !5891

; <label>:356:                                    ; preds = %342
  %357 = getelementptr inbounds i8, i8* %314, i64 -5, !dbg !5892
  %358 = bitcast i8* %357 to i16*, !dbg !5893
  %359 = load i16, i16* %358, align 1, !dbg !5893, !tbaa !2029
  %360 = zext i16 %359 to i64, !dbg !5892
  br label %370, !dbg !5894

; <label>:361:                                    ; preds = %342
  %362 = getelementptr inbounds i8, i8* %314, i64 -9, !dbg !5895
  %363 = bitcast i8* %362 to i32*, !dbg !5896
  %364 = load i32, i32* %363, align 1, !dbg !5896, !tbaa !191
  %365 = zext i32 %364 to i64, !dbg !5895
  br label %370, !dbg !5897

; <label>:366:                                    ; preds = %342
  %367 = getelementptr inbounds i8, i8* %314, i64 -17, !dbg !5898
  %368 = bitcast i8* %367 to i64*, !dbg !5899
  %369 = load i64, i64* %368, align 1, !dbg !5899, !tbaa !682
  br label %370, !dbg !5900

; <label>:370:                                    ; preds = %342, %349, %352, %356, %361, %366
  %371 = phi i64 [ %369, %366 ], [ %365, %361 ], [ %360, %356 ], [ %355, %352 ], [ %351, %349 ], [ 0, %342 ], !dbg !5901
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5902
  %372 = trunc i64 %371 to i32, !dbg !5903
  %373 = tail call i8* @ziplistPush(i8* %345, i8* nonnull %314, i32 %372, i32 1) #9, !dbg !5904
  store i8* %373, i8** %307, align 8, !dbg !5905, !tbaa !2002
  %374 = load i8, i8* %318, align 1, !dbg !5909, !tbaa !540
  %375 = trunc i8 %374 to i3, !dbg !5911
  switch i3 %375, label %376 [
    i3 0, label %378
    i3 1, label %381
    i3 2, label %385
    i3 3, label %390
    i3 -4, label %395
  ], !dbg !5911

; <label>:376:                                    ; preds = %370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5912
  %377 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 242), align 8, !dbg !5913, !tbaa !5914
  br label %403, !dbg !5915

; <label>:378:                                    ; preds = %370
  %379 = lshr i8 %374, 3, !dbg !5916
  %380 = zext i8 %379 to i64, !dbg !5916
  br label %399, !dbg !5917

; <label>:381:                                    ; preds = %370
  %382 = getelementptr inbounds i8, i8* %311, i64 -3, !dbg !5918
  %383 = load i8, i8* %382, align 1, !dbg !5919, !tbaa !540
  %384 = zext i8 %383 to i64, !dbg !5918
  br label %399, !dbg !5920

; <label>:385:                                    ; preds = %370
  %386 = getelementptr inbounds i8, i8* %311, i64 -5, !dbg !5921
  %387 = bitcast i8* %386 to i16*, !dbg !5922
  %388 = load i16, i16* %387, align 1, !dbg !5922, !tbaa !2029
  %389 = zext i16 %388 to i64, !dbg !5921
  br label %399, !dbg !5923

; <label>:390:                                    ; preds = %370
  %391 = getelementptr inbounds i8, i8* %311, i64 -9, !dbg !5924
  %392 = bitcast i8* %391 to i32*, !dbg !5925
  %393 = load i32, i32* %392, align 1, !dbg !5925, !tbaa !191
  %394 = zext i32 %393 to i64, !dbg !5924
  br label %399, !dbg !5926

; <label>:395:                                    ; preds = %370
  %396 = getelementptr inbounds i8, i8* %311, i64 -17, !dbg !5927
  %397 = bitcast i8* %396 to i64*, !dbg !5928
  %398 = load i64, i64* %397, align 1, !dbg !5928, !tbaa !682
  br label %399, !dbg !5929

; <label>:399:                                    ; preds = %378, %381, %385, %390, %395
  %400 = phi i64 [ %398, %395 ], [ %394, %390 ], [ %389, %385 ], [ %384, %381 ], [ %380, %378 ], !dbg !5930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5912
  %401 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 242), align 8, !dbg !5913, !tbaa !5914
  %402 = icmp ugt i64 %400, %401, !dbg !5931
  br i1 %402, label %432, label %403, !dbg !5915

; <label>:403:                                    ; preds = %376, %399
  %404 = phi i64 [ %377, %376 ], [ %401, %399 ]
  %405 = load i8, i8* %346, align 1, !dbg !5934, !tbaa !540
  %406 = trunc i8 %405 to i3, !dbg !5936
  switch i3 %406, label %407 [
    i3 0, label %408
    i3 1, label %411
    i3 2, label %415
    i3 3, label %420
    i3 -4, label %425
  ], !dbg !5936

; <label>:407:                                    ; preds = %403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5937
  br label %434, !dbg !5938

; <label>:408:                                    ; preds = %403
  %409 = lshr i8 %405, 3, !dbg !5939
  %410 = zext i8 %409 to i64, !dbg !5939
  br label %429, !dbg !5940

; <label>:411:                                    ; preds = %403
  %412 = getelementptr inbounds i8, i8* %314, i64 -3, !dbg !5941
  %413 = load i8, i8* %412, align 1, !dbg !5942, !tbaa !540
  %414 = zext i8 %413 to i64, !dbg !5941
  br label %429, !dbg !5943

; <label>:415:                                    ; preds = %403
  %416 = getelementptr inbounds i8, i8* %314, i64 -5, !dbg !5944
  %417 = bitcast i8* %416 to i16*, !dbg !5945
  %418 = load i16, i16* %417, align 1, !dbg !5945, !tbaa !2029
  %419 = zext i16 %418 to i64, !dbg !5944
  br label %429, !dbg !5946

; <label>:420:                                    ; preds = %403
  %421 = getelementptr inbounds i8, i8* %314, i64 -9, !dbg !5947
  %422 = bitcast i8* %421 to i32*, !dbg !5948
  %423 = load i32, i32* %422, align 1, !dbg !5948, !tbaa !191
  %424 = zext i32 %423 to i64, !dbg !5947
  br label %429, !dbg !5949

; <label>:425:                                    ; preds = %403
  %426 = getelementptr inbounds i8, i8* %314, i64 -17, !dbg !5950
  %427 = bitcast i8* %426 to i64*, !dbg !5951
  %428 = load i64, i64* %427, align 1, !dbg !5951, !tbaa !682
  br label %429, !dbg !5952

; <label>:429:                                    ; preds = %408, %411, %415, %420, %425
  %430 = phi i64 [ %428, %425 ], [ %424, %420 ], [ %419, %415 ], [ %414, %411 ], [ %410, %408 ], !dbg !5953
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5937
  %431 = icmp ugt i64 %430, %404, !dbg !5954
  br i1 %431, label %432, label %434, !dbg !5938

; <label>:432:                                    ; preds = %429, %399
  tail call void @sdsfree(i8* nonnull %311) #9, !dbg !5955
  tail call void @sdsfree(i8* nonnull %314) #9, !dbg !5957
  tail call void @hashTypeConvert(%struct.redisObject* nonnull %295, i32 2) #9, !dbg !5958
  %433 = load i32, i32* %300, align 8, !dbg !5959
  br label %440, !dbg !5961

; <label>:434:                                    ; preds = %407, %429
  tail call void @sdsfree(i8* nonnull %311) #9, !dbg !5962
  tail call void @sdsfree(i8* nonnull %314) #9, !dbg !5963
  %435 = load i32, i32* %300, align 8, !dbg !5840
  %436 = and i32 %435, 240, !dbg !5840
  %437 = icmp eq i32 %436, 80, !dbg !5841
  %438 = icmp ne i64 %310, 0, !dbg !5842
  %439 = and i1 %438, %437, !dbg !5843
  br i1 %439, label %308, label %440, !dbg !5844, !llvm.loop !5964

; <label>:440:                                    ; preds = %434, %299, %432
  %441 = phi i32 [ %433, %432 ], [ %301, %299 ], [ %435, %434 ], !dbg !5959
  %442 = phi i64 [ %310, %432 ], [ %291, %299 ], [ %310, %434 ], !dbg !5966
  %443 = and i32 %441, 240, !dbg !5959
  %444 = icmp eq i32 %443, 32, !dbg !5967
  %445 = icmp ugt i64 %442, 4, !dbg !5968
  %446 = and i1 %445, %444, !dbg !5969
  %447 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %295, i64 0, i32 2
  %448 = bitcast i8** %447 to %struct.dict**
  br i1 %446, label %449, label %452, !dbg !5969

; <label>:449:                                    ; preds = %440
  %450 = load %struct.dict*, %struct.dict** %448, align 8, !dbg !5970, !tbaa !2002
  %451 = tail call i32 @dictExpand(%struct.dict* %450, i64 %442) #9, !dbg !5971
  br label %452, !dbg !5971

; <label>:452:                                    ; preds = %440, %449
  br label %453, !dbg !5972

; <label>:453:                                    ; preds = %452, %467
  %454 = phi i64 [ %461, %467 ], [ %442, %452 ], !dbg !5973
  %455 = load i32, i32* %300, align 8, !dbg !5972
  %456 = and i32 %455, 240, !dbg !5972
  %457 = icmp eq i32 %456, 32, !dbg !5975
  %458 = icmp ne i64 %454, 0, !dbg !5976
  %459 = and i1 %458, %457, !dbg !5977
  br i1 %459, label %460, label %472, !dbg !5978

; <label>:460:                                    ; preds = %453
  %461 = add i64 %454, -1, !dbg !5979
  %462 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5980
  %463 = icmp eq i8* %462, null, !dbg !5982
  br i1 %463, label %963, label %464, !dbg !5983

; <label>:464:                                    ; preds = %460
  %465 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5984
  %466 = icmp eq i8* %465, null, !dbg !5986
  br i1 %466, label %963, label %467, !dbg !5987

; <label>:467:                                    ; preds = %464
  %468 = load %struct.dict*, %struct.dict** %448, align 8, !dbg !5988, !tbaa !2002
  %469 = tail call i32 @dictAdd(%struct.dict* %468, i8* nonnull %462, i8* nonnull %465) #9, !dbg !5989
  %470 = icmp eq i32 %469, 1, !dbg !5991
  br i1 %470, label %471, label %453, !dbg !5993, !llvm.loop !5994

; <label>:471:                                    ; preds = %467
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1590, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0)) #11, !dbg !5996
  unreachable

; <label>:472:                                    ; preds = %453
  %473 = icmp eq i64 %454, 0, !dbg !5998
  br i1 %473, label %963, label %474, !dbg !5998

; <label>:474:                                    ; preds = %472
  tail call void @_serverAssert(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 1595) #9, !dbg !5998
  tail call void @_exit(i32 1) #10, !dbg !5998
  unreachable, !dbg !5998

; <label>:475:                                    ; preds = %153
  %476 = bitcast i64* %17 to i8*, !dbg !6003
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %476) #4, !dbg !6003
  %477 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %17) #9, !dbg !6005
  %478 = icmp eq i32 %477, -1, !dbg !6006
  %479 = load i64, i64* %17, align 8, !dbg !6007
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %476) #4, !dbg !6008
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6008
  %480 = icmp eq i64 %479, -1, !dbg !6009
  %481 = or i1 %478, %480, !dbg !6009
  br i1 %481, label %963, label %482, !dbg !6010

; <label>:482:                                    ; preds = %475
  %483 = tail call %struct.redisObject* @createQuicklistObject() #9, !dbg !6011
  %484 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %483, i64 0, i32 2, !dbg !6012
  %485 = bitcast i8** %484 to %struct.quicklist**, !dbg !6012
  %486 = load %struct.quicklist*, %struct.quicklist** %485, align 8, !dbg !6012, !tbaa !2002
  %487 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 249), align 8, !dbg !6013, !tbaa !5574
  %488 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 250), align 4, !dbg !6014, !tbaa !5576
  tail call void @quicklistSetOptions(%struct.quicklist* %486, i32 %487, i32 %488) #9, !dbg !6015
  %489 = icmp eq i64 %479, 0, !dbg !6016
  br i1 %489, label %963, label %490, !dbg !6016

; <label>:490:                                    ; preds = %482, %495
  %491 = phi i64 [ %492, %495 ], [ %479, %482 ]
  %492 = add i64 %491, -1, !dbg !6017
  %493 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 2, i64* null) #11, !dbg !6018
  %494 = icmp eq i8* %493, null, !dbg !6020
  br i1 %494, label %963, label %495, !dbg !6022

; <label>:495:                                    ; preds = %490
  %496 = load %struct.quicklist*, %struct.quicklist** %485, align 8, !dbg !6023, !tbaa !2002
  tail call void @quicklistAppendZiplist(%struct.quicklist* %496, i8* nonnull %493) #9, !dbg !6024
  %497 = icmp eq i64 %492, 0, !dbg !6016
  br i1 %497, label %963, label %490, !dbg !6016

; <label>:498:                                    ; preds = %153
  %499 = add i32 %0, -9, !dbg !6025
  %500 = icmp ult i32 %499, 5, !dbg !6025
  br i1 %500, label %501, label %589, !dbg !6025

; <label>:501:                                    ; preds = %498
  %502 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 2, i64* null) #11, !dbg !6026
  %503 = icmp eq i8* %502, null, !dbg !6028
  br i1 %503, label %963, label %504, !dbg !6030

; <label>:504:                                    ; preds = %501
  %505 = tail call %struct.redisObject* @createObject(i32 0, i8* nonnull %502) #9, !dbg !6031
  switch i32 %0, label %588 [
    i32 9, label %506
    i32 10, label %552
    i32 11, label %557
    i32 12, label %570
    i32 13, label %579
  ], !dbg !6032

; <label>:506:                                    ; preds = %504
  %507 = tail call i8* @ziplistNew() #9, !dbg !6033
  %508 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %505, i64 0, i32 2, !dbg !6035
  %509 = load i8*, i8** %508, align 8, !dbg !6035, !tbaa !2002
  %510 = tail call i8* @zipmapRewind(i8* %509) #9, !dbg !6036
  %511 = bitcast i8** %26 to i8*, !dbg !6038
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %511) #4, !dbg !6038
  %512 = bitcast i8** %27 to i8*, !dbg !6038
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %512) #4, !dbg !6038
  %513 = bitcast i32* %28 to i8*, !dbg !6039
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %513) #4, !dbg !6039
  %514 = bitcast i32* %29 to i8*, !dbg !6039
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %514) #4, !dbg !6039
  %515 = call i8* @zipmapNext(i8* %510, i8** nonnull %26, i32* nonnull %28, i8** nonnull %27, i32* nonnull %29) #9, !dbg !6045
  %516 = icmp eq i8* %515, null, !dbg !6046
  br i1 %516, label %536, label %517, !dbg !6047

; <label>:517:                                    ; preds = %506, %517
  %518 = phi i8* [ %532, %517 ], [ %515, %506 ]
  %519 = phi i8* [ %531, %517 ], [ %507, %506 ]
  %520 = phi i32 [ %526, %517 ], [ 0, %506 ]
  %521 = load i32, i32* %28, align 4, !dbg !6048, !tbaa !191
  %522 = icmp ugt i32 %521, %520, !dbg !6051
  %523 = select i1 %522, i32 %521, i32 %520, !dbg !6052
  %524 = load i32, i32* %29, align 4, !dbg !6053, !tbaa !191
  %525 = icmp ugt i32 %524, %523, !dbg !6055
  %526 = select i1 %525, i32 %524, i32 %523, !dbg !6056
  %527 = load i8*, i8** %26, align 8, !dbg !6057, !tbaa !200
  %528 = call i8* @ziplistPush(i8* %519, i8* %527, i32 %521, i32 1) #9, !dbg !6058
  %529 = load i8*, i8** %27, align 8, !dbg !6059, !tbaa !200
  %530 = load i32, i32* %29, align 4, !dbg !6060, !tbaa !191
  %531 = call i8* @ziplistPush(i8* %528, i8* %529, i32 %530, i32 1) #9, !dbg !6061
  %532 = call i8* @zipmapNext(i8* nonnull %518, i8** nonnull %26, i32* nonnull %28, i8** nonnull %27, i32* nonnull %29) #9, !dbg !6045
  %533 = icmp eq i8* %532, null, !dbg !6046
  br i1 %533, label %534, label %517, !dbg !6047, !llvm.loop !6062

; <label>:534:                                    ; preds = %517
  %535 = zext i32 %526 to i64, !dbg !6064
  br label %536, !dbg !6064

; <label>:536:                                    ; preds = %534, %506
  %537 = phi i64 [ 0, %506 ], [ %535, %534 ]
  %538 = phi i8* [ %507, %506 ], [ %531, %534 ], !dbg !6065
  %539 = load i8*, i8** %508, align 8, !dbg !6064, !tbaa !2002
  call void @zfree(i8* %539) #9, !dbg !6066
  store i8* %538, i8** %508, align 8, !dbg !6067, !tbaa !2002
  %540 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %505, i64 0, i32 0, !dbg !6068
  %541 = load i32, i32* %540, align 8, !dbg !6069
  %542 = and i32 %541, -256, !dbg !6069
  %543 = or i32 %542, 84, !dbg !6070
  store i32 %543, i32* %540, align 8, !dbg !6070
  %544 = call i64 @hashTypeLength(%struct.redisObject* %505) #9, !dbg !6071
  %545 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 241), align 8, !dbg !6073, !tbaa !5835
  %546 = icmp ugt i64 %544, %545, !dbg !6074
  %547 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 242), align 8, !dbg !6075
  %548 = icmp ult i64 %547, %537, !dbg !6076
  %549 = or i1 %546, %548, !dbg !6077
  br i1 %549, label %550, label %551, !dbg !6077

; <label>:550:                                    ; preds = %536
  call void @hashTypeConvert(%struct.redisObject* nonnull %505, i32 2) #9, !dbg !6078
  br label %551, !dbg !6080

; <label>:551:                                    ; preds = %536, %550
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %514) #4, !dbg !6081
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %513) #4, !dbg !6081
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %512) #4, !dbg !6081
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %511) #4, !dbg !6081
  br label %963, !dbg !6082

; <label>:552:                                    ; preds = %504
  %553 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %505, i64 0, i32 0, !dbg !6083
  %554 = load i32, i32* %553, align 8, !dbg !6084
  %555 = and i32 %554, -256, !dbg !6084
  %556 = or i32 %555, 81, !dbg !6085
  store i32 %556, i32* %553, align 8, !dbg !6085
  tail call void @listTypeConvert(%struct.redisObject* %505, i32 9) #9, !dbg !6086
  br label %963, !dbg !6087

; <label>:557:                                    ; preds = %504
  %558 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %505, i64 0, i32 0, !dbg !6088
  %559 = load i32, i32* %558, align 8, !dbg !6089
  %560 = and i32 %559, -256, !dbg !6089
  %561 = or i32 %560, 98, !dbg !6090
  store i32 %561, i32* %558, align 8, !dbg !6090
  %562 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %505, i64 0, i32 2, !dbg !6091
  %563 = bitcast i8** %562 to %struct.intset**, !dbg !6091
  %564 = load %struct.intset*, %struct.intset** %563, align 8, !dbg !6091, !tbaa !2002
  %565 = tail call i32 @intsetLen(%struct.intset* %564) #9, !dbg !6093
  %566 = zext i32 %565 to i64, !dbg !6093
  %567 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 243), align 8, !dbg !6094, !tbaa !5634
  %568 = icmp ult i64 %567, %566, !dbg !6095
  br i1 %568, label %569, label %963, !dbg !6096

; <label>:569:                                    ; preds = %557
  tail call void @setTypeConvert(%struct.redisObject* nonnull %505, i32 2) #9, !dbg !6097
  br label %963, !dbg !6097

; <label>:570:                                    ; preds = %504
  %571 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %505, i64 0, i32 0, !dbg !6098
  %572 = load i32, i32* %571, align 8, !dbg !6099
  %573 = and i32 %572, -256, !dbg !6099
  %574 = or i32 %573, 83, !dbg !6100
  store i32 %574, i32* %571, align 8, !dbg !6100
  %575 = tail call i64 @zsetLength(%struct.redisObject* %505) #9, !dbg !6101
  %576 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 244), align 8, !dbg !6103, !tbaa !5814
  %577 = icmp ugt i64 %575, %576, !dbg !6104
  br i1 %577, label %578, label %963, !dbg !6105

; <label>:578:                                    ; preds = %570
  tail call void @zsetConvert(%struct.redisObject* nonnull %505, i32 7) #9, !dbg !6106
  br label %963, !dbg !6106

; <label>:579:                                    ; preds = %504
  %580 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %505, i64 0, i32 0, !dbg !6107
  %581 = load i32, i32* %580, align 8, !dbg !6108
  %582 = and i32 %581, -256, !dbg !6108
  %583 = or i32 %582, 84, !dbg !6109
  store i32 %583, i32* %580, align 8, !dbg !6109
  %584 = tail call i64 @hashTypeLength(%struct.redisObject* %505) #9, !dbg !6110
  %585 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 241), align 8, !dbg !6112, !tbaa !5835
  %586 = icmp ugt i64 %584, %585, !dbg !6113
  br i1 %586, label %587, label %963, !dbg !6114

; <label>:587:                                    ; preds = %579
  tail call void @hashTypeConvert(%struct.redisObject* nonnull %505, i32 2) #9, !dbg !6115
  br label %963, !dbg !6115

; <label>:588:                                    ; preds = %504
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1679, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i64 0, i64 0), i32 %0) #11, !dbg !6116
  unreachable

; <label>:589:                                    ; preds = %498
  %590 = icmp eq i32 %0, 15, !dbg !6117
  br i1 %590, label %591, label %904, !dbg !6118

; <label>:591:                                    ; preds = %589
  %592 = tail call %struct.redisObject* @createStreamObject() #9, !dbg !6119
  %593 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %592, i64 0, i32 2, !dbg !6120
  %594 = bitcast i8** %593 to %struct.stream**, !dbg !6120
  %595 = load %struct.stream*, %struct.stream** %594, align 8, !dbg !6120, !tbaa !2002
  %596 = bitcast i64* %16 to i8*, !dbg !6125
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %596) #4, !dbg !6125
  %597 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %16) #9, !dbg !6127
  %598 = icmp eq i32 %597, -1, !dbg !6128
  %599 = load i64, i64* %16, align 8, !dbg !6129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %596) #4, !dbg !6130
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6130
  %600 = getelementptr inbounds %struct.stream, %struct.stream* %595, i64 0, i32 0
  %601 = select i1 %598, i64 -1, i64 %599
  br label %602, !dbg !6131

; <label>:602:                                    ; preds = %591, %647
  %603 = phi i64 [ %604, %647 ], [ %601, %591 ], !dbg !6132
  %604 = add i64 %603, -1, !dbg !6131
  %605 = icmp eq i64 %603, 0, !dbg !6134
  br i1 %605, label %652, label %606, !dbg !6134

; <label>:606:                                    ; preds = %602
  %607 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !6135
  %608 = icmp eq i8* %607, null, !dbg !6137
  br i1 %608, label %609, label %610, !dbg !6139

; <label>:609:                                    ; preds = %606
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1693, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !6140
  unreachable

; <label>:610:                                    ; preds = %606
  %611 = getelementptr inbounds i8, i8* %607, i64 -1, !dbg !6145
  %612 = load i8, i8* %611, align 1, !dbg !6145, !tbaa !540
  %613 = trunc i8 %612 to i3, !dbg !6147
  switch i3 %613, label %614 [
    i3 0, label %615
    i3 1, label %618
    i3 2, label %622
    i3 3, label %627
    i3 -4, label %632
  ], !dbg !6147

; <label>:614:                                    ; preds = %610
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6148
  br label %639, !dbg !6149

; <label>:615:                                    ; preds = %610
  %616 = lshr i8 %612, 3, !dbg !6150
  %617 = zext i8 %616 to i64, !dbg !6150
  br label %636, !dbg !6151

; <label>:618:                                    ; preds = %610
  %619 = getelementptr inbounds i8, i8* %607, i64 -3, !dbg !6152
  %620 = load i8, i8* %619, align 1, !dbg !6153, !tbaa !540
  %621 = zext i8 %620 to i64, !dbg !6152
  br label %636, !dbg !6154

; <label>:622:                                    ; preds = %610
  %623 = getelementptr inbounds i8, i8* %607, i64 -5, !dbg !6155
  %624 = bitcast i8* %623 to i16*, !dbg !6156
  %625 = load i16, i16* %624, align 1, !dbg !6156, !tbaa !2029
  %626 = zext i16 %625 to i64, !dbg !6155
  br label %636, !dbg !6157

; <label>:627:                                    ; preds = %610
  %628 = getelementptr inbounds i8, i8* %607, i64 -9, !dbg !6158
  %629 = bitcast i8* %628 to i32*, !dbg !6159
  %630 = load i32, i32* %629, align 1, !dbg !6159, !tbaa !191
  %631 = zext i32 %630 to i64, !dbg !6158
  br label %636, !dbg !6160

; <label>:632:                                    ; preds = %610
  %633 = getelementptr inbounds i8, i8* %607, i64 -17, !dbg !6161
  %634 = bitcast i8* %633 to i64*, !dbg !6162
  %635 = load i64, i64* %634, align 1, !dbg !6162, !tbaa !682
  br label %636, !dbg !6163

; <label>:636:                                    ; preds = %615, %618, %622, %627, %632
  %637 = phi i64 [ %635, %632 ], [ %631, %627 ], [ %626, %622 ], [ %621, %618 ], [ %617, %615 ], !dbg !6164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6148
  %638 = icmp eq i64 %637, 16, !dbg !6165
  br i1 %638, label %640, label %639, !dbg !6149

; <label>:639:                                    ; preds = %636, %614
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1697, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !6166
  unreachable

; <label>:640:                                    ; preds = %636
  %641 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 2, i64* null) #11, !dbg !6168
  %642 = icmp eq i8* %641, null, !dbg !6170
  br i1 %642, label %963, label %643, !dbg !6172

; <label>:643:                                    ; preds = %640
  %644 = tail call i8* @lpFirst(i8* nonnull %641) #9, !dbg !6173
  %645 = icmp eq i8* %644, null, !dbg !6175
  br i1 %645, label %646, label %647, !dbg !6177

; <label>:646:                                    ; preds = %643
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1709, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i64 0, i64 0)) #11, !dbg !6178
  unreachable

; <label>:647:                                    ; preds = %643
  %648 = load %struct.rax*, %struct.rax** %600, align 8, !dbg !6180, !tbaa !3751
  %649 = tail call i32 @raxInsert(%struct.rax* %648, i8* nonnull %607, i64 16, i8* nonnull %641, i8** null) #9, !dbg !6181
  tail call void @sdsfree(i8* nonnull %607) #9, !dbg !6183
  %650 = icmp eq i32 %649, 0, !dbg !6184
  br i1 %650, label %651, label %602, !dbg !6186

; <label>:651:                                    ; preds = %647
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1717, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i64 0, i64 0)) #11, !dbg !6187
  unreachable

; <label>:652:                                    ; preds = %602
  %653 = bitcast i64* %15 to i8*, !dbg !6191
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %653) #4, !dbg !6191
  %654 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %15) #9, !dbg !6193
  %655 = icmp eq i32 %654, -1, !dbg !6194
  %656 = load i64, i64* %15, align 8, !dbg !6195
  %657 = select i1 %655, i64 -1, i64 %656, !dbg !6196
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %653) #4, !dbg !6197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6197
  %658 = getelementptr inbounds %struct.stream, %struct.stream* %595, i64 0, i32 1, !dbg !6198
  store i64 %657, i64* %658, align 8, !dbg !6199, !tbaa !3784
  %659 = bitcast i64* %14 to i8*, !dbg !6203
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %659) #4, !dbg !6203
  %660 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %14) #9, !dbg !6205
  %661 = icmp eq i32 %660, -1, !dbg !6206
  %662 = load i64, i64* %14, align 8, !dbg !6207
  %663 = select i1 %661, i64 -1, i64 %662, !dbg !6208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %659) #4, !dbg !6209
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6209
  %664 = getelementptr inbounds %struct.stream, %struct.stream* %595, i64 0, i32 2, i32 0, !dbg !6210
  store i64 %663, i64* %664, align 8, !dbg !6211, !tbaa !3790
  %665 = bitcast i64* %13 to i8*, !dbg !6215
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %665) #4, !dbg !6215
  %666 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %13) #9, !dbg !6217
  %667 = icmp eq i32 %666, -1, !dbg !6218
  %668 = load i64, i64* %13, align 8, !dbg !6219
  %669 = select i1 %667, i64 -1, i64 %668, !dbg !6220
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %665) #4, !dbg !6221
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6221
  %670 = getelementptr inbounds %struct.stream, %struct.stream* %595, i64 0, i32 2, i32 1, !dbg !6222
  store i64 %669, i64* %670, align 8, !dbg !6223, !tbaa !3796
  %671 = bitcast i64* %12 to i8*, !dbg !6227
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %671) #4, !dbg !6227
  %672 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %12) #9, !dbg !6229
  %673 = icmp eq i32 %672, -1, !dbg !6230
  %674 = load i64, i64* %12, align 8, !dbg !6231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %671) #4, !dbg !6232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6232
  %675 = select i1 %673, i64 -1, i64 %674
  %676 = icmp eq i64 %675, 0, !dbg !6234
  br i1 %676, label %963, label %677, !dbg !6234

; <label>:677:                                    ; preds = %652
  %678 = bitcast %struct.streamID* %30 to i8*
  %679 = bitcast i64* %11 to i8*
  %680 = getelementptr inbounds %struct.streamID, %struct.streamID* %30, i64 0, i32 0
  %681 = bitcast i64* %10 to i8*
  %682 = getelementptr inbounds %struct.streamID, %struct.streamID* %30, i64 0, i32 1
  %683 = bitcast i64* %9 to i8*
  %684 = bitcast i64* %6 to i8*
  %685 = getelementptr inbounds [16 x i8], [16 x i8]* %31, i64 0, i64 0
  %686 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 7
  %687 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 0
  %688 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 4
  %689 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 6
  %690 = bitcast i64* %8 to i8*
  %691 = bitcast i64* %7 to i8*
  %692 = bitcast i64* %5 to i8*
  %693 = bitcast i64* %4 to i8*
  %694 = getelementptr inbounds [16 x i8], [16 x i8]* %32, i64 0, i64 0
  br label %695, !dbg !6234

; <label>:695:                                    ; preds = %677, %902
  %696 = phi i64 [ %675, %677 ], [ %697, %902 ]
  %697 = add i64 %696, -1, !dbg !6235
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %678) #4, !dbg !6236
  %698 = call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !6237
  %699 = icmp eq i8* %698, null, !dbg !6239
  br i1 %699, label %700, label %701, !dbg !6241

; <label>:700:                                    ; preds = %695
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1735, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.57, i64 0, i64 0)) #11, !dbg !6242
  unreachable

; <label>:701:                                    ; preds = %695
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %679) #4, !dbg !6247
  %702 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %11) #9, !dbg !6249
  %703 = icmp eq i32 %702, -1, !dbg !6250
  %704 = load i64, i64* %11, align 8, !dbg !6251
  %705 = select i1 %703, i64 -1, i64 %704, !dbg !6252
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %679) #4, !dbg !6253
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6253
  store i64 %705, i64* %680, align 8, !dbg !6254, !tbaa !6255
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %681) #4, !dbg !6259
  %706 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %10) #9, !dbg !6261
  %707 = icmp eq i32 %706, -1, !dbg !6262
  %708 = load i64, i64* %10, align 8, !dbg !6263
  %709 = select i1 %707, i64 -1, i64 %708, !dbg !6264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %681) #4, !dbg !6265
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6265
  store i64 %709, i64* %682, align 8, !dbg !6266, !tbaa !6267
  %710 = getelementptr inbounds i8, i8* %698, i64 -1, !dbg !6270
  %711 = load i8, i8* %710, align 1, !dbg !6270, !tbaa !540
  %712 = trunc i8 %711 to i3, !dbg !6272
  switch i3 %712, label %734 [
    i3 0, label %713
    i3 1, label %716
    i3 2, label %720
    i3 3, label %725
    i3 -4, label %730
  ], !dbg !6272

; <label>:713:                                    ; preds = %701
  %714 = lshr i8 %711, 3, !dbg !6273
  %715 = zext i8 %714 to i64, !dbg !6273
  br label %734, !dbg !6274

; <label>:716:                                    ; preds = %701
  %717 = getelementptr inbounds i8, i8* %698, i64 -3, !dbg !6275
  %718 = load i8, i8* %717, align 1, !dbg !6276, !tbaa !540
  %719 = zext i8 %718 to i64, !dbg !6275
  br label %734, !dbg !6277

; <label>:720:                                    ; preds = %701
  %721 = getelementptr inbounds i8, i8* %698, i64 -5, !dbg !6278
  %722 = bitcast i8* %721 to i16*, !dbg !6279
  %723 = load i16, i16* %722, align 1, !dbg !6279, !tbaa !2029
  %724 = zext i16 %723 to i64, !dbg !6278
  br label %734, !dbg !6280

; <label>:725:                                    ; preds = %701
  %726 = getelementptr inbounds i8, i8* %698, i64 -9, !dbg !6281
  %727 = bitcast i8* %726 to i32*, !dbg !6282
  %728 = load i32, i32* %727, align 1, !dbg !6282, !tbaa !191
  %729 = zext i32 %728 to i64, !dbg !6281
  br label %734, !dbg !6283

; <label>:730:                                    ; preds = %701
  %731 = getelementptr inbounds i8, i8* %698, i64 -17, !dbg !6284
  %732 = bitcast i8* %731 to i64*, !dbg !6285
  %733 = load i64, i64* %732, align 1, !dbg !6285, !tbaa !682
  br label %734, !dbg !6286

; <label>:734:                                    ; preds = %701, %713, %716, %720, %725, %730
  %735 = phi i64 [ %733, %730 ], [ %729, %725 ], [ %724, %720 ], [ %719, %716 ], [ %715, %713 ], [ 0, %701 ], !dbg !6287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6288
  %736 = call %struct.streamCG* @streamCreateCG(%struct.stream* %595, i8* nonnull %698, i64 %735, %struct.streamID* nonnull %30) #9, !dbg !6290
  %737 = icmp eq %struct.streamCG* %736, null, !dbg !6292
  br i1 %737, label %738, label %739, !dbg !6294

; <label>:738:                                    ; preds = %734
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1742, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58, i64 0, i64 0), i8* nonnull %698) #11, !dbg !6295
  unreachable

; <label>:739:                                    ; preds = %734
  call void @sdsfree(i8* nonnull %698) #9, !dbg !6296
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %683) #4, !dbg !6300
  %740 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %9) #9, !dbg !6302
  %741 = icmp eq i32 %740, -1, !dbg !6303
  %742 = load i64, i64* %9, align 8, !dbg !6304
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %683) #4, !dbg !6305
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6305
  %743 = select i1 %741, i64 -1, i64 %742
  %744 = icmp eq i64 %743, 0, !dbg !6307
  br i1 %744, label %811, label %745, !dbg !6307

; <label>:745:                                    ; preds = %739
  %746 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %736, i64 0, i32 1
  br label %747, !dbg !6307

; <label>:747:                                    ; preds = %745, %809
  %748 = phi i64 [ %743, %745 ], [ %749, %809 ]
  %749 = add i64 %748, -1, !dbg !6308
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %685) #4, !dbg !6309
  br label %750, !dbg !6319

; <label>:750:                                    ; preds = %765, %747
  %751 = phi i64 [ 16, %747 ], [ %767, %765 ]
  %752 = phi i8* [ %685, %747 ], [ %766, %765 ]
  %753 = load i64, i64* %686, align 8, !dbg !6320, !tbaa !506
  %754 = icmp ne i64 %753, 0, !dbg !6321
  %755 = icmp ult i64 %753, %751, !dbg !6322
  %756 = and i1 %754, %755, !dbg !6323
  %757 = select i1 %756, i64 %753, i64 %751, !dbg !6323
  %758 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %687, align 8, !dbg !6325, !tbaa !514
  %759 = call i64 %758(%struct._rio* %1, i8* %752, i64 %757) #9, !dbg !6326
  %760 = icmp eq i64 %759, 0, !dbg !6327
  br i1 %760, label %771, label %761, !dbg !6328

; <label>:761:                                    ; preds = %750
  %762 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %688, align 8, !dbg !6329, !tbaa !520
  %763 = icmp eq void (%struct._rio*, i8*, i64)* %762, null, !dbg !6330
  br i1 %763, label %765, label %764, !dbg !6331

; <label>:764:                                    ; preds = %761
  call void %762(%struct._rio* nonnull %1, i8* %752, i64 %757) #9, !dbg !6332
  br label %765, !dbg !6332

; <label>:765:                                    ; preds = %764, %761
  %766 = getelementptr inbounds i8, i8* %752, i64 %757, !dbg !6333
  %767 = sub i64 %751, %757, !dbg !6334
  %768 = load i64, i64* %689, align 8, !dbg !6335, !tbaa !527
  %769 = add i64 %768, %757, !dbg !6335
  store i64 %769, i64* %689, align 8, !dbg !6335, !tbaa !527
  %770 = icmp eq i64 %767, 0, !dbg !6319
  br i1 %770, label %772, label %750, !dbg !6319

; <label>:771:                                    ; preds = %750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6336
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 16) #9, !dbg !6337
  unreachable

; <label>:772:                                    ; preds = %765
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6336
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6338
  %773 = call %struct.streamNACK* @streamCreateNACK(%struct.streamConsumer* null) #9, !dbg !6339
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %690) #4, !dbg !6344
  br label %774, !dbg !6353

; <label>:774:                                    ; preds = %789, %772
  %775 = phi i64 [ 8, %772 ], [ %791, %789 ]
  %776 = phi i8* [ %690, %772 ], [ %790, %789 ]
  %777 = load i64, i64* %686, align 8, !dbg !6354, !tbaa !506
  %778 = icmp ne i64 %777, 0, !dbg !6355
  %779 = icmp ult i64 %777, %775, !dbg !6356
  %780 = and i1 %778, %779, !dbg !6357
  %781 = select i1 %780, i64 %777, i64 %775, !dbg !6357
  %782 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %687, align 8, !dbg !6359, !tbaa !514
  %783 = call i64 %782(%struct._rio* nonnull %1, i8* %776, i64 %781) #9, !dbg !6360
  %784 = icmp eq i64 %783, 0, !dbg !6361
  br i1 %784, label %795, label %785, !dbg !6362

; <label>:785:                                    ; preds = %774
  %786 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %688, align 8, !dbg !6363, !tbaa !520
  %787 = icmp eq void (%struct._rio*, i8*, i64)* %786, null, !dbg !6364
  br i1 %787, label %789, label %788, !dbg !6365

; <label>:788:                                    ; preds = %785
  call void %786(%struct._rio* nonnull %1, i8* %776, i64 %781) #9, !dbg !6366
  br label %789, !dbg !6366

; <label>:789:                                    ; preds = %788, %785
  %790 = getelementptr inbounds i8, i8* %776, i64 %781, !dbg !6367
  %791 = sub i64 %775, %781, !dbg !6368
  %792 = load i64, i64* %689, align 8, !dbg !6369, !tbaa !527
  %793 = add i64 %792, %781, !dbg !6369
  store i64 %793, i64* %689, align 8, !dbg !6369, !tbaa !527
  %794 = icmp eq i64 %791, 0, !dbg !6353
  br i1 %794, label %796, label %774, !dbg !6353

; <label>:795:                                    ; preds = %774
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6370
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 8) #9, !dbg !6371
  unreachable

; <label>:796:                                    ; preds = %789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6372
  %797 = load i64, i64* %8, align 8, !dbg !6373, !tbaa !682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %690) #4, !dbg !6375
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6376
  %798 = getelementptr inbounds %struct.streamNACK, %struct.streamNACK* %773, i64 0, i32 0, !dbg !6377
  store i64 %797, i64* %798, align 8, !dbg !6378, !tbaa !3049
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %691) #4, !dbg !6382
  %799 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %1, i32* null, i64* nonnull %7) #9, !dbg !6384
  %800 = icmp eq i32 %799, -1, !dbg !6385
  %801 = load i64, i64* %7, align 8, !dbg !6386
  %802 = select i1 %800, i64 -1, i64 %801, !dbg !6387
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %691) #4, !dbg !6388
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6388
  %803 = getelementptr inbounds %struct.streamNACK, %struct.streamNACK* %773, i64 0, i32 1, !dbg !6389
  store i64 %802, i64* %803, align 8, !dbg !6390, !tbaa !3089
  %804 = load %struct.rax*, %struct.rax** %746, align 8, !dbg !6391, !tbaa !3842
  %805 = bitcast %struct.streamNACK* %773 to i8*, !dbg !6393
  %806 = call i32 @raxInsert(%struct.rax* %804, i8* nonnull %685, i64 16, i8* %805, i8** null) #9, !dbg !6394
  %807 = icmp eq i32 %806, 0, !dbg !6394
  br i1 %807, label %808, label %809, !dbg !6395

; <label>:808:                                    ; preds = %796
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1759, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.59, i64 0, i64 0)) #11, !dbg !6396
  unreachable

; <label>:809:                                    ; preds = %796
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %685) #4, !dbg !6397
  %810 = icmp eq i64 %749, 0, !dbg !6307
  br i1 %810, label %811, label %747, !dbg !6307, !llvm.loop !6398

; <label>:811:                                    ; preds = %809, %739
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %684) #4, !dbg !6402
  %812 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %6) #9, !dbg !6404
  %813 = icmp eq i32 %812, -1, !dbg !6405
  %814 = load i64, i64* %6, align 8, !dbg !6406
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %684) #4, !dbg !6407
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6407
  %815 = select i1 %813, i64 -1, i64 %814
  %816 = icmp eq i64 %815, 0, !dbg !6409
  br i1 %816, label %902, label %817, !dbg !6409

; <label>:817:                                    ; preds = %811
  %818 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %736, i64 0, i32 1
  br label %821, !dbg !6409

; <label>:819:                                    ; preds = %900, %851
  %820 = icmp eq i64 %823, 0, !dbg !6409
  br i1 %820, label %902, label %821, !dbg !6409

; <label>:821:                                    ; preds = %817, %819
  %822 = phi i64 [ %815, %817 ], [ %823, %819 ]
  %823 = add i64 %822, -1, !dbg !6410
  %824 = call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !6411
  %825 = icmp eq i8* %824, null, !dbg !6413
  br i1 %825, label %826, label %827, !dbg !6415

; <label>:826:                                    ; preds = %821
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1769, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.60, i64 0, i64 0)) #11, !dbg !6416
  unreachable

; <label>:827:                                    ; preds = %821
  %828 = call %struct.streamConsumer* @streamLookupConsumer(%struct.streamCG* nonnull %736, i8* nonnull %824, i32 1) #9, !dbg !6418
  call void @sdsfree(i8* nonnull %824) #9, !dbg !6420
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %692) #4, !dbg !6424
  br label %829, !dbg !6433

; <label>:829:                                    ; preds = %844, %827
  %830 = phi i64 [ 8, %827 ], [ %846, %844 ]
  %831 = phi i8* [ %692, %827 ], [ %845, %844 ]
  %832 = load i64, i64* %686, align 8, !dbg !6434, !tbaa !506
  %833 = icmp ne i64 %832, 0, !dbg !6435
  %834 = icmp ult i64 %832, %830, !dbg !6436
  %835 = and i1 %833, %834, !dbg !6437
  %836 = select i1 %835, i64 %832, i64 %830, !dbg !6437
  %837 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %687, align 8, !dbg !6439, !tbaa !514
  %838 = call i64 %837(%struct._rio* %1, i8* %831, i64 %836) #9, !dbg !6440
  %839 = icmp eq i64 %838, 0, !dbg !6441
  br i1 %839, label %850, label %840, !dbg !6442

; <label>:840:                                    ; preds = %829
  %841 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %688, align 8, !dbg !6443, !tbaa !520
  %842 = icmp eq void (%struct._rio*, i8*, i64)* %841, null, !dbg !6444
  br i1 %842, label %844, label %843, !dbg !6445

; <label>:843:                                    ; preds = %840
  call void %841(%struct._rio* nonnull %1, i8* %831, i64 %836) #9, !dbg !6446
  br label %844, !dbg !6446

; <label>:844:                                    ; preds = %843, %840
  %845 = getelementptr inbounds i8, i8* %831, i64 %836, !dbg !6447
  %846 = sub i64 %830, %836, !dbg !6448
  %847 = load i64, i64* %689, align 8, !dbg !6449, !tbaa !527
  %848 = add i64 %847, %836, !dbg !6449
  store i64 %848, i64* %689, align 8, !dbg !6449, !tbaa !527
  %849 = icmp eq i64 %846, 0, !dbg !6433
  br i1 %849, label %851, label %829, !dbg !6433

; <label>:850:                                    ; preds = %829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6450
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 8) #9, !dbg !6451
  unreachable

; <label>:851:                                    ; preds = %844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6452
  %852 = load i64, i64* %5, align 8, !dbg !6453, !tbaa !682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %692) #4, !dbg !6455
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6456
  %853 = getelementptr inbounds %struct.streamConsumer, %struct.streamConsumer* %828, i64 0, i32 0, !dbg !6457
  store i64 %852, i64* %853, align 8, !dbg !6458, !tbaa !3158
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %693) #4, !dbg !6462
  %854 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %1, i32* null, i64* nonnull %4) #9, !dbg !6464
  %855 = icmp eq i32 %854, -1, !dbg !6465
  %856 = load i64, i64* %4, align 8, !dbg !6466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %693) #4, !dbg !6467
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6467
  %857 = select i1 %855, i64 -1, i64 %856
  %858 = icmp eq i64 %857, 0, !dbg !6468
  br i1 %858, label %819, label %859, !dbg !6468, !llvm.loop !6469

; <label>:859:                                    ; preds = %851
  %860 = getelementptr inbounds %struct.streamConsumer, %struct.streamConsumer* %828, i64 0, i32 2
  br label %861, !dbg !6468

; <label>:861:                                    ; preds = %859, %900
  %862 = phi i64 [ %857, %859 ], [ %863, %900 ]
  %863 = add i64 %862, -1, !dbg !6471
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %694) #4, !dbg !6472
  br label %864, !dbg !6482

; <label>:864:                                    ; preds = %879, %861
  %865 = phi i64 [ 16, %861 ], [ %881, %879 ]
  %866 = phi i8* [ %694, %861 ], [ %880, %879 ]
  %867 = load i64, i64* %686, align 8, !dbg !6483, !tbaa !506
  %868 = icmp ne i64 %867, 0, !dbg !6484
  %869 = icmp ult i64 %867, %865, !dbg !6485
  %870 = and i1 %868, %869, !dbg !6486
  %871 = select i1 %870, i64 %867, i64 %865, !dbg !6486
  %872 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %687, align 8, !dbg !6488, !tbaa !514
  %873 = call i64 %872(%struct._rio* nonnull %1, i8* %866, i64 %871) #9, !dbg !6489
  %874 = icmp eq i64 %873, 0, !dbg !6490
  br i1 %874, label %885, label %875, !dbg !6491

; <label>:875:                                    ; preds = %864
  %876 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %688, align 8, !dbg !6492, !tbaa !520
  %877 = icmp eq void (%struct._rio*, i8*, i64)* %876, null, !dbg !6493
  br i1 %877, label %879, label %878, !dbg !6494

; <label>:878:                                    ; preds = %875
  call void %876(%struct._rio* nonnull %1, i8* %866, i64 %871) #9, !dbg !6495
  br label %879, !dbg !6495

; <label>:879:                                    ; preds = %878, %875
  %880 = getelementptr inbounds i8, i8* %866, i64 %871, !dbg !6496
  %881 = sub i64 %865, %871, !dbg !6497
  %882 = load i64, i64* %689, align 8, !dbg !6498, !tbaa !527
  %883 = add i64 %882, %871, !dbg !6498
  store i64 %883, i64* %689, align 8, !dbg !6498, !tbaa !527
  %884 = icmp eq i64 %881, 0, !dbg !6482
  br i1 %884, label %886, label %864, !dbg !6482

; <label>:885:                                    ; preds = %864
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6499
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 16) #9, !dbg !6500
  unreachable

; <label>:886:                                    ; preds = %879
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6501
  %887 = load %struct.rax*, %struct.rax** %818, align 8, !dbg !6502, !tbaa !3842
  %888 = call i8* @raxFind(%struct.rax* %887, i8* nonnull %694, i64 16) #9, !dbg !6503
  %889 = bitcast i8* %888 to %struct.streamNACK*, !dbg !6503
  %890 = load %struct.streamNACK*, %struct.streamNACK** bitcast (i8** @raxNotFound to %struct.streamNACK**), align 8, !dbg !6505, !tbaa !200
  %891 = icmp eq %struct.streamNACK* %890, %889, !dbg !6507
  br i1 %891, label %892, label %893, !dbg !6508

; <label>:892:                                    ; preds = %886
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1785, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.61, i64 0, i64 0)) #11, !dbg !6509
  unreachable

; <label>:893:                                    ; preds = %886
  %894 = getelementptr inbounds i8, i8* %888, i64 16, !dbg !6510
  %895 = bitcast i8* %894 to %struct.streamConsumer**, !dbg !6510
  store %struct.streamConsumer* %828, %struct.streamConsumer** %895, align 8, !dbg !6511, !tbaa !6512
  %896 = load %struct.rax*, %struct.rax** %860, align 8, !dbg !6513, !tbaa !3198
  %897 = call i32 @raxInsert(%struct.rax* %896, i8* nonnull %694, i64 16, i8* %888, i8** null) #9, !dbg !6515
  %898 = icmp eq i32 %897, 0, !dbg !6515
  br i1 %898, label %899, label %900, !dbg !6516

; <label>:899:                                    ; preds = %893
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1794, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.62, i64 0, i64 0)) #11, !dbg !6517
  unreachable

; <label>:900:                                    ; preds = %893
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %694) #4, !dbg !6518
  %901 = icmp eq i64 %863, 0, !dbg !6468
  br i1 %901, label %819, label %861, !dbg !6468, !llvm.loop !6519

; <label>:902:                                    ; preds = %819, %811
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %678) #4, !dbg !6520
  %903 = icmp eq i64 %697, 0, !dbg !6234
  br i1 %903, label %963, label %695, !dbg !6234, !llvm.loop !6521

; <label>:904:                                    ; preds = %589
  %905 = icmp eq i32 %0, 6, !dbg !6522
  %906 = or i32 %0, 1, !dbg !6523
  %907 = icmp eq i32 %906, 7, !dbg !6523
  br i1 %907, label %908, label %961, !dbg !6523

; <label>:908:                                    ; preds = %904
  %909 = icmp eq i32 %0, 7, !dbg !6524
  %910 = bitcast i64* %18 to i8*, !dbg !6528
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %910) #4, !dbg !6528
  %911 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %18) #9, !dbg !6530
  %912 = icmp eq i32 %911, -1, !dbg !6531
  %913 = load i64, i64* %18, align 8, !dbg !6532
  %914 = select i1 %912, i64 -1, i64 %913, !dbg !6533
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %910) #4, !dbg !6534
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6534
  %915 = tail call %struct.RedisModuleType* @moduleTypeLookupModuleByID(i64 %914) #9, !dbg !6536
  %916 = getelementptr inbounds [10 x i8], [10 x i8]* %33, i64 0, i64 0, !dbg !6538
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %916) #4, !dbg !6538
  %917 = load i32, i32* @rdbCheckMode, align 4, !dbg !6540, !tbaa !191
  %918 = icmp ne i32 %917, 0, !dbg !6540
  %919 = and i1 %909, %918, !dbg !6542
  br i1 %919, label %959, label %920, !dbg !6542

; <label>:920:                                    ; preds = %908
  %921 = icmp eq %struct.RedisModuleType* %915, null, !dbg !6543
  br i1 %921, label %922, label %923, !dbg !6545

; <label>:922:                                    ; preds = %920
  call void @moduleTypeNameByID(i8* nonnull %916, i64 %914) #9, !dbg !6546
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.63, i64 0, i64 0), i8* nonnull %916) #9, !dbg !6548
  call void @exit(i32 1) #10, !dbg !6549
  unreachable, !dbg !6549

; <label>:923:                                    ; preds = %920
  %924 = bitcast %struct.RedisModuleIO* %34 to i8*, !dbg !6550
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %924) #4, !dbg !6550
  %925 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 1, !dbg !6551
  store %struct._rio* %1, %struct._rio** %925, align 8, !dbg !6551, !tbaa !3876
  %926 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 2, !dbg !6551
  store %struct.RedisModuleType* %915, %struct.RedisModuleType** %926, align 8, !dbg !6551, !tbaa !3878
  %927 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 0, !dbg !6551
  store i64 0, i64* %927, align 8, !dbg !6551, !tbaa !3879
  %928 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 3, !dbg !6551
  store i32 0, i32* %928, align 8, !dbg !6551, !tbaa !3880
  %929 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 4, !dbg !6551
  %930 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 6, !dbg !6551
  store %struct.redisObject* %2, %struct.redisObject** %930, align 8, !dbg !6551, !tbaa !3882
  %931 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 5, !dbg !6551
  store %struct.RedisModuleCtx* null, %struct.RedisModuleCtx** %931, align 8, !dbg !6551, !tbaa !3883
  %932 = select i1 %905, i32 1, i32 2, !dbg !6553
  store i32 %932, i32* %929, align 4, !dbg !6554, !tbaa !3881
  %933 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %915, i64 0, i32 2, !dbg !6555
  %934 = load i8* (%struct.RedisModuleIO*, i32)*, i8* (%struct.RedisModuleIO*, i32)** %933, align 8, !dbg !6555, !tbaa !6556
  %935 = trunc i64 %914 to i32, !dbg !6557
  %936 = and i32 %935, 1023, !dbg !6557
  %937 = call i8* %934(%struct.RedisModuleIO* nonnull %34, i32 %936) #9, !dbg !6559
  %938 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %931, align 8, !dbg !6561, !tbaa !3883
  %939 = icmp eq %struct.RedisModuleCtx* %938, null, !dbg !6563
  br i1 %939, label %943, label %940, !dbg !6564

; <label>:940:                                    ; preds = %923
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %938) #9, !dbg !6565
  %941 = bitcast %struct.RedisModuleCtx** %931 to i8**, !dbg !6567
  %942 = load i8*, i8** %941, align 8, !dbg !6567, !tbaa !3883
  call void @zfree(i8* %942) #9, !dbg !6568
  br label %943, !dbg !6569

; <label>:943:                                    ; preds = %923, %940
  %944 = load i32, i32* %929, align 4, !dbg !6570, !tbaa !3881
  %945 = icmp eq i32 %944, 2, !dbg !6571
  br i1 %945, label %946, label %954, !dbg !6572

; <label>:946:                                    ; preds = %943
  %947 = bitcast i64* %20 to i8*, !dbg !6576
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %947) #4, !dbg !6576
  %948 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %20) #9, !dbg !6578
  %949 = icmp ne i32 %948, -1, !dbg !6579
  %950 = load i64, i64* %20, align 8, !dbg !6580
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %947) #4, !dbg !6581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6581
  %951 = icmp eq i64 %950, 0, !dbg !6582
  %952 = and i1 %949, %951, !dbg !6582
  br i1 %952, label %954, label %953, !dbg !6584

; <label>:953:                                    ; preds = %946
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.64, i64 0, i64 0), i8* nonnull %916) #9, !dbg !6585
  call void @exit(i32 1) #10, !dbg !6587
  unreachable, !dbg !6587

; <label>:954:                                    ; preds = %946, %943
  %955 = icmp eq i8* %937, null, !dbg !6588
  br i1 %955, label %956, label %957, !dbg !6590

; <label>:956:                                    ; preds = %954
  call void @moduleTypeNameByID(i8* nonnull %916, i64 %914) #9, !dbg !6591
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @.str.65, i64 0, i64 0), i8* nonnull %916) #9, !dbg !6593
  call void @exit(i32 1) #10, !dbg !6594
  unreachable, !dbg !6594

; <label>:957:                                    ; preds = %954
  %958 = call %struct.redisObject* @createModuleObject(%struct.RedisModuleType* nonnull %915, i8* nonnull %937) #9, !dbg !6595
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %924) #4, !dbg !6596
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %916) #4, !dbg !6596
  br label %963

; <label>:959:                                    ; preds = %908
  call void @moduleTypeNameByID(i8* nonnull %916, i64 %914) #9, !dbg !6597
  %960 = call %struct.redisObject* @rdbLoadCheckModuleValue(%struct._rio* %1, i8* nonnull %916) #11, !dbg !6599
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %916) #4, !dbg !6596
  br label %963

; <label>:961:                                    ; preds = %904
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1840, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i64 0, i64 0), i32 %0) #11, !dbg !6600
  unreachable

; <label>:962:                                    ; preds = %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #4, !dbg !5686
  br label %963

; <label>:963:                                    ; preds = %149, %56, %90, %490, %495, %313, %308, %464, %460, %640, %902, %113, %48, %482, %652, %551, %552, %569, %557, %578, %570, %587, %579, %287, %286, %278, %38, %472, %957, %959, %501, %155, %265, %475, %962, %95, %41, %35
  %964 = phi %struct.redisObject* [ %960, %959 ], [ null, %35 ], [ null, %41 ], [ null, %95 ], [ null, %962 ], [ null, %475 ], [ null, %265 ], [ null, %155 ], [ null, %501 ], [ %40, %38 ], [ %295, %472 ], [ %958, %957 ], [ %163, %278 ], [ %163, %286 ], [ null, %287 ], [ %505, %579 ], [ %505, %587 ], [ %505, %570 ], [ %505, %578 ], [ %505, %557 ], [ %505, %569 ], [ %505, %552 ], [ %505, %551 ], [ %592, %652 ], [ %483, %482 ], [ %49, %48 ], [ %114, %113 ], [ %592, %902 ], [ null, %640 ], [ null, %460 ], [ null, %464 ], [ null, %308 ], [ null, %313 ], [ null, %490 ], [ %483, %495 ], [ null, %56 ], [ %49, %90 ], [ %117, %149 ], !dbg !6602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6603
  ret %struct.redisObject* %964, !dbg !6603
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @tryObjectEncoding(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createQuicklistObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @quicklistSetOptions(%struct.quicklist*, i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @getDecodedObject(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @quicklistPushTail(%struct.quicklist*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createSetObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dictExpand(%struct.dict*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createIntsetObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @isSdsRepresentableAsLongLong(i8*, i64*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.intset* @intsetAdd(%struct.intset*, i64, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @setTypeConvert(%struct.redisObject*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dictAdd(%struct.dict*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createZsetObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslInsert(%struct.zskiplist*, double, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @zsetLength(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @zsetConvert(%struct.redisObject*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createHashObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @hashTypeConvert(%struct.redisObject*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @ziplistPush(i8*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @quicklistAppendZiplist(%struct.quicklist*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @ziplistNew() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zipmapRewind(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zipmapNext(i8*, i8**, i32*, i8**, i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @hashTypeLength(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @listTypeConvert(%struct.redisObject*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @intsetLen(%struct.intset*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStreamObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @lpFirst(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @raxInsert(%struct.rax*, i8*, i64, i8*, i8**) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.streamCG* @streamCreateCG(%struct.stream*, i8*, i64, %struct.streamID*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.streamNACK* @streamCreateNACK(%struct.streamConsumer*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.streamConsumer* @streamLookupConsumer(%struct.streamCG*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @raxFind(%struct.rax*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.RedisModuleType* @moduleTypeLookupModuleByID(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @moduleTypeNameByID(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createModuleObject(%struct.RedisModuleType*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @startLoading(%struct.__sFILE*) local_unnamed_addr #6 !dbg !6604 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*, !dbg !6647
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %3) #4, !dbg !6647
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !6648, !tbaa !6649
  %4 = tail call i64 @time(i64* null) #9, !dbg !6650
  store i64 %4, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 54), align 8, !dbg !6651, !tbaa !6652
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6653, !tbaa !6654
  %5 = tail call i32 @fileno(%struct.__sFILE* %0) #9, !dbg !6655
  %6 = call i32 @fstat(i32 %5, %struct.stat* nonnull %2) #9, !dbg !6658
  %7 = icmp eq i32 %6, -1, !dbg !6659
  %8 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 7, !dbg !6660
  %9 = load i64, i64* %8, align 8, !dbg !6660
  %10 = select i1 %7, i64 0, i64 %9, !dbg !6662
  store i64 %10, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 8, !dbg !6663, !tbaa !6665
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %3) #4, !dbg !6666
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6666
  ret void, !dbg !6666
}

; Function Attrs: noredzone
declare dso_local i32 @fstat(i32, %struct.stat*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @loadingProgress(i64) local_unnamed_addr #6 !dbg !6667 {
  store i64 %0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6673, !tbaa !6654
  %2 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6674, !tbaa !6676
  %3 = tail call i64 @zmalloc_used_memory() #9, !dbg !6677
  %4 = icmp ult i64 %2, %3, !dbg !6678
  br i1 %4, label %5, label %7, !dbg !6679

; <label>:5:                                      ; preds = %1
  %6 = tail call i64 @zmalloc_used_memory() #9, !dbg !6680
  store i64 %6, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6681, !tbaa !6676
  br label %7, !dbg !6682

; <label>:7:                                      ; preds = %5, %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6683
  ret void, !dbg !6683
}

; Function Attrs: norecurse noredzone nounwind
define dso_local void @stopLoading() local_unnamed_addr #7 !dbg !6684 {
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !6685, !tbaa !6649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6686
  ret void, !dbg !6686
}

; Function Attrs: noredzone nounwind
define dso_local void @rdbLoadProgressCallback(%struct._rio*, i8*, i64) #6 !dbg !6687 {
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 159), align 4, !dbg !6697, !tbaa !4694
  %5 = icmp eq i32 %4, 0, !dbg !6699
  br i1 %5, label %7, label %6, !dbg !6700

; <label>:6:                                      ; preds = %3
  tail call void @rioGenericUpdateChecksum(%struct._rio* %0, i8* %1, i64 %2) #9, !dbg !6701
  br label %7, !dbg !6701

; <label>:7:                                      ; preds = %3, %6
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 55), align 8, !dbg !6702, !tbaa !6704
  %9 = icmp eq i64 %8, 0, !dbg !6705
  br i1 %9, label %33, label %10, !dbg !6706

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6, !dbg !6707
  %12 = load i64, i64* %11, align 8, !dbg !6707, !tbaa !527
  %13 = add i64 %12, %2, !dbg !6708
  %14 = udiv i64 %13, %8, !dbg !6709
  %15 = udiv i64 %12, %8, !dbg !6710
  %16 = icmp ugt i64 %14, %15, !dbg !6711
  br i1 %16, label %17, label %33, !dbg !6712

; <label>:17:                                     ; preds = %10
  tail call void @updateCachedTime() #9, !dbg !6713
  %18 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !6715, !tbaa !6717
  %19 = icmp ne i8* %18, null, !dbg !6718
  %20 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !6719
  %21 = icmp eq i32 %20, 14, !dbg !6720
  %22 = and i1 %19, %21, !dbg !6721
  br i1 %22, label %23, label %24, !dbg !6721

; <label>:23:                                     ; preds = %17
  tail call void @replicationSendNewlineToMaster() #9, !dbg !6722
  br label %24, !dbg !6722

; <label>:24:                                     ; preds = %23, %17
  %25 = load i64, i64* %11, align 8, !dbg !6723, !tbaa !527
  store i64 %25, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6726, !tbaa !6654
  %26 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6727, !tbaa !6676
  %27 = tail call i64 @zmalloc_used_memory() #9, !dbg !6728
  %28 = icmp ult i64 %26, %27, !dbg !6729
  br i1 %28, label %29, label %31, !dbg !6730

; <label>:29:                                     ; preds = %24
  %30 = tail call i64 @zmalloc_used_memory() #9, !dbg !6731
  store i64 %30, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6732, !tbaa !6676
  br label %31, !dbg !6733

; <label>:31:                                     ; preds = %24, %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6734
  %32 = tail call i32 @processEventsWhileBlocked() #9, !dbg !6735
  br label %33, !dbg !6736

; <label>:33:                                     ; preds = %7, %31, %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6737
  ret void, !dbg !6737
}

; Function Attrs: noredzone
declare dso_local void @updateCachedTime() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @replicationSendNewlineToMaster() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @processEventsWhileBlocked() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadRio(%struct._rio*, %struct.rdbSaveInfo*, i32) local_unnamed_addr #6 !dbg !6738 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca [1024 x i8], align 16
  %16 = alloca i8, align 1
  %17 = alloca [10 x i8], align 1
  %18 = alloca %struct.RedisModuleIO, align 8
  %19 = alloca i64, align 8
  %20 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !6797, !tbaa !4746
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i64 0, i64 0, !dbg !6799
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %21) #4, !dbg !6799
  %22 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4, !dbg !6801
  store void (%struct._rio*, i8*, i64)* @rdbLoadProgressCallback, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6802, !tbaa !520
  %23 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 55), align 8, !dbg !6803, !tbaa !6704
  %24 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !6804
  store i64 %23, i64* %24, align 8, !dbg !6805, !tbaa !506
  %25 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %26 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  %27 = add i64 %23, -1, !dbg !6811
  %28 = icmp ult i64 %27, 8, !dbg !6811
  %29 = select i1 %28, i64 %23, i64 9, !dbg !6811
  %30 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6813, !tbaa !514
  %31 = call i64 %30(%struct._rio* nonnull %0, i8* nonnull %21, i64 %29) #9, !dbg !6814
  %32 = icmp eq i64 %31, 0, !dbg !6815
  br i1 %32, label %33, label %34, !dbg !6816

; <label>:33:                                     ; preds = %46, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6817
  br label %459, !dbg !6818

; <label>:34:                                     ; preds = %3, %46
  %35 = phi i64 [ %52, %46 ], [ %29, %3 ]
  %36 = phi i8* [ %47, %46 ], [ %21, %3 ]
  %37 = phi i64 [ %42, %46 ], [ 9, %3 ]
  %38 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6819, !tbaa !520
  %39 = icmp eq void (%struct._rio*, i8*, i64)* %38, null, !dbg !6820
  br i1 %39, label %41, label %40, !dbg !6821

; <label>:40:                                     ; preds = %34
  call void %38(%struct._rio* nonnull %0, i8* %36, i64 %35) #9, !dbg !6822
  br label %41, !dbg !6822

; <label>:41:                                     ; preds = %40, %34
  %42 = sub i64 %37, %35, !dbg !6823
  %43 = load i64, i64* %26, align 8, !dbg !6824, !tbaa !527
  %44 = add i64 %43, %35, !dbg !6824
  store i64 %44, i64* %26, align 8, !dbg !6824, !tbaa !527
  %45 = icmp eq i64 %42, 0, !dbg !6825
  br i1 %45, label %56, label %46, !dbg !6825

; <label>:46:                                     ; preds = %41
  %47 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !6826
  %48 = load i64, i64* %24, align 8, !dbg !6827, !tbaa !506
  %49 = icmp ne i64 %48, 0, !dbg !6828
  %50 = icmp ult i64 %48, %42, !dbg !6829
  %51 = and i1 %49, %50, !dbg !6811
  %52 = select i1 %51, i64 %48, i64 %42, !dbg !6811
  %53 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6813, !tbaa !514
  %54 = call i64 %53(%struct._rio* nonnull %0, i8* %47, i64 %52) #9, !dbg !6814
  %55 = icmp eq i64 %54, 0, !dbg !6815
  br i1 %55, label %33, label %34, !dbg !6816

; <label>:56:                                     ; preds = %41
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6817
  %57 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i64 0, i64 9, !dbg !6830
  store i8 0, i8* %57, align 1, !dbg !6831, !tbaa !540
  %58 = call i32 @memcmp(i8* nonnull %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i64 5) #9, !dbg !6832
  %59 = icmp eq i32 %58, 0, !dbg !6834
  br i1 %59, label %62, label %60, !dbg !6835

; <label>:60:                                     ; preds = %56
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.67, i64 0, i64 0)) #9, !dbg !6836
  %61 = call i32* @__errno() #9, !dbg !6838
  store i32 22, i32* %61, align 4, !dbg !6839, !tbaa !191
  br label %460, !dbg !6840

; <label>:62:                                     ; preds = %56
  %63 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i64 0, i64 5, !dbg !6841
  %64 = call i32 @atoi(i8* nonnull %63) #9, !dbg !6842
  %65 = add i32 %64, -1, !dbg !6844
  %66 = icmp ugt i32 %65, 8, !dbg !6844
  br i1 %66, label %67, label %69, !dbg !6844

; <label>:67:                                     ; preds = %62
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.68, i64 0, i64 0), i32 %64) #9, !dbg !6846
  %68 = call i32* @__errno() #9, !dbg !6848
  store i32 22, i32* %68, align 4, !dbg !6849, !tbaa !191
  br label %460, !dbg !6850

; <label>:69:                                     ; preds = %62
  %70 = call i64 @mstime() #9, !dbg !6854
  %71 = call i32 @LRU_CLOCK() #9, !dbg !6856
  %72 = zext i32 %71 to i64, !dbg !6856
  %73 = bitcast i64* %7 to i8*
  %74 = bitcast i64* %6 to i8*
  %75 = bitcast i64* %5 to i8*
  %76 = bitcast i32* %13 to i8*
  %77 = bitcast i64* %12 to i8*
  %78 = bitcast i64* %11 to i8*
  %79 = bitcast i64* %10 to i8*
  %80 = bitcast i64* %9 to i8*
  %81 = getelementptr inbounds [10 x i8], [10 x i8]* %17, i64 0, i64 0
  %82 = bitcast i64* %8 to i8*
  %83 = icmp eq i32 %2, 0
  %84 = bitcast %struct.RedisModuleIO* %18 to i8*
  %85 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 1
  %86 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 2
  %87 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 0
  %88 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 3
  %89 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 4
  %90 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 6
  %91 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 5
  %92 = icmp eq %struct.rdbSaveInfo* %1, null
  %93 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %1, i64 0, i32 0
  %94 = bitcast i64* %4 to i8*
  %95 = bitcast %struct.RedisModuleCtx** %91 to i8**
  %96 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %1, i64 0, i32 3
  %97 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %1, i64 0, i32 2, i64 0
  %98 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %1, i64 0, i32 1
  br label %99, !dbg !6858

; <label>:99:                                     ; preds = %407, %69
  %100 = phi i64 [ -1, %69 ], [ %408, %407 ], !dbg !6853
  %101 = phi i64 [ -1, %69 ], [ %409, %407 ], !dbg !6852
  %102 = phi i64 [ -1, %69 ], [ %410, %407 ], !dbg !6851
  %103 = phi %struct.redisDb* [ %20, %69 ], [ %411, %407 ], !dbg !6798
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #4, !dbg !6863
  br label %104, !dbg !6868

; <label>:104:                                    ; preds = %119, %99
  %105 = phi i64 [ 1, %99 ], [ %121, %119 ]
  %106 = phi i8* [ %14, %99 ], [ %120, %119 ]
  %107 = load i64, i64* %24, align 8, !dbg !6869, !tbaa !506
  %108 = icmp ne i64 %107, 0, !dbg !6870
  %109 = icmp ult i64 %107, %105, !dbg !6871
  %110 = and i1 %108, %109, !dbg !6872
  %111 = select i1 %110, i64 %107, i64 %105, !dbg !6872
  %112 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6874, !tbaa !514
  %113 = call i64 %112(%struct._rio* nonnull %0, i8* %106, i64 %111) #9, !dbg !6875
  %114 = icmp eq i64 %113, 0, !dbg !6876
  br i1 %114, label %125, label %115, !dbg !6877

; <label>:115:                                    ; preds = %104
  %116 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6878, !tbaa !520
  %117 = icmp eq void (%struct._rio*, i8*, i64)* %116, null, !dbg !6879
  br i1 %117, label %119, label %118, !dbg !6880

; <label>:118:                                    ; preds = %115
  call void %116(%struct._rio* nonnull %0, i8* %106, i64 %111) #9, !dbg !6881
  br label %119, !dbg !6881

; <label>:119:                                    ; preds = %118, %115
  %120 = getelementptr inbounds i8, i8* %106, i64 %111, !dbg !6882
  %121 = sub i64 %105, %111, !dbg !6883
  %122 = load i64, i64* %26, align 8, !dbg !6884, !tbaa !527
  %123 = add i64 %122, %111, !dbg !6884
  store i64 %123, i64* %26, align 8, !dbg !6884, !tbaa !527
  %124 = icmp eq i64 %121, 0, !dbg !6868
  br i1 %124, label %126, label %104, !dbg !6868

; <label>:125:                                    ; preds = %104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6885
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4, !dbg !6886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6886
  br label %459, !dbg !6888

; <label>:126:                                    ; preds = %119
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6885
  %127 = load i8, i8* %14, align 1, !dbg !6889
  %128 = zext i8 %127 to i32, !dbg !6889
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4, !dbg !6886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6886
  switch i8 %127, label %391 [
    i8 -9, label %335
    i8 -3, label %129
    i8 -4, label %156
    i8 -7, label %181
    i8 -8, label %210
    i8 -1, label %420
    i8 -2, label %218
    i8 -5, label %232
    i8 -6, label %251
  ], !dbg !6888

; <label>:129:                                    ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #4, !dbg !6893
  br label %130, !dbg !6902

; <label>:130:                                    ; preds = %145, %129
  %131 = phi i64 [ 4, %129 ], [ %147, %145 ]
  %132 = phi i8* [ %76, %129 ], [ %146, %145 ]
  %133 = load i64, i64* %24, align 8, !dbg !6903, !tbaa !506
  %134 = icmp ne i64 %133, 0, !dbg !6904
  %135 = icmp ult i64 %133, %131, !dbg !6905
  %136 = and i1 %134, %135, !dbg !6906
  %137 = select i1 %136, i64 %133, i64 %131, !dbg !6906
  %138 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6908, !tbaa !514
  %139 = call i64 %138(%struct._rio* nonnull %0, i8* %132, i64 %137) #9, !dbg !6909
  %140 = icmp eq i64 %139, 0, !dbg !6910
  br i1 %140, label %151, label %141, !dbg !6911

; <label>:141:                                    ; preds = %130
  %142 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6912, !tbaa !520
  %143 = icmp eq void (%struct._rio*, i8*, i64)* %142, null, !dbg !6913
  br i1 %143, label %145, label %144, !dbg !6914

; <label>:144:                                    ; preds = %141
  call void %142(%struct._rio* nonnull %0, i8* %132, i64 %137) #9, !dbg !6915
  br label %145, !dbg !6915

; <label>:145:                                    ; preds = %144, %141
  %146 = getelementptr inbounds i8, i8* %132, i64 %137, !dbg !6916
  %147 = sub i64 %131, %137, !dbg !6917
  %148 = load i64, i64* %26, align 8, !dbg !6918, !tbaa !527
  %149 = add i64 %148, %137, !dbg !6918
  store i64 %149, i64* %26, align 8, !dbg !6918, !tbaa !527
  %150 = icmp eq i64 %147, 0, !dbg !6902
  br i1 %150, label %152, label %130, !dbg !6902

; <label>:151:                                    ; preds = %130
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6919
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 4) #9, !dbg !6920
  unreachable

; <label>:152:                                    ; preds = %145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6919
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6921
  %153 = load i32, i32* %13, align 4, !dbg !6922, !tbaa !191
  %154 = sext i32 %153 to i64, !dbg !6924
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #4, !dbg !6925
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6926
  %155 = mul nsw i64 %154, 1000, !dbg !6927
  br label %407, !dbg !6928

; <label>:156:                                    ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4, !dbg !6933
  br label %157, !dbg !6942

; <label>:157:                                    ; preds = %172, %156
  %158 = phi i64 [ 8, %156 ], [ %174, %172 ]
  %159 = phi i8* [ %77, %156 ], [ %173, %172 ]
  %160 = load i64, i64* %24, align 8, !dbg !6943, !tbaa !506
  %161 = icmp ne i64 %160, 0, !dbg !6944
  %162 = icmp ult i64 %160, %158, !dbg !6945
  %163 = and i1 %161, %162, !dbg !6946
  %164 = select i1 %163, i64 %160, i64 %158, !dbg !6946
  %165 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6948, !tbaa !514
  %166 = call i64 %165(%struct._rio* nonnull %0, i8* %159, i64 %164) #9, !dbg !6949
  %167 = icmp eq i64 %166, 0, !dbg !6950
  br i1 %167, label %178, label %168, !dbg !6951

; <label>:168:                                    ; preds = %157
  %169 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6952, !tbaa !520
  %170 = icmp eq void (%struct._rio*, i8*, i64)* %169, null, !dbg !6953
  br i1 %170, label %172, label %171, !dbg !6954

; <label>:171:                                    ; preds = %168
  call void %169(%struct._rio* nonnull %0, i8* %159, i64 %164) #9, !dbg !6955
  br label %172, !dbg !6955

; <label>:172:                                    ; preds = %171, %168
  %173 = getelementptr inbounds i8, i8* %159, i64 %164, !dbg !6956
  %174 = sub i64 %158, %164, !dbg !6957
  %175 = load i64, i64* %26, align 8, !dbg !6958, !tbaa !527
  %176 = add i64 %175, %164, !dbg !6958
  store i64 %176, i64* %26, align 8, !dbg !6958, !tbaa !527
  %177 = icmp eq i64 %174, 0, !dbg !6942
  br i1 %177, label %179, label %157, !dbg !6942

; <label>:178:                                    ; preds = %157
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6959
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 8) #9, !dbg !6960
  unreachable

; <label>:179:                                    ; preds = %172
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6961
  %180 = load i64, i64* %12, align 8, !dbg !6962, !tbaa !682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4, !dbg !6964
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6965
  br label %407, !dbg !6966

; <label>:181:                                    ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #4, !dbg !6968
  br label %182, !dbg !6974

; <label>:182:                                    ; preds = %197, %181
  %183 = phi i64 [ 1, %181 ], [ %199, %197 ]
  %184 = phi i8* [ %16, %181 ], [ %198, %197 ]
  %185 = load i64, i64* %24, align 8, !dbg !6975, !tbaa !506
  %186 = icmp ne i64 %185, 0, !dbg !6976
  %187 = icmp ult i64 %185, %183, !dbg !6977
  %188 = and i1 %186, %187, !dbg !6978
  %189 = select i1 %188, i64 %185, i64 %183, !dbg !6978
  %190 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6980, !tbaa !514
  %191 = call i64 %190(%struct._rio* nonnull %0, i8* %184, i64 %189) #9, !dbg !6981
  %192 = icmp eq i64 %191, 0, !dbg !6982
  br i1 %192, label %206, label %193, !dbg !6983

; <label>:193:                                    ; preds = %182
  %194 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6984, !tbaa !520
  %195 = icmp eq void (%struct._rio*, i8*, i64)* %194, null, !dbg !6985
  br i1 %195, label %197, label %196, !dbg !6986

; <label>:196:                                    ; preds = %193
  call void %194(%struct._rio* nonnull %0, i8* %184, i64 %189) #9, !dbg !6987
  br label %197, !dbg !6987

; <label>:197:                                    ; preds = %196, %193
  %198 = getelementptr inbounds i8, i8* %184, i64 %189, !dbg !6988
  %199 = sub i64 %183, %189, !dbg !6989
  %200 = load i64, i64* %26, align 8, !dbg !6990, !tbaa !527
  %201 = add i64 %200, %189, !dbg !6990
  store i64 %201, i64* %26, align 8, !dbg !6990, !tbaa !527
  %202 = icmp eq i64 %199, 0, !dbg !6974
  br i1 %202, label %203, label %182, !dbg !6974

; <label>:203:                                    ; preds = %197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6991
  %204 = load i8, i8* %16, align 1, !dbg !6992
  %205 = zext i8 %204 to i64, !dbg !6992
  br label %207, !dbg !6993

; <label>:206:                                    ; preds = %182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6991
  br label %207, !dbg !6993

; <label>:207:                                    ; preds = %203, %206
  %208 = phi i64 [ %101, %206 ], [ %205, %203 ]
  %209 = phi i32 [ 2, %206 ], [ 3, %203 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #4, !dbg !6994
  br label %415

; <label>:210:                                    ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #4, !dbg !6999
  %211 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %11) #9, !dbg !7001
  %212 = icmp eq i32 %211, -1, !dbg !7002
  %213 = load i64, i64* %11, align 8, !dbg !7003
  %214 = select i1 %212, i64 -1, i64 %213, !dbg !7004
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #4, !dbg !7005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7005
  %215 = icmp eq i64 %214, -1, !dbg !7007
  %216 = select i1 %215, i64 %102, i64 %214, !dbg !7008
  %217 = select i1 %215, i32 2, i32 3, !dbg !7008
  br label %415

; <label>:218:                                    ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #4, !dbg !7014
  %219 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %10) #9, !dbg !7016
  %220 = icmp eq i32 %219, -1, !dbg !7017
  %221 = load i64, i64* %10, align 8, !dbg !7018
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #4, !dbg !7019
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7019
  %222 = icmp eq i64 %221, -1, !dbg !7020
  %223 = or i1 %220, %222, !dbg !7020
  br i1 %223, label %459, label %224, !dbg !7021

; <label>:224:                                    ; preds = %218
  %225 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !7022, !tbaa !4742
  %226 = zext i32 %225 to i64, !dbg !7024
  %227 = icmp ult i64 %221, %226, !dbg !7025
  br i1 %227, label %229, label %228, !dbg !7026

; <label>:228:                                    ; preds = %224
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.69, i64 0, i64 0), i32 %225) #9, !dbg !7027
  call void @exit(i32 1) #10, !dbg !7029
  unreachable, !dbg !7029

; <label>:229:                                    ; preds = %224
  %230 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !7030, !tbaa !4746
  %231 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %230, i64 %221, !dbg !7031
  br label %407, !dbg !7032

; <label>:232:                                    ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #4, !dbg !7037
  %233 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %9) #9, !dbg !7039
  %234 = icmp eq i32 %233, -1, !dbg !7040
  %235 = load i64, i64* %9, align 8, !dbg !7041
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #4, !dbg !7042
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7042
  %236 = icmp eq i64 %235, -1, !dbg !7043
  %237 = or i1 %234, %236, !dbg !7043
  br i1 %237, label %459, label %238, !dbg !7044

; <label>:238:                                    ; preds = %232
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #4, !dbg !7049
  %239 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %8) #9, !dbg !7051
  %240 = icmp eq i32 %239, -1, !dbg !7052
  %241 = load i64, i64* %8, align 8, !dbg !7053
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #4, !dbg !7054
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7054
  %242 = icmp eq i64 %241, -1, !dbg !7055
  %243 = or i1 %240, %242, !dbg !7055
  br i1 %243, label %459, label %244, !dbg !7056

; <label>:244:                                    ; preds = %238
  %245 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %103, i64 0, i32 0, !dbg !7057
  %246 = load %struct.dict*, %struct.dict** %245, align 8, !dbg !7057, !tbaa !4750
  %247 = call i32 @dictExpand(%struct.dict* %246, i64 %235) #9, !dbg !7058
  %248 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %103, i64 0, i32 1, !dbg !7059
  %249 = load %struct.dict*, %struct.dict** %248, align 8, !dbg !7059, !tbaa !4798
  %250 = call i32 @dictExpand(%struct.dict* %249, i64 %241) #9, !dbg !7060
  br label %407, !dbg !7061

; <label>:251:                                    ; preds = %126
  %252 = call i8* @rdbGenericLoadStringObject(%struct._rio* nonnull %0, i32 0, i64* null) #9, !dbg !7065
  %253 = bitcast i8* %252 to %struct.redisObject*, !dbg !7065
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7066
  %254 = icmp eq i8* %252, null, !dbg !7068
  br i1 %254, label %459, label %255, !dbg !7069

; <label>:255:                                    ; preds = %251
  %256 = call i8* @rdbGenericLoadStringObject(%struct._rio* nonnull %0, i32 0, i64* null) #9, !dbg !7073
  %257 = bitcast i8* %256 to %struct.redisObject*, !dbg !7073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7074
  %258 = icmp eq i8* %256, null, !dbg !7076
  br i1 %258, label %459, label %259, !dbg !7077

; <label>:259:                                    ; preds = %255
  %260 = getelementptr inbounds i8, i8* %252, i64 8, !dbg !7078
  %261 = bitcast i8* %260 to i8**, !dbg !7078
  %262 = load i8*, i8** %261, align 8, !dbg !7078, !tbaa !2002
  %263 = load i8, i8* %262, align 1, !dbg !7080, !tbaa !540
  %264 = icmp eq i8 %263, 37, !dbg !7081
  br i1 %264, label %265, label %269, !dbg !7082

; <label>:265:                                    ; preds = %259
  %266 = getelementptr inbounds i8, i8* %256, i64 8, !dbg !7083
  %267 = bitcast i8* %266 to i8**, !dbg !7083
  %268 = load i8*, i8** %267, align 8, !dbg !7083, !tbaa !2002
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i64 0, i64 0), i8* %262, i8* %268) #9, !dbg !7085
  br label %334, !dbg !7086

; <label>:269:                                    ; preds = %259
  %270 = call i32 @strcasecmp(i8* %262, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !7087
  %271 = icmp eq i32 %270, 0, !dbg !7087
  br i1 %271, label %272, label %278, !dbg !7089

; <label>:272:                                    ; preds = %269
  br i1 %92, label %334, label %273, !dbg !7090

; <label>:273:                                    ; preds = %272
  %274 = getelementptr inbounds i8, i8* %256, i64 8, !dbg !7092
  %275 = bitcast i8* %274 to i8**, !dbg !7092
  %276 = load i8*, i8** %275, align 8, !dbg !7092, !tbaa !2002
  %277 = call i32 @atoi(i8* %276) #9, !dbg !7094
  store i32 %277, i32* %93, align 8, !dbg !7095, !tbaa !4398
  br label %334, !dbg !7096

; <label>:278:                                    ; preds = %269
  %279 = call i32 @strcasecmp(i8* %262, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !7097
  %280 = icmp eq i32 %279, 0, !dbg !7097
  br i1 %280, label %281, label %313, !dbg !7099

; <label>:281:                                    ; preds = %278
  br i1 %92, label %334, label %282, !dbg !7100

; <label>:282:                                    ; preds = %281
  %283 = getelementptr inbounds i8, i8* %256, i64 8, !dbg !7103
  %284 = bitcast i8* %283 to i8**, !dbg !7103
  %285 = load i8*, i8** %284, align 8, !dbg !7103, !tbaa !2002
  %286 = getelementptr inbounds i8, i8* %285, i64 -1, !dbg !7106
  %287 = load i8, i8* %286, align 1, !dbg !7106, !tbaa !540
  %288 = trunc i8 %287 to i3, !dbg !7108
  switch i3 %288, label %307 [
    i3 -4, label %303
    i3 1, label %289
    i3 2, label %293
    i3 3, label %298
  ], !dbg !7108

; <label>:289:                                    ; preds = %282
  %290 = getelementptr inbounds i8, i8* %285, i64 -3, !dbg !7109
  %291 = load i8, i8* %290, align 1, !dbg !7110, !tbaa !540
  %292 = zext i8 %291 to i64, !dbg !7109
  br label %308, !dbg !7111

; <label>:293:                                    ; preds = %282
  %294 = getelementptr inbounds i8, i8* %285, i64 -5, !dbg !7112
  %295 = bitcast i8* %294 to i16*, !dbg !7113
  %296 = load i16, i16* %295, align 1, !dbg !7113, !tbaa !2029
  %297 = zext i16 %296 to i64, !dbg !7112
  br label %308, !dbg !7114

; <label>:298:                                    ; preds = %282
  %299 = getelementptr inbounds i8, i8* %285, i64 -9, !dbg !7115
  %300 = bitcast i8* %299 to i32*, !dbg !7116
  %301 = load i32, i32* %300, align 1, !dbg !7116, !tbaa !191
  %302 = zext i32 %301 to i64, !dbg !7115
  br label %308, !dbg !7117

; <label>:303:                                    ; preds = %282
  %304 = getelementptr inbounds i8, i8* %285, i64 -17, !dbg !7118
  %305 = bitcast i8* %304 to i64*, !dbg !7119
  %306 = load i64, i64* %305, align 1, !dbg !7119, !tbaa !682
  br label %308, !dbg !7120

; <label>:307:                                    ; preds = %282
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7121
  br label %334, !dbg !7122

; <label>:308:                                    ; preds = %289, %293, %298, %303
  %309 = phi i64 [ %306, %303 ], [ %302, %298 ], [ %297, %293 ], [ %292, %289 ], !dbg !7123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7121
  %310 = icmp eq i64 %309, 40, !dbg !7124
  br i1 %310, label %311, label %334, !dbg !7122

; <label>:311:                                    ; preds = %308
  %312 = call i8* @memcpy(i8* nonnull %97, i8* nonnull %285, i64 41) #9, !dbg !7125
  store i32 1, i32* %98, align 4, !dbg !7127, !tbaa !7128
  br label %334, !dbg !7129

; <label>:313:                                    ; preds = %278
  %314 = call i32 @strcasecmp(i8* %262, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0)) #12, !dbg !7130
  %315 = icmp eq i32 %314, 0, !dbg !7130
  br i1 %315, label %316, label %322, !dbg !7132

; <label>:316:                                    ; preds = %313
  br i1 %92, label %334, label %317, !dbg !7133

; <label>:317:                                    ; preds = %316
  %318 = getelementptr inbounds i8, i8* %256, i64 8, !dbg !7135
  %319 = bitcast i8* %318 to i8**, !dbg !7135
  %320 = load i8*, i8** %319, align 8, !dbg !7135, !tbaa !2002
  %321 = call i64 @strtoll(i8* %320, i8** null, i32 10) #9, !dbg !7137
  store i64 %321, i64* %96, align 8, !dbg !7138, !tbaa !7139
  br label %334, !dbg !7140

; <label>:322:                                    ; preds = %313
  %323 = call i32 @strcasecmp(i8* %262, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0)) #12, !dbg !7141
  %324 = icmp eq i32 %323, 0, !dbg !7141
  br i1 %324, label %325, label %333, !dbg !7143

; <label>:325:                                    ; preds = %322
  %326 = load %struct.lua_State*, %struct.lua_State** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 270), align 8, !dbg !7144, !tbaa !7147
  %327 = call i8* @luaCreateFunction(%struct.client* null, %struct.lua_State* %326, %struct.redisObject* nonnull %257) #9, !dbg !7148
  %328 = icmp eq i8* %327, null, !dbg !7149
  br i1 %328, label %329, label %334, !dbg !7150

; <label>:329:                                    ; preds = %325
  %330 = getelementptr inbounds i8, i8* %256, i64 8, !dbg !7151
  %331 = bitcast i8* %330 to i8**, !dbg !7151
  %332 = load i8*, i8** %331, align 8, !dbg !7151, !tbaa !2002
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 2008, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.71, i64 0, i64 0), i8* %332) #11, !dbg !7151
  unreachable

; <label>:333:                                    ; preds = %322
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i8* %262) #9, !dbg !7153
  br label %334

; <label>:334:                                    ; preds = %307, %316, %281, %272, %273, %317, %325, %333, %308, %311, %265
  call void @decrRefCount(%struct.redisObject* nonnull %253) #9, !dbg !7155
  call void @decrRefCount(%struct.redisObject* nonnull %257) #9, !dbg !7156
  br label %407, !dbg !7157

; <label>:335:                                    ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #4, !dbg !7161
  %336 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %7) #9, !dbg !7163
  %337 = icmp eq i32 %336, -1, !dbg !7164
  %338 = load i64, i64* %7, align 8, !dbg !7165
  %339 = select i1 %337, i64 -1, i64 %338, !dbg !7166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #4, !dbg !7167
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7167
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #4, !dbg !7172
  %340 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %6) #9, !dbg !7174
  %341 = icmp ne i32 %340, -1, !dbg !7175
  %342 = load i64, i64* %6, align 8, !dbg !7176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #4, !dbg !7177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7177
  %343 = trunc i64 %342 to i32, !dbg !7178
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #4, !dbg !7182
  %344 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %5) #9, !dbg !7184
  %345 = icmp eq i32 %344, -1, !dbg !7185
  %346 = load i64, i64* %5, align 8, !dbg !7186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #4, !dbg !7187
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7187
  %347 = trunc i64 %346 to i32, !dbg !7188
  %348 = select i1 %345, i32 -1, i32 %347, !dbg !7188
  %349 = icmp eq i32 %343, 2, !dbg !7190
  %350 = and i1 %341, %349, !dbg !7190
  br i1 %350, label %352, label %351, !dbg !7192

; <label>:351:                                    ; preds = %335
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 2028, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i64 0, i64 0)) #11, !dbg !7193
  unreachable

; <label>:352:                                    ; preds = %335
  %353 = call %struct.RedisModuleType* @moduleTypeLookupModuleByID(i64 %339) #9, !dbg !7194
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %81) #4, !dbg !7196
  call void @moduleTypeNameByID(i8* nonnull %81, i64 %339) #9, !dbg !7198
  %354 = load i32, i32* @rdbCheckMode, align 4, !dbg !7199, !tbaa !191
  %355 = icmp eq i32 %354, 0, !dbg !7199
  %356 = icmp eq %struct.RedisModuleType* %353, null, !dbg !7200
  %357 = and i1 %356, %355, !dbg !7201
  br i1 %357, label %358, label %359, !dbg !7201

; <label>:358:                                    ; preds = %352
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.74, i64 0, i64 0), i8* nonnull %81) #9, !dbg !7202
  call void @exit(i32 1) #10, !dbg !7204
  unreachable, !dbg !7204

; <label>:359:                                    ; preds = %352
  %360 = icmp ne %struct.RedisModuleType* %353, null, !dbg !7205
  %361 = and i1 %360, %355, !dbg !7206
  br i1 %361, label %362, label %388, !dbg !7206

; <label>:362:                                    ; preds = %359
  %363 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %353, i64 0, i32 8, !dbg !7207
  %364 = load i32 (%struct.RedisModuleIO*, i32, i32)*, i32 (%struct.RedisModuleIO*, i32, i32)** %363, align 8, !dbg !7207, !tbaa !7209
  %365 = icmp eq i32 (%struct.RedisModuleIO*, i32, i32)* %364, null, !dbg !7210
  br i1 %365, label %366, label %367, !dbg !7211

; <label>:366:                                    ; preds = %362
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.75, i64 0, i64 0), i8* nonnull %81) #9, !dbg !7212
  call void @exit(i32 1) #10, !dbg !7214
  unreachable, !dbg !7214

; <label>:367:                                    ; preds = %362
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %84) #4, !dbg !7215
  store %struct._rio* %0, %struct._rio** %85, align 8, !dbg !7216, !tbaa !3876
  store %struct.RedisModuleType* %353, %struct.RedisModuleType** %86, align 8, !dbg !7216, !tbaa !3878
  store i64 0, i64* %87, align 8, !dbg !7216, !tbaa !3879
  store i32 0, i32* %88, align 8, !dbg !7216, !tbaa !3880
  store %struct.redisObject* null, %struct.redisObject** %90, align 8, !dbg !7216, !tbaa !3882
  store %struct.RedisModuleCtx* null, %struct.RedisModuleCtx** %91, align 8, !dbg !7216, !tbaa !3883
  store i32 2, i32* %89, align 4, !dbg !7218, !tbaa !3881
  %368 = trunc i64 %339 to i32, !dbg !7219
  %369 = and i32 %368, 1023, !dbg !7219
  %370 = call i32 %364(%struct.RedisModuleIO* nonnull %18, i32 %369, i32 %348) #9, !dbg !7222
  %371 = load i32, i32* %88, align 8, !dbg !7223
  %372 = or i32 %371, %370, !dbg !7224
  %373 = icmp eq i32 %372, 0, !dbg !7224
  br i1 %373, label %375, label %374, !dbg !7224

; <label>:374:                                    ; preds = %367
  call void @moduleTypeNameByID(i8* nonnull %81, i64 %339) #9, !dbg !7225
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.76, i64 0, i64 0), i8* nonnull %81) #9, !dbg !7227
  call void @exit(i32 1) #10, !dbg !7228
  unreachable, !dbg !7228

; <label>:375:                                    ; preds = %367
  %376 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %91, align 8, !dbg !7229, !tbaa !3883
  %377 = icmp eq %struct.RedisModuleCtx* %376, null, !dbg !7231
  br i1 %377, label %380, label %378, !dbg !7232

; <label>:378:                                    ; preds = %375
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %376) #9, !dbg !7233
  %379 = load i8*, i8** %95, align 8, !dbg !7235, !tbaa !3883
  call void @zfree(i8* %379) #9, !dbg !7236
  br label %380, !dbg !7237

; <label>:380:                                    ; preds = %375, %378
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #4, !dbg !7241
  %381 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %4) #9, !dbg !7243
  %382 = icmp ne i32 %381, -1, !dbg !7244
  %383 = load i64, i64* %4, align 8, !dbg !7245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #4, !dbg !7246
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7246
  %384 = icmp eq i64 %383, 0, !dbg !7247
  %385 = and i1 %382, %384, !dbg !7247
  br i1 %385, label %387, label %386, !dbg !7249

; <label>:386:                                    ; preds = %380
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.77, i64 0, i64 0), i8* nonnull %81) #9, !dbg !7250
  call void @exit(i32 1) #10, !dbg !7252
  unreachable, !dbg !7252

; <label>:387:                                    ; preds = %380
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %84) #4, !dbg !7253
  br label %390

; <label>:388:                                    ; preds = %359
  %389 = call %struct.redisObject* @rdbLoadCheckModuleValue(%struct._rio* nonnull %0, i8* nonnull %81) #11, !dbg !7254
  call void @decrRefCount(%struct.redisObject* %389) #9, !dbg !7256
  br label %390

; <label>:390:                                    ; preds = %388, %387
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %81) #4, !dbg !7257
  br label %407

; <label>:391:                                    ; preds = %126
  %392 = call i8* @rdbGenericLoadStringObject(%struct._rio* nonnull %0, i32 0, i64* null) #9, !dbg !7261
  %393 = bitcast i8* %392 to %struct.redisObject*, !dbg !7261
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7262
  %394 = icmp eq i8* %392, null, !dbg !7264
  br i1 %394, label %459, label %395, !dbg !7265

; <label>:395:                                    ; preds = %391
  %396 = call %struct.redisObject* @rdbLoadObject(i32 %128, %struct._rio* nonnull %0, %struct.redisObject* nonnull %393) #11, !dbg !7266
  %397 = icmp eq %struct.redisObject* %396, null, !dbg !7269
  br i1 %397, label %459, label %398, !dbg !7270

; <label>:398:                                    ; preds = %395
  %399 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !7271, !tbaa !6717
  %400 = icmp eq i8* %399, null, !dbg !7273
  %401 = and i1 %83, %400, !dbg !7274
  %402 = icmp ne i64 %100, -1, !dbg !7275
  %403 = and i1 %402, %401, !dbg !7274
  %404 = icmp slt i64 %100, %70, !dbg !7276
  %405 = and i1 %404, %403, !dbg !7274
  br i1 %405, label %406, label %412, !dbg !7274

; <label>:406:                                    ; preds = %398
  call void @decrRefCount(%struct.redisObject* nonnull %393) #9, !dbg !7277
  call void @decrRefCount(%struct.redisObject* nonnull %396) #9, !dbg !7279
  br label %407, !dbg !7280

; <label>:407:                                    ; preds = %406, %414, %334, %244, %390, %229, %179, %152, %415, %415
  %408 = phi i64 [ %100, %415 ], [ %100, %415 ], [ -1, %406 ], [ -1, %414 ], [ %100, %334 ], [ %100, %244 ], [ %100, %390 ], [ %100, %229 ], [ %180, %179 ], [ %155, %152 ]
  %409 = phi i64 [ %416, %415 ], [ %416, %415 ], [ -1, %406 ], [ -1, %414 ], [ %101, %334 ], [ %101, %244 ], [ %101, %390 ], [ %101, %229 ], [ %101, %179 ], [ %101, %152 ]
  %410 = phi i64 [ %417, %415 ], [ %417, %415 ], [ -1, %406 ], [ -1, %414 ], [ %102, %334 ], [ %102, %244 ], [ %102, %390 ], [ %102, %229 ], [ %102, %179 ], [ %102, %152 ]
  %411 = phi %struct.redisDb* [ %103, %415 ], [ %103, %415 ], [ %103, %406 ], [ %103, %414 ], [ %103, %334 ], [ %103, %244 ], [ %103, %390 ], [ %231, %229 ], [ %103, %179 ], [ %103, %152 ]
  br label %99, !dbg !6798, !llvm.loop !7281

; <label>:412:                                    ; preds = %398
  call void @dbAdd(%struct.redisDb* %103, %struct.redisObject* nonnull %393, %struct.redisObject* nonnull %396) #9, !dbg !7283
  br i1 %402, label %413, label %414, !dbg !7285

; <label>:413:                                    ; preds = %412
  call void @setExpire(%struct.client* null, %struct.redisDb* %103, %struct.redisObject* nonnull %393, i64 %100) #9, !dbg !7286
  br label %414, !dbg !7286

; <label>:414:                                    ; preds = %413, %412
  call void @objectSetLRUOrLFU(%struct.redisObject* nonnull %396, i64 %101, i64 %102, i64 %72) #9, !dbg !7288
  call void @decrRefCount(%struct.redisObject* nonnull %393) #9, !dbg !7289
  br label %407

; <label>:415:                                    ; preds = %210, %207
  %416 = phi i64 [ %208, %207 ], [ %101, %210 ], !dbg !7290
  %417 = phi i64 [ %102, %207 ], [ %216, %210 ], !dbg !7290
  %418 = phi i32 [ %209, %207 ], [ %217, %210 ]
  %419 = trunc i32 %418 to i2
  switch i2 %419, label %460 [
    i2 0, label %407
    i2 -1, label %407
    i2 -2, label %459
  ]

; <label>:420:                                    ; preds = %126
  %421 = icmp sgt i32 %64, 4, !dbg !7291
  br i1 %421, label %422, label %460, !dbg !7292

; <label>:422:                                    ; preds = %420
  %423 = bitcast i64* %19 to i8*, !dbg !7293
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423) #4, !dbg !7293
  %424 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 5, !dbg !7294
  %425 = load i64, i64* %424, align 8, !dbg !7294, !tbaa !4955
  br label %426, !dbg !7301

; <label>:426:                                    ; preds = %441, %422
  %427 = phi i64 [ 8, %422 ], [ %443, %441 ]
  %428 = phi i8* [ %423, %422 ], [ %442, %441 ]
  %429 = load i64, i64* %24, align 8, !dbg !7302, !tbaa !506
  %430 = icmp ne i64 %429, 0, !dbg !7303
  %431 = icmp ult i64 %429, %427, !dbg !7304
  %432 = and i1 %430, %431, !dbg !7305
  %433 = select i1 %432, i64 %429, i64 %427, !dbg !7305
  %434 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !7307, !tbaa !514
  %435 = call i64 %434(%struct._rio* nonnull %0, i8* %428, i64 %433) #9, !dbg !7308
  %436 = icmp eq i64 %435, 0, !dbg !7309
  br i1 %436, label %458, label %437, !dbg !7310

; <label>:437:                                    ; preds = %426
  %438 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !7311, !tbaa !520
  %439 = icmp eq void (%struct._rio*, i8*, i64)* %438, null, !dbg !7312
  br i1 %439, label %441, label %440, !dbg !7313

; <label>:440:                                    ; preds = %437
  call void %438(%struct._rio* nonnull %0, i8* %428, i64 %433) #9, !dbg !7314
  br label %441, !dbg !7314

; <label>:441:                                    ; preds = %440, %437
  %442 = getelementptr inbounds i8, i8* %428, i64 %433, !dbg !7315
  %443 = sub i64 %427, %433, !dbg !7316
  %444 = load i64, i64* %26, align 8, !dbg !7317, !tbaa !527
  %445 = add i64 %444, %433, !dbg !7317
  store i64 %445, i64* %26, align 8, !dbg !7317, !tbaa !527
  %446 = icmp eq i64 %443, 0, !dbg !7301
  br i1 %446, label %447, label %426, !dbg !7301

; <label>:447:                                    ; preds = %441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7318
  %448 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 159), align 4, !dbg !7319, !tbaa !4694
  %449 = icmp eq i32 %448, 0, !dbg !7321
  br i1 %449, label %457, label %450, !dbg !7322

; <label>:450:                                    ; preds = %447
  %451 = load i64, i64* %19, align 8, !dbg !7323, !tbaa !682
  %452 = icmp eq i64 %451, 0, !dbg !7327
  br i1 %452, label %453, label %454, !dbg !7328

; <label>:453:                                    ; preds = %450
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.78, i64 0, i64 0)) #9, !dbg !7329
  br label %457, !dbg !7331

; <label>:454:                                    ; preds = %450
  %455 = icmp eq i64 %451, %425, !dbg !7332
  br i1 %455, label %457, label %456, !dbg !7334

; <label>:456:                                    ; preds = %454
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.79, i64 0, i64 0)) #9, !dbg !7335
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 2116, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i64 0, i64 0)) #11, !dbg !7337
  unreachable

; <label>:457:                                    ; preds = %454, %447, %453
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423) #4, !dbg !7338
  br label %460

; <label>:458:                                    ; preds = %426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423) #4, !dbg !7338
  br label %459

; <label>:459:                                    ; preds = %415, %395, %391, %255, %251, %238, %232, %218, %125, %458, %33
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.81, i64 0, i64 0)) #9, !dbg !7339
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 2124, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.82, i64 0, i64 0)) #11, !dbg !7340
  unreachable

; <label>:460:                                    ; preds = %415, %457, %420, %67, %60
  %461 = phi i32 [ -1, %60 ], [ -1, %67 ], [ 0, %420 ], [ 0, %457 ], [ undef, %415 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %21) #4, !dbg !7341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7341
  ret i32 %461, !dbg !7341
}

; Function Attrs: noredzone
declare dso_local i32 @atoi(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @mstime() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @LRU_CLOCK() local_unnamed_addr #3

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) local_unnamed_addr #8

; Function Attrs: noredzone
declare dso_local i8* @luaCreateFunction(%struct.client*, %struct.lua_State*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @dbAdd(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @setExpire(%struct.client*, %struct.redisDb*, %struct.redisObject*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @objectSetLRUOrLFU(%struct.redisObject*, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoad(i8*, %struct.rdbSaveInfo*) local_unnamed_addr #6 !dbg !7342 {
  %3 = alloca %struct.stat, align 8
  %4 = alloca %struct._rio, align 8
  %5 = bitcast %struct._rio* %4 to i8*, !dbg !7351
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %5) #4, !dbg !7351
  %6 = tail call %struct.__sFILE* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i64 0, i64 0)) #9, !dbg !7352
  %7 = icmp eq %struct.__sFILE* %6, null, !dbg !7355
  br i1 %7, label %19, label %8, !dbg !7356

; <label>:8:                                      ; preds = %2
  %9 = bitcast %struct.stat* %3 to i8*, !dbg !7359
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #4, !dbg !7359
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !7360, !tbaa !6649
  %10 = tail call i64 @time(i64* null) #9, !dbg !7361
  store i64 %10, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 54), align 8, !dbg !7362, !tbaa !6652
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !7363, !tbaa !6654
  %11 = tail call i32 @fileno(%struct.__sFILE* nonnull %6) #9, !dbg !7364
  %12 = call i32 @fstat(i32 %11, %struct.stat* nonnull %3) #9, !dbg !7366
  %13 = icmp eq i32 %12, -1, !dbg !7367
  %14 = getelementptr inbounds %struct.stat, %struct.stat* %3, i64 0, i32 7, !dbg !7368
  %15 = load i64, i64* %14, align 8, !dbg !7368
  %16 = select i1 %13, i64 0, i64 %15, !dbg !7369
  store i64 %16, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 8, !dbg !7370, !tbaa !6665
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #4, !dbg !7371
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7371
  call void @rioInitWithFile(%struct._rio* nonnull %4, %struct.__sFILE* nonnull %6) #9, !dbg !7373
  %17 = call i32 @rdbLoadRio(%struct._rio* nonnull %4, %struct.rdbSaveInfo* %1, i32 0) #11, !dbg !7374
  %18 = call i32 @fclose(%struct.__sFILE* nonnull %6) #9, !dbg !7376
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !7377, !tbaa !6649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7379
  br label %19, !dbg !7380

; <label>:19:                                     ; preds = %2, %8
  %20 = phi i32 [ %17, %8 ], [ -1, %2 ], !dbg !7381
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %5) #4, !dbg !7382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7382
  ret i32 %20, !dbg !7382
}

; Function Attrs: noredzone nounwind
define dso_local void @backgroundSaveDoneHandlerDisk(i32, i32) local_unnamed_addr #6 !dbg !7383 {
  %3 = alloca [256 x i8], align 16
  %4 = or i32 %1, %0, !dbg !7397
  %5 = icmp eq i32 %4, 0, !dbg !7397
  br i1 %5, label %6, label %11, !dbg !7397

; <label>:6:                                      ; preds = %2
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.84, i64 0, i64 0)) #9, !dbg !7398
  %7 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !7400, !tbaa !5202
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 153), align 8, !dbg !7401, !tbaa !5240
  %9 = sub nsw i64 %7, %8, !dbg !7402
  store i64 %9, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !7403, !tbaa !5202
  %10 = tail call i64 @time(i64* null) #9, !dbg !7404
  store i64 %10, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 160), align 8, !dbg !7405, !tbaa !5205
  br label %39, !dbg !7406

; <label>:11:                                     ; preds = %2
  %12 = icmp eq i32 %1, 0, !dbg !7407
  %13 = icmp ne i32 %0, 0, !dbg !7408
  %14 = and i1 %13, %12, !dbg !7409
  br i1 %14, label %15, label %16, !dbg !7409

; <label>:15:                                     ; preds = %11
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0)) #9, !dbg !7410
  br label %39, !dbg !7412

; <label>:16:                                     ; preds = %11
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.86, i64 0, i64 0), i32 %1) #9, !dbg !7413
  %17 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !7414, !tbaa !5289
  %18 = icmp eq i64 %17, 0, !dbg !7414
  br i1 %18, label %21, label %19, !dbg !7416

; <label>:19:                                     ; preds = %16
  %20 = tail call i64 @mstime() #9, !dbg !7417
  br label %21, !dbg !7417

; <label>:21:                                     ; preds = %16, %19
  %22 = phi i64 [ %20, %19 ], [ 0, %16 ], !dbg !7417
  %23 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7420, !tbaa !5306
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0, !dbg !7422
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %24) #4, !dbg !7422
  %25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %24, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i32 %23) #9, !dbg !7423
  %26 = call i32 @unlink(i8* nonnull %24) #9, !dbg !7424
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %24) #4, !dbg !7425
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7425
  %27 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !7426, !tbaa !5289
  %28 = icmp eq i64 %27, 0, !dbg !7426
  br i1 %28, label %37, label %29, !dbg !7428

; <label>:29:                                     ; preds = %21
  %30 = call i64 @mstime() #9, !dbg !7429
  %31 = sub nsw i64 %30, %22, !dbg !7429
  %32 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !7431, !tbaa !5289
  %33 = icmp eq i64 %32, 0, !dbg !7431
  %34 = icmp slt i64 %31, %32, !dbg !7431
  %35 = or i1 %33, %34, !dbg !7431
  br i1 %35, label %37, label %36, !dbg !7431

; <label>:36:                                     ; preds = %29
  call void @latencyAddSample(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i64 0, i64 0), i64 %31) #9, !dbg !7431
  br label %37, !dbg !7431

; <label>:37:                                     ; preds = %21, %29, %36
  %38 = icmp eq i32 %1, 10, !dbg !7433
  br i1 %38, label %41, label %39, !dbg !7435

; <label>:39:                                     ; preds = %37, %6, %15
  %40 = phi i32 [ -1, %15 ], [ 0, %6 ], [ -1, %37 ]
  store i32 %40, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !7436, !tbaa !5207
  br label %41, !dbg !7437

; <label>:41:                                     ; preds = %39, %37
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7437, !tbaa !5306
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !7438, !tbaa !5308
  %42 = call i64 @time(i64* null) #9, !dbg !7439
  %43 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !7440, !tbaa !5304
  %44 = sub nsw i64 %42, %43, !dbg !7441
  store i64 %44, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 162), align 8, !dbg !7442, !tbaa !7443
  store i64 -1, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !7444, !tbaa !5304
  %45 = icmp ne i32 %4, 0, !dbg !7445
  %46 = sext i1 %45 to i32, !dbg !7446
  call void @updateSlavesWaitingBgsave(i32 %46, i32 1) #9, !dbg !7447
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7448
  ret void, !dbg !7448
}

; Function Attrs: noredzone
declare dso_local void @updateSlavesWaitingBgsave(i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @backgroundSaveDoneHandlerSocket(i32, i32) local_unnamed_addr #6 !dbg !7449 {
  %3 = alloca %struct.listIter, align 8
  %4 = or i32 %1, %0, !dbg !7584
  %5 = icmp eq i32 %4, 0, !dbg !7584
  br i1 %5, label %6, label %7, !dbg !7584

; <label>:6:                                      ; preds = %2
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.88, i64 0, i64 0)) #9, !dbg !7586
  br label %13, !dbg !7588

; <label>:7:                                      ; preds = %2
  %8 = icmp eq i32 %1, 0, !dbg !7589
  %9 = icmp ne i32 %0, 0, !dbg !7590
  %10 = and i1 %9, %8, !dbg !7592
  br i1 %10, label %11, label %12, !dbg !7592

; <label>:11:                                     ; preds = %7
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.89, i64 0, i64 0)) #9, !dbg !7593
  br label %13, !dbg !7595

; <label>:12:                                     ; preds = %7
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.90, i64 0, i64 0), i32 %1) #9, !dbg !7596
  br label %13

; <label>:13:                                     ; preds = %11, %12, %6
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7598, !tbaa !5306
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !7599, !tbaa !5308
  store i64 -1, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !7600, !tbaa !5304
  %14 = tail call i8* @zmalloc(i64 8) #9, !dbg !7601
  %15 = bitcast i8* %14 to i64*, !dbg !7601
  store i64 0, i64* %15, align 8, !dbg !7603, !tbaa !682
  br i1 %5, label %16, label %35, !dbg !7604

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 169), align 4, !dbg !7606, !tbaa !7608
  %18 = tail call i64 @read(i32 %17, i8* %14, i64 8) #9, !dbg !7609
  %19 = icmp eq i64 %18, 8, !dbg !7610
  br i1 %19, label %20, label %35, !dbg !7611

; <label>:20:                                     ; preds = %16
  %21 = load i64, i64* %15, align 8, !dbg !7612, !tbaa !682
  %22 = trunc i64 %21 to i32, !dbg !7612
  %23 = shl i32 %22, 4, !dbg !7612
  %24 = sext i32 %23 to i64, !dbg !7614
  %25 = or i64 %24, 8, !dbg !7615
  %26 = tail call i8* @zrealloc(i8* %14, i64 %25) #9, !dbg !7616
  %27 = bitcast i8* %26 to i64*, !dbg !7616
  %28 = icmp eq i32 %23, 0, !dbg !7617
  br i1 %28, label %35, label %29, !dbg !7619

; <label>:29:                                     ; preds = %20
  %30 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 169), align 4, !dbg !7620, !tbaa !7608
  %31 = getelementptr inbounds i8, i8* %26, i64 8, !dbg !7621
  %32 = tail call i64 @read(i32 %30, i8* nonnull %31, i64 %24) #9, !dbg !7622
  %33 = icmp eq i64 %32, %24, !dbg !7623
  br i1 %33, label %35, label %34, !dbg !7624

; <label>:34:                                     ; preds = %29
  store i64 0, i64* %27, align 8, !dbg !7625, !tbaa !682
  br label %35, !dbg !7627

; <label>:35:                                     ; preds = %16, %34, %20, %29, %13
  %36 = phi i8* [ %14, %13 ], [ %26, %34 ], [ %26, %29 ], [ %26, %20 ], [ %14, %16 ], !dbg !7628
  %37 = phi i64* [ %15, %13 ], [ %27, %34 ], [ %27, %29 ], [ %27, %20 ], [ %15, %16 ], !dbg !7628
  %38 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 169), align 4, !dbg !7629, !tbaa !7608
  %39 = tail call i32 @close(i32 %38) #9, !dbg !7630
  %40 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 168), align 8, !dbg !7631, !tbaa !7632
  %41 = tail call i32 @close(i32 %40) #9, !dbg !7633
  %42 = bitcast %struct.listIter* %3 to i8*, !dbg !7634
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #4, !dbg !7634
  %43 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7635, !tbaa !7636
  call void @listRewind(%struct.list* %43, %struct.listIter* nonnull %3) #9, !dbg !7638
  %44 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #9, !dbg !7639
  %45 = icmp eq %struct.listNode* %44, null, !dbg !7641
  br i1 %45, label %97, label %46, !dbg !7641

; <label>:46:                                     ; preds = %35, %94
  %47 = phi %struct.listNode* [ %95, %94 ], [ %44, %35 ]
  %48 = getelementptr inbounds %struct.listNode, %struct.listNode* %47, i64 0, i32 2, !dbg !7642
  %49 = bitcast i8** %48 to %struct.client**, !dbg !7642
  %50 = load %struct.client*, %struct.client** %49, align 8, !dbg !7642, !tbaa !7643
  %51 = getelementptr inbounds %struct.client, %struct.client* %50, i64 0, i32 23, !dbg !7646
  %52 = load i32, i32* %51, align 8, !dbg !7646, !tbaa !7647
  %53 = icmp eq i32 %52, 7, !dbg !7651
  br i1 %53, label %54, label %94, !dbg !7652

; <label>:54:                                     ; preds = %46
  %55 = load i64, i64* %37, align 8, !dbg !7654, !tbaa !682
  %56 = icmp eq i64 %55, 0, !dbg !7657
  br i1 %56, label %75, label %57, !dbg !7658

; <label>:57:                                     ; preds = %54
  %58 = getelementptr inbounds %struct.client, %struct.client* %50, i64 0, i32 0
  %59 = load i64, i64* %58, align 8, !tbaa !7659
  br label %60, !dbg !7658

; <label>:60:                                     ; preds = %57, %72
  %61 = phi i64 [ 0, %57 ], [ %73, %72 ]
  %62 = shl i64 %61, 1, !dbg !7660
  %63 = or i64 %62, 1, !dbg !7663
  %64 = getelementptr inbounds i64, i64* %37, i64 %63, !dbg !7664
  %65 = load i64, i64* %64, align 8, !dbg !7664, !tbaa !682
  %66 = icmp eq i64 %59, %65, !dbg !7665
  br i1 %66, label %67, label %72, !dbg !7666

; <label>:67:                                     ; preds = %60
  %68 = add i64 %62, 2, !dbg !7667
  %69 = getelementptr inbounds i64, i64* %37, i64 %68, !dbg !7669
  %70 = load i64, i64* %69, align 8, !dbg !7669, !tbaa !682
  %71 = trunc i64 %70 to i32, !dbg !7669
  br label %75, !dbg !7671

; <label>:72:                                     ; preds = %60
  %73 = add nuw i64 %61, 1, !dbg !7672
  %74 = icmp ult i64 %73, %55, !dbg !7657
  br i1 %74, label %60, label %75, !dbg !7658, !llvm.loop !7673

; <label>:75:                                     ; preds = %72, %54, %67
  %76 = phi i64 [ %61, %67 ], [ 0, %54 ], [ %73, %72 ]
  %77 = phi i32 [ %71, %67 ], [ 0, %54 ], [ 0, %72 ], !dbg !7675
  %78 = icmp eq i64 %76, %55, !dbg !7676
  %79 = icmp ne i32 %77, 0, !dbg !7678
  %80 = or i1 %78, %79, !dbg !7679
  %81 = call i8* @replicationGetSlaveName(%struct.client* %50) #9, !dbg !7680
  br i1 %80, label %82, label %88, !dbg !7679

; <label>:82:                                     ; preds = %75
  %83 = icmp eq i32 %77, 0, !dbg !7682
  br i1 %83, label %86, label %84, !dbg !7684

; <label>:84:                                     ; preds = %82
  %85 = call i8* @strerror(i32 %77) #9, !dbg !7685
  br label %86, !dbg !7684

; <label>:86:                                     ; preds = %82, %84
  %87 = phi i8* [ %85, %84 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.92, i64 0, i64 0), %82 ], !dbg !7684
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.91, i64 0, i64 0), i8* %81, i8* %87) #9, !dbg !7686
  call void @freeClient(%struct.client* %50) #9, !dbg !7687
  br label %94, !dbg !7688

; <label>:88:                                     ; preds = %75
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.93, i64 0, i64 0), i8* %81) #9, !dbg !7689
  %89 = getelementptr inbounds %struct.client, %struct.client* %50, i64 0, i32 1, !dbg !7690
  %90 = load i32, i32* %89, align 8, !dbg !7690, !tbaa !7691
  %91 = call i32 @anetNonBlock(i8* null, i32 %90) #9, !dbg !7692
  %92 = load i32, i32* %89, align 8, !dbg !7693, !tbaa !7691
  %93 = call i32 @anetSendTimeout(i8* null, i32 %92, i64 0) #9, !dbg !7694
  br label %94

; <label>:94:                                     ; preds = %86, %88, %46
  %95 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #9, !dbg !7639
  %96 = icmp eq %struct.listNode* %95, null, !dbg !7641
  br i1 %96, label %97, label %46, !dbg !7641, !llvm.loop !7695

; <label>:97:                                     ; preds = %94, %35
  call void @zfree(i8* %36) #9, !dbg !7697
  %98 = icmp ne i32 %4, 0, !dbg !7698
  %99 = sext i1 %98 to i32, !dbg !7699
  call void @updateSlavesWaitingBgsave(i32 %99, i32 2) #9, !dbg !7700
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #4, !dbg !7701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7701
  ret void, !dbg !7701
}

; Function Attrs: noredzone
declare dso_local i64 @read(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zrealloc(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @close(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @listRewind(%struct.list*, %struct.listIter*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.listNode* @listNext(%struct.listIter*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @replicationGetSlaveName(%struct.client*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @freeClient(%struct.client*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetNonBlock(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetSendTimeout(i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @backgroundSaveDoneHandler(i32, i32) local_unnamed_addr #6 !dbg !7702 {
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !7708, !tbaa !5308
  switch i32 %3, label %6 [
    i32 1, label %4
    i32 2, label %5
  ], !dbg !7709

; <label>:4:                                      ; preds = %2
  tail call void @backgroundSaveDoneHandlerDisk(i32 %0, i32 %1) #11, !dbg !7710
  br label %7, !dbg !7712

; <label>:5:                                      ; preds = %2
  tail call void @backgroundSaveDoneHandlerSocket(i32 %0, i32 %1) #11, !dbg !7713
  br label %7, !dbg !7714

; <label>:6:                                      ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 2289, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0)) #9, !dbg !7715
  tail call void @_exit(i32 1) #10, !dbg !7715
  unreachable, !dbg !7715

; <label>:7:                                      ; preds = %5, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7716
  ret void, !dbg !7716
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveToSlavesSockets(%struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !7717 {
  %2 = alloca %struct.listIter, align 8
  %3 = alloca [2 x i32], align 4
  %4 = alloca %struct._rio, align 8
  %5 = bitcast %struct.listIter* %2 to i8*, !dbg !7752
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #4, !dbg !7752
  %6 = bitcast [2 x i32]* %3 to i8*, !dbg !7753
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4, !dbg !7753
  %7 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !7755, !tbaa !5235
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7757
  %9 = and i32 %8, %7, !dbg !7758
  %10 = icmp eq i32 %9, -1, !dbg !7758
  br i1 %10, label %11, label %240, !dbg !7758

; <label>:11:                                     ; preds = %1
  %12 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0, !dbg !7759
  %13 = call i32 @pipe(i32* nonnull %12) #9, !dbg !7761
  %14 = icmp eq i32 %13, -1, !dbg !7762
  br i1 %14, label %240, label %15, !dbg !7763

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* %12, align 4, !dbg !7764, !tbaa !191
  store i32 %16, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 169), align 4, !dbg !7765, !tbaa !7608
  %17 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 1, !dbg !7766
  %18 = load i32, i32* %17, align 4, !dbg !7766, !tbaa !191
  store i32 %18, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 168), align 8, !dbg !7767, !tbaa !7632
  %19 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7768, !tbaa !7636
  %20 = getelementptr inbounds %struct.list, %struct.list* %19, i64 0, i32 5, !dbg !7768
  %21 = load i64, i64* %20, align 8, !dbg !7768, !tbaa !7769
  %22 = shl i64 %21, 2, !dbg !7771
  %23 = call i8* @zmalloc(i64 %22) #9, !dbg !7772
  %24 = bitcast i8* %23 to i32*, !dbg !7772
  %25 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7774, !tbaa !7636
  %26 = getelementptr inbounds %struct.list, %struct.list* %25, i64 0, i32 5, !dbg !7774
  %27 = load i64, i64* %26, align 8, !dbg !7774, !tbaa !7769
  %28 = shl i64 %27, 3, !dbg !7775
  %29 = call i8* @zmalloc(i64 %28) #9, !dbg !7776
  %30 = bitcast i8* %29 to i64*, !dbg !7776
  %31 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7779, !tbaa !7636
  call void @listRewind(%struct.list* %31, %struct.listIter* nonnull %2) #9, !dbg !7781
  %32 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7782
  %33 = icmp eq %struct.listNode* %32, null, !dbg !7784
  br i1 %33, label %65, label %34, !dbg !7784

; <label>:34:                                     ; preds = %15, %61
  %35 = phi %struct.listNode* [ %63, %61 ], [ %32, %15 ]
  %36 = phi i32 [ %62, %61 ], [ 0, %15 ]
  %37 = getelementptr inbounds %struct.listNode, %struct.listNode* %35, i64 0, i32 2, !dbg !7785
  %38 = bitcast i8** %37 to %struct.client**, !dbg !7785
  %39 = load %struct.client*, %struct.client** %38, align 8, !dbg !7785, !tbaa !7643
  %40 = getelementptr inbounds %struct.client, %struct.client* %39, i64 0, i32 23, !dbg !7787
  %41 = load i32, i32* %40, align 8, !dbg !7787, !tbaa !7647
  %42 = icmp eq i32 %41, 6, !dbg !7789
  br i1 %42, label %43, label %61, !dbg !7790

; <label>:43:                                     ; preds = %34
  %44 = getelementptr inbounds %struct.client, %struct.client* %39, i64 0, i32 0, !dbg !7791
  %45 = load i64, i64* %44, align 8, !dbg !7791, !tbaa !7659
  %46 = sext i32 %36 to i64, !dbg !7793
  %47 = getelementptr inbounds i64, i64* %30, i64 %46, !dbg !7793
  store i64 %45, i64* %47, align 8, !dbg !7794, !tbaa !682
  %48 = getelementptr inbounds %struct.client, %struct.client* %39, i64 0, i32 1, !dbg !7795
  %49 = load i32, i32* %48, align 8, !dbg !7795, !tbaa !7691
  %50 = add nsw i32 %36, 1, !dbg !7796
  %51 = getelementptr inbounds i32, i32* %24, i64 %46, !dbg !7797
  store i32 %49, i32* %51, align 4, !dbg !7798, !tbaa !191
  %52 = call i64 @getPsyncInitialOffset() #9, !dbg !7799
  %53 = call i32 @replicationSetupSlaveForFullResync(%struct.client* %39, i64 %52) #9, !dbg !7800
  %54 = load i32, i32* %48, align 8, !dbg !7801, !tbaa !7691
  %55 = call i32 @anetBlock(i8* null, i32 %54) #9, !dbg !7802
  %56 = load i32, i32* %48, align 8, !dbg !7803, !tbaa !7691
  %57 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 198), align 4, !dbg !7804, !tbaa !7805
  %58 = mul nsw i32 %57, 1000, !dbg !7806
  %59 = sext i32 %58 to i64, !dbg !7807
  %60 = call i32 @anetSendTimeout(i8* null, i32 %56, i64 %59) #9, !dbg !7808
  br label %61, !dbg !7809

; <label>:61:                                     ; preds = %43, %34
  %62 = phi i32 [ %50, %43 ], [ %36, %34 ], !dbg !7810
  %63 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7782
  %64 = icmp eq %struct.listNode* %63, null, !dbg !7784
  br i1 %64, label %65, label %34, !dbg !7784, !llvm.loop !7811

; <label>:65:                                     ; preds = %61, %15
  %66 = phi i32 [ 0, %15 ], [ %62, %61 ], !dbg !7813
  call void @openChildInfoPipe() #9, !dbg !7814
  %67 = call i64 @ustime() #9, !dbg !7815
  %68 = call i32 @fork() #9, !dbg !7817
  %69 = icmp eq i32 %68, 0, !dbg !7819
  br i1 %69, label %70, label %182, !dbg !7820

; <label>:70:                                     ; preds = %65
  %71 = bitcast %struct._rio* %4 to i8*, !dbg !7821
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %71) #4, !dbg !7821
  call void @rioInitWithFdset(%struct._rio* nonnull %4, i32* %24, i32 %66) #9, !dbg !7823
  call void @zfree(i8* %23) #9, !dbg !7824
  call void @closeListeningSockets(i32 0) #9, !dbg !7825
  call void @redisSetProcTitle(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.95, i64 0, i64 0)) #9, !dbg !7826
  %72 = call i32 @rdbSaveRioWithEOFMark(%struct._rio* nonnull %4, i32* null, %struct.rdbSaveInfo* %0) #11, !dbg !7827
  %73 = icmp eq i32 %72, 0, !dbg !7829
  br i1 %73, label %74, label %178, !dbg !7831

; <label>:74:                                     ; preds = %70
  %75 = getelementptr inbounds %struct._rio, %struct._rio* %4, i64 0, i32 3, !dbg !7837
  %76 = load i32 (%struct._rio*)*, i32 (%struct._rio*)** %75, align 8, !dbg !7837, !tbaa !7838
  %77 = call i32 %76(%struct._rio* nonnull %4) #9, !dbg !7839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7840
  %78 = icmp eq i32 %77, 0, !dbg !7841
  br i1 %78, label %178, label %79

; <label>:79:                                     ; preds = %74
  %80 = call i64 @zmalloc_get_private_dirty(i64 -1) #9, !dbg !7842
  %81 = icmp eq i64 %80, 0, !dbg !7844
  br i1 %81, label %84, label %82, !dbg !7846

; <label>:82:                                     ; preds = %79
  %83 = lshr i64 %80, 20, !dbg !7847
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i64 %83) #9, !dbg !7849
  br label %84, !dbg !7850

; <label>:84:                                     ; preds = %79, %82
  store i64 %80, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 171, i32 1), align 8, !dbg !7851, !tbaa !5267
  call void @sendChildInfo(i32 0) #9, !dbg !7852
  %85 = shl nsw i32 %66, 1, !dbg !7853
  %86 = or i32 %85, 1, !dbg !7854
  %87 = sext i32 %86 to i64, !dbg !7855
  %88 = shl nsw i64 %87, 3, !dbg !7856
  %89 = call i8* @zmalloc(i64 %88) #9, !dbg !7857
  %90 = bitcast i8* %89 to i64*, !dbg !7859
  %91 = sext i32 %66 to i64, !dbg !7861
  store i64 %91, i64* %90, align 8, !dbg !7862, !tbaa !682
  %92 = icmp sgt i32 %66, 0, !dbg !7864
  br i1 %92, label %93, label %166, !dbg !7867

; <label>:93:                                     ; preds = %84
  %94 = getelementptr inbounds i8, i8* %89, i64 8, !dbg !7868
  %95 = bitcast i8* %94 to i64*, !dbg !7868
  %96 = getelementptr inbounds %struct._rio, %struct._rio* %4, i64 0, i32 8, i32 0, i32 1
  %97 = zext i32 %66 to i64
  %98 = add nsw i64 %97, -1, !dbg !7867
  %99 = and i64 %97, 3, !dbg !7867
  %100 = icmp ult i64 %98, 3, !dbg !7867
  br i1 %100, label %145, label %101, !dbg !7867

; <label>:101:                                    ; preds = %93
  %102 = sub nsw i64 %97, %99, !dbg !7867
  br label %103, !dbg !7867

; <label>:103:                                    ; preds = %103, %101
  %104 = phi i64 [ 0, %101 ], [ %142, %103 ]
  %105 = phi i64* [ %95, %101 ], [ %141, %103 ]
  %106 = phi i64 [ %102, %101 ], [ %143, %103 ]
  %107 = getelementptr inbounds i64, i64* %30, i64 %104, !dbg !7870
  %108 = load i64, i64* %107, align 8, !dbg !7870, !tbaa !682
  %109 = getelementptr inbounds i64, i64* %105, i64 1, !dbg !7872
  store i64 %108, i64* %105, align 8, !dbg !7873, !tbaa !682
  %110 = load i32*, i32** %96, align 8, !dbg !7874, !tbaa !540
  %111 = getelementptr inbounds i32, i32* %110, i64 %104, !dbg !7875
  %112 = load i32, i32* %111, align 4, !dbg !7875, !tbaa !191
  %113 = sext i32 %112 to i64, !dbg !7875
  %114 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !7876
  store i64 %113, i64* %109, align 8, !dbg !7877, !tbaa !682
  %115 = or i64 %104, 1, !dbg !7878
  %116 = getelementptr inbounds i64, i64* %30, i64 %115, !dbg !7870
  %117 = load i64, i64* %116, align 8, !dbg !7870, !tbaa !682
  %118 = getelementptr inbounds i64, i64* %105, i64 3, !dbg !7872
  store i64 %117, i64* %114, align 8, !dbg !7873, !tbaa !682
  %119 = load i32*, i32** %96, align 8, !dbg !7874, !tbaa !540
  %120 = getelementptr inbounds i32, i32* %119, i64 %115, !dbg !7875
  %121 = load i32, i32* %120, align 4, !dbg !7875, !tbaa !191
  %122 = sext i32 %121 to i64, !dbg !7875
  %123 = getelementptr inbounds i64, i64* %105, i64 4, !dbg !7876
  store i64 %122, i64* %118, align 8, !dbg !7877, !tbaa !682
  %124 = or i64 %104, 2, !dbg !7878
  %125 = getelementptr inbounds i64, i64* %30, i64 %124, !dbg !7870
  %126 = load i64, i64* %125, align 8, !dbg !7870, !tbaa !682
  %127 = getelementptr inbounds i64, i64* %105, i64 5, !dbg !7872
  store i64 %126, i64* %123, align 8, !dbg !7873, !tbaa !682
  %128 = load i32*, i32** %96, align 8, !dbg !7874, !tbaa !540
  %129 = getelementptr inbounds i32, i32* %128, i64 %124, !dbg !7875
  %130 = load i32, i32* %129, align 4, !dbg !7875, !tbaa !191
  %131 = sext i32 %130 to i64, !dbg !7875
  %132 = getelementptr inbounds i64, i64* %105, i64 6, !dbg !7876
  store i64 %131, i64* %127, align 8, !dbg !7877, !tbaa !682
  %133 = or i64 %104, 3, !dbg !7878
  %134 = getelementptr inbounds i64, i64* %30, i64 %133, !dbg !7870
  %135 = load i64, i64* %134, align 8, !dbg !7870, !tbaa !682
  %136 = getelementptr inbounds i64, i64* %105, i64 7, !dbg !7872
  store i64 %135, i64* %132, align 8, !dbg !7873, !tbaa !682
  %137 = load i32*, i32** %96, align 8, !dbg !7874, !tbaa !540
  %138 = getelementptr inbounds i32, i32* %137, i64 %133, !dbg !7875
  %139 = load i32, i32* %138, align 4, !dbg !7875, !tbaa !191
  %140 = sext i32 %139 to i64, !dbg !7875
  %141 = getelementptr inbounds i64, i64* %105, i64 8, !dbg !7876
  store i64 %140, i64* %136, align 8, !dbg !7877, !tbaa !682
  %142 = add nuw nsw i64 %104, 4, !dbg !7878
  %143 = add i64 %106, -4, !dbg !7867
  %144 = icmp eq i64 %143, 0, !dbg !7867
  br i1 %144, label %145, label %103, !dbg !7867, !llvm.loop !7879

; <label>:145:                                    ; preds = %103, %93
  %146 = phi i64 [ 0, %93 ], [ %142, %103 ]
  %147 = phi i64* [ %95, %93 ], [ %141, %103 ]
  %148 = icmp eq i64 %99, 0, !dbg !7867
  br i1 %148, label %164, label %149, !dbg !7867

; <label>:149:                                    ; preds = %145, %149
  %150 = phi i64 [ %161, %149 ], [ %146, %145 ]
  %151 = phi i64* [ %160, %149 ], [ %147, %145 ]
  %152 = phi i64 [ %162, %149 ], [ %99, %145 ]
  %153 = getelementptr inbounds i64, i64* %30, i64 %150, !dbg !7870
  %154 = load i64, i64* %153, align 8, !dbg !7870, !tbaa !682
  %155 = getelementptr inbounds i64, i64* %151, i64 1, !dbg !7872
  store i64 %154, i64* %151, align 8, !dbg !7873, !tbaa !682
  %156 = load i32*, i32** %96, align 8, !dbg !7874, !tbaa !540
  %157 = getelementptr inbounds i32, i32* %156, i64 %150, !dbg !7875
  %158 = load i32, i32* %157, align 4, !dbg !7875, !tbaa !191
  %159 = sext i32 %158 to i64, !dbg !7875
  %160 = getelementptr inbounds i64, i64* %151, i64 2, !dbg !7876
  store i64 %159, i64* %155, align 8, !dbg !7877, !tbaa !682
  %161 = add nuw nsw i64 %150, 1, !dbg !7878
  %162 = add i64 %152, -1, !dbg !7867
  %163 = icmp eq i64 %162, 0, !dbg !7867
  br i1 %163, label %164, label %149, !dbg !7867, !llvm.loop !7881

; <label>:164:                                    ; preds = %149, %145
  %165 = load i64, i64* %90, align 8, !dbg !7883, !tbaa !682
  br label %166, !dbg !7883

; <label>:166:                                    ; preds = %164, %84
  %167 = phi i64 [ %165, %164 ], [ %91, %84 ], !dbg !7883
  %168 = icmp eq i64 %167, 0, !dbg !7885
  br i1 %168, label %175, label %169, !dbg !7886

; <label>:169:                                    ; preds = %166
  %170 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 168), align 8, !dbg !7887, !tbaa !7632
  %171 = shl i64 %87, 35, !dbg !7888
  %172 = ashr exact i64 %171, 32, !dbg !7888
  %173 = call i64 @write(i32 %170, i8* nonnull %89, i64 %172) #9, !dbg !7889
  %174 = icmp eq i64 %173, %172, !dbg !7890
  br i1 %174, label %176, label %175, !dbg !7891

; <label>:175:                                    ; preds = %169, %166
  br label %176, !dbg !7892

; <label>:176:                                    ; preds = %169, %175
  %177 = phi i32 [ -1, %175 ], [ 0, %169 ], !dbg !7894
  call void @zfree(i8* nonnull %89) #9, !dbg !7895
  br label %178, !dbg !7896

; <label>:178:                                    ; preds = %74, %70, %176
  %179 = phi i32 [ %177, %176 ], [ %72, %70 ], [ -1, %74 ], !dbg !7894
  call void @zfree(i8* %29) #9, !dbg !7897
  call void @rioFreeFdset(%struct._rio* nonnull %4) #9, !dbg !7898
  %180 = icmp ne i32 %179, 0, !dbg !7899
  %181 = zext i1 %180 to i32, !dbg !7900
  call void @exitFromChild(i32 %181) #9, !dbg !7901
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %71) #4, !dbg !7902
  br label %240, !dbg !7903

; <label>:182:                                    ; preds = %65
  %183 = icmp eq i32 %68, -1, !dbg !7904
  br i1 %183, label %184, label %220, !dbg !7905

; <label>:184:                                    ; preds = %182
  %185 = call i32* @__errno() #9, !dbg !7906
  %186 = load i32, i32* %185, align 4, !dbg !7906, !tbaa !191
  %187 = call i8* @strerror(i32 %186) #9, !dbg !7907
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0), i8* %187) #9, !dbg !7908
  %188 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7909, !tbaa !7636
  call void @listRewind(%struct.list* %188, %struct.listIter* nonnull %2) #9, !dbg !7910
  %189 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7911
  %190 = icmp eq %struct.listNode* %189, null, !dbg !7912
  br i1 %190, label %215, label %191, !dbg !7912

; <label>:191:                                    ; preds = %184
  %192 = icmp sgt i32 %66, 0
  %193 = sext i32 %66 to i64, !dbg !7912
  br label %194, !dbg !7912

; <label>:194:                                    ; preds = %191, %212
  %195 = phi %struct.listNode* [ %189, %191 ], [ %213, %212 ]
  %196 = getelementptr inbounds %struct.listNode, %struct.listNode* %195, i64 0, i32 2, !dbg !7913
  %197 = bitcast i8** %196 to %struct.client**, !dbg !7913
  %198 = load %struct.client*, %struct.client** %197, align 8, !dbg !7913, !tbaa !7643
  br i1 %192, label %199, label %212, !dbg !7916

; <label>:199:                                    ; preds = %194
  %200 = getelementptr inbounds %struct.client, %struct.client* %198, i64 0, i32 0
  %201 = load i64, i64* %200, align 8, !tbaa !7659
  br label %204, !dbg !7916

; <label>:202:                                    ; preds = %204
  %203 = icmp slt i64 %209, %193, !dbg !7918
  br i1 %203, label %204, label %212, !dbg !7916, !llvm.loop !7920

; <label>:204:                                    ; preds = %199, %202
  %205 = phi i64 [ 0, %199 ], [ %209, %202 ]
  %206 = getelementptr inbounds i64, i64* %30, i64 %205, !dbg !7922
  %207 = load i64, i64* %206, align 8, !dbg !7922, !tbaa !682
  %208 = icmp eq i64 %201, %207, !dbg !7925
  %209 = add nuw nsw i64 %205, 1, !dbg !7926
  br i1 %208, label %210, label %202, !dbg !7927

; <label>:210:                                    ; preds = %204
  %211 = getelementptr inbounds %struct.client, %struct.client* %198, i64 0, i32 23, !dbg !7928
  store i32 6, i32* %211, align 8, !dbg !7930, !tbaa !7647
  br label %212, !dbg !7931

; <label>:212:                                    ; preds = %202, %194, %210
  %213 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7911
  %214 = icmp eq %struct.listNode* %213, null, !dbg !7912
  br i1 %214, label %215, label %194, !dbg !7912, !llvm.loop !7932

; <label>:215:                                    ; preds = %212, %184
  %216 = load i32, i32* %12, align 4, !dbg !7934, !tbaa !191
  %217 = call i32 @close(i32 %216) #9, !dbg !7935
  %218 = load i32, i32* %17, align 4, !dbg !7936, !tbaa !191
  %219 = call i32 @close(i32 %218) #9, !dbg !7937
  call void @closeChildInfoPipe() #9, !dbg !7938
  br label %238, !dbg !7939

; <label>:220:                                    ; preds = %182
  %221 = call i64 @ustime() #9, !dbg !7940
  %222 = sub nsw i64 %221, %67, !dbg !7942
  store i64 %222, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !7943, !tbaa !5277
  %223 = call i64 @zmalloc_used_memory() #9, !dbg !7944
  %224 = uitofp i64 %223 to double, !dbg !7945
  %225 = fmul double %224, 1.000000e+06, !dbg !7946
  %226 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !7947, !tbaa !5277
  %227 = sitofp i64 %226 to double, !dbg !7948
  %228 = fdiv double %225, %227, !dbg !7949
  %229 = fmul double %228, 0x3E10000000000000, !dbg !7950
  store double %229, double* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !7951, !tbaa !5286
  %230 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !7952, !tbaa !5289
  %231 = icmp eq i64 %230, 0, !dbg !7952
  br i1 %231, label %236, label %232, !dbg !7952

; <label>:232:                                    ; preds = %220
  %233 = sdiv i64 %226, 1000, !dbg !7952
  %234 = icmp slt i64 %233, %230, !dbg !7952
  br i1 %234, label %236, label %235, !dbg !7954

; <label>:235:                                    ; preds = %232
  call void @latencyAddSample(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i64 %233) #9, !dbg !7952
  br label %236, !dbg !7952

; <label>:236:                                    ; preds = %232, %220, %235
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.96, i64 0, i64 0), i32 %68) #9, !dbg !7955
  %237 = call i64 @time(i64* null) #9, !dbg !7956
  store i64 %237, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !7957, !tbaa !5304
  store i32 %68, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7958, !tbaa !5306
  store i32 2, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !7959, !tbaa !5308
  call void @updateDictResizePolicy() #9, !dbg !7960
  br label %238

; <label>:238:                                    ; preds = %236, %215
  call void @zfree(i8* %29) #9, !dbg !7961
  call void @zfree(i8* %23) #9, !dbg !7962
  %239 = sext i1 %183 to i32, !dbg !7963
  br label %240, !dbg !7964

; <label>:240:                                    ; preds = %11, %1, %178, %238
  %241 = phi i32 [ 0, %178 ], [ %239, %238 ], [ -1, %1 ], [ -1, %11 ], !dbg !7965
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4, !dbg !7966
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #4, !dbg !7966
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7966
  ret i32 %241, !dbg !7966
}

; Function Attrs: noredzone
declare dso_local i32 @pipe(i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @replicationSetupSlaveForFullResync(%struct.client*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @getPsyncInitialOffset() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetBlock(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rioInitWithFdset(%struct._rio*, i32*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @write(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rioFreeFdset(%struct._rio*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @saveCommand(%struct.client*) local_unnamed_addr #6 !dbg !7967 {
  %2 = alloca %struct.rdbSaveInfo, align 8
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7973, !tbaa !5306
  %4 = icmp eq i32 %3, -1, !dbg !7975
  br i1 %4, label %6, label %5, !dbg !7976

; <label>:5:                                      ; preds = %1
  tail call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.97, i64 0, i64 0)) #9, !dbg !7977
  br label %46, !dbg !7979

; <label>:6:                                      ; preds = %1
  %7 = bitcast %struct.rdbSaveInfo* %2 to i8*, !dbg !7980
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #4, !dbg !7980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%struct.rdbSaveInfo* @rdbPopulateSaveInfo.rsi_init to i8*), i64 64, i1 false) #4, !dbg !7990, !tbaa.struct !7991
  %8 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !7992, !tbaa !6717
  %9 = icmp eq i8* %8, null, !dbg !7994
  %10 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 183), align 8, !dbg !7995
  %11 = icmp ne i8* %10, null, !dbg !7996
  %12 = and i1 %9, %11, !dbg !7997
  br i1 %12, label %13, label %17, !dbg !7997

; <label>:13:                                     ; preds = %6
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 181), align 8, !dbg !7998, !tbaa !8000
  %15 = icmp eq i32 %14, -1, !dbg !8001
  %16 = select i1 %15, i32 0, i32 %14, !dbg !8002
  br label %33, !dbg !8003

; <label>:17:                                     ; preds = %6
  %18 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199), align 8, !dbg !8004, !tbaa !8006
  %19 = icmp eq %struct.client* %18, null, !dbg !8007
  br i1 %19, label %25, label %20, !dbg !8008

; <label>:20:                                     ; preds = %17
  %21 = getelementptr inbounds %struct.client, %struct.client* %18, i64 0, i32 2, !dbg !8009
  %22 = load %struct.redisDb*, %struct.redisDb** %21, align 8, !dbg !8009, !tbaa !8011
  %23 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %22, i64 0, i32 5, !dbg !8012
  %24 = load i32, i32* %23, align 8, !dbg !8012, !tbaa !8013
  br label %33, !dbg !8014

; <label>:25:                                     ; preds = %17
  %26 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 200), align 8, !dbg !8015, !tbaa !8017
  %27 = icmp eq %struct.client* %26, null, !dbg !8018
  br i1 %27, label %36, label %28, !dbg !8019

; <label>:28:                                     ; preds = %25
  %29 = getelementptr inbounds %struct.client, %struct.client* %26, i64 0, i32 2, !dbg !8020
  %30 = load %struct.redisDb*, %struct.redisDb** %29, align 8, !dbg !8020, !tbaa !8011
  %31 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %30, i64 0, i32 5, !dbg !8022
  %32 = load i32, i32* %31, align 8, !dbg !8022, !tbaa !8013
  br label %33, !dbg !8023

; <label>:33:                                     ; preds = %28, %20, %13
  %34 = phi i32 [ %16, %13 ], [ %24, %20 ], [ %32, %28 ]
  %35 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %2, i64 0, i32 0, !dbg !8024
  store i32 %34, i32* %35, align 8, !dbg !8024, !tbaa !4398
  br label %36, !dbg !8025

; <label>:36:                                     ; preds = %33, %25
  %37 = phi %struct.rdbSaveInfo* [ null, %25 ], [ %2, %33 ], !dbg !8026
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8025
  %38 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157), align 8, !dbg !8028, !tbaa !203
  %39 = call i32 @rdbSave(i8* %38, %struct.rdbSaveInfo* %37) #11, !dbg !8030
  %40 = icmp eq i32 %39, 0, !dbg !8031
  br i1 %40, label %41, label %43, !dbg !8032

; <label>:41:                                     ; preds = %36
  %42 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !8033, !tbaa !8035
  call void @addReply(%struct.client* %0, %struct.redisObject* %42) #9, !dbg !8037
  br label %45, !dbg !8038

; <label>:43:                                     ; preds = %36
  %44 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !8039, !tbaa !8041
  call void @addReply(%struct.client* %0, %struct.redisObject* %44) #9, !dbg !8042
  br label %45

; <label>:45:                                     ; preds = %43, %41
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #4, !dbg !8043
  br label %46, !dbg !8043

; <label>:46:                                     ; preds = %45, %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8043
  ret void, !dbg !8043
}

; Function Attrs: noredzone
declare dso_local void @addReplyError(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.rdbSaveInfo* @rdbPopulateSaveInfo(%struct.rdbSaveInfo*) local_unnamed_addr #6 !dbg !7983 {
  %2 = bitcast %struct.rdbSaveInfo* %0 to i8*, !dbg !8045
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 bitcast (%struct.rdbSaveInfo* @rdbPopulateSaveInfo.rsi_init to i8*), i64 64, i1 false), !dbg !8045, !tbaa.struct !7991
  %3 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !8046, !tbaa !6717
  %4 = icmp eq i8* %3, null, !dbg !8047
  %5 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 183), align 8, !dbg !8048
  %6 = icmp ne i8* %5, null, !dbg !8049
  %7 = and i1 %4, %6, !dbg !8050
  br i1 %7, label %8, label %12, !dbg !8050

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 181), align 8, !dbg !8051, !tbaa !8000
  %10 = icmp eq i32 %9, -1, !dbg !8052
  %11 = select i1 %10, i32 0, i32 %9, !dbg !8053
  br label %28, !dbg !8054

; <label>:12:                                     ; preds = %1
  %13 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199), align 8, !dbg !8055, !tbaa !8006
  %14 = icmp eq %struct.client* %13, null, !dbg !8056
  br i1 %14, label %20, label %15, !dbg !8057

; <label>:15:                                     ; preds = %12
  %16 = getelementptr inbounds %struct.client, %struct.client* %13, i64 0, i32 2, !dbg !8058
  %17 = load %struct.redisDb*, %struct.redisDb** %16, align 8, !dbg !8058, !tbaa !8011
  %18 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %17, i64 0, i32 5, !dbg !8059
  %19 = load i32, i32* %18, align 8, !dbg !8059, !tbaa !8013
  br label %28, !dbg !8060

; <label>:20:                                     ; preds = %12
  %21 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 200), align 8, !dbg !8061, !tbaa !8017
  %22 = icmp eq %struct.client* %21, null, !dbg !8062
  br i1 %22, label %31, label %23, !dbg !8063

; <label>:23:                                     ; preds = %20
  %24 = getelementptr inbounds %struct.client, %struct.client* %21, i64 0, i32 2, !dbg !8064
  %25 = load %struct.redisDb*, %struct.redisDb** %24, align 8, !dbg !8064, !tbaa !8011
  %26 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %25, i64 0, i32 5, !dbg !8065
  %27 = load i32, i32* %26, align 8, !dbg !8065, !tbaa !8013
  br label %28, !dbg !8066

; <label>:28:                                     ; preds = %8, %15, %23
  %29 = phi i32 [ %27, %23 ], [ %19, %15 ], [ %11, %8 ]
  %30 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %0, i64 0, i32 0, !dbg !8067
  store i32 %29, i32* %30, align 8, !dbg !8067, !tbaa !4398
  br label %31, !dbg !8068

; <label>:31:                                     ; preds = %28, %20
  %32 = phi %struct.rdbSaveInfo* [ null, %20 ], [ %0, %28 ], !dbg !8069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8068
  ret %struct.rdbSaveInfo* %32, !dbg !8068
}

; Function Attrs: noredzone
declare dso_local void @addReply(%struct.client*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @bgsaveCommand(%struct.client*) local_unnamed_addr #6 !dbg !8070 {
  %2 = alloca %struct.rdbSaveInfo, align 8
  %3 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !8078
  %4 = load i32, i32* %3, align 8, !dbg !8078, !tbaa !8080
  %5 = icmp sgt i32 %4, 1, !dbg !8081
  br i1 %5, label %6, label %19, !dbg !8082

; <label>:6:                                      ; preds = %1
  %7 = icmp eq i32 %4, 2, !dbg !8083
  br i1 %7, label %8, label %17, !dbg !8086

; <label>:8:                                      ; preds = %6
  %9 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !8087
  %10 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !8087, !tbaa !8088
  %11 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 1, !dbg !8089
  %12 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !8089, !tbaa !200
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %12, i64 0, i32 2, !dbg !8090
  %14 = load i8*, i8** %13, align 8, !dbg !8090, !tbaa !2002
  %15 = tail call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i64 0, i64 0)) #12, !dbg !8091
  %16 = icmp eq i32 %15, 0, !dbg !8091
  br i1 %16, label %19, label %17, !dbg !8092

; <label>:17:                                     ; preds = %8, %6
  %18 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !8093, !tbaa !8095
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %18) #9, !dbg !8096
  br label %70, !dbg !8097

; <label>:19:                                     ; preds = %8, %1
  %20 = phi i32 [ 0, %1 ], [ 1, %8 ], !dbg !8098
  %21 = bitcast %struct.rdbSaveInfo* %2 to i8*, !dbg !8099
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #4, !dbg !8099
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 bitcast (%struct.rdbSaveInfo* @rdbPopulateSaveInfo.rsi_init to i8*), i64 64, i1 false) #4, !dbg !8103, !tbaa.struct !7991
  %22 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !8104, !tbaa !6717
  %23 = icmp eq i8* %22, null, !dbg !8105
  %24 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 183), align 8, !dbg !8106
  %25 = icmp ne i8* %24, null, !dbg !8107
  %26 = and i1 %23, %25, !dbg !8108
  br i1 %26, label %27, label %31, !dbg !8108

; <label>:27:                                     ; preds = %19
  %28 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 181), align 8, !dbg !8109, !tbaa !8000
  %29 = icmp eq i32 %28, -1, !dbg !8110
  %30 = select i1 %29, i32 0, i32 %28, !dbg !8111
  br label %47, !dbg !8112

; <label>:31:                                     ; preds = %19
  %32 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199), align 8, !dbg !8113, !tbaa !8006
  %33 = icmp eq %struct.client* %32, null, !dbg !8114
  br i1 %33, label %39, label %34, !dbg !8115

; <label>:34:                                     ; preds = %31
  %35 = getelementptr inbounds %struct.client, %struct.client* %32, i64 0, i32 2, !dbg !8116
  %36 = load %struct.redisDb*, %struct.redisDb** %35, align 8, !dbg !8116, !tbaa !8011
  %37 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %36, i64 0, i32 5, !dbg !8117
  %38 = load i32, i32* %37, align 8, !dbg !8117, !tbaa !8013
  br label %47, !dbg !8118

; <label>:39:                                     ; preds = %31
  %40 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 200), align 8, !dbg !8119, !tbaa !8017
  %41 = icmp eq %struct.client* %40, null, !dbg !8120
  br i1 %41, label %50, label %42, !dbg !8121

; <label>:42:                                     ; preds = %39
  %43 = getelementptr inbounds %struct.client, %struct.client* %40, i64 0, i32 2, !dbg !8122
  %44 = load %struct.redisDb*, %struct.redisDb** %43, align 8, !dbg !8122, !tbaa !8011
  %45 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %44, i64 0, i32 5, !dbg !8123
  %46 = load i32, i32* %45, align 8, !dbg !8123, !tbaa !8013
  br label %47, !dbg !8124

; <label>:47:                                     ; preds = %42, %34, %27
  %48 = phi i32 [ %30, %27 ], [ %38, %34 ], [ %46, %42 ]
  %49 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %2, i64 0, i32 0, !dbg !8098
  store i32 %48, i32* %49, align 8, !dbg !8098, !tbaa !4398
  br label %50, !dbg !8125

; <label>:50:                                     ; preds = %47, %39
  %51 = phi %struct.rdbSaveInfo* [ null, %39 ], [ %2, %47 ], !dbg !8126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8125
  %52 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !8128, !tbaa !5306
  %53 = icmp eq i32 %52, -1, !dbg !8130
  br i1 %53, label %55, label %54, !dbg !8131

; <label>:54:                                     ; preds = %50
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.97, i64 0, i64 0)) #9, !dbg !8132
  br label %69, !dbg !8134

; <label>:55:                                     ; preds = %50
  %56 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !8135, !tbaa !5235
  %57 = icmp eq i32 %56, -1, !dbg !8137
  br i1 %57, label %62, label %58, !dbg !8138

; <label>:58:                                     ; preds = %55
  %59 = icmp eq i32 %20, 0, !dbg !8139
  br i1 %59, label %61, label %60, !dbg !8142

; <label>:60:                                     ; preds = %58
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 164), align 8, !dbg !8143, !tbaa !8145
  tail call void @addReplyStatus(%struct.client* nonnull %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.99, i64 0, i64 0)) #9, !dbg !8146
  br label %69, !dbg !8147

; <label>:61:                                     ; preds = %58
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.100, i64 0, i64 0)) #9, !dbg !8148
  br label %69

; <label>:62:                                     ; preds = %55
  %63 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157), align 8, !dbg !8150, !tbaa !203
  %64 = call i32 @rdbSaveBackground(i8* %63, %struct.rdbSaveInfo* %51) #11, !dbg !8152
  %65 = icmp eq i32 %64, 0, !dbg !8153
  br i1 %65, label %66, label %67, !dbg !8154

; <label>:66:                                     ; preds = %62
  call void @addReplyStatus(%struct.client* nonnull %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.101, i64 0, i64 0)) #9, !dbg !8155
  br label %69, !dbg !8157

; <label>:67:                                     ; preds = %62
  %68 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !8158, !tbaa !8041
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %68) #9, !dbg !8160
  br label %69

; <label>:69:                                     ; preds = %61, %60, %67, %66, %54
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #4, !dbg !8161
  br label %70, !dbg !8161

; <label>:70:                                     ; preds = %69, %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8161
  ret void, !dbg !8161
}

; Function Attrs: noredzone
declare dso_local void @addReplyStatus(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #2

; Function Attrs: nounwind readnone speculatable

attributes #0 = { noredzone noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin noredzone nounwind }
attributes #10 = { nobuiltin noredzone noreturn nounwind }
attributes #11 = { nobuiltin noredzone }
attributes #12 = { nobuiltin noredzone nounwind readonly }

!llvm.module.flags = !{!143, !144, !145}
!llvm.ident = !{!146}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rdb.c", directory: "/root/.unikraft/apps/redis/build")
!2 = !{}
!3 = !{!4, !5, !8, !12, !13, !14, !15, !18, !21, !7, !23, !25, !41, !104, !20, !94, !33, !108, !119, !129, !136}
!4 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !6, line: 34, baseType: !7)
!6 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/include/uk/time_types.h", directory: "/root/.unikraft/apps/redis/build")
!7 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !9, line: 56, baseType: !10)
!9 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !11, line: 103, baseType: !7)
!11 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!12 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!14 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 32, baseType: !16)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !11, line: 55, baseType: !17)
!17 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9, line: 44, baseType: !19)
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !11, line: 77, baseType: !20)
!20 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "intset", file: !27, line: 39, baseType: !28)
!27 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/intset.h", directory: "/root/.unikraft/apps/redis/build")
!28 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "intset", file: !27, line: 35, size: 64, elements: !29)
!29 = !{!30, !34, !35}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !28, file: !27, line: 36, baseType: !31, size: 32)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 48, baseType: !32)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !11, line: 79, baseType: !33)
!33 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !28, file: !27, line: 37, baseType: !31, size: 32, offset: 32)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !28, file: !27, line: 38, baseType: !36, offset: 64)
!36 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, elements: !39)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 20, baseType: !38)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !11, line: 41, baseType: !14)
!39 = !{!40}
!40 = !DISubrange(count: -1)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict", file: !43, line: 82, baseType: !44)
!43 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/dict.h", directory: "/root/.unikraft/apps/redis/build")
!44 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !43, line: 76, size: 768, elements: !45)
!45 = !{!46, !74, !75, !102, !103}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !44, file: !43, line: 77, baseType: !47, size: 64)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictType", file: !43, line: 65, baseType: !49)
!49 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictType", file: !43, line: 58, size: 384, elements: !50)
!50 = !{!51, !60, !64, !65, !69, !73}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "hashFunction", scope: !49, file: !43, line: 59, baseType: !52, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!53 = !DISubroutineType(types: !54)
!54 = !{!55, !58}
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !9, line: 60, baseType: !56)
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !11, line: 105, baseType: !57)
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "keyDup", scope: !49, file: !43, line: 60, baseType: !61, size: 64, offset: 64)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DISubroutineType(types: !63)
!63 = !{!13, !13, !58}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "valDup", scope: !49, file: !43, line: 61, baseType: !61, size: 64, offset: 128)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "keyCompare", scope: !49, file: !43, line: 62, baseType: !66, size: 64, offset: 192)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!67 = !DISubroutineType(types: !68)
!68 = !{!20, !13, !58, !58}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "keyDestructor", scope: !49, file: !43, line: 63, baseType: !70, size: 64, offset: 256)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DISubroutineType(types: !72)
!72 = !{null, !13, !13}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "valDestructor", scope: !49, file: !43, line: 64, baseType: !70, size: 64, offset: 320)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !44, file: !43, line: 78, baseType: !13, size: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !44, file: !43, line: 79, baseType: !76, size: 512, offset: 128)
!76 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 512, elements: !100)
!77 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictht", file: !43, line: 74, baseType: !78)
!78 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictht", file: !43, line: 69, size: 256, elements: !79)
!79 = !{!80, !97, !98, !99}
!80 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !78, file: !43, line: 70, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictEntry", file: !43, line: 56, baseType: !84)
!84 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictEntry", file: !43, line: 47, size: 192, elements: !85)
!85 = !{!86, !87, !95}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !84, file: !43, line: 48, baseType: !13, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !84, file: !43, line: 54, baseType: !88, size: 64, offset: 64)
!88 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !84, file: !43, line: 49, size: 64, elements: !89)
!89 = !{!90, !91, !92, !93}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !88, file: !43, line: 50, baseType: !13, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !88, file: !43, line: 51, baseType: !55, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "s64", scope: !88, file: !43, line: 52, baseType: !8, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !88, file: !43, line: 53, baseType: !94, size: 64)
!94 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !84, file: !43, line: 55, baseType: !96, size: 64, offset: 128)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !78, file: !43, line: 71, baseType: !57, size: 64, offset: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "sizemask", scope: !78, file: !43, line: 72, baseType: !57, size: 64, offset: 128)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !78, file: !43, line: 73, baseType: !57, size: 64, offset: 192)
!100 = !{!101}
!101 = !DISubrange(count: 2)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "rehashidx", scope: !44, file: !43, line: 80, baseType: !7, size: 64, offset: 640)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "iterators", scope: !44, file: !43, line: 81, baseType: !57, size: 64, offset: 704)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !105, line: 200, baseType: !106)
!105 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/types.h", directory: "/root/.unikraft/apps/redis/build")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "_ssize_t", file: !107, line: 145, baseType: !7)
!107 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_types.h", directory: "/root/.unikraft/apps/redis/build")
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr8", file: !110, line: 51, size: 24, elements: !111)
!110 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/sds.h", directory: "/root/.unikraft/apps/redis/build")
!111 = !{!112, !115, !116, !117}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !109, file: !110, line: 52, baseType: !113, size: 8)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 24, baseType: !114)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !11, line: 43, baseType: !24)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !109, file: !110, line: 53, baseType: !113, size: 8, offset: 8)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !109, file: !110, line: 54, baseType: !24, size: 8, offset: 16)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !109, file: !110, line: 55, baseType: !118, offset: 24)
!118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, elements: !39)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr16", file: !110, line: 57, size: 40, elements: !121)
!121 = !{!122, !126, !127, !128}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !120, file: !110, line: 58, baseType: !123, size: 16)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 36, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !11, line: 57, baseType: !125)
!125 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !120, file: !110, line: 59, baseType: !123, size: 16, offset: 16)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !120, file: !110, line: 60, baseType: !24, size: 8, offset: 32)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !120, file: !110, line: 61, baseType: !118, offset: 40)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr32", file: !110, line: 63, size: 72, elements: !131)
!131 = !{!132, !133, !134, !135}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !130, file: !110, line: 64, baseType: !31, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !130, file: !110, line: 65, baseType: !31, size: 32, offset: 32)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !130, file: !110, line: 66, baseType: !24, size: 8, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !130, file: !110, line: 67, baseType: !118, offset: 72)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr64", file: !110, line: 69, size: 136, elements: !138)
!138 = !{!139, !140, !141, !142}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !137, file: !110, line: 70, baseType: !55, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !137, file: !110, line: 71, baseType: !55, size: 64, offset: 64)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !137, file: !110, line: 72, baseType: !24, size: 8, offset: 128)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !137, file: !110, line: 73, baseType: !118, offset: 136)
!143 = !{i32 2, !"Dwarf Version", i32 4}
!144 = !{i32 2, !"Debug Info Version", i32 3}
!145 = !{i32 1, !"wchar_size", i32 4}
!146 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!147 = distinct !DISubprogram(name: "rdbCheckThenExit", scope: !1, file: !1, line: 51, type: !148, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !150)
!148 = !DISubroutineType(types: !149)
!149 = !{null, !20, !21, null}
!150 = !{!151, !152, !153, !168, !172, !173}
!151 = !DILocalVariable(name: "linenum", arg: 1, scope: !147, file: !1, line: 51, type: !20)
!152 = !DILocalVariable(name: "reason", arg: 2, scope: !147, file: !1, line: 51, type: !21)
!153 = !DILocalVariable(name: "ap", scope: !147, file: !1, line: 52, type: !154)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !155, line: 46, baseType: !156)
!155 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/stdio.h", directory: "/root/.unikraft/apps/redis/build")
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !157, line: 51, baseType: !158)
!157 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stdarg.h", directory: "/root/.unikraft/apps/redis/build")
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 52, baseType: !159)
!159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 192, elements: !166)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 52, size: 192, elements: !161)
!161 = !{!162, !163, !164, !165}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !160, file: !1, line: 52, baseType: !33, size: 32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !160, file: !1, line: 52, baseType: !33, size: 32, offset: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !160, file: !1, line: 52, baseType: !13, size: 64, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !160, file: !1, line: 52, baseType: !13, size: 64, offset: 128)
!166 = !{!167}
!167 = !DISubrange(count: 1)
!168 = !DILocalVariable(name: "msg", scope: !147, file: !1, line: 53, type: !169)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 8192, elements: !170)
!170 = !{!171}
!171 = !DISubrange(count: 1024)
!172 = !DILocalVariable(name: "len", scope: !147, file: !1, line: 54, type: !20)
!173 = !DILocalVariable(name: "argv", scope: !174, file: !1, line: 64, type: !176)
!174 = distinct !DILexicalBlock(scope: !175, file: !1, line: 62, column: 24)
!175 = distinct !DILexicalBlock(scope: !147, file: !1, line: 62, column: 9)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 128, elements: !100)
!177 = !DILocation(line: 51, column: 27, scope: !147)
!178 = !DILocation(line: 51, column: 42, scope: !147)
!179 = !DILocation(line: 52, column: 5, scope: !147)
!180 = !DILocation(line: 52, column: 13, scope: !147)
!181 = !DILocation(line: 53, column: 5, scope: !147)
!182 = !DILocation(line: 53, column: 10, scope: !147)
!183 = !DILocation(line: 56, column: 11, scope: !147)
!184 = !DILocation(line: 54, column: 9, scope: !147)
!185 = !DILocation(line: 58, column: 5, scope: !147)
!186 = !DILocation(line: 59, column: 18, scope: !147)
!187 = !DILocation(line: 59, column: 34, scope: !147)
!188 = !DILocation(line: 59, column: 5, scope: !147)
!189 = !DILocation(line: 60, column: 5, scope: !147)
!190 = !DILocation(line: 62, column: 10, scope: !175)
!191 = !{!192, !192, i64 0}
!192 = !{!"int", !193, i64 0}
!193 = !{!"omnipotent char", !194, i64 0}
!194 = !{!"Simple C/C++ TBAA"}
!195 = !DILocation(line: 62, column: 9, scope: !147)
!196 = !DILocation(line: 63, column: 9, scope: !174)
!197 = !DILocation(line: 64, column: 9, scope: !174)
!198 = !DILocation(line: 64, column: 15, scope: !174)
!199 = !DILocation(line: 64, column: 25, scope: !174)
!200 = !{!201, !201, i64 0}
!201 = !{!"any pointer", !193, i64 0}
!202 = !DILocation(line: 64, column: 36, scope: !174)
!203 = !{!204, !201, i64 2120}
!204 = !{!"redisServer", !192, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !192, i64 32, !192, i64 36, !192, i64 40, !201, i64 48, !201, i64 56, !201, i64 64, !201, i64 72, !192, i64 80, !192, i64 84, !192, i64 88, !192, i64 92, !201, i64 96, !201, i64 104, !192, i64 112, !192, i64 116, !193, i64 120, !192, i64 164, !205, i64 168, !192, i64 176, !201, i64 184, !201, i64 192, !201, i64 200, !193, i64 208, !192, i64 216, !192, i64 220, !193, i64 224, !192, i64 352, !201, i64 360, !192, i64 368, !193, i64 372, !192, i64 436, !192, i64 440, !193, i64 444, !192, i64 508, !201, i64 512, !201, i64 520, !201, i64 528, !201, i64 536, !201, i64 544, !201, i64 552, !201, i64 560, !192, i64 568, !206, i64 576, !193, i64 584, !201, i64 840, !205, i64 848, !192, i64 856, !192, i64 860, !205, i64 864, !205, i64 872, !205, i64 880, !205, i64 888, !201, i64 896, !201, i64 904, !201, i64 912, !201, i64 920, !201, i64 928, !201, i64 936, !201, i64 944, !201, i64 952, !201, i64 960, !201, i64 968, !201, i64 976, !201, i64 984, !201, i64 992, !205, i64 1000, !206, i64 1008, !206, i64 1016, !206, i64 1024, !207, i64 1032, !206, i64 1040, !206, i64 1048, !206, i64 1056, !206, i64 1064, !206, i64 1072, !206, i64 1080, !206, i64 1088, !206, i64 1096, !206, i64 1104, !205, i64 1112, !206, i64 1120, !207, i64 1128, !206, i64 1136, !206, i64 1144, !206, i64 1152, !206, i64 1160, !201, i64 1168, !206, i64 1176, !206, i64 1184, !205, i64 1192, !208, i64 1200, !206, i64 1240, !206, i64 1248, !205, i64 1256, !205, i64 1264, !193, i64 1272, !192, i64 1728, !192, i64 1732, !192, i64 1736, !192, i64 1740, !192, i64 1744, !205, i64 1752, !192, i64 1760, !192, i64 1764, !192, i64 1768, !192, i64 1772, !205, i64 1776, !205, i64 1784, !192, i64 1792, !192, i64 1796, !192, i64 1800, !192, i64 1804, !193, i64 1808, !192, i64 1880, !192, i64 1884, !201, i64 1888, !192, i64 1896, !192, i64 1900, !205, i64 1904, !205, i64 1912, !205, i64 1920, !205, i64 1928, !192, i64 1936, !192, i64 1940, !201, i64 1944, !201, i64 1952, !192, i64 1960, !192, i64 1964, !205, i64 1968, !205, i64 1976, !205, i64 1984, !205, i64 1992, !192, i64 2000, !205, i64 2008, !192, i64 2016, !192, i64 2020, !192, i64 2024, !192, i64 2028, !192, i64 2032, !192, i64 2036, !192, i64 2040, !192, i64 2044, !192, i64 2048, !192, i64 2052, !192, i64 2056, !192, i64 2060, !192, i64 2064, !201, i64 2072, !206, i64 2080, !206, i64 2088, !192, i64 2096, !201, i64 2104, !192, i64 2112, !201, i64 2120, !192, i64 2128, !192, i64 2132, !205, i64 2136, !205, i64 2144, !205, i64 2152, !205, i64 2160, !192, i64 2168, !192, i64 2172, !192, i64 2176, !192, i64 2180, !192, i64 2184, !192, i64 2188, !193, i64 2192, !209, i64 2200, !210, i64 2224, !201, i64 2240, !192, i64 2248, !201, i64 2256, !192, i64 2264, !193, i64 2268, !193, i64 2309, !206, i64 2352, !206, i64 2360, !192, i64 2368, !192, i64 2372, !201, i64 2376, !206, i64 2384, !206, i64 2392, !206, i64 2400, !206, i64 2408, !205, i64 2416, !205, i64 2424, !192, i64 2432, !192, i64 2436, !192, i64 2440, !192, i64 2444, !192, i64 2448, !201, i64 2456, !201, i64 2464, !192, i64 2472, !192, i64 2476, !201, i64 2480, !201, i64 2488, !192, i64 2496, !192, i64 2500, !205, i64 2504, !205, i64 2512, !205, i64 2520, !192, i64 2528, !192, i64 2532, !201, i64 2536, !205, i64 2544, !192, i64 2552, !192, i64 2556, !192, i64 2560, !205, i64 2568, !192, i64 2576, !192, i64 2580, !192, i64 2584, !201, i64 2592, !193, i64 2600, !206, i64 2648, !192, i64 2656, !201, i64 2664, !201, i64 2672, !192, i64 2680, !201, i64 2688, !192, i64 2696, !192, i64 2700, !206, i64 2704, !192, i64 2712, !192, i64 2716, !192, i64 2720, !192, i64 2724, !206, i64 2728, !192, i64 2736, !193, i64 2740, !201, i64 2768, !201, i64 2776, !192, i64 2784, !192, i64 2788, !192, i64 2792, !192, i64 2796, !205, i64 2800, !205, i64 2808, !205, i64 2816, !205, i64 2824, !205, i64 2832, !205, i64 2840, !205, i64 2848, !205, i64 2856, !192, i64 2864, !192, i64 2868, !205, i64 2872, !205, i64 2880, !192, i64 2888, !206, i64 2896, !201, i64 2904, !201, i64 2912, !192, i64 2920, !192, i64 2924, !206, i64 2928, !201, i64 2936, !201, i64 2944, !192, i64 2952, !192, i64 2956, !192, i64 2960, !192, i64 2964, !201, i64 2968, !192, i64 2976, !192, i64 2980, !192, i64 2984, !201, i64 2992, !201, i64 3000, !201, i64 3008, !201, i64 3016, !206, i64 3024, !206, i64 3032, !206, i64 3040, !192, i64 3048, !192, i64 3052, !192, i64 3056, !192, i64 3060, !192, i64 3064, !192, i64 3068, !192, i64 3072, !192, i64 3076, !192, i64 3080, !192, i64 3084, !192, i64 3088, !206, i64 3096, !201, i64 3104, !201, i64 3112, !201, i64 3120, !192, i64 3128, !192, i64 3132, !192, i64 3136, !205, i64 3144, !201, i64 3152, !201, i64 3160, !201, i64 3168}
!205 = !{!"long", !193, i64 0}
!206 = !{!"long long", !193, i64 0}
!207 = !{!"double", !193, i64 0}
!208 = !{!"malloc_stats", !205, i64 0, !205, i64 8, !205, i64 16, !205, i64 24, !205, i64 32}
!209 = !{!"", !192, i64 0, !205, i64 8, !206, i64 16}
!210 = !{!"redisOpArray", !201, i64 0, !192, i64 8}
!211 = !DILocation(line: 65, column: 9, scope: !174)
!212 = !DILocation(line: 66, column: 5, scope: !175)
!213 = !DILocation(line: 66, column: 5, scope: !174)
!214 = !DILocation(line: 67, column: 9, scope: !215)
!215 = distinct !DILexicalBlock(scope: !175, file: !1, line: 66, column: 12)
!216 = !DILocation(line: 69, column: 5, scope: !147)
!217 = distinct !DISubprogram(name: "rdbLoadRaw", scope: !1, file: !1, line: 81, type: !218, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !483)
!218 = !DISubroutineType(types: !219)
!219 = !{null, !220, !13, !55}
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "rio", file: !222, line: 87, baseType: !223)
!222 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rio.h", directory: "/root/.unikraft/apps/redis/build")
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rio", file: !222, line: 39, size: 832, elements: !224)
!224 = !{!225, !232, !236, !243, !247, !251, !252, !253, !254}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !223, file: !222, line: 43, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{!229, !231, !13, !229}
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !230, line: 58, baseType: !57)
!230 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stddef.h", directory: "/root/.unikraft/apps/redis/build")
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !223, file: !222, line: 44, baseType: !233, size: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = !DISubroutineType(types: !235)
!235 = !{!229, !231, !58, !229}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tell", scope: !223, file: !222, line: 45, baseType: !237, size: 64, offset: 128)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = !DISubroutineType(types: !239)
!239 = !{!240, !231}
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !105, line: 173, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !107, line: 100, baseType: !242)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !107, line: 44, baseType: !7)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !223, file: !222, line: 46, baseType: !244, size: 64, offset: 192)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DISubroutineType(types: !246)
!246 = !{!20, !231}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "update_cksum", scope: !223, file: !222, line: 52, baseType: !248, size: 64, offset: 256)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DISubroutineType(types: !250)
!250 = !{null, !231, !58, !229}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "cksum", scope: !223, file: !222, line: 55, baseType: !55, size: 64, offset: 320)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "processed_bytes", scope: !223, file: !222, line: 58, baseType: !229, size: 64, offset: 384)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "max_processing_chunk", scope: !223, file: !222, line: 61, baseType: !229, size: 64, offset: 448)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !223, file: !222, line: 84, baseType: !255, size: 320, offset: 512)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !223, file: !222, line: 64, size: 320, elements: !256)
!256 = !{!257, !263, !474}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !255, file: !222, line: 69, baseType: !258, size: 128)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !222, line: 66, size: 128, elements: !259)
!259 = !{!260, !262}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !258, file: !222, line: 67, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "sds", file: !110, line: 43, baseType: !21)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !258, file: !222, line: 68, baseType: !240, size: 64, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !255, file: !222, line: 75, baseType: !264, size: 192)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !222, line: 71, size: 192, elements: !265)
!265 = !{!266, !472, !473}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !264, file: !222, line: 72, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !155, line: 66, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !270, line: 287, baseType: !271)
!270 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/reent.h", directory: "/root/.unikraft/apps/redis/build")
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !270, line: 181, size: 1408, elements: !272)
!272 = !{!273, !274, !275, !276, !277, !278, !283, !284, !285, !440, !446, !451, !455, !456, !457, !458, !460, !462, !463, !464, !465, !466, !470, !471}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !271, file: !270, line: 182, baseType: !23, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !271, file: !270, line: 183, baseType: !20, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !271, file: !270, line: 184, baseType: !20, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !271, file: !270, line: 185, baseType: !17, size: 16, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !271, file: !270, line: 186, baseType: !17, size: 16, offset: 144)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !271, file: !270, line: 187, baseType: !279, size: 128, offset: 192)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !270, line: 117, size: 128, elements: !280)
!280 = !{!281, !282}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !279, file: !270, line: 118, baseType: !23, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !279, file: !270, line: 119, baseType: !20, size: 32, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !271, file: !270, line: 188, baseType: !20, size: 32, offset: 320)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !271, file: !270, line: 195, baseType: !13, size: 64, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !271, file: !270, line: 197, baseType: !286, size: 64, offset: 448)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = !DISubroutineType(types: !288)
!288 = !{!106, !289, !13, !21, !20}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !270, line: 569, size: 14912, elements: !291)
!291 = !{!292, !293, !295, !296, !297, !298, !302, !303, !306, !307, !311, !323, !324, !325, !327, !328, !329, !404, !425, !426, !431, !438}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !290, file: !270, line: 571, baseType: !20, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !290, file: !270, line: 576, baseType: !294, size: 64, offset: 64)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !290, file: !270, line: 576, baseType: !294, size: 64, offset: 128)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !290, file: !270, line: 576, baseType: !294, size: 64, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !290, file: !270, line: 578, baseType: !20, size: 32, offset: 256)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !290, file: !270, line: 579, baseType: !299, size: 200, offset: 288)
!299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 200, elements: !300)
!300 = !{!301}
!301 = !DISubrange(count: 25)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !290, file: !270, line: 582, baseType: !20, size: 32, offset: 512)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !290, file: !270, line: 583, baseType: !304, size: 64, offset: 576)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !270, line: 40, flags: DIFlagFwdDecl)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !290, file: !270, line: 585, baseType: !20, size: 32, offset: 640)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !290, file: !270, line: 587, baseType: !308, size: 64, offset: 704)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !289}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !290, file: !270, line: 590, baseType: !312, size: 64, offset: 768)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !270, line: 47, size: 256, elements: !314)
!314 = !{!315, !316, !317, !318, !319, !320}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !313, file: !270, line: 49, baseType: !312, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !313, file: !270, line: 50, baseType: !20, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !313, file: !270, line: 50, baseType: !20, size: 32, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !313, file: !270, line: 50, baseType: !20, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !313, file: !270, line: 50, baseType: !20, size: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !313, file: !270, line: 51, baseType: !321, size: 32, offset: 192)
!321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 32, elements: !166)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !270, line: 25, baseType: !33)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !290, file: !270, line: 591, baseType: !20, size: 32, offset: 832)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !290, file: !270, line: 592, baseType: !312, size: 64, offset: 896)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !290, file: !270, line: 593, baseType: !326, size: 64, offset: 960)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !290, file: !270, line: 596, baseType: !20, size: 32, offset: 1024)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !290, file: !270, line: 597, baseType: !21, size: 64, offset: 1088)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !290, file: !270, line: 632, baseType: !330, size: 2880, offset: 1152)
!330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !290, file: !270, line: 599, size: 2880, elements: !331)
!331 = !{!332, !395}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !330, file: !270, line: 622, baseType: !333, size: 1728)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !330, file: !270, line: 601, size: 1728, elements: !334)
!334 = !{!335, !336, !337, !341, !353, !354, !355, !364, !378, !379, !380, !384, !388, !389, !390, !391, !392, !393, !394}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !333, file: !270, line: 603, baseType: !33, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !333, file: !270, line: 604, baseType: !21, size: 64, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !333, file: !270, line: 605, baseType: !338, size: 208, offset: 128)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 208, elements: !339)
!339 = !{!340}
!340 = !DISubrange(count: 26)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !333, file: !270, line: 606, baseType: !342, size: 288, offset: 352)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !270, line: 55, size: 288, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !342, file: !270, line: 57, baseType: !20, size: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !342, file: !270, line: 58, baseType: !20, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !342, file: !270, line: 59, baseType: !20, size: 32, offset: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !342, file: !270, line: 60, baseType: !20, size: 32, offset: 96)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !342, file: !270, line: 61, baseType: !20, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !342, file: !270, line: 62, baseType: !20, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !342, file: !270, line: 63, baseType: !20, size: 32, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !342, file: !270, line: 64, baseType: !20, size: 32, offset: 224)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !342, file: !270, line: 65, baseType: !20, size: 32, offset: 256)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !333, file: !270, line: 607, baseType: !20, size: 32, offset: 640)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !333, file: !270, line: 608, baseType: !4, size: 64, offset: 704)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !333, file: !270, line: 609, baseType: !356, size: 112, offset: 768)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !270, line: 319, size: 112, elements: !357)
!357 = !{!358, !362, !363}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !356, file: !270, line: 320, baseType: !359, size: 48)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 48, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 3)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !356, file: !270, line: 321, baseType: !359, size: 48, offset: 48)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !356, file: !270, line: 322, baseType: !125, size: 16, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !333, file: !270, line: 610, baseType: !365, size: 64, offset: 896)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !107, line: 171, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !107, line: 163, size: 64, elements: !367)
!367 = !{!368, !369}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !366, file: !107, line: 165, baseType: !20, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !366, file: !107, line: 170, baseType: !370, size: 32, offset: 32)
!370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !366, file: !107, line: 166, size: 32, elements: !371)
!371 = !{!372, !374}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !370, file: !107, line: 168, baseType: !373, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !230, line: 124, baseType: !33)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !370, file: !107, line: 169, baseType: !375, size: 32)
!375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 32, elements: !376)
!376 = !{!377}
!377 = !DISubrange(count: 4)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !333, file: !270, line: 611, baseType: !365, size: 64, offset: 960)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !333, file: !270, line: 612, baseType: !365, size: 64, offset: 1024)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !333, file: !270, line: 613, baseType: !381, size: 64, offset: 1088)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 8)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !333, file: !270, line: 614, baseType: !385, size: 192, offset: 1152)
!385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 192, elements: !386)
!386 = !{!387}
!387 = !DISubrange(count: 24)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !333, file: !270, line: 615, baseType: !20, size: 32, offset: 1344)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !333, file: !270, line: 616, baseType: !365, size: 64, offset: 1376)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !333, file: !270, line: 617, baseType: !365, size: 64, offset: 1440)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !333, file: !270, line: 618, baseType: !365, size: 64, offset: 1504)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !333, file: !270, line: 619, baseType: !365, size: 64, offset: 1568)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !333, file: !270, line: 620, baseType: !365, size: 64, offset: 1632)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !333, file: !270, line: 621, baseType: !20, size: 32, offset: 1696)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !330, file: !270, line: 631, baseType: !396, size: 2880)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !330, file: !270, line: 626, size: 2880, elements: !397)
!397 = !{!398, !402}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !396, file: !270, line: 629, baseType: !399, size: 1920)
!399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 1920, elements: !400)
!400 = !{!401}
!401 = !DISubrange(count: 30)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !396, file: !270, line: 630, baseType: !403, size: 960, offset: 1920)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 960, elements: !400)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !290, file: !270, line: 636, baseType: !405, size: 64, offset: 4032)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !270, line: 93, size: 6336, elements: !407)
!407 = !{!408, !409, !410, !417}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !406, file: !270, line: 94, baseType: !405, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !406, file: !270, line: 95, baseType: !20, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !406, file: !270, line: 97, baseType: !411, size: 2048, offset: 128)
!411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 2048, elements: !415)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{null}
!415 = !{!416}
!416 = !DISubrange(count: 32)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !406, file: !270, line: 98, baseType: !418, size: 4160, offset: 2176)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !270, line: 74, size: 4160, elements: !419)
!419 = !{!420, !422, !423, !424}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !418, file: !270, line: 75, baseType: !421, size: 2048)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 2048, elements: !415)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !418, file: !270, line: 76, baseType: !421, size: 2048, offset: 2048)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !418, file: !270, line: 78, baseType: !322, size: 32, offset: 4096)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !418, file: !270, line: 81, baseType: !322, size: 32, offset: 4128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !290, file: !270, line: 637, baseType: !406, size: 6336, offset: 4096)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !290, file: !270, line: 641, baseType: !427, size: 64, offset: 10432)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = !DISubroutineType(types: !430)
!430 = !{null, !20}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !290, file: !270, line: 646, baseType: !432, size: 192, offset: 10496)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !270, line: 291, size: 192, elements: !433)
!433 = !{!434, !436, !437}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !432, file: !270, line: 293, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !432, file: !270, line: 294, baseType: !20, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !432, file: !270, line: 295, baseType: !294, size: 64, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !290, file: !270, line: 648, baseType: !439, size: 4224, offset: 10688)
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 4224, elements: !360)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !271, file: !270, line: 199, baseType: !441, size: 64, offset: 512)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DISubroutineType(types: !443)
!443 = !{!106, !289, !13, !444, !20}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !271, file: !270, line: 202, baseType: !447, size: 64, offset: 576)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DISubroutineType(types: !449)
!449 = !{!450, !289, !13, !450, !20}
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !107, line: 114, baseType: !7)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !271, file: !270, line: 203, baseType: !452, size: 64, offset: 640)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DISubroutineType(types: !454)
!454 = !{!20, !289, !13}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !271, file: !270, line: 206, baseType: !279, size: 128, offset: 704)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !271, file: !270, line: 207, baseType: !23, size: 64, offset: 832)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !271, file: !270, line: 208, baseType: !20, size: 32, offset: 896)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !271, file: !270, line: 211, baseType: !459, size: 24, offset: 928)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 24, elements: !360)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !271, file: !270, line: 212, baseType: !461, size: 8, offset: 952)
!461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 8, elements: !166)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !271, file: !270, line: 215, baseType: !279, size: 128, offset: 960)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !271, file: !270, line: 218, baseType: !20, size: 32, offset: 1088)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !271, file: !270, line: 219, baseType: !242, size: 64, offset: 1152)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !271, file: !270, line: 222, baseType: !289, size: 64, offset: 1216)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !271, file: !270, line: 226, baseType: !467, size: 32, offset: 1280)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !107, line: 175, baseType: !468)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_RECURSIVE_T", file: !469, line: 12, baseType: !20)
!469 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/lock.h", directory: "/root/.unikraft/apps/redis/build")
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !271, file: !270, line: 228, baseType: !365, size: 64, offset: 1312)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !271, file: !270, line: 229, baseType: !20, size: 32, offset: 1376)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !264, file: !222, line: 73, baseType: !240, size: 64, offset: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "autosync", scope: !264, file: !222, line: 74, baseType: !240, size: 64, offset: 128)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "fdset", scope: !255, file: !222, line: 83, baseType: !475, size: 320)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !222, line: 77, size: 320, elements: !476)
!476 = !{!477, !479, !480, !481, !482}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "fds", scope: !475, file: !222, line: 78, baseType: !478, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !475, file: !222, line: 79, baseType: !478, size: 64, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "numfds", scope: !475, file: !222, line: 80, baseType: !20, size: 32, offset: 128)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !475, file: !222, line: 81, baseType: !240, size: 64, offset: 192)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !475, file: !222, line: 82, baseType: !261, size: 64, offset: 256)
!483 = !{!484, !485, !486}
!484 = !DILocalVariable(name: "rdb", arg: 1, scope: !217, file: !1, line: 81, type: !220)
!485 = !DILocalVariable(name: "buf", arg: 2, scope: !217, file: !1, line: 81, type: !13)
!486 = !DILocalVariable(name: "len", arg: 3, scope: !217, file: !1, line: 81, type: !55)
!487 = !DILocation(line: 81, column: 22, scope: !217)
!488 = !DILocation(line: 81, column: 33, scope: !217)
!489 = !DILocation(line: 81, column: 47, scope: !217)
!490 = !DILocalVariable(name: "r", arg: 1, scope: !491, file: !222, line: 106, type: !220)
!491 = distinct !DISubprogram(name: "rioRead", scope: !222, file: !222, line: 106, type: !492, isLocal: true, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !494)
!492 = !DISubroutineType(types: !493)
!493 = !{!229, !220, !13, !229}
!494 = !{!490, !495, !496, !497}
!495 = !DILocalVariable(name: "buf", arg: 2, scope: !491, file: !222, line: 106, type: !13)
!496 = !DILocalVariable(name: "len", arg: 3, scope: !491, file: !222, line: 106, type: !229)
!497 = !DILocalVariable(name: "bytes_to_read", scope: !498, file: !222, line: 108, type: !229)
!498 = distinct !DILexicalBlock(scope: !491, file: !222, line: 107, column: 17)
!499 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !500)
!500 = distinct !DILocation(line: 82, column: 9, scope: !501)
!501 = distinct !DILexicalBlock(scope: !217, file: !1, line: 82, column: 9)
!502 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !500)
!503 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !500)
!504 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !500)
!505 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !500)
!506 = !{!507, !205, i64 56}
!507 = !{!"_rio", !201, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !205, i64 40, !205, i64 48, !205, i64 56, !193, i64 64}
!508 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !500)
!509 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !500)
!510 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !500)
!511 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !500)
!512 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !500)
!513 = distinct !DILexicalBlock(scope: !498, file: !222, line: 109, column: 13)
!514 = !{!507, !201, i64 0}
!515 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !500)
!516 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !500)
!517 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !500)
!518 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !500)
!519 = distinct !DILexicalBlock(scope: !498, file: !222, line: 111, column: 13)
!520 = !{!507, !201, i64 32}
!521 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !500)
!522 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !500)
!523 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !500)
!524 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !500)
!525 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !500)
!526 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !500)
!527 = !{!507, !205, i64 48}
!528 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !500)
!529 = !DILocation(line: 83, column: 9, scope: !530)
!530 = distinct !DILexicalBlock(scope: !501, file: !1, line: 82, column: 36)
!531 = !DILocation(line: 88, column: 1, scope: !217)
!532 = distinct !DISubprogram(name: "rdbSaveType", scope: !1, file: !1, line: 90, type: !533, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !535)
!533 = !DISubroutineType(types: !534)
!534 = !{!20, !220, !24}
!535 = !{!536, !537}
!536 = !DILocalVariable(name: "rdb", arg: 1, scope: !532, file: !1, line: 90, type: !220)
!537 = !DILocalVariable(name: "type", arg: 2, scope: !532, file: !1, line: 90, type: !24)
!538 = !DILocation(line: 90, column: 22, scope: !532)
!539 = !DILocation(line: 90, column: 41, scope: !532)
!540 = !{!193, !193, i64 0}
!541 = !DILocalVariable(name: "rdb", arg: 1, scope: !542, file: !1, line: 72, type: !220)
!542 = distinct !DISubprogram(name: "rdbWriteRaw", scope: !1, file: !1, line: 72, type: !543, isLocal: true, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !548)
!543 = !DISubroutineType(types: !544)
!544 = !{!20, !220, !13, !545}
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !546, line: 40, baseType: !547)
!546 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/strings.h", directory: "/root/.unikraft/apps/redis/build")
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !107, line: 129, baseType: !57)
!548 = !{!541, !549, !550}
!549 = !DILocalVariable(name: "p", arg: 2, scope: !542, file: !1, line: 72, type: !13)
!550 = !DILocalVariable(name: "len", arg: 3, scope: !542, file: !1, line: 72, type: !545)
!551 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !552)
!552 = distinct !DILocation(line: 91, column: 12, scope: !532)
!553 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !552)
!554 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !552)
!555 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !552)
!556 = distinct !DILexicalBlock(scope: !542, file: !1, line: 73, column: 9)
!557 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !552)
!558 = !DILocalVariable(name: "r", arg: 1, scope: !559, file: !222, line: 93, type: !220)
!559 = distinct !DISubprogram(name: "rioWrite", scope: !222, file: !222, line: 93, type: !560, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !562)
!560 = !DISubroutineType(types: !561)
!561 = !{!229, !220, !58, !229}
!562 = !{!558, !563, !564, !565}
!563 = !DILocalVariable(name: "buf", arg: 2, scope: !559, file: !222, line: 93, type: !58)
!564 = !DILocalVariable(name: "len", arg: 3, scope: !559, file: !222, line: 93, type: !229)
!565 = !DILocalVariable(name: "bytes_to_write", scope: !566, file: !222, line: 95, type: !229)
!566 = distinct !DILexicalBlock(scope: !559, file: !222, line: 94, column: 17)
!567 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !568)
!568 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !552)
!569 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !568)
!570 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !568)
!571 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !568)
!572 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !568)
!573 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !568)
!574 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !568)
!575 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !568)
!576 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !568)
!577 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !568)
!578 = distinct !DILexicalBlock(scope: !566, file: !222, line: 96, column: 13)
!579 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !568)
!580 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !568)
!581 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !568)
!582 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !568)
!583 = distinct !DILexicalBlock(scope: !566, file: !222, line: 97, column: 13)
!584 = !{!507, !201, i64 8}
!585 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !568)
!586 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !568)
!587 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !568)
!588 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !568)
!589 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !568)
!590 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !568)
!591 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !568)
!592 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !552)
!593 = !DILocation(line: 0, scope: !542, inlinedAt: !552)
!594 = !DILocation(line: 91, column: 5, scope: !532)
!595 = distinct !DISubprogram(name: "rdbLoadType", scope: !1, file: !1, line: 97, type: !596, isLocal: false, isDefinition: true, scopeLine: 97, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !598)
!596 = !DISubroutineType(types: !597)
!597 = !{!20, !220}
!598 = !{!599, !600}
!599 = !DILocalVariable(name: "rdb", arg: 1, scope: !595, file: !1, line: 97, type: !220)
!600 = !DILocalVariable(name: "type", scope: !595, file: !1, line: 98, type: !24)
!601 = !DILocation(line: 97, column: 22, scope: !595)
!602 = !DILocation(line: 98, column: 19, scope: !595)
!603 = !DILocation(line: 98, column: 5, scope: !595)
!604 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !605)
!605 = distinct !DILocation(line: 99, column: 9, scope: !606)
!606 = distinct !DILexicalBlock(scope: !595, file: !1, line: 99, column: 9)
!607 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !605)
!608 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !605)
!609 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !605)
!610 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !605)
!611 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !605)
!612 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !605)
!613 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !605)
!614 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !605)
!615 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !605)
!616 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !605)
!617 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !605)
!618 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !605)
!619 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !605)
!620 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !605)
!621 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !605)
!622 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !605)
!623 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !605)
!624 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !605)
!625 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !605)
!626 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !605)
!627 = !DILocation(line: 100, column: 12, scope: !595)
!628 = !DILocation(line: 99, column: 9, scope: !595)
!629 = !DILocation(line: 101, column: 1, scope: !595)
!630 = distinct !DISubprogram(name: "rdbLoadTime", scope: !1, file: !1, line: 106, type: !631, isLocal: false, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !633)
!631 = !DISubroutineType(types: !632)
!632 = !{!5, !220}
!633 = !{!634, !635}
!634 = !DILocalVariable(name: "rdb", arg: 1, scope: !630, file: !1, line: 106, type: !220)
!635 = !DILocalVariable(name: "t32", scope: !630, file: !1, line: 107, type: !18)
!636 = !DILocation(line: 106, column: 25, scope: !630)
!637 = !DILocation(line: 107, column: 5, scope: !630)
!638 = !DILocation(line: 81, column: 22, scope: !217, inlinedAt: !639)
!639 = distinct !DILocation(line: 108, column: 5, scope: !630)
!640 = !DILocation(line: 81, column: 33, scope: !217, inlinedAt: !639)
!641 = !DILocation(line: 81, column: 47, scope: !217, inlinedAt: !639)
!642 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !643)
!643 = distinct !DILocation(line: 82, column: 9, scope: !501, inlinedAt: !639)
!644 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !643)
!645 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !643)
!646 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !643)
!647 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !643)
!648 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !643)
!649 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !643)
!650 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !643)
!651 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !643)
!652 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !643)
!653 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !643)
!654 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !643)
!655 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !643)
!656 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !643)
!657 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !643)
!658 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !643)
!659 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !643)
!660 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !643)
!661 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !643)
!662 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !643)
!663 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !643)
!664 = !DILocation(line: 83, column: 9, scope: !530, inlinedAt: !639)
!665 = !DILocation(line: 88, column: 1, scope: !217, inlinedAt: !639)
!666 = !DILocation(line: 109, column: 20, scope: !630)
!667 = !DILocation(line: 107, column: 13, scope: !630)
!668 = !DILocation(line: 109, column: 12, scope: !630)
!669 = !DILocation(line: 110, column: 1, scope: !630)
!670 = !DILocation(line: 109, column: 5, scope: !630)
!671 = distinct !DISubprogram(name: "rdbSaveMillisecondTime", scope: !1, file: !1, line: 112, type: !672, isLocal: false, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !674)
!672 = !DISubroutineType(types: !673)
!673 = !{!20, !220, !12}
!674 = !{!675, !676, !677}
!675 = !DILocalVariable(name: "rdb", arg: 1, scope: !671, file: !1, line: 112, type: !220)
!676 = !DILocalVariable(name: "t", arg: 2, scope: !671, file: !1, line: 112, type: !12)
!677 = !DILocalVariable(name: "t64", scope: !671, file: !1, line: 113, type: !8)
!678 = !DILocation(line: 112, column: 33, scope: !671)
!679 = !DILocation(line: 112, column: 48, scope: !671)
!680 = !DILocation(line: 113, column: 5, scope: !671)
!681 = !DILocation(line: 113, column: 13, scope: !671)
!682 = !{!205, !205, i64 0}
!683 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !684)
!684 = distinct !DILocation(line: 115, column: 12, scope: !671)
!685 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !684)
!686 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !684)
!687 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !684)
!688 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !684)
!689 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !690)
!690 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !684)
!691 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !690)
!692 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !690)
!693 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !690)
!694 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !690)
!695 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !690)
!696 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !690)
!697 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !690)
!698 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !690)
!699 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !690)
!700 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !690)
!701 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !690)
!702 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !690)
!703 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !690)
!704 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !690)
!705 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !690)
!706 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !690)
!707 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !690)
!708 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !690)
!709 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !690)
!710 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !690)
!711 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !684)
!712 = !DILocation(line: 0, scope: !542, inlinedAt: !684)
!713 = !DILocation(line: 116, column: 1, scope: !671)
!714 = !DILocation(line: 115, column: 5, scope: !671)
!715 = distinct !DISubprogram(name: "rdbLoadMillisecondTime", scope: !1, file: !1, line: 129, type: !716, isLocal: false, isDefinition: true, scopeLine: 129, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !718)
!716 = !DISubroutineType(types: !717)
!717 = !{!12, !220, !20}
!718 = !{!719, !720, !721}
!719 = !DILocalVariable(name: "rdb", arg: 1, scope: !715, file: !1, line: 129, type: !220)
!720 = !DILocalVariable(name: "rdbver", arg: 2, scope: !715, file: !1, line: 129, type: !20)
!721 = !DILocalVariable(name: "t64", scope: !715, file: !1, line: 130, type: !8)
!722 = !DILocation(line: 129, column: 39, scope: !715)
!723 = !DILocation(line: 129, column: 48, scope: !715)
!724 = !DILocation(line: 130, column: 5, scope: !715)
!725 = !DILocation(line: 81, column: 22, scope: !217, inlinedAt: !726)
!726 = distinct !DILocation(line: 131, column: 5, scope: !715)
!727 = !DILocation(line: 81, column: 33, scope: !217, inlinedAt: !726)
!728 = !DILocation(line: 81, column: 47, scope: !217, inlinedAt: !726)
!729 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !730)
!730 = distinct !DILocation(line: 82, column: 9, scope: !501, inlinedAt: !726)
!731 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !730)
!732 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !730)
!733 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !730)
!734 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !730)
!735 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !730)
!736 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !730)
!737 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !730)
!738 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !730)
!739 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !730)
!740 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !730)
!741 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !730)
!742 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !730)
!743 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !730)
!744 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !730)
!745 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !730)
!746 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !730)
!747 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !730)
!748 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !730)
!749 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !730)
!750 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !730)
!751 = !DILocation(line: 83, column: 9, scope: !530, inlinedAt: !726)
!752 = !DILocation(line: 88, column: 1, scope: !217, inlinedAt: !726)
!753 = !DILocation(line: 134, column: 23, scope: !715)
!754 = !DILocation(line: 130, column: 13, scope: !715)
!755 = !DILocation(line: 135, column: 1, scope: !715)
!756 = !DILocation(line: 134, column: 5, scope: !715)
!757 = distinct !DISubprogram(name: "rdbSaveLen", scope: !1, file: !1, line: 140, type: !758, isLocal: false, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !760)
!758 = !DISubroutineType(types: !759)
!759 = !{!20, !220, !55}
!760 = !{!761, !762, !763, !765, !766}
!761 = !DILocalVariable(name: "rdb", arg: 1, scope: !757, file: !1, line: 140, type: !220)
!762 = !DILocalVariable(name: "len", arg: 2, scope: !757, file: !1, line: 140, type: !55)
!763 = !DILocalVariable(name: "buf", scope: !757, file: !1, line: 141, type: !764)
!764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 16, elements: !100)
!765 = !DILocalVariable(name: "nwritten", scope: !757, file: !1, line: 142, type: !545)
!766 = !DILocalVariable(name: "len32", scope: !767, file: !1, line: 159, type: !31)
!767 = distinct !DILexicalBlock(scope: !768, file: !1, line: 155, column: 35)
!768 = distinct !DILexicalBlock(scope: !769, file: !1, line: 155, column: 16)
!769 = distinct !DILexicalBlock(scope: !770, file: !1, line: 149, column: 16)
!770 = distinct !DILexicalBlock(scope: !757, file: !1, line: 144, column: 9)
!771 = !DILocation(line: 140, column: 21, scope: !757)
!772 = !DILocation(line: 140, column: 35, scope: !757)
!773 = !DILocation(line: 141, column: 5, scope: !757)
!774 = !DILocation(line: 141, column: 19, scope: !757)
!775 = !DILocation(line: 144, column: 13, scope: !770)
!776 = !DILocation(line: 144, column: 9, scope: !757)
!777 = !DILocation(line: 146, column: 18, scope: !778)
!778 = distinct !DILexicalBlock(scope: !770, file: !1, line: 144, column: 23)
!779 = !DILocation(line: 146, column: 16, scope: !778)
!780 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !781)
!781 = distinct !DILocation(line: 147, column: 13, scope: !782)
!782 = distinct !DILexicalBlock(scope: !778, file: !1, line: 147, column: 13)
!783 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !781)
!784 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !781)
!785 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !781)
!786 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !781)
!787 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !788)
!788 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !781)
!789 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !788)
!790 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !788)
!791 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !788)
!792 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !788)
!793 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !788)
!794 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !788)
!795 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !788)
!796 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !788)
!797 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !788)
!798 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !788)
!799 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !788)
!800 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !788)
!801 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !788)
!802 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !788)
!803 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !788)
!804 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !788)
!805 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !788)
!806 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !788)
!807 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !788)
!808 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !788)
!809 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !781)
!810 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !781)
!811 = !DILocation(line: 147, column: 13, scope: !778)
!812 = !DILocation(line: 149, column: 20, scope: !769)
!813 = !DILocation(line: 149, column: 16, scope: !770)
!814 = !DILocation(line: 151, column: 23, scope: !815)
!815 = distinct !DILexicalBlock(scope: !769, file: !1, line: 149, column: 31)
!816 = !DILocation(line: 151, column: 18, scope: !815)
!817 = !DILocation(line: 151, column: 16, scope: !815)
!818 = !DILocation(line: 152, column: 18, scope: !815)
!819 = !DILocation(line: 152, column: 9, scope: !815)
!820 = !DILocation(line: 152, column: 16, scope: !815)
!821 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !822)
!822 = distinct !DILocation(line: 153, column: 13, scope: !823)
!823 = distinct !DILexicalBlock(scope: !815, file: !1, line: 153, column: 13)
!824 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !822)
!825 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !822)
!826 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !822)
!827 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !822)
!828 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !829)
!829 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !822)
!830 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !829)
!831 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !829)
!832 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !829)
!833 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !829)
!834 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !829)
!835 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !829)
!836 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !829)
!837 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !829)
!838 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !829)
!839 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !829)
!840 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !829)
!841 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !829)
!842 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !829)
!843 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !829)
!844 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !829)
!845 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !829)
!846 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !829)
!847 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !829)
!848 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !829)
!849 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !829)
!850 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !822)
!851 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !822)
!852 = !DILocation(line: 153, column: 13, scope: !815)
!853 = !DILocation(line: 155, column: 20, scope: !768)
!854 = !DILocation(line: 155, column: 16, scope: !769)
!855 = !DILocation(line: 157, column: 16, scope: !767)
!856 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !857)
!857 = distinct !DILocation(line: 158, column: 13, scope: !858)
!858 = distinct !DILexicalBlock(scope: !767, file: !1, line: 158, column: 13)
!859 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !857)
!860 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !857)
!861 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !857)
!862 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !857)
!863 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !864)
!864 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !857)
!865 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !864)
!866 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !864)
!867 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !864)
!868 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !864)
!869 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !864)
!870 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !864)
!871 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !864)
!872 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !864)
!873 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !864)
!874 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !864)
!875 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !864)
!876 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !864)
!877 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !864)
!878 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !864)
!879 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !864)
!880 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !864)
!881 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !864)
!882 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !864)
!883 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !864)
!884 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !864)
!885 = !DILocation(line: 159, column: 26, scope: !767)
!886 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !857)
!887 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !857)
!888 = !DILocation(line: 158, column: 13, scope: !767)
!889 = !DILocation(line: 159, column: 9, scope: !767)
!890 = !DILocation(line: 159, column: 18, scope: !767)
!891 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !892)
!892 = distinct !DILocation(line: 160, column: 13, scope: !893)
!893 = distinct !DILexicalBlock(scope: !767, file: !1, line: 160, column: 13)
!894 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !892)
!895 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !892)
!896 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !892)
!897 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !898)
!898 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !892)
!899 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !898)
!900 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !898)
!901 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !898)
!902 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !898)
!903 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !898)
!904 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !898)
!905 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !898)
!906 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !898)
!907 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !898)
!908 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !898)
!909 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !898)
!910 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !898)
!911 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !898)
!912 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !898)
!913 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !898)
!914 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !898)
!915 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !898)
!916 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !898)
!917 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !898)
!918 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !898)
!919 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !892)
!920 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !892)
!921 = !DILocation(line: 142, column: 12, scope: !757)
!922 = !DILocation(line: 162, column: 5, scope: !768)
!923 = !DILocation(line: 164, column: 16, scope: !924)
!924 = distinct !DILexicalBlock(scope: !768, file: !1, line: 162, column: 12)
!925 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !926)
!926 = distinct !DILocation(line: 165, column: 13, scope: !927)
!927 = distinct !DILexicalBlock(scope: !924, file: !1, line: 165, column: 13)
!928 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !926)
!929 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !926)
!930 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !926)
!931 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !926)
!932 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !933)
!933 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !926)
!934 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !933)
!935 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !933)
!936 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !933)
!937 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !933)
!938 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !933)
!939 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !933)
!940 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !933)
!941 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !933)
!942 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !933)
!943 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !933)
!944 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !933)
!945 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !933)
!946 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !933)
!947 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !933)
!948 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !933)
!949 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !933)
!950 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !933)
!951 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !933)
!952 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !933)
!953 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !933)
!954 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !926)
!955 = !DILocation(line: 165, column: 13, scope: !924)
!956 = !DILocation(line: 166, column: 15, scope: !924)
!957 = !DILocation(line: 166, column: 13, scope: !924)
!958 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !959)
!959 = distinct !DILocation(line: 167, column: 13, scope: !960)
!960 = distinct !DILexicalBlock(scope: !924, file: !1, line: 167, column: 13)
!961 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !959)
!962 = !DILocation(line: 167, column: 29, scope: !960)
!963 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !959)
!964 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !965)
!965 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !959)
!966 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !965)
!967 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !965)
!968 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !965)
!969 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !965)
!970 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !965)
!971 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !965)
!972 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !965)
!973 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !965)
!974 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !965)
!975 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !965)
!976 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !965)
!977 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !965)
!978 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !965)
!979 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !965)
!980 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !965)
!981 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !965)
!982 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !965)
!983 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !965)
!984 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !965)
!985 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !965)
!986 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !959)
!987 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !959)
!988 = !DILocation(line: 167, column: 13, scope: !924)
!989 = !DILocation(line: 0, scope: !960)
!990 = !DILocation(line: 171, column: 1, scope: !757)
!991 = distinct !DISubprogram(name: "rdbLoadLenByRef", scope: !1, file: !1, line: 183, type: !992, isLocal: false, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !995)
!992 = !DISubroutineType(types: !993)
!993 = !{!20, !220, !478, !994}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!995 = !{!996, !997, !998, !999, !1000, !1001, !1007}
!996 = !DILocalVariable(name: "rdb", arg: 1, scope: !991, file: !1, line: 183, type: !220)
!997 = !DILocalVariable(name: "isencoded", arg: 2, scope: !991, file: !1, line: 183, type: !478)
!998 = !DILocalVariable(name: "lenptr", arg: 3, scope: !991, file: !1, line: 183, type: !994)
!999 = !DILocalVariable(name: "buf", scope: !991, file: !1, line: 184, type: !764)
!1000 = !DILocalVariable(name: "type", scope: !991, file: !1, line: 185, type: !20)
!1001 = !DILocalVariable(name: "len", scope: !1002, file: !1, line: 203, type: !31)
!1002 = distinct !DILexicalBlock(scope: !1003, file: !1, line: 201, column: 40)
!1003 = distinct !DILexicalBlock(scope: !1004, file: !1, line: 201, column: 16)
!1004 = distinct !DILexicalBlock(scope: !1005, file: !1, line: 197, column: 16)
!1005 = distinct !DILexicalBlock(scope: !1006, file: !1, line: 194, column: 16)
!1006 = distinct !DILexicalBlock(scope: !991, file: !1, line: 190, column: 9)
!1007 = !DILocalVariable(name: "len", scope: !1008, file: !1, line: 208, type: !55)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !1, line: 206, column: 40)
!1009 = distinct !DILexicalBlock(scope: !1003, file: !1, line: 206, column: 16)
!1010 = !DILocation(line: 183, column: 26, scope: !991)
!1011 = !DILocation(line: 183, column: 36, scope: !991)
!1012 = !DILocation(line: 183, column: 57, scope: !991)
!1013 = !DILocation(line: 184, column: 5, scope: !991)
!1014 = !DILocation(line: 184, column: 19, scope: !991)
!1015 = !DILocation(line: 187, column: 9, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !991, file: !1, line: 187, column: 9)
!1017 = !DILocation(line: 187, column: 9, scope: !991)
!1018 = !DILocation(line: 187, column: 31, scope: !1016)
!1019 = !DILocation(line: 187, column: 20, scope: !1016)
!1020 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1021)
!1021 = distinct !DILocation(line: 188, column: 9, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !991, file: !1, line: 188, column: 9)
!1023 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1021)
!1024 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1021)
!1025 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1021)
!1026 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1021)
!1027 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1021)
!1028 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1021)
!1029 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1021)
!1030 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1021)
!1031 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !1021)
!1032 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !1021)
!1033 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !1021)
!1034 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1021)
!1035 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1021)
!1036 = !DILocation(line: 188, column: 9, scope: !991)
!1037 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !1021)
!1038 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !1021)
!1039 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1021)
!1040 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !1021)
!1041 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1021)
!1042 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1021)
!1043 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1021)
!1044 = !DILocation(line: 189, column: 13, scope: !991)
!1045 = !DILocation(line: 189, column: 25, scope: !991)
!1046 = !DILocation(line: 185, column: 9, scope: !991)
!1047 = !DILocation(line: 190, column: 9, scope: !991)
!1048 = !DILocation(line: 192, column: 13, scope: !1049)
!1049 = distinct !DILexicalBlock(scope: !1006, file: !1, line: 190, column: 29)
!1050 = !DILocation(line: 192, column: 35, scope: !1051)
!1051 = distinct !DILexicalBlock(scope: !1049, file: !1, line: 192, column: 13)
!1052 = !DILocation(line: 192, column: 24, scope: !1051)
!1053 = !DILocation(line: 193, column: 25, scope: !1049)
!1054 = !DILocation(line: 193, column: 19, scope: !1049)
!1055 = !DILocation(line: 193, column: 17, scope: !1049)
!1056 = !DILocation(line: 194, column: 5, scope: !1049)
!1057 = !DILocation(line: 196, column: 25, scope: !1058)
!1058 = distinct !DILexicalBlock(scope: !1005, file: !1, line: 194, column: 37)
!1059 = !DILocation(line: 196, column: 19, scope: !1058)
!1060 = !DILocation(line: 196, column: 17, scope: !1058)
!1061 = !DILocation(line: 197, column: 5, scope: !1058)
!1062 = !DILocation(line: 199, column: 28, scope: !1063)
!1063 = distinct !DILexicalBlock(scope: !1064, file: !1, line: 199, column: 13)
!1064 = distinct !DILexicalBlock(scope: !1004, file: !1, line: 197, column: 38)
!1065 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1066)
!1066 = distinct !DILocation(line: 199, column: 13, scope: !1063)
!1067 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1066)
!1068 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1066)
!1069 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1066)
!1070 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1066)
!1071 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1066)
!1072 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1066)
!1073 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1066)
!1074 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1066)
!1075 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !1066)
!1076 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !1066)
!1077 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !1066)
!1078 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1066)
!1079 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1066)
!1080 = !DILocation(line: 199, column: 13, scope: !1064)
!1081 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !1066)
!1082 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !1066)
!1083 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1066)
!1084 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !1066)
!1085 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1066)
!1086 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1066)
!1087 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1066)
!1088 = !DILocation(line: 200, column: 21, scope: !1064)
!1089 = !DILocation(line: 200, column: 27, scope: !1064)
!1090 = !DILocation(line: 200, column: 33, scope: !1064)
!1091 = !DILocation(line: 200, column: 38, scope: !1064)
!1092 = !DILocation(line: 200, column: 37, scope: !1064)
!1093 = !DILocation(line: 200, column: 17, scope: !1064)
!1094 = !DILocation(line: 201, column: 5, scope: !1064)
!1095 = !DILocation(line: 201, column: 16, scope: !1004)
!1096 = !DILocation(line: 203, column: 9, scope: !1002)
!1097 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1098)
!1098 = distinct !DILocation(line: 204, column: 13, scope: !1099)
!1099 = distinct !DILexicalBlock(scope: !1002, file: !1, line: 204, column: 13)
!1100 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1098)
!1101 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1098)
!1102 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1098)
!1103 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1098)
!1104 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1098)
!1105 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1098)
!1106 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1098)
!1107 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1098)
!1108 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !1098)
!1109 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !1098)
!1110 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !1098)
!1111 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1098)
!1112 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !1098)
!1113 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !1098)
!1114 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1098)
!1115 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !1098)
!1116 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1098)
!1117 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1098)
!1118 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1098)
!1119 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1098)
!1120 = !DILocation(line: 205, column: 19, scope: !1002)
!1121 = !DILocation(line: 203, column: 18, scope: !1002)
!1122 = !DILocation(line: 205, column: 17, scope: !1002)
!1123 = !DILocation(line: 206, column: 5, scope: !1003)
!1124 = !DILocation(line: 208, column: 9, scope: !1008)
!1125 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1126)
!1126 = distinct !DILocation(line: 209, column: 13, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1008, file: !1, line: 209, column: 13)
!1128 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1126)
!1129 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1126)
!1130 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1126)
!1131 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1126)
!1132 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1126)
!1133 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1126)
!1134 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1126)
!1135 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1126)
!1136 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !1126)
!1137 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !1126)
!1138 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !1126)
!1139 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1126)
!1140 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !1126)
!1141 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !1126)
!1142 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1126)
!1143 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !1126)
!1144 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1126)
!1145 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1126)
!1146 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1126)
!1147 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1126)
!1148 = !DILocation(line: 210, column: 19, scope: !1008)
!1149 = !DILocation(line: 208, column: 18, scope: !1008)
!1150 = !DILocation(line: 210, column: 17, scope: !1008)
!1151 = !DILocation(line: 211, column: 5, scope: !1009)
!1152 = !DILocation(line: 212, column: 9, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1009, file: !1, line: 211, column: 12)
!1154 = !DILocation(line: 0, scope: !1153)
!1155 = !DILocation(line: 217, column: 1, scope: !991)
!1156 = distinct !DISubprogram(name: "rdbLoadLen", scope: !1, file: !1, line: 223, type: !1157, isLocal: false, isDefinition: true, scopeLine: 223, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1159)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!55, !220, !478}
!1159 = !{!1160, !1161, !1162}
!1160 = !DILocalVariable(name: "rdb", arg: 1, scope: !1156, file: !1, line: 223, type: !220)
!1161 = !DILocalVariable(name: "isencoded", arg: 2, scope: !1156, file: !1, line: 223, type: !478)
!1162 = !DILocalVariable(name: "len", scope: !1156, file: !1, line: 224, type: !55)
!1163 = !DILocation(line: 223, column: 26, scope: !1156)
!1164 = !DILocation(line: 223, column: 36, scope: !1156)
!1165 = !DILocation(line: 224, column: 5, scope: !1156)
!1166 = !DILocation(line: 224, column: 14, scope: !1156)
!1167 = !DILocation(line: 226, column: 9, scope: !1168)
!1168 = distinct !DILexicalBlock(scope: !1156, file: !1, line: 226, column: 9)
!1169 = !DILocation(line: 226, column: 45, scope: !1168)
!1170 = !DILocation(line: 227, column: 12, scope: !1156)
!1171 = !DILocation(line: 226, column: 9, scope: !1156)
!1172 = !DILocation(line: 228, column: 1, scope: !1156)
!1173 = distinct !DISubprogram(name: "rdbEncodeInteger", scope: !1, file: !1, line: 234, type: !1174, isLocal: false, isDefinition: true, scopeLine: 234, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1176)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!20, !12, !23}
!1176 = !{!1177, !1178}
!1177 = !DILocalVariable(name: "value", arg: 1, scope: !1173, file: !1, line: 234, type: !12)
!1178 = !DILocalVariable(name: "enc", arg: 2, scope: !1173, file: !1, line: 234, type: !23)
!1179 = !DILocation(line: 234, column: 32, scope: !1173)
!1180 = !DILocation(line: 234, column: 54, scope: !1173)
!1181 = !DILocation(line: 235, column: 26, scope: !1182)
!1182 = distinct !DILexicalBlock(scope: !1173, file: !1, line: 235, column: 9)
!1183 = !DILocation(line: 236, column: 16, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1182, file: !1, line: 235, column: 48)
!1185 = !DILocation(line: 238, column: 9, scope: !1184)
!1186 = !DILocation(line: 239, column: 34, scope: !1187)
!1187 = distinct !DILexicalBlock(scope: !1182, file: !1, line: 239, column: 16)
!1188 = !DILocation(line: 240, column: 16, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !1187, file: !1, line: 239, column: 57)
!1190 = !DILocation(line: 241, column: 18, scope: !1189)
!1191 = !DILocation(line: 241, column: 9, scope: !1189)
!1192 = !DILocation(line: 241, column: 16, scope: !1189)
!1193 = !DILocation(line: 242, column: 24, scope: !1189)
!1194 = !DILocation(line: 243, column: 9, scope: !1189)
!1195 = !DILocation(line: 244, column: 45, scope: !1196)
!1196 = distinct !DILexicalBlock(scope: !1187, file: !1, line: 244, column: 16)
!1197 = !DILocation(line: 245, column: 16, scope: !1198)
!1198 = distinct !DILexicalBlock(scope: !1196, file: !1, line: 244, column: 79)
!1199 = !DILocation(line: 246, column: 18, scope: !1198)
!1200 = !DILocation(line: 246, column: 9, scope: !1198)
!1201 = !DILocation(line: 246, column: 16, scope: !1198)
!1202 = !DILocation(line: 247, column: 24, scope: !1198)
!1203 = !DILocation(line: 247, column: 18, scope: !1198)
!1204 = !DILocation(line: 247, column: 9, scope: !1198)
!1205 = !DILocation(line: 247, column: 16, scope: !1198)
!1206 = !DILocation(line: 248, column: 24, scope: !1198)
!1207 = !DILocation(line: 248, column: 18, scope: !1198)
!1208 = !DILocation(line: 248, column: 9, scope: !1198)
!1209 = !DILocation(line: 248, column: 16, scope: !1198)
!1210 = !DILocation(line: 249, column: 24, scope: !1198)
!1211 = !DILocation(line: 250, column: 9, scope: !1198)
!1212 = !DILocation(line: 0, scope: !1184)
!1213 = !DILocation(line: 254, column: 1, scope: !1173)
!1214 = !DILocation(line: 0, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1196, file: !1, line: 251, column: 12)
!1216 = distinct !DISubprogram(name: "rdbLoadIntegerObject", scope: !1, file: !1, line: 259, type: !1217, isLocal: false, isDefinition: true, scopeLine: 259, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1220)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!13, !220, !20, !20, !1219}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!1220 = !{!1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1234, !1237, !1243, !1244}
!1221 = !DILocalVariable(name: "rdb", arg: 1, scope: !1216, file: !1, line: 259, type: !220)
!1222 = !DILocalVariable(name: "enctype", arg: 2, scope: !1216, file: !1, line: 259, type: !20)
!1223 = !DILocalVariable(name: "flags", arg: 3, scope: !1216, file: !1, line: 259, type: !20)
!1224 = !DILocalVariable(name: "lenptr", arg: 4, scope: !1216, file: !1, line: 259, type: !1219)
!1225 = !DILocalVariable(name: "plain", scope: !1216, file: !1, line: 260, type: !20)
!1226 = !DILocalVariable(name: "sds", scope: !1216, file: !1, line: 261, type: !20)
!1227 = !DILocalVariable(name: "encode", scope: !1216, file: !1, line: 262, type: !20)
!1228 = !DILocalVariable(name: "enc", scope: !1216, file: !1, line: 263, type: !375)
!1229 = !DILocalVariable(name: "val", scope: !1216, file: !1, line: 264, type: !12)
!1230 = !DILocalVariable(name: "v", scope: !1231, file: !1, line: 270, type: !123)
!1231 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 269, column: 42)
!1232 = distinct !DILexicalBlock(scope: !1233, file: !1, line: 269, column: 16)
!1233 = distinct !DILexicalBlock(scope: !1216, file: !1, line: 266, column: 9)
!1234 = !DILocalVariable(name: "v", scope: !1235, file: !1, line: 275, type: !31)
!1235 = distinct !DILexicalBlock(scope: !1236, file: !1, line: 274, column: 42)
!1236 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 274, column: 16)
!1237 = !DILocalVariable(name: "buf", scope: !1238, file: !1, line: 284, type: !1240)
!1238 = distinct !DILexicalBlock(scope: !1239, file: !1, line: 283, column: 23)
!1239 = distinct !DILexicalBlock(scope: !1216, file: !1, line: 283, column: 9)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 168, elements: !1241)
!1241 = !{!1242}
!1242 = !DISubrange(count: 21)
!1243 = !DILocalVariable(name: "p", scope: !1238, file: !1, line: 284, type: !21)
!1244 = !DILocalVariable(name: "len", scope: !1238, file: !1, line: 285, type: !20)
!1245 = !DILocation(line: 259, column: 33, scope: !1216)
!1246 = !DILocation(line: 259, column: 42, scope: !1216)
!1247 = !DILocation(line: 259, column: 55, scope: !1216)
!1248 = !DILocation(line: 259, column: 70, scope: !1216)
!1249 = !DILocation(line: 260, column: 23, scope: !1216)
!1250 = !DILocation(line: 260, column: 9, scope: !1216)
!1251 = !DILocation(line: 261, column: 9, scope: !1216)
!1252 = !DILocation(line: 262, column: 24, scope: !1216)
!1253 = !DILocation(line: 262, column: 9, scope: !1216)
!1254 = !DILocation(line: 263, column: 5, scope: !1216)
!1255 = !DILocation(line: 263, column: 19, scope: !1216)
!1256 = !DILocation(line: 266, column: 9, scope: !1216)
!1257 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1258)
!1258 = distinct !DILocation(line: 267, column: 13, scope: !1259)
!1259 = distinct !DILexicalBlock(scope: !1260, file: !1, line: 267, column: 13)
!1260 = distinct !DILexicalBlock(scope: !1233, file: !1, line: 266, column: 34)
!1261 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1258)
!1262 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1258)
!1263 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1258)
!1264 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1258)
!1265 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1258)
!1266 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1258)
!1267 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1258)
!1268 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1258)
!1269 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !1258)
!1270 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !1258)
!1271 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !1258)
!1272 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1258)
!1273 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1258)
!1274 = !DILocation(line: 267, column: 13, scope: !1260)
!1275 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !1258)
!1276 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !1258)
!1277 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1258)
!1278 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !1258)
!1279 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1258)
!1280 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1258)
!1281 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1258)
!1282 = !DILocation(line: 268, column: 28, scope: !1260)
!1283 = !DILocation(line: 268, column: 15, scope: !1260)
!1284 = !DILocation(line: 264, column: 15, scope: !1216)
!1285 = !DILocation(line: 269, column: 5, scope: !1260)
!1286 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1287)
!1287 = distinct !DILocation(line: 271, column: 13, scope: !1288)
!1288 = distinct !DILexicalBlock(scope: !1231, file: !1, line: 271, column: 13)
!1289 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1287)
!1290 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1287)
!1291 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1287)
!1292 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1287)
!1293 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1287)
!1294 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1287)
!1295 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1287)
!1296 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1287)
!1297 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !1287)
!1298 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !1287)
!1299 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !1287)
!1300 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1287)
!1301 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !1287)
!1302 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !1287)
!1303 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1287)
!1304 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !1287)
!1305 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1287)
!1306 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1287)
!1307 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1287)
!1308 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1287)
!1309 = !DILocation(line: 272, column: 13, scope: !1231)
!1310 = !DILocation(line: 272, column: 21, scope: !1231)
!1311 = !DILocation(line: 272, column: 27, scope: !1231)
!1312 = !DILocation(line: 272, column: 19, scope: !1231)
!1313 = !DILocation(line: 270, column: 18, scope: !1231)
!1314 = !DILocation(line: 273, column: 15, scope: !1231)
!1315 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1316)
!1316 = distinct !DILocation(line: 276, column: 13, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !1235, file: !1, line: 276, column: 13)
!1318 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1316)
!1319 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1316)
!1320 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1316)
!1321 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1316)
!1322 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1316)
!1323 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1316)
!1324 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1316)
!1325 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1316)
!1326 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !1316)
!1327 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !1316)
!1328 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !1316)
!1329 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1316)
!1330 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !1316)
!1331 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !1316)
!1332 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1316)
!1333 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !1316)
!1334 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1316)
!1335 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1316)
!1336 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1316)
!1337 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1316)
!1338 = !DILocation(line: 277, column: 13, scope: !1235)
!1339 = !DILocation(line: 277, column: 21, scope: !1235)
!1340 = !DILocation(line: 277, column: 27, scope: !1235)
!1341 = !DILocation(line: 277, column: 19, scope: !1235)
!1342 = !DILocation(line: 277, column: 33, scope: !1235)
!1343 = !DILocation(line: 277, column: 39, scope: !1235)
!1344 = !DILocation(line: 277, column: 31, scope: !1235)
!1345 = !DILocation(line: 277, column: 46, scope: !1235)
!1346 = !DILocation(line: 277, column: 52, scope: !1235)
!1347 = !DILocation(line: 277, column: 44, scope: !1235)
!1348 = !DILocation(line: 275, column: 18, scope: !1235)
!1349 = !DILocation(line: 278, column: 15, scope: !1235)
!1350 = !DILocation(line: 281, column: 9, scope: !1351)
!1351 = distinct !DILexicalBlock(scope: !1236, file: !1, line: 279, column: 12)
!1352 = !DILocation(line: 283, column: 9, scope: !1239)
!1353 = !DILocation(line: 283, column: 15, scope: !1239)
!1354 = !DILocation(line: 284, column: 9, scope: !1238)
!1355 = !DILocation(line: 284, column: 14, scope: !1238)
!1356 = !DILocation(line: 285, column: 19, scope: !1238)
!1357 = !DILocation(line: 285, column: 13, scope: !1238)
!1358 = !DILocation(line: 286, column: 13, scope: !1359)
!1359 = distinct !DILexicalBlock(scope: !1238, file: !1, line: 286, column: 13)
!1360 = !DILocation(line: 286, column: 13, scope: !1238)
!1361 = !DILocation(line: 286, column: 31, scope: !1359)
!1362 = !DILocation(line: 286, column: 29, scope: !1359)
!1363 = !DILocation(line: 286, column: 21, scope: !1359)
!1364 = !DILocation(line: 287, column: 13, scope: !1238)
!1365 = !DILocation(line: 287, column: 29, scope: !1238)
!1366 = !DILocation(line: 287, column: 21, scope: !1238)
!1367 = !DILocation(line: 287, column: 46, scope: !1238)
!1368 = !DILocation(line: 287, column: 57, scope: !1238)
!1369 = !DILocation(line: 287, column: 36, scope: !1238)
!1370 = !DILocation(line: 288, column: 22, scope: !1238)
!1371 = !DILocation(line: 284, column: 35, scope: !1238)
!1372 = !DILocation(line: 288, column: 9, scope: !1238)
!1373 = !DILocation(line: 290, column: 5, scope: !1239)
!1374 = !DILocation(line: 290, column: 16, scope: !1375)
!1375 = distinct !DILexicalBlock(scope: !1239, file: !1, line: 290, column: 16)
!1376 = !DILocation(line: 290, column: 16, scope: !1239)
!1377 = !DILocation(line: 291, column: 16, scope: !1378)
!1378 = distinct !DILexicalBlock(scope: !1375, file: !1, line: 290, column: 24)
!1379 = !DILocation(line: 291, column: 9, scope: !1378)
!1380 = !DILocation(line: 293, column: 40, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1375, file: !1, line: 292, column: 12)
!1382 = !DILocation(line: 293, column: 16, scope: !1381)
!1383 = !DILocation(line: 293, column: 9, scope: !1381)
!1384 = !DILocation(line: 0, scope: !1317)
!1385 = !DILocation(line: 295, column: 1, scope: !1216)
!1386 = distinct !DISubprogram(name: "rdbTryIntegerEncoding", scope: !1, file: !1, line: 300, type: !1387, isLocal: false, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1389)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!20, !21, !545, !23}
!1389 = !{!1390, !1391, !1392, !1393, !1394, !1395}
!1390 = !DILocalVariable(name: "s", arg: 1, scope: !1386, file: !1, line: 300, type: !21)
!1391 = !DILocalVariable(name: "len", arg: 2, scope: !1386, file: !1, line: 300, type: !545)
!1392 = !DILocalVariable(name: "enc", arg: 3, scope: !1386, file: !1, line: 300, type: !23)
!1393 = !DILocalVariable(name: "value", scope: !1386, file: !1, line: 301, type: !12)
!1394 = !DILocalVariable(name: "endptr", scope: !1386, file: !1, line: 302, type: !21)
!1395 = !DILocalVariable(name: "buf", scope: !1386, file: !1, line: 302, type: !1396)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 256, elements: !415)
!1397 = !DILocation(line: 300, column: 33, scope: !1386)
!1398 = !DILocation(line: 300, column: 43, scope: !1386)
!1399 = !DILocation(line: 300, column: 63, scope: !1386)
!1400 = !DILocation(line: 302, column: 5, scope: !1386)
!1401 = !DILocation(line: 302, column: 19, scope: !1386)
!1402 = !DILocation(line: 302, column: 11, scope: !1386)
!1403 = !DILocation(line: 305, column: 13, scope: !1386)
!1404 = !DILocation(line: 301, column: 15, scope: !1386)
!1405 = !DILocation(line: 306, column: 9, scope: !1406)
!1406 = distinct !DILexicalBlock(scope: !1386, file: !1, line: 306, column: 9)
!1407 = !DILocation(line: 306, column: 19, scope: !1406)
!1408 = !DILocation(line: 306, column: 9, scope: !1386)
!1409 = !DILocation(line: 307, column: 5, scope: !1386)
!1410 = !DILocation(line: 311, column: 9, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !1386, file: !1, line: 311, column: 9)
!1412 = !DILocation(line: 311, column: 21, scope: !1411)
!1413 = !DILocation(line: 311, column: 28, scope: !1411)
!1414 = !DILocation(line: 311, column: 31, scope: !1411)
!1415 = !DILocation(line: 311, column: 9, scope: !1386)
!1416 = !DILocation(line: 234, column: 32, scope: !1173, inlinedAt: !1417)
!1417 = distinct !DILocation(line: 313, column: 12, scope: !1386)
!1418 = !DILocation(line: 234, column: 54, scope: !1173, inlinedAt: !1417)
!1419 = !DILocation(line: 235, column: 26, scope: !1182, inlinedAt: !1417)
!1420 = !DILocation(line: 236, column: 16, scope: !1184, inlinedAt: !1417)
!1421 = !DILocation(line: 238, column: 9, scope: !1184, inlinedAt: !1417)
!1422 = !DILocation(line: 239, column: 34, scope: !1187, inlinedAt: !1417)
!1423 = !DILocation(line: 240, column: 16, scope: !1189, inlinedAt: !1417)
!1424 = !DILocation(line: 241, column: 18, scope: !1189, inlinedAt: !1417)
!1425 = !DILocation(line: 241, column: 9, scope: !1189, inlinedAt: !1417)
!1426 = !DILocation(line: 241, column: 16, scope: !1189, inlinedAt: !1417)
!1427 = !DILocation(line: 242, column: 24, scope: !1189, inlinedAt: !1417)
!1428 = !DILocation(line: 243, column: 9, scope: !1189, inlinedAt: !1417)
!1429 = !DILocation(line: 244, column: 45, scope: !1196, inlinedAt: !1417)
!1430 = !DILocation(line: 245, column: 16, scope: !1198, inlinedAt: !1417)
!1431 = !DILocation(line: 246, column: 18, scope: !1198, inlinedAt: !1417)
!1432 = !DILocation(line: 246, column: 9, scope: !1198, inlinedAt: !1417)
!1433 = !DILocation(line: 246, column: 16, scope: !1198, inlinedAt: !1417)
!1434 = !DILocation(line: 247, column: 24, scope: !1198, inlinedAt: !1417)
!1435 = !DILocation(line: 247, column: 18, scope: !1198, inlinedAt: !1417)
!1436 = !DILocation(line: 247, column: 9, scope: !1198, inlinedAt: !1417)
!1437 = !DILocation(line: 247, column: 16, scope: !1198, inlinedAt: !1417)
!1438 = !DILocation(line: 248, column: 24, scope: !1198, inlinedAt: !1417)
!1439 = !DILocation(line: 248, column: 18, scope: !1198, inlinedAt: !1417)
!1440 = !DILocation(line: 248, column: 9, scope: !1198, inlinedAt: !1417)
!1441 = !DILocation(line: 248, column: 16, scope: !1198, inlinedAt: !1417)
!1442 = !DILocation(line: 249, column: 24, scope: !1198, inlinedAt: !1417)
!1443 = !DILocation(line: 250, column: 9, scope: !1198, inlinedAt: !1417)
!1444 = !DILocation(line: 0, scope: !1386)
!1445 = !DILocation(line: 254, column: 1, scope: !1173, inlinedAt: !1417)
!1446 = !DILocation(line: 0, scope: !1215, inlinedAt: !1417)
!1447 = !DILocation(line: 313, column: 5, scope: !1386)
!1448 = !DILocation(line: 314, column: 1, scope: !1386)
!1449 = distinct !DISubprogram(name: "rdbSaveLzfBlob", scope: !1, file: !1, line: 316, type: !1450, isLocal: false, isDefinition: true, scopeLine: 317, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1452)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!104, !220, !13, !545, !545}
!1452 = !{!1453, !1454, !1455, !1456, !1457, !1458, !1459}
!1453 = !DILocalVariable(name: "rdb", arg: 1, scope: !1449, file: !1, line: 316, type: !220)
!1454 = !DILocalVariable(name: "data", arg: 2, scope: !1449, file: !1, line: 316, type: !13)
!1455 = !DILocalVariable(name: "compress_len", arg: 3, scope: !1449, file: !1, line: 316, type: !545)
!1456 = !DILocalVariable(name: "original_len", arg: 4, scope: !1449, file: !1, line: 317, type: !545)
!1457 = !DILocalVariable(name: "byte", scope: !1449, file: !1, line: 318, type: !24)
!1458 = !DILocalVariable(name: "n", scope: !1449, file: !1, line: 319, type: !104)
!1459 = !DILocalVariable(name: "nwritten", scope: !1449, file: !1, line: 319, type: !104)
!1460 = !DILocation(line: 316, column: 29, scope: !1449)
!1461 = !DILocation(line: 316, column: 40, scope: !1449)
!1462 = !DILocation(line: 316, column: 53, scope: !1449)
!1463 = !DILocation(line: 317, column: 31, scope: !1449)
!1464 = !DILocation(line: 318, column: 19, scope: !1449)
!1465 = !DILocation(line: 318, column: 5, scope: !1449)
!1466 = !DILocation(line: 319, column: 16, scope: !1449)
!1467 = !DILocation(line: 322, column: 10, scope: !1449)
!1468 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !1469)
!1469 = distinct !DILocation(line: 323, column: 14, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1449, file: !1, line: 323, column: 9)
!1471 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !1469)
!1472 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !1469)
!1473 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !1469)
!1474 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !1469)
!1475 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !1476)
!1476 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !1469)
!1477 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !1476)
!1478 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !1476)
!1479 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !1476)
!1480 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !1476)
!1481 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !1476)
!1482 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !1476)
!1483 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !1476)
!1484 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !1476)
!1485 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !1476)
!1486 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !1476)
!1487 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !1476)
!1488 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !1476)
!1489 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !1476)
!1490 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !1476)
!1491 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !1476)
!1492 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !1476)
!1493 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !1476)
!1494 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !1476)
!1495 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !1476)
!1496 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !1476)
!1497 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !1469)
!1498 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !1469)
!1499 = !DILocation(line: 323, column: 9, scope: !1449)
!1500 = !DILocation(line: 326, column: 14, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1449, file: !1, line: 326, column: 9)
!1502 = !DILocation(line: 326, column: 44, scope: !1501)
!1503 = !DILocation(line: 326, column: 9, scope: !1449)
!1504 = !DILocation(line: 329, column: 14, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1449, file: !1, line: 329, column: 9)
!1506 = !DILocation(line: 329, column: 44, scope: !1505)
!1507 = !DILocation(line: 329, column: 9, scope: !1449)
!1508 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !1509)
!1509 = distinct !DILocation(line: 332, column: 14, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1449, file: !1, line: 332, column: 9)
!1511 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !1509)
!1512 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !1509)
!1513 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !1509)
!1514 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !1515)
!1515 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !1509)
!1516 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !1515)
!1517 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !1515)
!1518 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !1515)
!1519 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !1515)
!1520 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !1515)
!1521 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !1515)
!1522 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !1515)
!1523 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !1515)
!1524 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !1515)
!1525 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !1515)
!1526 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !1515)
!1527 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !1515)
!1528 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !1515)
!1529 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !1515)
!1530 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !1515)
!1531 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !1515)
!1532 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !1515)
!1533 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !1515)
!1534 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !1515)
!1535 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !1515)
!1536 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !1509)
!1537 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !1509)
!1538 = !DILocation(line: 332, column: 9, scope: !1449)
!1539 = !DILocation(line: 75, column: 12, scope: !542, inlinedAt: !1509)
!1540 = !DILocation(line: 332, column: 50, scope: !1510)
!1541 = !DILocation(line: 332, column: 14, scope: !1510)
!1542 = !DILocation(line: 319, column: 13, scope: !1449)
!1543 = !DILocation(line: 327, column: 14, scope: !1449)
!1544 = !DILocation(line: 330, column: 14, scope: !1449)
!1545 = !DILocation(line: 333, column: 14, scope: !1449)
!1546 = !DILocation(line: 335, column: 5, scope: !1449)
!1547 = !DILocation(line: 0, scope: !1449)
!1548 = !DILocation(line: 339, column: 1, scope: !1449)
!1549 = distinct !DISubprogram(name: "rdbSaveLzfStringObject", scope: !1, file: !1, line: 341, type: !1550, isLocal: false, isDefinition: true, scopeLine: 341, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1552)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!104, !220, !23, !545}
!1552 = !{!1553, !1554, !1555, !1556, !1557, !1558, !1559}
!1553 = !DILocalVariable(name: "rdb", arg: 1, scope: !1549, file: !1, line: 341, type: !220)
!1554 = !DILocalVariable(name: "s", arg: 2, scope: !1549, file: !1, line: 341, type: !23)
!1555 = !DILocalVariable(name: "len", arg: 3, scope: !1549, file: !1, line: 341, type: !545)
!1556 = !DILocalVariable(name: "comprlen", scope: !1549, file: !1, line: 342, type: !545)
!1557 = !DILocalVariable(name: "outlen", scope: !1549, file: !1, line: 342, type: !545)
!1558 = !DILocalVariable(name: "out", scope: !1549, file: !1, line: 343, type: !13)
!1559 = !DILocalVariable(name: "nwritten", scope: !1549, file: !1, line: 354, type: !104)
!1560 = !DILocation(line: 341, column: 37, scope: !1549)
!1561 = !DILocation(line: 341, column: 57, scope: !1549)
!1562 = !DILocation(line: 341, column: 67, scope: !1549)
!1563 = !DILocation(line: 346, column: 13, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 346, column: 9)
!1565 = !DILocation(line: 346, column: 9, scope: !1549)
!1566 = !DILocation(line: 342, column: 22, scope: !1549)
!1567 = !DILocation(line: 348, column: 30, scope: !1568)
!1568 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 348, column: 9)
!1569 = !DILocation(line: 348, column: 16, scope: !1568)
!1570 = !DILocation(line: 343, column: 11, scope: !1549)
!1571 = !DILocation(line: 348, column: 35, scope: !1568)
!1572 = !DILocation(line: 348, column: 9, scope: !1549)
!1573 = !DILocation(line: 349, column: 32, scope: !1549)
!1574 = !DILocation(line: 349, column: 42, scope: !1549)
!1575 = !DILocation(line: 349, column: 16, scope: !1549)
!1576 = !DILocation(line: 350, column: 18, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 350, column: 9)
!1578 = !DILocation(line: 350, column: 9, scope: !1549)
!1579 = !DILocation(line: 351, column: 9, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1577, file: !1, line: 350, column: 24)
!1581 = !DILocation(line: 352, column: 9, scope: !1580)
!1582 = !DILocation(line: 342, column: 12, scope: !1549)
!1583 = !DILocation(line: 354, column: 24, scope: !1549)
!1584 = !DILocation(line: 354, column: 13, scope: !1549)
!1585 = !DILocation(line: 355, column: 5, scope: !1549)
!1586 = !DILocation(line: 0, scope: !1549)
!1587 = !DILocation(line: 357, column: 1, scope: !1549)
!1588 = distinct !DISubprogram(name: "rdbLoadLzfStringObject", scope: !1, file: !1, line: 362, type: !1589, isLocal: false, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1591)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!13, !220, !20, !1219}
!1591 = !{!1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600}
!1592 = !DILocalVariable(name: "rdb", arg: 1, scope: !1588, file: !1, line: 362, type: !220)
!1593 = !DILocalVariable(name: "flags", arg: 2, scope: !1588, file: !1, line: 362, type: !20)
!1594 = !DILocalVariable(name: "lenptr", arg: 3, scope: !1588, file: !1, line: 362, type: !1219)
!1595 = !DILocalVariable(name: "plain", scope: !1588, file: !1, line: 363, type: !20)
!1596 = !DILocalVariable(name: "sds", scope: !1588, file: !1, line: 364, type: !20)
!1597 = !DILocalVariable(name: "len", scope: !1588, file: !1, line: 365, type: !55)
!1598 = !DILocalVariable(name: "clen", scope: !1588, file: !1, line: 365, type: !55)
!1599 = !DILocalVariable(name: "c", scope: !1588, file: !1, line: 366, type: !23)
!1600 = !DILocalVariable(name: "val", scope: !1588, file: !1, line: 367, type: !21)
!1601 = !DILocation(line: 362, column: 35, scope: !1588)
!1602 = !DILocation(line: 362, column: 44, scope: !1588)
!1603 = !DILocation(line: 362, column: 59, scope: !1588)
!1604 = !DILocation(line: 363, column: 23, scope: !1588)
!1605 = !DILocation(line: 363, column: 9, scope: !1588)
!1606 = !DILocation(line: 364, column: 9, scope: !1588)
!1607 = !DILocation(line: 366, column: 20, scope: !1588)
!1608 = !DILocation(line: 367, column: 11, scope: !1588)
!1609 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !1610)
!1610 = distinct !DILocation(line: 369, column: 17, scope: !1611)
!1611 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 369, column: 9)
!1612 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !1610)
!1613 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !1610)
!1614 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !1610)
!1615 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !1610)
!1616 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !1610)
!1617 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !1610)
!1618 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !1610)
!1619 = !DILocation(line: 369, column: 39, scope: !1611)
!1620 = !DILocation(line: 369, column: 9, scope: !1588)
!1621 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !1622)
!1622 = distinct !DILocation(line: 370, column: 16, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 370, column: 9)
!1624 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !1622)
!1625 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !1622)
!1626 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !1622)
!1627 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !1622)
!1628 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !1622)
!1629 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !1622)
!1630 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !1622)
!1631 = !DILocation(line: 370, column: 38, scope: !1623)
!1632 = !DILocation(line: 370, column: 9, scope: !1588)
!1633 = !DILocation(line: 371, column: 14, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 371, column: 9)
!1635 = !DILocation(line: 371, column: 29, scope: !1634)
!1636 = !DILocation(line: 371, column: 9, scope: !1588)
!1637 = !DILocation(line: 374, column: 9, scope: !1638)
!1638 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 374, column: 9)
!1639 = !DILocation(line: 374, column: 9, scope: !1588)
!1640 = !DILocation(line: 375, column: 15, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1638, file: !1, line: 374, column: 16)
!1642 = !DILocation(line: 376, column: 5, scope: !1641)
!1643 = !DILocation(line: 377, column: 25, scope: !1644)
!1644 = distinct !DILexicalBlock(scope: !1638, file: !1, line: 376, column: 12)
!1645 = !DILocation(line: 377, column: 15, scope: !1644)
!1646 = !DILocation(line: 0, scope: !1644)
!1647 = !DILocation(line: 379, column: 9, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 379, column: 9)
!1649 = !DILocation(line: 379, column: 9, scope: !1588)
!1650 = !DILocation(line: 379, column: 25, scope: !1648)
!1651 = !DILocation(line: 379, column: 17, scope: !1648)
!1652 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1653)
!1653 = distinct !DILocation(line: 382, column: 9, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 382, column: 9)
!1655 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1653)
!1656 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1653)
!1657 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1653)
!1658 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1653)
!1659 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1653)
!1660 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1653)
!1661 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1653)
!1662 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1653)
!1663 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !1653)
!1664 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !1653)
!1665 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !1653)
!1666 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1653)
!1667 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !1653)
!1668 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !1653)
!1669 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1653)
!1670 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !1653)
!1671 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1653)
!1672 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1653)
!1673 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1653)
!1674 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1653)
!1675 = !DILocation(line: 383, column: 26, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 383, column: 9)
!1677 = !DILocation(line: 383, column: 35, scope: !1676)
!1678 = !DILocation(line: 383, column: 9, scope: !1676)
!1679 = !DILocation(line: 383, column: 40, scope: !1676)
!1680 = !DILocation(line: 383, column: 9, scope: !1588)
!1681 = !DILocation(line: 384, column: 13, scope: !1682)
!1682 = distinct !DILexicalBlock(scope: !1683, file: !1, line: 384, column: 13)
!1683 = distinct !DILexicalBlock(scope: !1676, file: !1, line: 383, column: 46)
!1684 = !DILocation(line: 384, column: 13, scope: !1683)
!1685 = !DILocation(line: 384, column: 27, scope: !1682)
!1686 = !DILocation(line: 387, column: 5, scope: !1588)
!1687 = !DILocation(line: 389, column: 15, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 389, column: 9)
!1689 = !DILocation(line: 392, column: 16, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1688, file: !1, line: 391, column: 12)
!1691 = !DILocation(line: 392, column: 9, scope: !1690)
!1692 = !DILocation(line: 0, scope: !1641)
!1693 = !DILocation(line: 395, column: 5, scope: !1588)
!1694 = !DILocation(line: 396, column: 9, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1588, file: !1, line: 396, column: 9)
!1696 = !DILocation(line: 396, column: 9, scope: !1588)
!1697 = !DILocation(line: 397, column: 9, scope: !1695)
!1698 = !DILocation(line: 399, column: 9, scope: !1695)
!1699 = !DILocation(line: 0, scope: !1690)
!1700 = !DILocation(line: 401, column: 1, scope: !1588)
!1701 = distinct !DISubprogram(name: "rdbSaveRawString", scope: !1, file: !1, line: 405, type: !1550, isLocal: false, isDefinition: true, scopeLine: 405, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1702)
!1702 = !{!1703, !1704, !1705, !1706, !1707, !1708, !1709}
!1703 = !DILocalVariable(name: "rdb", arg: 1, scope: !1701, file: !1, line: 405, type: !220)
!1704 = !DILocalVariable(name: "s", arg: 2, scope: !1701, file: !1, line: 405, type: !23)
!1705 = !DILocalVariable(name: "len", arg: 3, scope: !1701, file: !1, line: 405, type: !545)
!1706 = !DILocalVariable(name: "enclen", scope: !1701, file: !1, line: 406, type: !20)
!1707 = !DILocalVariable(name: "n", scope: !1701, file: !1, line: 407, type: !104)
!1708 = !DILocalVariable(name: "nwritten", scope: !1701, file: !1, line: 407, type: !104)
!1709 = !DILocalVariable(name: "buf", scope: !1710, file: !1, line: 411, type: !1712)
!1710 = distinct !DILexicalBlock(scope: !1711, file: !1, line: 410, column: 20)
!1711 = distinct !DILexicalBlock(scope: !1701, file: !1, line: 410, column: 9)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 40, elements: !1713)
!1713 = !{!1714}
!1714 = !DISubrange(count: 5)
!1715 = !DILocation(line: 405, column: 31, scope: !1701)
!1716 = !DILocation(line: 405, column: 51, scope: !1701)
!1717 = !DILocation(line: 405, column: 61, scope: !1701)
!1718 = !DILocation(line: 407, column: 16, scope: !1701)
!1719 = !DILocation(line: 410, column: 13, scope: !1711)
!1720 = !DILocation(line: 410, column: 9, scope: !1701)
!1721 = !DILocation(line: 411, column: 9, scope: !1710)
!1722 = !DILocation(line: 411, column: 23, scope: !1710)
!1723 = !DILocation(line: 412, column: 23, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1710, file: !1, line: 412, column: 13)
!1725 = !DILocation(line: 406, column: 9, scope: !1701)
!1726 = !DILocation(line: 412, column: 64, scope: !1724)
!1727 = !DILocation(line: 412, column: 13, scope: !1710)
!1728 = !DILocation(line: 413, column: 37, scope: !1729)
!1729 = distinct !DILexicalBlock(scope: !1730, file: !1, line: 413, column: 17)
!1730 = distinct !DILexicalBlock(scope: !1724, file: !1, line: 412, column: 69)
!1731 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !1732)
!1732 = distinct !DILocation(line: 413, column: 17, scope: !1729)
!1733 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !1732)
!1734 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !1732)
!1735 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !1732)
!1736 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !1732)
!1737 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !1732)
!1738 = !DILocation(line: 413, column: 52, scope: !1729)
!1739 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !1740)
!1740 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !1732)
!1741 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !1740)
!1742 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !1740)
!1743 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !1740)
!1744 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !1740)
!1745 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !1740)
!1746 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !1740)
!1747 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !1740)
!1748 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !1740)
!1749 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !1740)
!1750 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !1740)
!1751 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !1740)
!1752 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !1740)
!1753 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !1740)
!1754 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !1740)
!1755 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !1740)
!1756 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !1740)
!1757 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !1740)
!1758 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !1740)
!1759 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !1740)
!1760 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !1740)
!1761 = !DILocation(line: 413, column: 45, scope: !1729)
!1762 = !DILocation(line: 416, column: 5, scope: !1711)
!1763 = !DILocation(line: 420, column: 32, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1701, file: !1, line: 420, column: 9)
!1765 = !DILocation(line: 420, column: 16, scope: !1764)
!1766 = !{!204, !192, i64 2128}
!1767 = !DILocation(line: 420, column: 9, scope: !1764)
!1768 = !DILocation(line: 420, column: 39, scope: !1764)
!1769 = !DILocation(line: 341, column: 37, scope: !1549, inlinedAt: !1770)
!1770 = distinct !DILocation(line: 421, column: 13, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1764, file: !1, line: 420, column: 45)
!1772 = !DILocation(line: 341, column: 57, scope: !1549, inlinedAt: !1770)
!1773 = !DILocation(line: 341, column: 67, scope: !1549, inlinedAt: !1770)
!1774 = !DILocation(line: 342, column: 22, scope: !1549, inlinedAt: !1770)
!1775 = !DILocation(line: 348, column: 30, scope: !1568, inlinedAt: !1770)
!1776 = !DILocation(line: 348, column: 16, scope: !1568, inlinedAt: !1770)
!1777 = !DILocation(line: 343, column: 11, scope: !1549, inlinedAt: !1770)
!1778 = !DILocation(line: 348, column: 35, scope: !1568, inlinedAt: !1770)
!1779 = !DILocation(line: 348, column: 9, scope: !1549, inlinedAt: !1770)
!1780 = !DILocation(line: 349, column: 32, scope: !1549, inlinedAt: !1770)
!1781 = !DILocation(line: 349, column: 42, scope: !1549, inlinedAt: !1770)
!1782 = !DILocation(line: 349, column: 16, scope: !1549, inlinedAt: !1770)
!1783 = !DILocation(line: 350, column: 18, scope: !1577, inlinedAt: !1770)
!1784 = !DILocation(line: 350, column: 9, scope: !1549, inlinedAt: !1770)
!1785 = !DILocation(line: 351, column: 9, scope: !1580, inlinedAt: !1770)
!1786 = !DILocation(line: 352, column: 9, scope: !1580, inlinedAt: !1770)
!1787 = !DILocation(line: 357, column: 1, scope: !1549, inlinedAt: !1770)
!1788 = !DILocation(line: 407, column: 13, scope: !1701)
!1789 = !DILocation(line: 423, column: 13, scope: !1771)
!1790 = !DILocation(line: 342, column: 12, scope: !1549, inlinedAt: !1770)
!1791 = !DILocation(line: 354, column: 24, scope: !1549, inlinedAt: !1770)
!1792 = !DILocation(line: 354, column: 13, scope: !1549, inlinedAt: !1770)
!1793 = !DILocation(line: 355, column: 5, scope: !1549, inlinedAt: !1770)
!1794 = !DILocation(line: 422, column: 15, scope: !1795)
!1795 = distinct !DILexicalBlock(scope: !1771, file: !1, line: 422, column: 13)
!1796 = !DILocation(line: 422, column: 13, scope: !1771)
!1797 = !DILocation(line: 423, column: 15, scope: !1798)
!1798 = distinct !DILexicalBlock(scope: !1771, file: !1, line: 423, column: 13)
!1799 = !DILocation(line: 428, column: 14, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1701, file: !1, line: 428, column: 9)
!1801 = !DILocation(line: 428, column: 35, scope: !1800)
!1802 = !DILocation(line: 428, column: 9, scope: !1701)
!1803 = !DILocation(line: 430, column: 13, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1701, file: !1, line: 430, column: 9)
!1805 = !DILocation(line: 430, column: 9, scope: !1701)
!1806 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !1807)
!1807 = distinct !DILocation(line: 431, column: 13, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1809, file: !1, line: 431, column: 13)
!1809 = distinct !DILexicalBlock(scope: !1804, file: !1, line: 430, column: 18)
!1810 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !1807)
!1811 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !1807)
!1812 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !1807)
!1813 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !1807)
!1814 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !1815)
!1815 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !1807)
!1816 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !1815)
!1817 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !1815)
!1818 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !1815)
!1819 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !1815)
!1820 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !1815)
!1821 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !1815)
!1822 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !1815)
!1823 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !1815)
!1824 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !1815)
!1825 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !1815)
!1826 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !1815)
!1827 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !1815)
!1828 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !1815)
!1829 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !1815)
!1830 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !1815)
!1831 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !1815)
!1832 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !1815)
!1833 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !1815)
!1834 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !1815)
!1835 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !1815)
!1836 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !1807)
!1837 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !1807)
!1838 = !DILocation(line: 431, column: 13, scope: !1809)
!1839 = !DILocation(line: 75, column: 12, scope: !542, inlinedAt: !1807)
!1840 = !DILocation(line: 431, column: 36, scope: !1808)
!1841 = !DILocation(line: 432, column: 18, scope: !1809)
!1842 = !DILocation(line: 0, scope: !1729)
!1843 = !DILocation(line: 435, column: 1, scope: !1701)
!1844 = distinct !DISubprogram(name: "rdbSaveLongLongAsStringObject", scope: !1, file: !1, line: 438, type: !1845, isLocal: false, isDefinition: true, scopeLine: 438, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1847)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!104, !220, !12}
!1847 = !{!1848, !1849, !1850, !1852, !1853, !1854}
!1848 = !DILocalVariable(name: "rdb", arg: 1, scope: !1844, file: !1, line: 438, type: !220)
!1849 = !DILocalVariable(name: "value", arg: 2, scope: !1844, file: !1, line: 438, type: !12)
!1850 = !DILocalVariable(name: "buf", scope: !1844, file: !1, line: 439, type: !1851)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 256, elements: !415)
!1852 = !DILocalVariable(name: "n", scope: !1844, file: !1, line: 440, type: !104)
!1853 = !DILocalVariable(name: "nwritten", scope: !1844, file: !1, line: 440, type: !104)
!1854 = !DILocalVariable(name: "enclen", scope: !1844, file: !1, line: 441, type: !20)
!1855 = !DILocation(line: 438, column: 44, scope: !1844)
!1856 = !DILocation(line: 438, column: 59, scope: !1844)
!1857 = !DILocation(line: 439, column: 5, scope: !1844)
!1858 = !DILocation(line: 439, column: 19, scope: !1844)
!1859 = !DILocation(line: 440, column: 16, scope: !1844)
!1860 = !DILocation(line: 234, column: 32, scope: !1173, inlinedAt: !1861)
!1861 = distinct !DILocation(line: 441, column: 18, scope: !1844)
!1862 = !DILocation(line: 234, column: 54, scope: !1173, inlinedAt: !1861)
!1863 = !DILocation(line: 235, column: 26, scope: !1182, inlinedAt: !1861)
!1864 = !DILocation(line: 236, column: 16, scope: !1184, inlinedAt: !1861)
!1865 = !DILocation(line: 237, column: 18, scope: !1184, inlinedAt: !1861)
!1866 = !DILocation(line: 237, column: 9, scope: !1184, inlinedAt: !1861)
!1867 = !DILocation(line: 237, column: 16, scope: !1184, inlinedAt: !1861)
!1868 = !DILocation(line: 238, column: 9, scope: !1184, inlinedAt: !1861)
!1869 = !DILocation(line: 239, column: 34, scope: !1187, inlinedAt: !1861)
!1870 = !DILocation(line: 240, column: 16, scope: !1189, inlinedAt: !1861)
!1871 = !DILocation(line: 241, column: 18, scope: !1189, inlinedAt: !1861)
!1872 = !DILocation(line: 241, column: 9, scope: !1189, inlinedAt: !1861)
!1873 = !DILocation(line: 241, column: 16, scope: !1189, inlinedAt: !1861)
!1874 = !DILocation(line: 242, column: 24, scope: !1189, inlinedAt: !1861)
!1875 = !DILocation(line: 242, column: 18, scope: !1189, inlinedAt: !1861)
!1876 = !DILocation(line: 242, column: 9, scope: !1189, inlinedAt: !1861)
!1877 = !DILocation(line: 242, column: 16, scope: !1189, inlinedAt: !1861)
!1878 = !DILocation(line: 243, column: 9, scope: !1189, inlinedAt: !1861)
!1879 = !DILocation(line: 244, column: 45, scope: !1196, inlinedAt: !1861)
!1880 = !DILocation(line: 245, column: 16, scope: !1198, inlinedAt: !1861)
!1881 = !DILocation(line: 246, column: 18, scope: !1198, inlinedAt: !1861)
!1882 = !DILocation(line: 246, column: 9, scope: !1198, inlinedAt: !1861)
!1883 = !DILocation(line: 246, column: 16, scope: !1198, inlinedAt: !1861)
!1884 = !DILocation(line: 247, column: 24, scope: !1198, inlinedAt: !1861)
!1885 = !DILocation(line: 247, column: 18, scope: !1198, inlinedAt: !1861)
!1886 = !DILocation(line: 247, column: 9, scope: !1198, inlinedAt: !1861)
!1887 = !DILocation(line: 247, column: 16, scope: !1198, inlinedAt: !1861)
!1888 = !DILocation(line: 248, column: 24, scope: !1198, inlinedAt: !1861)
!1889 = !DILocation(line: 248, column: 18, scope: !1198, inlinedAt: !1861)
!1890 = !DILocation(line: 248, column: 9, scope: !1198, inlinedAt: !1861)
!1891 = !DILocation(line: 248, column: 16, scope: !1198, inlinedAt: !1861)
!1892 = !DILocation(line: 249, column: 24, scope: !1198, inlinedAt: !1861)
!1893 = !DILocation(line: 249, column: 18, scope: !1198, inlinedAt: !1861)
!1894 = !DILocation(line: 249, column: 9, scope: !1198, inlinedAt: !1861)
!1895 = !DILocation(line: 249, column: 16, scope: !1198, inlinedAt: !1861)
!1896 = !DILocation(line: 250, column: 9, scope: !1198, inlinedAt: !1861)
!1897 = !DILocation(line: 254, column: 1, scope: !1173, inlinedAt: !1861)
!1898 = !DILocation(line: 441, column: 9, scope: !1844)
!1899 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !1900)
!1900 = distinct !DILocation(line: 443, column: 16, scope: !1901)
!1901 = distinct !DILexicalBlock(scope: !1902, file: !1, line: 442, column: 21)
!1902 = distinct !DILexicalBlock(scope: !1844, file: !1, line: 442, column: 9)
!1903 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !1900)
!1904 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !1900)
!1905 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !1900)
!1906 = !DILocation(line: 443, column: 36, scope: !1901)
!1907 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !1900)
!1908 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !1909)
!1909 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !1900)
!1910 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !1909)
!1911 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !1909)
!1912 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !1909)
!1913 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !1909)
!1914 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !1909)
!1915 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !1909)
!1916 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !1909)
!1917 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !1909)
!1918 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !1909)
!1919 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !1909)
!1920 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !1909)
!1921 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !1909)
!1922 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !1909)
!1923 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !1909)
!1924 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !1909)
!1925 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !1909)
!1926 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !1909)
!1927 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !1909)
!1928 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !1909)
!1929 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !1909)
!1930 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !1900)
!1931 = !DILocation(line: 0, scope: !542, inlinedAt: !1900)
!1932 = !DILocation(line: 443, column: 16, scope: !1901)
!1933 = !DILocation(line: 443, column: 9, scope: !1901)
!1934 = !DILocation(line: 446, column: 18, scope: !1935)
!1935 = distinct !DILexicalBlock(scope: !1902, file: !1, line: 444, column: 12)
!1936 = !DILocation(line: 447, column: 9, scope: !1935)
!1937 = !DILocation(line: 448, column: 33, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1935, file: !1, line: 448, column: 13)
!1939 = !DILocation(line: 448, column: 18, scope: !1938)
!1940 = !DILocation(line: 440, column: 13, scope: !1844)
!1941 = !DILocation(line: 448, column: 42, scope: !1938)
!1942 = !DILocation(line: 448, column: 13, scope: !1935)
!1943 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !1944)
!1944 = distinct !DILocation(line: 450, column: 18, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1935, file: !1, line: 450, column: 13)
!1946 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !1944)
!1947 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !1944)
!1948 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !1944)
!1949 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !1944)
!1950 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !1951)
!1951 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !1944)
!1952 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !1951)
!1953 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !1951)
!1954 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !1951)
!1955 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !1951)
!1956 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !1951)
!1957 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !1951)
!1958 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !1951)
!1959 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !1951)
!1960 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !1951)
!1961 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !1951)
!1962 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !1951)
!1963 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !1951)
!1964 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !1951)
!1965 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !1951)
!1966 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !1951)
!1967 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !1951)
!1968 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !1951)
!1969 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !1951)
!1970 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !1951)
!1971 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !1951)
!1972 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !1944)
!1973 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !1944)
!1974 = !DILocation(line: 450, column: 13, scope: !1935)
!1975 = !DILocation(line: 450, column: 47, scope: !1945)
!1976 = !DILocation(line: 451, column: 18, scope: !1935)
!1977 = !DILocation(line: 0, scope: !1844)
!1978 = !DILocation(line: 454, column: 1, scope: !1844)
!1979 = distinct !DISubprogram(name: "rdbSaveStringObject", scope: !1, file: !1, line: 457, type: !1980, isLocal: false, isDefinition: true, scopeLine: 457, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1992)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{!104, !220, !1982}
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "robj", file: !1984, line: 622, baseType: !1985)
!1984 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.h", directory: "/root/.unikraft/apps/redis/build")
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisObject", file: !1984, line: 614, size: 128, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990, !1991}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1985, file: !1984, line: 615, baseType: !33, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1985, file: !1984, line: 616, baseType: !33, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1985, file: !1984, line: 617, baseType: !33, size: 24, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1985, file: !1984, line: 620, baseType: !20, size: 32, offset: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1985, file: !1984, line: 621, baseType: !13, size: 64, offset: 64)
!1992 = !{!1993, !1994}
!1993 = !DILocalVariable(name: "rdb", arg: 1, scope: !1979, file: !1, line: 457, type: !220)
!1994 = !DILocalVariable(name: "obj", arg: 2, scope: !1979, file: !1, line: 457, type: !1982)
!1995 = !DILocation(line: 457, column: 34, scope: !1979)
!1996 = !DILocation(line: 457, column: 45, scope: !1979)
!1997 = !DILocation(line: 460, column: 14, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1979, file: !1, line: 460, column: 9)
!1999 = !DILocation(line: 460, column: 9, scope: !1979)
!2000 = !DILocation(line: 461, column: 61, scope: !2001)
!2001 = distinct !DILexicalBlock(scope: !1998, file: !1, line: 460, column: 44)
!2002 = !{!2003, !201, i64 8}
!2003 = !{!"redisObject", !192, i64 0, !192, i64 0, !192, i64 1, !192, i64 4, !201, i64 8}
!2004 = !DILocation(line: 461, column: 16, scope: !2001)
!2005 = !DILocation(line: 461, column: 9, scope: !2001)
!2006 = !DILocation(line: 463, column: 9, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1998, file: !1, line: 462, column: 12)
!2008 = !DILocation(line: 464, column: 42, scope: !2007)
!2009 = !DILocalVariable(name: "s", arg: 1, scope: !2010, file: !110, line: 87, type: !2013)
!2010 = distinct !DISubprogram(name: "sdslen", scope: !110, file: !110, line: 87, type: !2011, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2014)
!2011 = !DISubroutineType(types: !2012)
!2012 = !{!229, !2013}
!2013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!2014 = !{!2009, !2015}
!2015 = !DILocalVariable(name: "flags", scope: !2010, file: !110, line: 88, type: !24)
!2016 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !2017)
!2017 = distinct !DILocation(line: 464, column: 46, scope: !2007)
!2018 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !2017)
!2019 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !2017)
!2020 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !2017)
!2021 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !2017)
!2022 = distinct !DILexicalBlock(scope: !2010, file: !110, line: 89, column: 33)
!2023 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !2017)
!2024 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !2017)
!2025 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !2017)
!2026 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !2017)
!2027 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !2017)
!2028 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !2017)
!2029 = !{!2030, !2030, i64 0}
!2030 = !{!"short", !193, i64 0}
!2031 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !2017)
!2032 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !2017)
!2033 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !2017)
!2034 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !2017)
!2035 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !2017)
!2036 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !2017)
!2037 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !2017)
!2038 = !DILocation(line: 0, scope: !2022, inlinedAt: !2017)
!2039 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !2017)
!2040 = !DILocation(line: 464, column: 16, scope: !2007)
!2041 = !DILocation(line: 464, column: 9, scope: !2007)
!2042 = !DILocation(line: 0, scope: !2007)
!2043 = !DILocation(line: 466, column: 1, scope: !1979)
!2044 = distinct !DISubprogram(name: "rdbGenericLoadStringObject", scope: !1, file: !1, line: 481, type: !1589, isLocal: false, isDefinition: true, scopeLine: 481, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2045)
!2045 = !{!2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2057}
!2046 = !DILocalVariable(name: "rdb", arg: 1, scope: !2044, file: !1, line: 481, type: !220)
!2047 = !DILocalVariable(name: "flags", arg: 2, scope: !2044, file: !1, line: 481, type: !20)
!2048 = !DILocalVariable(name: "lenptr", arg: 3, scope: !2044, file: !1, line: 481, type: !1219)
!2049 = !DILocalVariable(name: "encode", scope: !2044, file: !1, line: 482, type: !20)
!2050 = !DILocalVariable(name: "plain", scope: !2044, file: !1, line: 483, type: !20)
!2051 = !DILocalVariable(name: "sds", scope: !2044, file: !1, line: 484, type: !20)
!2052 = !DILocalVariable(name: "isencoded", scope: !2044, file: !1, line: 485, type: !20)
!2053 = !DILocalVariable(name: "len", scope: !2044, file: !1, line: 486, type: !55)
!2054 = !DILocalVariable(name: "buf", scope: !2055, file: !1, line: 504, type: !13)
!2055 = distinct !DILexicalBlock(scope: !2056, file: !1, line: 503, column: 23)
!2056 = distinct !DILexicalBlock(scope: !2044, file: !1, line: 503, column: 9)
!2057 = !DILocalVariable(name: "o", scope: !2058, file: !1, line: 515, type: !1982)
!2058 = distinct !DILexicalBlock(scope: !2056, file: !1, line: 514, column: 12)
!2059 = !DILocation(line: 481, column: 39, scope: !2044)
!2060 = !DILocation(line: 481, column: 48, scope: !2044)
!2061 = !DILocation(line: 481, column: 63, scope: !2044)
!2062 = !DILocation(line: 482, column: 24, scope: !2044)
!2063 = !DILocation(line: 482, column: 9, scope: !2044)
!2064 = !DILocation(line: 483, column: 23, scope: !2044)
!2065 = !DILocation(line: 483, column: 9, scope: !2044)
!2066 = !DILocation(line: 484, column: 9, scope: !2044)
!2067 = !DILocation(line: 485, column: 5, scope: !2044)
!2068 = !DILocation(line: 485, column: 9, scope: !2044)
!2069 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !2070)
!2070 = distinct !DILocation(line: 488, column: 11, scope: !2044)
!2071 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !2070)
!2072 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !2070)
!2073 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !2070)
!2074 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !2070)
!2075 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !2070)
!2076 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !2070)
!2077 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !2070)
!2078 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !2070)
!2079 = !DILocation(line: 486, column: 14, scope: !2044)
!2080 = !DILocation(line: 489, column: 9, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2044, file: !1, line: 489, column: 9)
!2082 = !DILocation(line: 489, column: 9, scope: !2044)
!2083 = !DILocation(line: 490, column: 9, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !2081, file: !1, line: 489, column: 20)
!2085 = !DILocation(line: 494, column: 45, scope: !2086)
!2086 = distinct !DILexicalBlock(scope: !2084, file: !1, line: 490, column: 21)
!2087 = !DILocation(line: 494, column: 20, scope: !2086)
!2088 = !DILocation(line: 494, column: 13, scope: !2086)
!2089 = !DILocation(line: 496, column: 20, scope: !2086)
!2090 = !DILocation(line: 496, column: 13, scope: !2086)
!2091 = !DILocation(line: 498, column: 13, scope: !2086)
!2092 = !DILocation(line: 502, column: 13, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2044, file: !1, line: 502, column: 9)
!2094 = !DILocation(line: 502, column: 9, scope: !2044)
!2095 = !DILocation(line: 503, column: 9, scope: !2056)
!2096 = !DILocation(line: 503, column: 15, scope: !2056)
!2097 = !DILocation(line: 504, column: 21, scope: !2055)
!2098 = !DILocation(line: 504, column: 29, scope: !2055)
!2099 = !DILocation(line: 504, column: 54, scope: !2055)
!2100 = !DILocation(line: 504, column: 44, scope: !2055)
!2101 = !DILocation(line: 504, column: 15, scope: !2055)
!2102 = !DILocation(line: 505, column: 13, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2055, file: !1, line: 505, column: 13)
!2104 = !DILocation(line: 505, column: 13, scope: !2055)
!2105 = !DILocation(line: 505, column: 29, scope: !2103)
!2106 = !DILocation(line: 505, column: 21, scope: !2103)
!2107 = !DILocation(line: 506, column: 13, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !2055, file: !1, line: 506, column: 13)
!2109 = !DILocation(line: 506, column: 17, scope: !2108)
!2110 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2111)
!2111 = distinct !DILocation(line: 506, column: 20, scope: !2108)
!2112 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2111)
!2113 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2111)
!2114 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2111)
!2115 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2111)
!2116 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2111)
!2117 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2111)
!2118 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2111)
!2119 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2111)
!2120 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !2111)
!2121 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !2111)
!2122 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !2111)
!2123 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2111)
!2124 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !2111)
!2125 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !2111)
!2126 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2111)
!2127 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !2111)
!2128 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2111)
!2129 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2111)
!2130 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2111)
!2131 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2111)
!2132 = !DILocation(line: 507, column: 17, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2108, file: !1, line: 506, column: 47)
!2134 = !DILocation(line: 508, column: 17, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2133, file: !1, line: 507, column: 17)
!2136 = !DILocation(line: 510, column: 17, scope: !2135)
!2137 = !DILocation(line: 515, column: 19, scope: !2058)
!2138 = !DILocation(line: 0, scope: !2058)
!2139 = !DILocation(line: 515, column: 28, scope: !2058)
!2140 = !DILocation(line: 516, column: 28, scope: !2058)
!2141 = !DILocation(line: 515, column: 15, scope: !2058)
!2142 = !DILocation(line: 517, column: 13, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2058, file: !1, line: 517, column: 13)
!2144 = !DILocation(line: 517, column: 17, scope: !2143)
!2145 = !DILocation(line: 517, column: 35, scope: !2143)
!2146 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2147)
!2147 = distinct !DILocation(line: 517, column: 20, scope: !2143)
!2148 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2147)
!2149 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2147)
!2150 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2147)
!2151 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2147)
!2152 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2147)
!2153 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2147)
!2154 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2147)
!2155 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2147)
!2156 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !2147)
!2157 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !2147)
!2158 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !2147)
!2159 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2147)
!2160 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !2147)
!2161 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !2147)
!2162 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2147)
!2163 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !2147)
!2164 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2147)
!2165 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2147)
!2166 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2147)
!2167 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2147)
!2168 = !DILocation(line: 518, column: 13, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2143, file: !1, line: 517, column: 50)
!2170 = !DILocation(line: 519, column: 13, scope: !2169)
!2171 = !DILocation(line: 521, column: 16, scope: !2058)
!2172 = !DILocation(line: 521, column: 9, scope: !2058)
!2173 = !DILocation(line: 0, scope: !2086)
!2174 = !DILocation(line: 523, column: 1, scope: !2044)
!2175 = distinct !DISubprogram(name: "rdbLoadStringObject", scope: !1, file: !1, line: 525, type: !2176, isLocal: false, isDefinition: true, scopeLine: 525, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2178)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!1982, !220}
!2178 = !{!2179}
!2179 = !DILocalVariable(name: "rdb", arg: 1, scope: !2175, file: !1, line: 525, type: !220)
!2180 = !DILocation(line: 525, column: 32, scope: !2175)
!2181 = !DILocation(line: 526, column: 12, scope: !2175)
!2182 = !DILocation(line: 526, column: 5, scope: !2175)
!2183 = distinct !DISubprogram(name: "rdbLoadEncodedStringObject", scope: !1, file: !1, line: 529, type: !2176, isLocal: false, isDefinition: true, scopeLine: 529, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2184)
!2184 = !{!2185}
!2185 = !DILocalVariable(name: "rdb", arg: 1, scope: !2183, file: !1, line: 529, type: !220)
!2186 = !DILocation(line: 529, column: 39, scope: !2183)
!2187 = !DILocation(line: 530, column: 12, scope: !2183)
!2188 = !DILocation(line: 530, column: 5, scope: !2183)
!2189 = distinct !DISubprogram(name: "rdbSaveDoubleValue", scope: !1, file: !1, line: 541, type: !2190, isLocal: false, isDefinition: true, scopeLine: 541, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2192)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!20, !220, !94}
!2192 = !{!2193, !2194, !2195, !2199, !2200}
!2193 = !DILocalVariable(name: "rdb", arg: 1, scope: !2189, file: !1, line: 541, type: !220)
!2194 = !DILocalVariable(name: "val", arg: 2, scope: !2189, file: !1, line: 541, type: !94)
!2195 = !DILocalVariable(name: "buf", scope: !2189, file: !1, line: 542, type: !2196)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 1024, elements: !2197)
!2197 = !{!2198}
!2198 = !DISubrange(count: 128)
!2199 = !DILocalVariable(name: "len", scope: !2189, file: !1, line: 543, type: !20)
!2200 = !DILocalVariable(name: "__cy", scope: !2201, file: !1, line: 548, type: !20)
!2201 = distinct !DILexicalBlock(scope: !2202, file: !1, line: 548, column: 17)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 548, column: 16)
!2203 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 545, column: 9)
!2204 = !DILocation(line: 541, column: 29, scope: !2189)
!2205 = !DILocation(line: 541, column: 41, scope: !2189)
!2206 = !DILocation(line: 542, column: 5, scope: !2189)
!2207 = !DILocation(line: 542, column: 19, scope: !2189)
!2208 = !DILocation(line: 545, column: 9, scope: !2203)
!2209 = !DILocation(line: 545, column: 9, scope: !2189)
!2210 = !DILocation(line: 546, column: 16, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 545, column: 21)
!2212 = !DILocation(line: 543, column: 9, scope: !2189)
!2213 = !DILocation(line: 548, column: 5, scope: !2211)
!2214 = !DILocation(line: 548, column: 17, scope: !2201)
!2215 = !DILocation(line: 548, column: 16, scope: !2203)
!2216 = !DILocation(line: 550, column: 23, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2202, file: !1, line: 548, column: 32)
!2218 = !DILocation(line: 550, column: 18, scope: !2217)
!2219 = !DILocation(line: 550, column: 16, scope: !2217)
!2220 = !DILocation(line: 551, column: 5, scope: !2217)
!2221 = !DILocation(line: 568, column: 32, scope: !2222)
!2222 = distinct !DILexicalBlock(scope: !2202, file: !1, line: 551, column: 12)
!2223 = !DILocation(line: 568, column: 13, scope: !2222)
!2224 = !DILocation(line: 569, column: 18, scope: !2222)
!2225 = !DILocation(line: 569, column: 16, scope: !2222)
!2226 = !DILocation(line: 570, column: 15, scope: !2222)
!2227 = !DILocation(line: 570, column: 21, scope: !2222)
!2228 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2229)
!2229 = distinct !DILocation(line: 572, column: 12, scope: !2189)
!2230 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2229)
!2231 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2229)
!2232 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2229)
!2233 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2229)
!2234 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2235)
!2235 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2229)
!2236 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2235)
!2237 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2235)
!2238 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2235)
!2239 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2235)
!2240 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2235)
!2241 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2235)
!2242 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2235)
!2243 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2235)
!2244 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2235)
!2245 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2235)
!2246 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2235)
!2247 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2235)
!2248 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2235)
!2249 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2235)
!2250 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2235)
!2251 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2235)
!2252 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2235)
!2253 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2235)
!2254 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2235)
!2255 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2235)
!2256 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !2229)
!2257 = !DILocation(line: 75, column: 12, scope: !542, inlinedAt: !2229)
!2258 = !DILocation(line: 75, column: 5, scope: !542, inlinedAt: !2229)
!2259 = !DILocation(line: 0, scope: !542, inlinedAt: !2229)
!2260 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2229)
!2261 = !DILocation(line: 573, column: 1, scope: !2189)
!2262 = !DILocation(line: 572, column: 5, scope: !2189)
!2263 = distinct !DISubprogram(name: "rdbLoadDoubleValue", scope: !1, file: !1, line: 576, type: !2264, isLocal: false, isDefinition: true, scopeLine: 576, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2267)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!20, !220, !2266}
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!2267 = !{!2268, !2269, !2270, !2274}
!2268 = !DILocalVariable(name: "rdb", arg: 1, scope: !2263, file: !1, line: 576, type: !220)
!2269 = !DILocalVariable(name: "val", arg: 2, scope: !2263, file: !1, line: 576, type: !2266)
!2270 = !DILocalVariable(name: "buf", scope: !2263, file: !1, line: 577, type: !2271)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2048, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 256)
!2274 = !DILocalVariable(name: "len", scope: !2263, file: !1, line: 578, type: !24)
!2275 = !DILocation(line: 576, column: 29, scope: !2263)
!2276 = !DILocation(line: 576, column: 42, scope: !2263)
!2277 = !DILocation(line: 577, column: 5, scope: !2263)
!2278 = !DILocation(line: 577, column: 10, scope: !2263)
!2279 = !DILocation(line: 578, column: 19, scope: !2263)
!2280 = !DILocation(line: 578, column: 5, scope: !2263)
!2281 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2282)
!2282 = distinct !DILocation(line: 580, column: 9, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2263, file: !1, line: 580, column: 9)
!2284 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2282)
!2285 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2282)
!2286 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2282)
!2287 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2282)
!2288 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2282)
!2289 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2282)
!2290 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2282)
!2291 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2282)
!2292 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !2282)
!2293 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !2282)
!2294 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !2282)
!2295 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2282)
!2296 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2282)
!2297 = !DILocation(line: 580, column: 9, scope: !2263)
!2298 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !2282)
!2299 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !2282)
!2300 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2282)
!2301 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !2282)
!2302 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2282)
!2303 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2282)
!2304 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2282)
!2305 = !DILocation(line: 581, column: 12, scope: !2263)
!2306 = !DILocation(line: 581, column: 5, scope: !2263)
!2307 = !DILocation(line: 582, column: 22, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2263, file: !1, line: 581, column: 17)
!2309 = !{!207, !207, i64 0}
!2310 = !DILocation(line: 582, column: 20, scope: !2308)
!2311 = !DILocation(line: 582, column: 32, scope: !2308)
!2312 = !DILocation(line: 583, column: 22, scope: !2308)
!2313 = !DILocation(line: 583, column: 20, scope: !2308)
!2314 = !DILocation(line: 583, column: 32, scope: !2308)
!2315 = !DILocation(line: 584, column: 22, scope: !2308)
!2316 = !DILocation(line: 584, column: 20, scope: !2308)
!2317 = !DILocation(line: 584, column: 29, scope: !2308)
!2318 = !DILocation(line: 586, column: 29, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2308, file: !1, line: 586, column: 13)
!2320 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2321)
!2321 = distinct !DILocation(line: 586, column: 13, scope: !2319)
!2322 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2321)
!2323 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2321)
!2324 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2321)
!2325 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2321)
!2326 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2321)
!2327 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2321)
!2328 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !2321)
!2329 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !2321)
!2330 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !2321)
!2331 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2321)
!2332 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !2321)
!2333 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !2321)
!2334 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2321)
!2335 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !2321)
!2336 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2321)
!2337 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2321)
!2338 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2321)
!2339 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2321)
!2340 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2321)
!2341 = !DILocation(line: 587, column: 13, scope: !2308)
!2342 = !DILocation(line: 587, column: 9, scope: !2308)
!2343 = !DILocation(line: 587, column: 18, scope: !2308)
!2344 = !DILocation(line: 588, column: 9, scope: !2308)
!2345 = !DILocation(line: 589, column: 9, scope: !2308)
!2346 = !DILocation(line: 0, scope: !2308)
!2347 = !DILocation(line: 591, column: 1, scope: !2263)
!2348 = distinct !DISubprogram(name: "rdbSaveBinaryDoubleValue", scope: !1, file: !1, line: 598, type: !2190, isLocal: false, isDefinition: true, scopeLine: 598, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2349)
!2349 = !{!2350, !2351}
!2350 = !DILocalVariable(name: "rdb", arg: 1, scope: !2348, file: !1, line: 598, type: !220)
!2351 = !DILocalVariable(name: "val", arg: 2, scope: !2348, file: !1, line: 598, type: !94)
!2352 = !DILocation(line: 598, column: 35, scope: !2348)
!2353 = !DILocation(line: 598, column: 47, scope: !2348)
!2354 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2355)
!2355 = distinct !DILocation(line: 600, column: 12, scope: !2348)
!2356 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2355)
!2357 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2355)
!2358 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2355)
!2359 = !DILocation(line: 600, column: 28, scope: !2348)
!2360 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2355)
!2361 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2362)
!2362 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2355)
!2363 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2362)
!2364 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2362)
!2365 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2362)
!2366 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2362)
!2367 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2362)
!2368 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2362)
!2369 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2362)
!2370 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2362)
!2371 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2362)
!2372 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2362)
!2373 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2362)
!2374 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2362)
!2375 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2362)
!2376 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2362)
!2377 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2362)
!2378 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2362)
!2379 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2362)
!2380 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2362)
!2381 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2362)
!2382 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2362)
!2383 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2355)
!2384 = !DILocation(line: 0, scope: !542, inlinedAt: !2355)
!2385 = !DILocation(line: 600, column: 5, scope: !2348)
!2386 = distinct !DISubprogram(name: "rdbLoadBinaryDoubleValue", scope: !1, file: !1, line: 605, type: !2264, isLocal: false, isDefinition: true, scopeLine: 605, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2387)
!2387 = !{!2388, !2389}
!2388 = !DILocalVariable(name: "rdb", arg: 1, scope: !2386, file: !1, line: 605, type: !220)
!2389 = !DILocalVariable(name: "val", arg: 2, scope: !2386, file: !1, line: 605, type: !2266)
!2390 = !DILocation(line: 605, column: 35, scope: !2386)
!2391 = !DILocation(line: 605, column: 48, scope: !2386)
!2392 = !DILocation(line: 606, column: 21, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 606, column: 9)
!2394 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2395)
!2395 = distinct !DILocation(line: 606, column: 9, scope: !2393)
!2396 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2395)
!2397 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2395)
!2398 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2395)
!2399 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2395)
!2400 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2395)
!2401 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2395)
!2402 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2395)
!2403 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2395)
!2404 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !2395)
!2405 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !2395)
!2406 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !2395)
!2407 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2395)
!2408 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !2395)
!2409 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !2395)
!2410 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2395)
!2411 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !2395)
!2412 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2395)
!2413 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2395)
!2414 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2395)
!2415 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2395)
!2416 = !DILocation(line: 609, column: 1, scope: !2386)
!2417 = distinct !DISubprogram(name: "rdbSaveBinaryFloatValue", scope: !1, file: !1, line: 612, type: !2418, isLocal: false, isDefinition: true, scopeLine: 612, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2421)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!20, !220, !2420}
!2420 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2421 = !{!2422, !2423}
!2422 = !DILocalVariable(name: "rdb", arg: 1, scope: !2417, file: !1, line: 612, type: !220)
!2423 = !DILocalVariable(name: "val", arg: 2, scope: !2417, file: !1, line: 612, type: !2420)
!2424 = !DILocation(line: 612, column: 34, scope: !2417)
!2425 = !DILocation(line: 612, column: 45, scope: !2417)
!2426 = !{!2427, !2427, i64 0}
!2427 = !{!"float", !193, i64 0}
!2428 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2429)
!2429 = distinct !DILocation(line: 614, column: 12, scope: !2417)
!2430 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2429)
!2431 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2429)
!2432 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2429)
!2433 = !DILocation(line: 614, column: 28, scope: !2417)
!2434 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2429)
!2435 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2436)
!2436 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2429)
!2437 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2436)
!2438 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2436)
!2439 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2436)
!2440 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2436)
!2441 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2436)
!2442 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2436)
!2443 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2436)
!2444 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2436)
!2445 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2436)
!2446 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2436)
!2447 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2436)
!2448 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2436)
!2449 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2436)
!2450 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2436)
!2451 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2436)
!2452 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2436)
!2453 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2436)
!2454 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2436)
!2455 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2436)
!2456 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2436)
!2457 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2429)
!2458 = !DILocation(line: 0, scope: !542, inlinedAt: !2429)
!2459 = !DILocation(line: 614, column: 5, scope: !2417)
!2460 = distinct !DISubprogram(name: "rdbLoadBinaryFloatValue", scope: !1, file: !1, line: 618, type: !2461, isLocal: false, isDefinition: true, scopeLine: 618, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2464)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{!20, !220, !2463}
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2464 = !{!2465, !2466}
!2465 = !DILocalVariable(name: "rdb", arg: 1, scope: !2460, file: !1, line: 618, type: !220)
!2466 = !DILocalVariable(name: "val", arg: 2, scope: !2460, file: !1, line: 618, type: !2463)
!2467 = !DILocation(line: 618, column: 34, scope: !2460)
!2468 = !DILocation(line: 618, column: 46, scope: !2460)
!2469 = !DILocation(line: 619, column: 21, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2460, file: !1, line: 619, column: 9)
!2471 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2472)
!2472 = distinct !DILocation(line: 619, column: 9, scope: !2470)
!2473 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2472)
!2474 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2472)
!2475 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2472)
!2476 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2472)
!2477 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2472)
!2478 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2472)
!2479 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2472)
!2480 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2472)
!2481 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !2472)
!2482 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !2472)
!2483 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !2472)
!2484 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2472)
!2485 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !2472)
!2486 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !2472)
!2487 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2472)
!2488 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !2472)
!2489 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2472)
!2490 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2472)
!2491 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2472)
!2492 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2472)
!2493 = !DILocation(line: 622, column: 1, scope: !2460)
!2494 = distinct !DISubprogram(name: "rdbSaveObjectType", scope: !1, file: !1, line: 625, type: !2495, isLocal: false, isDefinition: true, scopeLine: 625, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2497)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!20, !220, !1982}
!2497 = !{!2498, !2499}
!2498 = !DILocalVariable(name: "rdb", arg: 1, scope: !2494, file: !1, line: 625, type: !220)
!2499 = !DILocalVariable(name: "o", arg: 2, scope: !2494, file: !1, line: 625, type: !1982)
!2500 = !DILocation(line: 625, column: 28, scope: !2494)
!2501 = !DILocation(line: 625, column: 39, scope: !2494)
!2502 = !DILocation(line: 626, column: 16, scope: !2494)
!2503 = !DILocation(line: 626, column: 5, scope: !2494)
!2504 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2505)
!2505 = distinct !DILocation(line: 628, column: 16, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2494, file: !1, line: 626, column: 22)
!2507 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2505)
!2508 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2509)
!2509 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2505)
!2510 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2509)
!2511 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2509)
!2512 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2509)
!2513 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2509)
!2514 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2515)
!2515 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2509)
!2516 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2515)
!2517 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2515)
!2518 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2515)
!2519 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2515)
!2520 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2515)
!2521 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2515)
!2522 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2515)
!2523 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2515)
!2524 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2515)
!2525 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2515)
!2526 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2515)
!2527 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2515)
!2528 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2515)
!2529 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2515)
!2530 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2515)
!2531 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2515)
!2532 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2515)
!2533 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2515)
!2534 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2515)
!2535 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2515)
!2536 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2509)
!2537 = !DILocation(line: 0, scope: !542, inlinedAt: !2509)
!2538 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2505)
!2539 = !DILocation(line: 628, column: 9, scope: !2506)
!2540 = !DILocation(line: 630, column: 16, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2506, file: !1, line: 630, column: 13)
!2542 = !DILocation(line: 630, column: 25, scope: !2541)
!2543 = !DILocation(line: 630, column: 13, scope: !2506)
!2544 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2545)
!2545 = distinct !DILocation(line: 631, column: 20, scope: !2541)
!2546 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2545)
!2547 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2548)
!2548 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2545)
!2549 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2548)
!2550 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2548)
!2551 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2548)
!2552 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2548)
!2553 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2554)
!2554 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2548)
!2555 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2554)
!2556 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2554)
!2557 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2554)
!2558 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2554)
!2559 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2554)
!2560 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2554)
!2561 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2554)
!2562 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2554)
!2563 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2554)
!2564 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2554)
!2565 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2554)
!2566 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2554)
!2567 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2554)
!2568 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2554)
!2569 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2554)
!2570 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2554)
!2571 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2554)
!2572 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2554)
!2573 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2554)
!2574 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2554)
!2575 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2548)
!2576 = !DILocation(line: 0, scope: !542, inlinedAt: !2548)
!2577 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2545)
!2578 = !DILocation(line: 631, column: 13, scope: !2541)
!2579 = !DILocation(line: 633, column: 13, scope: !2541)
!2580 = !DILocation(line: 635, column: 16, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2506, file: !1, line: 635, column: 13)
!2582 = !DILocation(line: 635, column: 13, scope: !2506)
!2583 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2584)
!2584 = distinct !DILocation(line: 636, column: 20, scope: !2581)
!2585 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2584)
!2586 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2587)
!2587 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2584)
!2588 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2587)
!2589 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2587)
!2590 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2587)
!2591 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2587)
!2592 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2593)
!2593 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2587)
!2594 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2593)
!2595 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2593)
!2596 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2593)
!2597 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2593)
!2598 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2593)
!2599 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2593)
!2600 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2593)
!2601 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2593)
!2602 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2593)
!2603 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2593)
!2604 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2593)
!2605 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2593)
!2606 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2593)
!2607 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2593)
!2608 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2593)
!2609 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2593)
!2610 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2593)
!2611 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2593)
!2612 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2593)
!2613 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2593)
!2614 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2587)
!2615 = !DILocation(line: 0, scope: !542, inlinedAt: !2587)
!2616 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2584)
!2617 = !DILocation(line: 636, column: 13, scope: !2581)
!2618 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2619)
!2619 = distinct !DILocation(line: 638, column: 20, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2581, file: !1, line: 637, column: 18)
!2621 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2619)
!2622 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2623)
!2623 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2619)
!2624 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2623)
!2625 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2623)
!2626 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2623)
!2627 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2623)
!2628 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2629)
!2629 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2623)
!2630 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2629)
!2631 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2629)
!2632 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2629)
!2633 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2629)
!2634 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2629)
!2635 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2629)
!2636 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2629)
!2637 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2629)
!2638 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2629)
!2639 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2629)
!2640 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2629)
!2641 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2629)
!2642 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2629)
!2643 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2629)
!2644 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2629)
!2645 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2629)
!2646 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2629)
!2647 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2629)
!2648 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2629)
!2649 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2629)
!2650 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2623)
!2651 = !DILocation(line: 0, scope: !542, inlinedAt: !2623)
!2652 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2619)
!2653 = !DILocation(line: 638, column: 13, scope: !2620)
!2654 = !DILocation(line: 640, column: 13, scope: !2620)
!2655 = !DILocation(line: 642, column: 16, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2506, file: !1, line: 642, column: 13)
!2657 = !DILocation(line: 642, column: 13, scope: !2506)
!2658 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2659)
!2659 = distinct !DILocation(line: 643, column: 20, scope: !2656)
!2660 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2659)
!2661 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2662)
!2662 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2659)
!2663 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2662)
!2664 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2662)
!2665 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2662)
!2666 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2662)
!2667 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2668)
!2668 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2662)
!2669 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2668)
!2670 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2668)
!2671 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2668)
!2672 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2668)
!2673 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2668)
!2674 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2668)
!2675 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2668)
!2676 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2668)
!2677 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2668)
!2678 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2668)
!2679 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2668)
!2680 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2668)
!2681 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2668)
!2682 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2668)
!2683 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2668)
!2684 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2668)
!2685 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2668)
!2686 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2668)
!2687 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2668)
!2688 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2668)
!2689 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2662)
!2690 = !DILocation(line: 0, scope: !542, inlinedAt: !2662)
!2691 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2659)
!2692 = !DILocation(line: 643, column: 13, scope: !2656)
!2693 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2694)
!2694 = distinct !DILocation(line: 645, column: 20, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2656, file: !1, line: 644, column: 18)
!2696 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2694)
!2697 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2698)
!2698 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2694)
!2699 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2698)
!2700 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2698)
!2701 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2698)
!2702 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2698)
!2703 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2704)
!2704 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2698)
!2705 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2704)
!2706 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2704)
!2707 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2704)
!2708 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2704)
!2709 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2704)
!2710 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2704)
!2711 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2704)
!2712 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2704)
!2713 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2704)
!2714 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2704)
!2715 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2704)
!2716 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2704)
!2717 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2704)
!2718 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2704)
!2719 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2704)
!2720 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2704)
!2721 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2704)
!2722 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2704)
!2723 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2704)
!2724 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2704)
!2725 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2698)
!2726 = !DILocation(line: 0, scope: !542, inlinedAt: !2698)
!2727 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2694)
!2728 = !DILocation(line: 645, column: 13, scope: !2695)
!2729 = !DILocation(line: 647, column: 13, scope: !2695)
!2730 = !DILocation(line: 649, column: 16, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2506, file: !1, line: 649, column: 13)
!2732 = !DILocation(line: 649, column: 13, scope: !2506)
!2733 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2734)
!2734 = distinct !DILocation(line: 650, column: 20, scope: !2731)
!2735 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2734)
!2736 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2737)
!2737 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2734)
!2738 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2737)
!2739 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2737)
!2740 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2737)
!2741 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2737)
!2742 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2743)
!2743 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2737)
!2744 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2743)
!2745 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2743)
!2746 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2743)
!2747 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2743)
!2748 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2743)
!2749 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2743)
!2750 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2743)
!2751 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2743)
!2752 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2743)
!2753 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2743)
!2754 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2743)
!2755 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2743)
!2756 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2743)
!2757 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2743)
!2758 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2743)
!2759 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2743)
!2760 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2743)
!2761 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2743)
!2762 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2743)
!2763 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2743)
!2764 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2737)
!2765 = !DILocation(line: 0, scope: !542, inlinedAt: !2737)
!2766 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2734)
!2767 = !DILocation(line: 650, column: 13, scope: !2731)
!2768 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2769)
!2769 = distinct !DILocation(line: 652, column: 20, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2731, file: !1, line: 651, column: 18)
!2771 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2769)
!2772 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2773)
!2773 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2769)
!2774 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2773)
!2775 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2773)
!2776 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2773)
!2777 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2773)
!2778 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2779)
!2779 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2773)
!2780 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2779)
!2781 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2779)
!2782 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2779)
!2783 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2779)
!2784 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2779)
!2785 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2779)
!2786 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2779)
!2787 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2779)
!2788 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2779)
!2789 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2779)
!2790 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2779)
!2791 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2779)
!2792 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2779)
!2793 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2779)
!2794 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2779)
!2795 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2779)
!2796 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2779)
!2797 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2779)
!2798 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2779)
!2799 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2779)
!2800 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2773)
!2801 = !DILocation(line: 0, scope: !542, inlinedAt: !2773)
!2802 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2769)
!2803 = !DILocation(line: 652, column: 13, scope: !2770)
!2804 = !DILocation(line: 654, column: 13, scope: !2770)
!2805 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2806)
!2806 = distinct !DILocation(line: 656, column: 16, scope: !2506)
!2807 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2806)
!2808 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2809)
!2809 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2806)
!2810 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2809)
!2811 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2809)
!2812 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2809)
!2813 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2809)
!2814 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2815)
!2815 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2809)
!2816 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2815)
!2817 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2815)
!2818 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2815)
!2819 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2815)
!2820 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2815)
!2821 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2815)
!2822 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2815)
!2823 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2815)
!2824 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2815)
!2825 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2815)
!2826 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2815)
!2827 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2815)
!2828 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2815)
!2829 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2815)
!2830 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2815)
!2831 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2815)
!2832 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2815)
!2833 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2815)
!2834 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2815)
!2835 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2815)
!2836 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2809)
!2837 = !DILocation(line: 0, scope: !542, inlinedAt: !2809)
!2838 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2806)
!2839 = !DILocation(line: 656, column: 9, scope: !2506)
!2840 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !2841)
!2841 = distinct !DILocation(line: 658, column: 16, scope: !2506)
!2842 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !2841)
!2843 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !2844)
!2844 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !2841)
!2845 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !2844)
!2846 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !2844)
!2847 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !2844)
!2848 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !2844)
!2849 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !2850)
!2850 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !2844)
!2851 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !2850)
!2852 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !2850)
!2853 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !2850)
!2854 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !2850)
!2855 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !2850)
!2856 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !2850)
!2857 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !2850)
!2858 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !2850)
!2859 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !2850)
!2860 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !2850)
!2861 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !2850)
!2862 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !2850)
!2863 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !2850)
!2864 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !2850)
!2865 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !2850)
!2866 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !2850)
!2867 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !2850)
!2868 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !2850)
!2869 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !2850)
!2870 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !2850)
!2871 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !2844)
!2872 = !DILocation(line: 0, scope: !542, inlinedAt: !2844)
!2873 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !2841)
!2874 = !DILocation(line: 658, column: 9, scope: !2506)
!2875 = !DILocation(line: 660, column: 9, scope: !2506)
!2876 = !DILocation(line: 0, scope: !2506)
!2877 = !DILocation(line: 663, column: 1, scope: !2494)
!2878 = distinct !DISubprogram(name: "rdbLoadObjectType", scope: !1, file: !1, line: 667, type: !596, isLocal: false, isDefinition: true, scopeLine: 667, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2879)
!2879 = !{!2880, !2881}
!2880 = !DILocalVariable(name: "rdb", arg: 1, scope: !2878, file: !1, line: 667, type: !220)
!2881 = !DILocalVariable(name: "type", scope: !2878, file: !1, line: 668, type: !20)
!2882 = !DILocation(line: 667, column: 28, scope: !2878)
!2883 = !DILocation(line: 97, column: 22, scope: !595, inlinedAt: !2884)
!2884 = distinct !DILocation(line: 669, column: 17, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2878, file: !1, line: 669, column: 9)
!2886 = !DILocation(line: 98, column: 19, scope: !595, inlinedAt: !2884)
!2887 = !DILocation(line: 98, column: 5, scope: !595, inlinedAt: !2884)
!2888 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2889)
!2889 = distinct !DILocation(line: 99, column: 9, scope: !606, inlinedAt: !2884)
!2890 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2889)
!2891 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2889)
!2892 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2889)
!2893 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2889)
!2894 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2889)
!2895 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2889)
!2896 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2889)
!2897 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2889)
!2898 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !2889)
!2899 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !2889)
!2900 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !2889)
!2901 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2889)
!2902 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !2889)
!2903 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !2889)
!2904 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2889)
!2905 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !2889)
!2906 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2889)
!2907 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2889)
!2908 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2889)
!2909 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2889)
!2910 = !DILocation(line: 101, column: 1, scope: !595, inlinedAt: !2884)
!2911 = !DILocation(line: 669, column: 9, scope: !2878)
!2912 = !DILocation(line: 100, column: 12, scope: !595, inlinedAt: !2884)
!2913 = !DILocation(line: 0, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2878, file: !1, line: 670, column: 9)
!2915 = !DILocation(line: 672, column: 1, scope: !2878)
!2916 = distinct !DISubprogram(name: "rdbSaveStreamPEL", scope: !1, file: !1, line: 681, type: !2917, isLocal: false, isDefinition: true, scopeLine: 681, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2937)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{!104, !220, !2919, !20}
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "rax", file: !2921, line: 137, baseType: !2922)
!2921 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rax.h", directory: "/root/.unikraft/apps/redis/build")
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rax", file: !2921, line: 133, size: 192, elements: !2923)
!2923 = !{!2924, !2935, !2936}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2922, file: !2921, line: 134, baseType: !2925, size: 64)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxNode", file: !2921, line: 131, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxNode", file: !2921, line: 98, size: 32, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932, !2933}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "iskey", scope: !2927, file: !2921, line: 99, baseType: !31, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "isnull", scope: !2927, file: !2921, line: 100, baseType: !31, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "iscompr", scope: !2927, file: !2921, line: 101, baseType: !31, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2927, file: !2921, line: 102, baseType: !31, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2927, file: !2921, line: 130, baseType: !2934, offset: 32)
!2934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, elements: !39)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "numele", scope: !2922, file: !2921, line: 135, baseType: !55, size: 64, offset: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "numnodes", scope: !2922, file: !2921, line: 136, baseType: !55, size: 64, offset: 128)
!2937 = !{!2938, !2939, !2940, !2941, !2942, !2943, !2971}
!2938 = !DILocalVariable(name: "rdb", arg: 1, scope: !2916, file: !1, line: 681, type: !220)
!2939 = !DILocalVariable(name: "pel", arg: 2, scope: !2916, file: !1, line: 681, type: !2919)
!2940 = !DILocalVariable(name: "nacks", arg: 3, scope: !2916, file: !1, line: 681, type: !20)
!2941 = !DILocalVariable(name: "n", scope: !2916, file: !1, line: 682, type: !104)
!2942 = !DILocalVariable(name: "nwritten", scope: !2916, file: !1, line: 682, type: !104)
!2943 = !DILocalVariable(name: "ri", scope: !2916, file: !1, line: 689, type: !2944)
!2944 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxIterator", file: !2921, line: 186, baseType: !2945)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxIterator", file: !2921, line: 175, size: 3840, elements: !2946)
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2965}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2945, file: !2921, line: 176, baseType: !20, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2945, file: !2921, line: 177, baseType: !2919, size: 64, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2945, file: !2921, line: 178, baseType: !23, size: 64, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2945, file: !2921, line: 179, baseType: !13, size: 64, offset: 192)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2945, file: !2921, line: 180, baseType: !545, size: 64, offset: 256)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "key_max", scope: !2945, file: !2921, line: 181, baseType: !545, size: 64, offset: 320)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "key_static_string", scope: !2945, file: !2921, line: 182, baseType: !2196, size: 1024, offset: 384)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2945, file: !2921, line: 183, baseType: !2925, size: 64, offset: 1408)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2945, file: !2921, line: 184, baseType: !2956, size: 2304, offset: 1472)
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxStack", file: !2921, line: 150, baseType: !2957)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxStack", file: !2921, line: 143, size: 2304, elements: !2958)
!2958 = !{!2959, !2961, !2962, !2963, !2964}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2957, file: !2921, line: 144, baseType: !2960, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2957, file: !2921, line: 145, baseType: !545, size: 64, offset: 64)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "maxitems", scope: !2957, file: !2921, line: 145, baseType: !545, size: 64, offset: 128)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "static_items", scope: !2957, file: !2921, line: 148, baseType: !421, size: 2048, offset: 192)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "oom", scope: !2957, file: !2921, line: 149, baseType: !20, size: 32, offset: 2240)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "node_cb", scope: !2945, file: !2921, line: 185, baseType: !2966, size: 64, offset: 3776)
!2966 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxNodeCallback", file: !2921, line: 165, baseType: !2967)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 64)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!20, !2970}
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2971 = !DILocalVariable(name: "nack", scope: !2972, file: !1, line: 699, type: !2975)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !1, line: 698, column: 20)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !1, line: 698, column: 13)
!2974 = distinct !DILexicalBlock(scope: !2916, file: !1, line: 692, column: 25)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "streamNACK", file: !2977, line: 87, baseType: !2978)
!2977 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/stream.h", directory: "/root/.unikraft/apps/redis/build")
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "streamNACK", file: !2977, line: 82, size: 192, elements: !2979)
!2979 = !{!2980, !2982, !2983}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "delivery_time", scope: !2978, file: !2977, line: 83, baseType: !2981, size: 64)
!2981 = !DIDerivedType(tag: DW_TAG_typedef, name: "mstime_t", file: !1984, line: 52, baseType: !12)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "delivery_count", scope: !2978, file: !2977, line: 84, baseType: !55, size: 64, offset: 64)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "consumer", scope: !2978, file: !2977, line: 85, baseType: !2984, size: 64, offset: 128)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "streamConsumer", file: !2977, line: 79, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "streamConsumer", file: !2977, line: 67, size: 192, elements: !2987)
!2987 = !{!2988, !2989, !2990}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "seen_time", scope: !2986, file: !2977, line: 68, baseType: !2981, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2986, file: !2977, line: 69, baseType: !261, size: 64, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !2986, file: !2977, line: 72, baseType: !2919, size: 64, offset: 128)
!2991 = !DILocation(line: 681, column: 31, scope: !2916)
!2992 = !DILocation(line: 681, column: 41, scope: !2916)
!2993 = !DILocation(line: 681, column: 50, scope: !2916)
!2994 = !DILocation(line: 682, column: 16, scope: !2916)
!2995 = !DILocation(line: 685, column: 29, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2916, file: !1, line: 685, column: 9)
!2997 = !DILocation(line: 685, column: 14, scope: !2996)
!2998 = !DILocation(line: 685, column: 44, scope: !2996)
!2999 = !DILocation(line: 685, column: 9, scope: !2916)
!3000 = !DILocation(line: 682, column: 13, scope: !2916)
!3001 = !DILocation(line: 689, column: 5, scope: !2916)
!3002 = !DILocation(line: 689, column: 17, scope: !2916)
!3003 = !DILocation(line: 690, column: 5, scope: !2916)
!3004 = !DILocation(line: 691, column: 5, scope: !2916)
!3005 = !DILocation(line: 692, column: 11, scope: !2916)
!3006 = !DILocation(line: 692, column: 5, scope: !2916)
!3007 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !3008)
!3008 = distinct !DILocation(line: 695, column: 18, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !2974, file: !1, line: 695, column: 13)
!3010 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !3008)
!3011 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !3008)
!3012 = !DILocation(line: 695, column: 37, scope: !3009)
!3013 = !{!3014, !201, i64 16}
!3014 = !{!"raxIterator", !192, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !205, i64 32, !205, i64 40, !193, i64 48, !201, i64 176, !3015, i64 184, !201, i64 472}
!3015 = !{!"raxStack", !201, i64 0, !205, i64 8, !205, i64 16, !193, i64 24, !192, i64 280}
!3016 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !3008)
!3017 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !3018)
!3018 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !3008)
!3019 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !3018)
!3020 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !3018)
!3021 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !3018)
!3022 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !3018)
!3023 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !3018)
!3024 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !3018)
!3025 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !3018)
!3026 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !3018)
!3027 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !3018)
!3028 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !3018)
!3029 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !3018)
!3030 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !3018)
!3031 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !3018)
!3032 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !3018)
!3033 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !3018)
!3034 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !3018)
!3035 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !3018)
!3036 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !3018)
!3037 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !3018)
!3038 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !3018)
!3039 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !3008)
!3040 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !3008)
!3041 = !DILocation(line: 695, column: 13, scope: !2974)
!3042 = !DILocation(line: 696, column: 18, scope: !2974)
!3043 = !DILocation(line: 698, column: 13, scope: !2974)
!3044 = !DILocation(line: 699, column: 35, scope: !2972)
!3045 = !{!3014, !201, i64 24}
!3046 = !DILocation(line: 699, column: 25, scope: !2972)
!3047 = !DILocation(line: 700, column: 55, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !2972, file: !1, line: 700, column: 17)
!3049 = !{!3050, !206, i64 0}
!3050 = !{!"streamNACK", !206, i64 0, !205, i64 8, !201, i64 16}
!3051 = !DILocation(line: 112, column: 33, scope: !671, inlinedAt: !3052)
!3052 = distinct !DILocation(line: 700, column: 22, scope: !3048)
!3053 = !DILocation(line: 112, column: 48, scope: !671, inlinedAt: !3052)
!3054 = !DILocation(line: 113, column: 5, scope: !671, inlinedAt: !3052)
!3055 = !DILocation(line: 113, column: 13, scope: !671, inlinedAt: !3052)
!3056 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !3057)
!3057 = distinct !DILocation(line: 115, column: 12, scope: !671, inlinedAt: !3052)
!3058 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !3057)
!3059 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !3057)
!3060 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !3057)
!3061 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !3062)
!3062 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !3057)
!3063 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !3062)
!3064 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !3062)
!3065 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !3062)
!3066 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !3062)
!3067 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !3062)
!3068 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !3062)
!3069 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !3062)
!3070 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !3062)
!3071 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !3062)
!3072 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !3062)
!3073 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !3062)
!3074 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !3062)
!3075 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !3062)
!3076 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !3062)
!3077 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !3062)
!3078 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !3062)
!3079 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !3062)
!3080 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !3062)
!3081 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !3062)
!3082 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !3057)
!3083 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !3057)
!3084 = !DILocation(line: 116, column: 1, scope: !671, inlinedAt: !3052)
!3085 = !DILocation(line: 115, column: 5, scope: !671, inlinedAt: !3052)
!3086 = !DILocation(line: 700, column: 17, scope: !2972)
!3087 = !DILocation(line: 703, column: 43, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !2972, file: !1, line: 703, column: 17)
!3089 = !{!3050, !205, i64 8}
!3090 = !DILocation(line: 703, column: 22, scope: !3088)
!3091 = !DILocation(line: 703, column: 60, scope: !3088)
!3092 = !DILocation(line: 703, column: 17, scope: !2972)
!3093 = !DILocation(line: 702, column: 22, scope: !2972)
!3094 = !DILocation(line: 704, column: 22, scope: !2972)
!3095 = distinct !{!3095, !3006, !3096}
!3096 = !DILocation(line: 709, column: 5, scope: !2916)
!3097 = !DILocation(line: 0, scope: !2974)
!3098 = !DILocation(line: 710, column: 5, scope: !2916)
!3099 = !DILocation(line: 711, column: 5, scope: !2916)
!3100 = !DILocation(line: 0, scope: !2916)
!3101 = !DILocation(line: 712, column: 1, scope: !2916)
!3102 = !DILocation(line: 0, scope: !3009)
!3103 = distinct !DISubprogram(name: "rdbSaveStreamConsumers", scope: !1, file: !1, line: 717, type: !3104, isLocal: false, isDefinition: true, scopeLine: 717, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3118)
!3104 = !DISubroutineType(types: !3105)
!3105 = !{!545, !220, !3106}
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "streamCG", file: !2977, line: 64, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "streamCG", file: !2977, line: 51, size: 256, elements: !3109)
!3109 = !{!3110, !3116, !3117}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "last_id", scope: !3108, file: !2977, line: 52, baseType: !3111, size: 128)
!3111 = !DIDerivedType(tag: DW_TAG_typedef, name: "streamID", file: !2977, line: 14, baseType: !3112)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "streamID", file: !2977, line: 11, size: 128, elements: !3113)
!3113 = !{!3114, !3115}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "ms", scope: !3112, file: !2977, line: 12, baseType: !55, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3112, file: !2977, line: 13, baseType: !55, size: 64, offset: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !3108, file: !2977, line: 55, baseType: !2919, size: 64, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3108, file: !2977, line: 61, baseType: !2919, size: 64, offset: 192)
!3118 = !{!3119, !3120, !3121, !3122, !3123, !3124}
!3119 = !DILocalVariable(name: "rdb", arg: 1, scope: !3103, file: !1, line: 717, type: !220)
!3120 = !DILocalVariable(name: "cg", arg: 2, scope: !3103, file: !1, line: 717, type: !3106)
!3121 = !DILocalVariable(name: "n", scope: !3103, file: !1, line: 718, type: !104)
!3122 = !DILocalVariable(name: "nwritten", scope: !3103, file: !1, line: 718, type: !104)
!3123 = !DILocalVariable(name: "ri", scope: !3103, file: !1, line: 725, type: !2944)
!3124 = !DILocalVariable(name: "consumer", scope: !3125, file: !1, line: 729, type: !2984)
!3125 = distinct !DILexicalBlock(scope: !3103, file: !1, line: 728, column: 25)
!3126 = !DILocation(line: 717, column: 36, scope: !3103)
!3127 = !DILocation(line: 717, column: 51, scope: !3103)
!3128 = !DILocation(line: 718, column: 16, scope: !3103)
!3129 = !DILocation(line: 721, column: 41, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3103, file: !1, line: 721, column: 9)
!3131 = !{!3132, !201, i64 24}
!3132 = !{!"streamCG", !3133, i64 0, !201, i64 16, !201, i64 24}
!3133 = !{!"streamID", !205, i64 0, !205, i64 8}
!3134 = !DILocation(line: 721, column: 29, scope: !3130)
!3135 = !DILocation(line: 721, column: 14, scope: !3130)
!3136 = !DILocation(line: 721, column: 54, scope: !3130)
!3137 = !DILocation(line: 721, column: 9, scope: !3103)
!3138 = !DILocation(line: 718, column: 13, scope: !3103)
!3139 = !DILocation(line: 725, column: 5, scope: !3103)
!3140 = !DILocation(line: 726, column: 22, scope: !3103)
!3141 = !DILocation(line: 725, column: 17, scope: !3103)
!3142 = !DILocation(line: 726, column: 5, scope: !3103)
!3143 = !DILocation(line: 727, column: 5, scope: !3103)
!3144 = !DILocation(line: 728, column: 5, scope: !3103)
!3145 = !DILocation(line: 722, column: 14, scope: !3103)
!3146 = !DILocation(line: 728, column: 11, scope: !3103)
!3147 = !DILocation(line: 729, column: 39, scope: !3125)
!3148 = !DILocation(line: 729, column: 25, scope: !3125)
!3149 = !DILocation(line: 732, column: 42, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3125, file: !1, line: 732, column: 13)
!3151 = !DILocation(line: 732, column: 49, scope: !3150)
!3152 = !{!3014, !205, i64 32}
!3153 = !DILocation(line: 732, column: 18, scope: !3150)
!3154 = !DILocation(line: 732, column: 59, scope: !3150)
!3155 = !DILocation(line: 732, column: 13, scope: !3125)
!3156 = !DILocation(line: 736, column: 55, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3125, file: !1, line: 736, column: 13)
!3158 = !{!3159, !206, i64 0}
!3159 = !{!"streamConsumer", !206, i64 0, !201, i64 8, !201, i64 16}
!3160 = !DILocation(line: 112, column: 33, scope: !671, inlinedAt: !3161)
!3161 = distinct !DILocation(line: 736, column: 18, scope: !3157)
!3162 = !DILocation(line: 112, column: 48, scope: !671, inlinedAt: !3161)
!3163 = !DILocation(line: 113, column: 5, scope: !671, inlinedAt: !3161)
!3164 = !DILocation(line: 113, column: 13, scope: !671, inlinedAt: !3161)
!3165 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !3166)
!3166 = distinct !DILocation(line: 115, column: 12, scope: !671, inlinedAt: !3161)
!3167 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !3166)
!3168 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !3166)
!3169 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !3166)
!3170 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !3171)
!3171 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !3166)
!3172 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !3171)
!3173 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !3171)
!3174 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !3171)
!3175 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !3171)
!3176 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !3171)
!3177 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !3171)
!3178 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !3171)
!3179 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !3171)
!3180 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !3171)
!3181 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !3171)
!3182 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !3171)
!3183 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !3171)
!3184 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !3171)
!3185 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !3171)
!3186 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !3171)
!3187 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !3171)
!3188 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !3171)
!3189 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !3171)
!3190 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !3171)
!3191 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !3166)
!3192 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !3166)
!3193 = !DILocation(line: 116, column: 1, scope: !671, inlinedAt: !3161)
!3194 = !DILocation(line: 115, column: 5, scope: !671, inlinedAt: !3161)
!3195 = !DILocation(line: 736, column: 13, scope: !3125)
!3196 = !DILocation(line: 744, column: 49, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3125, file: !1, line: 744, column: 13)
!3198 = !{!3159, !201, i64 16}
!3199 = !DILocation(line: 744, column: 18, scope: !3197)
!3200 = !DILocation(line: 744, column: 57, scope: !3197)
!3201 = !DILocation(line: 744, column: 13, scope: !3125)
!3202 = !DILocation(line: 733, column: 18, scope: !3125)
!3203 = !DILocation(line: 738, column: 18, scope: !3125)
!3204 = distinct !{!3204, !3144, !3205}
!3205 = !DILocation(line: 747, column: 5, scope: !3103)
!3206 = !DILocation(line: 748, column: 5, scope: !3103)
!3207 = !DILocation(line: 749, column: 5, scope: !3103)
!3208 = !DILocation(line: 0, scope: !3103)
!3209 = !DILocation(line: 750, column: 1, scope: !3103)
!3210 = !DILocation(line: 0, scope: !3150)
!3211 = distinct !DISubprogram(name: "rdbSaveObject", scope: !1, file: !1, line: 754, type: !3212, isLocal: false, isDefinition: true, scopeLine: 754, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3214)
!3212 = !DISubroutineType(types: !3213)
!3213 = !{!104, !220, !1982, !1982}
!3214 = !{!3215, !3216, !3217, !3218, !3219, !3220, !3252, !3253, !3257, !3258, !3263, !3275, !3276, !3278, !3281, !3286, !3315, !3316, !3319, !3324, !3327, !3328, !3330, !3331, !3342, !3343, !3344, !3346, !3347, !3348, !3352, !3430, !3437, !3438}
!3215 = !DILocalVariable(name: "rdb", arg: 1, scope: !3211, file: !1, line: 754, type: !220)
!3216 = !DILocalVariable(name: "o", arg: 2, scope: !3211, file: !1, line: 754, type: !1982)
!3217 = !DILocalVariable(name: "key", arg: 3, scope: !3211, file: !1, line: 754, type: !1982)
!3218 = !DILocalVariable(name: "n", scope: !3211, file: !1, line: 755, type: !104)
!3219 = !DILocalVariable(name: "nwritten", scope: !3211, file: !1, line: 755, type: !104)
!3220 = !DILocalVariable(name: "ql", scope: !3221, file: !1, line: 764, type: !3226)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !1, line: 763, column: 52)
!3222 = distinct !DILexicalBlock(scope: !3223, file: !1, line: 763, column: 13)
!3223 = distinct !DILexicalBlock(scope: !3224, file: !1, line: 761, column: 37)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 761, column: 16)
!3225 = distinct !DILexicalBlock(scope: !3211, file: !1, line: 757, column: 9)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_typedef, name: "quicklist", file: !3228, line: 80, baseType: !3229)
!3228 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/quicklist.h", directory: "/root/.unikraft/apps/redis/build")
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quicklist", file: !3228, line: 73, size: 320, elements: !3230)
!3230 = !{!3231, !3247, !3248, !3249, !3250, !3251}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3229, file: !3228, line: 74, baseType: !3232, size: 64)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DIDerivedType(tag: DW_TAG_typedef, name: "quicklistNode", file: !3228, line: 55, baseType: !3234)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quicklistNode", file: !3228, line: 44, size: 256, elements: !3235)
!3235 = !{!3236, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3234, file: !3228, line: 45, baseType: !3237, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3234, file: !3228, line: 46, baseType: !3237, size: 64, offset: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "zl", scope: !3234, file: !3228, line: 47, baseType: !23, size: 64, offset: 128)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !3234, file: !3228, line: 48, baseType: !33, size: 32, offset: 192)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3234, file: !3228, line: 49, baseType: !33, size: 16, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !3234, file: !3228, line: 50, baseType: !33, size: 2, offset: 240, flags: DIFlagBitField, extraData: i64 224)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3234, file: !3228, line: 51, baseType: !33, size: 2, offset: 242, flags: DIFlagBitField, extraData: i64 224)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "recompress", scope: !3234, file: !3228, line: 52, baseType: !33, size: 1, offset: 244, flags: DIFlagBitField, extraData: i64 224)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "attempted_compress", scope: !3234, file: !3228, line: 53, baseType: !33, size: 1, offset: 245, flags: DIFlagBitField, extraData: i64 224)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !3234, file: !3228, line: 54, baseType: !33, size: 10, offset: 246, flags: DIFlagBitField, extraData: i64 224)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3229, file: !3228, line: 75, baseType: !3232, size: 64, offset: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3229, file: !3228, line: 76, baseType: !57, size: 64, offset: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3229, file: !3228, line: 77, baseType: !57, size: 64, offset: 192)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !3229, file: !3228, line: 78, baseType: !20, size: 16, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !3229, file: !3228, line: 79, baseType: !33, size: 16, offset: 272, flags: DIFlagBitField, extraData: i64 256)
!3252 = !DILocalVariable(name: "node", scope: !3221, file: !1, line: 765, type: !3232)
!3253 = !DILocalVariable(name: "data", scope: !3254, file: !1, line: 772, type: !13)
!3254 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 771, column: 54)
!3255 = distinct !DILexicalBlock(scope: !3256, file: !1, line: 771, column: 21)
!3256 = distinct !DILexicalBlock(scope: !3221, file: !1, line: 770, column: 25)
!3257 = !DILocalVariable(name: "compress_len", scope: !3254, file: !1, line: 773, type: !545)
!3258 = !DILocalVariable(name: "set", scope: !3259, file: !1, line: 788, type: !41)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !1, line: 787, column: 45)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !1, line: 787, column: 13)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !1, line: 785, column: 36)
!3262 = distinct !DILexicalBlock(scope: !3224, file: !1, line: 785, column: 16)
!3263 = !DILocalVariable(name: "di", scope: !3259, file: !1, line: 789, type: !3264)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictIterator", file: !43, line: 95, baseType: !3266)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictIterator", file: !43, line: 88, size: 384, elements: !3267)
!3267 = !{!3268, !3269, !3270, !3271, !3272, !3273, !3274}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3266, file: !43, line: 89, baseType: !41, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3266, file: !43, line: 90, baseType: !7, size: 64, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !3266, file: !43, line: 91, baseType: !20, size: 32, offset: 128)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "safe", scope: !3266, file: !43, line: 91, baseType: !20, size: 32, offset: 160)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3266, file: !43, line: 92, baseType: !82, size: 64, offset: 192)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "nextEntry", scope: !3266, file: !43, line: 92, baseType: !82, size: 64, offset: 256)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "fingerprint", scope: !3266, file: !43, line: 94, baseType: !12, size: 64, offset: 320)
!3275 = !DILocalVariable(name: "de", scope: !3259, file: !1, line: 790, type: !82)
!3276 = !DILocalVariable(name: "ele", scope: !3277, file: !1, line: 799, type: !261)
!3277 = distinct !DILexicalBlock(scope: !3259, file: !1, line: 798, column: 48)
!3278 = !DILocalVariable(name: "l", scope: !3279, file: !1, line: 810, type: !545)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !1, line: 809, column: 56)
!3280 = distinct !DILexicalBlock(scope: !3260, file: !1, line: 809, column: 20)
!3281 = !DILocalVariable(name: "l", scope: !3282, file: !1, line: 820, type: !545)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !1, line: 819, column: 50)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !1, line: 819, column: 13)
!3284 = distinct !DILexicalBlock(scope: !3285, file: !1, line: 817, column: 37)
!3285 = distinct !DILexicalBlock(scope: !3262, file: !1, line: 817, column: 16)
!3286 = !DILocalVariable(name: "zs", scope: !3287, file: !1, line: 825, type: !3289)
!3287 = distinct !DILexicalBlock(scope: !3288, file: !1, line: 824, column: 58)
!3288 = distinct !DILexicalBlock(scope: !3283, file: !1, line: 824, column: 20)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = !DIDerivedType(tag: DW_TAG_typedef, name: "zset", file: !1984, line: 829, baseType: !3291)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zset", file: !1984, line: 826, size: 128, elements: !3292)
!3292 = !{!3293, !3294}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !3291, file: !1984, line: 827, baseType: !41, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "zsl", scope: !3291, file: !1984, line: 828, baseType: !3295, size: 64, offset: 64)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplist", file: !1984, line: 824, baseType: !3297)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplist", file: !1984, line: 820, size: 256, elements: !3298)
!3298 = !{!3299, !3312, !3313, !3314}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3297, file: !1984, line: 821, baseType: !3300, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 64)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplistNode", file: !1984, line: 810, size: 192, elements: !3302)
!3302 = !{!3303, !3304, !3305, !3306}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "ele", scope: !3301, file: !1984, line: 811, baseType: !261, size: 64)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "score", scope: !3301, file: !1984, line: 812, baseType: !94, size: 64, offset: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "backward", scope: !3301, file: !1984, line: 813, baseType: !3300, size: 64, offset: 128)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3301, file: !1984, line: 817, baseType: !3307, offset: 192)
!3307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3308, elements: !39)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplistLevel", file: !1984, line: 814, size: 128, elements: !3309)
!3309 = !{!3310, !3311}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !3308, file: !1984, line: 815, baseType: !3300, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !3308, file: !1984, line: 816, baseType: !57, size: 64, offset: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3297, file: !1984, line: 821, baseType: !3300, size: 64, offset: 64)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3297, file: !1984, line: 822, baseType: !57, size: 64, offset: 128)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3297, file: !1984, line: 823, baseType: !20, size: 32, offset: 192)
!3315 = !DILocalVariable(name: "zsl", scope: !3287, file: !1, line: 826, type: !3295)
!3316 = !DILocalVariable(name: "zn", scope: !3287, file: !1, line: 837, type: !3317)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplistNode", file: !1984, line: 818, baseType: !3301)
!3319 = !DILocalVariable(name: "l", scope: !3320, file: !1, line: 856, type: !545)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !1, line: 855, column: 50)
!3321 = distinct !DILexicalBlock(scope: !3322, file: !1, line: 855, column: 13)
!3322 = distinct !DILexicalBlock(scope: !3323, file: !1, line: 853, column: 37)
!3323 = distinct !DILexicalBlock(scope: !3285, file: !1, line: 853, column: 16)
!3324 = !DILocalVariable(name: "di", scope: !3325, file: !1, line: 862, type: !3264)
!3325 = distinct !DILexicalBlock(scope: !3326, file: !1, line: 861, column: 52)
!3326 = distinct !DILexicalBlock(scope: !3321, file: !1, line: 861, column: 20)
!3327 = !DILocalVariable(name: "de", scope: !3325, file: !1, line: 863, type: !82)
!3328 = !DILocalVariable(name: "field", scope: !3329, file: !1, line: 872, type: !261)
!3329 = distinct !DILexicalBlock(scope: !3325, file: !1, line: 871, column: 48)
!3330 = !DILocalVariable(name: "value", scope: !3329, file: !1, line: 873, type: !261)
!3331 = !DILocalVariable(name: "s", scope: !3332, file: !1, line: 896, type: !3334)
!3332 = distinct !DILexicalBlock(scope: !3333, file: !1, line: 894, column: 39)
!3333 = distinct !DILexicalBlock(scope: !3323, file: !1, line: 894, column: 16)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_typedef, name: "stream", file: !2977, line: 21, baseType: !3336)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stream", file: !2977, line: 16, size: 320, elements: !3337)
!3337 = !{!3338, !3339, !3340, !3341}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !3336, file: !2977, line: 17, baseType: !2919, size: 64)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3336, file: !2977, line: 18, baseType: !55, size: 64, offset: 64)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "last_id", scope: !3336, file: !2977, line: 19, baseType: !3111, size: 128, offset: 128)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "cgroups", scope: !3336, file: !2977, line: 20, baseType: !2919, size: 64, offset: 256)
!3342 = !DILocalVariable(name: "rax", scope: !3332, file: !1, line: 897, type: !2919)
!3343 = !DILocalVariable(name: "ri", scope: !3332, file: !1, line: 904, type: !2944)
!3344 = !DILocalVariable(name: "lp", scope: !3345, file: !1, line: 908, type: !23)
!3345 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 907, column: 30)
!3346 = !DILocalVariable(name: "lp_bytes", scope: !3345, file: !1, line: 909, type: !545)
!3347 = !DILocalVariable(name: "num_cgroups", scope: !3332, file: !1, line: 932, type: !545)
!3348 = !DILocalVariable(name: "cg", scope: !3349, file: !1, line: 941, type: !3106)
!3349 = distinct !DILexicalBlock(scope: !3350, file: !1, line: 940, column: 33)
!3350 = distinct !DILexicalBlock(scope: !3351, file: !1, line: 936, column: 26)
!3351 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 936, column: 13)
!3352 = !DILocalVariable(name: "io", scope: !3353, file: !1, line: 966, type: !3355)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !1, line: 964, column: 39)
!3354 = distinct !DILexicalBlock(scope: !3333, file: !1, line: 964, column: 16)
!3355 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleIO", file: !1984, line: 564, baseType: !3356)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleIO", file: !1984, line: 555, size: 384, elements: !3357)
!3357 = !{!3358, !3359, !3360, !3424, !3425, !3426, !3429}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3356, file: !1984, line: 556, baseType: !545, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "rio", scope: !3356, file: !1984, line: 557, baseType: !220, size: 64, offset: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3356, file: !1984, line: 558, baseType: !3361, size: 64, offset: 128)
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 64)
!3362 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleType", file: !1984, line: 530, baseType: !3363)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleType", file: !1984, line: 517, size: 768, elements: !3364)
!3364 = !{!3365, !3366, !3369, !3375, !3380, !3386, !3391, !3404, !3409, !3414, !3419, !3420}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3363, file: !1984, line: 518, baseType: !55, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !3363, file: !1984, line: 519, baseType: !3367, size: 64, offset: 64)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModule", file: !1984, line: 496, flags: DIFlagFwdDecl)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_load", scope: !3363, file: !1984, line: 520, baseType: !3370, size: 64, offset: 128)
!3370 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeLoadFunc", file: !1984, line: 506, baseType: !3371)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DISubroutineType(types: !3373)
!3373 = !{!13, !3374, !20}
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_save", scope: !3363, file: !1984, line: 521, baseType: !3376, size: 64, offset: 192)
!3376 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeSaveFunc", file: !1984, line: 507, baseType: !3377)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 64)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{null, !3374, !13}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite", scope: !3363, file: !1984, line: 522, baseType: !3381, size: 64, offset: 256)
!3381 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeRewriteFunc", file: !1984, line: 510, baseType: !3382)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{null, !3374, !3385, !13}
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "mem_usage", scope: !3363, file: !1984, line: 523, baseType: !3387, size: 64, offset: 320)
!3387 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeMemUsageFunc", file: !1984, line: 512, baseType: !3388)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!545, !58}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !3363, file: !1984, line: 524, baseType: !3392, size: 64, offset: 384)
!3392 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeDigestFunc", file: !1984, line: 511, baseType: !3393)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{null, !3396, !13}
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleDigest", file: !1984, line: 583, size: 320, elements: !3398)
!3398 = !{!3399, !3403}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "o", scope: !3397, file: !1984, line: 584, baseType: !3400, size: 160)
!3400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 160, elements: !3401)
!3401 = !{!3402}
!3402 = !DISubrange(count: 20)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3397, file: !1984, line: 585, baseType: !3400, size: 160, offset: 160)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3363, file: !1984, line: 525, baseType: !3405, size: 64, offset: 448)
!3405 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeFreeFunc", file: !1984, line: 513, baseType: !3406)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{null, !13}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "aux_load", scope: !3363, file: !1984, line: 526, baseType: !3410, size: 64, offset: 512)
!3410 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeAuxLoadFunc", file: !1984, line: 508, baseType: !3411)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DISubroutineType(types: !3413)
!3413 = !{!20, !3374, !20, !20}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save", scope: !3363, file: !1984, line: 527, baseType: !3415, size: 64, offset: 576)
!3415 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeAuxSaveFunc", file: !1984, line: 509, baseType: !3416)
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DISubroutineType(types: !3418)
!3418 = !{null, !3374, !20}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save_triggers", scope: !3363, file: !1984, line: 528, baseType: !20, size: 32, offset: 640)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3363, file: !1984, line: 529, baseType: !3421, size: 80, offset: 672)
!3421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 80, elements: !3422)
!3422 = !{!3423}
!3423 = !DISubrange(count: 10)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3356, file: !1984, line: 559, baseType: !20, size: 32, offset: 192)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !3356, file: !1984, line: 560, baseType: !20, size: 32, offset: 224)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !3356, file: !1984, line: 562, baseType: !3427, size: 64, offset: 256)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCtx", file: !1984, line: 499, flags: DIFlagFwdDecl)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3356, file: !1984, line: 563, baseType: !3385, size: 64, offset: 320)
!3430 = !DILocalVariable(name: "mv", scope: !3353, file: !1, line: 967, type: !3431)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleValue", file: !1984, line: 550, baseType: !3433)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moduleValue", file: !1984, line: 547, size: 128, elements: !3434)
!3434 = !{!3435, !3436}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3433, file: !1984, line: 548, baseType: !3361, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3433, file: !1984, line: 549, baseType: !13, size: 64, offset: 64)
!3437 = !DILocalVariable(name: "mt", scope: !3353, file: !1, line: 968, type: !3361)
!3438 = !DILocalVariable(name: "retval", scope: !3353, file: !1, line: 972, type: !20)
!3439 = !DILocation(line: 141, column: 19, scope: !757, inlinedAt: !3440)
!3440 = distinct !DILocation(line: 979, column: 18, scope: !3353)
!3441 = !DILocation(line: 754, column: 28, scope: !3211)
!3442 = !DILocation(line: 754, column: 39, scope: !3211)
!3443 = !DILocation(line: 754, column: 48, scope: !3211)
!3444 = !DILocation(line: 755, column: 13, scope: !3211)
!3445 = !DILocation(line: 755, column: 20, scope: !3211)
!3446 = !DILocation(line: 757, column: 12, scope: !3225)
!3447 = !DILocation(line: 757, column: 9, scope: !3211)
!3448 = !DILocation(line: 759, column: 18, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !1, line: 759, column: 13)
!3450 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 757, column: 32)
!3451 = !DILocation(line: 759, column: 46, scope: !3449)
!3452 = !DILocation(line: 759, column: 13, scope: !3450)
!3453 = !DILocation(line: 763, column: 16, scope: !3222)
!3454 = !DILocation(line: 763, column: 25, scope: !3222)
!3455 = !DILocation(line: 763, column: 13, scope: !3223)
!3456 = !DILocation(line: 764, column: 32, scope: !3221)
!3457 = !DILocation(line: 764, column: 24, scope: !3221)
!3458 = !DILocation(line: 765, column: 39, scope: !3221)
!3459 = !{!3460, !201, i64 0}
!3460 = !{!"quicklist", !201, i64 0, !201, i64 8, !205, i64 16, !205, i64 24, !192, i64 32, !192, i64 34}
!3461 = !DILocation(line: 765, column: 28, scope: !3221)
!3462 = !DILocation(line: 767, column: 41, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3221, file: !1, line: 767, column: 17)
!3464 = !{!3460, !205, i64 24}
!3465 = !DILocation(line: 767, column: 22, scope: !3463)
!3466 = !DILocation(line: 767, column: 47, scope: !3463)
!3467 = !DILocation(line: 767, column: 17, scope: !3221)
!3468 = !DILocation(line: 770, column: 13, scope: !3221)
!3469 = !DILocation(line: 771, column: 21, scope: !3255)
!3470 = !DILocation(line: 771, column: 21, scope: !3256)
!3471 = !DILocation(line: 772, column: 21, scope: !3254)
!3472 = !DILocation(line: 772, column: 27, scope: !3254)
!3473 = !DILocation(line: 773, column: 43, scope: !3254)
!3474 = !DILocation(line: 773, column: 28, scope: !3254)
!3475 = !DILocation(line: 774, column: 49, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 774, column: 25)
!3477 = !DILocation(line: 774, column: 73, scope: !3476)
!3478 = !{!3479, !192, i64 24}
!3479 = !{!"quicklistNode", !201, i64 0, !201, i64 8, !201, i64 16, !192, i64 24, !192, i64 28, !192, i64 30, !192, i64 30, !192, i64 30, !192, i64 30, !192, i64 30}
!3480 = !DILocation(line: 774, column: 67, scope: !3476)
!3481 = !DILocation(line: 774, column: 30, scope: !3476)
!3482 = !DILocation(line: 774, column: 78, scope: !3476)
!3483 = !DILocation(line: 776, column: 17, scope: !3255)
!3484 = !DILocation(line: 777, column: 57, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !1, line: 777, column: 25)
!3486 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 776, column: 24)
!3487 = !{!3479, !201, i64 16}
!3488 = !DILocation(line: 777, column: 66, scope: !3485)
!3489 = !DILocation(line: 777, column: 60, scope: !3485)
!3490 = !DILocation(line: 777, column: 30, scope: !3485)
!3491 = !DILocation(line: 777, column: 71, scope: !3485)
!3492 = !DILocation(line: 777, column: 25, scope: !3486)
!3493 = !DILocation(line: 0, scope: !3486)
!3494 = !DILocation(line: 780, column: 30, scope: !3256)
!3495 = !{!3479, !201, i64 8}
!3496 = distinct !{!3496, !3468, !3497}
!3497 = !DILocation(line: 781, column: 13, scope: !3221)
!3498 = !DILocation(line: 783, column: 13, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3222, file: !1, line: 782, column: 16)
!3500 = !DILocation(line: 787, column: 16, scope: !3260)
!3501 = !DILocation(line: 787, column: 13, scope: !3261)
!3502 = !DILocation(line: 788, column: 28, scope: !3259)
!3503 = !DILocation(line: 788, column: 19, scope: !3259)
!3504 = !DILocation(line: 789, column: 32, scope: !3259)
!3505 = !DILocation(line: 789, column: 27, scope: !3259)
!3506 = !DILocation(line: 792, column: 37, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3259, file: !1, line: 792, column: 17)
!3508 = !{!3509, !205, i64 24}
!3509 = !{!"dictht", !201, i64 0, !205, i64 8, !205, i64 16, !205, i64 24}
!3510 = !DILocation(line: 792, column: 22, scope: !3507)
!3511 = !DILocation(line: 792, column: 53, scope: !3507)
!3512 = !DILocation(line: 792, column: 17, scope: !3259)
!3513 = !DILocation(line: 793, column: 17, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3507, file: !1, line: 792, column: 60)
!3515 = !DILocation(line: 794, column: 17, scope: !3514)
!3516 = !DILocation(line: 798, column: 25, scope: !3259)
!3517 = !DILocation(line: 790, column: 24, scope: !3259)
!3518 = !DILocation(line: 798, column: 39, scope: !3259)
!3519 = !DILocation(line: 798, column: 13, scope: !3259)
!3520 = !DILocation(line: 799, column: 27, scope: !3277)
!3521 = !{!3522, !201, i64 0}
!3522 = !{!"dictEntry", !201, i64 0, !193, i64 8, !201, i64 16}
!3523 = !DILocation(line: 799, column: 21, scope: !3277)
!3524 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !3525)
!3525 = distinct !DILocation(line: 800, column: 67, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3277, file: !1, line: 800, column: 21)
!3527 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !3525)
!3528 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !3525)
!3529 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !3525)
!3530 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !3525)
!3531 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !3525)
!3532 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !3525)
!3533 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !3525)
!3534 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !3525)
!3535 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !3525)
!3536 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !3525)
!3537 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !3525)
!3538 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !3525)
!3539 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !3525)
!3540 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !3525)
!3541 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !3525)
!3542 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !3525)
!3543 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !3525)
!3544 = !DILocation(line: 0, scope: !2022, inlinedAt: !3525)
!3545 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !3525)
!3546 = !DILocation(line: 800, column: 26, scope: !3526)
!3547 = !DILocation(line: 801, column: 21, scope: !3526)
!3548 = !DILocation(line: 806, column: 26, scope: !3277)
!3549 = !DILocation(line: 800, column: 21, scope: !3277)
!3550 = !DILocation(line: 803, column: 21, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3526, file: !1, line: 802, column: 17)
!3552 = !DILocation(line: 796, column: 22, scope: !3259)
!3553 = !DILocation(line: 808, column: 13, scope: !3259)
!3554 = !DILocation(line: 810, column: 50, scope: !3279)
!3555 = !DILocation(line: 810, column: 24, scope: !3279)
!3556 = !DILocation(line: 810, column: 20, scope: !3279)
!3557 = !DILocation(line: 812, column: 46, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3279, file: !1, line: 812, column: 17)
!3559 = !DILocation(line: 812, column: 22, scope: !3558)
!3560 = !DILocation(line: 812, column: 54, scope: !3558)
!3561 = !DILocation(line: 815, column: 13, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3280, file: !1, line: 814, column: 16)
!3563 = !DILocation(line: 819, column: 16, scope: !3283)
!3564 = !DILocation(line: 819, column: 13, scope: !3284)
!3565 = !DILocation(line: 820, column: 58, scope: !3282)
!3566 = !DILocation(line: 820, column: 24, scope: !3282)
!3567 = !DILocation(line: 820, column: 20, scope: !3282)
!3568 = !DILocation(line: 822, column: 46, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3282, file: !1, line: 822, column: 17)
!3570 = !DILocation(line: 822, column: 22, scope: !3569)
!3571 = !DILocation(line: 822, column: 54, scope: !3569)
!3572 = !DILocation(line: 825, column: 27, scope: !3287)
!3573 = !DILocation(line: 825, column: 19, scope: !3287)
!3574 = !DILocation(line: 826, column: 34, scope: !3287)
!3575 = !{!3576, !201, i64 8}
!3576 = !{!"zset", !201, i64 0, !201, i64 8}
!3577 = !DILocation(line: 826, column: 24, scope: !3287)
!3578 = !DILocation(line: 828, column: 42, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3287, file: !1, line: 828, column: 17)
!3580 = !{!3581, !205, i64 16}
!3581 = !{!"zskiplist", !201, i64 0, !201, i64 8, !205, i64 16, !192, i64 24}
!3582 = !DILocation(line: 828, column: 22, scope: !3579)
!3583 = !DILocation(line: 828, column: 51, scope: !3579)
!3584 = !DILocation(line: 828, column: 17, scope: !3287)
!3585 = !DILocation(line: 837, column: 38, scope: !3287)
!3586 = !DILocation(line: 837, column: 28, scope: !3287)
!3587 = !DILocation(line: 0, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3287, file: !1, line: 838, column: 32)
!3589 = !DILocation(line: 838, column: 23, scope: !3287)
!3590 = !DILocation(line: 838, column: 13, scope: !3287)
!3591 = !DILocation(line: 840, column: 41, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3588, file: !1, line: 839, column: 21)
!3593 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !3594)
!3594 = distinct !DILocation(line: 840, column: 45, scope: !3592)
!3595 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !3594)
!3596 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !3594)
!3597 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !3594)
!3598 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !3594)
!3599 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !3594)
!3600 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !3594)
!3601 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !3594)
!3602 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !3594)
!3603 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !3594)
!3604 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !3594)
!3605 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !3594)
!3606 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !3594)
!3607 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !3594)
!3608 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !3594)
!3609 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !3594)
!3610 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !3594)
!3611 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !3594)
!3612 = !DILocation(line: 0, scope: !2022, inlinedAt: !3594)
!3613 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !3594)
!3614 = !DILocation(line: 839, column: 26, scope: !3592)
!3615 = !DILocation(line: 840, column: 63, scope: !3592)
!3616 = !DILocation(line: 839, column: 21, scope: !3588)
!3617 = !DILocation(line: 845, column: 59, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3588, file: !1, line: 845, column: 21)
!3619 = !DILocation(line: 598, column: 35, scope: !2348, inlinedAt: !3620)
!3620 = distinct !DILocation(line: 845, column: 26, scope: !3618)
!3621 = !DILocation(line: 598, column: 47, scope: !2348, inlinedAt: !3620)
!3622 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !3623)
!3623 = distinct !DILocation(line: 600, column: 12, scope: !2348, inlinedAt: !3620)
!3624 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !3623)
!3625 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !3623)
!3626 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !3627)
!3627 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !3623)
!3628 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !3627)
!3629 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !3627)
!3630 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !3627)
!3631 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !3627)
!3632 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !3627)
!3633 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !3627)
!3634 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !3627)
!3635 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !3627)
!3636 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !3627)
!3637 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !3627)
!3638 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !3627)
!3639 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !3627)
!3640 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !3627)
!3641 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !3627)
!3642 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !3627)
!3643 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !3627)
!3644 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !3627)
!3645 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !3627)
!3646 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !3627)
!3647 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !3623)
!3648 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !3623)
!3649 = !DILocation(line: 600, column: 5, scope: !2348, inlinedAt: !3620)
!3650 = !DILocation(line: 845, column: 21, scope: !3588)
!3651 = !DILocation(line: 844, column: 26, scope: !3588)
!3652 = !DILocation(line: 847, column: 26, scope: !3588)
!3653 = !DILocation(line: 848, column: 26, scope: !3588)
!3654 = distinct !{!3654, !3590, !3655}
!3655 = !DILocation(line: 849, column: 13, scope: !3287)
!3656 = !DILocation(line: 851, column: 13, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3288, file: !1, line: 850, column: 16)
!3658 = !DILocation(line: 855, column: 16, scope: !3321)
!3659 = !DILocation(line: 855, column: 13, scope: !3322)
!3660 = !DILocation(line: 856, column: 58, scope: !3320)
!3661 = !DILocation(line: 856, column: 24, scope: !3320)
!3662 = !DILocation(line: 856, column: 20, scope: !3320)
!3663 = !DILocation(line: 858, column: 46, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3320, file: !1, line: 858, column: 17)
!3665 = !DILocation(line: 858, column: 22, scope: !3664)
!3666 = !DILocation(line: 858, column: 54, scope: !3664)
!3667 = !DILocation(line: 862, column: 51, scope: !3325)
!3668 = !DILocation(line: 862, column: 32, scope: !3325)
!3669 = !DILocation(line: 862, column: 27, scope: !3325)
!3670 = !DILocation(line: 865, column: 37, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3325, file: !1, line: 865, column: 17)
!3672 = !DILocation(line: 865, column: 22, scope: !3671)
!3673 = !DILocation(line: 865, column: 63, scope: !3671)
!3674 = !DILocation(line: 865, column: 17, scope: !3325)
!3675 = !DILocation(line: 866, column: 17, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3671, file: !1, line: 865, column: 70)
!3677 = !DILocation(line: 867, column: 17, scope: !3676)
!3678 = !DILocation(line: 871, column: 25, scope: !3325)
!3679 = !DILocation(line: 863, column: 24, scope: !3325)
!3680 = !DILocation(line: 871, column: 39, scope: !3325)
!3681 = !DILocation(line: 871, column: 13, scope: !3325)
!3682 = !DILocation(line: 872, column: 29, scope: !3329)
!3683 = !DILocation(line: 872, column: 21, scope: !3329)
!3684 = !DILocation(line: 873, column: 29, scope: !3329)
!3685 = !DILocation(line: 873, column: 21, scope: !3329)
!3686 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !3687)
!3687 = distinct !DILocation(line: 876, column: 25, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3329, file: !1, line: 875, column: 21)
!3689 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !3687)
!3690 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !3687)
!3691 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !3687)
!3692 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !3687)
!3693 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !3687)
!3694 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !3687)
!3695 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !3687)
!3696 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !3687)
!3697 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !3687)
!3698 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !3687)
!3699 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !3687)
!3700 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !3687)
!3701 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !3687)
!3702 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !3687)
!3703 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !3687)
!3704 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !3687)
!3705 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !3687)
!3706 = !DILocation(line: 0, scope: !2022, inlinedAt: !3687)
!3707 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !3687)
!3708 = !DILocation(line: 875, column: 26, scope: !3688)
!3709 = !DILocation(line: 876, column: 41, scope: !3688)
!3710 = !DILocation(line: 875, column: 21, scope: !3329)
!3711 = !DILocation(line: 878, column: 21, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3688, file: !1, line: 877, column: 17)
!3713 = !DILocation(line: 879, column: 21, scope: !3712)
!3714 = !DILocation(line: 881, column: 26, scope: !3329)
!3715 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !3716)
!3716 = distinct !DILocation(line: 883, column: 25, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3329, file: !1, line: 882, column: 21)
!3718 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !3716)
!3719 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !3716)
!3720 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !3716)
!3721 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !3716)
!3722 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !3716)
!3723 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !3716)
!3724 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !3716)
!3725 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !3716)
!3726 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !3716)
!3727 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !3716)
!3728 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !3716)
!3729 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !3716)
!3730 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !3716)
!3731 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !3716)
!3732 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !3716)
!3733 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !3716)
!3734 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !3716)
!3735 = !DILocation(line: 0, scope: !2022, inlinedAt: !3716)
!3736 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !3716)
!3737 = !DILocation(line: 882, column: 26, scope: !3717)
!3738 = !DILocation(line: 883, column: 41, scope: !3717)
!3739 = !DILocation(line: 888, column: 26, scope: !3329)
!3740 = !DILocation(line: 882, column: 21, scope: !3329)
!3741 = !DILocation(line: 885, column: 21, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3717, file: !1, line: 884, column: 17)
!3743 = !DILocation(line: 886, column: 21, scope: !3742)
!3744 = !DILocation(line: 869, column: 22, scope: !3325)
!3745 = !DILocation(line: 890, column: 13, scope: !3325)
!3746 = !DILocation(line: 892, column: 13, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3326, file: !1, line: 891, column: 16)
!3748 = !DILocation(line: 896, column: 24, scope: !3332)
!3749 = !DILocation(line: 896, column: 17, scope: !3332)
!3750 = !DILocation(line: 897, column: 23, scope: !3332)
!3751 = !{!3752, !201, i64 0}
!3752 = !{!"stream", !201, i64 0, !205, i64 8, !3133, i64 16, !201, i64 32}
!3753 = !DILocation(line: 897, column: 14, scope: !3332)
!3754 = !DILocation(line: 898, column: 33, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 898, column: 13)
!3756 = !DILocation(line: 898, column: 18, scope: !3755)
!3757 = !DILocation(line: 898, column: 48, scope: !3755)
!3758 = !DILocation(line: 898, column: 13, scope: !3332)
!3759 = !DILocation(line: 904, column: 9, scope: !3332)
!3760 = !DILocation(line: 904, column: 21, scope: !3332)
!3761 = !DILocation(line: 905, column: 9, scope: !3332)
!3762 = !DILocation(line: 906, column: 9, scope: !3332)
!3763 = !DILocation(line: 907, column: 9, scope: !3332)
!3764 = !DILocation(line: 899, column: 18, scope: !3332)
!3765 = !DILocation(line: 907, column: 16, scope: !3332)
!3766 = !DILocation(line: 908, column: 36, scope: !3345)
!3767 = !DILocation(line: 908, column: 28, scope: !3345)
!3768 = !DILocation(line: 909, column: 31, scope: !3345)
!3769 = !DILocation(line: 910, column: 46, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3345, file: !1, line: 910, column: 17)
!3771 = !DILocation(line: 910, column: 53, scope: !3770)
!3772 = !DILocation(line: 910, column: 22, scope: !3770)
!3773 = !DILocation(line: 910, column: 63, scope: !3770)
!3774 = !DILocation(line: 910, column: 17, scope: !3345)
!3775 = !DILocation(line: 909, column: 20, scope: !3345)
!3776 = !DILocation(line: 911, column: 22, scope: !3345)
!3777 = !DILocation(line: 912, column: 22, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3345, file: !1, line: 912, column: 17)
!3779 = !DILocation(line: 912, column: 57, scope: !3778)
!3780 = !DILocation(line: 913, column: 22, scope: !3345)
!3781 = !DILocation(line: 915, column: 9, scope: !3332)
!3782 = !DILocation(line: 920, column: 36, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 920, column: 13)
!3784 = !{!3752, !205, i64 8}
!3785 = !DILocation(line: 920, column: 18, scope: !3783)
!3786 = !DILocation(line: 920, column: 45, scope: !3783)
!3787 = !DILocation(line: 920, column: 13, scope: !3332)
!3788 = !DILocation(line: 923, column: 44, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 923, column: 13)
!3790 = !{!3752, !205, i64 16}
!3791 = !DILocation(line: 923, column: 18, scope: !3789)
!3792 = !DILocation(line: 923, column: 49, scope: !3789)
!3793 = !DILocation(line: 923, column: 13, scope: !3332)
!3794 = !DILocation(line: 925, column: 44, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 925, column: 13)
!3796 = !{!3752, !205, i64 24}
!3797 = !DILocation(line: 925, column: 18, scope: !3795)
!3798 = !DILocation(line: 925, column: 50, scope: !3795)
!3799 = !DILocation(line: 925, column: 13, scope: !3332)
!3800 = !DILocation(line: 921, column: 18, scope: !3332)
!3801 = !DILocation(line: 924, column: 18, scope: !3332)
!3802 = !DILocation(line: 926, column: 18, scope: !3332)
!3803 = !DILocation(line: 932, column: 33, scope: !3332)
!3804 = !{!3752, !201, i64 32}
!3805 = !DILocation(line: 932, column: 30, scope: !3332)
!3806 = !DILocation(line: 932, column: 43, scope: !3332)
!3807 = !DILocation(line: 932, column: 16, scope: !3332)
!3808 = !DILocation(line: 933, column: 18, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 933, column: 13)
!3810 = !DILocation(line: 933, column: 47, scope: !3809)
!3811 = !DILocation(line: 933, column: 13, scope: !3332)
!3812 = !DILocation(line: 934, column: 18, scope: !3332)
!3813 = !DILocation(line: 936, column: 13, scope: !3351)
!3814 = !DILocation(line: 936, column: 13, scope: !3332)
!3815 = !DILocation(line: 938, column: 29, scope: !3350)
!3816 = !DILocation(line: 938, column: 13, scope: !3350)
!3817 = !DILocation(line: 939, column: 13, scope: !3350)
!3818 = !DILocation(line: 940, column: 13, scope: !3350)
!3819 = !DILocation(line: 940, column: 19, scope: !3350)
!3820 = !DILocation(line: 941, column: 35, scope: !3349)
!3821 = !DILocation(line: 941, column: 27, scope: !3349)
!3822 = !DILocation(line: 944, column: 50, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3349, file: !1, line: 944, column: 21)
!3824 = !DILocation(line: 944, column: 57, scope: !3823)
!3825 = !DILocation(line: 944, column: 26, scope: !3823)
!3826 = !DILocation(line: 944, column: 67, scope: !3823)
!3827 = !DILocation(line: 944, column: 21, scope: !3349)
!3828 = !DILocation(line: 949, column: 53, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3349, file: !1, line: 949, column: 21)
!3830 = !{!3132, !205, i64 0}
!3831 = !DILocation(line: 949, column: 26, scope: !3829)
!3832 = !DILocation(line: 949, column: 58, scope: !3829)
!3833 = !DILocation(line: 949, column: 21, scope: !3349)
!3834 = !DILocation(line: 951, column: 53, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3349, file: !1, line: 951, column: 21)
!3836 = !{!3132, !205, i64 8}
!3837 = !DILocation(line: 951, column: 26, scope: !3835)
!3838 = !DILocation(line: 951, column: 59, scope: !3835)
!3839 = !DILocation(line: 951, column: 21, scope: !3349)
!3840 = !DILocation(line: 955, column: 51, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3349, file: !1, line: 955, column: 21)
!3842 = !{!3132, !201, i64 16}
!3843 = !DILocation(line: 955, column: 26, scope: !3841)
!3844 = !DILocation(line: 955, column: 59, scope: !3841)
!3845 = !DILocation(line: 955, column: 21, scope: !3349)
!3846 = !DILocation(line: 946, column: 26, scope: !3349)
!3847 = !DILocation(line: 950, column: 26, scope: !3349)
!3848 = !DILocation(line: 952, column: 26, scope: !3349)
!3849 = !DILocation(line: 956, column: 26, scope: !3349)
!3850 = !DILocation(line: 959, column: 26, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3349, file: !1, line: 959, column: 21)
!3852 = !DILocation(line: 959, column: 58, scope: !3851)
!3853 = !DILocation(line: 960, column: 26, scope: !3349)
!3854 = !DILocation(line: 962, column: 13, scope: !3350)
!3855 = !DILocation(line: 963, column: 9, scope: !3350)
!3856 = !DILocation(line: 964, column: 5, scope: !3333)
!3857 = !DILocation(line: 0, scope: !3332)
!3858 = !DILocation(line: 966, column: 9, scope: !3353)
!3859 = !DILocation(line: 967, column: 30, scope: !3353)
!3860 = !DILocation(line: 967, column: 22, scope: !3353)
!3861 = !DILocation(line: 968, column: 30, scope: !3353)
!3862 = !{!3863, !201, i64 0}
!3863 = !{!"moduleValue", !201, i64 0, !201, i64 8}
!3864 = !DILocation(line: 968, column: 21, scope: !3353)
!3865 = !DILocation(line: 972, column: 41, scope: !3353)
!3866 = !{!3867, !205, i64 0}
!3867 = !{!"RedisModuleType", !205, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !201, i64 40, !201, i64 48, !201, i64 56, !201, i64 64, !201, i64 72, !192, i64 80, !193, i64 84}
!3868 = !DILocation(line: 972, column: 22, scope: !3353)
!3869 = !DILocation(line: 972, column: 13, scope: !3353)
!3870 = !DILocation(line: 973, column: 20, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3353, file: !1, line: 973, column: 13)
!3872 = !DILocation(line: 973, column: 13, scope: !3353)
!3873 = !DILocation(line: 974, column: 12, scope: !3353)
!3874 = !DILocation(line: 977, column: 9, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3353, file: !1, line: 977, column: 9)
!3876 = !{!3877, !201, i64 8}
!3877 = !{!"RedisModuleIO", !205, i64 0, !201, i64 8, !201, i64 16, !192, i64 24, !192, i64 28, !201, i64 32, !201, i64 40}
!3878 = !{!3877, !201, i64 16}
!3879 = !{!3877, !205, i64 0}
!3880 = !{!3877, !192, i64 24}
!3881 = !{!3877, !192, i64 28}
!3882 = !{!3877, !201, i64 40}
!3883 = !{!3877, !201, i64 32}
!3884 = !DILocation(line: 978, column: 13, scope: !3353)
!3885 = !{!3867, !201, i64 24}
!3886 = !DILocation(line: 978, column: 30, scope: !3353)
!3887 = !{!3863, !201, i64 8}
!3888 = !DILocation(line: 966, column: 23, scope: !3353)
!3889 = !DILocation(line: 978, column: 9, scope: !3353)
!3890 = !DILocation(line: 140, column: 21, scope: !757, inlinedAt: !3440)
!3891 = !DILocation(line: 140, column: 35, scope: !757, inlinedAt: !3440)
!3892 = !DILocation(line: 141, column: 5, scope: !757, inlinedAt: !3440)
!3893 = !DILocation(line: 146, column: 16, scope: !778, inlinedAt: !3440)
!3894 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !3895)
!3895 = distinct !DILocation(line: 147, column: 13, scope: !782, inlinedAt: !3440)
!3896 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !3895)
!3897 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !3895)
!3898 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !3895)
!3899 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !3895)
!3900 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !3901)
!3901 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !3895)
!3902 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !3901)
!3903 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !3901)
!3904 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !3901)
!3905 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !3901)
!3906 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !3901)
!3907 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !3901)
!3908 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !3901)
!3909 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !3901)
!3910 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !3901)
!3911 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !3901)
!3912 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !3901)
!3913 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !3901)
!3914 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !3901)
!3915 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !3901)
!3916 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !3901)
!3917 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !3901)
!3918 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !3901)
!3919 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !3901)
!3920 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !3901)
!3921 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !3901)
!3922 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !3895)
!3923 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !3895)
!3924 = !DILocation(line: 171, column: 1, scope: !757, inlinedAt: !3440)
!3925 = !DILocation(line: 981, column: 22, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3353, file: !1, line: 980, column: 13)
!3927 = !DILocation(line: 981, column: 13, scope: !3926)
!3928 = !DILocation(line: 983, column: 22, scope: !3926)
!3929 = !DILocation(line: 985, column: 16, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3353, file: !1, line: 985, column: 13)
!3931 = !DILocation(line: 985, column: 13, scope: !3930)
!3932 = !DILocation(line: 985, column: 13, scope: !3353)
!3933 = !DILocation(line: 986, column: 13, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3930, file: !1, line: 985, column: 21)
!3935 = !DILocation(line: 987, column: 22, scope: !3934)
!3936 = !DILocation(line: 987, column: 13, scope: !3934)
!3937 = !DILocation(line: 988, column: 9, scope: !3934)
!3938 = !DILocation(line: 989, column: 19, scope: !3353)
!3939 = !DILocation(line: 989, column: 16, scope: !3353)
!3940 = !DILocation(line: 989, column: 44, scope: !3353)
!3941 = !DILocation(line: 989, column: 9, scope: !3353)
!3942 = !DILocation(line: 0, scope: !3353)
!3943 = !DILocation(line: 990, column: 5, scope: !3354)
!3944 = !DILocation(line: 991, column: 9, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3354, file: !1, line: 990, column: 12)
!3946 = !DILocation(line: 0, scope: !3211)
!3947 = !DILocation(line: 993, column: 5, scope: !3211)
!3948 = !DILocation(line: 0, scope: !3871)
!3949 = !DILocation(line: 994, column: 1, scope: !3211)
!3950 = distinct !DISubprogram(name: "rdbSavedObjectLen", scope: !1, file: !1, line: 1000, type: !3951, isLocal: false, isDefinition: true, scopeLine: 1000, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3953)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{!545, !1982}
!3953 = !{!3954, !3955}
!3954 = !DILocalVariable(name: "o", arg: 1, scope: !3950, file: !1, line: 1000, type: !1982)
!3955 = !DILocalVariable(name: "len", scope: !3950, file: !1, line: 1001, type: !104)
!3956 = !DILocation(line: 1000, column: 32, scope: !3950)
!3957 = !DILocation(line: 1001, column: 19, scope: !3950)
!3958 = !DILocation(line: 1001, column: 13, scope: !3950)
!3959 = !DILocation(line: 1002, column: 5, scope: !3950)
!3960 = !DILocation(line: 1003, column: 5, scope: !3950)
!3961 = distinct !DISubprogram(name: "rdbSaveKeyValuePair", scope: !1, file: !1, line: 1010, type: !3962, isLocal: false, isDefinition: true, scopeLine: 1010, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3964)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!20, !220, !1982, !1982, !12}
!3964 = !{!3965, !3966, !3967, !3968, !3969, !3970, !3971, !3974}
!3965 = !DILocalVariable(name: "rdb", arg: 1, scope: !3961, file: !1, line: 1010, type: !220)
!3966 = !DILocalVariable(name: "key", arg: 2, scope: !3961, file: !1, line: 1010, type: !1982)
!3967 = !DILocalVariable(name: "val", arg: 3, scope: !3961, file: !1, line: 1010, type: !1982)
!3968 = !DILocalVariable(name: "expiretime", arg: 4, scope: !3961, file: !1, line: 1010, type: !12)
!3969 = !DILocalVariable(name: "savelru", scope: !3961, file: !1, line: 1011, type: !20)
!3970 = !DILocalVariable(name: "savelfu", scope: !3961, file: !1, line: 1012, type: !20)
!3971 = !DILocalVariable(name: "idletime", scope: !3972, file: !1, line: 1022, type: !55)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !1, line: 1021, column: 18)
!3973 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 1021, column: 9)
!3974 = !DILocalVariable(name: "buf", scope: !3975, file: !1, line: 1030, type: !3977)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !1, line: 1029, column: 18)
!3976 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 1029, column: 9)
!3977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 8, elements: !166)
!3978 = !DILocation(line: 1010, column: 30, scope: !3961)
!3979 = !DILocation(line: 1010, column: 41, scope: !3961)
!3980 = !DILocation(line: 1010, column: 52, scope: !3961)
!3981 = !DILocation(line: 1010, column: 67, scope: !3961)
!3982 = !DILocation(line: 1011, column: 26, scope: !3961)
!3983 = !{!204, !192, i64 2712}
!3984 = !DILocation(line: 1011, column: 43, scope: !3961)
!3985 = !DILocation(line: 1011, column: 9, scope: !3961)
!3986 = !DILocation(line: 1012, column: 43, scope: !3961)
!3987 = !DILocation(line: 1012, column: 9, scope: !3961)
!3988 = !DILocation(line: 1015, column: 20, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 1015, column: 9)
!3990 = !DILocation(line: 1015, column: 9, scope: !3961)
!3991 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !3992)
!3992 = distinct !DILocation(line: 1016, column: 13, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !1, line: 1016, column: 13)
!3994 = distinct !DILexicalBlock(scope: !3989, file: !1, line: 1015, column: 27)
!3995 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !3992)
!3996 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !3997)
!3997 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !3992)
!3998 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !3997)
!3999 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !3997)
!4000 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !3997)
!4001 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !3997)
!4002 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4003)
!4003 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !3997)
!4004 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4003)
!4005 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4003)
!4006 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4003)
!4007 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4003)
!4008 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4003)
!4009 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4003)
!4010 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4003)
!4011 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4003)
!4012 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4003)
!4013 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4003)
!4014 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4003)
!4015 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4003)
!4016 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4003)
!4017 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4003)
!4018 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4003)
!4019 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4003)
!4020 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4003)
!4021 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4003)
!4022 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4003)
!4023 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4003)
!4024 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !3997)
!4025 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !3997)
!4026 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !3992)
!4027 = !DILocation(line: 1016, column: 13, scope: !3994)
!4028 = !DILocation(line: 112, column: 33, scope: !671, inlinedAt: !4029)
!4029 = distinct !DILocation(line: 1017, column: 13, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !3994, file: !1, line: 1017, column: 13)
!4031 = !DILocation(line: 112, column: 48, scope: !671, inlinedAt: !4029)
!4032 = !DILocation(line: 113, column: 5, scope: !671, inlinedAt: !4029)
!4033 = !DILocation(line: 113, column: 13, scope: !671, inlinedAt: !4029)
!4034 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4035)
!4035 = distinct !DILocation(line: 115, column: 12, scope: !671, inlinedAt: !4029)
!4036 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4035)
!4037 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4035)
!4038 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4035)
!4039 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4040)
!4040 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4035)
!4041 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4040)
!4042 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4040)
!4043 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4040)
!4044 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4040)
!4045 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4040)
!4046 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4040)
!4047 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4040)
!4048 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4040)
!4049 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4040)
!4050 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4040)
!4051 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4040)
!4052 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4040)
!4053 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4040)
!4054 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4040)
!4055 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4040)
!4056 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4040)
!4057 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4040)
!4058 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4040)
!4059 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4040)
!4060 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4040)
!4061 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4035)
!4062 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4035)
!4063 = !DILocation(line: 116, column: 1, scope: !671, inlinedAt: !4029)
!4064 = !DILocation(line: 115, column: 5, scope: !671, inlinedAt: !4029)
!4065 = !DILocation(line: 1017, column: 13, scope: !3994)
!4066 = !DILocation(line: 1021, column: 9, scope: !3973)
!4067 = !DILocation(line: 1021, column: 9, scope: !3961)
!4068 = !DILocation(line: 1022, column: 29, scope: !3972)
!4069 = !DILocation(line: 1022, column: 18, scope: !3972)
!4070 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !4071)
!4071 = distinct !DILocation(line: 1024, column: 13, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1024, column: 13)
!4073 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !4071)
!4074 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4075)
!4075 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !4071)
!4076 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4075)
!4077 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4075)
!4078 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !4075)
!4079 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4075)
!4080 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4081)
!4081 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4075)
!4082 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4081)
!4083 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4081)
!4084 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4081)
!4085 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4081)
!4086 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4081)
!4087 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4081)
!4088 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4081)
!4089 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4081)
!4090 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4081)
!4091 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4081)
!4092 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4081)
!4093 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4081)
!4094 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4081)
!4095 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4081)
!4096 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4081)
!4097 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4081)
!4098 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4081)
!4099 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4081)
!4100 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4081)
!4101 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4081)
!4102 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4075)
!4103 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4075)
!4104 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !4071)
!4105 = !DILocation(line: 1024, column: 13, scope: !3972)
!4106 = !DILocation(line: 1023, column: 18, scope: !3972)
!4107 = !DILocation(line: 1025, column: 13, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1025, column: 13)
!4109 = !DILocation(line: 1025, column: 38, scope: !4108)
!4110 = !DILocation(line: 1029, column: 9, scope: !3976)
!4111 = !DILocation(line: 1029, column: 9, scope: !3961)
!4112 = !DILocation(line: 1030, column: 9, scope: !3975)
!4113 = !DILocation(line: 1030, column: 17, scope: !3975)
!4114 = !DILocation(line: 1031, column: 18, scope: !3975)
!4115 = !DILocation(line: 1031, column: 16, scope: !3975)
!4116 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !4117)
!4117 = distinct !DILocation(line: 1036, column: 13, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !3975, file: !1, line: 1036, column: 13)
!4119 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !4117)
!4120 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4121)
!4121 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !4117)
!4122 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4121)
!4123 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4121)
!4124 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !4121)
!4125 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4121)
!4126 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4121)
!4127 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !4117)
!4128 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4129)
!4129 = distinct !DILocation(line: 1037, column: 13, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !3975, file: !1, line: 1037, column: 13)
!4131 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4129)
!4132 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4129)
!4133 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4129)
!4134 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4135)
!4135 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4121)
!4136 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4135)
!4137 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4135)
!4138 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4135)
!4139 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4135)
!4140 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4135)
!4141 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4135)
!4142 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4135)
!4143 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4135)
!4144 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4135)
!4145 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4135)
!4146 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4135)
!4147 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4135)
!4148 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4135)
!4149 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4135)
!4150 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4135)
!4151 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4135)
!4152 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4135)
!4153 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4135)
!4154 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4135)
!4155 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4135)
!4156 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4157)
!4157 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4129)
!4158 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4157)
!4159 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4157)
!4160 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4157)
!4161 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4157)
!4162 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4157)
!4163 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4157)
!4164 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4157)
!4165 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4157)
!4166 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4157)
!4167 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4157)
!4168 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4157)
!4169 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4157)
!4170 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4157)
!4171 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4157)
!4172 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4157)
!4173 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4157)
!4174 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4157)
!4175 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4157)
!4176 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4157)
!4177 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4157)
!4178 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4129)
!4179 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4129)
!4180 = !DILocation(line: 1038, column: 5, scope: !3976)
!4181 = !DILocation(line: 1041, column: 9, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 1041, column: 9)
!4183 = !DILocation(line: 1041, column: 36, scope: !4182)
!4184 = !DILocation(line: 1041, column: 9, scope: !3961)
!4185 = !DILocation(line: 1042, column: 9, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 1042, column: 9)
!4187 = !DILocation(line: 1042, column: 38, scope: !4186)
!4188 = !DILocation(line: 1042, column: 9, scope: !3961)
!4189 = !DILocation(line: 1043, column: 9, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 1043, column: 9)
!4191 = !DILocation(line: 1043, column: 36, scope: !4190)
!4192 = !DILocation(line: 1043, column: 43, scope: !4190)
!4193 = !DILocation(line: 0, scope: !4072)
!4194 = !DILocation(line: 1045, column: 1, scope: !3961)
!4195 = distinct !DISubprogram(name: "rdbSaveAuxField", scope: !1, file: !1, line: 1048, type: !4196, isLocal: false, isDefinition: true, scopeLine: 1048, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4198)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{!104, !220, !13, !545, !13, !545}
!4198 = !{!4199, !4200, !4201, !4202, !4203, !4204, !4205}
!4199 = !DILocalVariable(name: "rdb", arg: 1, scope: !4195, file: !1, line: 1048, type: !220)
!4200 = !DILocalVariable(name: "key", arg: 2, scope: !4195, file: !1, line: 1048, type: !13)
!4201 = !DILocalVariable(name: "keylen", arg: 3, scope: !4195, file: !1, line: 1048, type: !545)
!4202 = !DILocalVariable(name: "val", arg: 4, scope: !4195, file: !1, line: 1048, type: !13)
!4203 = !DILocalVariable(name: "vallen", arg: 5, scope: !4195, file: !1, line: 1048, type: !545)
!4204 = !DILocalVariable(name: "ret", scope: !4195, file: !1, line: 1049, type: !104)
!4205 = !DILocalVariable(name: "len", scope: !4195, file: !1, line: 1049, type: !104)
!4206 = !DILocation(line: 1048, column: 30, scope: !4195)
!4207 = !DILocation(line: 1048, column: 41, scope: !4195)
!4208 = !DILocation(line: 1048, column: 53, scope: !4195)
!4209 = !DILocation(line: 1048, column: 67, scope: !4195)
!4210 = !DILocation(line: 1048, column: 79, scope: !4195)
!4211 = !DILocation(line: 1049, column: 18, scope: !4195)
!4212 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !4213)
!4213 = distinct !DILocation(line: 1050, column: 16, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4195, file: !1, line: 1050, column: 9)
!4215 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !4213)
!4216 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4217)
!4217 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !4213)
!4218 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4217)
!4219 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4217)
!4220 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !4217)
!4221 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4217)
!4222 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4223)
!4223 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4217)
!4224 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4223)
!4225 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4223)
!4226 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4223)
!4227 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4223)
!4228 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4223)
!4229 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4223)
!4230 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4223)
!4231 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4223)
!4232 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4223)
!4233 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4223)
!4234 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4223)
!4235 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4223)
!4236 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4223)
!4237 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4223)
!4238 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4223)
!4239 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4223)
!4240 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4223)
!4241 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4223)
!4242 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4223)
!4243 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4223)
!4244 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4217)
!4245 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4217)
!4246 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !4213)
!4247 = !DILocation(line: 1050, column: 9, scope: !4195)
!4248 = !DILocation(line: 1052, column: 16, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4195, file: !1, line: 1052, column: 9)
!4250 = !DILocation(line: 1049, column: 13, scope: !4195)
!4251 = !DILocation(line: 1052, column: 50, scope: !4249)
!4252 = !DILocation(line: 1052, column: 9, scope: !4195)
!4253 = !DILocation(line: 1054, column: 16, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4195, file: !1, line: 1054, column: 9)
!4255 = !DILocation(line: 1054, column: 50, scope: !4254)
!4256 = !DILocation(line: 1054, column: 9, scope: !4195)
!4257 = !DILocation(line: 1053, column: 9, scope: !4195)
!4258 = !DILocation(line: 1055, column: 9, scope: !4195)
!4259 = !DILocation(line: 1056, column: 5, scope: !4195)
!4260 = !DILocation(line: 0, scope: !4195)
!4261 = !DILocation(line: 1057, column: 1, scope: !4195)
!4262 = distinct !DISubprogram(name: "rdbSaveAuxFieldStrStr", scope: !1, file: !1, line: 1061, type: !4263, isLocal: false, isDefinition: true, scopeLine: 1061, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4265)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!104, !220, !21, !21}
!4265 = !{!4266, !4267, !4268}
!4266 = !DILocalVariable(name: "rdb", arg: 1, scope: !4262, file: !1, line: 1061, type: !220)
!4267 = !DILocalVariable(name: "key", arg: 2, scope: !4262, file: !1, line: 1061, type: !21)
!4268 = !DILocalVariable(name: "val", arg: 3, scope: !4262, file: !1, line: 1061, type: !21)
!4269 = !DILocation(line: 1061, column: 36, scope: !4262)
!4270 = !DILocation(line: 1061, column: 47, scope: !4262)
!4271 = !DILocation(line: 1061, column: 58, scope: !4262)
!4272 = !DILocation(line: 1062, column: 36, scope: !4262)
!4273 = !DILocation(line: 1062, column: 52, scope: !4262)
!4274 = !DILocation(line: 1062, column: 12, scope: !4262)
!4275 = !DILocation(line: 1062, column: 5, scope: !4262)
!4276 = distinct !DISubprogram(name: "rdbSaveAuxFieldStrInt", scope: !1, file: !1, line: 1066, type: !4277, isLocal: false, isDefinition: true, scopeLine: 1066, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4279)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!104, !220, !21, !12}
!4279 = !{!4280, !4281, !4282, !4283, !4284}
!4280 = !DILocalVariable(name: "rdb", arg: 1, scope: !4276, file: !1, line: 1066, type: !220)
!4281 = !DILocalVariable(name: "key", arg: 2, scope: !4276, file: !1, line: 1066, type: !21)
!4282 = !DILocalVariable(name: "val", arg: 3, scope: !4276, file: !1, line: 1066, type: !12)
!4283 = !DILocalVariable(name: "buf", scope: !4276, file: !1, line: 1067, type: !1240)
!4284 = !DILocalVariable(name: "vlen", scope: !4276, file: !1, line: 1068, type: !20)
!4285 = !DILocation(line: 1066, column: 36, scope: !4276)
!4286 = !DILocation(line: 1066, column: 47, scope: !4276)
!4287 = !DILocation(line: 1066, column: 62, scope: !4276)
!4288 = !DILocation(line: 1067, column: 5, scope: !4276)
!4289 = !DILocation(line: 1067, column: 10, scope: !4276)
!4290 = !DILocation(line: 1068, column: 16, scope: !4276)
!4291 = !DILocation(line: 1068, column: 9, scope: !4276)
!4292 = !DILocation(line: 1069, column: 36, scope: !4276)
!4293 = !DILocation(line: 1069, column: 52, scope: !4276)
!4294 = !DILocation(line: 1069, column: 12, scope: !4276)
!4295 = !DILocation(line: 1070, column: 1, scope: !4276)
!4296 = !DILocation(line: 1069, column: 5, scope: !4276)
!4297 = distinct !DISubprogram(name: "rdbSaveInfoAuxFields", scope: !1, file: !1, line: 1073, type: !4298, isLocal: false, isDefinition: true, scopeLine: 1073, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4311)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{!20, !220, !20, !4300}
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_typedef, name: "rdbSaveInfo", file: !1984, line: 912, baseType: !4302)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdbSaveInfo", file: !1984, line: 904, size: 512, elements: !4303)
!4303 = !{!4304, !4305, !4306, !4310}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "repl_stream_db", scope: !4302, file: !1984, line: 906, baseType: !20, size: 32)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "repl_id_is_set", scope: !4302, file: !1984, line: 909, baseType: !20, size: 32, offset: 32)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "repl_id", scope: !4302, file: !1984, line: 910, baseType: !4307, size: 328, offset: 64)
!4307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 328, elements: !4308)
!4308 = !{!4309}
!4309 = !DISubrange(count: 41)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset", scope: !4302, file: !1984, line: 911, baseType: !12, size: 64, offset: 448)
!4311 = !{!4312, !4313, !4314, !4315, !4316}
!4312 = !DILocalVariable(name: "rdb", arg: 1, scope: !4297, file: !1, line: 1073, type: !220)
!4313 = !DILocalVariable(name: "flags", arg: 2, scope: !4297, file: !1, line: 1073, type: !20)
!4314 = !DILocalVariable(name: "rsi", arg: 3, scope: !4297, file: !1, line: 1073, type: !4300)
!4315 = !DILocalVariable(name: "redis_bits", scope: !4297, file: !1, line: 1074, type: !20)
!4316 = !DILocalVariable(name: "aof_preamble", scope: !4297, file: !1, line: 1075, type: !20)
!4317 = !DILocation(line: 1067, column: 10, scope: !4276, inlinedAt: !4318)
!4318 = distinct !DILocation(line: 1092, column: 9, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 1092, column: 9)
!4320 = !DILocation(line: 1067, column: 10, scope: !4276, inlinedAt: !4321)
!4321 = distinct !DILocation(line: 1089, column: 13, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !1, line: 1089, column: 13)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !1, line: 1084, column: 14)
!4324 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 1084, column: 9)
!4325 = !DILocation(line: 1067, column: 10, scope: !4276, inlinedAt: !4326)
!4326 = distinct !DILocation(line: 1085, column: 13, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4323, file: !1, line: 1085, column: 13)
!4328 = !DILocation(line: 1067, column: 10, scope: !4276, inlinedAt: !4329)
!4329 = distinct !DILocation(line: 1081, column: 9, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 1081, column: 9)
!4331 = !DILocation(line: 1067, column: 10, scope: !4276, inlinedAt: !4332)
!4332 = distinct !DILocation(line: 1080, column: 9, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 1080, column: 9)
!4334 = !DILocation(line: 1067, column: 10, scope: !4276, inlinedAt: !4335)
!4335 = distinct !DILocation(line: 1079, column: 9, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 1079, column: 9)
!4337 = !DILocation(line: 1073, column: 31, scope: !4297)
!4338 = !DILocation(line: 1073, column: 40, scope: !4297)
!4339 = !DILocation(line: 1073, column: 60, scope: !4297)
!4340 = !DILocation(line: 1074, column: 9, scope: !4297)
!4341 = !DILocation(line: 1075, column: 31, scope: !4297)
!4342 = !DILocation(line: 1075, column: 9, scope: !4297)
!4343 = !DILocation(line: 1061, column: 36, scope: !4262, inlinedAt: !4344)
!4344 = distinct !DILocation(line: 1078, column: 9, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 1078, column: 9)
!4346 = !DILocation(line: 1061, column: 47, scope: !4262, inlinedAt: !4344)
!4347 = !DILocation(line: 1061, column: 58, scope: !4262, inlinedAt: !4344)
!4348 = !DILocation(line: 1062, column: 36, scope: !4262, inlinedAt: !4344)
!4349 = !DILocation(line: 1062, column: 52, scope: !4262, inlinedAt: !4344)
!4350 = !DILocation(line: 1062, column: 12, scope: !4262, inlinedAt: !4344)
!4351 = !DILocation(line: 1062, column: 5, scope: !4262, inlinedAt: !4344)
!4352 = !DILocation(line: 1078, column: 62, scope: !4345)
!4353 = !DILocation(line: 1078, column: 9, scope: !4297)
!4354 = !DILocation(line: 1066, column: 36, scope: !4276, inlinedAt: !4335)
!4355 = !DILocation(line: 1066, column: 47, scope: !4276, inlinedAt: !4335)
!4356 = !DILocation(line: 1066, column: 62, scope: !4276, inlinedAt: !4335)
!4357 = !DILocation(line: 1067, column: 5, scope: !4276, inlinedAt: !4335)
!4358 = !DILocation(line: 1068, column: 16, scope: !4276, inlinedAt: !4335)
!4359 = !DILocation(line: 1068, column: 9, scope: !4276, inlinedAt: !4335)
!4360 = !DILocation(line: 1069, column: 36, scope: !4276, inlinedAt: !4335)
!4361 = !DILocation(line: 1069, column: 52, scope: !4276, inlinedAt: !4335)
!4362 = !DILocation(line: 1069, column: 12, scope: !4276, inlinedAt: !4335)
!4363 = !DILocation(line: 1070, column: 1, scope: !4276, inlinedAt: !4335)
!4364 = !DILocation(line: 1069, column: 5, scope: !4276, inlinedAt: !4335)
!4365 = !DILocation(line: 1079, column: 60, scope: !4336)
!4366 = !DILocation(line: 1079, column: 9, scope: !4297)
!4367 = !DILocation(line: 1080, column: 43, scope: !4333)
!4368 = !DILocation(line: 1066, column: 36, scope: !4276, inlinedAt: !4332)
!4369 = !DILocation(line: 1066, column: 47, scope: !4276, inlinedAt: !4332)
!4370 = !DILocation(line: 1066, column: 62, scope: !4276, inlinedAt: !4332)
!4371 = !DILocation(line: 1067, column: 5, scope: !4276, inlinedAt: !4332)
!4372 = !DILocation(line: 1068, column: 16, scope: !4276, inlinedAt: !4332)
!4373 = !DILocation(line: 1068, column: 9, scope: !4276, inlinedAt: !4332)
!4374 = !DILocation(line: 1069, column: 36, scope: !4276, inlinedAt: !4332)
!4375 = !DILocation(line: 1069, column: 52, scope: !4276, inlinedAt: !4332)
!4376 = !DILocation(line: 1069, column: 12, scope: !4276, inlinedAt: !4332)
!4377 = !DILocation(line: 1070, column: 1, scope: !4276, inlinedAt: !4332)
!4378 = !DILocation(line: 1069, column: 5, scope: !4276, inlinedAt: !4332)
!4379 = !DILocation(line: 1080, column: 55, scope: !4333)
!4380 = !DILocation(line: 1080, column: 9, scope: !4297)
!4381 = !DILocation(line: 1081, column: 46, scope: !4330)
!4382 = !DILocation(line: 1066, column: 36, scope: !4276, inlinedAt: !4329)
!4383 = !DILocation(line: 1066, column: 47, scope: !4276, inlinedAt: !4329)
!4384 = !DILocation(line: 1066, column: 62, scope: !4276, inlinedAt: !4329)
!4385 = !DILocation(line: 1067, column: 5, scope: !4276, inlinedAt: !4329)
!4386 = !DILocation(line: 1068, column: 16, scope: !4276, inlinedAt: !4329)
!4387 = !DILocation(line: 1068, column: 9, scope: !4276, inlinedAt: !4329)
!4388 = !DILocation(line: 1069, column: 36, scope: !4276, inlinedAt: !4329)
!4389 = !DILocation(line: 1069, column: 52, scope: !4276, inlinedAt: !4329)
!4390 = !DILocation(line: 1069, column: 12, scope: !4276, inlinedAt: !4329)
!4391 = !DILocation(line: 1070, column: 1, scope: !4276, inlinedAt: !4329)
!4392 = !DILocation(line: 1069, column: 5, scope: !4276, inlinedAt: !4329)
!4393 = !DILocation(line: 1081, column: 69, scope: !4330)
!4394 = !DILocation(line: 1081, column: 9, scope: !4297)
!4395 = !DILocation(line: 1084, column: 9, scope: !4324)
!4396 = !DILocation(line: 1084, column: 9, scope: !4297)
!4397 = !DILocation(line: 1085, column: 61, scope: !4327)
!4398 = !{!4399, !192, i64 0}
!4399 = !{!"rdbSaveInfo", !192, i64 0, !192, i64 4, !193, i64 8, !206, i64 56}
!4400 = !DILocation(line: 1085, column: 56, scope: !4327)
!4401 = !DILocation(line: 1066, column: 36, scope: !4276, inlinedAt: !4326)
!4402 = !DILocation(line: 1066, column: 47, scope: !4276, inlinedAt: !4326)
!4403 = !DILocation(line: 1066, column: 62, scope: !4276, inlinedAt: !4326)
!4404 = !DILocation(line: 1067, column: 5, scope: !4276, inlinedAt: !4326)
!4405 = !DILocation(line: 1068, column: 16, scope: !4276, inlinedAt: !4326)
!4406 = !DILocation(line: 1068, column: 9, scope: !4276, inlinedAt: !4326)
!4407 = !DILocation(line: 1069, column: 36, scope: !4276, inlinedAt: !4326)
!4408 = !DILocation(line: 1069, column: 52, scope: !4276, inlinedAt: !4326)
!4409 = !DILocation(line: 1069, column: 12, scope: !4276, inlinedAt: !4326)
!4410 = !DILocation(line: 1070, column: 1, scope: !4276, inlinedAt: !4326)
!4411 = !DILocation(line: 1069, column: 5, scope: !4276, inlinedAt: !4326)
!4412 = !DILocation(line: 1086, column: 13, scope: !4327)
!4413 = !DILocation(line: 1085, column: 13, scope: !4323)
!4414 = !DILocation(line: 1061, column: 36, scope: !4262, inlinedAt: !4415)
!4415 = distinct !DILocation(line: 1087, column: 13, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4323, file: !1, line: 1087, column: 13)
!4417 = !DILocation(line: 1061, column: 47, scope: !4262, inlinedAt: !4415)
!4418 = !DILocation(line: 1061, column: 58, scope: !4262, inlinedAt: !4415)
!4419 = !DILocation(line: 1062, column: 36, scope: !4262, inlinedAt: !4415)
!4420 = !DILocation(line: 1062, column: 52, scope: !4262, inlinedAt: !4415)
!4421 = !DILocation(line: 1062, column: 12, scope: !4262, inlinedAt: !4415)
!4422 = !DILocation(line: 1062, column: 5, scope: !4262, inlinedAt: !4415)
!4423 = !DILocation(line: 1088, column: 13, scope: !4416)
!4424 = !DILocation(line: 1087, column: 13, scope: !4323)
!4425 = !DILocation(line: 1089, column: 60, scope: !4322)
!4426 = !{!204, !206, i64 2352}
!4427 = !DILocation(line: 1066, column: 36, scope: !4276, inlinedAt: !4321)
!4428 = !DILocation(line: 1066, column: 47, scope: !4276, inlinedAt: !4321)
!4429 = !DILocation(line: 1066, column: 62, scope: !4276, inlinedAt: !4321)
!4430 = !DILocation(line: 1067, column: 5, scope: !4276, inlinedAt: !4321)
!4431 = !DILocation(line: 1068, column: 16, scope: !4276, inlinedAt: !4321)
!4432 = !DILocation(line: 1068, column: 9, scope: !4276, inlinedAt: !4321)
!4433 = !DILocation(line: 1069, column: 36, scope: !4276, inlinedAt: !4321)
!4434 = !DILocation(line: 1069, column: 52, scope: !4276, inlinedAt: !4321)
!4435 = !DILocation(line: 1069, column: 12, scope: !4276, inlinedAt: !4321)
!4436 = !DILocation(line: 1070, column: 1, scope: !4276, inlinedAt: !4321)
!4437 = !DILocation(line: 1069, column: 5, scope: !4276, inlinedAt: !4321)
!4438 = !DILocation(line: 1090, column: 13, scope: !4322)
!4439 = !DILocation(line: 1089, column: 13, scope: !4323)
!4440 = !DILocation(line: 1092, column: 50, scope: !4319)
!4441 = !DILocation(line: 1066, column: 36, scope: !4276, inlinedAt: !4318)
!4442 = !DILocation(line: 1066, column: 47, scope: !4276, inlinedAt: !4318)
!4443 = !DILocation(line: 1066, column: 62, scope: !4276, inlinedAt: !4318)
!4444 = !DILocation(line: 1067, column: 5, scope: !4276, inlinedAt: !4318)
!4445 = !DILocation(line: 1068, column: 16, scope: !4276, inlinedAt: !4318)
!4446 = !DILocation(line: 1068, column: 9, scope: !4276, inlinedAt: !4318)
!4447 = !DILocation(line: 1069, column: 36, scope: !4276, inlinedAt: !4318)
!4448 = !DILocation(line: 1069, column: 52, scope: !4276, inlinedAt: !4318)
!4449 = !DILocation(line: 1069, column: 12, scope: !4276, inlinedAt: !4318)
!4450 = !DILocation(line: 1070, column: 1, scope: !4276, inlinedAt: !4318)
!4451 = !DILocation(line: 1069, column: 5, scope: !4276, inlinedAt: !4318)
!4452 = !DILocation(line: 1092, column: 64, scope: !4319)
!4453 = !DILocation(line: 1092, column: 71, scope: !4319)
!4454 = !DILocation(line: 0, scope: !4297)
!4455 = !DILocation(line: 1094, column: 1, scope: !4297)
!4456 = distinct !DISubprogram(name: "rdbSaveSingleModuleAux", scope: !1, file: !1, line: 1096, type: !4457, isLocal: false, isDefinition: true, scopeLine: 1096, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4459)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!104, !220, !20, !3361}
!4459 = !{!4460, !4461, !4462, !4463, !4464}
!4460 = !DILocalVariable(name: "rdb", arg: 1, scope: !4456, file: !1, line: 1096, type: !220)
!4461 = !DILocalVariable(name: "when", arg: 2, scope: !4456, file: !1, line: 1096, type: !20)
!4462 = !DILocalVariable(name: "mt", arg: 3, scope: !4456, file: !1, line: 1096, type: !3361)
!4463 = !DILocalVariable(name: "io", scope: !4456, file: !1, line: 1098, type: !3355)
!4464 = !DILocalVariable(name: "retval", scope: !4456, file: !1, line: 1099, type: !20)
!4465 = !DILocation(line: 141, column: 19, scope: !757, inlinedAt: !4466)
!4466 = distinct !DILocation(line: 1120, column: 14, scope: !4456)
!4467 = !DILocation(line: 141, column: 19, scope: !757, inlinedAt: !4468)
!4468 = distinct !DILocation(line: 1110, column: 14, scope: !4456)
!4469 = !DILocation(line: 1096, column: 37, scope: !4456)
!4470 = !DILocation(line: 1096, column: 46, scope: !4456)
!4471 = !DILocation(line: 1096, column: 64, scope: !4456)
!4472 = !DILocation(line: 1098, column: 5, scope: !4456)
!4473 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !4474)
!4474 = distinct !DILocation(line: 1099, column: 18, scope: !4456)
!4475 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !4474)
!4476 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4477)
!4477 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !4474)
!4478 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4477)
!4479 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4477)
!4480 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !4477)
!4481 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4477)
!4482 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4483)
!4483 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4477)
!4484 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4483)
!4485 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4483)
!4486 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4483)
!4487 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4483)
!4488 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4483)
!4489 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4483)
!4490 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4483)
!4491 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4483)
!4492 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4483)
!4493 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4483)
!4494 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4483)
!4495 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4483)
!4496 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4483)
!4497 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4483)
!4498 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4483)
!4499 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4483)
!4500 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4483)
!4501 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4483)
!4502 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4483)
!4503 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4483)
!4504 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4477)
!4505 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !4474)
!4506 = !DILocation(line: 1103, column: 33, scope: !4456)
!4507 = !DILocation(line: 1103, column: 14, scope: !4456)
!4508 = !DILocation(line: 1099, column: 9, scope: !4456)
!4509 = !DILocation(line: 1104, column: 16, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4456, file: !1, line: 1104, column: 9)
!4511 = !DILocation(line: 1104, column: 9, scope: !4456)
!4512 = !DILocation(line: 1105, column: 17, scope: !4456)
!4513 = !DILocation(line: 1105, column: 8, scope: !4456)
!4514 = !DILocation(line: 1105, column: 14, scope: !4456)
!4515 = !DILocation(line: 140, column: 21, scope: !757, inlinedAt: !4468)
!4516 = !DILocation(line: 140, column: 35, scope: !757, inlinedAt: !4468)
!4517 = !DILocation(line: 141, column: 5, scope: !757, inlinedAt: !4468)
!4518 = !DILocation(line: 146, column: 16, scope: !778, inlinedAt: !4468)
!4519 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4520)
!4520 = distinct !DILocation(line: 147, column: 13, scope: !782, inlinedAt: !4468)
!4521 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4520)
!4522 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4520)
!4523 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4520)
!4524 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4525)
!4525 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4520)
!4526 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4525)
!4527 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4525)
!4528 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4525)
!4529 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4525)
!4530 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4525)
!4531 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4525)
!4532 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4525)
!4533 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4525)
!4534 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4525)
!4535 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4525)
!4536 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4525)
!4537 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4525)
!4538 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4525)
!4539 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4525)
!4540 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4525)
!4541 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4525)
!4542 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4525)
!4543 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4525)
!4544 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4525)
!4545 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4525)
!4546 = !DILocation(line: 1112, column: 14, scope: !4456)
!4547 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4520)
!4548 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4520)
!4549 = !DILocation(line: 171, column: 1, scope: !757, inlinedAt: !4468)
!4550 = !DILocation(line: 1111, column: 9, scope: !4456)
!4551 = !DILocation(line: 1113, column: 29, scope: !4456)
!4552 = !DILocation(line: 1113, column: 14, scope: !4456)
!4553 = !DILocation(line: 1114, column: 16, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4456, file: !1, line: 1114, column: 9)
!4555 = !DILocation(line: 1114, column: 9, scope: !4456)
!4556 = !DILocation(line: 1118, column: 5, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4456, file: !1, line: 1118, column: 5)
!4558 = !DILocation(line: 1119, column: 9, scope: !4456)
!4559 = !{!3867, !201, i64 72}
!4560 = !DILocation(line: 1098, column: 19, scope: !4456)
!4561 = !DILocation(line: 1119, column: 5, scope: !4456)
!4562 = !DILocation(line: 140, column: 21, scope: !757, inlinedAt: !4466)
!4563 = !DILocation(line: 140, column: 35, scope: !757, inlinedAt: !4466)
!4564 = !DILocation(line: 141, column: 5, scope: !757, inlinedAt: !4466)
!4565 = !DILocation(line: 146, column: 16, scope: !778, inlinedAt: !4466)
!4566 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4567)
!4567 = distinct !DILocation(line: 147, column: 13, scope: !782, inlinedAt: !4466)
!4568 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4567)
!4569 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4567)
!4570 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4567)
!4571 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4572)
!4572 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4567)
!4573 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4572)
!4574 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4572)
!4575 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4572)
!4576 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4572)
!4577 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4572)
!4578 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4572)
!4579 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4572)
!4580 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4572)
!4581 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4572)
!4582 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4572)
!4583 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4572)
!4584 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4572)
!4585 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4572)
!4586 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4572)
!4587 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4572)
!4588 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4572)
!4589 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4572)
!4590 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4572)
!4591 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4572)
!4592 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4572)
!4593 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4567)
!4594 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4567)
!4595 = !DILocation(line: 171, column: 1, scope: !757, inlinedAt: !4466)
!4596 = !DILocation(line: 1122, column: 18, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4456, file: !1, line: 1121, column: 9)
!4598 = !DILocation(line: 1122, column: 9, scope: !4597)
!4599 = !DILocation(line: 1124, column: 18, scope: !4597)
!4600 = !DILocation(line: 1126, column: 12, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4456, file: !1, line: 1126, column: 9)
!4602 = !DILocation(line: 1126, column: 9, scope: !4601)
!4603 = !DILocation(line: 1126, column: 9, scope: !4456)
!4604 = !DILocation(line: 1127, column: 9, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4601, file: !1, line: 1126, column: 17)
!4606 = !DILocation(line: 1128, column: 18, scope: !4605)
!4607 = !DILocation(line: 1128, column: 9, scope: !4605)
!4608 = !DILocation(line: 1129, column: 5, scope: !4605)
!4609 = !DILocation(line: 1130, column: 12, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4456, file: !1, line: 1130, column: 9)
!4611 = !DILocation(line: 1130, column: 9, scope: !4610)
!4612 = !DILocation(line: 1132, column: 15, scope: !4456)
!4613 = !DILocation(line: 1130, column: 9, scope: !4456)
!4614 = !DILocation(line: 0, scope: !4456)
!4615 = !DILocation(line: 1133, column: 1, scope: !4456)
!4616 = distinct !DISubprogram(name: "rdbSaveRio", scope: !1, file: !1, line: 1143, type: !4617, isLocal: false, isDefinition: true, scopeLine: 1143, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4619)
!4617 = !DISubroutineType(types: !4618)
!4618 = !{!20, !220, !478, !20, !4300}
!4619 = !{!4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4671, !4672, !4673, !4674, !4676, !4677, !4678, !4679}
!4620 = !DILocalVariable(name: "rdb", arg: 1, scope: !4616, file: !1, line: 1143, type: !220)
!4621 = !DILocalVariable(name: "error", arg: 2, scope: !4616, file: !1, line: 1143, type: !478)
!4622 = !DILocalVariable(name: "flags", arg: 3, scope: !4616, file: !1, line: 1143, type: !20)
!4623 = !DILocalVariable(name: "rsi", arg: 4, scope: !4616, file: !1, line: 1143, type: !4300)
!4624 = !DILocalVariable(name: "di", scope: !4616, file: !1, line: 1144, type: !3264)
!4625 = !DILocalVariable(name: "de", scope: !4616, file: !1, line: 1145, type: !82)
!4626 = !DILocalVariable(name: "magic", scope: !4616, file: !1, line: 1146, type: !3421)
!4627 = !DILocalVariable(name: "j", scope: !4616, file: !1, line: 1147, type: !20)
!4628 = !DILocalVariable(name: "cksum", scope: !4616, file: !1, line: 1148, type: !55)
!4629 = !DILocalVariable(name: "processed", scope: !4616, file: !1, line: 1149, type: !545)
!4630 = !DILocalVariable(name: "db", scope: !4631, file: !1, line: 1159, type: !4634)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !1, line: 1158, column: 40)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !1, line: 1158, column: 5)
!4633 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1158, column: 5)
!4634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4635, size: 64)
!4635 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisDb", file: !1984, line: 656, baseType: !4636)
!4636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisDb", file: !1984, line: 647, size: 512, elements: !4637)
!4637 = !{!4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645}
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !4636, file: !1984, line: 648, baseType: !41, size: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4636, file: !1984, line: 649, baseType: !41, size: 64, offset: 64)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "blocking_keys", scope: !4636, file: !1984, line: 650, baseType: !41, size: 64, offset: 128)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "ready_keys", scope: !4636, file: !1984, line: 651, baseType: !41, size: 64, offset: 192)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !4636, file: !1984, line: 652, baseType: !41, size: 64, offset: 256)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4636, file: !1984, line: 653, baseType: !20, size: 32, offset: 320)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "avg_ttl", scope: !4636, file: !1984, line: 654, baseType: !12, size: 64, offset: 384)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "defrag_later", scope: !4636, file: !1984, line: 655, baseType: !4646, size: 64, offset: 448)
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 64)
!4647 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !4648, line: 54, baseType: !4649)
!4648 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/adlist.h", directory: "/root/.unikraft/apps/redis/build")
!4649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list", file: !4648, line: 47, size: 384, elements: !4650)
!4650 = !{!4651, !4660, !4661, !4665, !4666, !4670}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4649, file: !4648, line: 48, baseType: !4652, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 64)
!4653 = !DIDerivedType(tag: DW_TAG_typedef, name: "listNode", file: !4648, line: 40, baseType: !4654)
!4654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listNode", file: !4648, line: 36, size: 192, elements: !4655)
!4655 = !{!4656, !4658, !4659}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4654, file: !4648, line: 37, baseType: !4657, size: 64)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4654, file: !4648, line: 38, baseType: !4657, size: 64, offset: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4654, file: !4648, line: 39, baseType: !13, size: 64, offset: 128)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4649, file: !4648, line: 49, baseType: !4652, size: 64, offset: 64)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "dup", scope: !4649, file: !4648, line: 50, baseType: !4662, size: 64, offset: 128)
!4662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4663, size: 64)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!13, !13}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4649, file: !4648, line: 51, baseType: !3406, size: 64, offset: 192)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4649, file: !4648, line: 52, baseType: !4667, size: 64, offset: 256)
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!20, !13, !13}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4649, file: !4648, line: 53, baseType: !57, size: 64, offset: 320)
!4671 = !DILocalVariable(name: "d", scope: !4631, file: !1, line: 1160, type: !41)
!4672 = !DILocalVariable(name: "db_size", scope: !4631, file: !1, line: 1172, type: !55)
!4673 = !DILocalVariable(name: "expires_size", scope: !4631, file: !1, line: 1172, type: !55)
!4674 = !DILocalVariable(name: "keystr", scope: !4675, file: !1, line: 1181, type: !261)
!4675 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 1180, column: 44)
!4676 = !DILocalVariable(name: "key", scope: !4675, file: !1, line: 1182, type: !1983)
!4677 = !DILocalVariable(name: "o", scope: !4675, file: !1, line: 1182, type: !1982)
!4678 = !DILocalVariable(name: "expire", scope: !4675, file: !1, line: 1183, type: !12)
!4679 = !DILocalVariable(name: "body", scope: !4680, file: !1, line: 1210, type: !1982)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !1, line: 1209, column: 44)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !1, line: 1207, column: 46)
!4682 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1207, column: 9)
!4683 = !DILocation(line: 1143, column: 21, scope: !4616)
!4684 = !DILocation(line: 1143, column: 31, scope: !4616)
!4685 = !DILocation(line: 1143, column: 42, scope: !4616)
!4686 = !DILocation(line: 1143, column: 62, scope: !4616)
!4687 = !DILocation(line: 1144, column: 19, scope: !4616)
!4688 = !DILocation(line: 1146, column: 5, scope: !4616)
!4689 = !DILocation(line: 1146, column: 10, scope: !4616)
!4690 = !DILocation(line: 1148, column: 5, scope: !4616)
!4691 = !DILocation(line: 1149, column: 12, scope: !4616)
!4692 = !DILocation(line: 1151, column: 16, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1151, column: 9)
!4694 = !{!204, !192, i64 2132}
!4695 = !DILocation(line: 1151, column: 9, scope: !4693)
!4696 = !DILocation(line: 1151, column: 9, scope: !4616)
!4697 = !DILocation(line: 1152, column: 14, scope: !4693)
!4698 = !DILocation(line: 1152, column: 27, scope: !4693)
!4699 = !DILocation(line: 1153, column: 5, scope: !4616)
!4700 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4701)
!4701 = distinct !DILocation(line: 1154, column: 9, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1154, column: 9)
!4703 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4701)
!4704 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4701)
!4705 = !DILocation(line: 73, column: 9, scope: !556, inlinedAt: !4701)
!4706 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4701)
!4707 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4708)
!4708 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4701)
!4709 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4708)
!4710 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4708)
!4711 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4708)
!4712 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4708)
!4713 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4708)
!4714 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4708)
!4715 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4708)
!4716 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4708)
!4717 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4708)
!4718 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4708)
!4719 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4708)
!4720 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4708)
!4721 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4708)
!4722 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4708)
!4723 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4708)
!4724 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4708)
!4725 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4708)
!4726 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4708)
!4727 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4708)
!4728 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4708)
!4729 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4701)
!4730 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4701)
!4731 = !DILocation(line: 1154, column: 9, scope: !4616)
!4732 = !DILocation(line: 1155, column: 9, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1155, column: 9)
!4734 = !DILocation(line: 1155, column: 45, scope: !4733)
!4735 = !DILocation(line: 1155, column: 9, scope: !4616)
!4736 = !DILocation(line: 1156, column: 9, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1156, column: 9)
!4738 = !DILocation(line: 1156, column: 60, scope: !4737)
!4739 = !DILocation(line: 1156, column: 9, scope: !4616)
!4740 = !DILocation(line: 1147, column: 9, scope: !4616)
!4741 = !DILocation(line: 1158, column: 28, scope: !4632)
!4742 = !{!204, !192, i64 1792}
!4743 = !DILocation(line: 1158, column: 19, scope: !4632)
!4744 = !DILocation(line: 1158, column: 5, scope: !4633)
!4745 = !DILocation(line: 1159, column: 30, scope: !4631)
!4746 = !{!204, !201, i64 48}
!4747 = !DILocation(line: 1159, column: 32, scope: !4631)
!4748 = !DILocation(line: 1159, column: 18, scope: !4631)
!4749 = !DILocation(line: 1160, column: 23, scope: !4631)
!4750 = !{!4751, !201, i64 0}
!4751 = !{!"redisDb", !201, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !192, i64 40, !206, i64 48, !201, i64 56}
!4752 = !DILocation(line: 1160, column: 15, scope: !4631)
!4753 = !DILocation(line: 1161, column: 13, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 1161, column: 13)
!4755 = !DILocation(line: 1161, column: 25, scope: !4754)
!4756 = !DILocation(line: 1161, column: 13, scope: !4631)
!4757 = !DILocation(line: 1162, column: 14, scope: !4631)
!4758 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !4759)
!4759 = distinct !DILocation(line: 1165, column: 13, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 1165, column: 13)
!4761 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !4759)
!4762 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4763)
!4763 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !4759)
!4764 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4763)
!4765 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4763)
!4766 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4763)
!4767 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4768)
!4768 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4763)
!4769 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4768)
!4770 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4768)
!4771 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4768)
!4772 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4768)
!4773 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4768)
!4774 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4768)
!4775 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4768)
!4776 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4768)
!4777 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4768)
!4778 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4768)
!4779 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4768)
!4780 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4768)
!4781 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4768)
!4782 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4768)
!4783 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4768)
!4784 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4768)
!4785 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4768)
!4786 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4768)
!4787 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4768)
!4788 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4763)
!4789 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4763)
!4790 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !4759)
!4791 = !DILocation(line: 1165, column: 13, scope: !4631)
!4792 = !DILocation(line: 1166, column: 13, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 1166, column: 13)
!4794 = !DILocation(line: 1166, column: 31, scope: !4793)
!4795 = !DILocation(line: 1166, column: 13, scope: !4631)
!4796 = !DILocation(line: 1173, column: 19, scope: !4631)
!4797 = !DILocation(line: 1174, column: 24, scope: !4631)
!4798 = !{!4751, !201, i64 8}
!4799 = !DILocation(line: 1172, column: 27, scope: !4631)
!4800 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !4801)
!4801 = distinct !DILocation(line: 1175, column: 13, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 1175, column: 13)
!4803 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !4801)
!4804 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4805)
!4805 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !4801)
!4806 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4805)
!4807 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4805)
!4808 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4805)
!4809 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4810)
!4810 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4805)
!4811 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4810)
!4812 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4810)
!4813 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4810)
!4814 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4810)
!4815 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4810)
!4816 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4810)
!4817 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4810)
!4818 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4810)
!4819 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4810)
!4820 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4810)
!4821 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4810)
!4822 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4810)
!4823 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4810)
!4824 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4810)
!4825 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4810)
!4826 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4810)
!4827 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4810)
!4828 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4810)
!4829 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4810)
!4830 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4805)
!4831 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4805)
!4832 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !4801)
!4833 = !DILocation(line: 1175, column: 13, scope: !4631)
!4834 = !DILocation(line: 1172, column: 18, scope: !4631)
!4835 = !DILocation(line: 1176, column: 13, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 1176, column: 13)
!4837 = !DILocation(line: 1176, column: 37, scope: !4836)
!4838 = !DILocation(line: 1176, column: 13, scope: !4631)
!4839 = !DILocation(line: 1177, column: 13, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 1177, column: 13)
!4841 = !DILocation(line: 1177, column: 42, scope: !4840)
!4842 = !DILocation(line: 1177, column: 13, scope: !4631)
!4843 = !DILocation(line: 1180, column: 21, scope: !4631)
!4844 = !DILocation(line: 1145, column: 16, scope: !4616)
!4845 = !DILocation(line: 1180, column: 35, scope: !4631)
!4846 = !DILocation(line: 1180, column: 9, scope: !4631)
!4847 = !DILocation(line: 1181, column: 26, scope: !4675)
!4848 = !DILocation(line: 1181, column: 17, scope: !4675)
!4849 = !DILocation(line: 1182, column: 13, scope: !4675)
!4850 = !DILocation(line: 1182, column: 28, scope: !4675)
!4851 = !DILocation(line: 1182, column: 24, scope: !4675)
!4852 = !DILocation(line: 1185, column: 13, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 1185, column: 13)
!4854 = !{!2003, !192, i64 4}
!4855 = !DILocation(line: 1182, column: 18, scope: !4675)
!4856 = !DILocation(line: 1186, column: 22, scope: !4675)
!4857 = !DILocation(line: 1183, column: 23, scope: !4675)
!4858 = !DILocation(line: 1187, column: 17, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 1187, column: 17)
!4860 = !DILocation(line: 1187, column: 56, scope: !4859)
!4861 = !DILocation(line: 1187, column: 17, scope: !4675)
!4862 = !DILocation(line: 1198, column: 9, scope: !4631)
!4863 = !DILocation(line: 1192, column: 47, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 1192, column: 17)
!4865 = !DILocation(line: 1193, column: 22, scope: !4864)
!4866 = !DILocation(line: 1193, column: 49, scope: !4864)
!4867 = !DILocation(line: 1193, column: 38, scope: !4864)
!4868 = !DILocation(line: 1192, column: 17, scope: !4675)
!4869 = !DILocation(line: 1196, column: 17, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4864, file: !1, line: 1194, column: 13)
!4871 = !DILocation(line: 1197, column: 13, scope: !4870)
!4872 = !DILocation(line: 0, scope: !4870)
!4873 = !DILocation(line: 1199, column: 9, scope: !4631)
!4874 = !DILocation(line: 1201, column: 5, scope: !4632)
!4875 = !DILocation(line: 1158, column: 36, scope: !4632)
!4876 = distinct !{!4876, !4744, !4877}
!4877 = !DILocation(line: 1201, column: 5, scope: !4633)
!4878 = !DILocation(line: 1207, column: 9, scope: !4682)
!4879 = !DILocation(line: 1207, column: 13, scope: !4682)
!4880 = !DILocation(line: 1207, column: 16, scope: !4682)
!4881 = !{!204, !201, i64 3016}
!4882 = !DILocation(line: 1207, column: 9, scope: !4616)
!4883 = !DILocation(line: 1208, column: 14, scope: !4681)
!4884 = !DILocation(line: 1209, column: 9, scope: !4681)
!4885 = !DILocation(line: 1209, column: 21, scope: !4681)
!4886 = !DILocation(line: 1209, column: 35, scope: !4681)
!4887 = !DILocation(line: 1210, column: 26, scope: !4680)
!4888 = !DILocation(line: 1210, column: 19, scope: !4680)
!4889 = !DILocation(line: 1211, column: 51, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 1211, column: 17)
!4891 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !4892)
!4892 = distinct !DILocation(line: 1211, column: 55, scope: !4890)
!4893 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !4892)
!4894 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !4892)
!4895 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !4892)
!4896 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !4892)
!4897 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !4892)
!4898 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !4892)
!4899 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !4892)
!4900 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !4892)
!4901 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !4892)
!4902 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !4892)
!4903 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !4892)
!4904 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !4892)
!4905 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !4892)
!4906 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !4892)
!4907 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !4892)
!4908 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !4892)
!4909 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !4892)
!4910 = !DILocation(line: 0, scope: !2022, inlinedAt: !4892)
!4911 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !4892)
!4912 = !DILocation(line: 1211, column: 17, scope: !4890)
!4913 = !DILocation(line: 1211, column: 74, scope: !4890)
!4914 = !DILocation(line: 1214, column: 9, scope: !4681)
!4915 = !DILocation(line: 1216, column: 5, scope: !4681)
!4916 = !DILocation(line: 1218, column: 9, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1218, column: 9)
!4918 = !DILocation(line: 1218, column: 59, scope: !4917)
!4919 = !DILocation(line: 1218, column: 9, scope: !4616)
!4920 = !DILocation(line: 90, column: 22, scope: !532, inlinedAt: !4921)
!4921 = distinct !DILocation(line: 1221, column: 9, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1221, column: 9)
!4923 = !DILocation(line: 90, column: 41, scope: !532, inlinedAt: !4921)
!4924 = !DILocation(line: 72, column: 29, scope: !542, inlinedAt: !4925)
!4925 = distinct !DILocation(line: 91, column: 12, scope: !532, inlinedAt: !4921)
!4926 = !DILocation(line: 72, column: 40, scope: !542, inlinedAt: !4925)
!4927 = !DILocation(line: 72, column: 50, scope: !542, inlinedAt: !4925)
!4928 = !DILocation(line: 73, column: 13, scope: !556, inlinedAt: !4925)
!4929 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4930)
!4930 = distinct !DILocation(line: 73, column: 16, scope: !556, inlinedAt: !4925)
!4931 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4930)
!4932 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4930)
!4933 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4930)
!4934 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4930)
!4935 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4930)
!4936 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4930)
!4937 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4930)
!4938 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4930)
!4939 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4930)
!4940 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4930)
!4941 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4930)
!4942 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4930)
!4943 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4930)
!4944 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4930)
!4945 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4930)
!4946 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4930)
!4947 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4930)
!4948 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4930)
!4949 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4930)
!4950 = !DILocation(line: 73, column: 9, scope: !542, inlinedAt: !4925)
!4951 = !DILocation(line: 76, column: 1, scope: !542, inlinedAt: !4925)
!4952 = !DILocation(line: 91, column: 5, scope: !532, inlinedAt: !4921)
!4953 = !DILocation(line: 1221, column: 9, scope: !4616)
!4954 = !DILocation(line: 1225, column: 18, scope: !4616)
!4955 = !{!507, !205, i64 40}
!4956 = !DILocation(line: 1148, column: 14, scope: !4616)
!4957 = !DILocation(line: 1225, column: 11, scope: !4616)
!4958 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !4959)
!4959 = distinct !DILocation(line: 1227, column: 9, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1227, column: 9)
!4961 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !4959)
!4962 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !4959)
!4963 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !4959)
!4964 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !4959)
!4965 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !4959)
!4966 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !4959)
!4967 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !4959)
!4968 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !4959)
!4969 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !4959)
!4970 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !4959)
!4971 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !4959)
!4972 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !4959)
!4973 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !4959)
!4974 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !4959)
!4975 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !4959)
!4976 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !4959)
!4977 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !4959)
!4978 = !DILocation(line: 1227, column: 9, scope: !4616)
!4979 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !4959)
!4980 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !4959)
!4981 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !4959)
!4982 = !DILocation(line: 0, scope: !4681)
!4983 = !DILocation(line: 1231, column: 9, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1231, column: 9)
!4985 = !DILocation(line: 1231, column: 9, scope: !4616)
!4986 = !DILocation(line: 1231, column: 25, scope: !4984)
!4987 = !DILocation(line: 1231, column: 23, scope: !4984)
!4988 = !DILocation(line: 1231, column: 16, scope: !4984)
!4989 = !DILocation(line: 1232, column: 9, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4616, file: !1, line: 1232, column: 9)
!4991 = !DILocation(line: 1232, column: 9, scope: !4616)
!4992 = !DILocation(line: 1232, column: 13, scope: !4990)
!4993 = !DILocation(line: 1234, column: 1, scope: !4616)
!4994 = distinct !DISubprogram(name: "rdbSaveRioWithEOFMark", scope: !1, file: !1, line: 1244, type: !4995, isLocal: false, isDefinition: true, scopeLine: 1244, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4997)
!4995 = !DISubroutineType(types: !4996)
!4996 = !{!20, !220, !478, !4300}
!4997 = !{!4998, !4999, !5000, !5001}
!4998 = !DILocalVariable(name: "rdb", arg: 1, scope: !4994, file: !1, line: 1244, type: !220)
!4999 = !DILocalVariable(name: "error", arg: 2, scope: !4994, file: !1, line: 1244, type: !478)
!5000 = !DILocalVariable(name: "rsi", arg: 3, scope: !4994, file: !1, line: 1244, type: !4300)
!5001 = !DILocalVariable(name: "eofmark", scope: !4994, file: !1, line: 1245, type: !5002)
!5002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 320, elements: !5003)
!5003 = !{!5004}
!5004 = !DISubrange(count: 40)
!5005 = !DILocation(line: 1244, column: 32, scope: !4994)
!5006 = !DILocation(line: 1244, column: 42, scope: !4994)
!5007 = !DILocation(line: 1244, column: 62, scope: !4994)
!5008 = !DILocation(line: 1245, column: 5, scope: !4994)
!5009 = !DILocation(line: 1245, column: 10, scope: !4994)
!5010 = !DILocation(line: 1247, column: 5, scope: !4994)
!5011 = !DILocation(line: 1248, column: 9, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4994, file: !1, line: 1248, column: 9)
!5013 = !DILocation(line: 1248, column: 9, scope: !4994)
!5014 = !DILocation(line: 1248, column: 23, scope: !5012)
!5015 = !DILocation(line: 1248, column: 16, scope: !5012)
!5016 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !5017)
!5017 = distinct !DILocation(line: 1249, column: 9, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !4994, file: !1, line: 1249, column: 9)
!5019 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !5017)
!5020 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !5017)
!5021 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !5017)
!5022 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !5017)
!5023 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !5017)
!5024 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !5017)
!5025 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !5017)
!5026 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !5017)
!5027 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !5017)
!5028 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !5017)
!5029 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !5017)
!5030 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !5017)
!5031 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !5017)
!5032 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !5017)
!5033 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !5017)
!5034 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !5017)
!5035 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !5017)
!5036 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !5017)
!5037 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !5017)
!5038 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !5017)
!5039 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !5040)
!5040 = distinct !DILocation(line: 1250, column: 9, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !4994, file: !1, line: 1250, column: 9)
!5042 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !5040)
!5043 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !5040)
!5044 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !5040)
!5045 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !5040)
!5046 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !5040)
!5047 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !5040)
!5048 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !5040)
!5049 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !5040)
!5050 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !5040)
!5051 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !5040)
!5052 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !5040)
!5053 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !5040)
!5054 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !5040)
!5055 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !5040)
!5056 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !5040)
!5057 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !5040)
!5058 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !5040)
!5059 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !5040)
!5060 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !5040)
!5061 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !5040)
!5062 = !DILocation(line: 93, column: 36, scope: !559, inlinedAt: !5063)
!5063 = distinct !DILocation(line: 1251, column: 9, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !4994, file: !1, line: 1251, column: 9)
!5065 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !5063)
!5066 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !5063)
!5067 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !5063)
!5068 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !5063)
!5069 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !5063)
!5070 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !5063)
!5071 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !5063)
!5072 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !5063)
!5073 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !5063)
!5074 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !5063)
!5075 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !5063)
!5076 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !5063)
!5077 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !5063)
!5078 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !5063)
!5079 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !5063)
!5080 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !5063)
!5081 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !5063)
!5082 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !5063)
!5083 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !5063)
!5084 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !5063)
!5085 = !DILocation(line: 1252, column: 9, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !4994, file: !1, line: 1252, column: 9)
!5087 = !DILocation(line: 1252, column: 49, scope: !5086)
!5088 = !DILocation(line: 1252, column: 9, scope: !4994)
!5089 = !DILocation(line: 93, column: 63, scope: !559, inlinedAt: !5090)
!5090 = distinct !DILocation(line: 1253, column: 9, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !4994, file: !1, line: 1253, column: 9)
!5092 = !DILocation(line: 93, column: 51, scope: !559, inlinedAt: !5090)
!5093 = !DILocation(line: 95, column: 37, scope: !566, inlinedAt: !5090)
!5094 = !DILocation(line: 95, column: 34, scope: !566, inlinedAt: !5090)
!5095 = !DILocation(line: 95, column: 85, scope: !566, inlinedAt: !5090)
!5096 = !DILocation(line: 95, column: 58, scope: !566, inlinedAt: !5090)
!5097 = !DILocation(line: 95, column: 16, scope: !566, inlinedAt: !5090)
!5098 = !DILocation(line: 96, column: 16, scope: !578, inlinedAt: !5090)
!5099 = !DILocation(line: 96, column: 13, scope: !578, inlinedAt: !5090)
!5100 = !DILocation(line: 96, column: 13, scope: !566, inlinedAt: !5090)
!5101 = !DILocation(line: 96, column: 30, scope: !578, inlinedAt: !5090)
!5102 = !DILocation(line: 97, column: 16, scope: !583, inlinedAt: !5090)
!5103 = !DILocation(line: 97, column: 13, scope: !583, inlinedAt: !5090)
!5104 = !DILocation(line: 97, column: 44, scope: !583, inlinedAt: !5090)
!5105 = !DILocation(line: 97, column: 13, scope: !566, inlinedAt: !5090)
!5106 = !DILocation(line: 99, column: 26, scope: !566, inlinedAt: !5090)
!5107 = !DILocation(line: 100, column: 13, scope: !566, inlinedAt: !5090)
!5108 = !DILocation(line: 101, column: 28, scope: !566, inlinedAt: !5090)
!5109 = !DILocation(line: 94, column: 5, scope: !559, inlinedAt: !5090)
!5110 = !DILocation(line: 104, column: 1, scope: !559, inlinedAt: !5090)
!5111 = !DILocation(line: 1253, column: 9, scope: !4994)
!5112 = !DILocation(line: 1258, column: 15, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !4994, file: !1, line: 1258, column: 9)
!5114 = !DILocation(line: 1258, column: 18, scope: !5113)
!5115 = !DILocation(line: 1258, column: 25, scope: !5113)
!5116 = !DILocation(line: 1258, column: 9, scope: !4994)
!5117 = !DILocation(line: 1258, column: 40, scope: !5113)
!5118 = !DILocation(line: 1258, column: 38, scope: !5113)
!5119 = !DILocation(line: 1258, column: 31, scope: !5113)
!5120 = !DILocation(line: 0, scope: !4994)
!5121 = !DILocation(line: 1260, column: 1, scope: !4994)
!5122 = distinct !DISubprogram(name: "rdbSave", scope: !1, file: !1, line: 1263, type: !5123, isLocal: false, isDefinition: true, scopeLine: 1263, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !5125)
!5123 = !DISubroutineType(types: !5124)
!5124 = !{!20, !21, !4300}
!5125 = !{!5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5136}
!5126 = !DILocalVariable(name: "filename", arg: 1, scope: !5122, file: !1, line: 1263, type: !21)
!5127 = !DILocalVariable(name: "rsi", arg: 2, scope: !5122, file: !1, line: 1263, type: !4300)
!5128 = !DILocalVariable(name: "tmpfile", scope: !5122, file: !1, line: 1264, type: !2271)
!5129 = !DILocalVariable(name: "cwd", scope: !5122, file: !1, line: 1265, type: !169)
!5130 = !DILocalVariable(name: "fp", scope: !5122, file: !1, line: 1266, type: !267)
!5131 = !DILocalVariable(name: "rdb", scope: !5122, file: !1, line: 1267, type: !221)
!5132 = !DILocalVariable(name: "error", scope: !5122, file: !1, line: 1268, type: !20)
!5133 = !DILocalVariable(name: "cwdp", scope: !5134, file: !1, line: 1273, type: !21)
!5134 = distinct !DILexicalBlock(scope: !5135, file: !1, line: 1272, column: 14)
!5135 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 1272, column: 9)
!5136 = !DILocalVariable(name: "cwdp", scope: !5137, file: !1, line: 1301, type: !21)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !1, line: 1300, column: 41)
!5138 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 1300, column: 9)
!5139 = !DILocation(line: 1263, column: 19, scope: !5122)
!5140 = !DILocation(line: 1263, column: 42, scope: !5122)
!5141 = !DILocation(line: 1264, column: 5, scope: !5122)
!5142 = !DILocation(line: 1264, column: 10, scope: !5122)
!5143 = !DILocation(line: 1265, column: 5, scope: !5122)
!5144 = !DILocation(line: 1265, column: 10, scope: !5122)
!5145 = !DILocation(line: 1267, column: 5, scope: !5122)
!5146 = !DILocation(line: 1268, column: 5, scope: !5122)
!5147 = !DILocation(line: 1268, column: 9, scope: !5122)
!5148 = !DILocation(line: 1270, column: 47, scope: !5122)
!5149 = !DILocation(line: 1270, column: 5, scope: !5122)
!5150 = !DILocation(line: 1271, column: 10, scope: !5122)
!5151 = !DILocation(line: 1266, column: 11, scope: !5122)
!5152 = !DILocation(line: 1272, column: 10, scope: !5135)
!5153 = !DILocation(line: 1272, column: 9, scope: !5122)
!5154 = !DILocation(line: 1273, column: 22, scope: !5134)
!5155 = !DILocation(line: 1273, column: 15, scope: !5134)
!5156 = !DILocation(line: 1278, column: 13, scope: !5134)
!5157 = !DILocation(line: 1279, column: 22, scope: !5134)
!5158 = !DILocation(line: 1279, column: 13, scope: !5134)
!5159 = !DILocation(line: 1274, column: 9, scope: !5134)
!5160 = !DILocation(line: 1267, column: 9, scope: !5122)
!5161 = !DILocation(line: 1283, column: 5, scope: !5122)
!5162 = !DILocation(line: 1285, column: 16, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 1285, column: 9)
!5164 = !{!204, !192, i64 2020}
!5165 = !DILocation(line: 1285, column: 9, scope: !5163)
!5166 = !DILocation(line: 1285, column: 9, scope: !5122)
!5167 = !DILocation(line: 1286, column: 9, scope: !5163)
!5168 = !DILocation(line: 1288, column: 9, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 1288, column: 9)
!5170 = !DILocation(line: 1288, column: 51, scope: !5169)
!5171 = !DILocation(line: 1288, column: 9, scope: !5122)
!5172 = !DILocation(line: 1289, column: 17, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5169, file: !1, line: 1288, column: 61)
!5174 = !DILocation(line: 1289, column: 9, scope: !5173)
!5175 = !DILocation(line: 1289, column: 15, scope: !5173)
!5176 = !DILocation(line: 1290, column: 9, scope: !5173)
!5177 = !DILocation(line: 1294, column: 9, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 1294, column: 9)
!5179 = !DILocation(line: 1294, column: 20, scope: !5178)
!5180 = !DILocation(line: 1294, column: 9, scope: !5122)
!5181 = !DILocation(line: 1295, column: 15, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 1295, column: 9)
!5183 = !DILocation(line: 1295, column: 9, scope: !5182)
!5184 = !DILocation(line: 1295, column: 27, scope: !5182)
!5185 = !DILocation(line: 1295, column: 9, scope: !5122)
!5186 = !DILocation(line: 1296, column: 9, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 1296, column: 9)
!5188 = !DILocation(line: 1296, column: 20, scope: !5187)
!5189 = !DILocation(line: 1296, column: 9, scope: !5122)
!5190 = !DILocation(line: 1300, column: 9, scope: !5138)
!5191 = !DILocation(line: 1300, column: 34, scope: !5138)
!5192 = !DILocation(line: 1300, column: 9, scope: !5122)
!5193 = !DILocation(line: 1301, column: 22, scope: !5137)
!5194 = !DILocation(line: 1301, column: 15, scope: !5137)
!5195 = !DILocation(line: 1307, column: 13, scope: !5137)
!5196 = !DILocation(line: 1308, column: 22, scope: !5137)
!5197 = !DILocation(line: 1308, column: 13, scope: !5137)
!5198 = !DILocation(line: 1302, column: 9, scope: !5137)
!5199 = !DILocation(line: 1309, column: 9, scope: !5137)
!5200 = !DILocation(line: 1313, column: 5, scope: !5122)
!5201 = !DILocation(line: 1314, column: 18, scope: !5122)
!5202 = !{!204, !206, i64 2080}
!5203 = !DILocation(line: 1315, column: 23, scope: !5122)
!5204 = !DILocation(line: 1315, column: 21, scope: !5122)
!5205 = !{!204, !205, i64 2136}
!5206 = !DILocation(line: 1316, column: 30, scope: !5122)
!5207 = !{!204, !192, i64 2176}
!5208 = !DILocation(line: 1317, column: 5, scope: !5122)
!5209 = !DILocation(line: 1320, column: 72, scope: !5122)
!5210 = !DILocation(line: 1320, column: 63, scope: !5122)
!5211 = !DILocation(line: 1320, column: 5, scope: !5122)
!5212 = !DILocation(line: 1321, column: 5, scope: !5122)
!5213 = !DILocation(line: 1322, column: 5, scope: !5122)
!5214 = !DILocation(line: 1323, column: 5, scope: !5122)
!5215 = !DILocation(line: 0, scope: !5134)
!5216 = !DILocation(line: 1324, column: 1, scope: !5122)
!5217 = distinct !DISubprogram(name: "rdbSaveBackground", scope: !1, file: !1, line: 1326, type: !5123, isLocal: false, isDefinition: true, scopeLine: 1326, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !5218)
!5218 = !{!5219, !5220, !5221, !5224, !5225, !5228}
!5219 = !DILocalVariable(name: "filename", arg: 1, scope: !5217, file: !1, line: 1326, type: !21)
!5220 = !DILocalVariable(name: "rsi", arg: 2, scope: !5217, file: !1, line: 1326, type: !4300)
!5221 = !DILocalVariable(name: "childpid", scope: !5217, file: !1, line: 1327, type: !5222)
!5222 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !5223, line: 61, baseType: !20)
!5223 = !DIFile(filename: "/root/.unikraft/libs/newlib/musl-imported/include/signal.h", directory: "/root/.unikraft/apps/redis/build")
!5224 = !DILocalVariable(name: "start", scope: !5217, file: !1, line: 1328, type: !12)
!5225 = !DILocalVariable(name: "retval", scope: !5226, file: !1, line: 1338, type: !20)
!5226 = distinct !DILexicalBlock(scope: !5227, file: !1, line: 1337, column: 35)
!5227 = distinct !DILexicalBlock(scope: !5217, file: !1, line: 1337, column: 9)
!5228 = !DILocalVariable(name: "private_dirty", scope: !5229, file: !1, line: 1345, type: !545)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !1, line: 1344, column: 29)
!5230 = distinct !DILexicalBlock(scope: !5226, file: !1, line: 1344, column: 13)
!5231 = !DILocation(line: 1326, column: 29, scope: !5217)
!5232 = !DILocation(line: 1326, column: 52, scope: !5217)
!5233 = !DILocation(line: 1330, column: 16, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5217, file: !1, line: 1330, column: 9)
!5235 = !{!204, !192, i64 1940}
!5236 = !DILocation(line: 1330, column: 46, scope: !5234)
!5237 = !DILocation(line: 1330, column: 36, scope: !5234)
!5238 = !DILocation(line: 1332, column: 41, scope: !5217)
!5239 = !DILocation(line: 1332, column: 32, scope: !5217)
!5240 = !{!204, !206, i64 2088}
!5241 = !DILocation(line: 1333, column: 29, scope: !5217)
!5242 = !DILocation(line: 1333, column: 27, scope: !5217)
!5243 = !{!204, !205, i64 2144}
!5244 = !DILocation(line: 1334, column: 5, scope: !5217)
!5245 = !DILocation(line: 1336, column: 13, scope: !5217)
!5246 = !DILocation(line: 1328, column: 15, scope: !5217)
!5247 = !DILocation(line: 1337, column: 21, scope: !5227)
!5248 = !DILocation(line: 1327, column: 11, scope: !5217)
!5249 = !DILocation(line: 1337, column: 29, scope: !5227)
!5250 = !DILocation(line: 1337, column: 9, scope: !5217)
!5251 = !DILocation(line: 1341, column: 9, scope: !5226)
!5252 = !DILocation(line: 1342, column: 9, scope: !5226)
!5253 = !DILocation(line: 1343, column: 18, scope: !5226)
!5254 = !DILocation(line: 1338, column: 13, scope: !5226)
!5255 = !DILocation(line: 1344, column: 20, scope: !5230)
!5256 = !DILocation(line: 1344, column: 13, scope: !5226)
!5257 = !DILocation(line: 1345, column: 36, scope: !5229)
!5258 = !DILocation(line: 1345, column: 20, scope: !5229)
!5259 = !DILocation(line: 1347, column: 17, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5229, file: !1, line: 1347, column: 17)
!5261 = !DILocation(line: 1347, column: 17, scope: !5229)
!5262 = !DILocation(line: 1350, column: 34, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5260, file: !1, line: 1347, column: 32)
!5264 = !DILocation(line: 1348, column: 17, scope: !5263)
!5265 = !DILocation(line: 1351, column: 13, scope: !5263)
!5266 = !DILocation(line: 1353, column: 45, scope: !5229)
!5267 = !{!204, !205, i64 2208}
!5268 = !DILocation(line: 1354, column: 13, scope: !5229)
!5269 = !DILocation(line: 1355, column: 9, scope: !5229)
!5270 = !DILocation(line: 1356, column: 23, scope: !5226)
!5271 = !DILocation(line: 1356, column: 9, scope: !5226)
!5272 = !DILocation(line: 1376, column: 5, scope: !5217)
!5273 = !DILocation(line: 1359, column: 33, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5227, file: !1, line: 1357, column: 12)
!5275 = !DILocation(line: 1359, column: 41, scope: !5274)
!5276 = !DILocation(line: 1359, column: 31, scope: !5274)
!5277 = !{!204, !206, i64 1120}
!5278 = !DILocation(line: 1360, column: 42, scope: !5274)
!5279 = !DILocation(line: 1360, column: 33, scope: !5274)
!5280 = !DILocation(line: 1360, column: 64, scope: !5274)
!5281 = !DILocation(line: 1360, column: 83, scope: !5274)
!5282 = !DILocation(line: 1360, column: 76, scope: !5274)
!5283 = !DILocation(line: 1360, column: 74, scope: !5274)
!5284 = !DILocation(line: 1360, column: 98, scope: !5274)
!5285 = !DILocation(line: 1360, column: 31, scope: !5274)
!5286 = !{!204, !207, i64 1128}
!5287 = !DILocation(line: 1361, column: 9, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5274, file: !1, line: 1361, column: 9)
!5289 = !{!204, !206, i64 3096}
!5290 = !DILocation(line: 1361, column: 9, scope: !5274)
!5291 = !DILocation(line: 1362, column: 22, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5274, file: !1, line: 1362, column: 13)
!5293 = !DILocation(line: 1362, column: 13, scope: !5274)
!5294 = !DILocation(line: 1363, column: 13, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5292, file: !1, line: 1362, column: 29)
!5296 = !DILocation(line: 1364, column: 38, scope: !5295)
!5297 = !DILocation(line: 1366, column: 26, scope: !5295)
!5298 = !DILocation(line: 1366, column: 17, scope: !5295)
!5299 = !DILocation(line: 1365, column: 13, scope: !5295)
!5300 = !DILocation(line: 1367, column: 13, scope: !5295)
!5301 = !DILocation(line: 1369, column: 9, scope: !5274)
!5302 = !DILocation(line: 1370, column: 38, scope: !5274)
!5303 = !DILocation(line: 1370, column: 36, scope: !5274)
!5304 = !{!204, !205, i64 2160}
!5305 = !DILocation(line: 1371, column: 30, scope: !5274)
!5306 = !{!204, !192, i64 2096}
!5307 = !DILocation(line: 1372, column: 31, scope: !5274)
!5308 = !{!204, !192, i64 2172}
!5309 = !DILocation(line: 1373, column: 9, scope: !5274)
!5310 = !DILocation(line: 1374, column: 9, scope: !5274)
!5311 = !DILocation(line: 0, scope: !5274)
!5312 = !DILocation(line: 1377, column: 1, scope: !5217)
!5313 = distinct !DISubprogram(name: "rdbRemoveTempFile", scope: !1, file: !1, line: 1379, type: !5314, isLocal: false, isDefinition: true, scopeLine: 1379, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !5316)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{null, !5222}
!5316 = !{!5317, !5318}
!5317 = !DILocalVariable(name: "childpid", arg: 1, scope: !5313, file: !1, line: 1379, type: !5222)
!5318 = !DILocalVariable(name: "tmpfile", scope: !5313, file: !1, line: 1380, type: !2271)
!5319 = !DILocation(line: 1379, column: 30, scope: !5313)
!5320 = !DILocation(line: 1380, column: 5, scope: !5313)
!5321 = !DILocation(line: 1380, column: 10, scope: !5313)
!5322 = !DILocation(line: 1382, column: 5, scope: !5313)
!5323 = !DILocation(line: 1383, column: 5, scope: !5313)
!5324 = !DILocation(line: 1384, column: 1, scope: !5313)
!5325 = distinct !DISubprogram(name: "rdbLoadCheckModuleValue", scope: !1, file: !1, line: 1390, type: !5326, isLocal: false, isDefinition: true, scopeLine: 1390, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !5328)
!5326 = !DISubroutineType(types: !5327)
!5327 = !{!1982, !220, !21}
!5328 = !{!5329, !5330, !5331, !5332, !5336, !5339, !5342}
!5329 = !DILocalVariable(name: "rdb", arg: 1, scope: !5325, file: !1, line: 1390, type: !220)
!5330 = !DILocalVariable(name: "modulename", arg: 2, scope: !5325, file: !1, line: 1390, type: !21)
!5331 = !DILocalVariable(name: "opcode", scope: !5325, file: !1, line: 1391, type: !55)
!5332 = !DILocalVariable(name: "len", scope: !5333, file: !1, line: 1396, type: !55)
!5333 = distinct !DILexicalBlock(scope: !5334, file: !1, line: 1395, column: 9)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !1, line: 1393, column: 13)
!5335 = distinct !DILexicalBlock(scope: !5325, file: !1, line: 1392, column: 69)
!5336 = !DILocalVariable(name: "o", scope: !5337, file: !1, line: 1402, type: !1982)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !1, line: 1401, column: 56)
!5338 = distinct !DILexicalBlock(scope: !5334, file: !1, line: 1401, column: 20)
!5339 = !DILocalVariable(name: "val", scope: !5340, file: !1, line: 1409, type: !2420)
!5340 = distinct !DILexicalBlock(scope: !5341, file: !1, line: 1408, column: 55)
!5341 = distinct !DILexicalBlock(scope: !5338, file: !1, line: 1408, column: 20)
!5342 = !DILocalVariable(name: "val", scope: !5343, file: !1, line: 1415, type: !94)
!5343 = distinct !DILexicalBlock(scope: !5344, file: !1, line: 1414, column: 56)
!5344 = distinct !DILexicalBlock(scope: !5341, file: !1, line: 1414, column: 20)
!5345 = !DILocation(line: 1390, column: 36, scope: !5325)
!5346 = !DILocation(line: 1390, column: 47, scope: !5325)
!5347 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !5348)
!5348 = distinct !DILocation(line: 1392, column: 21, scope: !5325)
!5349 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !5348)
!5350 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !5348)
!5351 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !5348)
!5352 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !5348)
!5353 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !5348)
!5354 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !5348)
!5355 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !5348)
!5356 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !5348)
!5357 = !DILocation(line: 1391, column: 14, scope: !5325)
!5358 = !DILocation(line: 1392, column: 43, scope: !5325)
!5359 = !DILocation(line: 1392, column: 5, scope: !5325)
!5360 = !DILocation(line: 1393, column: 46, scope: !5334)
!5361 = !DILocation(line: 1396, column: 13, scope: !5333)
!5362 = !DILocation(line: 1396, column: 22, scope: !5333)
!5363 = !DILocation(line: 1397, column: 17, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5333, file: !1, line: 1397, column: 17)
!5365 = !DILocation(line: 1397, column: 48, scope: !5364)
!5366 = !DILocation(line: 1397, column: 17, scope: !5333)
!5367 = !DILocation(line: 1398, column: 17, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5364, file: !1, line: 1397, column: 55)
!5369 = !DILocation(line: 1401, column: 9, scope: !5334)
!5370 = !DILocation(line: 1401, column: 9, scope: !5333)
!5371 = !DILocation(line: 1401, column: 20, scope: !5334)
!5372 = !DILocation(line: 1402, column: 23, scope: !5337)
!5373 = !DILocation(line: 1403, column: 19, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5337, file: !1, line: 1403, column: 17)
!5375 = !DILocation(line: 1403, column: 17, scope: !5337)
!5376 = !DILocation(line: 1404, column: 17, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5374, file: !1, line: 1403, column: 28)
!5378 = !DILocation(line: 1402, column: 19, scope: !5337)
!5379 = !DILocation(line: 1407, column: 13, scope: !5337)
!5380 = !DILocation(line: 1408, column: 9, scope: !5337)
!5381 = !DILocation(line: 1409, column: 13, scope: !5340)
!5382 = !DILocation(line: 1409, column: 19, scope: !5340)
!5383 = !DILocation(line: 618, column: 34, scope: !2460, inlinedAt: !5384)
!5384 = distinct !DILocation(line: 1410, column: 17, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5340, file: !1, line: 1410, column: 17)
!5386 = !DILocation(line: 618, column: 46, scope: !2460, inlinedAt: !5384)
!5387 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !5388)
!5388 = distinct !DILocation(line: 619, column: 9, scope: !2470, inlinedAt: !5384)
!5389 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !5388)
!5390 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !5388)
!5391 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !5388)
!5392 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !5388)
!5393 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !5388)
!5394 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !5388)
!5395 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !5388)
!5396 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !5388)
!5397 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !5388)
!5398 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !5388)
!5399 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !5388)
!5400 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !5388)
!5401 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !5388)
!5402 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !5388)
!5403 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !5388)
!5404 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !5388)
!5405 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !5388)
!5406 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !5388)
!5407 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !5388)
!5408 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !5388)
!5409 = !DILocation(line: 622, column: 1, scope: !2460, inlinedAt: !5384)
!5410 = !DILocation(line: 1411, column: 17, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5385, file: !1, line: 1410, column: 58)
!5412 = !DILocation(line: 1414, column: 9, scope: !5341)
!5413 = !DILocation(line: 1414, column: 9, scope: !5340)
!5414 = !DILocation(line: 1415, column: 13, scope: !5343)
!5415 = !DILocation(line: 1415, column: 20, scope: !5343)
!5416 = !DILocation(line: 605, column: 35, scope: !2386, inlinedAt: !5417)
!5417 = distinct !DILocation(line: 1416, column: 17, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5343, file: !1, line: 1416, column: 17)
!5419 = !DILocation(line: 605, column: 48, scope: !2386, inlinedAt: !5417)
!5420 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !5421)
!5421 = distinct !DILocation(line: 606, column: 9, scope: !2393, inlinedAt: !5417)
!5422 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !5421)
!5423 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !5421)
!5424 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !5421)
!5425 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !5421)
!5426 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !5421)
!5427 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !5421)
!5428 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !5421)
!5429 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !5421)
!5430 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !5421)
!5431 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !5421)
!5432 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !5421)
!5433 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !5421)
!5434 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !5421)
!5435 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !5421)
!5436 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !5421)
!5437 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !5421)
!5438 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !5421)
!5439 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !5421)
!5440 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !5421)
!5441 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !5421)
!5442 = !DILocation(line: 609, column: 1, scope: !2386, inlinedAt: !5417)
!5443 = !DILocation(line: 1417, column: 17, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5418, file: !1, line: 1416, column: 59)
!5445 = !DILocation(line: 1420, column: 9, scope: !5344)
!5446 = !DILocation(line: 1420, column: 9, scope: !5343)
!5447 = distinct !{!5447, !5359, !5448}
!5448 = !DILocation(line: 1421, column: 5, scope: !5325)
!5449 = !DILocation(line: 1422, column: 12, scope: !5325)
!5450 = !DILocation(line: 1422, column: 5, scope: !5325)
!5451 = distinct !DISubprogram(name: "rdbLoadObject", scope: !1, file: !1, line: 1427, type: !5452, isLocal: false, isDefinition: true, scopeLine: 1427, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !5454)
!5452 = !DISubroutineType(types: !5453)
!5453 = !{!1982, !20, !220, !1982}
!5454 = !{!5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5468, !5474, !5475, !5478, !5479, !5480, !5482, !5483, !5484, !5487, !5488, !5489, !5490, !5494, !5497, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5509, !5510, !5512, !5513, !5514, !5515, !5516, !5518, !5519, !5520, !5521, !5526, !5527, !5528, !5530, !5531, !5533, !5534, !5537, !5538, !5539, !5540, !5541}
!5455 = !DILocalVariable(name: "rdbtype", arg: 1, scope: !5451, file: !1, line: 1427, type: !20)
!5456 = !DILocalVariable(name: "rdb", arg: 2, scope: !5451, file: !1, line: 1427, type: !220)
!5457 = !DILocalVariable(name: "key", arg: 3, scope: !5451, file: !1, line: 1427, type: !1982)
!5458 = !DILocalVariable(name: "o", scope: !5451, file: !1, line: 1428, type: !1982)
!5459 = !DILocalVariable(name: "ele", scope: !5451, file: !1, line: 1428, type: !1982)
!5460 = !DILocalVariable(name: "dec", scope: !5451, file: !1, line: 1428, type: !1982)
!5461 = !DILocalVariable(name: "len", scope: !5451, file: !1, line: 1429, type: !55)
!5462 = !DILocalVariable(name: "i", scope: !5451, file: !1, line: 1430, type: !33)
!5463 = !DILocalVariable(name: "len", scope: !5464, file: !1, line: 1448, type: !545)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !1, line: 1445, column: 22)
!5465 = distinct !DILexicalBlock(scope: !5466, file: !1, line: 1436, column: 42)
!5466 = distinct !DILexicalBlock(scope: !5467, file: !1, line: 1436, column: 16)
!5467 = distinct !DILexicalBlock(scope: !5451, file: !1, line: 1432, column: 9)
!5468 = !DILocalVariable(name: "llval", scope: !5469, file: !1, line: 1470, type: !12)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !1, line: 1469, column: 35)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !1, line: 1469, column: 9)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 1469, column: 9)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !1, line: 1453, column: 41)
!5473 = distinct !DILexicalBlock(scope: !5466, file: !1, line: 1453, column: 16)
!5474 = !DILocalVariable(name: "sdsele", scope: !5469, file: !1, line: 1471, type: !261)
!5475 = !DILocalVariable(name: "zsetlen", scope: !5476, file: !1, line: 1496, type: !55)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !1, line: 1494, column: 72)
!5477 = distinct !DILexicalBlock(scope: !5473, file: !1, line: 1494, column: 16)
!5478 = !DILocalVariable(name: "maxelelen", scope: !5476, file: !1, line: 1497, type: !545)
!5479 = !DILocalVariable(name: "zs", scope: !5476, file: !1, line: 1498, type: !3289)
!5480 = !DILocalVariable(name: "sdsele", scope: !5481, file: !1, line: 1509, type: !261)
!5481 = distinct !DILexicalBlock(scope: !5476, file: !1, line: 1508, column: 26)
!5482 = !DILocalVariable(name: "score", scope: !5481, file: !1, line: 1510, type: !94)
!5483 = !DILocalVariable(name: "znode", scope: !5481, file: !1, line: 1511, type: !3317)
!5484 = !DILocalVariable(name: "len", scope: !5485, file: !1, line: 1534, type: !55)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !1, line: 1533, column: 42)
!5486 = distinct !DILexicalBlock(scope: !5477, file: !1, line: 1533, column: 16)
!5487 = !DILocalVariable(name: "ret", scope: !5485, file: !1, line: 1535, type: !20)
!5488 = !DILocalVariable(name: "field", scope: !5485, file: !1, line: 1536, type: !261)
!5489 = !DILocalVariable(name: "value", scope: !5485, file: !1, line: 1536, type: !261)
!5490 = !DILocalVariable(name: "zl", scope: !5491, file: !1, line: 1603, type: !23)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !1, line: 1602, column: 23)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !1, line: 1596, column: 52)
!5493 = distinct !DILexicalBlock(scope: !5486, file: !1, line: 1596, column: 16)
!5494 = !DILocalVariable(name: "encoded", scope: !5495, file: !1, line: 1614, type: !23)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !1, line: 1613, column: 5)
!5496 = distinct !DILexicalBlock(scope: !5493, file: !1, line: 1608, column: 16)
!5497 = !DILocalVariable(name: "zl", scope: !5498, file: !1, line: 1630, type: !23)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !1, line: 1629, column: 17)
!5499 = distinct !DILexicalBlock(scope: !5495, file: !1, line: 1625, column: 25)
!5500 = !DILocalVariable(name: "zi", scope: !5498, file: !1, line: 1631, type: !23)
!5501 = !DILocalVariable(name: "fstr", scope: !5498, file: !1, line: 1632, type: !23)
!5502 = !DILocalVariable(name: "vstr", scope: !5498, file: !1, line: 1632, type: !23)
!5503 = !DILocalVariable(name: "flen", scope: !5498, file: !1, line: 1633, type: !33)
!5504 = !DILocalVariable(name: "vlen", scope: !5498, file: !1, line: 1633, type: !33)
!5505 = !DILocalVariable(name: "maxlen", scope: !5498, file: !1, line: 1634, type: !33)
!5506 = !DILocalVariable(name: "s", scope: !5507, file: !1, line: 1684, type: !3334)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 1682, column: 54)
!5508 = distinct !DILexicalBlock(scope: !5496, file: !1, line: 1682, column: 16)
!5509 = !DILocalVariable(name: "listpacks", scope: !5507, file: !1, line: 1685, type: !55)
!5510 = !DILocalVariable(name: "nodekey", scope: !5511, file: !1, line: 1691, type: !261)
!5511 = distinct !DILexicalBlock(scope: !5507, file: !1, line: 1687, column: 28)
!5512 = !DILocalVariable(name: "lp", scope: !5511, file: !1, line: 1701, type: !23)
!5513 = !DILocalVariable(name: "first", scope: !5511, file: !1, line: 1704, type: !23)
!5514 = !DILocalVariable(name: "retval", scope: !5511, file: !1, line: 1713, type: !20)
!5515 = !DILocalVariable(name: "cgroups_count", scope: !5507, file: !1, line: 1726, type: !545)
!5516 = !DILocalVariable(name: "cg_id", scope: !5517, file: !1, line: 1731, type: !3111)
!5517 = distinct !DILexicalBlock(scope: !5507, file: !1, line: 1727, column: 32)
!5518 = !DILocalVariable(name: "cgname", scope: !5517, file: !1, line: 1732, type: !261)
!5519 = !DILocalVariable(name: "cgroup", scope: !5517, file: !1, line: 1739, type: !3106)
!5520 = !DILocalVariable(name: "pel_size", scope: !5517, file: !1, line: 1750, type: !545)
!5521 = !DILocalVariable(name: "rawid", scope: !5522, file: !1, line: 1752, type: !5523)
!5522 = distinct !DILexicalBlock(scope: !5517, file: !1, line: 1751, column: 31)
!5523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 128, elements: !5524)
!5524 = !{!5525}
!5525 = !DISubrange(count: 16)
!5526 = !DILocalVariable(name: "nack", scope: !5522, file: !1, line: 1754, type: !2975)
!5527 = !DILocalVariable(name: "consumers_num", scope: !5517, file: !1, line: 1764, type: !545)
!5528 = !DILocalVariable(name: "cname", scope: !5529, file: !1, line: 1766, type: !261)
!5529 = distinct !DILexicalBlock(scope: !5517, file: !1, line: 1765, column: 36)
!5530 = !DILocalVariable(name: "consumer", scope: !5529, file: !1, line: 1771, type: !2984)
!5531 = !DILocalVariable(name: "rawid", scope: !5532, file: !1, line: 1780, type: !5523)
!5532 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 1779, column: 35)
!5533 = !DILocalVariable(name: "nack", scope: !5532, file: !1, line: 1782, type: !2975)
!5534 = !DILocalVariable(name: "moduleid", scope: !5535, file: !1, line: 1799, type: !55)
!5535 = distinct !DILexicalBlock(scope: !5536, file: !1, line: 1798, column: 76)
!5536 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 1798, column: 16)
!5537 = !DILocalVariable(name: "mt", scope: !5535, file: !1, line: 1800, type: !3361)
!5538 = !DILocalVariable(name: "name", scope: !5535, file: !1, line: 1801, type: !3421)
!5539 = !DILocalVariable(name: "io", scope: !5535, file: !1, line: 1813, type: !3355)
!5540 = !DILocalVariable(name: "ptr", scope: !5535, file: !1, line: 1818, type: !13)
!5541 = !DILocalVariable(name: "eof", scope: !5542, file: !1, line: 1826, type: !55)
!5542 = distinct !DILexicalBlock(scope: !5543, file: !1, line: 1825, column: 26)
!5543 = distinct !DILexicalBlock(scope: !5535, file: !1, line: 1825, column: 13)
!5544 = !DILocation(line: 1427, column: 25, scope: !5451)
!5545 = !DILocation(line: 1427, column: 39, scope: !5451)
!5546 = !DILocation(line: 1427, column: 50, scope: !5451)
!5547 = !DILocation(line: 1428, column: 11, scope: !5451)
!5548 = !DILocation(line: 1432, column: 9, scope: !5451)
!5549 = !DILocation(line: 529, column: 39, scope: !2183, inlinedAt: !5550)
!5550 = distinct !DILocation(line: 1434, column: 18, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !1, line: 1434, column: 13)
!5552 = distinct !DILexicalBlock(scope: !5467, file: !1, line: 1432, column: 37)
!5553 = !DILocation(line: 530, column: 12, scope: !2183, inlinedAt: !5550)
!5554 = !DILocation(line: 530, column: 5, scope: !2183, inlinedAt: !5550)
!5555 = !DILocation(line: 1434, column: 51, scope: !5551)
!5556 = !DILocation(line: 1434, column: 13, scope: !5552)
!5557 = !DILocation(line: 1435, column: 13, scope: !5552)
!5558 = !DILocation(line: 1436, column: 5, scope: !5552)
!5559 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !5560)
!5560 = distinct !DILocation(line: 1438, column: 20, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5465, file: !1, line: 1438, column: 13)
!5562 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !5560)
!5563 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !5560)
!5564 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !5560)
!5565 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !5560)
!5566 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !5560)
!5567 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !5560)
!5568 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !5560)
!5569 = !DILocation(line: 1438, column: 42, scope: !5561)
!5570 = !DILocation(line: 1438, column: 13, scope: !5465)
!5571 = !DILocation(line: 1440, column: 13, scope: !5465)
!5572 = !DILocation(line: 1441, column: 32, scope: !5465)
!5573 = !DILocation(line: 1441, column: 44, scope: !5465)
!5574 = !{!204, !192, i64 2864}
!5575 = !DILocation(line: 1442, column: 36, scope: !5465)
!5576 = !{!204, !192, i64 2868}
!5577 = !DILocation(line: 1441, column: 9, scope: !5465)
!5578 = !DILocation(line: 1429, column: 14, scope: !5451)
!5579 = !DILocation(line: 1445, column: 9, scope: !5465)
!5580 = !DILocation(line: 1445, column: 18, scope: !5465)
!5581 = !DILocation(line: 529, column: 39, scope: !2183, inlinedAt: !5582)
!5582 = distinct !DILocation(line: 1446, column: 24, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5464, file: !1, line: 1446, column: 17)
!5584 = !DILocation(line: 530, column: 12, scope: !2183, inlinedAt: !5582)
!5585 = !DILocation(line: 530, column: 5, scope: !2183, inlinedAt: !5582)
!5586 = !DILocation(line: 1428, column: 22, scope: !5451)
!5587 = !DILocation(line: 1446, column: 57, scope: !5583)
!5588 = !DILocation(line: 1446, column: 17, scope: !5464)
!5589 = !DILocation(line: 1447, column: 19, scope: !5464)
!5590 = !DILocation(line: 1428, column: 28, scope: !5451)
!5591 = !DILocation(line: 1448, column: 38, scope: !5464)
!5592 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !5593)
!5593 = distinct !DILocation(line: 1448, column: 26, scope: !5464)
!5594 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !5593)
!5595 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !5593)
!5596 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !5593)
!5597 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !5593)
!5598 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !5593)
!5599 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !5593)
!5600 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !5593)
!5601 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !5593)
!5602 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !5593)
!5603 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !5593)
!5604 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !5593)
!5605 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !5593)
!5606 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !5593)
!5607 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !5593)
!5608 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !5593)
!5609 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !5593)
!5610 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !5593)
!5611 = !DILocation(line: 0, scope: !2022, inlinedAt: !5593)
!5612 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !5593)
!5613 = !DILocation(line: 1448, column: 20, scope: !5464)
!5614 = !DILocation(line: 1449, column: 34, scope: !5464)
!5615 = !DILocation(line: 1449, column: 13, scope: !5464)
!5616 = !DILocation(line: 1450, column: 13, scope: !5464)
!5617 = !DILocation(line: 1451, column: 13, scope: !5464)
!5618 = distinct !{!5618, !5579, !5619}
!5619 = !DILocation(line: 1452, column: 9, scope: !5465)
!5620 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !5621)
!5621 = distinct !DILocation(line: 1455, column: 20, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 1455, column: 13)
!5623 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !5621)
!5624 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !5621)
!5625 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !5621)
!5626 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !5621)
!5627 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !5621)
!5628 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !5621)
!5629 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !5621)
!5630 = !DILocation(line: 1455, column: 42, scope: !5622)
!5631 = !DILocation(line: 1455, column: 13, scope: !5472)
!5632 = !DILocation(line: 1458, column: 26, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 1458, column: 13)
!5634 = !{!204, !205, i64 2816}
!5635 = !DILocation(line: 1458, column: 17, scope: !5633)
!5636 = !DILocation(line: 1458, column: 13, scope: !5472)
!5637 = !DILocation(line: 1459, column: 17, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5633, file: !1, line: 1458, column: 50)
!5639 = !DILocation(line: 1462, column: 21, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5638, file: !1, line: 1462, column: 17)
!5641 = !DILocation(line: 1462, column: 17, scope: !5638)
!5642 = !DILocation(line: 1463, column: 31, scope: !5640)
!5643 = !DILocation(line: 1463, column: 17, scope: !5640)
!5644 = !DILocation(line: 1465, column: 17, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5633, file: !1, line: 1464, column: 16)
!5646 = !DILocation(line: 1430, column: 18, scope: !5451)
!5647 = !DILocation(line: 1469, column: 23, scope: !5470)
!5648 = !DILocation(line: 1469, column: 9, scope: !5471)
!5649 = !DILocation(line: 1470, column: 13, scope: !5469)
!5650 = !DILocation(line: 1473, column: 27, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5469, file: !1, line: 1473, column: 17)
!5652 = !DILocation(line: 1471, column: 17, scope: !5469)
!5653 = !DILocation(line: 1474, column: 17, scope: !5651)
!5654 = !DILocation(line: 1473, column: 17, scope: !5469)
!5655 = !DILocation(line: 1476, column: 20, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5469, file: !1, line: 1476, column: 17)
!5657 = !DILocation(line: 1476, column: 29, scope: !5656)
!5658 = !DILocation(line: 1476, column: 17, scope: !5469)
!5659 = !DILocation(line: 1470, column: 23, scope: !5469)
!5660 = !DILocation(line: 1478, column: 21, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5662, file: !1, line: 1478, column: 21)
!5662 = distinct !DILexicalBlock(scope: !5656, file: !1, line: 1476, column: 53)
!5663 = !DILocation(line: 1478, column: 65, scope: !5661)
!5664 = !DILocation(line: 1478, column: 21, scope: !5662)
!5665 = !DILocation(line: 1479, column: 43, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5661, file: !1, line: 1478, column: 74)
!5667 = !DILocation(line: 1479, column: 47, scope: !5666)
!5668 = !{!206, !206, i64 0}
!5669 = !DILocation(line: 1479, column: 30, scope: !5666)
!5670 = !DILocation(line: 1479, column: 28, scope: !5666)
!5671 = !DILocation(line: 1480, column: 17, scope: !5666)
!5672 = !DILocation(line: 1481, column: 21, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5661, file: !1, line: 1480, column: 24)
!5674 = !DILocation(line: 1482, column: 35, scope: !5673)
!5675 = !DILocation(line: 1482, column: 21, scope: !5673)
!5676 = !DILocation(line: 1488, column: 20, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5469, file: !1, line: 1488, column: 17)
!5678 = !DILocation(line: 1488, column: 29, scope: !5677)
!5679 = !DILocation(line: 1488, column: 17, scope: !5469)
!5680 = !DILocation(line: 1489, column: 35, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5677, file: !1, line: 1488, column: 49)
!5682 = !DILocation(line: 1489, column: 17, scope: !5681)
!5683 = !DILocation(line: 1490, column: 13, scope: !5681)
!5684 = !DILocation(line: 1491, column: 17, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5677, file: !1, line: 1490, column: 20)
!5686 = !DILocation(line: 1493, column: 9, scope: !5470)
!5687 = !DILocation(line: 1469, column: 31, scope: !5470)
!5688 = !DILocation(line: 1469, column: 21, scope: !5470)
!5689 = distinct !{!5689, !5648, !5690}
!5690 = !DILocation(line: 1493, column: 9, scope: !5471)
!5691 = !DILocation(line: 1494, column: 24, scope: !5477)
!5692 = !DILocation(line: 1494, column: 43, scope: !5477)
!5693 = !DILocation(line: 1497, column: 16, scope: !5476)
!5694 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !5695)
!5695 = distinct !DILocation(line: 1500, column: 24, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5476, file: !1, line: 1500, column: 13)
!5697 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !5695)
!5698 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !5695)
!5699 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !5695)
!5700 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !5695)
!5701 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !5695)
!5702 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !5695)
!5703 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !5695)
!5704 = !DILocation(line: 1500, column: 46, scope: !5696)
!5705 = !DILocation(line: 1500, column: 13, scope: !5476)
!5706 = !DILocation(line: 1501, column: 13, scope: !5476)
!5707 = !DILocation(line: 1502, column: 17, scope: !5476)
!5708 = !DILocation(line: 1498, column: 15, scope: !5476)
!5709 = !DILocation(line: 1504, column: 21, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5476, file: !1, line: 1504, column: 13)
!5711 = !DILocation(line: 1504, column: 13, scope: !5476)
!5712 = !DILocation(line: 1505, column: 28, scope: !5710)
!5713 = !{!3576, !201, i64 0}
!5714 = !DILocation(line: 1505, column: 13, scope: !5710)
!5715 = !DILocation(line: 1496, column: 18, scope: !5476)
!5716 = !DILocation(line: 1508, column: 9, scope: !5476)
!5717 = !DILocation(line: 1508, column: 22, scope: !5476)
!5718 = !DILocation(line: 1510, column: 13, scope: !5481)
!5719 = !DILocation(line: 1513, column: 27, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5481, file: !1, line: 1513, column: 17)
!5721 = !DILocation(line: 1509, column: 17, scope: !5481)
!5722 = !DILocation(line: 1514, column: 17, scope: !5720)
!5723 = !DILocation(line: 1513, column: 17, scope: !5481)
!5724 = !DILocation(line: 1510, column: 20, scope: !5481)
!5725 = !DILocation(line: 1516, column: 17, scope: !5481)
!5726 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !5727)
!5727 = distinct !DILocation(line: 606, column: 9, scope: !2393, inlinedAt: !5728)
!5728 = distinct !DILocation(line: 1517, column: 21, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !1, line: 1517, column: 21)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !1, line: 1516, column: 45)
!5731 = distinct !DILexicalBlock(scope: !5481, file: !1, line: 1516, column: 17)
!5732 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !5727)
!5733 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !5727)
!5734 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !5727)
!5735 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !5727)
!5736 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !5727)
!5737 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !5727)
!5738 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !5727)
!5739 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !5727)
!5740 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !5727)
!5741 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !5727)
!5742 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !5727)
!5743 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !5727)
!5744 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !5727)
!5745 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !5727)
!5746 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !5727)
!5747 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !5727)
!5748 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !5727)
!5749 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !5727)
!5750 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !5727)
!5751 = !DILocation(line: 609, column: 1, scope: !2386, inlinedAt: !5728)
!5752 = !DILocation(line: 1517, column: 21, scope: !5730)
!5753 = !DILocation(line: 1519, column: 21, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !1, line: 1519, column: 21)
!5755 = distinct !DILexicalBlock(scope: !5731, file: !1, line: 1518, column: 20)
!5756 = !DILocation(line: 1519, column: 52, scope: !5754)
!5757 = !DILocation(line: 1519, column: 21, scope: !5755)
!5758 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !5759)
!5759 = distinct !DILocation(line: 1523, column: 17, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5481, file: !1, line: 1523, column: 17)
!5761 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !5759)
!5762 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !5759)
!5763 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !5759)
!5764 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !5759)
!5765 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !5759)
!5766 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !5759)
!5767 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !5759)
!5768 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !5759)
!5769 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !5759)
!5770 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !5759)
!5771 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !5759)
!5772 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !5759)
!5773 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !5759)
!5774 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !5759)
!5775 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !5759)
!5776 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !5759)
!5777 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !5759)
!5778 = !DILocation(line: 0, scope: !2022, inlinedAt: !5759)
!5779 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !5759)
!5780 = !DILocation(line: 1523, column: 32, scope: !5760)
!5781 = !DILocation(line: 1523, column: 17, scope: !5481)
!5782 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !5783)
!5783 = distinct !DILocation(line: 1523, column: 57, scope: !5760)
!5784 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !5783)
!5785 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !5783)
!5786 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !5783)
!5787 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !5783)
!5788 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !5783)
!5789 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !5783)
!5790 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !5783)
!5791 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !5783)
!5792 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !5783)
!5793 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !5783)
!5794 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !5783)
!5795 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !5783)
!5796 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !5783)
!5797 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !5783)
!5798 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !5783)
!5799 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !5783)
!5800 = !DILocation(line: 1527, column: 9, scope: !5476)
!5801 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !5783)
!5802 = !DILocation(line: 1525, column: 35, scope: !5481)
!5803 = !DILocation(line: 0, scope: !5476)
!5804 = !DILocation(line: 1525, column: 39, scope: !5481)
!5805 = !DILocation(line: 1525, column: 21, scope: !5481)
!5806 = !DILocation(line: 1511, column: 28, scope: !5481)
!5807 = !DILocation(line: 1526, column: 25, scope: !5481)
!5808 = !DILocation(line: 1526, column: 45, scope: !5481)
!5809 = !DILocation(line: 1526, column: 37, scope: !5481)
!5810 = !DILocation(line: 1526, column: 13, scope: !5481)
!5811 = !DILocation(line: 1530, column: 13, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5476, file: !1, line: 1530, column: 13)
!5813 = !DILocation(line: 1530, column: 37, scope: !5812)
!5814 = !{!204, !205, i64 2824}
!5815 = !DILocation(line: 1530, column: 27, scope: !5812)
!5816 = !DILocation(line: 1531, column: 33, scope: !5812)
!5817 = !DILocation(line: 1531, column: 23, scope: !5812)
!5818 = !DILocation(line: 1530, column: 62, scope: !5812)
!5819 = !DILocation(line: 1532, column: 17, scope: !5812)
!5820 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !5821)
!5821 = distinct !DILocation(line: 1538, column: 15, scope: !5485)
!5822 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !5821)
!5823 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !5821)
!5824 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !5821)
!5825 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !5821)
!5826 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !5821)
!5827 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !5821)
!5828 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !5821)
!5829 = !DILocation(line: 1539, column: 17, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5485, file: !1, line: 1539, column: 13)
!5831 = !DILocation(line: 1539, column: 13, scope: !5485)
!5832 = !DILocation(line: 1541, column: 13, scope: !5485)
!5833 = !DILocation(line: 1544, column: 26, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5485, file: !1, line: 1544, column: 13)
!5835 = !{!204, !205, i64 2800}
!5836 = !DILocation(line: 1544, column: 17, scope: !5834)
!5837 = !DILocation(line: 1544, column: 13, scope: !5485)
!5838 = !DILocation(line: 1545, column: 13, scope: !5834)
!5839 = !DILocation(line: 1534, column: 18, scope: !5485)
!5840 = !DILocation(line: 1548, column: 19, scope: !5485)
!5841 = !DILocation(line: 1548, column: 28, scope: !5485)
!5842 = !DILocation(line: 1548, column: 59, scope: !5485)
!5843 = !DILocation(line: 1548, column: 52, scope: !5485)
!5844 = !DILocation(line: 1548, column: 9, scope: !5485)
!5845 = !DILocation(line: 1549, column: 16, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5485, file: !1, line: 1548, column: 64)
!5847 = !DILocation(line: 1551, column: 26, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5846, file: !1, line: 1551, column: 17)
!5849 = !DILocation(line: 1536, column: 13, scope: !5485)
!5850 = !DILocation(line: 1552, column: 17, scope: !5848)
!5851 = !DILocation(line: 1551, column: 17, scope: !5846)
!5852 = !DILocation(line: 1553, column: 26, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5846, file: !1, line: 1553, column: 17)
!5854 = !DILocation(line: 1536, column: 20, scope: !5485)
!5855 = !DILocation(line: 1554, column: 17, scope: !5853)
!5856 = !DILocation(line: 1553, column: 17, scope: !5846)
!5857 = !DILocation(line: 1557, column: 37, scope: !5846)
!5858 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !5859)
!5859 = distinct !DILocation(line: 1558, column: 21, scope: !5846)
!5860 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !5859)
!5861 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !5859)
!5862 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !5859)
!5863 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !5859)
!5864 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !5859)
!5865 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !5859)
!5866 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !5859)
!5867 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !5859)
!5868 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !5859)
!5869 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !5859)
!5870 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !5859)
!5871 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !5859)
!5872 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !5859)
!5873 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !5859)
!5874 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !5859)
!5875 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !5859)
!5876 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !5859)
!5877 = !DILocation(line: 0, scope: !2022, inlinedAt: !5859)
!5878 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !5859)
!5879 = !DILocation(line: 1558, column: 21, scope: !5846)
!5880 = !DILocation(line: 1557, column: 22, scope: !5846)
!5881 = !DILocation(line: 1557, column: 20, scope: !5846)
!5882 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !5883)
!5883 = distinct !DILocation(line: 1560, column: 21, scope: !5846)
!5884 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !5883)
!5885 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !5883)
!5886 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !5883)
!5887 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !5883)
!5888 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !5883)
!5889 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !5883)
!5890 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !5883)
!5891 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !5883)
!5892 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !5883)
!5893 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !5883)
!5894 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !5883)
!5895 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !5883)
!5896 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !5883)
!5897 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !5883)
!5898 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !5883)
!5899 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !5883)
!5900 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !5883)
!5901 = !DILocation(line: 0, scope: !2022, inlinedAt: !5883)
!5902 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !5883)
!5903 = !DILocation(line: 1560, column: 21, scope: !5846)
!5904 = !DILocation(line: 1559, column: 22, scope: !5846)
!5905 = !DILocation(line: 1559, column: 20, scope: !5846)
!5906 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !5907)
!5907 = distinct !DILocation(line: 1563, column: 17, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5846, file: !1, line: 1563, column: 17)
!5909 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !5907)
!5910 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !5907)
!5911 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !5907)
!5912 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !5907)
!5913 = !DILocation(line: 1563, column: 40, scope: !5908)
!5914 = !{!204, !205, i64 2808}
!5915 = !DILocation(line: 1563, column: 63, scope: !5908)
!5916 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !5907)
!5917 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !5907)
!5918 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !5907)
!5919 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !5907)
!5920 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !5907)
!5921 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !5907)
!5922 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !5907)
!5923 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !5907)
!5924 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !5907)
!5925 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !5907)
!5926 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !5907)
!5927 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !5907)
!5928 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !5907)
!5929 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !5907)
!5930 = !DILocation(line: 0, scope: !2022, inlinedAt: !5907)
!5931 = !DILocation(line: 1563, column: 31, scope: !5908)
!5932 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !5933)
!5933 = distinct !DILocation(line: 1564, column: 17, scope: !5908)
!5934 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !5933)
!5935 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !5933)
!5936 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !5933)
!5937 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !5933)
!5938 = !DILocation(line: 1563, column: 17, scope: !5846)
!5939 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !5933)
!5940 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !5933)
!5941 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !5933)
!5942 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !5933)
!5943 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !5933)
!5944 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !5933)
!5945 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !5933)
!5946 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !5933)
!5947 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !5933)
!5948 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !5933)
!5949 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !5933)
!5950 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !5933)
!5951 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !5933)
!5952 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !5933)
!5953 = !DILocation(line: 0, scope: !2022, inlinedAt: !5933)
!5954 = !DILocation(line: 1564, column: 31, scope: !5908)
!5955 = !DILocation(line: 1566, column: 17, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5908, file: !1, line: 1565, column: 13)
!5957 = !DILocation(line: 1567, column: 17, scope: !5956)
!5958 = !DILocation(line: 1568, column: 17, scope: !5956)
!5959 = !DILocation(line: 1575, column: 16, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5485, file: !1, line: 1575, column: 13)
!5961 = !DILocation(line: 1569, column: 17, scope: !5956)
!5962 = !DILocation(line: 1571, column: 13, scope: !5846)
!5963 = !DILocation(line: 1572, column: 13, scope: !5846)
!5964 = distinct !{!5964, !5844, !5965}
!5965 = !DILocation(line: 1573, column: 9, scope: !5485)
!5966 = !DILocation(line: 0, scope: !5485)
!5967 = !DILocation(line: 1575, column: 25, scope: !5960)
!5968 = !DILocation(line: 1575, column: 51, scope: !5960)
!5969 = !DILocation(line: 1575, column: 44, scope: !5960)
!5970 = !DILocation(line: 1576, column: 27, scope: !5960)
!5971 = !DILocation(line: 1576, column: 13, scope: !5960)
!5972 = !DILocation(line: 1579, column: 19, scope: !5485)
!5973 = !DILocation(line: 0, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5485, file: !1, line: 1579, column: 59)
!5975 = !DILocation(line: 1579, column: 28, scope: !5485)
!5976 = !DILocation(line: 1579, column: 54, scope: !5485)
!5977 = !DILocation(line: 1579, column: 47, scope: !5485)
!5978 = !DILocation(line: 1579, column: 9, scope: !5485)
!5979 = !DILocation(line: 1580, column: 16, scope: !5974)
!5980 = !DILocation(line: 1582, column: 26, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5974, file: !1, line: 1582, column: 17)
!5982 = !DILocation(line: 1583, column: 17, scope: !5981)
!5983 = !DILocation(line: 1582, column: 17, scope: !5974)
!5984 = !DILocation(line: 1584, column: 26, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5974, file: !1, line: 1584, column: 17)
!5986 = !DILocation(line: 1585, column: 17, scope: !5985)
!5987 = !DILocation(line: 1584, column: 17, scope: !5974)
!5988 = !DILocation(line: 1588, column: 37, scope: !5974)
!5989 = !DILocation(line: 1588, column: 19, scope: !5974)
!5990 = !DILocation(line: 1535, column: 13, scope: !5485)
!5991 = !DILocation(line: 1589, column: 21, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5974, file: !1, line: 1589, column: 17)
!5993 = !DILocation(line: 1589, column: 17, scope: !5974)
!5994 = distinct !{!5994, !5978, !5995}
!5995 = !DILocation(line: 1592, column: 9, scope: !5485)
!5996 = !DILocation(line: 1590, column: 17, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5992, file: !1, line: 1589, column: 34)
!5998 = !DILocation(line: 1595, column: 9, scope: !5485)
!5999 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6000)
!6000 = distinct !DILocation(line: 1597, column: 20, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5492, file: !1, line: 1597, column: 13)
!6002 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6000)
!6003 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6000)
!6004 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6000)
!6005 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6000)
!6006 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6000)
!6007 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6000)
!6008 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6000)
!6009 = !DILocation(line: 1597, column: 42, scope: !6001)
!6010 = !DILocation(line: 1597, column: 13, scope: !5492)
!6011 = !DILocation(line: 1598, column: 13, scope: !5492)
!6012 = !DILocation(line: 1599, column: 32, scope: !5492)
!6013 = !DILocation(line: 1599, column: 44, scope: !5492)
!6014 = !DILocation(line: 1600, column: 36, scope: !5492)
!6015 = !DILocation(line: 1599, column: 9, scope: !5492)
!6016 = !DILocation(line: 1602, column: 9, scope: !5492)
!6017 = !DILocation(line: 1602, column: 19, scope: !5492)
!6018 = !DILocation(line: 1604, column: 17, scope: !5491)
!6019 = !DILocation(line: 1603, column: 28, scope: !5491)
!6020 = !DILocation(line: 1605, column: 20, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5491, file: !1, line: 1605, column: 17)
!6022 = !DILocation(line: 1605, column: 17, scope: !5491)
!6023 = !DILocation(line: 1606, column: 39, scope: !5491)
!6024 = !DILocation(line: 1606, column: 13, scope: !5491)
!6025 = !DILocation(line: 1608, column: 49, scope: !5496)
!6026 = !DILocation(line: 1615, column: 13, scope: !5495)
!6027 = !DILocation(line: 1614, column: 24, scope: !5495)
!6028 = !DILocation(line: 1616, column: 21, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !5495, file: !1, line: 1616, column: 13)
!6030 = !DILocation(line: 1616, column: 13, scope: !5495)
!6031 = !DILocation(line: 1617, column: 13, scope: !5495)
!6032 = !DILocation(line: 1625, column: 9, scope: !5495)
!6033 = !DILocation(line: 1630, column: 41, scope: !5498)
!6034 = !DILocation(line: 1630, column: 36, scope: !5498)
!6035 = !DILocation(line: 1631, column: 57, scope: !5498)
!6036 = !DILocation(line: 1631, column: 41, scope: !5498)
!6037 = !DILocation(line: 1631, column: 36, scope: !5498)
!6038 = !DILocation(line: 1632, column: 21, scope: !5498)
!6039 = !DILocation(line: 1633, column: 21, scope: !5498)
!6040 = !DILocation(line: 1634, column: 34, scope: !5498)
!6041 = !DILocation(line: 1632, column: 36, scope: !5498)
!6042 = !DILocation(line: 1632, column: 43, scope: !5498)
!6043 = !DILocation(line: 1633, column: 34, scope: !5498)
!6044 = !DILocation(line: 1633, column: 40, scope: !5498)
!6045 = !DILocation(line: 1636, column: 34, scope: !5498)
!6046 = !DILocation(line: 1636, column: 78, scope: !5498)
!6047 = !DILocation(line: 1636, column: 21, scope: !5498)
!6048 = !DILocation(line: 1637, column: 29, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6050, file: !1, line: 1637, column: 29)
!6050 = distinct !DILexicalBlock(scope: !5498, file: !1, line: 1636, column: 87)
!6051 = !DILocation(line: 1637, column: 34, scope: !6049)
!6052 = !DILocation(line: 1637, column: 29, scope: !6050)
!6053 = !DILocation(line: 1638, column: 29, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6050, file: !1, line: 1638, column: 29)
!6055 = !DILocation(line: 1638, column: 34, scope: !6054)
!6056 = !DILocation(line: 1638, column: 29, scope: !6050)
!6057 = !DILocation(line: 1639, column: 46, scope: !6050)
!6058 = !DILocation(line: 1639, column: 30, scope: !6050)
!6059 = !DILocation(line: 1640, column: 46, scope: !6050)
!6060 = !DILocation(line: 1640, column: 52, scope: !6050)
!6061 = !DILocation(line: 1640, column: 30, scope: !6050)
!6062 = distinct !{!6062, !6047, !6063}
!6063 = !DILocation(line: 1641, column: 21, scope: !5498)
!6064 = !DILocation(line: 1643, column: 30, scope: !5498)
!6065 = !DILocation(line: 0, scope: !6050)
!6066 = !DILocation(line: 1643, column: 21, scope: !5498)
!6067 = !DILocation(line: 1644, column: 28, scope: !5498)
!6068 = !DILocation(line: 1645, column: 24, scope: !5498)
!6069 = !DILocation(line: 1645, column: 29, scope: !5498)
!6070 = !DILocation(line: 1646, column: 33, scope: !5498)
!6071 = !DILocation(line: 1648, column: 25, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !5498, file: !1, line: 1648, column: 25)
!6073 = !DILocation(line: 1648, column: 52, scope: !6072)
!6074 = !DILocation(line: 1648, column: 43, scope: !6072)
!6075 = !DILocation(line: 1649, column: 41, scope: !6072)
!6076 = !DILocation(line: 1649, column: 32, scope: !6072)
!6077 = !DILocation(line: 1648, column: 77, scope: !6072)
!6078 = !DILocation(line: 1651, column: 25, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6072, file: !1, line: 1650, column: 21)
!6080 = !DILocation(line: 1652, column: 21, scope: !6079)
!6081 = !DILocation(line: 1653, column: 17, scope: !5499)
!6082 = !DILocation(line: 1654, column: 17, scope: !5499)
!6083 = !DILocation(line: 1656, column: 20, scope: !5499)
!6084 = !DILocation(line: 1656, column: 25, scope: !5499)
!6085 = !DILocation(line: 1657, column: 29, scope: !5499)
!6086 = !DILocation(line: 1658, column: 17, scope: !5499)
!6087 = !DILocation(line: 1659, column: 17, scope: !5499)
!6088 = !DILocation(line: 1661, column: 20, scope: !5499)
!6089 = !DILocation(line: 1661, column: 25, scope: !5499)
!6090 = !DILocation(line: 1662, column: 29, scope: !5499)
!6091 = !DILocation(line: 1663, column: 34, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !5499, file: !1, line: 1663, column: 21)
!6093 = !DILocation(line: 1663, column: 21, scope: !6092)
!6094 = !DILocation(line: 1663, column: 48, scope: !6092)
!6095 = !DILocation(line: 1663, column: 39, scope: !6092)
!6096 = !DILocation(line: 1663, column: 21, scope: !5499)
!6097 = !DILocation(line: 1664, column: 21, scope: !6092)
!6098 = !DILocation(line: 1667, column: 20, scope: !5499)
!6099 = !DILocation(line: 1667, column: 25, scope: !5499)
!6100 = !DILocation(line: 1668, column: 29, scope: !5499)
!6101 = !DILocation(line: 1669, column: 21, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !5499, file: !1, line: 1669, column: 21)
!6103 = !DILocation(line: 1669, column: 44, scope: !6102)
!6104 = !DILocation(line: 1669, column: 35, scope: !6102)
!6105 = !DILocation(line: 1669, column: 21, scope: !5499)
!6106 = !DILocation(line: 1670, column: 21, scope: !6102)
!6107 = !DILocation(line: 1673, column: 20, scope: !5499)
!6108 = !DILocation(line: 1673, column: 25, scope: !5499)
!6109 = !DILocation(line: 1674, column: 29, scope: !5499)
!6110 = !DILocation(line: 1675, column: 21, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !5499, file: !1, line: 1675, column: 21)
!6112 = !DILocation(line: 1675, column: 48, scope: !6111)
!6113 = !DILocation(line: 1675, column: 39, scope: !6111)
!6114 = !DILocation(line: 1675, column: 21, scope: !5499)
!6115 = !DILocation(line: 1676, column: 21, scope: !6111)
!6116 = !DILocation(line: 1679, column: 17, scope: !5499)
!6117 = !DILocation(line: 1682, column: 24, scope: !5508)
!6118 = !DILocation(line: 1682, column: 16, scope: !5496)
!6119 = !DILocation(line: 1683, column: 13, scope: !5507)
!6120 = !DILocation(line: 1684, column: 24, scope: !5507)
!6121 = !DILocation(line: 1684, column: 17, scope: !5507)
!6122 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6123)
!6123 = distinct !DILocation(line: 1685, column: 30, scope: !5507)
!6124 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6123)
!6125 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6123)
!6126 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6123)
!6127 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6123)
!6128 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6123)
!6129 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6123)
!6130 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6123)
!6131 = !DILocation(line: 1687, column: 24, scope: !5507)
!6132 = !DILocation(line: 0, scope: !5507)
!6133 = !DILocation(line: 1685, column: 18, scope: !5507)
!6134 = !DILocation(line: 1687, column: 9, scope: !5507)
!6135 = !DILocation(line: 1691, column: 27, scope: !5511)
!6136 = !DILocation(line: 1691, column: 17, scope: !5511)
!6137 = !DILocation(line: 1692, column: 25, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1692, column: 17)
!6139 = !DILocation(line: 1692, column: 17, scope: !5511)
!6140 = !DILocation(line: 1693, column: 17, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6138, file: !1, line: 1692, column: 34)
!6142 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !6143)
!6143 = distinct !DILocation(line: 1695, column: 17, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1695, column: 17)
!6145 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !6143)
!6146 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !6143)
!6147 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !6143)
!6148 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !6143)
!6149 = !DILocation(line: 1695, column: 17, scope: !5511)
!6150 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !6143)
!6151 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !6143)
!6152 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !6143)
!6153 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !6143)
!6154 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !6143)
!6155 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !6143)
!6156 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !6143)
!6157 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !6143)
!6158 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !6143)
!6159 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !6143)
!6160 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !6143)
!6161 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !6143)
!6162 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !6143)
!6163 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !6143)
!6164 = !DILocation(line: 0, scope: !2022, inlinedAt: !6143)
!6165 = !DILocation(line: 1695, column: 33, scope: !6144)
!6166 = !DILocation(line: 1696, column: 17, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6144, file: !1, line: 1695, column: 54)
!6168 = !DILocation(line: 1702, column: 17, scope: !5511)
!6169 = !DILocation(line: 1701, column: 28, scope: !5511)
!6170 = !DILocation(line: 1703, column: 20, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1703, column: 17)
!6172 = !DILocation(line: 1703, column: 17, scope: !5511)
!6173 = !DILocation(line: 1704, column: 36, scope: !5511)
!6174 = !DILocation(line: 1704, column: 28, scope: !5511)
!6175 = !DILocation(line: 1705, column: 23, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1705, column: 17)
!6177 = !DILocation(line: 1705, column: 17, scope: !5511)
!6178 = !DILocation(line: 1709, column: 17, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6176, file: !1, line: 1705, column: 32)
!6180 = !DILocation(line: 1713, column: 39, scope: !5511)
!6181 = !DILocation(line: 1713, column: 26, scope: !5511)
!6182 = !DILocation(line: 1713, column: 17, scope: !5511)
!6183 = !DILocation(line: 1715, column: 13, scope: !5511)
!6184 = !DILocation(line: 1716, column: 18, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1716, column: 17)
!6186 = !DILocation(line: 1716, column: 17, scope: !5511)
!6187 = !DILocation(line: 1717, column: 17, scope: !6185)
!6188 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6189)
!6189 = distinct !DILocation(line: 1720, column: 21, scope: !5507)
!6190 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6189)
!6191 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6189)
!6192 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6189)
!6193 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6189)
!6194 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6189)
!6195 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6189)
!6196 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !6189)
!6197 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6189)
!6198 = !DILocation(line: 1720, column: 12, scope: !5507)
!6199 = !DILocation(line: 1720, column: 19, scope: !5507)
!6200 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6201)
!6201 = distinct !DILocation(line: 1722, column: 25, scope: !5507)
!6202 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6201)
!6203 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6201)
!6204 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6201)
!6205 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6201)
!6206 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6201)
!6207 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6201)
!6208 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !6201)
!6209 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6201)
!6210 = !DILocation(line: 1722, column: 20, scope: !5507)
!6211 = !DILocation(line: 1722, column: 23, scope: !5507)
!6212 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6213)
!6213 = distinct !DILocation(line: 1723, column: 26, scope: !5507)
!6214 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6213)
!6215 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6213)
!6216 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6213)
!6217 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6213)
!6218 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6213)
!6219 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6213)
!6220 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !6213)
!6221 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6213)
!6222 = !DILocation(line: 1723, column: 20, scope: !5507)
!6223 = !DILocation(line: 1723, column: 24, scope: !5507)
!6224 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6225)
!6225 = distinct !DILocation(line: 1726, column: 32, scope: !5507)
!6226 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6225)
!6227 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6225)
!6228 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6225)
!6229 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6225)
!6230 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6225)
!6231 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6225)
!6232 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6225)
!6233 = !DILocation(line: 1726, column: 16, scope: !5507)
!6234 = !DILocation(line: 1727, column: 9, scope: !5507)
!6235 = !DILocation(line: 1727, column: 28, scope: !5507)
!6236 = !DILocation(line: 1731, column: 13, scope: !5517)
!6237 = !DILocation(line: 1732, column: 26, scope: !5517)
!6238 = !DILocation(line: 1732, column: 17, scope: !5517)
!6239 = !DILocation(line: 1733, column: 24, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !5517, file: !1, line: 1733, column: 17)
!6241 = !DILocation(line: 1733, column: 17, scope: !5517)
!6242 = !DILocation(line: 1734, column: 17, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6240, file: !1, line: 1733, column: 33)
!6244 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6245)
!6245 = distinct !DILocation(line: 1737, column: 24, scope: !5517)
!6246 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6245)
!6247 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6245)
!6248 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6245)
!6249 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6245)
!6250 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6245)
!6251 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6245)
!6252 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !6245)
!6253 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6245)
!6254 = !DILocation(line: 1737, column: 22, scope: !5517)
!6255 = !{!3133, !205, i64 0}
!6256 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6257)
!6257 = distinct !DILocation(line: 1738, column: 25, scope: !5517)
!6258 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6257)
!6259 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6257)
!6260 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6257)
!6261 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6257)
!6262 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6257)
!6263 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6257)
!6264 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !6257)
!6265 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6257)
!6266 = !DILocation(line: 1738, column: 23, scope: !5517)
!6267 = !{!3133, !205, i64 8}
!6268 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !6269)
!6269 = distinct !DILocation(line: 1739, column: 56, scope: !5517)
!6270 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !6269)
!6271 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !6269)
!6272 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !6269)
!6273 = !DILocation(line: 91, column: 20, scope: !2022, inlinedAt: !6269)
!6274 = !DILocation(line: 91, column: 13, scope: !2022, inlinedAt: !6269)
!6275 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !6269)
!6276 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !6269)
!6277 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !6269)
!6278 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !6269)
!6279 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !6269)
!6280 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !6269)
!6281 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !6269)
!6282 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !6269)
!6283 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !6269)
!6284 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !6269)
!6285 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !6269)
!6286 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !6269)
!6287 = !DILocation(line: 0, scope: !2022, inlinedAt: !6269)
!6288 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !6269)
!6289 = !DILocation(line: 1731, column: 22, scope: !5517)
!6290 = !DILocation(line: 1739, column: 32, scope: !5517)
!6291 = !DILocation(line: 1739, column: 23, scope: !5517)
!6292 = !DILocation(line: 1740, column: 24, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !5517, file: !1, line: 1740, column: 17)
!6294 = !DILocation(line: 1740, column: 17, scope: !5517)
!6295 = !DILocation(line: 1741, column: 17, scope: !6293)
!6296 = !DILocation(line: 1743, column: 13, scope: !5517)
!6297 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6298)
!6298 = distinct !DILocation(line: 1750, column: 31, scope: !5517)
!6299 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6298)
!6300 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6298)
!6301 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6298)
!6302 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6298)
!6303 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6298)
!6304 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6298)
!6305 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6298)
!6306 = !DILocation(line: 1750, column: 20, scope: !5517)
!6307 = !DILocation(line: 1751, column: 13, scope: !5517)
!6308 = !DILocation(line: 1751, column: 27, scope: !5517)
!6309 = !DILocation(line: 1752, column: 17, scope: !5522)
!6310 = !DILocation(line: 1752, column: 31, scope: !5522)
!6311 = !DILocation(line: 81, column: 22, scope: !217, inlinedAt: !6312)
!6312 = distinct !DILocation(line: 1753, column: 17, scope: !5522)
!6313 = !DILocation(line: 81, column: 33, scope: !217, inlinedAt: !6312)
!6314 = !DILocation(line: 81, column: 47, scope: !217, inlinedAt: !6312)
!6315 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6316)
!6316 = distinct !DILocation(line: 82, column: 9, scope: !501, inlinedAt: !6312)
!6317 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6316)
!6318 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6316)
!6319 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6316)
!6320 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6316)
!6321 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6316)
!6322 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6316)
!6323 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6316)
!6324 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6316)
!6325 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !6316)
!6326 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !6316)
!6327 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !6316)
!6328 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6316)
!6329 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !6316)
!6330 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !6316)
!6331 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6316)
!6332 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !6316)
!6333 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6316)
!6334 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6316)
!6335 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6316)
!6336 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6316)
!6337 = !DILocation(line: 83, column: 9, scope: !530, inlinedAt: !6312)
!6338 = !DILocation(line: 88, column: 1, scope: !217, inlinedAt: !6312)
!6339 = !DILocation(line: 1754, column: 36, scope: !5522)
!6340 = !DILocation(line: 1754, column: 29, scope: !5522)
!6341 = !DILocation(line: 129, column: 39, scope: !715, inlinedAt: !6342)
!6342 = distinct !DILocation(line: 1755, column: 39, scope: !5522)
!6343 = !DILocation(line: 129, column: 48, scope: !715, inlinedAt: !6342)
!6344 = !DILocation(line: 130, column: 5, scope: !715, inlinedAt: !6342)
!6345 = !DILocation(line: 81, column: 22, scope: !217, inlinedAt: !6346)
!6346 = distinct !DILocation(line: 131, column: 5, scope: !715, inlinedAt: !6342)
!6347 = !DILocation(line: 81, column: 33, scope: !217, inlinedAt: !6346)
!6348 = !DILocation(line: 81, column: 47, scope: !217, inlinedAt: !6346)
!6349 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6350)
!6350 = distinct !DILocation(line: 82, column: 9, scope: !501, inlinedAt: !6346)
!6351 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6350)
!6352 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6350)
!6353 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6350)
!6354 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6350)
!6355 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6350)
!6356 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6350)
!6357 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6350)
!6358 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6350)
!6359 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !6350)
!6360 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !6350)
!6361 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !6350)
!6362 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6350)
!6363 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !6350)
!6364 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !6350)
!6365 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6350)
!6366 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !6350)
!6367 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6350)
!6368 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6350)
!6369 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6350)
!6370 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6350)
!6371 = !DILocation(line: 83, column: 9, scope: !530, inlinedAt: !6346)
!6372 = !DILocation(line: 88, column: 1, scope: !217, inlinedAt: !6346)
!6373 = !DILocation(line: 134, column: 23, scope: !715, inlinedAt: !6342)
!6374 = !DILocation(line: 130, column: 13, scope: !715, inlinedAt: !6342)
!6375 = !DILocation(line: 135, column: 1, scope: !715, inlinedAt: !6342)
!6376 = !DILocation(line: 134, column: 5, scope: !715, inlinedAt: !6342)
!6377 = !DILocation(line: 1755, column: 23, scope: !5522)
!6378 = !DILocation(line: 1755, column: 37, scope: !5522)
!6379 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6380)
!6380 = distinct !DILocation(line: 1756, column: 40, scope: !5522)
!6381 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6380)
!6382 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6380)
!6383 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6380)
!6384 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6380)
!6385 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6380)
!6386 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6380)
!6387 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !6380)
!6388 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6380)
!6389 = !DILocation(line: 1756, column: 23, scope: !5522)
!6390 = !DILocation(line: 1756, column: 38, scope: !5522)
!6391 = !DILocation(line: 1757, column: 40, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !5522, file: !1, line: 1757, column: 21)
!6393 = !DILocation(line: 1757, column: 64, scope: !6392)
!6394 = !DILocation(line: 1757, column: 22, scope: !6392)
!6395 = !DILocation(line: 1757, column: 21, scope: !5522)
!6396 = !DILocation(line: 1758, column: 21, scope: !6392)
!6397 = !DILocation(line: 1760, column: 13, scope: !5517)
!6398 = distinct !{!6398, !6307, !6397}
!6399 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6400)
!6400 = distinct !DILocation(line: 1764, column: 36, scope: !5517)
!6401 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6400)
!6402 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6400)
!6403 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6400)
!6404 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6400)
!6405 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6400)
!6406 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6400)
!6407 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6400)
!6408 = !DILocation(line: 1764, column: 20, scope: !5517)
!6409 = !DILocation(line: 1765, column: 13, scope: !5517)
!6410 = !DILocation(line: 1765, column: 32, scope: !5517)
!6411 = !DILocation(line: 1766, column: 29, scope: !5529)
!6412 = !DILocation(line: 1766, column: 21, scope: !5529)
!6413 = !DILocation(line: 1767, column: 27, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 1767, column: 21)
!6415 = !DILocation(line: 1767, column: 21, scope: !5529)
!6416 = !DILocation(line: 1768, column: 21, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 1767, column: 36)
!6418 = !DILocation(line: 1771, column: 44, scope: !5529)
!6419 = !DILocation(line: 1771, column: 33, scope: !5529)
!6420 = !DILocation(line: 1773, column: 17, scope: !5529)
!6421 = !DILocation(line: 129, column: 39, scope: !715, inlinedAt: !6422)
!6422 = distinct !DILocation(line: 1774, column: 39, scope: !5529)
!6423 = !DILocation(line: 129, column: 48, scope: !715, inlinedAt: !6422)
!6424 = !DILocation(line: 130, column: 5, scope: !715, inlinedAt: !6422)
!6425 = !DILocation(line: 81, column: 22, scope: !217, inlinedAt: !6426)
!6426 = distinct !DILocation(line: 131, column: 5, scope: !715, inlinedAt: !6422)
!6427 = !DILocation(line: 81, column: 33, scope: !217, inlinedAt: !6426)
!6428 = !DILocation(line: 81, column: 47, scope: !217, inlinedAt: !6426)
!6429 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6430)
!6430 = distinct !DILocation(line: 82, column: 9, scope: !501, inlinedAt: !6426)
!6431 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6430)
!6432 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6430)
!6433 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6430)
!6434 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6430)
!6435 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6430)
!6436 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6430)
!6437 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6430)
!6438 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6430)
!6439 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !6430)
!6440 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !6430)
!6441 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !6430)
!6442 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6430)
!6443 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !6430)
!6444 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !6430)
!6445 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6430)
!6446 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !6430)
!6447 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6430)
!6448 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6430)
!6449 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6430)
!6450 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6430)
!6451 = !DILocation(line: 83, column: 9, scope: !530, inlinedAt: !6426)
!6452 = !DILocation(line: 88, column: 1, scope: !217, inlinedAt: !6426)
!6453 = !DILocation(line: 134, column: 23, scope: !715, inlinedAt: !6422)
!6454 = !DILocation(line: 130, column: 13, scope: !715, inlinedAt: !6422)
!6455 = !DILocation(line: 135, column: 1, scope: !715, inlinedAt: !6422)
!6456 = !DILocation(line: 134, column: 5, scope: !715, inlinedAt: !6422)
!6457 = !DILocation(line: 1774, column: 27, scope: !5529)
!6458 = !DILocation(line: 1774, column: 37, scope: !5529)
!6459 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6460)
!6460 = distinct !DILocation(line: 1778, column: 28, scope: !5529)
!6461 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6460)
!6462 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6460)
!6463 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6460)
!6464 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6460)
!6465 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6460)
!6466 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6460)
!6467 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6460)
!6468 = !DILocation(line: 1779, column: 17, scope: !5529)
!6469 = distinct !{!6469, !6409, !6470}
!6470 = !DILocation(line: 1796, column: 13, scope: !5517)
!6471 = !DILocation(line: 1779, column: 31, scope: !5529)
!6472 = !DILocation(line: 1780, column: 21, scope: !5532)
!6473 = !DILocation(line: 1780, column: 35, scope: !5532)
!6474 = !DILocation(line: 81, column: 22, scope: !217, inlinedAt: !6475)
!6475 = distinct !DILocation(line: 1781, column: 21, scope: !5532)
!6476 = !DILocation(line: 81, column: 33, scope: !217, inlinedAt: !6475)
!6477 = !DILocation(line: 81, column: 47, scope: !217, inlinedAt: !6475)
!6478 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6479)
!6479 = distinct !DILocation(line: 82, column: 9, scope: !501, inlinedAt: !6475)
!6480 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6479)
!6481 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6479)
!6482 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6479)
!6483 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6479)
!6484 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6479)
!6485 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6479)
!6486 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6479)
!6487 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6479)
!6488 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !6479)
!6489 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !6479)
!6490 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !6479)
!6491 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6479)
!6492 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !6479)
!6493 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !6479)
!6494 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6479)
!6495 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !6479)
!6496 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6479)
!6497 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6479)
!6498 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6479)
!6499 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6479)
!6500 = !DILocation(line: 83, column: 9, scope: !530, inlinedAt: !6475)
!6501 = !DILocation(line: 88, column: 1, scope: !217, inlinedAt: !6475)
!6502 = !DILocation(line: 1782, column: 56, scope: !5532)
!6503 = !DILocation(line: 1782, column: 40, scope: !5532)
!6504 = !DILocation(line: 1782, column: 33, scope: !5532)
!6505 = !DILocation(line: 1783, column: 33, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !5532, file: !1, line: 1783, column: 25)
!6507 = !DILocation(line: 1783, column: 30, scope: !6506)
!6508 = !DILocation(line: 1783, column: 25, scope: !5532)
!6509 = !DILocation(line: 1784, column: 25, scope: !6506)
!6510 = !DILocation(line: 1790, column: 27, scope: !5532)
!6511 = !DILocation(line: 1790, column: 36, scope: !5532)
!6512 = !{!3050, !201, i64 16}
!6513 = !DILocation(line: 1791, column: 46, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !5532, file: !1, line: 1791, column: 25)
!6515 = !DILocation(line: 1791, column: 26, scope: !6514)
!6516 = !DILocation(line: 1791, column: 25, scope: !5532)
!6517 = !DILocation(line: 1792, column: 25, scope: !6514)
!6518 = !DILocation(line: 1795, column: 17, scope: !5529)
!6519 = distinct !{!6519, !6468, !6518}
!6520 = !DILocation(line: 1797, column: 9, scope: !5507)
!6521 = distinct !{!6521, !6234, !6520}
!6522 = !DILocation(line: 1798, column: 24, scope: !5536)
!6523 = !DILocation(line: 1798, column: 43, scope: !5536)
!6524 = !DILocation(line: 1798, column: 54, scope: !5536)
!6525 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6526)
!6526 = distinct !DILocation(line: 1799, column: 29, scope: !5535)
!6527 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6526)
!6528 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6526)
!6529 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6526)
!6530 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6526)
!6531 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6526)
!6532 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6526)
!6533 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !6526)
!6534 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6526)
!6535 = !DILocation(line: 1799, column: 18, scope: !5535)
!6536 = !DILocation(line: 1800, column: 26, scope: !5535)
!6537 = !DILocation(line: 1800, column: 21, scope: !5535)
!6538 = !DILocation(line: 1801, column: 9, scope: !5535)
!6539 = !DILocation(line: 1801, column: 14, scope: !5535)
!6540 = !DILocation(line: 1803, column: 13, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !5535, file: !1, line: 1803, column: 13)
!6542 = !DILocation(line: 1803, column: 26, scope: !6541)
!6543 = !DILocation(line: 1808, column: 16, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !5535, file: !1, line: 1808, column: 13)
!6545 = !DILocation(line: 1808, column: 13, scope: !5535)
!6546 = !DILocation(line: 1809, column: 13, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6544, file: !1, line: 1808, column: 25)
!6548 = !DILocation(line: 1810, column: 13, scope: !6547)
!6549 = !DILocation(line: 1811, column: 13, scope: !6547)
!6550 = !DILocation(line: 1813, column: 9, scope: !5535)
!6551 = !DILocation(line: 1814, column: 9, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !5535, file: !1, line: 1814, column: 9)
!6553 = !DILocation(line: 1815, column: 18, scope: !5535)
!6554 = !DILocation(line: 1815, column: 16, scope: !5535)
!6555 = !DILocation(line: 1818, column: 25, scope: !5535)
!6556 = !{!3867, !201, i64 16}
!6557 = !DILocation(line: 1818, column: 38, scope: !5535)
!6558 = !DILocation(line: 1813, column: 23, scope: !5535)
!6559 = !DILocation(line: 1818, column: 21, scope: !5535)
!6560 = !DILocation(line: 1818, column: 15, scope: !5535)
!6561 = !DILocation(line: 1819, column: 16, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !5535, file: !1, line: 1819, column: 13)
!6563 = !DILocation(line: 1819, column: 13, scope: !6562)
!6564 = !DILocation(line: 1819, column: 13, scope: !5535)
!6565 = !DILocation(line: 1820, column: 13, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6562, file: !1, line: 1819, column: 21)
!6567 = !DILocation(line: 1821, column: 22, scope: !6566)
!6568 = !DILocation(line: 1821, column: 13, scope: !6566)
!6569 = !DILocation(line: 1822, column: 9, scope: !6566)
!6570 = !DILocation(line: 1825, column: 16, scope: !5543)
!6571 = !DILocation(line: 1825, column: 20, scope: !5543)
!6572 = !DILocation(line: 1825, column: 13, scope: !5535)
!6573 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6574)
!6574 = distinct !DILocation(line: 1826, column: 28, scope: !5542)
!6575 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6574)
!6576 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6574)
!6577 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6574)
!6578 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6574)
!6579 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6574)
!6580 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6574)
!6581 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6574)
!6582 = !DILocation(line: 1827, column: 21, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !5542, file: !1, line: 1827, column: 17)
!6584 = !DILocation(line: 1827, column: 17, scope: !5542)
!6585 = !DILocation(line: 1828, column: 17, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6583, file: !1, line: 1827, column: 47)
!6587 = !DILocation(line: 1829, column: 17, scope: !6586)
!6588 = !DILocation(line: 1833, column: 17, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !5535, file: !1, line: 1833, column: 13)
!6590 = !DILocation(line: 1833, column: 13, scope: !5535)
!6591 = !DILocation(line: 1834, column: 13, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6589, file: !1, line: 1833, column: 26)
!6593 = !DILocation(line: 1835, column: 13, scope: !6592)
!6594 = !DILocation(line: 1836, column: 13, scope: !6592)
!6595 = !DILocation(line: 1838, column: 13, scope: !5535)
!6596 = !DILocation(line: 1839, column: 5, scope: !5536)
!6597 = !DILocation(line: 1804, column: 13, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6541, file: !1, line: 1803, column: 59)
!6599 = !DILocation(line: 1805, column: 20, scope: !6598)
!6600 = !DILocation(line: 1840, column: 9, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !5536, file: !1, line: 1839, column: 12)
!6602 = !DILocation(line: 0, scope: !6598)
!6603 = !DILocation(line: 1843, column: 1, scope: !5451)
!6604 = distinct !DISubprogram(name: "startLoading", scope: !1, file: !1, line: 1847, type: !6605, isLocal: false, isDefinition: true, scopeLine: 1847, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6607)
!6605 = !DISubroutineType(types: !6606)
!6606 = !{null, !267}
!6607 = !{!6608, !6609}
!6608 = !DILocalVariable(name: "fp", arg: 1, scope: !6604, file: !1, line: 1847, type: !267)
!6609 = !DILocalVariable(name: "sb", scope: !6604, file: !1, line: 1848, type: !6610)
!6610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !6611, line: 27, size: 704, elements: !6612)
!6611 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/stat.h", directory: "/root/.unikraft/apps/redis/build")
!6612 = !{!6613, !6616, !6619, !6622, !6625, !6628, !6631, !6632, !6633, !6638, !6639, !6640, !6643}
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !6610, file: !6611, line: 29, baseType: !6614, size: 16)
!6614 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !105, line: 177, baseType: !6615)
!6615 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !107, line: 54, baseType: !17)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !6610, file: !6611, line: 30, baseType: !6617, size: 16, offset: 16)
!6617 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !105, line: 155, baseType: !6618)
!6618 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !107, line: 73, baseType: !125)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !6610, file: !6611, line: 31, baseType: !6620, size: 32, offset: 32)
!6620 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !105, line: 205, baseType: !6621)
!6621 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !107, line: 88, baseType: !32)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !6610, file: !6611, line: 32, baseType: !6623, size: 16, offset: 64)
!6623 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !105, line: 210, baseType: !6624)
!6624 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !107, line: 210, baseType: !125)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !6610, file: !6611, line: 33, baseType: !6626, size: 16, offset: 80)
!6626 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !105, line: 181, baseType: !6627)
!6627 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !107, line: 58, baseType: !125)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !6610, file: !6611, line: 34, baseType: !6629, size: 16, offset: 96)
!6629 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !105, line: 185, baseType: !6630)
!6630 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !107, line: 61, baseType: !125)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !6610, file: !6611, line: 35, baseType: !6614, size: 16, offset: 112)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !6610, file: !6611, line: 36, baseType: !240, size: 64, offset: 128)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !6610, file: !6611, line: 37, baseType: !6634, size: 128, offset: 192)
!6634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !6, line: 52, size: 128, elements: !6635)
!6635 = !{!6636, !6637}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6634, file: !6, line: 53, baseType: !5, size: 64)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6634, file: !6, line: 54, baseType: !7, size: 64, offset: 64)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !6610, file: !6611, line: 38, baseType: !6634, size: 128, offset: 320)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !6610, file: !6611, line: 39, baseType: !6634, size: 128, offset: 448)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !6610, file: !6611, line: 40, baseType: !6641, size: 64, offset: 576)
!6641 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !105, line: 118, baseType: !6642)
!6642 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !107, line: 32, baseType: !7)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !6610, file: !6611, line: 41, baseType: !6644, size: 64, offset: 640)
!6644 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !105, line: 113, baseType: !6645)
!6645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !107, line: 28, baseType: !7)
!6646 = !DILocation(line: 1847, column: 25, scope: !6604)
!6647 = !DILocation(line: 1848, column: 5, scope: !6604)
!6648 = !DILocation(line: 1851, column: 20, scope: !6604)
!6649 = !{!204, !192, i64 860}
!6650 = !DILocation(line: 1852, column: 33, scope: !6604)
!6651 = !DILocation(line: 1852, column: 31, scope: !6604)
!6652 = !{!204, !205, i64 880}
!6653 = !DILocation(line: 1853, column: 33, scope: !6604)
!6654 = !{!204, !205, i64 872}
!6655 = !DILocation(line: 1854, column: 15, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6604, file: !1, line: 1854, column: 9)
!6657 = !DILocation(line: 1848, column: 17, scope: !6604)
!6658 = !DILocation(line: 1854, column: 9, scope: !6656)
!6659 = !DILocation(line: 1854, column: 32, scope: !6656)
!6660 = !DILocation(line: 1857, column: 41, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1856, column: 12)
!6662 = !DILocation(line: 1854, column: 9, scope: !6604)
!6663 = !DILocation(line: 0, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1854, column: 39)
!6665 = !{!204, !205, i64 864}
!6666 = !DILocation(line: 1859, column: 1, scope: !6604)
!6667 = distinct !DISubprogram(name: "loadingProgress", scope: !1, file: !1, line: 1862, type: !6668, isLocal: false, isDefinition: true, scopeLine: 1862, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6670)
!6668 = !DISubroutineType(types: !6669)
!6669 = !{null, !240}
!6670 = !{!6671}
!6671 = !DILocalVariable(name: "pos", arg: 1, scope: !6667, file: !1, line: 1862, type: !240)
!6672 = !DILocation(line: 1862, column: 28, scope: !6667)
!6673 = !DILocation(line: 1863, column: 33, scope: !6667)
!6674 = !DILocation(line: 1864, column: 16, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6667, file: !1, line: 1864, column: 9)
!6676 = !{!204, !205, i64 1112}
!6677 = !DILocation(line: 1864, column: 35, scope: !6675)
!6678 = !DILocation(line: 1864, column: 33, scope: !6675)
!6679 = !DILocation(line: 1864, column: 9, scope: !6667)
!6680 = !DILocation(line: 1865, column: 35, scope: !6675)
!6681 = !DILocation(line: 1865, column: 33, scope: !6675)
!6682 = !DILocation(line: 1865, column: 9, scope: !6675)
!6683 = !DILocation(line: 1866, column: 1, scope: !6667)
!6684 = distinct !DISubprogram(name: "stopLoading", scope: !1, file: !1, line: 1869, type: !413, isLocal: false, isDefinition: true, scopeLine: 1869, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2)
!6685 = !DILocation(line: 1870, column: 20, scope: !6684)
!6686 = !DILocation(line: 1871, column: 1, scope: !6684)
!6687 = distinct !DISubprogram(name: "rdbLoadProgressCallback", scope: !1, file: !1, line: 1875, type: !6688, isLocal: false, isDefinition: true, scopeLine: 1875, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6690)
!6688 = !DISubroutineType(types: !6689)
!6689 = !{null, !220, !58, !545}
!6690 = !{!6691, !6692, !6693}
!6691 = !DILocalVariable(name: "r", arg: 1, scope: !6687, file: !1, line: 1875, type: !220)
!6692 = !DILocalVariable(name: "buf", arg: 2, scope: !6687, file: !1, line: 1875, type: !58)
!6693 = !DILocalVariable(name: "len", arg: 3, scope: !6687, file: !1, line: 1875, type: !545)
!6694 = !DILocation(line: 1875, column: 35, scope: !6687)
!6695 = !DILocation(line: 1875, column: 50, scope: !6687)
!6696 = !DILocation(line: 1875, column: 62, scope: !6687)
!6697 = !DILocation(line: 1876, column: 16, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6687, file: !1, line: 1876, column: 9)
!6699 = !DILocation(line: 1876, column: 9, scope: !6698)
!6700 = !DILocation(line: 1876, column: 9, scope: !6687)
!6701 = !DILocation(line: 1877, column: 9, scope: !6698)
!6702 = !DILocation(line: 1878, column: 16, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6687, file: !1, line: 1878, column: 9)
!6704 = !{!204, !205, i64 888}
!6705 = !DILocation(line: 1878, column: 9, scope: !6703)
!6706 = !DILocation(line: 1878, column: 54, scope: !6703)
!6707 = !DILocation(line: 1879, column: 13, scope: !6703)
!6708 = !DILocation(line: 1879, column: 29, scope: !6703)
!6709 = !DILocation(line: 1879, column: 35, scope: !6703)
!6710 = !DILocation(line: 1879, column: 101, scope: !6703)
!6711 = !DILocation(line: 1879, column: 81, scope: !6703)
!6712 = !DILocation(line: 1878, column: 9, scope: !6687)
!6713 = !DILocation(line: 1884, column: 9, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6703, file: !1, line: 1880, column: 5)
!6715 = !DILocation(line: 1885, column: 20, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6714, file: !1, line: 1885, column: 13)
!6717 = !{!204, !201, i64 2464}
!6718 = !DILocation(line: 1885, column: 13, scope: !6716)
!6719 = !DILocation(line: 1885, column: 41, scope: !6716)
!6720 = !DILocation(line: 1885, column: 52, scope: !6716)
!6721 = !DILocation(line: 1885, column: 31, scope: !6716)
!6722 = !DILocation(line: 1886, column: 13, scope: !6716)
!6723 = !DILocation(line: 1887, column: 28, scope: !6714)
!6724 = !DILocation(line: 1862, column: 28, scope: !6667, inlinedAt: !6725)
!6725 = distinct !DILocation(line: 1887, column: 9, scope: !6714)
!6726 = !DILocation(line: 1863, column: 33, scope: !6667, inlinedAt: !6725)
!6727 = !DILocation(line: 1864, column: 16, scope: !6675, inlinedAt: !6725)
!6728 = !DILocation(line: 1864, column: 35, scope: !6675, inlinedAt: !6725)
!6729 = !DILocation(line: 1864, column: 33, scope: !6675, inlinedAt: !6725)
!6730 = !DILocation(line: 1864, column: 9, scope: !6667, inlinedAt: !6725)
!6731 = !DILocation(line: 1865, column: 35, scope: !6675, inlinedAt: !6725)
!6732 = !DILocation(line: 1865, column: 33, scope: !6675, inlinedAt: !6725)
!6733 = !DILocation(line: 1865, column: 9, scope: !6675, inlinedAt: !6725)
!6734 = !DILocation(line: 1866, column: 1, scope: !6667, inlinedAt: !6725)
!6735 = !DILocation(line: 1888, column: 9, scope: !6714)
!6736 = !DILocation(line: 1889, column: 5, scope: !6714)
!6737 = !DILocation(line: 1890, column: 1, scope: !6687)
!6738 = distinct !DISubprogram(name: "rdbLoadRio", scope: !1, file: !1, line: 1894, type: !6739, isLocal: false, isDefinition: true, scopeLine: 1894, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6741)
!6739 = !DISubroutineType(types: !6740)
!6740 = !{!20, !220, !4300, !20}
!6741 = !{!6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6757, !6758, !6763, !6766, !6771, !6772, !6775, !6776, !6779, !6780, !6781, !6782, !6783, !6787, !6788, !6790, !6793}
!6742 = !DILocalVariable(name: "rdb", arg: 1, scope: !6738, file: !1, line: 1894, type: !220)
!6743 = !DILocalVariable(name: "rsi", arg: 2, scope: !6738, file: !1, line: 1894, type: !4300)
!6744 = !DILocalVariable(name: "loading_aof", arg: 3, scope: !6738, file: !1, line: 1894, type: !20)
!6745 = !DILocalVariable(name: "dbid", scope: !6738, file: !1, line: 1895, type: !55)
!6746 = !DILocalVariable(name: "type", scope: !6738, file: !1, line: 1896, type: !20)
!6747 = !DILocalVariable(name: "rdbver", scope: !6738, file: !1, line: 1896, type: !20)
!6748 = !DILocalVariable(name: "db", scope: !6738, file: !1, line: 1897, type: !4634)
!6749 = !DILocalVariable(name: "buf", scope: !6738, file: !1, line: 1898, type: !169)
!6750 = !DILocalVariable(name: "lru_idle", scope: !6738, file: !1, line: 1917, type: !12)
!6751 = !DILocalVariable(name: "lfu_freq", scope: !6738, file: !1, line: 1917, type: !12)
!6752 = !DILocalVariable(name: "expiretime", scope: !6738, file: !1, line: 1917, type: !12)
!6753 = !DILocalVariable(name: "now", scope: !6738, file: !1, line: 1917, type: !12)
!6754 = !DILocalVariable(name: "lru_clock", scope: !6738, file: !1, line: 1918, type: !12)
!6755 = !DILocalVariable(name: "key", scope: !6756, file: !1, line: 1921, type: !1982)
!6756 = distinct !DILexicalBlock(scope: !6738, file: !1, line: 1920, column: 14)
!6757 = !DILocalVariable(name: "val", scope: !6756, file: !1, line: 1921, type: !1982)
!6758 = !DILocalVariable(name: "byte", scope: !6759, file: !1, line: 1941, type: !113)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !1, line: 1939, column: 45)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !1, line: 1939, column: 20)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !1, line: 1934, column: 20)
!6762 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 1927, column: 13)
!6763 = !DILocalVariable(name: "qword", scope: !6764, file: !1, line: 1947, type: !55)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !1, line: 1945, column: 45)
!6765 = distinct !DILexicalBlock(scope: !6760, file: !1, line: 1945, column: 20)
!6766 = !DILocalVariable(name: "db_size", scope: !6767, file: !1, line: 1969, type: !55)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !1, line: 1966, column: 49)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !1, line: 1966, column: 20)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !1, line: 1954, column: 20)
!6770 = distinct !DILexicalBlock(scope: !6765, file: !1, line: 1951, column: 20)
!6771 = !DILocalVariable(name: "expires_size", scope: !6767, file: !1, line: 1969, type: !55)
!6772 = !DILocalVariable(name: "auxkey", scope: !6773, file: !1, line: 1983, type: !1982)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !1, line: 1977, column: 44)
!6774 = distinct !DILexicalBlock(scope: !6768, file: !1, line: 1977, column: 20)
!6775 = !DILocalVariable(name: "auxval", scope: !6773, file: !1, line: 1983, type: !1982)
!6776 = !DILocalVariable(name: "moduleid", scope: !6777, file: !1, line: 2024, type: !55)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !1, line: 2020, column: 51)
!6778 = distinct !DILexicalBlock(scope: !6774, file: !1, line: 2020, column: 20)
!6779 = !DILocalVariable(name: "when_opcode", scope: !6777, file: !1, line: 2025, type: !20)
!6780 = !DILocalVariable(name: "when", scope: !6777, file: !1, line: 2026, type: !20)
!6781 = !DILocalVariable(name: "mt", scope: !6777, file: !1, line: 2029, type: !3361)
!6782 = !DILocalVariable(name: "name", scope: !6777, file: !1, line: 2030, type: !3421)
!6783 = !DILocalVariable(name: "io", scope: !6784, file: !1, line: 2044, type: !3355)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !1, line: 2037, column: 53)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !1, line: 2037, column: 24)
!6786 = distinct !DILexicalBlock(scope: !6777, file: !1, line: 2033, column: 17)
!6787 = !DILocalVariable(name: "eof", scope: !6784, file: !1, line: 2058, type: !55)
!6788 = !DILocalVariable(name: "aux", scope: !6789, file: !1, line: 2066, type: !1982)
!6789 = distinct !DILexicalBlock(scope: !6785, file: !1, line: 2064, column: 20)
!6790 = !DILocalVariable(name: "cksum", scope: !6791, file: !1, line: 2107, type: !55)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !1, line: 2106, column: 22)
!6792 = distinct !DILexicalBlock(scope: !6738, file: !1, line: 2106, column: 9)
!6793 = !DILocalVariable(name: "expected", scope: !6791, file: !1, line: 2107, type: !55)
!6794 = !DILocation(line: 1894, column: 21, scope: !6738)
!6795 = !DILocation(line: 1894, column: 39, scope: !6738)
!6796 = !DILocation(line: 1894, column: 48, scope: !6738)
!6797 = !DILocation(line: 1897, column: 26, scope: !6738)
!6798 = !DILocation(line: 1897, column: 14, scope: !6738)
!6799 = !DILocation(line: 1898, column: 5, scope: !6738)
!6800 = !DILocation(line: 1898, column: 10, scope: !6738)
!6801 = !DILocation(line: 1900, column: 10, scope: !6738)
!6802 = !DILocation(line: 1900, column: 23, scope: !6738)
!6803 = !DILocation(line: 1901, column: 40, scope: !6738)
!6804 = !DILocation(line: 1901, column: 10, scope: !6738)
!6805 = !DILocation(line: 1901, column: 31, scope: !6738)
!6806 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6807)
!6807 = distinct !DILocation(line: 1902, column: 9, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6738, file: !1, line: 1902, column: 9)
!6809 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6807)
!6810 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6807)
!6811 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6807)
!6812 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6807)
!6813 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !6807)
!6814 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !6807)
!6815 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !6807)
!6816 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6807)
!6817 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6807)
!6818 = !DILocation(line: 1902, column: 9, scope: !6738)
!6819 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !6807)
!6820 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !6807)
!6821 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6807)
!6822 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !6807)
!6823 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6807)
!6824 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6807)
!6825 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6807)
!6826 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6807)
!6827 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6807)
!6828 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6807)
!6829 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6807)
!6830 = !DILocation(line: 1903, column: 5, scope: !6738)
!6831 = !DILocation(line: 1903, column: 12, scope: !6738)
!6832 = !DILocation(line: 1904, column: 9, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6738, file: !1, line: 1904, column: 9)
!6834 = !DILocation(line: 1904, column: 31, scope: !6833)
!6835 = !DILocation(line: 1904, column: 9, scope: !6738)
!6836 = !DILocation(line: 1905, column: 9, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6833, file: !1, line: 1904, column: 37)
!6838 = !DILocation(line: 1906, column: 9, scope: !6837)
!6839 = !DILocation(line: 1906, column: 15, scope: !6837)
!6840 = !DILocation(line: 1907, column: 9, scope: !6837)
!6841 = !DILocation(line: 1909, column: 22, scope: !6738)
!6842 = !DILocation(line: 1909, column: 14, scope: !6738)
!6843 = !DILocation(line: 1896, column: 15, scope: !6738)
!6844 = !DILocation(line: 1910, column: 20, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6738, file: !1, line: 1910, column: 9)
!6846 = !DILocation(line: 1911, column: 9, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6845, file: !1, line: 1910, column: 45)
!6848 = !DILocation(line: 1912, column: 9, scope: !6847)
!6849 = !DILocation(line: 1912, column: 15, scope: !6847)
!6850 = !DILocation(line: 1913, column: 9, scope: !6847)
!6851 = !DILocation(line: 1917, column: 15, scope: !6738)
!6852 = !DILocation(line: 1917, column: 30, scope: !6738)
!6853 = !DILocation(line: 1917, column: 45, scope: !6738)
!6854 = !DILocation(line: 1917, column: 68, scope: !6738)
!6855 = !DILocation(line: 1917, column: 62, scope: !6738)
!6856 = !DILocation(line: 1918, column: 27, scope: !6738)
!6857 = !DILocation(line: 1918, column: 15, scope: !6738)
!6858 = !DILocation(line: 1920, column: 5, scope: !6738)
!6859 = !DILocation(line: 97, column: 22, scope: !595, inlinedAt: !6860)
!6860 = distinct !DILocation(line: 1924, column: 21, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 1924, column: 13)
!6862 = !DILocation(line: 98, column: 19, scope: !595, inlinedAt: !6860)
!6863 = !DILocation(line: 98, column: 5, scope: !595, inlinedAt: !6860)
!6864 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6865)
!6865 = distinct !DILocation(line: 99, column: 9, scope: !606, inlinedAt: !6860)
!6866 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6865)
!6867 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6865)
!6868 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6865)
!6869 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6865)
!6870 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6865)
!6871 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6865)
!6872 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6865)
!6873 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6865)
!6874 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !6865)
!6875 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !6865)
!6876 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !6865)
!6877 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6865)
!6878 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !6865)
!6879 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !6865)
!6880 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6865)
!6881 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !6865)
!6882 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6865)
!6883 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6865)
!6884 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6865)
!6885 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6865)
!6886 = !DILocation(line: 101, column: 1, scope: !595, inlinedAt: !6860)
!6887 = !DILocation(line: 1896, column: 9, scope: !6738)
!6888 = !DILocation(line: 1924, column: 13, scope: !6756)
!6889 = !DILocation(line: 100, column: 12, scope: !595, inlinedAt: !6860)
!6890 = !DILocation(line: 106, column: 25, scope: !630, inlinedAt: !6891)
!6891 = distinct !DILocation(line: 1931, column: 26, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6762, file: !1, line: 1927, column: 44)
!6893 = !DILocation(line: 107, column: 5, scope: !630, inlinedAt: !6891)
!6894 = !DILocation(line: 81, column: 22, scope: !217, inlinedAt: !6895)
!6895 = distinct !DILocation(line: 108, column: 5, scope: !630, inlinedAt: !6891)
!6896 = !DILocation(line: 81, column: 33, scope: !217, inlinedAt: !6895)
!6897 = !DILocation(line: 81, column: 47, scope: !217, inlinedAt: !6895)
!6898 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6899)
!6899 = distinct !DILocation(line: 82, column: 9, scope: !501, inlinedAt: !6895)
!6900 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6899)
!6901 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6899)
!6902 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6899)
!6903 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6899)
!6904 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6899)
!6905 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6899)
!6906 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6899)
!6907 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6899)
!6908 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !6899)
!6909 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !6899)
!6910 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !6899)
!6911 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6899)
!6912 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !6899)
!6913 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !6899)
!6914 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6899)
!6915 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !6899)
!6916 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6899)
!6917 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6899)
!6918 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6899)
!6919 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6899)
!6920 = !DILocation(line: 83, column: 9, scope: !530, inlinedAt: !6895)
!6921 = !DILocation(line: 88, column: 1, scope: !217, inlinedAt: !6895)
!6922 = !DILocation(line: 109, column: 20, scope: !630, inlinedAt: !6891)
!6923 = !DILocation(line: 107, column: 13, scope: !630, inlinedAt: !6891)
!6924 = !DILocation(line: 109, column: 12, scope: !630, inlinedAt: !6891)
!6925 = !DILocation(line: 110, column: 1, scope: !630, inlinedAt: !6891)
!6926 = !DILocation(line: 109, column: 5, scope: !630, inlinedAt: !6891)
!6927 = !DILocation(line: 1932, column: 24, scope: !6892)
!6928 = !DILocation(line: 1933, column: 13, scope: !6892)
!6929 = !DILocation(line: 129, column: 39, scope: !715, inlinedAt: !6930)
!6930 = distinct !DILocation(line: 1937, column: 26, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6761, file: !1, line: 1934, column: 54)
!6932 = !DILocation(line: 129, column: 48, scope: !715, inlinedAt: !6930)
!6933 = !DILocation(line: 130, column: 5, scope: !715, inlinedAt: !6930)
!6934 = !DILocation(line: 81, column: 22, scope: !217, inlinedAt: !6935)
!6935 = distinct !DILocation(line: 131, column: 5, scope: !715, inlinedAt: !6930)
!6936 = !DILocation(line: 81, column: 33, scope: !217, inlinedAt: !6935)
!6937 = !DILocation(line: 81, column: 47, scope: !217, inlinedAt: !6935)
!6938 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6939)
!6939 = distinct !DILocation(line: 82, column: 9, scope: !501, inlinedAt: !6935)
!6940 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6939)
!6941 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6939)
!6942 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6939)
!6943 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6939)
!6944 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6939)
!6945 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6939)
!6946 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6939)
!6947 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6939)
!6948 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !6939)
!6949 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !6939)
!6950 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !6939)
!6951 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6939)
!6952 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !6939)
!6953 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !6939)
!6954 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6939)
!6955 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !6939)
!6956 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6939)
!6957 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6939)
!6958 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6939)
!6959 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6939)
!6960 = !DILocation(line: 83, column: 9, scope: !530, inlinedAt: !6935)
!6961 = !DILocation(line: 88, column: 1, scope: !217, inlinedAt: !6935)
!6962 = !DILocation(line: 134, column: 23, scope: !715, inlinedAt: !6930)
!6963 = !DILocation(line: 130, column: 13, scope: !715, inlinedAt: !6930)
!6964 = !DILocation(line: 135, column: 1, scope: !715, inlinedAt: !6930)
!6965 = !DILocation(line: 134, column: 5, scope: !715, inlinedAt: !6930)
!6966 = !DILocation(line: 1938, column: 13, scope: !6931)
!6967 = !DILocation(line: 1941, column: 21, scope: !6759)
!6968 = !DILocation(line: 1941, column: 13, scope: !6759)
!6969 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6970)
!6970 = distinct !DILocation(line: 1942, column: 17, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6759, file: !1, line: 1942, column: 17)
!6972 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6970)
!6973 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6970)
!6974 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6970)
!6975 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6970)
!6976 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6970)
!6977 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6970)
!6978 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6970)
!6979 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6970)
!6980 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !6970)
!6981 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !6970)
!6982 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !6970)
!6983 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6970)
!6984 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !6970)
!6985 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !6970)
!6986 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6970)
!6987 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !6970)
!6988 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6970)
!6989 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6970)
!6990 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6970)
!6991 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6970)
!6992 = !DILocation(line: 1943, column: 24, scope: !6759)
!6993 = !DILocation(line: 1942, column: 17, scope: !6759)
!6994 = !DILocation(line: 1945, column: 9, scope: !6760)
!6995 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !6996)
!6996 = distinct !DILocation(line: 1948, column: 26, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6764, file: !1, line: 1948, column: 17)
!6998 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !6996)
!6999 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !6996)
!7000 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !6996)
!7001 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !6996)
!7002 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !6996)
!7003 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !6996)
!7004 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !6996)
!7005 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !6996)
!7006 = !DILocation(line: 1947, column: 22, scope: !6764)
!7007 = !DILocation(line: 1948, column: 48, scope: !6997)
!7008 = !DILocation(line: 1948, column: 63, scope: !6997)
!7009 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !7010)
!7010 = distinct !DILocation(line: 1956, column: 25, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !1, line: 1956, column: 17)
!7012 = distinct !DILexicalBlock(scope: !6769, file: !1, line: 1954, column: 49)
!7013 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !7010)
!7014 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !7010)
!7015 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !7010)
!7016 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !7010)
!7017 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !7010)
!7018 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !7010)
!7019 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !7010)
!7020 = !DILocation(line: 1956, column: 47, scope: !7011)
!7021 = !DILocation(line: 1956, column: 17, scope: !7012)
!7022 = !DILocation(line: 1957, column: 42, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7012, file: !1, line: 1957, column: 17)
!7024 = !DILocation(line: 1957, column: 25, scope: !7023)
!7025 = !DILocation(line: 1957, column: 22, scope: !7023)
!7026 = !DILocation(line: 1957, column: 17, scope: !7012)
!7027 = !DILocation(line: 1958, column: 17, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7023, file: !1, line: 1957, column: 49)
!7029 = !DILocation(line: 1962, column: 17, scope: !7028)
!7030 = !DILocation(line: 1964, column: 25, scope: !7012)
!7031 = !DILocation(line: 1964, column: 27, scope: !7012)
!7032 = !DILocation(line: 1965, column: 13, scope: !7012)
!7033 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !7034)
!7034 = distinct !DILocation(line: 1970, column: 28, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !6767, file: !1, line: 1970, column: 17)
!7036 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !7034)
!7037 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !7034)
!7038 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !7034)
!7039 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !7034)
!7040 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !7034)
!7041 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !7034)
!7042 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !7034)
!7043 = !DILocation(line: 1970, column: 50, scope: !7035)
!7044 = !DILocation(line: 1970, column: 17, scope: !6767)
!7045 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !7046)
!7046 = distinct !DILocation(line: 1972, column: 33, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !6767, file: !1, line: 1972, column: 17)
!7048 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !7046)
!7049 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !7046)
!7050 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !7046)
!7051 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !7046)
!7052 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !7046)
!7053 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !7046)
!7054 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !7046)
!7055 = !DILocation(line: 1972, column: 55, scope: !7047)
!7056 = !DILocation(line: 1972, column: 17, scope: !6767)
!7057 = !DILocation(line: 1974, column: 28, scope: !6767)
!7058 = !DILocation(line: 1974, column: 13, scope: !6767)
!7059 = !DILocation(line: 1975, column: 28, scope: !6767)
!7060 = !DILocation(line: 1975, column: 13, scope: !6767)
!7061 = !DILocation(line: 1976, column: 13, scope: !6767)
!7062 = !DILocation(line: 525, column: 32, scope: !2175, inlinedAt: !7063)
!7063 = distinct !DILocation(line: 1984, column: 27, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !6773, file: !1, line: 1984, column: 17)
!7065 = !DILocation(line: 526, column: 12, scope: !2175, inlinedAt: !7063)
!7066 = !DILocation(line: 526, column: 5, scope: !2175, inlinedAt: !7063)
!7067 = !DILocation(line: 1983, column: 19, scope: !6773)
!7068 = !DILocation(line: 1984, column: 53, scope: !7064)
!7069 = !DILocation(line: 1984, column: 17, scope: !6773)
!7070 = !DILocation(line: 525, column: 32, scope: !2175, inlinedAt: !7071)
!7071 = distinct !DILocation(line: 1985, column: 27, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !6773, file: !1, line: 1985, column: 17)
!7073 = !DILocation(line: 526, column: 12, scope: !2175, inlinedAt: !7071)
!7074 = !DILocation(line: 526, column: 5, scope: !2175, inlinedAt: !7071)
!7075 = !DILocation(line: 1983, column: 28, scope: !6773)
!7076 = !DILocation(line: 1985, column: 53, scope: !7072)
!7077 = !DILocation(line: 1985, column: 17, scope: !6773)
!7078 = !DILocation(line: 1987, column: 33, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !6773, file: !1, line: 1987, column: 17)
!7080 = !DILocation(line: 1987, column: 17, scope: !7079)
!7081 = !DILocation(line: 1987, column: 41, scope: !7079)
!7082 = !DILocation(line: 1987, column: 17, scope: !6773)
!7083 = !DILocation(line: 1993, column: 36, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7079, file: !1, line: 1987, column: 49)
!7085 = !DILocation(line: 1991, column: 17, scope: !7084)
!7086 = !DILocation(line: 1994, column: 13, scope: !7084)
!7087 = !DILocation(line: 1994, column: 25, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7079, file: !1, line: 1994, column: 24)
!7089 = !DILocation(line: 1994, column: 24, scope: !7079)
!7090 = !DILocation(line: 1995, column: 21, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7088, file: !1, line: 1994, column: 67)
!7092 = !DILocation(line: 1995, column: 61, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7091, file: !1, line: 1995, column: 21)
!7094 = !DILocation(line: 1995, column: 48, scope: !7093)
!7095 = !DILocation(line: 1995, column: 46, scope: !7093)
!7096 = !DILocation(line: 1995, column: 26, scope: !7093)
!7097 = !DILocation(line: 1996, column: 25, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7088, file: !1, line: 1996, column: 24)
!7099 = !DILocation(line: 1996, column: 24, scope: !7088)
!7100 = !DILocation(line: 1997, column: 25, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !1, line: 1997, column: 21)
!7102 = distinct !DILexicalBlock(scope: !7098, file: !1, line: 1996, column: 60)
!7103 = !DILocation(line: 1997, column: 43, scope: !7101)
!7104 = !DILocation(line: 87, column: 39, scope: !2010, inlinedAt: !7105)
!7105 = distinct !DILocation(line: 1997, column: 28, scope: !7101)
!7106 = !DILocation(line: 88, column: 27, scope: !2010, inlinedAt: !7105)
!7107 = !DILocation(line: 88, column: 19, scope: !2010, inlinedAt: !7105)
!7108 = !DILocation(line: 89, column: 5, scope: !2010, inlinedAt: !7105)
!7109 = !DILocation(line: 93, column: 20, scope: !2022, inlinedAt: !7105)
!7110 = !DILocation(line: 93, column: 34, scope: !2022, inlinedAt: !7105)
!7111 = !DILocation(line: 93, column: 13, scope: !2022, inlinedAt: !7105)
!7112 = !DILocation(line: 95, column: 20, scope: !2022, inlinedAt: !7105)
!7113 = !DILocation(line: 95, column: 35, scope: !2022, inlinedAt: !7105)
!7114 = !DILocation(line: 95, column: 13, scope: !2022, inlinedAt: !7105)
!7115 = !DILocation(line: 97, column: 20, scope: !2022, inlinedAt: !7105)
!7116 = !DILocation(line: 97, column: 35, scope: !2022, inlinedAt: !7105)
!7117 = !DILocation(line: 97, column: 13, scope: !2022, inlinedAt: !7105)
!7118 = !DILocation(line: 99, column: 20, scope: !2022, inlinedAt: !7105)
!7119 = !DILocation(line: 99, column: 35, scope: !2022, inlinedAt: !7105)
!7120 = !DILocation(line: 99, column: 13, scope: !2022, inlinedAt: !7105)
!7121 = !DILocation(line: 102, column: 1, scope: !2010, inlinedAt: !7105)
!7122 = !DILocation(line: 1997, column: 21, scope: !7102)
!7123 = !DILocation(line: 0, scope: !2022, inlinedAt: !7105)
!7124 = !DILocation(line: 1997, column: 48, scope: !7101)
!7125 = !DILocation(line: 1998, column: 21, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7101, file: !1, line: 1997, column: 71)
!7127 = !DILocation(line: 1999, column: 41, scope: !7126)
!7128 = !{!4399, !192, i64 4}
!7129 = !DILocation(line: 2000, column: 17, scope: !7126)
!7130 = !DILocation(line: 2001, column: 25, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7098, file: !1, line: 2001, column: 24)
!7132 = !DILocation(line: 2001, column: 24, scope: !7098)
!7133 = !DILocation(line: 2002, column: 21, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7131, file: !1, line: 2001, column: 64)
!7135 = !DILocation(line: 2002, column: 61, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7134, file: !1, line: 2002, column: 21)
!7137 = !DILocation(line: 2002, column: 45, scope: !7136)
!7138 = !DILocation(line: 2002, column: 43, scope: !7136)
!7139 = !{!4399, !206, i64 56}
!7140 = !DILocation(line: 2002, column: 26, scope: !7136)
!7141 = !DILocation(line: 2003, column: 25, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7131, file: !1, line: 2003, column: 24)
!7143 = !DILocation(line: 2003, column: 24, scope: !7131)
!7144 = !DILocation(line: 2005, column: 51, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !1, line: 2005, column: 21)
!7146 = distinct !DILexicalBlock(scope: !7142, file: !1, line: 2003, column: 56)
!7147 = !{!204, !201, i64 2992}
!7148 = !DILocation(line: 2005, column: 21, scope: !7145)
!7149 = !DILocation(line: 2005, column: 63, scope: !7145)
!7150 = !DILocation(line: 2005, column: 21, scope: !7146)
!7151 = !DILocation(line: 2006, column: 21, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7145, file: !1, line: 2005, column: 72)
!7153 = !DILocation(line: 2013, column: 17, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7142, file: !1, line: 2010, column: 20)
!7155 = !DILocation(line: 2017, column: 13, scope: !6773)
!7156 = !DILocation(line: 2018, column: 13, scope: !6773)
!7157 = !DILocation(line: 2019, column: 13, scope: !6773)
!7158 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !7159)
!7159 = distinct !DILocation(line: 2024, column: 33, scope: !6777)
!7160 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !7159)
!7161 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !7159)
!7162 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !7159)
!7163 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !7159)
!7164 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !7159)
!7165 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !7159)
!7166 = !DILocation(line: 226, column: 9, scope: !1156, inlinedAt: !7159)
!7167 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !7159)
!7168 = !DILocation(line: 2024, column: 22, scope: !6777)
!7169 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !7170)
!7170 = distinct !DILocation(line: 2025, column: 31, scope: !6777)
!7171 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !7170)
!7172 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !7170)
!7173 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !7170)
!7174 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !7170)
!7175 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !7170)
!7176 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !7170)
!7177 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !7170)
!7178 = !DILocation(line: 2025, column: 31, scope: !6777)
!7179 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !7180)
!7180 = distinct !DILocation(line: 2026, column: 24, scope: !6777)
!7181 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !7180)
!7182 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !7180)
!7183 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !7180)
!7184 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !7180)
!7185 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !7180)
!7186 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !7180)
!7187 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !7180)
!7188 = !DILocation(line: 2026, column: 24, scope: !6777)
!7189 = !DILocation(line: 2026, column: 17, scope: !6777)
!7190 = !DILocation(line: 2027, column: 29, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !6777, file: !1, line: 2027, column: 17)
!7192 = !DILocation(line: 2027, column: 17, scope: !6777)
!7193 = !DILocation(line: 2028, column: 17, scope: !7191)
!7194 = !DILocation(line: 2029, column: 30, scope: !6777)
!7195 = !DILocation(line: 2029, column: 25, scope: !6777)
!7196 = !DILocation(line: 2030, column: 13, scope: !6777)
!7197 = !DILocation(line: 2030, column: 18, scope: !6777)
!7198 = !DILocation(line: 2031, column: 13, scope: !6777)
!7199 = !DILocation(line: 2033, column: 18, scope: !6786)
!7200 = !DILocation(line: 2033, column: 37, scope: !6786)
!7201 = !DILocation(line: 2033, column: 31, scope: !6786)
!7202 = !DILocation(line: 2035, column: 17, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !6786, file: !1, line: 2033, column: 46)
!7204 = !DILocation(line: 2036, column: 17, scope: !7203)
!7205 = !DILocation(line: 2037, column: 44, scope: !6785)
!7206 = !DILocation(line: 2037, column: 38, scope: !6785)
!7207 = !DILocation(line: 2038, column: 26, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 2038, column: 21)
!7209 = !{!3867, !201, i64 64}
!7210 = !DILocation(line: 2038, column: 22, scope: !7208)
!7211 = !DILocation(line: 2038, column: 21, scope: !6784)
!7212 = !DILocation(line: 2040, column: 21, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7208, file: !1, line: 2038, column: 36)
!7214 = !DILocation(line: 2041, column: 21, scope: !7213)
!7215 = !DILocation(line: 2044, column: 17, scope: !6784)
!7216 = !DILocation(line: 2045, column: 17, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 2045, column: 17)
!7218 = !DILocation(line: 2046, column: 24, scope: !6784)
!7219 = !DILocation(line: 2049, column: 38, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 2049, column: 21)
!7221 = !DILocation(line: 2044, column: 31, scope: !6784)
!7222 = !DILocation(line: 2049, column: 21, scope: !7220)
!7223 = !DILocation(line: 2049, column: 65, scope: !7220)
!7224 = !DILocation(line: 2049, column: 59, scope: !7220)
!7225 = !DILocation(line: 2050, column: 21, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7220, file: !1, line: 2049, column: 72)
!7227 = !DILocation(line: 2051, column: 21, scope: !7226)
!7228 = !DILocation(line: 2052, column: 21, scope: !7226)
!7229 = !DILocation(line: 2054, column: 24, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 2054, column: 21)
!7231 = !DILocation(line: 2054, column: 21, scope: !7230)
!7232 = !DILocation(line: 2054, column: 21, scope: !6784)
!7233 = !DILocation(line: 2055, column: 21, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7230, file: !1, line: 2054, column: 29)
!7235 = !DILocation(line: 2056, column: 30, scope: !7234)
!7236 = !DILocation(line: 2056, column: 21, scope: !7234)
!7237 = !DILocation(line: 2057, column: 17, scope: !7234)
!7238 = !DILocation(line: 223, column: 26, scope: !1156, inlinedAt: !7239)
!7239 = distinct !DILocation(line: 2058, column: 32, scope: !6784)
!7240 = !DILocation(line: 223, column: 36, scope: !1156, inlinedAt: !7239)
!7241 = !DILocation(line: 224, column: 5, scope: !1156, inlinedAt: !7239)
!7242 = !DILocation(line: 224, column: 14, scope: !1156, inlinedAt: !7239)
!7243 = !DILocation(line: 226, column: 9, scope: !1168, inlinedAt: !7239)
!7244 = !DILocation(line: 226, column: 45, scope: !1168, inlinedAt: !7239)
!7245 = !DILocation(line: 227, column: 12, scope: !1156, inlinedAt: !7239)
!7246 = !DILocation(line: 228, column: 1, scope: !1156, inlinedAt: !7239)
!7247 = !DILocation(line: 2059, column: 25, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 2059, column: 21)
!7249 = !DILocation(line: 2059, column: 21, scope: !6784)
!7250 = !DILocation(line: 2060, column: 21, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7248, file: !1, line: 2059, column: 51)
!7252 = !DILocation(line: 2061, column: 21, scope: !7251)
!7253 = !DILocation(line: 2064, column: 13, scope: !6785)
!7254 = !DILocation(line: 2066, column: 29, scope: !6789)
!7255 = !DILocation(line: 2066, column: 23, scope: !6789)
!7256 = !DILocation(line: 2067, column: 17, scope: !6789)
!7257 = !DILocation(line: 2070, column: 9, scope: !6778)
!7258 = !DILocation(line: 525, column: 32, scope: !2175, inlinedAt: !7259)
!7259 = distinct !DILocation(line: 2073, column: 20, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 2073, column: 13)
!7261 = !DILocation(line: 526, column: 12, scope: !2175, inlinedAt: !7259)
!7262 = !DILocation(line: 526, column: 5, scope: !2175, inlinedAt: !7259)
!7263 = !DILocation(line: 1921, column: 15, scope: !6756)
!7264 = !DILocation(line: 2073, column: 46, scope: !7260)
!7265 = !DILocation(line: 2073, column: 13, scope: !6756)
!7266 = !DILocation(line: 2075, column: 20, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 2075, column: 13)
!7268 = !DILocation(line: 1921, column: 21, scope: !6756)
!7269 = !DILocation(line: 2075, column: 49, scope: !7267)
!7270 = !DILocation(line: 2075, column: 13, scope: !6756)
!7271 = !DILocation(line: 2081, column: 20, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 2081, column: 13)
!7273 = !DILocation(line: 2081, column: 31, scope: !7272)
!7274 = !DILocation(line: 2081, column: 39, scope: !7272)
!7275 = !DILocation(line: 2081, column: 69, scope: !7272)
!7276 = !DILocation(line: 2081, column: 89, scope: !7272)
!7277 = !DILocation(line: 2082, column: 13, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7272, file: !1, line: 2081, column: 96)
!7279 = !DILocation(line: 2083, column: 13, scope: !7278)
!7280 = !DILocation(line: 2084, column: 9, scope: !7278)
!7281 = distinct !{!7281, !6858, !7282}
!7282 = !DILocation(line: 2104, column: 5, scope: !6738)
!7283 = !DILocation(line: 2086, column: 13, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7272, file: !1, line: 2084, column: 16)
!7285 = !DILocation(line: 2089, column: 17, scope: !7284)
!7286 = !DILocation(line: 2089, column: 35, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7284, file: !1, line: 2089, column: 17)
!7288 = !DILocation(line: 2092, column: 13, scope: !7284)
!7289 = !DILocation(line: 2096, column: 13, scope: !7284)
!7290 = !DILocation(line: 0, scope: !6756)
!7291 = !DILocation(line: 2106, column: 16, scope: !6792)
!7292 = !DILocation(line: 2106, column: 9, scope: !6738)
!7293 = !DILocation(line: 2107, column: 9, scope: !6791)
!7294 = !DILocation(line: 2107, column: 41, scope: !6791)
!7295 = !DILocation(line: 2107, column: 25, scope: !6791)
!7296 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !7297)
!7297 = distinct !DILocation(line: 2109, column: 13, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !6791, file: !1, line: 2109, column: 13)
!7299 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !7297)
!7300 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !7297)
!7301 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !7297)
!7302 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !7297)
!7303 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !7297)
!7304 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !7297)
!7305 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !7297)
!7306 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !7297)
!7307 = !DILocation(line: 109, column: 16, scope: !513, inlinedAt: !7297)
!7308 = !DILocation(line: 109, column: 13, scope: !513, inlinedAt: !7297)
!7309 = !DILocation(line: 109, column: 42, scope: !513, inlinedAt: !7297)
!7310 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !7297)
!7311 = !DILocation(line: 111, column: 16, scope: !519, inlinedAt: !7297)
!7312 = !DILocation(line: 111, column: 13, scope: !519, inlinedAt: !7297)
!7313 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !7297)
!7314 = !DILocation(line: 111, column: 30, scope: !519, inlinedAt: !7297)
!7315 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !7297)
!7316 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !7297)
!7317 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !7297)
!7318 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !7297)
!7319 = !DILocation(line: 2110, column: 20, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !6791, file: !1, line: 2110, column: 13)
!7321 = !DILocation(line: 2110, column: 13, scope: !7320)
!7322 = !DILocation(line: 2110, column: 13, scope: !6791)
!7323 = !DILocation(line: 2112, column: 17, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7325, file: !1, line: 2112, column: 17)
!7325 = distinct !DILexicalBlock(scope: !7320, file: !1, line: 2110, column: 34)
!7326 = !DILocation(line: 2107, column: 18, scope: !6791)
!7327 = !DILocation(line: 2112, column: 23, scope: !7324)
!7328 = !DILocation(line: 2112, column: 17, scope: !7325)
!7329 = !DILocation(line: 2113, column: 17, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7324, file: !1, line: 2112, column: 29)
!7331 = !DILocation(line: 2114, column: 13, scope: !7330)
!7332 = !DILocation(line: 2114, column: 30, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7324, file: !1, line: 2114, column: 24)
!7334 = !DILocation(line: 2114, column: 24, scope: !7324)
!7335 = !DILocation(line: 2115, column: 17, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7333, file: !1, line: 2114, column: 43)
!7337 = !DILocation(line: 2116, column: 17, scope: !7336)
!7338 = !DILocation(line: 2119, column: 5, scope: !6792)
!7339 = !DILocation(line: 2123, column: 5, scope: !6738)
!7340 = !DILocation(line: 2124, column: 5, scope: !6738)
!7341 = !DILocation(line: 2126, column: 1, scope: !6738)
!7342 = distinct !DISubprogram(name: "rdbLoad", scope: !1, file: !1, line: 2135, type: !5123, isLocal: false, isDefinition: true, scopeLine: 2135, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7343)
!7343 = !{!7344, !7345, !7346, !7347, !7348}
!7344 = !DILocalVariable(name: "filename", arg: 1, scope: !7342, file: !1, line: 2135, type: !21)
!7345 = !DILocalVariable(name: "rsi", arg: 2, scope: !7342, file: !1, line: 2135, type: !4300)
!7346 = !DILocalVariable(name: "fp", scope: !7342, file: !1, line: 2136, type: !267)
!7347 = !DILocalVariable(name: "rdb", scope: !7342, file: !1, line: 2137, type: !221)
!7348 = !DILocalVariable(name: "retval", scope: !7342, file: !1, line: 2138, type: !20)
!7349 = !DILocation(line: 2135, column: 19, scope: !7342)
!7350 = !DILocation(line: 2135, column: 42, scope: !7342)
!7351 = !DILocation(line: 2137, column: 5, scope: !7342)
!7352 = !DILocation(line: 2140, column: 15, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7342, file: !1, line: 2140, column: 9)
!7354 = !DILocation(line: 2136, column: 11, scope: !7342)
!7355 = !DILocation(line: 2140, column: 36, scope: !7353)
!7356 = !DILocation(line: 2140, column: 9, scope: !7342)
!7357 = !DILocation(line: 1847, column: 25, scope: !6604, inlinedAt: !7358)
!7358 = distinct !DILocation(line: 2141, column: 5, scope: !7342)
!7359 = !DILocation(line: 1848, column: 5, scope: !6604, inlinedAt: !7358)
!7360 = !DILocation(line: 1851, column: 20, scope: !6604, inlinedAt: !7358)
!7361 = !DILocation(line: 1852, column: 33, scope: !6604, inlinedAt: !7358)
!7362 = !DILocation(line: 1852, column: 31, scope: !6604, inlinedAt: !7358)
!7363 = !DILocation(line: 1853, column: 33, scope: !6604, inlinedAt: !7358)
!7364 = !DILocation(line: 1854, column: 15, scope: !6656, inlinedAt: !7358)
!7365 = !DILocation(line: 1848, column: 17, scope: !6604, inlinedAt: !7358)
!7366 = !DILocation(line: 1854, column: 9, scope: !6656, inlinedAt: !7358)
!7367 = !DILocation(line: 1854, column: 32, scope: !6656, inlinedAt: !7358)
!7368 = !DILocation(line: 1857, column: 41, scope: !6661, inlinedAt: !7358)
!7369 = !DILocation(line: 1854, column: 9, scope: !6604, inlinedAt: !7358)
!7370 = !DILocation(line: 0, scope: !6664, inlinedAt: !7358)
!7371 = !DILocation(line: 1859, column: 1, scope: !6604, inlinedAt: !7358)
!7372 = !DILocation(line: 2137, column: 9, scope: !7342)
!7373 = !DILocation(line: 2142, column: 5, scope: !7342)
!7374 = !DILocation(line: 2143, column: 14, scope: !7342)
!7375 = !DILocation(line: 2138, column: 9, scope: !7342)
!7376 = !DILocation(line: 2144, column: 5, scope: !7342)
!7377 = !DILocation(line: 1870, column: 20, scope: !6684, inlinedAt: !7378)
!7378 = distinct !DILocation(line: 2145, column: 5, scope: !7342)
!7379 = !DILocation(line: 1871, column: 1, scope: !6684, inlinedAt: !7378)
!7380 = !DILocation(line: 2146, column: 5, scope: !7342)
!7381 = !DILocation(line: 0, scope: !7342)
!7382 = !DILocation(line: 2147, column: 1, scope: !7342)
!7383 = distinct !DISubprogram(name: "backgroundSaveDoneHandlerDisk", scope: !1, file: !1, line: 2151, type: !7384, isLocal: false, isDefinition: true, scopeLine: 2151, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7386)
!7384 = !DISubroutineType(types: !7385)
!7385 = !{null, !20, !20}
!7386 = !{!7387, !7388, !7389}
!7387 = !DILocalVariable(name: "exitcode", arg: 1, scope: !7383, file: !1, line: 2151, type: !20)
!7388 = !DILocalVariable(name: "bysignal", arg: 2, scope: !7383, file: !1, line: 2151, type: !20)
!7389 = !DILocalVariable(name: "latency", scope: !7390, file: !1, line: 2162, type: !2981)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !1, line: 2161, column: 12)
!7391 = distinct !DILexicalBlock(scope: !7392, file: !1, line: 2158, column: 16)
!7392 = distinct !DILexicalBlock(scope: !7383, file: !1, line: 2152, column: 9)
!7393 = !DILocation(line: 1380, column: 10, scope: !5313, inlinedAt: !7394)
!7394 = distinct !DILocation(line: 2167, column: 9, scope: !7390)
!7395 = !DILocation(line: 2151, column: 40, scope: !7383)
!7396 = !DILocation(line: 2151, column: 54, scope: !7383)
!7397 = !DILocation(line: 2152, column: 19, scope: !7392)
!7398 = !DILocation(line: 2153, column: 9, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7392, file: !1, line: 2152, column: 37)
!7400 = !DILocation(line: 2155, column: 31, scope: !7399)
!7401 = !DILocation(line: 2155, column: 46, scope: !7399)
!7402 = !DILocation(line: 2155, column: 37, scope: !7399)
!7403 = !DILocation(line: 2155, column: 22, scope: !7399)
!7404 = !DILocation(line: 2156, column: 27, scope: !7399)
!7405 = !DILocation(line: 2156, column: 25, scope: !7399)
!7406 = !DILocation(line: 2158, column: 5, scope: !7399)
!7407 = !DILocation(line: 2152, column: 10, scope: !7392)
!7408 = !DILocation(line: 2158, column: 38, scope: !7391)
!7409 = !DILocation(line: 2158, column: 26, scope: !7391)
!7410 = !DILocation(line: 2159, column: 9, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7391, file: !1, line: 2158, column: 44)
!7412 = !DILocation(line: 2161, column: 5, scope: !7411)
!7413 = !DILocation(line: 2164, column: 9, scope: !7390)
!7414 = !DILocation(line: 2166, column: 9, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7390, file: !1, line: 2166, column: 9)
!7416 = !DILocation(line: 2166, column: 9, scope: !7390)
!7417 = !DILocation(line: 2166, column: 9, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7415, file: !1, line: 2166, column: 9)
!7419 = !DILocation(line: 2162, column: 18, scope: !7390)
!7420 = !DILocation(line: 2167, column: 34, scope: !7390)
!7421 = !DILocation(line: 1379, column: 30, scope: !5313, inlinedAt: !7394)
!7422 = !DILocation(line: 1380, column: 5, scope: !5313, inlinedAt: !7394)
!7423 = !DILocation(line: 1382, column: 5, scope: !5313, inlinedAt: !7394)
!7424 = !DILocation(line: 1383, column: 5, scope: !5313, inlinedAt: !7394)
!7425 = !DILocation(line: 1384, column: 1, scope: !5313, inlinedAt: !7394)
!7426 = !DILocation(line: 2168, column: 9, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7390, file: !1, line: 2168, column: 9)
!7428 = !DILocation(line: 2168, column: 9, scope: !7390)
!7429 = !DILocation(line: 2168, column: 9, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7427, file: !1, line: 2168, column: 9)
!7431 = !DILocation(line: 2169, column: 9, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7390, file: !1, line: 2169, column: 9)
!7433 = !DILocation(line: 2172, column: 22, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7390, file: !1, line: 2172, column: 13)
!7435 = !DILocation(line: 2172, column: 13, scope: !7390)
!7436 = !DILocation(line: 0, scope: !7399)
!7437 = !DILocation(line: 2175, column: 26, scope: !7383)
!7438 = !DILocation(line: 2176, column: 27, scope: !7383)
!7439 = !DILocation(line: 2177, column: 33, scope: !7383)
!7440 = !DILocation(line: 2177, column: 51, scope: !7383)
!7441 = !DILocation(line: 2177, column: 43, scope: !7383)
!7442 = !DILocation(line: 2177, column: 31, scope: !7383)
!7443 = !{!204, !205, i64 2152}
!7444 = !DILocation(line: 2178, column: 32, scope: !7383)
!7445 = !DILocation(line: 2181, column: 42, scope: !7383)
!7446 = !DILocation(line: 2181, column: 31, scope: !7383)
!7447 = !DILocation(line: 2181, column: 5, scope: !7383)
!7448 = !DILocation(line: 2182, column: 1, scope: !7383)
!7449 = distinct !DISubprogram(name: "backgroundSaveDoneHandlerSocket", scope: !1, file: !1, line: 2187, type: !7384, isLocal: false, isDefinition: true, scopeLine: 2187, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7450)
!7450 = !{!7451, !7452, !7453, !7454, !7457, !7458, !7464, !7578, !7581}
!7451 = !DILocalVariable(name: "exitcode", arg: 1, scope: !7449, file: !1, line: 2187, type: !20)
!7452 = !DILocalVariable(name: "bysignal", arg: 2, scope: !7449, file: !1, line: 2187, type: !20)
!7453 = !DILocalVariable(name: "ok_slaves", scope: !7449, file: !1, line: 2188, type: !994)
!7454 = !DILocalVariable(name: "readlen", scope: !7455, file: !1, line: 2213, type: !20)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !1, line: 2212, column: 37)
!7456 = distinct !DILexicalBlock(scope: !7449, file: !1, line: 2212, column: 9)
!7457 = !DILocalVariable(name: "ln", scope: !7449, file: !1, line: 2237, type: !4652)
!7458 = !DILocalVariable(name: "li", scope: !7449, file: !1, line: 2238, type: !7459)
!7459 = !DIDerivedType(tag: DW_TAG_typedef, name: "listIter", file: !4648, line: 45, baseType: !7460)
!7460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listIter", file: !4648, line: 42, size: 128, elements: !7461)
!7461 = !{!7462, !7463}
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7460, file: !4648, line: 43, baseType: !4652, size: 64)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !7460, file: !4648, line: 44, baseType: !20, size: 32, offset: 64)
!7464 = !DILocalVariable(name: "slave", scope: !7465, file: !1, line: 2242, type: !7466)
!7465 = distinct !DILexicalBlock(scope: !7449, file: !1, line: 2241, column: 33)
!7466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7467, size: 64)
!7467 = !DIDerivedType(tag: DW_TAG_typedef, name: "client", file: !1984, line: 780, baseType: !7468)
!7468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "client", file: !1984, line: 723, size: 135360, elements: !7469)
!7469 = !{!7470, !7471, !7472, !7473, !7474, !7475, !7476, !7477, !7478, !7479, !7481, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521, !7522, !7523, !7524, !7525, !7526, !7527, !7528, !7529, !7533, !7534, !7550, !7551, !7567, !7568, !7569, !7570, !7571, !7572, !7573, !7574}
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7468, file: !1984, line: 724, baseType: !55, size: 64)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !7468, file: !1984, line: 725, baseType: !20, size: 32, offset: 64)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !7468, file: !1984, line: 726, baseType: !4634, size: 64, offset: 128)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7468, file: !1984, line: 727, baseType: !1982, size: 64, offset: 192)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf", scope: !7468, file: !1984, line: 728, baseType: !261, size: 64, offset: 256)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "qb_pos", scope: !7468, file: !1984, line: 729, baseType: !545, size: 64, offset: 320)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "pending_querybuf", scope: !7468, file: !1984, line: 730, baseType: !261, size: 64, offset: 384)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf_peak", scope: !7468, file: !1984, line: 734, baseType: !545, size: 64, offset: 448)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !7468, file: !1984, line: 735, baseType: !20, size: 32, offset: 512)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !7468, file: !1984, line: 736, baseType: !7480, size: 64, offset: 576)
!7480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7468, file: !1984, line: 737, baseType: !7482, size: 64, offset: 640)
!7482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7483, size: 64)
!7483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisCommand", file: !1984, line: 1307, size: 640, elements: !7484)
!7484 = !{!7485, !7486, !7491, !7492, !7493, !7494, !7499, !7500, !7501, !7502, !7503}
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7483, file: !1984, line: 1308, baseType: !21, size: 64)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !7483, file: !1984, line: 1309, baseType: !7487, size: 64, offset: 64)
!7487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7488, size: 64)
!7488 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisCommandProc", file: !1984, line: 1305, baseType: !7489)
!7489 = !DISubroutineType(types: !7490)
!7490 = !{null, !7466}
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !7483, file: !1984, line: 1310, baseType: !20, size: 32, offset: 128)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "sflags", scope: !7483, file: !1984, line: 1311, baseType: !21, size: 64, offset: 192)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7483, file: !1984, line: 1312, baseType: !20, size: 32, offset: 256)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "getkeys_proc", scope: !7483, file: !1984, line: 1315, baseType: !7495, size: 64, offset: 320)
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 64)
!7496 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisGetKeysProc", file: !1984, line: 1306, baseType: !7497)
!7497 = !DISubroutineType(types: !7498)
!7498 = !{!478, !7482, !7480, !20, !478}
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "firstkey", scope: !7483, file: !1984, line: 1317, baseType: !20, size: 32, offset: 384)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "lastkey", scope: !7483, file: !1984, line: 1318, baseType: !20, size: 32, offset: 416)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "keystep", scope: !7483, file: !1984, line: 1319, baseType: !20, size: 32, offset: 448)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "microseconds", scope: !7483, file: !1984, line: 1320, baseType: !12, size: 64, offset: 512)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "calls", scope: !7483, file: !1984, line: 1320, baseType: !12, size: 64, offset: 576)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "lastcmd", scope: !7468, file: !1984, line: 737, baseType: !7482, size: 64, offset: 704)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !7468, file: !1984, line: 738, baseType: !20, size: 32, offset: 768)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "multibulklen", scope: !7468, file: !1984, line: 739, baseType: !20, size: 32, offset: 800)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "bulklen", scope: !7468, file: !1984, line: 740, baseType: !7, size: 64, offset: 832)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !7468, file: !1984, line: 741, baseType: !4646, size: 64, offset: 896)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "reply_bytes", scope: !7468, file: !1984, line: 742, baseType: !4, size: 64, offset: 960)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "sentlen", scope: !7468, file: !1984, line: 743, baseType: !545, size: 64, offset: 1024)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !7468, file: !1984, line: 745, baseType: !5, size: 64, offset: 1088)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "lastinteraction", scope: !7468, file: !1984, line: 746, baseType: !5, size: 64, offset: 1152)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "obuf_soft_limit_reached_time", scope: !7468, file: !1984, line: 747, baseType: !5, size: 64, offset: 1216)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7468, file: !1984, line: 748, baseType: !20, size: 32, offset: 1280)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !7468, file: !1984, line: 749, baseType: !20, size: 32, offset: 1312)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "replstate", scope: !7468, file: !1984, line: 750, baseType: !20, size: 32, offset: 1344)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "repl_put_online_on_ack", scope: !7468, file: !1984, line: 751, baseType: !20, size: 32, offset: 1376)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "repldbfd", scope: !7468, file: !1984, line: 752, baseType: !20, size: 32, offset: 1408)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "repldboff", scope: !7468, file: !1984, line: 753, baseType: !240, size: 64, offset: 1472)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "repldbsize", scope: !7468, file: !1984, line: 754, baseType: !240, size: 64, offset: 1536)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "replpreamble", scope: !7468, file: !1984, line: 755, baseType: !261, size: 64, offset: 1600)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "read_reploff", scope: !7468, file: !1984, line: 756, baseType: !12, size: 64, offset: 1664)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "reploff", scope: !7468, file: !1984, line: 757, baseType: !12, size: 64, offset: 1728)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_off", scope: !7468, file: !1984, line: 758, baseType: !12, size: 64, offset: 1792)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_time", scope: !7468, file: !1984, line: 759, baseType: !12, size: 64, offset: 1856)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "psync_initial_offset", scope: !7468, file: !1984, line: 760, baseType: !12, size: 64, offset: 1920)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "replid", scope: !7468, file: !1984, line: 763, baseType: !4307, size: 328, offset: 1984)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "slave_listening_port", scope: !7468, file: !1984, line: 764, baseType: !20, size: 32, offset: 2336)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "slave_ip", scope: !7468, file: !1984, line: 765, baseType: !7530, size: 368, offset: 2368)
!7530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 368, elements: !7531)
!7531 = !{!7532}
!7532 = !DISubrange(count: 46)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "slave_capa", scope: !7468, file: !1984, line: 766, baseType: !20, size: 32, offset: 2752)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !7468, file: !1984, line: 767, baseType: !7535, size: 256, offset: 2816)
!7535 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiState", file: !1984, line: 673, baseType: !7536)
!7536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiState", file: !1984, line: 665, size: 256, elements: !7537)
!7537 = !{!7538, !7546, !7547, !7548, !7549}
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !7536, file: !1984, line: 666, baseType: !7539, size: 64)
!7539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7540, size: 64)
!7540 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiCmd", file: !1984, line: 663, baseType: !7541)
!7541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiCmd", file: !1984, line: 659, size: 192, elements: !7542)
!7542 = !{!7543, !7544, !7545}
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !7541, file: !1984, line: 660, baseType: !7480, size: 64)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !7541, file: !1984, line: 661, baseType: !20, size: 32, offset: 64)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7541, file: !1984, line: 662, baseType: !7482, size: 64, offset: 128)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7536, file: !1984, line: 667, baseType: !20, size: 32, offset: 64)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !7536, file: !1984, line: 668, baseType: !20, size: 32, offset: 96)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas", scope: !7536, file: !1984, line: 671, baseType: !20, size: 32, offset: 128)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas_timeout", scope: !7536, file: !1984, line: 672, baseType: !5, size: 64, offset: 192)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "btype", scope: !7468, file: !1984, line: 768, baseType: !20, size: 32, offset: 3072)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "bpop", scope: !7468, file: !1984, line: 769, baseType: !7552, size: 704, offset: 3136)
!7552 = !DIDerivedType(tag: DW_TAG_typedef, name: "blockingState", file: !1984, line: 703, baseType: !7553)
!7553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blockingState", file: !1984, line: 677, size: 704, elements: !7554)
!7554 = !{!7555, !7556, !7557, !7558, !7559, !7560, !7561, !7562, !7563, !7564, !7565, !7566}
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7553, file: !1984, line: 679, baseType: !2981, size: 64)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !7553, file: !1984, line: 683, baseType: !41, size: 64, offset: 64)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !7553, file: !1984, line: 685, baseType: !1982, size: 64, offset: 128)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "xread_count", scope: !7553, file: !1984, line: 689, baseType: !545, size: 64, offset: 192)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group", scope: !7553, file: !1984, line: 690, baseType: !1982, size: 64, offset: 256)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "xread_consumer", scope: !7553, file: !1984, line: 691, baseType: !1982, size: 64, offset: 320)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_time", scope: !7553, file: !1984, line: 692, baseType: !2981, size: 64, offset: 384)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_ttl", scope: !7553, file: !1984, line: 692, baseType: !2981, size: 64, offset: 448)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group_noack", scope: !7553, file: !1984, line: 693, baseType: !20, size: 32, offset: 512)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "numreplicas", scope: !7553, file: !1984, line: 696, baseType: !20, size: 32, offset: 544)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "reploffset", scope: !7553, file: !1984, line: 697, baseType: !12, size: 64, offset: 576)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "module_blocked_handle", scope: !7553, file: !1984, line: 700, baseType: !13, size: 64, offset: 640)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "woff", scope: !7468, file: !1984, line: 770, baseType: !12, size: 64, offset: 3840)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !7468, file: !1984, line: 771, baseType: !4646, size: 64, offset: 3904)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !7468, file: !1984, line: 772, baseType: !41, size: 64, offset: 3968)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !7468, file: !1984, line: 773, baseType: !4646, size: 64, offset: 4032)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "peerid", scope: !7468, file: !1984, line: 774, baseType: !261, size: 64, offset: 4096)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "client_list_node", scope: !7468, file: !1984, line: 775, baseType: !4652, size: 64, offset: 4160)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "bufpos", scope: !7468, file: !1984, line: 778, baseType: !20, size: 32, offset: 4224)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7468, file: !1984, line: 779, baseType: !7575, size: 131072, offset: 4256)
!7575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 131072, elements: !7576)
!7576 = !{!7577}
!7577 = !DISubrange(count: 16384)
!7578 = !DILocalVariable(name: "j", scope: !7579, file: !1, line: 2245, type: !55)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !1, line: 2244, column: 62)
!7580 = distinct !DILexicalBlock(scope: !7465, file: !1, line: 2244, column: 13)
!7581 = !DILocalVariable(name: "errorcode", scope: !7579, file: !1, line: 2246, type: !20)
!7582 = !DILocation(line: 2187, column: 42, scope: !7449)
!7583 = !DILocation(line: 2187, column: 56, scope: !7449)
!7584 = !DILocation(line: 2190, column: 19, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7449, file: !1, line: 2190, column: 9)
!7586 = !DILocation(line: 2191, column: 9, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7585, file: !1, line: 2190, column: 37)
!7588 = !DILocation(line: 2193, column: 5, scope: !7587)
!7589 = !DILocation(line: 2190, column: 10, scope: !7585)
!7590 = !DILocation(line: 2193, column: 38, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7585, file: !1, line: 2193, column: 16)
!7592 = !DILocation(line: 2193, column: 26, scope: !7591)
!7593 = !DILocation(line: 2194, column: 9, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7591, file: !1, line: 2193, column: 44)
!7595 = !DILocation(line: 2195, column: 5, scope: !7594)
!7596 = !DILocation(line: 2196, column: 9, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7591, file: !1, line: 2195, column: 12)
!7598 = !DILocation(line: 2199, column: 26, scope: !7449)
!7599 = !DILocation(line: 2200, column: 27, scope: !7449)
!7600 = !DILocation(line: 2201, column: 32, scope: !7449)
!7601 = !DILocation(line: 2210, column: 17, scope: !7449)
!7602 = !DILocation(line: 2188, column: 15, scope: !7449)
!7603 = !DILocation(line: 2211, column: 18, scope: !7449)
!7604 = !DILocation(line: 2212, column: 19, scope: !7456)
!7605 = !DILocation(line: 2213, column: 13, scope: !7455)
!7606 = !DILocation(line: 2215, column: 25, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7455, file: !1, line: 2215, column: 13)
!7608 = !{!204, !192, i64 2188}
!7609 = !DILocation(line: 2215, column: 13, scope: !7607)
!7610 = !DILocation(line: 2215, column: 78, scope: !7607)
!7611 = !DILocation(line: 2215, column: 13, scope: !7455)
!7612 = !DILocation(line: 2218, column: 23, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7607, file: !1, line: 2217, column: 9)
!7614 = !DILocation(line: 2222, column: 61, scope: !7613)
!7615 = !DILocation(line: 2222, column: 60, scope: !7613)
!7616 = !DILocation(line: 2222, column: 25, scope: !7613)
!7617 = !DILocation(line: 2223, column: 17, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7613, file: !1, line: 2223, column: 17)
!7619 = !DILocation(line: 2223, column: 25, scope: !7618)
!7620 = !DILocation(line: 2224, column: 29, scope: !7618)
!7621 = !DILocation(line: 2224, column: 71, scope: !7618)
!7622 = !DILocation(line: 2224, column: 17, scope: !7618)
!7623 = !DILocation(line: 2225, column: 31, scope: !7618)
!7624 = !DILocation(line: 2223, column: 17, scope: !7613)
!7625 = !DILocation(line: 2227, column: 30, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7618, file: !1, line: 2226, column: 13)
!7627 = !DILocation(line: 2228, column: 13, scope: !7626)
!7628 = !DILocation(line: 0, scope: !7449)
!7629 = !DILocation(line: 2232, column: 18, scope: !7449)
!7630 = !DILocation(line: 2232, column: 5, scope: !7449)
!7631 = !DILocation(line: 2233, column: 18, scope: !7449)
!7632 = !{!204, !192, i64 2184}
!7633 = !DILocation(line: 2233, column: 5, scope: !7449)
!7634 = !DILocation(line: 2238, column: 5, scope: !7449)
!7635 = !DILocation(line: 2240, column: 23, scope: !7449)
!7636 = !{!204, !201, i64 536}
!7637 = !DILocation(line: 2238, column: 14, scope: !7449)
!7638 = !DILocation(line: 2240, column: 5, scope: !7449)
!7639 = !DILocation(line: 2241, column: 17, scope: !7449)
!7640 = !DILocation(line: 2237, column: 15, scope: !7449)
!7641 = !DILocation(line: 2241, column: 5, scope: !7449)
!7642 = !DILocation(line: 2242, column: 29, scope: !7465)
!7643 = !{!7644, !201, i64 16}
!7644 = !{!"listNode", !201, i64 0, !201, i64 8, !201, i64 16}
!7645 = !DILocation(line: 2242, column: 17, scope: !7465)
!7646 = !DILocation(line: 2244, column: 20, scope: !7580)
!7647 = !{!7648, !192, i64 168}
!7648 = !{!"client", !205, i64 0, !192, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !205, i64 40, !201, i64 48, !205, i64 56, !192, i64 64, !201, i64 72, !201, i64 80, !201, i64 88, !192, i64 96, !192, i64 100, !205, i64 104, !201, i64 112, !206, i64 120, !205, i64 128, !205, i64 136, !205, i64 144, !205, i64 152, !192, i64 160, !192, i64 164, !192, i64 168, !192, i64 172, !192, i64 176, !205, i64 184, !205, i64 192, !201, i64 200, !206, i64 208, !206, i64 216, !206, i64 224, !206, i64 232, !206, i64 240, !193, i64 248, !192, i64 292, !193, i64 296, !192, i64 344, !7649, i64 352, !192, i64 384, !7650, i64 392, !206, i64 480, !201, i64 488, !201, i64 496, !201, i64 504, !201, i64 512, !201, i64 520, !192, i64 528, !193, i64 532}
!7649 = !{!"multiState", !201, i64 0, !192, i64 8, !192, i64 12, !192, i64 16, !205, i64 24}
!7650 = !{!"blockingState", !206, i64 0, !201, i64 8, !201, i64 16, !205, i64 24, !201, i64 32, !201, i64 40, !206, i64 48, !206, i64 56, !192, i64 64, !192, i64 68, !206, i64 72, !201, i64 80}
!7651 = !DILocation(line: 2244, column: 30, scope: !7580)
!7652 = !DILocation(line: 2244, column: 13, scope: !7465)
!7653 = !DILocation(line: 2245, column: 22, scope: !7579)
!7654 = !DILocation(line: 2251, column: 29, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7656, file: !1, line: 2251, column: 13)
!7656 = distinct !DILexicalBlock(scope: !7579, file: !1, line: 2251, column: 13)
!7657 = !DILocation(line: 2251, column: 27, scope: !7655)
!7658 = !DILocation(line: 2251, column: 13, scope: !7656)
!7659 = !{!7648, !205, i64 0}
!7660 = !DILocation(line: 2252, column: 45, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 2252, column: 21)
!7662 = distinct !DILexicalBlock(scope: !7655, file: !1, line: 2251, column: 48)
!7663 = !DILocation(line: 2252, column: 47, scope: !7661)
!7664 = !DILocation(line: 2252, column: 34, scope: !7661)
!7665 = !DILocation(line: 2252, column: 31, scope: !7661)
!7666 = !DILocation(line: 2252, column: 21, scope: !7662)
!7667 = !DILocation(line: 2253, column: 46, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7661, file: !1, line: 2252, column: 52)
!7669 = !DILocation(line: 2253, column: 33, scope: !7668)
!7670 = !DILocation(line: 2246, column: 17, scope: !7579)
!7671 = !DILocation(line: 2254, column: 21, scope: !7668)
!7672 = !DILocation(line: 2251, column: 44, scope: !7655)
!7673 = distinct !{!7673, !7658, !7674}
!7674 = !DILocation(line: 2256, column: 13, scope: !7656)
!7675 = !DILocation(line: 0, scope: !7579)
!7676 = !DILocation(line: 2257, column: 19, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7579, file: !1, line: 2257, column: 17)
!7678 = !DILocation(line: 2257, column: 48, scope: !7677)
!7679 = !DILocation(line: 2257, column: 35, scope: !7677)
!7680 = !DILocation(line: 0, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7677, file: !1, line: 2264, column: 20)
!7682 = !DILocation(line: 2261, column: 32, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7677, file: !1, line: 2257, column: 54)
!7684 = !DILocation(line: 2261, column: 21, scope: !7683)
!7685 = !DILocation(line: 2262, column: 40, scope: !7683)
!7686 = !DILocation(line: 2258, column: 17, scope: !7683)
!7687 = !DILocation(line: 2263, column: 17, scope: !7683)
!7688 = !DILocation(line: 2264, column: 13, scope: !7683)
!7689 = !DILocation(line: 2265, column: 17, scope: !7681)
!7690 = !DILocation(line: 2269, column: 42, scope: !7681)
!7691 = !{!7648, !192, i64 8}
!7692 = !DILocation(line: 2269, column: 17, scope: !7681)
!7693 = !DILocation(line: 2270, column: 45, scope: !7681)
!7694 = !DILocation(line: 2270, column: 17, scope: !7681)
!7695 = distinct !{!7695, !7641, !7696}
!7696 = !DILocation(line: 2273, column: 5, scope: !7449)
!7697 = !DILocation(line: 2274, column: 5, scope: !7449)
!7698 = !DILocation(line: 2276, column: 42, scope: !7449)
!7699 = !DILocation(line: 2276, column: 31, scope: !7449)
!7700 = !DILocation(line: 2276, column: 5, scope: !7449)
!7701 = !DILocation(line: 2277, column: 1, scope: !7449)
!7702 = distinct !DISubprogram(name: "backgroundSaveDoneHandler", scope: !1, file: !1, line: 2280, type: !7384, isLocal: false, isDefinition: true, scopeLine: 2280, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7703)
!7703 = !{!7704, !7705}
!7704 = !DILocalVariable(name: "exitcode", arg: 1, scope: !7702, file: !1, line: 2280, type: !20)
!7705 = !DILocalVariable(name: "bysignal", arg: 2, scope: !7702, file: !1, line: 2280, type: !20)
!7706 = !DILocation(line: 2280, column: 36, scope: !7702)
!7707 = !DILocation(line: 2280, column: 50, scope: !7702)
!7708 = !DILocation(line: 2281, column: 19, scope: !7702)
!7709 = !DILocation(line: 2281, column: 5, scope: !7702)
!7710 = !DILocation(line: 2283, column: 9, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7702, file: !1, line: 2281, column: 35)
!7712 = !DILocation(line: 2284, column: 9, scope: !7711)
!7713 = !DILocation(line: 2286, column: 9, scope: !7711)
!7714 = !DILocation(line: 2287, column: 9, scope: !7711)
!7715 = !DILocation(line: 2289, column: 9, scope: !7711)
!7716 = !DILocation(line: 2292, column: 1, scope: !7702)
!7717 = distinct !DISubprogram(name: "rdbSaveToSlavesSockets", scope: !1, file: !1, line: 2296, type: !7718, isLocal: false, isDefinition: true, scopeLine: 2296, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7720)
!7718 = !DISubroutineType(types: !7719)
!7719 = !{!20, !4300}
!7720 = !{!7721, !7722, !7723, !7724, !7725, !7726, !7727, !7728, !7729, !7731, !7733, !7736, !7737, !7740, !7741, !7742, !7743, !7744, !7745, !7750}
!7721 = !DILocalVariable(name: "rsi", arg: 1, scope: !7717, file: !1, line: 2296, type: !4300)
!7722 = !DILocalVariable(name: "fds", scope: !7717, file: !1, line: 2297, type: !478)
!7723 = !DILocalVariable(name: "clientids", scope: !7717, file: !1, line: 2298, type: !994)
!7724 = !DILocalVariable(name: "numfds", scope: !7717, file: !1, line: 2299, type: !20)
!7725 = !DILocalVariable(name: "ln", scope: !7717, file: !1, line: 2300, type: !4652)
!7726 = !DILocalVariable(name: "li", scope: !7717, file: !1, line: 2301, type: !7459)
!7727 = !DILocalVariable(name: "childpid", scope: !7717, file: !1, line: 2302, type: !5222)
!7728 = !DILocalVariable(name: "start", scope: !7717, file: !1, line: 2303, type: !12)
!7729 = !DILocalVariable(name: "pipefds", scope: !7717, file: !1, line: 2304, type: !7730)
!7730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 64, elements: !100)
!7731 = !DILocalVariable(name: "slave", scope: !7732, file: !1, line: 2326, type: !7466)
!7732 = distinct !DILexicalBlock(scope: !7717, file: !1, line: 2325, column: 33)
!7733 = !DILocalVariable(name: "retval", scope: !7734, file: !1, line: 2345, type: !20)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !1, line: 2343, column: 35)
!7735 = distinct !DILexicalBlock(scope: !7717, file: !1, line: 2343, column: 9)
!7736 = !DILocalVariable(name: "slave_sockets", scope: !7734, file: !1, line: 2346, type: !221)
!7737 = !DILocalVariable(name: "private_dirty", scope: !7738, file: !1, line: 2359, type: !545)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !1, line: 2358, column: 29)
!7739 = distinct !DILexicalBlock(scope: !7734, file: !1, line: 2358, column: 13)
!7740 = !DILocalVariable(name: "msg", scope: !7738, file: !1, line: 2385, type: !13)
!7741 = !DILocalVariable(name: "len", scope: !7738, file: !1, line: 2386, type: !994)
!7742 = !DILocalVariable(name: "ids", scope: !7738, file: !1, line: 2387, type: !994)
!7743 = !DILocalVariable(name: "j", scope: !7738, file: !1, line: 2388, type: !20)
!7744 = !DILocalVariable(name: "msglen", scope: !7738, file: !1, line: 2388, type: !20)
!7745 = !DILocalVariable(name: "slave", scope: !7746, file: !1, line: 2423, type: !7466)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !1, line: 2422, column: 41)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !1, line: 2414, column: 29)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !1, line: 2414, column: 13)
!7749 = distinct !DILexicalBlock(scope: !7735, file: !1, line: 2412, column: 12)
!7750 = !DILocalVariable(name: "j", scope: !7746, file: !1, line: 2424, type: !20)
!7751 = !DILocation(line: 2296, column: 41, scope: !7717)
!7752 = !DILocation(line: 2301, column: 5, scope: !7717)
!7753 = !DILocation(line: 2304, column: 5, scope: !7717)
!7754 = !DILocation(line: 2304, column: 9, scope: !7717)
!7755 = !DILocation(line: 2306, column: 16, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7717, file: !1, line: 2306, column: 9)
!7757 = !DILocation(line: 2306, column: 46, scope: !7756)
!7758 = !DILocation(line: 2306, column: 36, scope: !7756)
!7759 = !DILocation(line: 2311, column: 14, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7717, file: !1, line: 2311, column: 9)
!7761 = !DILocation(line: 2311, column: 9, scope: !7760)
!7762 = !DILocation(line: 2311, column: 23, scope: !7760)
!7763 = !DILocation(line: 2311, column: 9, scope: !7717)
!7764 = !DILocation(line: 2312, column: 46, scope: !7717)
!7765 = !DILocation(line: 2312, column: 44, scope: !7717)
!7766 = !DILocation(line: 2313, column: 46, scope: !7717)
!7767 = !DILocation(line: 2313, column: 44, scope: !7717)
!7768 = !DILocation(line: 2317, column: 31, scope: !7717)
!7769 = !{!7770, !205, i64 40}
!7770 = !{!"list", !201, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !205, i64 40}
!7771 = !DILocation(line: 2317, column: 30, scope: !7717)
!7772 = !DILocation(line: 2317, column: 11, scope: !7717)
!7773 = !DILocation(line: 2297, column: 10, scope: !7717)
!7774 = !DILocation(line: 2321, column: 42, scope: !7717)
!7775 = !DILocation(line: 2321, column: 41, scope: !7717)
!7776 = !DILocation(line: 2321, column: 17, scope: !7717)
!7777 = !DILocation(line: 2298, column: 15, scope: !7717)
!7778 = !DILocation(line: 2299, column: 9, scope: !7717)
!7779 = !DILocation(line: 2324, column: 23, scope: !7717)
!7780 = !DILocation(line: 2301, column: 14, scope: !7717)
!7781 = !DILocation(line: 2324, column: 5, scope: !7717)
!7782 = !DILocation(line: 2325, column: 17, scope: !7717)
!7783 = !DILocation(line: 2300, column: 15, scope: !7717)
!7784 = !DILocation(line: 2325, column: 5, scope: !7717)
!7785 = !DILocation(line: 2326, column: 29, scope: !7732)
!7786 = !DILocation(line: 2326, column: 17, scope: !7732)
!7787 = !DILocation(line: 2328, column: 20, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7732, file: !1, line: 2328, column: 13)
!7789 = !DILocation(line: 2328, column: 30, scope: !7788)
!7790 = !DILocation(line: 2328, column: 13, scope: !7732)
!7791 = !DILocation(line: 2329, column: 40, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7788, file: !1, line: 2328, column: 64)
!7793 = !DILocation(line: 2329, column: 13, scope: !7792)
!7794 = !DILocation(line: 2329, column: 31, scope: !7792)
!7795 = !DILocation(line: 2330, column: 36, scope: !7792)
!7796 = !DILocation(line: 2330, column: 23, scope: !7792)
!7797 = !DILocation(line: 2330, column: 13, scope: !7792)
!7798 = !DILocation(line: 2330, column: 27, scope: !7792)
!7799 = !DILocation(line: 2331, column: 54, scope: !7792)
!7800 = !DILocation(line: 2331, column: 13, scope: !7792)
!7801 = !DILocation(line: 2335, column: 35, scope: !7792)
!7802 = !DILocation(line: 2335, column: 13, scope: !7792)
!7803 = !DILocation(line: 2336, column: 41, scope: !7792)
!7804 = !DILocation(line: 2336, column: 51, scope: !7792)
!7805 = !{!204, !192, i64 2476}
!7806 = !DILocation(line: 2336, column: 63, scope: !7792)
!7807 = !DILocation(line: 2336, column: 44, scope: !7792)
!7808 = !DILocation(line: 2336, column: 13, scope: !7792)
!7809 = !DILocation(line: 2337, column: 9, scope: !7792)
!7810 = !DILocation(line: 0, scope: !7717)
!7811 = distinct !{!7811, !7784, !7812}
!7812 = !DILocation(line: 2338, column: 5, scope: !7717)
!7813 = !DILocation(line: 0, scope: !7792)
!7814 = !DILocation(line: 2341, column: 5, scope: !7717)
!7815 = !DILocation(line: 2342, column: 13, scope: !7717)
!7816 = !DILocation(line: 2303, column: 15, scope: !7717)
!7817 = !DILocation(line: 2343, column: 21, scope: !7735)
!7818 = !DILocation(line: 2302, column: 11, scope: !7717)
!7819 = !DILocation(line: 2343, column: 29, scope: !7735)
!7820 = !DILocation(line: 2343, column: 9, scope: !7717)
!7821 = !DILocation(line: 2346, column: 9, scope: !7734)
!7822 = !DILocation(line: 2346, column: 13, scope: !7734)
!7823 = !DILocation(line: 2348, column: 9, scope: !7734)
!7824 = !DILocation(line: 2349, column: 9, scope: !7734)
!7825 = !DILocation(line: 2351, column: 9, scope: !7734)
!7826 = !DILocation(line: 2352, column: 9, scope: !7734)
!7827 = !DILocation(line: 2354, column: 18, scope: !7734)
!7828 = !DILocation(line: 2345, column: 13, scope: !7734)
!7829 = !DILocation(line: 2355, column: 20, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7734, file: !1, line: 2355, column: 13)
!7831 = !DILocation(line: 2355, column: 28, scope: !7830)
!7832 = !DILocalVariable(name: "r", arg: 1, scope: !7833, file: !222, line: 123, type: !220)
!7833 = distinct !DISubprogram(name: "rioFlush", scope: !222, file: !222, line: 123, type: !596, isLocal: true, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7834)
!7834 = !{!7832}
!7835 = !DILocation(line: 123, column: 33, scope: !7833, inlinedAt: !7836)
!7836 = distinct !DILocation(line: 2355, column: 31, scope: !7830)
!7837 = !DILocation(line: 124, column: 15, scope: !7833, inlinedAt: !7836)
!7838 = !{!507, !201, i64 24}
!7839 = !DILocation(line: 124, column: 12, scope: !7833, inlinedAt: !7836)
!7840 = !DILocation(line: 124, column: 5, scope: !7833, inlinedAt: !7836)
!7841 = !DILocation(line: 2355, column: 56, scope: !7830)
!7842 = !DILocation(line: 2359, column: 36, scope: !7738)
!7843 = !DILocation(line: 2359, column: 20, scope: !7738)
!7844 = !DILocation(line: 2361, column: 17, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7738, file: !1, line: 2361, column: 17)
!7846 = !DILocation(line: 2361, column: 17, scope: !7738)
!7847 = !DILocation(line: 2364, column: 34, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 2361, column: 32)
!7849 = !DILocation(line: 2362, column: 17, scope: !7848)
!7850 = !DILocation(line: 2365, column: 13, scope: !7848)
!7851 = !DILocation(line: 2367, column: 45, scope: !7738)
!7852 = !DILocation(line: 2368, column: 13, scope: !7738)
!7853 = !DILocation(line: 2385, column: 54, scope: !7738)
!7854 = !DILocation(line: 2385, column: 52, scope: !7738)
!7855 = !DILocation(line: 2385, column: 50, scope: !7738)
!7856 = !DILocation(line: 2385, column: 49, scope: !7738)
!7857 = !DILocation(line: 2385, column: 25, scope: !7738)
!7858 = !DILocation(line: 2385, column: 19, scope: !7738)
!7859 = !DILocation(line: 2386, column: 29, scope: !7738)
!7860 = !DILocation(line: 2386, column: 23, scope: !7738)
!7861 = !DILocation(line: 2390, column: 20, scope: !7738)
!7862 = !DILocation(line: 2390, column: 18, scope: !7738)
!7863 = !DILocation(line: 2388, column: 17, scope: !7738)
!7864 = !DILocation(line: 2391, column: 27, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7866, file: !1, line: 2391, column: 13)
!7866 = distinct !DILexicalBlock(scope: !7738, file: !1, line: 2391, column: 13)
!7867 = !DILocation(line: 2391, column: 13, scope: !7866)
!7868 = !DILocation(line: 2387, column: 32, scope: !7738)
!7869 = !DILocation(line: 2387, column: 23, scope: !7738)
!7870 = !DILocation(line: 2392, column: 26, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7865, file: !1, line: 2391, column: 42)
!7872 = !DILocation(line: 2392, column: 21, scope: !7871)
!7873 = !DILocation(line: 2392, column: 24, scope: !7871)
!7874 = !DILocation(line: 2393, column: 49, scope: !7871)
!7875 = !DILocation(line: 2393, column: 26, scope: !7871)
!7876 = !DILocation(line: 2393, column: 21, scope: !7871)
!7877 = !DILocation(line: 2393, column: 24, scope: !7871)
!7878 = !DILocation(line: 2391, column: 38, scope: !7865)
!7879 = distinct !{!7879, !7867, !7880}
!7880 = !DILocation(line: 2394, column: 13, scope: !7866)
!7881 = distinct !{!7881, !7882}
!7882 = !{!"llvm.loop.unroll.disable"}
!7883 = !DILocation(line: 2401, column: 17, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7738, file: !1, line: 2401, column: 17)
!7885 = !DILocation(line: 2401, column: 22, scope: !7884)
!7886 = !DILocation(line: 2401, column: 27, scope: !7884)
!7887 = !DILocation(line: 2402, column: 30, scope: !7884)
!7888 = !DILocation(line: 2402, column: 66, scope: !7884)
!7889 = !DILocation(line: 2402, column: 17, scope: !7884)
!7890 = !DILocation(line: 2403, column: 17, scope: !7884)
!7891 = !DILocation(line: 2401, column: 17, scope: !7738)
!7892 = !DILocation(line: 2406, column: 13, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7884, file: !1, line: 2404, column: 13)
!7894 = !DILocation(line: 0, scope: !7830)
!7895 = !DILocation(line: 2407, column: 13, scope: !7738)
!7896 = !DILocation(line: 2408, column: 9, scope: !7738)
!7897 = !DILocation(line: 2409, column: 9, scope: !7734)
!7898 = !DILocation(line: 2410, column: 9, scope: !7734)
!7899 = !DILocation(line: 2411, column: 31, scope: !7734)
!7900 = !DILocation(line: 2411, column: 23, scope: !7734)
!7901 = !DILocation(line: 2411, column: 9, scope: !7734)
!7902 = !DILocation(line: 2412, column: 5, scope: !7735)
!7903 = !DILocation(line: 2452, column: 5, scope: !7717)
!7904 = !DILocation(line: 2414, column: 22, scope: !7748)
!7905 = !DILocation(line: 2414, column: 13, scope: !7749)
!7906 = !DILocation(line: 2416, column: 26, scope: !7747)
!7907 = !DILocation(line: 2416, column: 17, scope: !7747)
!7908 = !DILocation(line: 2415, column: 13, scope: !7747)
!7909 = !DILocation(line: 2421, column: 31, scope: !7747)
!7910 = !DILocation(line: 2421, column: 13, scope: !7747)
!7911 = !DILocation(line: 2422, column: 25, scope: !7747)
!7912 = !DILocation(line: 2422, column: 13, scope: !7747)
!7913 = !DILocation(line: 2423, column: 37, scope: !7746)
!7914 = !DILocation(line: 2423, column: 25, scope: !7746)
!7915 = !DILocation(line: 2424, column: 21, scope: !7746)
!7916 = !DILocation(line: 2426, column: 17, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7746, file: !1, line: 2426, column: 17)
!7918 = !DILocation(line: 2426, column: 31, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7917, file: !1, line: 2426, column: 17)
!7920 = distinct !{!7920, !7916, !7921}
!7921 = !DILocation(line: 2431, column: 17, scope: !7917)
!7922 = !DILocation(line: 2427, column: 38, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !1, line: 2427, column: 25)
!7924 = distinct !DILexicalBlock(scope: !7919, file: !1, line: 2426, column: 46)
!7925 = !DILocation(line: 2427, column: 35, scope: !7923)
!7926 = !DILocation(line: 2426, column: 42, scope: !7919)
!7927 = !DILocation(line: 2427, column: 25, scope: !7924)
!7928 = !DILocation(line: 2428, column: 32, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7923, file: !1, line: 2427, column: 52)
!7930 = !DILocation(line: 2428, column: 42, scope: !7929)
!7931 = !DILocation(line: 2429, column: 25, scope: !7929)
!7932 = distinct !{!7932, !7912, !7933}
!7933 = !DILocation(line: 2432, column: 13, scope: !7747)
!7934 = !DILocation(line: 2433, column: 19, scope: !7747)
!7935 = !DILocation(line: 2433, column: 13, scope: !7747)
!7936 = !DILocation(line: 2434, column: 19, scope: !7747)
!7937 = !DILocation(line: 2434, column: 13, scope: !7747)
!7938 = !DILocation(line: 2435, column: 13, scope: !7747)
!7939 = !DILocation(line: 2436, column: 9, scope: !7747)
!7940 = !DILocation(line: 2437, column: 37, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7748, file: !1, line: 2436, column: 16)
!7942 = !DILocation(line: 2437, column: 45, scope: !7941)
!7943 = !DILocation(line: 2437, column: 35, scope: !7941)
!7944 = !DILocation(line: 2438, column: 46, scope: !7941)
!7945 = !DILocation(line: 2438, column: 37, scope: !7941)
!7946 = !DILocation(line: 2438, column: 68, scope: !7941)
!7947 = !DILocation(line: 2438, column: 87, scope: !7941)
!7948 = !DILocation(line: 2438, column: 80, scope: !7941)
!7949 = !DILocation(line: 2438, column: 78, scope: !7941)
!7950 = !DILocation(line: 2438, column: 102, scope: !7941)
!7951 = !DILocation(line: 2438, column: 35, scope: !7941)
!7952 = !DILocation(line: 2439, column: 13, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7941, file: !1, line: 2439, column: 13)
!7954 = !DILocation(line: 2439, column: 13, scope: !7941)
!7955 = !DILocation(line: 2441, column: 13, scope: !7941)
!7956 = !DILocation(line: 2443, column: 42, scope: !7941)
!7957 = !DILocation(line: 2443, column: 40, scope: !7941)
!7958 = !DILocation(line: 2444, column: 34, scope: !7941)
!7959 = !DILocation(line: 2445, column: 35, scope: !7941)
!7960 = !DILocation(line: 2446, column: 13, scope: !7941)
!7961 = !DILocation(line: 2448, column: 9, scope: !7749)
!7962 = !DILocation(line: 2449, column: 9, scope: !7749)
!7963 = !DILocation(line: 2450, column: 16, scope: !7749)
!7964 = !DILocation(line: 2450, column: 9, scope: !7749)
!7965 = !DILocation(line: 0, scope: !7749)
!7966 = !DILocation(line: 2453, column: 1, scope: !7717)
!7967 = distinct !DISubprogram(name: "saveCommand", scope: !1, file: !1, line: 2455, type: !7489, isLocal: false, isDefinition: true, scopeLine: 2455, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7968)
!7968 = !{!7969, !7970, !7971}
!7969 = !DILocalVariable(name: "c", arg: 1, scope: !7967, file: !1, line: 2455, type: !7466)
!7970 = !DILocalVariable(name: "rsi", scope: !7967, file: !1, line: 2460, type: !4301)
!7971 = !DILocalVariable(name: "rsiptr", scope: !7967, file: !1, line: 2460, type: !4300)
!7972 = !DILocation(line: 2455, column: 26, scope: !7967)
!7973 = !DILocation(line: 2456, column: 16, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7967, file: !1, line: 2456, column: 9)
!7975 = !DILocation(line: 2456, column: 30, scope: !7974)
!7976 = !DILocation(line: 2456, column: 9, scope: !7967)
!7977 = !DILocation(line: 2457, column: 9, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7974, file: !1, line: 2456, column: 37)
!7979 = !DILocation(line: 2458, column: 9, scope: !7978)
!7980 = !DILocation(line: 2460, column: 5, scope: !7967)
!7981 = !DILocation(line: 2460, column: 17, scope: !7967)
!7982 = !DILocalVariable(name: "rsi", arg: 1, scope: !7983, file: !1, line: 2515, type: !4300)
!7983 = distinct !DISubprogram(name: "rdbPopulateSaveInfo", scope: !1, file: !1, line: 2515, type: !7984, isLocal: false, isDefinition: true, scopeLine: 2515, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7986)
!7984 = !DISubroutineType(types: !7985)
!7985 = !{!4300, !4300}
!7986 = !{!7982, !7987}
!7987 = !DILocalVariable(name: "rsi_init", scope: !7983, file: !1, line: 2516, type: !4301)
!7988 = !DILocation(line: 2515, column: 47, scope: !7983, inlinedAt: !7989)
!7989 = distinct !DILocation(line: 2461, column: 14, scope: !7967)
!7990 = !DILocation(line: 2517, column: 12, scope: !7983, inlinedAt: !7989)
!7991 = !{i64 0, i64 4, !191, i64 4, i64 4, !191, i64 8, i64 41, !540, i64 56, i64 8, !5668}
!7992 = !DILocation(line: 2526, column: 17, scope: !7993, inlinedAt: !7989)
!7993 = distinct !DILexicalBlock(scope: !7983, file: !1, line: 2526, column: 9)
!7994 = !DILocation(line: 2526, column: 10, scope: !7993, inlinedAt: !7989)
!7995 = !DILocation(line: 2526, column: 38, scope: !7993, inlinedAt: !7989)
!7996 = !DILocation(line: 2526, column: 31, scope: !7993, inlinedAt: !7989)
!7997 = !DILocation(line: 2526, column: 28, scope: !7993, inlinedAt: !7989)
!7998 = !DILocation(line: 2532, column: 38, scope: !7999, inlinedAt: !7989)
!7999 = distinct !DILexicalBlock(scope: !7993, file: !1, line: 2526, column: 52)
!8000 = !{!204, !192, i64 2368}
!8001 = !DILocation(line: 2532, column: 49, scope: !7999, inlinedAt: !7989)
!8002 = !DILocation(line: 2532, column: 31, scope: !7999, inlinedAt: !7989)
!8003 = !DILocation(line: 2533, column: 9, scope: !7999, inlinedAt: !7989)
!8004 = !DILocation(line: 2538, column: 16, scope: !8005, inlinedAt: !7989)
!8005 = distinct !DILexicalBlock(scope: !7983, file: !1, line: 2538, column: 9)
!8006 = !{!204, !201, i64 2480}
!8007 = !DILocation(line: 2538, column: 9, scope: !8005, inlinedAt: !7989)
!8008 = !DILocation(line: 2538, column: 9, scope: !7983, inlinedAt: !7989)
!8009 = !DILocation(line: 2539, column: 46, scope: !8010, inlinedAt: !7989)
!8010 = distinct !DILexicalBlock(scope: !8005, file: !1, line: 2538, column: 24)
!8011 = !{!7648, !201, i64 16}
!8012 = !DILocation(line: 2539, column: 50, scope: !8010, inlinedAt: !7989)
!8013 = !{!4751, !192, i64 40}
!8014 = !DILocation(line: 2540, column: 9, scope: !8010, inlinedAt: !7989)
!8015 = !DILocation(line: 2548, column: 16, scope: !8016, inlinedAt: !7989)
!8016 = distinct !DILexicalBlock(scope: !7983, file: !1, line: 2548, column: 9)
!8017 = !{!204, !201, i64 2488}
!8018 = !DILocation(line: 2548, column: 9, scope: !8016, inlinedAt: !7989)
!8019 = !DILocation(line: 2548, column: 9, scope: !7983, inlinedAt: !7989)
!8020 = !DILocation(line: 2549, column: 53, scope: !8021, inlinedAt: !7989)
!8021 = distinct !DILexicalBlock(scope: !8016, file: !1, line: 2548, column: 31)
!8022 = !DILocation(line: 2549, column: 57, scope: !8021, inlinedAt: !7989)
!8023 = !DILocation(line: 2550, column: 9, scope: !8021, inlinedAt: !7989)
!8024 = !DILocation(line: 0, scope: !7967)
!8025 = !DILocation(line: 2553, column: 1, scope: !7983, inlinedAt: !7989)
!8026 = !DILocation(line: 0, scope: !7983, inlinedAt: !7989)
!8027 = !DILocation(line: 2460, column: 23, scope: !7967)
!8028 = !DILocation(line: 2462, column: 24, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !7967, file: !1, line: 2462, column: 9)
!8030 = !DILocation(line: 2462, column: 9, scope: !8029)
!8031 = !DILocation(line: 2462, column: 45, scope: !8029)
!8032 = !DILocation(line: 2462, column: 9, scope: !7967)
!8033 = !DILocation(line: 2463, column: 27, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8029, file: !1, line: 2462, column: 54)
!8035 = !{!8036, !201, i64 8}
!8036 = !{!"sharedObjectsStruct", !201, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !201, i64 40, !201, i64 48, !201, i64 56, !201, i64 64, !201, i64 72, !201, i64 80, !201, i64 88, !201, i64 96, !201, i64 104, !201, i64 112, !201, i64 120, !201, i64 128, !201, i64 136, !201, i64 144, !201, i64 152, !201, i64 160, !201, i64 168, !201, i64 176, !201, i64 184, !201, i64 192, !201, i64 200, !201, i64 208, !201, i64 216, !201, i64 224, !201, i64 232, !201, i64 240, !201, i64 248, !201, i64 256, !201, i64 264, !201, i64 272, !201, i64 280, !201, i64 288, !201, i64 296, !201, i64 304, !201, i64 312, !201, i64 320, !201, i64 328, !201, i64 336, !201, i64 344, !201, i64 352, !201, i64 360, !193, i64 368, !193, i64 448, !193, i64 80448, !193, i64 80704, !201, i64 80960, !201, i64 80968}
!8037 = !DILocation(line: 2463, column: 9, scope: !8034)
!8038 = !DILocation(line: 2464, column: 5, scope: !8034)
!8039 = !DILocation(line: 2465, column: 27, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8029, file: !1, line: 2464, column: 12)
!8041 = !{!8036, !201, i64 16}
!8042 = !DILocation(line: 2465, column: 9, scope: !8040)
!8043 = !DILocation(line: 2467, column: 1, scope: !7967)
!8044 = !DILocation(line: 2515, column: 47, scope: !7983)
!8045 = !DILocation(line: 2517, column: 12, scope: !7983)
!8046 = !DILocation(line: 2526, column: 17, scope: !7993)
!8047 = !DILocation(line: 2526, column: 10, scope: !7993)
!8048 = !DILocation(line: 2526, column: 38, scope: !7993)
!8049 = !DILocation(line: 2526, column: 31, scope: !7993)
!8050 = !DILocation(line: 2526, column: 28, scope: !7993)
!8051 = !DILocation(line: 2532, column: 38, scope: !7999)
!8052 = !DILocation(line: 2532, column: 49, scope: !7999)
!8053 = !DILocation(line: 2532, column: 31, scope: !7999)
!8054 = !DILocation(line: 2533, column: 9, scope: !7999)
!8055 = !DILocation(line: 2538, column: 16, scope: !8005)
!8056 = !DILocation(line: 2538, column: 9, scope: !8005)
!8057 = !DILocation(line: 2538, column: 9, scope: !7983)
!8058 = !DILocation(line: 2539, column: 46, scope: !8010)
!8059 = !DILocation(line: 2539, column: 50, scope: !8010)
!8060 = !DILocation(line: 2540, column: 9, scope: !8010)
!8061 = !DILocation(line: 2548, column: 16, scope: !8016)
!8062 = !DILocation(line: 2548, column: 9, scope: !8016)
!8063 = !DILocation(line: 2548, column: 9, scope: !7983)
!8064 = !DILocation(line: 2549, column: 53, scope: !8021)
!8065 = !DILocation(line: 2549, column: 57, scope: !8021)
!8066 = !DILocation(line: 2550, column: 9, scope: !8021)
!8067 = !DILocation(line: 0, scope: !7999)
!8068 = !DILocation(line: 2553, column: 1, scope: !7983)
!8069 = !DILocation(line: 0, scope: !7983)
!8070 = distinct !DISubprogram(name: "bgsaveCommand", scope: !1, file: !1, line: 2470, type: !7489, isLocal: false, isDefinition: true, scopeLine: 2470, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !8071)
!8071 = !{!8072, !8073, !8074, !8075}
!8072 = !DILocalVariable(name: "c", arg: 1, scope: !8070, file: !1, line: 2470, type: !7466)
!8073 = !DILocalVariable(name: "schedule", scope: !8070, file: !1, line: 2471, type: !20)
!8074 = !DILocalVariable(name: "rsi", scope: !8070, file: !1, line: 2484, type: !4301)
!8075 = !DILocalVariable(name: "rsiptr", scope: !8070, file: !1, line: 2484, type: !4300)
!8076 = !DILocation(line: 2470, column: 28, scope: !8070)
!8077 = !DILocation(line: 2471, column: 9, scope: !8070)
!8078 = !DILocation(line: 2475, column: 12, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8070, file: !1, line: 2475, column: 9)
!8080 = !{!7648, !192, i64 64}
!8081 = !DILocation(line: 2475, column: 17, scope: !8079)
!8082 = !DILocation(line: 2475, column: 9, scope: !8070)
!8083 = !DILocation(line: 2476, column: 21, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 2476, column: 13)
!8085 = distinct !DILexicalBlock(scope: !8079, file: !1, line: 2475, column: 22)
!8086 = !DILocation(line: 2476, column: 26, scope: !8084)
!8087 = !DILocation(line: 2476, column: 44, scope: !8084)
!8088 = !{!7648, !201, i64 72}
!8089 = !DILocation(line: 2476, column: 41, scope: !8084)
!8090 = !DILocation(line: 2476, column: 53, scope: !8084)
!8091 = !DILocation(line: 2476, column: 30, scope: !8084)
!8092 = !DILocation(line: 2476, column: 13, scope: !8085)
!8093 = !DILocation(line: 2479, column: 31, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8084, file: !1, line: 2478, column: 16)
!8095 = !{!8036, !201, i64 128}
!8096 = !DILocation(line: 2479, column: 13, scope: !8094)
!8097 = !DILocation(line: 2480, column: 13, scope: !8094)
!8098 = !DILocation(line: 0, scope: !8070)
!8099 = !DILocation(line: 2484, column: 5, scope: !8070)
!8100 = !DILocation(line: 2484, column: 17, scope: !8070)
!8101 = !DILocation(line: 2515, column: 47, scope: !7983, inlinedAt: !8102)
!8102 = distinct !DILocation(line: 2485, column: 14, scope: !8070)
!8103 = !DILocation(line: 2517, column: 12, scope: !7983, inlinedAt: !8102)
!8104 = !DILocation(line: 2526, column: 17, scope: !7993, inlinedAt: !8102)
!8105 = !DILocation(line: 2526, column: 10, scope: !7993, inlinedAt: !8102)
!8106 = !DILocation(line: 2526, column: 38, scope: !7993, inlinedAt: !8102)
!8107 = !DILocation(line: 2526, column: 31, scope: !7993, inlinedAt: !8102)
!8108 = !DILocation(line: 2526, column: 28, scope: !7993, inlinedAt: !8102)
!8109 = !DILocation(line: 2532, column: 38, scope: !7999, inlinedAt: !8102)
!8110 = !DILocation(line: 2532, column: 49, scope: !7999, inlinedAt: !8102)
!8111 = !DILocation(line: 2532, column: 31, scope: !7999, inlinedAt: !8102)
!8112 = !DILocation(line: 2533, column: 9, scope: !7999, inlinedAt: !8102)
!8113 = !DILocation(line: 2538, column: 16, scope: !8005, inlinedAt: !8102)
!8114 = !DILocation(line: 2538, column: 9, scope: !8005, inlinedAt: !8102)
!8115 = !DILocation(line: 2538, column: 9, scope: !7983, inlinedAt: !8102)
!8116 = !DILocation(line: 2539, column: 46, scope: !8010, inlinedAt: !8102)
!8117 = !DILocation(line: 2539, column: 50, scope: !8010, inlinedAt: !8102)
!8118 = !DILocation(line: 2540, column: 9, scope: !8010, inlinedAt: !8102)
!8119 = !DILocation(line: 2548, column: 16, scope: !8016, inlinedAt: !8102)
!8120 = !DILocation(line: 2548, column: 9, scope: !8016, inlinedAt: !8102)
!8121 = !DILocation(line: 2548, column: 9, scope: !7983, inlinedAt: !8102)
!8122 = !DILocation(line: 2549, column: 53, scope: !8021, inlinedAt: !8102)
!8123 = !DILocation(line: 2549, column: 57, scope: !8021, inlinedAt: !8102)
!8124 = !DILocation(line: 2550, column: 9, scope: !8021, inlinedAt: !8102)
!8125 = !DILocation(line: 2553, column: 1, scope: !7983, inlinedAt: !8102)
!8126 = !DILocation(line: 0, scope: !7983, inlinedAt: !8102)
!8127 = !DILocation(line: 2484, column: 23, scope: !8070)
!8128 = !DILocation(line: 2487, column: 16, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8070, file: !1, line: 2487, column: 9)
!8130 = !DILocation(line: 2487, column: 30, scope: !8129)
!8131 = !DILocation(line: 2487, column: 9, scope: !8070)
!8132 = !DILocation(line: 2488, column: 9, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8129, file: !1, line: 2487, column: 37)
!8134 = !DILocation(line: 2489, column: 5, scope: !8133)
!8135 = !DILocation(line: 2489, column: 23, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8129, file: !1, line: 2489, column: 16)
!8137 = !DILocation(line: 2489, column: 37, scope: !8136)
!8138 = !DILocation(line: 2489, column: 16, scope: !8129)
!8139 = !DILocation(line: 2490, column: 13, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8141, file: !1, line: 2490, column: 13)
!8141 = distinct !DILexicalBlock(scope: !8136, file: !1, line: 2489, column: 44)
!8142 = !DILocation(line: 2490, column: 13, scope: !8141)
!8143 = !DILocation(line: 2491, column: 41, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8140, file: !1, line: 2490, column: 23)
!8145 = !{!204, !192, i64 2168}
!8146 = !DILocation(line: 2492, column: 13, scope: !8144)
!8147 = !DILocation(line: 2493, column: 9, scope: !8144)
!8148 = !DILocation(line: 2494, column: 13, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8140, file: !1, line: 2493, column: 16)
!8150 = !DILocation(line: 2499, column: 41, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8136, file: !1, line: 2499, column: 16)
!8152 = !DILocation(line: 2499, column: 16, scope: !8151)
!8153 = !DILocation(line: 2499, column: 62, scope: !8151)
!8154 = !DILocation(line: 2499, column: 16, scope: !8136)
!8155 = !DILocation(line: 2500, column: 9, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8151, file: !1, line: 2499, column: 71)
!8157 = !DILocation(line: 2501, column: 5, scope: !8156)
!8158 = !DILocation(line: 2502, column: 27, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8151, file: !1, line: 2501, column: 12)
!8160 = !DILocation(line: 2502, column: 9, scope: !8159)
!8161 = !DILocation(line: 2504, column: 1, scope: !8070)
