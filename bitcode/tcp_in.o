; ModuleID = '/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/core/tcp_in.c'
source_filename = "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/core/tcp_in.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.stats_ = type { %struct.stats_proto, %struct.stats_proto, %struct.stats_proto, %struct.stats_proto, %struct.stats_proto, %struct.stats_proto, %struct.stats_proto, %struct.stats_sys, %struct.stats_proto, %struct.stats_proto, %struct.stats_proto, %struct.stats_igmp, %struct.stats_proto }
%struct.stats_sys = type { %struct.stats_syselem, %struct.stats_syselem, %struct.stats_syselem }
%struct.stats_syselem = type { i16, i16, i16 }
%struct.stats_igmp = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.stats_proto = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.tcp_hdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.ip_globals = type { %struct.netif*, %struct.netif*, %struct.ip_hdr*, %struct.ip6_hdr*, i16, %struct.ip_addr, %struct.ip_addr }
%struct.netif = type { %struct.netif*, %struct.ip_addr, %struct.ip_addr, %struct.ip_addr, [3 x %struct.ip_addr], [3 x i8], [3 x i32], [3 x i32], i8 (%struct.pbuf*, %struct.netif*)*, i8 (%struct.netif*, %struct.pbuf*, %struct.ip4_addr*)*, i8 (%struct.netif*, %struct.pbuf*)*, i8 (%struct.netif*, %struct.pbuf*, %struct.ip6_addr*)*, void (%struct.netif*)*, void (%struct.netif*)*, i8*, [1 x i8*], i16, i16, i16, [6 x i8], i8, i8, [2 x i8], i8, i8, i8, i8 (%struct.netif*, %struct.ip6_addr*, i32)* }
%struct.pbuf = type { %struct.pbuf*, i8*, i16, i16, i8, i8, i8, i8 }
%struct.ip4_addr = type { i32 }
%struct.ip6_addr = type { [4 x i32], i8 }
%struct.ip_hdr = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.ip4_addr_packed, %struct.ip4_addr_packed }
%struct.ip4_addr_packed = type { i32 }
%struct.ip6_hdr = type { i32, i16, i8, i8, %struct.ip6_addr_packed, %struct.ip6_addr_packed }
%struct.ip6_addr_packed = type { [4 x i32] }
%struct.ip_addr = type { %union.anon, i8 }
%union.anon = type { %struct.ip6_addr }
%struct.tcp_pcb = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8, %struct.tcp_pcb*, i8*, i32, i8, i16, i16, i16, i8, i8, i8, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, %struct.tcp_seg*, %struct.tcp_seg*, %struct.tcp_seg*, %struct.pbuf*, %struct.tcp_pcb_listen*, i8 (i8*, %struct.tcp_pcb*, i16)*, i8 (i8*, %struct.tcp_pcb*, %struct.pbuf*, i8)*, i8 (i8*, %struct.tcp_pcb*, i8)*, i8 (i8*, %struct.tcp_pcb*)*, void (i8*, i8)*, i32, i8, i8, i8, i8, i8, i8 }
%struct.tcp_seg = type { %struct.tcp_seg*, %struct.pbuf*, i16, i8, %struct.tcp_hdr* }
%struct.tcp_pcb_listen = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8, %struct.tcp_pcb_listen*, i8*, i32, i8, i16, i8 (i8*, %struct.tcp_pcb*, i8)* }
%union.tcp_listen_pcbs_t = type { %struct.tcp_pcb_listen* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [24 x i8] c"tcp_input: invalid pbuf\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"Assertion failure: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"!(1)\00", align 1
@lwip_stats = external dso_local local_unnamed_addr global %struct.stats_, align 2
@tcphdr = internal unnamed_addr global %struct.tcp_hdr* null, align 8, !dbg !0
@ip_data = external dso_local global %struct.ip_globals, align 8
@tcphdr_optlen = internal unnamed_addr global i16 0, align 2, !dbg !267
@tcphdr_opt2 = internal unnamed_addr global i8* null, align 8, !dbg !271
@tcphdr_opt1len = internal unnamed_addr global i16 0, align 2, !dbg !269
@.str.3 = private unnamed_addr constant [16 x i8] c"p->next != NULL\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"p->len == 0\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"p->tot_len == p->next->tot_len\00", align 1
@seqno = internal unnamed_addr global i32 0, align 4, !dbg !273
@ackno = internal unnamed_addr global i32 0, align 4, !dbg !275
@flags = internal unnamed_addr global i8 0, align 1, !dbg !281
@tcplen = internal unnamed_addr global i16 0, align 2, !dbg !279
@tcp_active_pcbs = external dso_local global %struct.tcp_pcb*, align 8
@.str.6 = private unnamed_addr constant [39 x i8] c"tcp_input: active pcb->state != CLOSED\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"tcp_input: active pcb->state != TIME-WAIT\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"tcp_input: active pcb->state != LISTEN\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"tcp_input: pcb->next != pcb (before cache)\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"tcp_input: pcb->next != pcb (after cache)\00", align 1
@tcp_tw_pcbs = external dso_local local_unnamed_addr global %struct.tcp_pcb*, align 8
@.str.11 = private unnamed_addr constant [45 x i8] c"tcp_input: TIME-WAIT pcb->state == TIME-WAIT\00", align 1
@tcp_listen_pcbs = external dso_local local_unnamed_addr global %union.tcp_listen_pcbs_t, align 8
@inseg = internal global %struct.tcp_seg zeroinitializer, align 8, !dbg !265
@recv_data = internal unnamed_addr global %struct.pbuf* null, align 8, !dbg !285
@recv_flags = internal unnamed_addr global i8 0, align 1, !dbg !283
@recv_acked = internal unnamed_addr global i32 0, align 4, !dbg !277
@tcp_input_pcb = common dso_local local_unnamed_addr global %struct.tcp_pcb* null, align 8, !dbg !287
@.str.12 = private unnamed_addr constant [26 x i8] c"pcb->refused_data == NULL\00", align 1
@uk_pr_crit.__str = internal global [8 x i8] c"liblwip\00", section ".data_shared", align 1, !dbg !289
@uk_pr_crit.__str.13 = internal global [9 x i8] c"tcp_in.c\00", section ".data_shared", align 1, !dbg !316
@.str.14 = private unnamed_addr constant [37 x i8] c"tcp_input_delayed_close: invalid pcb\00", align 1
@tcp_active_pcbs_changed = external dso_local local_unnamed_addr global i8, align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"tcp_parseopt: invalid pcb\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"window not at default value\00", align 1
@tcp_ticks = external dso_local local_unnamed_addr global i32, align 4
@.str.20 = private unnamed_addr constant [32 x i8] c"tcp_input: pcb->state != CLOSED\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"pcb->snd_queuelen > 0\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"no segment to free\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"pcb->listener->accept != NULL\00", align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"tcp_receive: invalid pcb\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"tcp_receive: wrong state\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"inseg.p != NULL\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"insane offset!\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"pbuf too short!\00", align 1
@.str.31 = private unnamed_addr constant [21 x i8] c"window size > 0xFFFF\00", align 1
@.str.32 = private unnamed_addr constant [55 x i8] c"tcp_receive: segment not trimmed correctly to rcv_wnd\0A\00", align 1
@.str.33 = private unnamed_addr constant [59 x i8] c"tcp_receive: segment not trimmed correctly to ooseq queue\0A\00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c"tcp_receive: tcplen > rcv_wnd\0A\00", align 1
@.str.35 = private unnamed_addr constant [37 x i8] c"tcp_receive: ooseq tcplen > rcv_wnd\0A\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"pcb->snd_queuelen >= pbuf_clen(next->p)\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"tcp_receive: valid queue length\00", align 1
@.str.38 = private unnamed_addr constant [37 x i8] c"tcp_oos_insert_segment: invalid cseg\00", align 1
@__A_VARIABLE = internal global i32 0

; Function Attrs: noredzone nounwind
define dso_local void @tcp_input(%struct.pbuf*, %struct.netif* readonly) local_unnamed_addr #0 !dbg !327 {
  %3 = alloca %struct.pbuf*, align 8
  call void @llvm.dbg.value(metadata %struct.pbuf* %0, metadata !401, metadata !DIExpression()), !dbg !428
  call void @llvm.dbg.value(metadata %struct.netif* %1, metadata !402, metadata !DIExpression()), !dbg !429
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* null, metadata !406, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* null, metadata !407, metadata !DIExpression()), !dbg !431
  %4 = icmp eq %struct.pbuf* %0, null, !dbg !432
  br i1 %4, label %5, label %6, !dbg !435

; <label>:5:                                      ; preds = %2
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)) #8, !dbg !436
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !439
  tail call void @ukplat_terminate(i32 3) #9, !dbg !439
  unreachable, !dbg !439

; <label>:6:                                      ; preds = %2
  %7 = load i16, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 1), align 2, !dbg !443, !tbaa !444
  %8 = add i16 %7, 1, !dbg !443
  store i16 %8, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 1), align 2, !dbg !443, !tbaa !444
  %9 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %0, i64 0, i32 1, !dbg !453
  %10 = bitcast i8** %9 to i64*, !dbg !453
  %11 = load i64, i64* %10, align 8, !dbg !453, !tbaa !454
  store i64 %11, i64* bitcast (%struct.tcp_hdr** @tcphdr to i64*), align 8, !dbg !457, !tbaa !458
  %12 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %0, i64 0, i32 3, !dbg !459
  %13 = load i16, i16* %12, align 2, !dbg !459, !tbaa !461
  %14 = icmp ult i16 %13, 20, !dbg !462
  br i1 %14, label %1237, label %15, !dbg !463

; <label>:15:                                     ; preds = %6
  %16 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 1), align 4, !dbg !464, !tbaa !466
  %17 = icmp eq i8 %16, 6, !dbg !464
  %18 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 0), align 4, !dbg !469, !tbaa !470
  br i1 %17, label %27, label %19, !dbg !471

; <label>:19:                                     ; preds = %15
  %20 = load %struct.netif*, %struct.netif** getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 0), align 8, !dbg !464, !tbaa !472
  %21 = tail call zeroext i8 @ip4_addr_isbroadcast_u32(i32 %18, %struct.netif* %20) #10, !dbg !464
  %22 = icmp eq i8 %21, 0, !dbg !464
  br i1 %22, label %23, label %1237, !dbg !471

; <label>:23:                                     ; preds = %19
  %24 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 1), align 4, !dbg !473, !tbaa !466
  %25 = icmp eq i8 %24, 6, !dbg !473
  %26 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 0), align 4, !dbg !473, !tbaa !470
  br i1 %25, label %27, label %31, !dbg !474

; <label>:27:                                     ; preds = %15, %23
  %28 = phi i32 [ %26, %23 ], [ %18, %15 ]
  %29 = and i32 %28, 255, !dbg !473
  %30 = icmp eq i32 %29, 255, !dbg !473
  br i1 %30, label %1237, label %34, !dbg !473

; <label>:31:                                     ; preds = %23
  %32 = and i32 %26, 240, !dbg !473
  %33 = icmp eq i32 %32, 224, !dbg !473
  br i1 %33, label %1237, label %34, !dbg !474

; <label>:34:                                     ; preds = %31, %27
  %35 = icmp eq %struct.netif* %1, null, !dbg !475
  br i1 %35, label %41, label %36, !dbg !475

; <label>:36:                                     ; preds = %34
  %37 = getelementptr inbounds %struct.netif, %struct.netif* %1, i64 0, i32 16, !dbg !475
  %38 = load i16, i16* %37, align 8, !dbg !475, !tbaa !476
  %39 = and i16 %38, 1024, !dbg !475
  %40 = icmp eq i16 %39, 0, !dbg !475
  br i1 %40, label %46, label %41, !dbg !478

; <label>:41:                                     ; preds = %36, %34
  %42 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %0, i64 0, i32 2, !dbg !479
  %43 = load i16, i16* %42, align 8, !dbg !479, !tbaa !480
  %44 = tail call zeroext i16 @ip_chksum_pseudo(%struct.pbuf* nonnull %0, i8 zeroext 6, i16 zeroext %43, %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5), %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6)) #10, !dbg !481
  call void @llvm.dbg.value(metadata i16 %44, metadata !410, metadata !DIExpression()), !dbg !482
  %45 = icmp eq i16 %44, 0, !dbg !483
  br i1 %45, label %46, label %1237, !dbg !485

; <label>:46:                                     ; preds = %41, %36
  %47 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !486, !tbaa !458
  %48 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %47, i64 0, i32 4, !dbg !486
  %49 = load i16, i16* %48, align 1, !dbg !486, !tbaa !487
  %50 = tail call zeroext i16 @lwip_htons(i16 zeroext %49) #10, !dbg !486
  %51 = lshr i16 %50, 12, !dbg !486
  %52 = shl nuw nsw i16 %51, 2, !dbg !486
  %53 = zext i16 %52 to i64, !dbg !486
  %54 = icmp ult i16 %50, 20480, !dbg !490
  br i1 %54, label %1237, label %55, !dbg !492

; <label>:55:                                     ; preds = %46
  %56 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %0, i64 0, i32 2, !dbg !493
  %57 = load i16, i16* %56, align 8, !dbg !493, !tbaa !480
  %58 = icmp ugt i16 %52, %57, !dbg !494
  br i1 %58, label %1237, label %59, !dbg !495

; <label>:59:                                     ; preds = %55
  %60 = add nsw i16 %52, -20, !dbg !496
  store i16 %60, i16* @tcphdr_optlen, align 2, !dbg !497, !tbaa !498
  store i8* null, i8** @tcphdr_opt2, align 8, !dbg !499, !tbaa !458
  %61 = load i16, i16* %12, align 2, !dbg !500, !tbaa !461
  %62 = icmp ult i16 %61, %52, !dbg !501
  br i1 %62, label %65, label %63, !dbg !502

; <label>:63:                                     ; preds = %59
  store i16 %60, i16* @tcphdr_opt1len, align 2, !dbg !503, !tbaa !498
  %64 = tail call zeroext i8 @pbuf_remove_header(%struct.pbuf* nonnull %0, i64 %53) #10, !dbg !505
  br label %98, !dbg !506

; <label>:65:                                     ; preds = %59
  %66 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %0, i64 0, i32 0, !dbg !507
  %67 = load %struct.pbuf*, %struct.pbuf** %66, align 8, !dbg !507, !tbaa !510
  %68 = icmp eq %struct.pbuf* %67, null, !dbg !507
  br i1 %68, label %69, label %70, !dbg !511

; <label>:69:                                     ; preds = %65
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !512
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !515
  tail call void @ukplat_terminate(i32 3) #9, !dbg !515
  unreachable, !dbg !515

; <label>:70:                                     ; preds = %65
  %71 = tail call zeroext i8 @pbuf_remove_header(%struct.pbuf* nonnull %0, i64 20) #10, !dbg !519
  %72 = load i16, i16* %12, align 2, !dbg !520, !tbaa !461
  store i16 %72, i16* @tcphdr_opt1len, align 2, !dbg !521, !tbaa !498
  %73 = load i16, i16* @tcphdr_optlen, align 2, !dbg !522, !tbaa !498
  %74 = sub i16 %73, %72, !dbg !523
  call void @llvm.dbg.value(metadata i16 %74, metadata !413, metadata !DIExpression()), !dbg !524
  %75 = zext i16 %72 to i64, !dbg !525
  %76 = tail call zeroext i8 @pbuf_remove_header(%struct.pbuf* nonnull %0, i64 %75) #10, !dbg !526
  %77 = load %struct.pbuf*, %struct.pbuf** %66, align 8, !dbg !527, !tbaa !510
  %78 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %77, i64 0, i32 3, !dbg !529
  %79 = load i16, i16* %78, align 2, !dbg !529, !tbaa !461
  %80 = icmp ugt i16 %74, %79, !dbg !530
  br i1 %80, label %1237, label %81, !dbg !531

; <label>:81:                                     ; preds = %70
  %82 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %77, i64 0, i32 1, !dbg !532
  %83 = bitcast i8** %82 to i64*, !dbg !532
  %84 = load i64, i64* %83, align 8, !dbg !532, !tbaa !454
  store i64 %84, i64* bitcast (i8** @tcphdr_opt2 to i64*), align 8, !dbg !533, !tbaa !458
  %85 = zext i16 %74 to i64, !dbg !534
  %86 = tail call zeroext i8 @pbuf_remove_header(%struct.pbuf* %77, i64 %85) #10, !dbg !535
  %87 = load i16, i16* %56, align 8, !dbg !536, !tbaa !480
  %88 = sub i16 %87, %74, !dbg !537
  store i16 %88, i16* %56, align 8, !dbg !538, !tbaa !480
  %89 = load i16, i16* %12, align 2, !dbg !539, !tbaa !461
  %90 = icmp eq i16 %89, 0, !dbg !539
  br i1 %90, label %92, label %91, !dbg !542

; <label>:91:                                     ; preds = %81
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #8, !dbg !543
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !546
  tail call void @ukplat_terminate(i32 3) #9, !dbg !546
  unreachable, !dbg !546

; <label>:92:                                     ; preds = %81
  %93 = load %struct.pbuf*, %struct.pbuf** %66, align 8, !dbg !550, !tbaa !510
  %94 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %93, i64 0, i32 2, !dbg !550
  %95 = load i16, i16* %94, align 8, !dbg !550, !tbaa !480
  %96 = icmp eq i16 %88, %95, !dbg !550
  br i1 %96, label %98, label %97, !dbg !553

; <label>:97:                                     ; preds = %92
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0)) #8, !dbg !554
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !557
  tail call void @ukplat_terminate(i32 3) #9, !dbg !557
  unreachable, !dbg !557

; <label>:98:                                     ; preds = %92, %63
  %99 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !561, !tbaa !458
  %100 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %99, i64 0, i32 0, !dbg !561
  %101 = load i16, i16* %100, align 1, !dbg !561, !tbaa !562
  %102 = tail call zeroext i16 @lwip_htons(i16 zeroext %101) #10, !dbg !561
  %103 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !563, !tbaa !458
  %104 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %103, i64 0, i32 0, !dbg !564
  store i16 %102, i16* %104, align 1, !dbg !565, !tbaa !562
  %105 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %103, i64 0, i32 1, !dbg !566
  %106 = load i16, i16* %105, align 1, !dbg !566, !tbaa !567
  %107 = tail call zeroext i16 @lwip_htons(i16 zeroext %106) #10, !dbg !566
  %108 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !568, !tbaa !458
  %109 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %108, i64 0, i32 1, !dbg !569
  store i16 %107, i16* %109, align 1, !dbg !570, !tbaa !567
  %110 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %108, i64 0, i32 2, !dbg !571
  %111 = load i32, i32* %110, align 1, !dbg !571, !tbaa !572
  %112 = tail call i32 @lwip_htonl(i32 %111) #10, !dbg !571
  %113 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !573, !tbaa !458
  %114 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %113, i64 0, i32 2, !dbg !574
  store i32 %112, i32* %114, align 1, !dbg !575, !tbaa !572
  store i32 %112, i32* @seqno, align 4, !dbg !576, !tbaa !577
  %115 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %113, i64 0, i32 3, !dbg !578
  %116 = load i32, i32* %115, align 1, !dbg !578, !tbaa !579
  %117 = tail call i32 @lwip_htonl(i32 %116) #10, !dbg !578
  %118 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !580, !tbaa !458
  %119 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %118, i64 0, i32 3, !dbg !581
  store i32 %117, i32* %119, align 1, !dbg !582, !tbaa !579
  store i32 %117, i32* @ackno, align 4, !dbg !583, !tbaa !577
  %120 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %118, i64 0, i32 5, !dbg !584
  %121 = load i16, i16* %120, align 1, !dbg !584, !tbaa !585
  %122 = tail call zeroext i16 @lwip_htons(i16 zeroext %121) #10, !dbg !584
  %123 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !586, !tbaa !458
  %124 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %123, i64 0, i32 5, !dbg !587
  store i16 %122, i16* %124, align 1, !dbg !588, !tbaa !585
  %125 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %123, i64 0, i32 4, !dbg !589
  %126 = load i16, i16* %125, align 1, !dbg !589, !tbaa !487
  %127 = tail call zeroext i16 @lwip_htons(i16 zeroext %126) #10, !dbg !589
  %128 = trunc i16 %127 to i8, !dbg !589
  %129 = and i8 %128, 63, !dbg !589
  store i8 %129, i8* @flags, align 1, !dbg !590, !tbaa !470
  %130 = load i16, i16* %56, align 8, !dbg !591, !tbaa !480
  store i16 %130, i16* @tcplen, align 2, !dbg !592, !tbaa !498
  %131 = and i8 %128, 3, !dbg !593
  %132 = icmp eq i8 %131, 0, !dbg !593
  br i1 %132, label %136, label %133, !dbg !595

; <label>:133:                                    ; preds = %98
  %134 = add i16 %130, 1, !dbg !596
  store i16 %134, i16* @tcplen, align 2, !dbg !596, !tbaa !498
  %135 = icmp eq i16 %130, -1, !dbg !598
  br i1 %135, label %1237, label %136, !dbg !600

; <label>:136:                                    ; preds = %98, %133
  %137 = phi i16 [ %130, %98 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* null, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb** @tcp_active_pcbs, metadata !403, metadata !DIExpression(DW_OP_deref)), !dbg !602
  %138 = load %struct.tcp_pcb*, %struct.tcp_pcb** @tcp_active_pcbs, align 8, !dbg !603, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %138, metadata !403, metadata !DIExpression()), !dbg !602
  %139 = icmp eq %struct.tcp_pcb* %138, null, !dbg !606
  %140 = ptrtoint %struct.tcp_pcb* %138 to i64, !dbg !606
  br i1 %139, label %162, label %141, !dbg !606

; <label>:141:                                    ; preds = %136
  %142 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8
  %143 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %142, i64 0, i32 0
  %144 = load %struct.netif*, %struct.netif** getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 1), align 8
  %145 = getelementptr inbounds %struct.netif, %struct.netif* %144, i64 0, i32 23
  %146 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %142, i64 0, i32 1
  %147 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 1), align 4
  %148 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 0), align 4
  %149 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 1), align 4
  %150 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 1), align 4
  %151 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 0), align 4
  %152 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 2), align 4
  %153 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 3), align 4
  %154 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 1), align 4
  %155 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 1), align 4
  %156 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 2), align 4
  %157 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 3), align 4
  %158 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 1), align 4
  %159 = ptrtoint %struct.tcp_hdr* %142 to i64, !dbg !606
  %160 = icmp eq i8 %147, 6
  %161 = icmp eq i8 %149, 6
  br label %185, !dbg !606

; <label>:162:                                    ; preds = %280, %136
  %163 = load %struct.tcp_pcb*, %struct.tcp_pcb** @tcp_tw_pcbs, align 8, !dbg !607, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %163, metadata !403, metadata !DIExpression()), !dbg !602
  %164 = icmp eq %struct.tcp_pcb* %163, null, !dbg !612
  br i1 %164, label %284, label %165, !dbg !613

; <label>:165:                                    ; preds = %162
  %166 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8
  %167 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %166, i64 0, i32 0
  %168 = load %struct.netif*, %struct.netif** getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 1), align 8
  %169 = getelementptr inbounds %struct.netif, %struct.netif* %168, i64 0, i32 23
  %170 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %166, i64 0, i32 1
  %171 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 1), align 4
  %172 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 0), align 4
  %173 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 1), align 4
  %174 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 1), align 4
  %175 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 0), align 4
  %176 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 2), align 4
  %177 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 3), align 4
  %178 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 1), align 4
  %179 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 1), align 4
  %180 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 2), align 4
  %181 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 3), align 4
  %182 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 1), align 4
  %183 = icmp eq i8 %171, 6
  %184 = icmp eq i8 %173, 6
  br label %300, !dbg !613

; <label>:185:                                    ; preds = %141, %280
  %186 = phi %struct.tcp_pcb* [ %138, %141 ], [ %282, %280 ]
  %187 = phi %struct.tcp_pcb* [ null, %141 ], [ %186, %280 ]
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  %188 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 8, !dbg !614
  %189 = load i32, i32* %188, align 8, !dbg !614, !tbaa !618
  switch i32 %189, label %193 [
    i32 0, label %190
    i32 10, label %191
    i32 1, label %192
  ], !dbg !620

; <label>:190:                                    ; preds = %185
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #8, !dbg !621
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !624
  tail call void @ukplat_terminate(i32 3) #9, !dbg !624
  unreachable, !dbg !624

; <label>:191:                                    ; preds = %185
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0)) #8, !dbg !628
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !633
  tail call void @ukplat_terminate(i32 3) #9, !dbg !633
  unreachable, !dbg !633

; <label>:192:                                    ; preds = %185
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0)) #8, !dbg !637
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !642
  tail call void @ukplat_terminate(i32 3) #9, !dbg !642
  unreachable, !dbg !642

; <label>:193:                                    ; preds = %185
  %194 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 2, !dbg !646
  %195 = load i8, i8* %194, align 8, !dbg !646, !tbaa !648
  %196 = icmp eq i8 %195, 0, !dbg !649
  br i1 %196, label %201, label %197, !dbg !650

; <label>:197:                                    ; preds = %193
  %198 = load i8, i8* %145, align 8, !dbg !651, !tbaa !652
  %199 = add i8 %198, 1, !dbg !651
  %200 = icmp eq i8 %195, %199, !dbg !653
  br i1 %200, label %201, label %280, !dbg !654

; <label>:201:                                    ; preds = %197, %193
  %202 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 11, !dbg !655
  %203 = load i16, i16* %202, align 8, !dbg !655, !tbaa !657
  %204 = load i16, i16* %143, align 1, !dbg !658, !tbaa !562
  %205 = icmp eq i16 %203, %204, !dbg !659
  br i1 %205, label %206, label %280, !dbg !660

; <label>:206:                                    ; preds = %201
  %207 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 10, !dbg !661
  %208 = load i16, i16* %207, align 2, !dbg !661, !tbaa !662
  %209 = load i16, i16* %146, align 1, !dbg !663, !tbaa !567
  %210 = icmp eq i16 %208, %209, !dbg !664
  br i1 %210, label %211, label %280, !dbg !665

; <label>:211:                                    ; preds = %206
  %212 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 1, i32 1, !dbg !666
  %213 = load i8, i8* %212, align 4, !dbg !666, !tbaa !667
  %214 = icmp eq i8 %213, %147, !dbg !666
  br i1 %214, label %215, label %280, !dbg !668

; <label>:215:                                    ; preds = %211
  %216 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0, !dbg !666
  %217 = load i32, i32* %216, align 8, !dbg !666, !tbaa !470
  %218 = icmp eq i32 %217, %148, !dbg !666
  br i1 %160, label %219, label %236, !dbg !668

; <label>:219:                                    ; preds = %215
  br i1 %218, label %220, label %280, !dbg !666

; <label>:220:                                    ; preds = %219
  %221 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1, !dbg !666
  %222 = load i32, i32* %221, align 4, !dbg !666, !tbaa !470
  %223 = icmp eq i32 %222, %150, !dbg !666
  br i1 %223, label %224, label %280, !dbg !666

; <label>:224:                                    ; preds = %220
  %225 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2, !dbg !666
  %226 = load i32, i32* %225, align 8, !dbg !666, !tbaa !470
  %227 = icmp eq i32 %226, %152, !dbg !666
  br i1 %227, label %228, label %280, !dbg !666

; <label>:228:                                    ; preds = %224
  %229 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3, !dbg !666
  %230 = load i32, i32* %229, align 4, !dbg !666, !tbaa !470
  %231 = icmp eq i32 %230, %153, !dbg !666
  br i1 %231, label %232, label %280, !dbg !666

; <label>:232:                                    ; preds = %228
  %233 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 1, i32 0, i32 0, i32 1, !dbg !666
  %234 = load i8, i8* %233, align 8, !dbg !666, !tbaa !470
  %235 = icmp eq i8 %234, %155, !dbg !666
  br i1 %235, label %237, label %280, !dbg !666

; <label>:236:                                    ; preds = %215
  br i1 %218, label %237, label %280, !dbg !668

; <label>:237:                                    ; preds = %236, %232
  %238 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 0, i32 1, !dbg !669
  %239 = load i8, i8* %238, align 4, !dbg !669, !tbaa !670
  %240 = icmp eq i8 %239, %149, !dbg !669
  br i1 %240, label %241, label %280, !dbg !671

; <label>:241:                                    ; preds = %237
  %242 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0, !dbg !669
  %243 = load i32, i32* %242, align 8, !dbg !669, !tbaa !470
  %244 = icmp eq i32 %243, %151, !dbg !669
  br i1 %161, label %245, label %262, !dbg !671

; <label>:245:                                    ; preds = %241
  br i1 %244, label %246, label %280, !dbg !669

; <label>:246:                                    ; preds = %245
  %247 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1, !dbg !669
  %248 = load i32, i32* %247, align 4, !dbg !669, !tbaa !470
  %249 = icmp eq i32 %248, %154, !dbg !669
  br i1 %249, label %250, label %280, !dbg !669

; <label>:250:                                    ; preds = %246
  %251 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2, !dbg !669
  %252 = load i32, i32* %251, align 8, !dbg !669, !tbaa !470
  %253 = icmp eq i32 %252, %156, !dbg !669
  br i1 %253, label %254, label %280, !dbg !669

; <label>:254:                                    ; preds = %250
  %255 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3, !dbg !669
  %256 = load i32, i32* %255, align 4, !dbg !669, !tbaa !470
  %257 = icmp eq i32 %256, %157, !dbg !669
  br i1 %257, label %258, label %280, !dbg !669

; <label>:258:                                    ; preds = %254
  %259 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !669
  %260 = load i8, i8* %259, align 8, !dbg !669, !tbaa !470
  %261 = icmp eq i8 %260, %158, !dbg !669
  br i1 %261, label %263, label %280, !dbg !669

; <label>:262:                                    ; preds = %241
  br i1 %244, label %263, label %280, !dbg !671

; <label>:263:                                    ; preds = %258, %262
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %187, metadata !404, metadata !DIExpression()), !dbg !601
  %264 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !672
  %265 = load %struct.tcp_pcb*, %struct.tcp_pcb** %264, align 8, !dbg !672, !tbaa !676
  %266 = icmp eq %struct.tcp_pcb* %265, %186, !dbg !672
  br i1 %266, label %267, label %268, !dbg !677

; <label>:267:                                    ; preds = %263
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0)) #8, !dbg !678
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !681
  tail call void @ukplat_terminate(i32 3) #9, !dbg !681
  unreachable, !dbg !681

; <label>:268:                                    ; preds = %263
  %269 = icmp eq %struct.tcp_pcb* %187, null, !dbg !685
  br i1 %269, label %273, label %270, !dbg !687

; <label>:270:                                    ; preds = %268
  %271 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %187, i64 0, i32 6, !dbg !688
  store %struct.tcp_pcb* %265, %struct.tcp_pcb** %271, align 8, !dbg !690, !tbaa !676
  %272 = bitcast %struct.tcp_pcb** %264 to i64*, !dbg !691
  store i64 %140, i64* %272, align 8, !dbg !691, !tbaa !676
  store %struct.tcp_pcb* %186, %struct.tcp_pcb** @tcp_active_pcbs, align 8, !dbg !692, !tbaa !458
  br label %276, !dbg !693

; <label>:273:                                    ; preds = %268
  %274 = load i16, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 11), align 2, !dbg !694, !tbaa !696
  %275 = add i16 %274, 1, !dbg !694
  store i16 %275, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 11), align 2, !dbg !694, !tbaa !696
  br label %276

; <label>:276:                                    ; preds = %270, %273
  %277 = phi %struct.tcp_pcb* [ %138, %270 ], [ %265, %273 ], !dbg !697
  %278 = icmp eq %struct.tcp_pcb* %277, %186, !dbg !697
  br i1 %278, label %279, label %646, !dbg !700

; <label>:279:                                    ; preds = %276
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0)) #8, !dbg !701
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !704
  tail call void @ukplat_terminate(i32 3) #9, !dbg !704
  unreachable, !dbg !704

; <label>:280:                                    ; preds = %201, %206, %219, %220, %224, %228, %232, %236, %245, %246, %250, %254, %258, %262, %211, %237, %197
  %281 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !708
  call void @llvm.dbg.value(metadata %struct.tcp_pcb** %281, metadata !403, metadata !DIExpression(DW_OP_deref)), !dbg !602
  %282 = load %struct.tcp_pcb*, %struct.tcp_pcb** %281, align 8, !dbg !603, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %282, metadata !403, metadata !DIExpression()), !dbg !602
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %186, metadata !404, metadata !DIExpression()), !dbg !601
  %283 = icmp eq %struct.tcp_pcb* %282, null, !dbg !606
  br i1 %283, label %162, label %185, !dbg !606, !llvm.loop !709

; <label>:284:                                    ; preds = %413, %162
  %285 = load %struct.tcp_pcb_listen*, %struct.tcp_pcb_listen** getelementptr inbounds (%union.tcp_listen_pcbs_t, %union.tcp_listen_pcbs_t* @tcp_listen_pcbs, i64 0, i32 0), align 8, !dbg !711, !tbaa !470
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* null, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %285, metadata !405, metadata !DIExpression()), !dbg !714
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* null, metadata !406, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* null, metadata !407, metadata !DIExpression()), !dbg !431
  %286 = icmp eq %struct.tcp_pcb_listen* %285, null, !dbg !715
  %287 = ptrtoint %struct.tcp_pcb_listen* %285 to i64, !dbg !715
  br i1 %286, label %1213, label %288, !dbg !715

; <label>:288:                                    ; preds = %284
  %289 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8
  %290 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %289, i64 0, i32 1
  %291 = load %struct.netif*, %struct.netif** getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 1), align 8
  %292 = getelementptr inbounds %struct.netif, %struct.netif* %291, i64 0, i32 23
  %293 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 1), align 4
  %294 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 0), align 4
  %295 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 1), align 4
  %296 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 2), align 4
  %297 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 3), align 4
  %298 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 1), align 4
  %299 = icmp eq i8 %293, 6
  br label %417, !dbg !715

; <label>:300:                                    ; preds = %165, %413
  %301 = phi %struct.tcp_pcb* [ %163, %165 ], [ %415, %413 ]
  %302 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 8, !dbg !716
  %303 = load i32, i32* %302, align 8, !dbg !716, !tbaa !618
  %304 = icmp eq i32 %303, 10, !dbg !716
  br i1 %304, label %306, label %305, !dbg !720

; <label>:305:                                    ; preds = %300
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0)) #8, !dbg !721
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !724
  tail call void @ukplat_terminate(i32 3) #9, !dbg !724
  unreachable, !dbg !724

; <label>:306:                                    ; preds = %300
  %307 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 2, !dbg !728
  %308 = load i8, i8* %307, align 8, !dbg !728, !tbaa !648
  %309 = icmp eq i8 %308, 0, !dbg !730
  br i1 %309, label %314, label %310, !dbg !731

; <label>:310:                                    ; preds = %306
  %311 = load i8, i8* %169, align 8, !dbg !732, !tbaa !652
  %312 = add i8 %311, 1, !dbg !732
  %313 = icmp eq i8 %308, %312, !dbg !733
  br i1 %313, label %314, label %413, !dbg !734

; <label>:314:                                    ; preds = %310, %306
  %315 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 11, !dbg !735
  %316 = load i16, i16* %315, align 8, !dbg !735, !tbaa !657
  %317 = load i16, i16* %167, align 1, !dbg !737, !tbaa !562
  %318 = icmp eq i16 %316, %317, !dbg !738
  br i1 %318, label %319, label %413, !dbg !739

; <label>:319:                                    ; preds = %314
  %320 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 10, !dbg !740
  %321 = load i16, i16* %320, align 2, !dbg !740, !tbaa !662
  %322 = load i16, i16* %170, align 1, !dbg !741, !tbaa !567
  %323 = icmp eq i16 %321, %322, !dbg !742
  br i1 %323, label %324, label %413, !dbg !743

; <label>:324:                                    ; preds = %319
  %325 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 1, i32 1, !dbg !744
  %326 = load i8, i8* %325, align 4, !dbg !744, !tbaa !667
  %327 = icmp eq i8 %326, %171, !dbg !744
  br i1 %327, label %328, label %413, !dbg !745

; <label>:328:                                    ; preds = %324
  %329 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0, !dbg !744
  %330 = load i32, i32* %329, align 8, !dbg !744, !tbaa !470
  %331 = icmp eq i32 %330, %172, !dbg !744
  br i1 %183, label %332, label %349, !dbg !745

; <label>:332:                                    ; preds = %328
  br i1 %331, label %333, label %413, !dbg !744

; <label>:333:                                    ; preds = %332
  %334 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1, !dbg !744
  %335 = load i32, i32* %334, align 4, !dbg !744, !tbaa !470
  %336 = icmp eq i32 %335, %174, !dbg !744
  br i1 %336, label %337, label %413, !dbg !744

; <label>:337:                                    ; preds = %333
  %338 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2, !dbg !744
  %339 = load i32, i32* %338, align 8, !dbg !744, !tbaa !470
  %340 = icmp eq i32 %339, %176, !dbg !744
  br i1 %340, label %341, label %413, !dbg !744

; <label>:341:                                    ; preds = %337
  %342 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3, !dbg !744
  %343 = load i32, i32* %342, align 4, !dbg !744, !tbaa !470
  %344 = icmp eq i32 %343, %177, !dbg !744
  br i1 %344, label %345, label %413, !dbg !744

; <label>:345:                                    ; preds = %341
  %346 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 1, i32 0, i32 0, i32 1, !dbg !744
  %347 = load i8, i8* %346, align 8, !dbg !744, !tbaa !470
  %348 = icmp eq i8 %347, %179, !dbg !744
  br i1 %348, label %350, label %413, !dbg !744

; <label>:349:                                    ; preds = %328
  br i1 %331, label %350, label %413, !dbg !745

; <label>:350:                                    ; preds = %349, %345
  %351 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 0, i32 1, !dbg !746
  %352 = load i8, i8* %351, align 4, !dbg !746, !tbaa !670
  %353 = icmp eq i8 %352, %173, !dbg !746
  br i1 %353, label %354, label %413, !dbg !747

; <label>:354:                                    ; preds = %350
  %355 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0, !dbg !746
  %356 = load i32, i32* %355, align 8, !dbg !746, !tbaa !470
  %357 = icmp eq i32 %356, %175, !dbg !746
  br i1 %184, label %358, label %375, !dbg !747

; <label>:358:                                    ; preds = %354
  br i1 %357, label %359, label %413, !dbg !746

; <label>:359:                                    ; preds = %358
  %360 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1, !dbg !746
  %361 = load i32, i32* %360, align 4, !dbg !746, !tbaa !470
  %362 = icmp eq i32 %361, %178, !dbg !746
  br i1 %362, label %363, label %413, !dbg !746

; <label>:363:                                    ; preds = %359
  %364 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2, !dbg !746
  %365 = load i32, i32* %364, align 8, !dbg !746, !tbaa !470
  %366 = icmp eq i32 %365, %180, !dbg !746
  br i1 %366, label %367, label %413, !dbg !746

; <label>:367:                                    ; preds = %363
  %368 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3, !dbg !746
  %369 = load i32, i32* %368, align 4, !dbg !746, !tbaa !470
  %370 = icmp eq i32 %369, %181, !dbg !746
  br i1 %370, label %371, label %413, !dbg !746

; <label>:371:                                    ; preds = %367
  %372 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !746
  %373 = load i8, i8* %372, align 8, !dbg !746, !tbaa !470
  %374 = icmp eq i8 %373, %182, !dbg !746
  br i1 %374, label %376, label %413, !dbg !746

; <label>:375:                                    ; preds = %354
  br i1 %357, label %376, label %413, !dbg !747

; <label>:376:                                    ; preds = %375, %371
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %301, metadata !748, metadata !DIExpression()) #7, !dbg !753
  %377 = zext i8 %129 to i32, !dbg !757
  %378 = and i32 %377, 4, !dbg !759
  %379 = icmp eq i32 %378, 0, !dbg !759
  br i1 %379, label %380, label %411, !dbg !760

; <label>:380:                                    ; preds = %376
  %381 = and i32 %377, 2, !dbg !761
  %382 = icmp eq i32 %381, 0, !dbg !761
  br i1 %382, label %398, label %383, !dbg !763

; <label>:383:                                    ; preds = %380
  %384 = load i32, i32* @seqno, align 4, !dbg !764, !tbaa !577
  %385 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 17, !dbg !764
  %386 = load i32, i32* %385, align 4, !dbg !764, !tbaa !767
  %387 = sub i32 %384, %386, !dbg !764
  %388 = icmp sgt i32 %387, -1, !dbg !764
  br i1 %388, label %389, label %404, !dbg !764

; <label>:389:                                    ; preds = %383
  %390 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 18, !dbg !764
  %391 = load i32, i32* %390, align 8, !dbg !764, !tbaa !768
  %392 = sub i32 %387, %391, !dbg !764
  %393 = icmp slt i32 %392, 1, !dbg !764
  br i1 %393, label %394, label %404, !dbg !769

; <label>:394:                                    ; preds = %389
  %395 = load i32, i32* @ackno, align 4, !dbg !770, !tbaa !577
  %396 = zext i16 %137 to i32, !dbg !772
  %397 = add i32 %384, %396, !dbg !773
  tail call void @tcp_rst(%struct.tcp_pcb* nonnull %301, i32 %395, i32 %397, %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6), %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5), i16 zeroext %321, i16 zeroext %316) #10, !dbg !774
  br label %411, !dbg !775

; <label>:398:                                    ; preds = %380
  %399 = and i32 %377, 1, !dbg !776
  %400 = icmp eq i32 %399, 0, !dbg !776
  br i1 %400, label %404, label %401, !dbg !778

; <label>:401:                                    ; preds = %398
  %402 = load i32, i32* @tcp_ticks, align 4, !dbg !779, !tbaa !577
  %403 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 16, !dbg !781
  store i32 %402, i32* %403, align 8, !dbg !782, !tbaa !783
  br label %404, !dbg !784

; <label>:404:                                    ; preds = %401, %398, %389, %383
  %405 = icmp eq i16 %137, 0, !dbg !785
  br i1 %405, label %411, label %406, !dbg !787

; <label>:406:                                    ; preds = %404
  %407 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 12, !dbg !788
  %408 = load i16, i16* %407, align 2, !dbg !788, !tbaa !791
  %409 = or i16 %408, 2, !dbg !788
  store i16 %409, i16* %407, align 2, !dbg !788, !tbaa !791
  %410 = tail call signext i8 @tcp_output(%struct.tcp_pcb* nonnull %301) #10, !dbg !792
  br label %411, !dbg !793

; <label>:411:                                    ; preds = %376, %394, %404, %406
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !794
  %412 = tail call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %0) #10, !dbg !795
  br label %1244, !dbg !796

; <label>:413:                                    ; preds = %310, %350, %324, %314, %319, %332, %333, %337, %341, %345, %349, %358, %359, %363, %367, %371, %375
  %414 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %301, i64 0, i32 6, !dbg !797
  call void @llvm.dbg.value(metadata %struct.tcp_pcb** %414, metadata !403, metadata !DIExpression(DW_OP_deref)), !dbg !602
  %415 = load %struct.tcp_pcb*, %struct.tcp_pcb** %414, align 8, !dbg !607, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %415, metadata !403, metadata !DIExpression()), !dbg !602
  %416 = icmp eq %struct.tcp_pcb* %415, null, !dbg !612
  br i1 %416, label %284, label %300, !dbg !613, !llvm.loop !798

; <label>:417:                                    ; preds = %288, %481
  %418 = phi %struct.tcp_pcb_listen* [ %285, %288 ], [ %487, %481 ]
  %419 = phi %struct.tcp_pcb* [ null, %288 ], [ %485, %481 ]
  %420 = phi %struct.tcp_pcb_listen* [ null, %288 ], [ %418, %481 ]
  %421 = phi %struct.tcp_pcb* [ null, %288 ], [ %484, %481 ]
  %422 = phi %struct.tcp_pcb_listen* [ null, %288 ], [ %483, %481 ]
  %423 = phi %struct.tcp_pcb_listen* [ null, %288 ], [ %482, %481 ]
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %419, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %421, metadata !406, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %423, metadata !407, metadata !DIExpression()), !dbg !431
  %424 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 2, !dbg !800
  %425 = load i8, i8* %424, align 8, !dbg !800, !tbaa !803
  %426 = icmp eq i8 %425, 0, !dbg !805
  br i1 %426, label %431, label %427, !dbg !806

; <label>:427:                                    ; preds = %417
  %428 = load i8, i8* %292, align 8, !dbg !807, !tbaa !652
  %429 = add i8 %428, 1, !dbg !807
  %430 = icmp eq i8 %425, %429, !dbg !808
  br i1 %430, label %431, label %481, !dbg !809

; <label>:431:                                    ; preds = %427, %417
  %432 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 10, !dbg !810
  %433 = load i16, i16* %432, align 2, !dbg !810, !tbaa !812
  %434 = load i16, i16* %290, align 1, !dbg !813, !tbaa !567
  %435 = icmp eq i16 %433, %434, !dbg !814
  br i1 %435, label %436, label %481, !dbg !815

; <label>:436:                                    ; preds = %431
  %437 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 0, i32 1, !dbg !816
  %438 = load i8, i8* %437, align 4, !dbg !816, !tbaa !819
  %439 = icmp eq i8 %438, 46, !dbg !816
  br i1 %439, label %481, label %440, !dbg !820

; <label>:440:                                    ; preds = %436
  %441 = icmp eq i8 %438, %293, !dbg !821
  br i1 %441, label %442, label %481, !dbg !823

; <label>:442:                                    ; preds = %440
  %443 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0, !dbg !824
  %444 = load i32, i32* %443, align 8, !dbg !824, !tbaa !470
  %445 = icmp eq i32 %444, %294, !dbg !824
  br i1 %299, label %446, label %463, !dbg !827

; <label>:446:                                    ; preds = %442
  br i1 %445, label %447, label %464, !dbg !824

; <label>:447:                                    ; preds = %446
  %448 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1, !dbg !824
  %449 = load i32, i32* %448, align 4, !dbg !824, !tbaa !470
  %450 = icmp eq i32 %449, %295, !dbg !824
  br i1 %450, label %451, label %464, !dbg !824

; <label>:451:                                    ; preds = %447
  %452 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2, !dbg !824
  %453 = load i32, i32* %452, align 8, !dbg !824, !tbaa !470
  %454 = icmp eq i32 %453, %296, !dbg !824
  br i1 %454, label %455, label %464, !dbg !824

; <label>:455:                                    ; preds = %451
  %456 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3, !dbg !824
  %457 = load i32, i32* %456, align 4, !dbg !824, !tbaa !470
  %458 = icmp eq i32 %457, %297, !dbg !824
  br i1 %458, label %459, label %464, !dbg !824

; <label>:459:                                    ; preds = %455
  %460 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !824
  %461 = load i8, i8* %460, align 8, !dbg !824, !tbaa !470
  %462 = icmp eq i8 %461, %298, !dbg !824
  br i1 %462, label %491, label %464, !dbg !824

; <label>:463:                                    ; preds = %442
  br i1 %445, label %491, label %478, !dbg !827

; <label>:464:                                    ; preds = %459, %455, %451, %447, %446
  %465 = icmp eq i32 %444, 0, !dbg !828
  br i1 %465, label %466, label %481, !dbg !828

; <label>:466:                                    ; preds = %464
  %467 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1, !dbg !828
  %468 = load i32, i32* %467, align 4, !dbg !828, !tbaa !470
  %469 = icmp eq i32 %468, 0, !dbg !828
  br i1 %469, label %470, label %481, !dbg !828

; <label>:470:                                    ; preds = %466
  %471 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2, !dbg !828
  %472 = load i32, i32* %471, align 8, !dbg !828, !tbaa !470
  %473 = icmp eq i32 %472, 0, !dbg !828
  br i1 %473, label %474, label %481, !dbg !828

; <label>:474:                                    ; preds = %470
  %475 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3, !dbg !828
  %476 = load i32, i32* %475, align 4, !dbg !828, !tbaa !470
  %477 = icmp eq i32 %476, 0, !dbg !828
  br i1 %477, label %480, label %481, !dbg !828

; <label>:478:                                    ; preds = %463
  %479 = icmp eq i32 %444, 0, !dbg !828
  br i1 %479, label %480, label %481, !dbg !830

; <label>:480:                                    ; preds = %478, %474
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %418, metadata !407, metadata !DIExpression()), !dbg !431
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %419, metadata !406, metadata !DIExpression()), !dbg !430
  br label %481, !dbg !831

; <label>:481:                                    ; preds = %431, %440, %464, %466, %470, %474, %478, %480, %436, %427
  %482 = phi %struct.tcp_pcb_listen* [ %423, %427 ], [ %418, %480 ], [ %423, %474 ], [ %423, %470 ], [ %423, %466 ], [ %423, %464 ], [ %423, %478 ], [ %423, %440 ], [ %423, %431 ], [ %418, %436 ], !dbg !833
  %483 = phi %struct.tcp_pcb_listen* [ %422, %427 ], [ %420, %480 ], [ %422, %474 ], [ %422, %470 ], [ %422, %466 ], [ %422, %464 ], [ %422, %478 ], [ %422, %440 ], [ %422, %431 ], [ %420, %436 ], !dbg !833
  %484 = phi %struct.tcp_pcb* [ %421, %427 ], [ %419, %480 ], [ %421, %474 ], [ %421, %470 ], [ %421, %466 ], [ %421, %464 ], [ %421, %478 ], [ %421, %440 ], [ %421, %431 ], [ %419, %436 ], !dbg !833
  %485 = bitcast %struct.tcp_pcb_listen* %418 to %struct.tcp_pcb*, !dbg !835
  %486 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %418, i64 0, i32 6, !dbg !836
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen** %486, metadata !405, metadata !DIExpression(DW_OP_deref)), !dbg !714
  %487 = load %struct.tcp_pcb_listen*, %struct.tcp_pcb_listen** %486, align 8, !dbg !711, !tbaa !470
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %485, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %487, metadata !405, metadata !DIExpression()), !dbg !714
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %484, metadata !406, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %482, metadata !407, metadata !DIExpression()), !dbg !431
  %488 = icmp eq %struct.tcp_pcb_listen* %487, null, !dbg !715
  br i1 %488, label %489, label %417, !dbg !715, !llvm.loop !837

; <label>:489:                                    ; preds = %481
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %482, metadata !407, metadata !DIExpression()), !dbg !431
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %484, metadata !406, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %482, metadata !407, metadata !DIExpression()), !dbg !431
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %484, metadata !406, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %482, metadata !407, metadata !DIExpression()), !dbg !431
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %484, metadata !406, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %482, metadata !407, metadata !DIExpression()), !dbg !431
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %484, metadata !406, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %482, metadata !407, metadata !DIExpression()), !dbg !431
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %484, metadata !406, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %484, metadata !404, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* %482, metadata !405, metadata !DIExpression()), !dbg !714
  %490 = icmp eq %struct.tcp_pcb_listen* %482, null, !dbg !839
  br i1 %490, label %1213, label %491, !dbg !841

; <label>:491:                                    ; preds = %463, %459, %489
  %492 = phi %struct.tcp_pcb* [ %484, %489 ], [ %419, %459 ], [ %419, %463 ]
  %493 = phi %struct.tcp_pcb_listen* [ %483, %489 ], [ %420, %459 ], [ %420, %463 ]
  %494 = phi %struct.tcp_pcb_listen* [ %482, %489 ], [ %418, %459 ], [ %418, %463 ]
  %495 = icmp eq %struct.tcp_pcb* %492, null, !dbg !842
  br i1 %495, label %502, label %496, !dbg !845

; <label>:496:                                    ; preds = %491
  %497 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %494, i64 0, i32 6, !dbg !846
  %498 = bitcast %struct.tcp_pcb_listen** %497 to i64*, !dbg !846
  %499 = load i64, i64* %498, align 8, !dbg !846, !tbaa !848
  %500 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %493, i64 0, i32 6, !dbg !849
  %501 = bitcast %struct.tcp_pcb_listen** %500 to i64*, !dbg !850
  store i64 %499, i64* %501, align 8, !dbg !850, !tbaa !848
  store i64 %287, i64* %498, align 8, !dbg !851, !tbaa !848
  store %struct.tcp_pcb_listen* %494, %struct.tcp_pcb_listen** getelementptr inbounds (%union.tcp_listen_pcbs_t, %union.tcp_listen_pcbs_t* @tcp_listen_pcbs, i64 0, i32 0), align 8, !dbg !852, !tbaa !470
  br label %505, !dbg !853

; <label>:502:                                    ; preds = %491
  %503 = load i16, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 11), align 2, !dbg !854, !tbaa !696
  %504 = add i16 %503, 1, !dbg !854
  store i16 %504, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 11), align 2, !dbg !854, !tbaa !696
  br label %505

; <label>:505:                                    ; preds = %502, %496
  call void @llvm.dbg.value(metadata %struct.tcp_pcb_listen* undef, metadata !856, metadata !DIExpression()) #7, !dbg !870
  %506 = zext i8 %129 to i32, !dbg !873
  %507 = and i32 %506, 4, !dbg !875
  %508 = icmp eq i32 %507, 0, !dbg !875
  br i1 %508, label %509, label %644, !dbg !876

; <label>:509:                                    ; preds = %505
  %510 = and i32 %506, 16, !dbg !877
  %511 = icmp eq i32 %510, 0, !dbg !877
  br i1 %511, label %523, label %512, !dbg !878

; <label>:512:                                    ; preds = %509
  %513 = bitcast %struct.tcp_pcb_listen* %494 to %struct.tcp_pcb*, !dbg !879
  %514 = load i32, i32* @ackno, align 4, !dbg !881, !tbaa !577
  %515 = load i32, i32* @seqno, align 4, !dbg !882, !tbaa !577
  %516 = zext i16 %137 to i32, !dbg !883
  %517 = add i32 %515, %516, !dbg !884
  %518 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !885, !tbaa !458
  %519 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %518, i64 0, i32 1, !dbg !886
  %520 = load i16, i16* %519, align 1, !dbg !886, !tbaa !567
  %521 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %518, i64 0, i32 0, !dbg !887
  %522 = load i16, i16* %521, align 1, !dbg !887, !tbaa !562
  tail call void @tcp_rst(%struct.tcp_pcb* %513, i32 %514, i32 %517, %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6), %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5), i16 zeroext %520, i16 zeroext %522) #10, !dbg !888
  br label %644, !dbg !889

; <label>:523:                                    ; preds = %509
  %524 = and i32 %506, 2, !dbg !890
  %525 = icmp eq i32 %524, 0, !dbg !890
  br i1 %525, label %644, label %526, !dbg !891

; <label>:526:                                    ; preds = %523
  %527 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %494, i64 0, i32 9, !dbg !892
  %528 = load i8, i8* %527, align 4, !dbg !892, !tbaa !893
  %529 = tail call %struct.tcp_pcb* @tcp_alloc(i8 zeroext %528) #10, !dbg !894
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %529, metadata !861, metadata !DIExpression()) #7, !dbg !895
  %530 = icmp eq %struct.tcp_pcb* %529, null, !dbg !896
  br i1 %530, label %531, label %541, !dbg !897

; <label>:531:                                    ; preds = %526
  %532 = load i16, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 6), align 2, !dbg !898, !tbaa !899
  %533 = add i16 %532, 1, !dbg !898
  store i16 %533, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 6), align 2, !dbg !898, !tbaa !899
  %534 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %494, i64 0, i32 11, !dbg !900
  %535 = load i8 (i8*, %struct.tcp_pcb*, i8)*, i8 (i8*, %struct.tcp_pcb*, i8)** %534, align 8, !dbg !900, !tbaa !903
  %536 = icmp eq i8 (i8*, %struct.tcp_pcb*, i8)* %535, null, !dbg !900
  br i1 %536, label %644, label %537, !dbg !904

; <label>:537:                                    ; preds = %531
  %538 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %494, i64 0, i32 7, !dbg !900
  %539 = load i8*, i8** %538, align 8, !dbg !900, !tbaa !905
  %540 = tail call signext i8 %535(i8* %539, %struct.tcp_pcb* null, i8 signext -1) #10, !dbg !900
  call void @llvm.dbg.value(metadata i8 %540, metadata !864, metadata !DIExpression()) #7, !dbg !906
  br label %644, !dbg !900

; <label>:541:                                    ; preds = %526
  %542 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 1), align 4, !dbg !907, !tbaa !466
  %543 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 1, !dbg !907
  store i8 %542, i8* %543, align 4, !dbg !907, !tbaa !670
  %544 = icmp eq i8 %542, 6, !dbg !910
  %545 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 0), align 4, !dbg !912, !tbaa !470
  %546 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0, !dbg !912
  store i32 %545, i32* %546, align 8, !dbg !912, !tbaa !470
  br i1 %544, label %547, label %555, !dbg !915

; <label>:547:                                    ; preds = %541
  %548 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 1), align 4, !dbg !912, !tbaa !470
  %549 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1, !dbg !912
  store i32 %548, i32* %549, align 4, !dbg !912, !tbaa !470
  %550 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 2), align 4, !dbg !912, !tbaa !470
  %551 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2, !dbg !912
  store i32 %550, i32* %551, align 8, !dbg !912, !tbaa !470
  %552 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 0, i64 3), align 4, !dbg !912, !tbaa !470
  %553 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3, !dbg !912
  store i32 %552, i32* %553, align 4, !dbg !912, !tbaa !470
  %554 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6, i32 0, i32 0, i32 1), align 4, !dbg !912, !tbaa !470
  br label %559, !dbg !916

; <label>:555:                                    ; preds = %541
  %556 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3, !dbg !917
  store i32 0, i32* %556, align 4, !dbg !917, !tbaa !470
  %557 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2, !dbg !917
  store i32 0, i32* %557, align 8, !dbg !917, !tbaa !470
  %558 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1, !dbg !917
  store i32 0, i32* %558, align 4, !dbg !917, !tbaa !470
  br label %559

; <label>:559:                                    ; preds = %555, %547
  %560 = phi i8 [ 0, %555 ], [ %554, %547 ]
  %561 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !917
  store i8 %560, i8* %561, align 8, !dbg !917
  %562 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 1), align 4, !dbg !920, !tbaa !923
  %563 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 1, !dbg !920
  %564 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 1, i32 1, !dbg !920
  store i8 %562, i8* %564, align 4, !dbg !920, !tbaa !667
  %565 = icmp eq i8 %562, 6, !dbg !924
  %566 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 0), align 4, !dbg !926, !tbaa !470
  %567 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %563, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !926
  store i32 %566, i32* %567, align 8, !dbg !926, !tbaa !470
  br i1 %565, label %568, label %576, !dbg !929

; <label>:568:                                    ; preds = %559
  %569 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 1), align 4, !dbg !926, !tbaa !470
  %570 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1, !dbg !926
  store i32 %569, i32* %570, align 4, !dbg !926, !tbaa !470
  %571 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 2), align 4, !dbg !926, !tbaa !470
  %572 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2, !dbg !926
  store i32 %571, i32* %572, align 8, !dbg !926, !tbaa !470
  %573 = load i32, i32* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 0, i64 3), align 4, !dbg !926, !tbaa !470
  %574 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3, !dbg !926
  store i32 %573, i32* %574, align 4, !dbg !926, !tbaa !470
  %575 = load i8, i8* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0, i32 1), align 4, !dbg !926, !tbaa !470
  br label %580, !dbg !930

; <label>:576:                                    ; preds = %559
  %577 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3, !dbg !931
  store i32 0, i32* %577, align 4, !dbg !931, !tbaa !470
  %578 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2, !dbg !931
  store i32 0, i32* %578, align 8, !dbg !931, !tbaa !470
  %579 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1, !dbg !931
  store i32 0, i32* %579, align 4, !dbg !931, !tbaa !470
  br label %580

; <label>:580:                                    ; preds = %576, %568
  %581 = phi i8 [ 0, %576 ], [ %575, %568 ]
  %582 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 1, i32 0, i32 0, i32 1, !dbg !931
  store i8 %581, i8* %582, align 8, !dbg !931
  %583 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %494, i64 0, i32 10, !dbg !934
  %584 = load i16, i16* %583, align 2, !dbg !934, !tbaa !812
  %585 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 10, !dbg !935
  store i16 %584, i16* %585, align 2, !dbg !936, !tbaa !662
  %586 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !937, !tbaa !458
  %587 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %586, i64 0, i32 0, !dbg !938
  %588 = load i16, i16* %587, align 1, !dbg !938, !tbaa !562
  %589 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 11, !dbg !939
  store i16 %588, i16* %589, align 8, !dbg !940, !tbaa !657
  %590 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 8, !dbg !941
  store i32 3, i32* %590, align 8, !dbg !942, !tbaa !618
  %591 = load i32, i32* @seqno, align 4, !dbg !943, !tbaa !577
  %592 = add i32 %591, 1, !dbg !944
  %593 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 17, !dbg !945
  store i32 %592, i32* %593, align 4, !dbg !946, !tbaa !767
  %594 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 20, !dbg !947
  store i32 %592, i32* %594, align 8, !dbg !948, !tbaa !949
  %595 = tail call i32 @tcp_next_iss(%struct.tcp_pcb* nonnull %529) #10, !dbg !950
  call void @llvm.dbg.value(metadata i32 %595, metadata !862, metadata !DIExpression()) #7, !dbg !951
  %596 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 36, !dbg !952
  store i32 %595, i32* %596, align 8, !dbg !953, !tbaa !954
  %597 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 34, !dbg !955
  store i32 %595, i32* %597, align 8, !dbg !956, !tbaa !957
  %598 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 30, !dbg !958
  store i32 %595, i32* %598, align 8, !dbg !959, !tbaa !960
  %599 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 37, !dbg !961
  store i32 %595, i32* %599, align 4, !dbg !962, !tbaa !963
  %600 = load i32, i32* @seqno, align 4, !dbg !964, !tbaa !577
  %601 = add i32 %600, -1, !dbg !965
  %602 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 35, !dbg !966
  store i32 %601, i32* %602, align 4, !dbg !967, !tbaa !968
  %603 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %494, i64 0, i32 7, !dbg !969
  %604 = bitcast i8** %603 to i64*, !dbg !969
  %605 = load i64, i64* %604, align 8, !dbg !969, !tbaa !905
  %606 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 7, !dbg !970
  %607 = bitcast i8** %606 to i64*, !dbg !971
  store i64 %605, i64* %607, align 8, !dbg !971, !tbaa !972
  %608 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 48, !dbg !973
  store %struct.tcp_pcb_listen* %494, %struct.tcp_pcb_listen** %608, align 8, !dbg !974, !tbaa !975
  %609 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %494, i64 0, i32 3, !dbg !976
  %610 = load i8, i8* %609, align 1, !dbg !976, !tbaa !977
  %611 = and i8 %610, 12, !dbg !978
  %612 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 3, !dbg !979
  store i8 %611, i8* %612, align 1, !dbg !980, !tbaa !981
  %613 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %494, i64 0, i32 2, !dbg !982
  %614 = load i8, i8* %613, align 8, !dbg !982, !tbaa !803
  %615 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 2, !dbg !983
  store i8 %614, i8* %615, align 8, !dbg !984, !tbaa !648
  %616 = load i64, i64* bitcast (%struct.tcp_pcb** @tcp_active_pcbs to i64*), align 8, !dbg !985, !tbaa !458
  %617 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 6, !dbg !985
  %618 = bitcast %struct.tcp_pcb** %617 to i64*, !dbg !985
  store i64 %616, i64* %618, align 8, !dbg !985, !tbaa !676
  store %struct.tcp_pcb* %529, %struct.tcp_pcb** @tcp_active_pcbs, align 8, !dbg !985, !tbaa !458
  tail call void @tcp_timer_needed() #10, !dbg !985
  store i8 1, i8* @tcp_active_pcbs_changed, align 1, !dbg !988, !tbaa !470
  tail call fastcc void @tcp_parseopt(%struct.tcp_pcb* nonnull %529) #10, !dbg !989
  %619 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !990, !tbaa !458
  %620 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %619, i64 0, i32 5, !dbg !991
  %621 = load i16, i16* %620, align 1, !dbg !991, !tbaa !585
  %622 = zext i16 %621 to i32, !dbg !990
  %623 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 38, !dbg !992
  store i32 %622, i32* %623, align 8, !dbg !993, !tbaa !994
  %624 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 39, !dbg !995
  store i32 %622, i32* %624, align 4, !dbg !996, !tbaa !997
  %625 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 22, !dbg !998
  %626 = load i16, i16* %625, align 2, !dbg !998, !tbaa !999
  %627 = load i8, i8* %564, align 4, !dbg !998, !tbaa !667
  %628 = icmp eq i8 %627, 6, !dbg !998
  br i1 %628, label %629, label %633, !dbg !998

; <label>:629:                                    ; preds = %580
  %630 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %529, i64 0, i32 0, i32 0, i32 0, !dbg !998
  %631 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %563, i64 0, i32 0, i32 0, !dbg !998
  %632 = tail call %struct.netif* @ip6_route(%struct.ip6_addr* %630, %struct.ip6_addr* nonnull %631) #10, !dbg !998
  br label %636, !dbg !998

; <label>:633:                                    ; preds = %580
  %634 = bitcast %struct.ip_addr* %563 to %struct.ip4_addr*, !dbg !998
  %635 = tail call %struct.netif* @ip4_route(%struct.ip4_addr* nonnull %634) #10, !dbg !998
  br label %636, !dbg !998

; <label>:636:                                    ; preds = %633, %629
  %637 = phi %struct.netif* [ %632, %629 ], [ %635, %633 ], !dbg !998
  %638 = tail call zeroext i16 @tcp_eff_send_mss_netif(i16 zeroext %626, %struct.netif* %637, %struct.ip_addr* nonnull %563) #10, !dbg !998
  store i16 %638, i16* %625, align 2, !dbg !1000, !tbaa !999
  %639 = tail call signext i8 @tcp_enqueue_flags(%struct.tcp_pcb* nonnull %529, i8 zeroext 18) #10, !dbg !1001
  call void @llvm.dbg.value(metadata i8 %639, metadata !863, metadata !DIExpression()) #7, !dbg !1002
  %640 = icmp eq i8 %639, 0, !dbg !1003
  br i1 %640, label %642, label %641, !dbg !1005

; <label>:641:                                    ; preds = %636
  tail call void @tcp_abandon(%struct.tcp_pcb* nonnull %529, i32 0) #10, !dbg !1006
  br label %644, !dbg !1008

; <label>:642:                                    ; preds = %636
  %643 = tail call signext i8 @tcp_output(%struct.tcp_pcb* nonnull %529) #10, !dbg !1009
  br label %644, !dbg !1010

; <label>:644:                                    ; preds = %505, %512, %523, %531, %537, %641, %642
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1011
  %645 = tail call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %0) #10, !dbg !1012
  br label %1244, !dbg !1013

; <label>:646:                                    ; preds = %276
  store %struct.tcp_seg* null, %struct.tcp_seg** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 0), align 8, !dbg !1014, !tbaa !1015
  store i16 %130, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !1017, !tbaa !1018
  store %struct.pbuf* %0, %struct.pbuf** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 1), align 8, !dbg !1019, !tbaa !1020
  store i64 %159, i64* bitcast (%struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4) to i64*), align 8, !dbg !1021, !tbaa !1022
  store %struct.pbuf* null, %struct.pbuf** @recv_data, align 8, !dbg !1023, !tbaa !458
  store i8 0, i8* @recv_flags, align 1, !dbg !1024, !tbaa !470
  store i32 0, i32* @recv_acked, align 4, !dbg !1025, !tbaa !577
  %647 = and i8 %128, 8, !dbg !1026
  %648 = icmp eq i8 %647, 0, !dbg !1026
  br i1 %648, label %653, label %649, !dbg !1028

; <label>:649:                                    ; preds = %646
  %650 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %0, i64 0, i32 5, !dbg !1029
  %651 = load i8, i8* %650, align 1, !dbg !1031, !tbaa !1032
  %652 = or i8 %651, 1, !dbg !1031
  store i8 %652, i8* %650, align 1, !dbg !1031, !tbaa !1032
  br label %653, !dbg !1033

; <label>:653:                                    ; preds = %646, %649
  %654 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 47, !dbg !1034
  %655 = load %struct.pbuf*, %struct.pbuf** %654, align 8, !dbg !1034, !tbaa !1036
  %656 = icmp eq %struct.pbuf* %655, null, !dbg !1037
  br i1 %656, label %677, label %657, !dbg !1038

; <label>:657:                                    ; preds = %653
  %658 = tail call signext i8 @tcp_process_refused_data(%struct.tcp_pcb* nonnull %186) #10, !dbg !1039
  %659 = icmp eq i8 %658, -13, !dbg !1042
  br i1 %659, label %668, label %660, !dbg !1043

; <label>:660:                                    ; preds = %657
  %661 = load %struct.pbuf*, %struct.pbuf** %654, align 8, !dbg !1044, !tbaa !1036
  %662 = icmp eq %struct.pbuf* %661, null, !dbg !1045
  %663 = load i16, i16* @tcplen, align 2, !dbg !1046
  %664 = icmp eq i16 %663, 0, !dbg !1047
  %665 = or i1 %662, %664, !dbg !1048
  br i1 %665, label %666, label %668, !dbg !1048

; <label>:666:                                    ; preds = %660
  %667 = load i8, i8* @flags, align 1, !dbg !1049, !tbaa !470
  br label %677, !dbg !1048

; <label>:668:                                    ; preds = %660, %657
  %669 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 19, !dbg !1084
  %670 = load i32, i32* %669, align 4, !dbg !1084, !tbaa !1087
  %671 = icmp eq i32 %670, 0, !dbg !1088
  br i1 %671, label %672, label %674, !dbg !1089

; <label>:672:                                    ; preds = %668
  %673 = tail call signext i8 @tcp_send_empty_ack(%struct.tcp_pcb* nonnull %186) #10, !dbg !1090
  br label %674, !dbg !1092

; <label>:674:                                    ; preds = %672, %668
  %675 = load i16, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 3), align 2, !dbg !1093, !tbaa !1094
  %676 = add i16 %675, 1, !dbg !1093
  store i16 %676, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 3), align 2, !dbg !1093, !tbaa !1094
  br label %1208, !dbg !1095

; <label>:677:                                    ; preds = %666, %653
  %678 = phi i8 [ %667, %666 ], [ %129, %653 ], !dbg !1049
  store %struct.tcp_pcb* %186, %struct.tcp_pcb** @tcp_input_pcb, align 8, !dbg !1096, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* undef, metadata !1055, metadata !DIExpression()) #7, !dbg !1097
  call void @llvm.dbg.value(metadata i8 0, metadata !1057, metadata !DIExpression()) #7, !dbg !1098
  call void @llvm.dbg.value(metadata i8 0, metadata !1058, metadata !DIExpression()) #7, !dbg !1099
  %679 = zext i8 %678 to i32, !dbg !1049
  %680 = and i32 %679, 4, !dbg !1100
  %681 = icmp eq i32 %680, 0, !dbg !1100
  br i1 %681, label %717, label %682, !dbg !1101

; <label>:682:                                    ; preds = %677
  %683 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 8, !dbg !1102
  %684 = load i32, i32* %683, align 8, !dbg !1102, !tbaa !618
  %685 = icmp eq i32 %684, 2, !dbg !1105
  br i1 %685, label %686, label %691, !dbg !1106

; <label>:686:                                    ; preds = %682
  %687 = load i32, i32* @ackno, align 4, !dbg !1107, !tbaa !577
  %688 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 34, !dbg !1110
  %689 = load i32, i32* %688, align 8, !dbg !1110, !tbaa !957
  %690 = icmp eq i32 %687, %689, !dbg !1111
  br i1 %690, label %711, label %1078, !dbg !1112

; <label>:691:                                    ; preds = %682
  %692 = load i32, i32* @seqno, align 4, !dbg !1113, !tbaa !577
  %693 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 17, !dbg !1116
  %694 = load i32, i32* %693, align 4, !dbg !1116, !tbaa !767
  %695 = icmp eq i32 %692, %694, !dbg !1117
  br i1 %695, label %708, label %696, !dbg !1118

; <label>:696:                                    ; preds = %691
  %697 = sub i32 %692, %694, !dbg !1119
  %698 = icmp sgt i32 %697, -1, !dbg !1119
  br i1 %698, label %699, label %1078, !dbg !1119

; <label>:699:                                    ; preds = %696
  %700 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 18, !dbg !1119
  %701 = load i32, i32* %700, align 8, !dbg !1119, !tbaa !768
  %702 = sub i32 %697, %701, !dbg !1119
  %703 = icmp slt i32 %702, 1, !dbg !1119
  br i1 %703, label %704, label %1078, !dbg !1121

; <label>:704:                                    ; preds = %699
  %705 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 12, !dbg !1122
  %706 = load i16, i16* %705, align 2, !dbg !1122, !tbaa !791
  %707 = or i16 %706, 2, !dbg !1122
  store i16 %707, i16* %705, align 2, !dbg !1122, !tbaa !791
  br label %1078

; <label>:708:                                    ; preds = %691
  %709 = icmp eq i32 %684, 0, !dbg !1125
  br i1 %709, label %710, label %711, !dbg !1130

; <label>:710:                                    ; preds = %708
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !1131
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !1134
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1134
  unreachable, !dbg !1134

; <label>:711:                                    ; preds = %708, %686
  %712 = load i8, i8* @recv_flags, align 1, !dbg !1138, !tbaa !470
  %713 = or i8 %712, 8, !dbg !1138
  store i8 %713, i8* @recv_flags, align 1, !dbg !1138, !tbaa !470
  %714 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 12, !dbg !1139
  %715 = load i16, i16* %714, align 2, !dbg !1139, !tbaa !791
  %716 = and i16 %715, -2, !dbg !1139
  store i16 %716, i16* %714, align 2, !dbg !1139, !tbaa !791
  br label %1078, !dbg !1141

; <label>:717:                                    ; preds = %677
  %718 = and i32 %679, 2, !dbg !1142
  %719 = icmp eq i32 %718, 0, !dbg !1142
  br i1 %719, label %729, label %720, !dbg !1144

; <label>:720:                                    ; preds = %717
  %721 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 8, !dbg !1145
  %722 = load i32, i32* %721, align 8, !dbg !1145, !tbaa !618
  %723 = and i32 %722, -2, !dbg !1146
  %724 = icmp eq i32 %723, 2, !dbg !1146
  br i1 %724, label %729, label %725, !dbg !1146

; <label>:725:                                    ; preds = %720
  %726 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 12, !dbg !1147
  %727 = load i16, i16* %726, align 2, !dbg !1147, !tbaa !791
  %728 = or i16 %727, 2, !dbg !1147
  store i16 %728, i16* %726, align 2, !dbg !1147, !tbaa !791
  br label %1078, !dbg !1150

; <label>:729:                                    ; preds = %720, %717
  %730 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 12, !dbg !1151
  %731 = load i16, i16* %730, align 2, !dbg !1151, !tbaa !791
  %732 = and i16 %731, 16, !dbg !1153
  %733 = icmp eq i16 %732, 0, !dbg !1154
  br i1 %733, label %734, label %737, !dbg !1155

; <label>:734:                                    ; preds = %729
  %735 = load i32, i32* @tcp_ticks, align 4, !dbg !1156, !tbaa !577
  %736 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 16, !dbg !1158
  store i32 %735, i32* %736, align 8, !dbg !1159, !tbaa !783
  br label %737, !dbg !1160

; <label>:737:                                    ; preds = %734, %729
  %738 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 58, !dbg !1161
  store i8 0, i8* %738, align 1, !dbg !1162, !tbaa !1163
  %739 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 57, !dbg !1164
  store i8 0, i8* %739, align 2, !dbg !1165, !tbaa !1166
  tail call fastcc void @tcp_parseopt(%struct.tcp_pcb* nonnull %186) #10, !dbg !1167
  %740 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 8, !dbg !1168
  %741 = load i32, i32* %740, align 8, !dbg !1168, !tbaa !618
  switch i32 %741, label %1078 [
    i32 2, label %742
    i32 3, label %846
    i32 7, label %921
    i32 4, label %921
    i32 5, label %928
    i32 6, label %988
    i32 8, label %1021
    i32 9, label %1061
  ], !dbg !1169

; <label>:742:                                    ; preds = %737
  %743 = load i8, i8* @flags, align 1, !dbg !1170, !tbaa !470
  %744 = and i8 %743, 18, !dbg !1172
  %745 = icmp eq i8 %744, 18, !dbg !1172
  br i1 %745, label %746, label %827, !dbg !1172

; <label>:746:                                    ; preds = %742
  %747 = load i32, i32* @ackno, align 4, !dbg !1173, !tbaa !577
  %748 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 30, !dbg !1174
  %749 = load i32, i32* %748, align 8, !dbg !1174, !tbaa !960
  %750 = add i32 %749, 1, !dbg !1175
  %751 = icmp eq i32 %747, %750, !dbg !1176
  br i1 %751, label %752, label %827, !dbg !1177

; <label>:752:                                    ; preds = %746
  %753 = load i32, i32* @seqno, align 4, !dbg !1178, !tbaa !577
  %754 = add i32 %753, 1, !dbg !1180
  %755 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 17, !dbg !1181
  store i32 %754, i32* %755, align 4, !dbg !1182, !tbaa !767
  %756 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 20, !dbg !1183
  store i32 %754, i32* %756, align 8, !dbg !1184, !tbaa !949
  store i32 %747, i32* %748, align 8, !dbg !1185, !tbaa !960
  %757 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !1186, !tbaa !458
  %758 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %757, i64 0, i32 5, !dbg !1187
  %759 = load i16, i16* %758, align 1, !dbg !1187, !tbaa !585
  %760 = zext i16 %759 to i32, !dbg !1186
  %761 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 38, !dbg !1188
  store i32 %760, i32* %761, align 8, !dbg !1189, !tbaa !994
  %762 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 39, !dbg !1190
  store i32 %760, i32* %762, align 4, !dbg !1191, !tbaa !997
  %763 = add i32 %753, -1, !dbg !1192
  %764 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 35, !dbg !1193
  store i32 %763, i32* %764, align 4, !dbg !1194, !tbaa !968
  store i32 4, i32* %740, align 8, !dbg !1195, !tbaa !618
  %765 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 22, !dbg !1196
  %766 = load i16, i16* %765, align 2, !dbg !1196, !tbaa !999
  %767 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 1, !dbg !1196
  %768 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 1, i32 1, !dbg !1196
  %769 = load i8, i8* %768, align 4, !dbg !1196, !tbaa !667
  %770 = icmp eq i8 %769, 6, !dbg !1196
  br i1 %770, label %771, label %775, !dbg !1196

; <label>:771:                                    ; preds = %752
  %772 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 0, i32 0, i32 0, !dbg !1196
  %773 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %767, i64 0, i32 0, i32 0, !dbg !1196
  %774 = tail call %struct.netif* @ip6_route(%struct.ip6_addr* %772, %struct.ip6_addr* nonnull %773) #10, !dbg !1196
  br label %778, !dbg !1196

; <label>:775:                                    ; preds = %752
  %776 = bitcast %struct.ip_addr* %767 to %struct.ip4_addr*, !dbg !1196
  %777 = tail call %struct.netif* @ip4_route(%struct.ip4_addr* nonnull %776) #10, !dbg !1196
  br label %778, !dbg !1196

; <label>:778:                                    ; preds = %775, %771
  %779 = phi %struct.netif* [ %774, %771 ], [ %777, %775 ], !dbg !1196
  %780 = tail call zeroext i16 @tcp_eff_send_mss_netif(i16 zeroext %766, %struct.netif* %779, %struct.ip_addr* nonnull %767) #10, !dbg !1196
  store i16 %780, i16* %765, align 2, !dbg !1197, !tbaa !999
  %781 = zext i16 %780 to i32, !dbg !1198
  %782 = shl nuw nsw i32 %781, 2, !dbg !1198
  %783 = icmp ugt i16 %780, 2190, !dbg !1198
  %784 = shl nuw nsw i32 %781, 1, !dbg !1198
  %785 = select i1 %783, i32 %784, i32 4380, !dbg !1198
  %786 = icmp ult i32 %782, %785, !dbg !1198
  %787 = select i1 %786, i32 %782, i32 %785, !dbg !1198
  %788 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 31, !dbg !1199
  store i32 %787, i32* %788, align 4, !dbg !1200, !tbaa !1201
  %789 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 41, !dbg !1202
  %790 = load i16, i16* %789, align 4, !dbg !1202, !tbaa !1205
  %791 = icmp eq i16 %790, 0, !dbg !1202
  br i1 %791, label %792, label %793, !dbg !1206

; <label>:792:                                    ; preds = %778
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !1207
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !1210
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1210
  unreachable, !dbg !1210

; <label>:793:                                    ; preds = %778
  %794 = add i16 %790, -1, !dbg !1214
  store i16 %794, i16* %789, align 4, !dbg !1214, !tbaa !1205
  %795 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 45, !dbg !1215
  %796 = load %struct.tcp_seg*, %struct.tcp_seg** %795, align 8, !dbg !1215, !tbaa !1216
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %796, metadata !1056, metadata !DIExpression()) #7, !dbg !1217
  %797 = icmp eq %struct.tcp_seg* %796, null, !dbg !1218
  br i1 %797, label %798, label %803, !dbg !1220

; <label>:798:                                    ; preds = %793
  %799 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 44, !dbg !1221
  %800 = load %struct.tcp_seg*, %struct.tcp_seg** %799, align 8, !dbg !1221, !tbaa !1223
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %800, metadata !1056, metadata !DIExpression()) #7, !dbg !1217
  %801 = icmp eq %struct.tcp_seg* %800, null, !dbg !1224
  br i1 %801, label %802, label %803, !dbg !1227

; <label>:802:                                    ; preds = %798
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !1228
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !1231
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1231
  unreachable, !dbg !1231

; <label>:803:                                    ; preds = %793, %798
  %804 = phi %struct.tcp_seg* [ %800, %798 ], [ %796, %793 ]
  %805 = phi %struct.tcp_seg** [ %799, %798 ], [ %795, %793 ]
  %806 = bitcast %struct.tcp_seg* %804 to i64*, !dbg !1235
  %807 = load i64, i64* %806, align 8, !dbg !1235, !tbaa !1015
  %808 = bitcast %struct.tcp_seg** %805 to i64*, !dbg !1235
  store i64 %807, i64* %808, align 8, !dbg !1235, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %804, metadata !1056, metadata !DIExpression()) #7, !dbg !1217
  tail call void @tcp_seg_free(%struct.tcp_seg* nonnull %804) #10, !dbg !1236
  %809 = load %struct.tcp_seg*, %struct.tcp_seg** %795, align 8, !dbg !1237, !tbaa !1216
  %810 = icmp eq %struct.tcp_seg* %809, null, !dbg !1239
  %811 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 21, !dbg !1240
  br i1 %810, label %812, label %813, !dbg !1242

; <label>:812:                                    ; preds = %803
  store i16 -1, i16* %811, align 4, !dbg !1243, !tbaa !1245
  br label %815, !dbg !1246

; <label>:813:                                    ; preds = %803
  store i16 0, i16* %811, align 4, !dbg !1247, !tbaa !1245
  %814 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 28, !dbg !1248
  store i8 0, i8* %814, align 2, !dbg !1249, !tbaa !1250
  br label %815

; <label>:815:                                    ; preds = %813, %812
  %816 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 51, !dbg !1251
  %817 = load i8 (i8*, %struct.tcp_pcb*, i8)*, i8 (i8*, %struct.tcp_pcb*, i8)** %816, align 8, !dbg !1251, !tbaa !1254
  %818 = icmp eq i8 (i8*, %struct.tcp_pcb*, i8)* %817, null, !dbg !1251
  br i1 %818, label %824, label %819, !dbg !1255

; <label>:819:                                    ; preds = %815
  %820 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 7, !dbg !1251
  %821 = load i8*, i8** %820, align 8, !dbg !1251, !tbaa !972
  %822 = tail call signext i8 %817(i8* %821, %struct.tcp_pcb* nonnull %186, i8 signext 0) #10, !dbg !1251
  call void @llvm.dbg.value(metadata i8 %822, metadata !1058, metadata !DIExpression()) #7, !dbg !1099
  %823 = icmp eq i8 %822, -13, !dbg !1251
  br i1 %823, label %1077, label %824, !dbg !1256

; <label>:824:                                    ; preds = %819, %815
  %825 = load i16, i16* %730, align 2, !dbg !1257, !tbaa !791
  %826 = or i16 %825, 2, !dbg !1257
  store i16 %826, i16* %730, align 2, !dbg !1257, !tbaa !791
  br label %1078, !dbg !1259

; <label>:827:                                    ; preds = %746, %742
  %828 = and i8 %743, 16, !dbg !1260
  %829 = icmp eq i8 %828, 0, !dbg !1260
  br i1 %829, label %1078, label %830, !dbg !1262

; <label>:830:                                    ; preds = %827
  %831 = load i32, i32* @ackno, align 4, !dbg !1263, !tbaa !577
  %832 = load i32, i32* @seqno, align 4, !dbg !1265, !tbaa !577
  %833 = load i16, i16* @tcplen, align 2, !dbg !1266, !tbaa !498
  %834 = zext i16 %833 to i32, !dbg !1266
  %835 = add i32 %832, %834, !dbg !1267
  %836 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !1268, !tbaa !458
  %837 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %836, i64 0, i32 1, !dbg !1269
  %838 = load i16, i16* %837, align 1, !dbg !1269, !tbaa !567
  %839 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %836, i64 0, i32 0, !dbg !1270
  %840 = load i16, i16* %839, align 1, !dbg !1270, !tbaa !562
  tail call void @tcp_rst(%struct.tcp_pcb* nonnull %186, i32 %831, i32 %835, %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6), %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5), i16 zeroext %838, i16 zeroext %840) #10, !dbg !1271
  %841 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 28, !dbg !1272
  %842 = load i8, i8* %841, align 2, !dbg !1272, !tbaa !1250
  %843 = icmp ult i8 %842, 6, !dbg !1274
  br i1 %843, label %844, label %1078, !dbg !1275

; <label>:844:                                    ; preds = %830
  %845 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 21, !dbg !1276
  store i16 0, i16* %845, align 4, !dbg !1278, !tbaa !1245
  tail call void @tcp_rexmit_rto(%struct.tcp_pcb* nonnull %186) #10, !dbg !1279
  br label %1078, !dbg !1280

; <label>:846:                                    ; preds = %737
  %847 = load i8, i8* @flags, align 1, !dbg !1281, !tbaa !470
  %848 = zext i8 %847 to i32, !dbg !1281
  %849 = and i32 %848, 16, !dbg !1283
  %850 = icmp eq i32 %849, 0, !dbg !1283
  br i1 %850, label %910, label %851, !dbg !1284

; <label>:851:                                    ; preds = %846
  %852 = load i32, i32* @ackno, align 4, !dbg !1285, !tbaa !577
  %853 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 30, !dbg !1285
  %854 = load i32, i32* %853, align 8, !dbg !1285, !tbaa !960
  %855 = xor i32 %854, -1, !dbg !1285
  %856 = add i32 %852, %855, !dbg !1285
  %857 = icmp sgt i32 %856, -1, !dbg !1285
  br i1 %857, label %858, label %900, !dbg !1285

; <label>:858:                                    ; preds = %851
  %859 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 34, !dbg !1285
  %860 = load i32, i32* %859, align 8, !dbg !1285, !tbaa !957
  %861 = sub i32 %852, %860, !dbg !1285
  %862 = icmp slt i32 %861, 1, !dbg !1285
  br i1 %862, label %863, label %900, !dbg !1288

; <label>:863:                                    ; preds = %858
  store i32 4, i32* %740, align 8, !dbg !1289, !tbaa !618
  %864 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 48, !dbg !1291
  %865 = load %struct.tcp_pcb_listen*, %struct.tcp_pcb_listen** %864, align 8, !dbg !1291, !tbaa !975
  %866 = icmp eq %struct.tcp_pcb_listen* %865, null, !dbg !1293
  br i1 %866, label %877, label %867, !dbg !1294

; <label>:867:                                    ; preds = %863
  %868 = getelementptr inbounds %struct.tcp_pcb_listen, %struct.tcp_pcb_listen* %865, i64 0, i32 11, !dbg !1295
  %869 = load i8 (i8*, %struct.tcp_pcb*, i8)*, i8 (i8*, %struct.tcp_pcb*, i8)** %868, align 8, !dbg !1295, !tbaa !903
  %870 = icmp eq i8 (i8*, %struct.tcp_pcb*, i8)* %869, null, !dbg !1295
  br i1 %870, label %871, label %872, !dbg !1299

; <label>:871:                                    ; preds = %867
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !1300
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !1303
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1303
  unreachable, !dbg !1303

; <label>:872:                                    ; preds = %867
  %873 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 7, !dbg !1307
  %874 = load i8*, i8** %873, align 8, !dbg !1307, !tbaa !972
  %875 = tail call signext i8 %869(i8* %874, %struct.tcp_pcb* nonnull %186, i8 signext 0) #10, !dbg !1307
  call void @llvm.dbg.value(metadata i8 %875, metadata !1058, metadata !DIExpression()) #7, !dbg !1099
  %876 = sext i8 %875 to i32, !dbg !1307
  switch i32 %876, label %877 [
    i32 0, label %878
    i32 -13, label %1077
  ], !dbg !1310

; <label>:877:                                    ; preds = %872, %863
  tail call void @tcp_abort(%struct.tcp_pcb* nonnull %186) #10, !dbg !1311
  br label %1077, !dbg !1316

; <label>:878:                                    ; preds = %872
  tail call fastcc void @tcp_receive(%struct.tcp_pcb* nonnull %186) #10, !dbg !1317
  %879 = load i32, i32* @recv_acked, align 4, !dbg !1318, !tbaa !577
  %880 = icmp eq i32 %879, 0, !dbg !1320
  br i1 %880, label %883, label %881, !dbg !1321

; <label>:881:                                    ; preds = %878
  %882 = add i32 %879, -1, !dbg !1322
  store i32 %882, i32* @recv_acked, align 4, !dbg !1322, !tbaa !577
  br label %883, !dbg !1324

; <label>:883:                                    ; preds = %881, %878
  %884 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 22, !dbg !1325
  %885 = load i16, i16* %884, align 2, !dbg !1325, !tbaa !999
  %886 = zext i16 %885 to i32, !dbg !1325
  %887 = shl nuw nsw i32 %886, 2, !dbg !1325
  %888 = icmp ugt i16 %885, 2190, !dbg !1325
  %889 = shl nuw nsw i32 %886, 1, !dbg !1325
  %890 = select i1 %888, i32 %889, i32 4380, !dbg !1325
  %891 = icmp ult i32 %887, %890, !dbg !1325
  %892 = select i1 %891, i32 %887, i32 %890, !dbg !1325
  %893 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 31, !dbg !1326
  store i32 %892, i32* %893, align 4, !dbg !1327, !tbaa !1201
  %894 = load i8, i8* @recv_flags, align 1, !dbg !1328, !tbaa !470
  %895 = and i8 %894, 32, !dbg !1330
  %896 = icmp eq i8 %895, 0, !dbg !1330
  br i1 %896, label %1078, label %897, !dbg !1331

; <label>:897:                                    ; preds = %883
  %898 = load i16, i16* %730, align 2, !dbg !1332, !tbaa !791
  %899 = or i16 %898, 2, !dbg !1332
  store i16 %899, i16* %730, align 2, !dbg !1332, !tbaa !791
  store i32 7, i32* %740, align 8, !dbg !1335, !tbaa !618
  br label %1078, !dbg !1336

; <label>:900:                                    ; preds = %858, %851
  %901 = load i32, i32* @seqno, align 4, !dbg !1337, !tbaa !577
  %902 = load i16, i16* @tcplen, align 2, !dbg !1339, !tbaa !498
  %903 = zext i16 %902 to i32, !dbg !1339
  %904 = add i32 %901, %903, !dbg !1340
  %905 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !1341, !tbaa !458
  %906 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %905, i64 0, i32 1, !dbg !1342
  %907 = load i16, i16* %906, align 1, !dbg !1342, !tbaa !567
  %908 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %905, i64 0, i32 0, !dbg !1343
  %909 = load i16, i16* %908, align 1, !dbg !1343, !tbaa !562
  tail call void @tcp_rst(%struct.tcp_pcb* nonnull %186, i32 %852, i32 %904, %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6), %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5), i16 zeroext %907, i16 zeroext %909) #10, !dbg !1344
  br label %1078

; <label>:910:                                    ; preds = %846
  %911 = and i32 %848, 2, !dbg !1345
  %912 = icmp eq i32 %911, 0, !dbg !1345
  br i1 %912, label %1078, label %913, !dbg !1347

; <label>:913:                                    ; preds = %910
  %914 = load i32, i32* @seqno, align 4, !dbg !1348, !tbaa !577
  %915 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 17, !dbg !1349
  %916 = load i32, i32* %915, align 4, !dbg !1349, !tbaa !767
  %917 = add i32 %916, -1, !dbg !1350
  %918 = icmp eq i32 %914, %917, !dbg !1351
  br i1 %918, label %919, label %1078, !dbg !1352

; <label>:919:                                    ; preds = %913
  %920 = tail call signext i8 @tcp_rexmit(%struct.tcp_pcb* nonnull %186) #10, !dbg !1353
  br label %1078, !dbg !1355

; <label>:921:                                    ; preds = %737, %737
  tail call fastcc void @tcp_receive(%struct.tcp_pcb* nonnull %186) #10, !dbg !1356
  %922 = load i8, i8* @recv_flags, align 1, !dbg !1357, !tbaa !470
  %923 = and i8 %922, 32, !dbg !1359
  %924 = icmp eq i8 %923, 0, !dbg !1359
  br i1 %924, label %1078, label %925, !dbg !1360

; <label>:925:                                    ; preds = %921
  %926 = load i16, i16* %730, align 2, !dbg !1361, !tbaa !791
  %927 = or i16 %926, 2, !dbg !1361
  store i16 %927, i16* %730, align 2, !dbg !1361, !tbaa !791
  store i32 7, i32* %740, align 8, !dbg !1364, !tbaa !618
  br label %1078, !dbg !1365

; <label>:928:                                    ; preds = %737
  tail call fastcc void @tcp_receive(%struct.tcp_pcb* nonnull %186) #10, !dbg !1366
  %929 = load i8, i8* @recv_flags, align 1, !dbg !1367, !tbaa !470
  %930 = and i8 %929, 32, !dbg !1368
  %931 = icmp eq i8 %930, 0, !dbg !1368
  %932 = load i8, i8* @flags, align 1, !dbg !1369, !tbaa !470
  %933 = and i8 %932, 16, !dbg !1369
  %934 = icmp ne i8 %933, 0, !dbg !1369
  br i1 %931, label %977, label %935, !dbg !1371

; <label>:935:                                    ; preds = %928
  br i1 %934, label %936, label %974, !dbg !1372

; <label>:936:                                    ; preds = %935
  %937 = load i32, i32* @ackno, align 4, !dbg !1373, !tbaa !577
  %938 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 34, !dbg !1374
  %939 = load i32, i32* %938, align 8, !dbg !1374, !tbaa !957
  %940 = icmp eq i32 %937, %939, !dbg !1375
  br i1 %940, label %941, label %974, !dbg !1376

; <label>:941:                                    ; preds = %936
  %942 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 44, !dbg !1377
  %943 = load %struct.tcp_seg*, %struct.tcp_seg** %942, align 8, !dbg !1377, !tbaa !1223
  %944 = icmp eq %struct.tcp_seg* %943, null, !dbg !1378
  br i1 %944, label %945, label %974, !dbg !1379

; <label>:945:                                    ; preds = %941
  %946 = load i16, i16* %730, align 2, !dbg !1380, !tbaa !791
  %947 = or i16 %946, 2, !dbg !1380
  store i16 %947, i16* %730, align 2, !dbg !1380, !tbaa !791
  tail call void @tcp_pcb_purge(%struct.tcp_pcb* nonnull %186) #10, !dbg !1382
  %948 = load %struct.tcp_pcb*, %struct.tcp_pcb** @tcp_active_pcbs, align 8, !dbg !1383, !tbaa !458
  %949 = icmp eq %struct.tcp_pcb* %948, %186, !dbg !1383
  br i1 %949, label %950, label %954, !dbg !1384

; <label>:950:                                    ; preds = %945
  %951 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !1385
  %952 = bitcast %struct.tcp_pcb** %951 to i64*, !dbg !1385
  %953 = load i64, i64* %952, align 8, !dbg !1385, !tbaa !676
  store i64 %953, i64* bitcast (%struct.tcp_pcb** @tcp_active_pcbs to i64*), align 8, !dbg !1385, !tbaa !458
  br label %970, !dbg !1385

; <label>:954:                                    ; preds = %945, %957
  %955 = phi %struct.tcp_pcb* [ %959, %957 ], [ %948, %945 ], !dbg !1387
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %955, metadata !1059, metadata !DIExpression()) #7, !dbg !1389
  %956 = icmp eq %struct.tcp_pcb* %955, null, !dbg !1390
  br i1 %956, label %967, label %957, !dbg !1387

; <label>:957:                                    ; preds = %954
  %958 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %955, i64 0, i32 6, !dbg !1392
  %959 = load %struct.tcp_pcb*, %struct.tcp_pcb** %958, align 8, !dbg !1392, !tbaa !676
  %960 = icmp eq %struct.tcp_pcb* %959, %186, !dbg !1392
  br i1 %960, label %961, label %954, !dbg !1395, !llvm.loop !1396

; <label>:961:                                    ; preds = %957
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %955, metadata !1059, metadata !DIExpression()) #7, !dbg !1389
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %955, metadata !1059, metadata !DIExpression()) #7, !dbg !1389
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %955, metadata !1059, metadata !DIExpression()) #7, !dbg !1389
  %962 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %955, i64 0, i32 6, !dbg !1392
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %955, metadata !1059, metadata !DIExpression()) #7, !dbg !1389
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %955, metadata !1059, metadata !DIExpression()) #7, !dbg !1389
  %963 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !1398
  %964 = bitcast %struct.tcp_pcb** %963 to i64*, !dbg !1398
  %965 = load i64, i64* %964, align 8, !dbg !1398, !tbaa !676
  %966 = bitcast %struct.tcp_pcb** %962 to i64*, !dbg !1398
  store i64 %965, i64* %966, align 8, !dbg !1398, !tbaa !676
  br label %970, !dbg !1398

; <label>:967:                                    ; preds = %954
  %968 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !1384
  %969 = bitcast %struct.tcp_pcb** %968 to i64*, !dbg !1400
  br label %970, !dbg !1384

; <label>:970:                                    ; preds = %967, %961, %950
  %971 = phi i64* [ %969, %967 ], [ %964, %961 ], [ %952, %950 ], !dbg !1400
  %972 = phi %struct.tcp_pcb** [ %968, %967 ], [ %963, %961 ], [ %951, %950 ], !dbg !1384
  store %struct.tcp_pcb* null, %struct.tcp_pcb** %972, align 8, !dbg !1384, !tbaa !676
  store i8 1, i8* @tcp_active_pcbs_changed, align 1, !dbg !1402, !tbaa !470
  store i32 10, i32* %740, align 8, !dbg !1403, !tbaa !618
  %973 = load i64, i64* bitcast (%struct.tcp_pcb** @tcp_tw_pcbs to i64*), align 8, !dbg !1400, !tbaa !458
  store i64 %973, i64* %971, align 8, !dbg !1400, !tbaa !676
  store %struct.tcp_pcb* %186, %struct.tcp_pcb** @tcp_tw_pcbs, align 8, !dbg !1400, !tbaa !458
  tail call void @tcp_timer_needed() #10, !dbg !1400
  br label %1078, !dbg !1404

; <label>:974:                                    ; preds = %941, %936, %935
  %975 = load i16, i16* %730, align 2, !dbg !1405, !tbaa !791
  %976 = or i16 %975, 2, !dbg !1405
  store i16 %976, i16* %730, align 2, !dbg !1405, !tbaa !791
  store i32 8, i32* %740, align 8, !dbg !1408, !tbaa !618
  br label %1078

; <label>:977:                                    ; preds = %928
  br i1 %934, label %978, label %1078, !dbg !1409

; <label>:978:                                    ; preds = %977
  %979 = load i32, i32* @ackno, align 4, !dbg !1410, !tbaa !577
  %980 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 34, !dbg !1411
  %981 = load i32, i32* %980, align 8, !dbg !1411, !tbaa !957
  %982 = icmp eq i32 %979, %981, !dbg !1412
  br i1 %982, label %983, label %1078, !dbg !1413

; <label>:983:                                    ; preds = %978
  %984 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 44, !dbg !1414
  %985 = load %struct.tcp_seg*, %struct.tcp_seg** %984, align 8, !dbg !1414, !tbaa !1223
  %986 = icmp eq %struct.tcp_seg* %985, null, !dbg !1415
  br i1 %986, label %987, label %1078, !dbg !1416

; <label>:987:                                    ; preds = %983
  store i32 6, i32* %740, align 8, !dbg !1417, !tbaa !618
  br label %1078, !dbg !1419

; <label>:988:                                    ; preds = %737
  tail call fastcc void @tcp_receive(%struct.tcp_pcb* nonnull %186) #10, !dbg !1420
  %989 = load i8, i8* @recv_flags, align 1, !dbg !1421, !tbaa !470
  %990 = and i8 %989, 32, !dbg !1422
  %991 = icmp eq i8 %990, 0, !dbg !1422
  br i1 %991, label %1078, label %992, !dbg !1423

; <label>:992:                                    ; preds = %988
  %993 = load i16, i16* %730, align 2, !dbg !1424, !tbaa !791
  %994 = or i16 %993, 2, !dbg !1424
  store i16 %994, i16* %730, align 2, !dbg !1424, !tbaa !791
  tail call void @tcp_pcb_purge(%struct.tcp_pcb* nonnull %186) #10, !dbg !1426
  %995 = load %struct.tcp_pcb*, %struct.tcp_pcb** @tcp_active_pcbs, align 8, !dbg !1427, !tbaa !458
  %996 = icmp eq %struct.tcp_pcb* %995, %186, !dbg !1427
  br i1 %996, label %997, label %1001, !dbg !1428

; <label>:997:                                    ; preds = %992
  %998 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !1429
  %999 = bitcast %struct.tcp_pcb** %998 to i64*, !dbg !1429
  %1000 = load i64, i64* %999, align 8, !dbg !1429, !tbaa !676
  store i64 %1000, i64* bitcast (%struct.tcp_pcb** @tcp_active_pcbs to i64*), align 8, !dbg !1429, !tbaa !458
  br label %1017, !dbg !1429

; <label>:1001:                                   ; preds = %992, %1004
  %1002 = phi %struct.tcp_pcb* [ %1006, %1004 ], [ %995, %992 ], !dbg !1431
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1002, metadata !1069, metadata !DIExpression()) #7, !dbg !1433
  %1003 = icmp eq %struct.tcp_pcb* %1002, null, !dbg !1434
  br i1 %1003, label %1014, label %1004, !dbg !1431

; <label>:1004:                                   ; preds = %1001
  %1005 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %1002, i64 0, i32 6, !dbg !1436
  %1006 = load %struct.tcp_pcb*, %struct.tcp_pcb** %1005, align 8, !dbg !1436, !tbaa !676
  %1007 = icmp eq %struct.tcp_pcb* %1006, %186, !dbg !1436
  br i1 %1007, label %1008, label %1001, !dbg !1439, !llvm.loop !1440

; <label>:1008:                                   ; preds = %1004
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1002, metadata !1069, metadata !DIExpression()) #7, !dbg !1433
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1002, metadata !1069, metadata !DIExpression()) #7, !dbg !1433
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1002, metadata !1069, metadata !DIExpression()) #7, !dbg !1433
  %1009 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %1002, i64 0, i32 6, !dbg !1436
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1002, metadata !1069, metadata !DIExpression()) #7, !dbg !1433
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1002, metadata !1069, metadata !DIExpression()) #7, !dbg !1433
  %1010 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !1442
  %1011 = bitcast %struct.tcp_pcb** %1010 to i64*, !dbg !1442
  %1012 = load i64, i64* %1011, align 8, !dbg !1442, !tbaa !676
  %1013 = bitcast %struct.tcp_pcb** %1009 to i64*, !dbg !1442
  store i64 %1012, i64* %1013, align 8, !dbg !1442, !tbaa !676
  br label %1017, !dbg !1442

; <label>:1014:                                   ; preds = %1001
  %1015 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !1428
  %1016 = bitcast %struct.tcp_pcb** %1015 to i64*, !dbg !1444
  br label %1017, !dbg !1428

; <label>:1017:                                   ; preds = %1014, %1008, %997
  %1018 = phi i64* [ %1016, %1014 ], [ %1011, %1008 ], [ %999, %997 ], !dbg !1444
  %1019 = phi %struct.tcp_pcb** [ %1015, %1014 ], [ %1010, %1008 ], [ %998, %997 ], !dbg !1428
  store %struct.tcp_pcb* null, %struct.tcp_pcb** %1019, align 8, !dbg !1428, !tbaa !676
  store i8 1, i8* @tcp_active_pcbs_changed, align 1, !dbg !1446, !tbaa !470
  store i32 10, i32* %740, align 8, !dbg !1447, !tbaa !618
  %1020 = load i64, i64* bitcast (%struct.tcp_pcb** @tcp_tw_pcbs to i64*), align 8, !dbg !1444, !tbaa !458
  store i64 %1020, i64* %1018, align 8, !dbg !1444, !tbaa !676
  store %struct.tcp_pcb* %186, %struct.tcp_pcb** @tcp_tw_pcbs, align 8, !dbg !1444, !tbaa !458
  tail call void @tcp_timer_needed() #10, !dbg !1444
  br label %1078, !dbg !1448

; <label>:1021:                                   ; preds = %737
  tail call fastcc void @tcp_receive(%struct.tcp_pcb* nonnull %186) #10, !dbg !1449
  %1022 = load i8, i8* @flags, align 1, !dbg !1450, !tbaa !470
  %1023 = and i8 %1022, 16, !dbg !1451
  %1024 = icmp eq i8 %1023, 0, !dbg !1451
  br i1 %1024, label %1078, label %1025, !dbg !1452

; <label>:1025:                                   ; preds = %1021
  %1026 = load i32, i32* @ackno, align 4, !dbg !1453, !tbaa !577
  %1027 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 34, !dbg !1454
  %1028 = load i32, i32* %1027, align 8, !dbg !1454, !tbaa !957
  %1029 = icmp eq i32 %1026, %1028, !dbg !1455
  br i1 %1029, label %1030, label %1078, !dbg !1456

; <label>:1030:                                   ; preds = %1025
  %1031 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 44, !dbg !1457
  %1032 = load %struct.tcp_seg*, %struct.tcp_seg** %1031, align 8, !dbg !1457, !tbaa !1223
  %1033 = icmp eq %struct.tcp_seg* %1032, null, !dbg !1458
  br i1 %1033, label %1034, label %1078, !dbg !1459

; <label>:1034:                                   ; preds = %1030
  tail call void @tcp_pcb_purge(%struct.tcp_pcb* nonnull %186) #10, !dbg !1460
  %1035 = load %struct.tcp_pcb*, %struct.tcp_pcb** @tcp_active_pcbs, align 8, !dbg !1461, !tbaa !458
  %1036 = icmp eq %struct.tcp_pcb* %1035, %186, !dbg !1461
  br i1 %1036, label %1037, label %1041, !dbg !1462

; <label>:1037:                                   ; preds = %1034
  %1038 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !1463
  %1039 = bitcast %struct.tcp_pcb** %1038 to i64*, !dbg !1463
  %1040 = load i64, i64* %1039, align 8, !dbg !1463, !tbaa !676
  store i64 %1040, i64* bitcast (%struct.tcp_pcb** @tcp_active_pcbs to i64*), align 8, !dbg !1463, !tbaa !458
  br label %1057, !dbg !1463

; <label>:1041:                                   ; preds = %1034, %1044
  %1042 = phi %struct.tcp_pcb* [ %1046, %1044 ], [ %1035, %1034 ], !dbg !1465
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1042, metadata !1076, metadata !DIExpression()) #7, !dbg !1467
  %1043 = icmp eq %struct.tcp_pcb* %1042, null, !dbg !1468
  br i1 %1043, label %1054, label %1044, !dbg !1465

; <label>:1044:                                   ; preds = %1041
  %1045 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %1042, i64 0, i32 6, !dbg !1470
  %1046 = load %struct.tcp_pcb*, %struct.tcp_pcb** %1045, align 8, !dbg !1470, !tbaa !676
  %1047 = icmp eq %struct.tcp_pcb* %1046, %186, !dbg !1470
  br i1 %1047, label %1048, label %1041, !dbg !1473, !llvm.loop !1474

; <label>:1048:                                   ; preds = %1044
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1042, metadata !1076, metadata !DIExpression()) #7, !dbg !1467
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1042, metadata !1076, metadata !DIExpression()) #7, !dbg !1467
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1042, metadata !1076, metadata !DIExpression()) #7, !dbg !1467
  %1049 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %1042, i64 0, i32 6, !dbg !1470
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1042, metadata !1076, metadata !DIExpression()) #7, !dbg !1467
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %1042, metadata !1076, metadata !DIExpression()) #7, !dbg !1467
  %1050 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !1476
  %1051 = bitcast %struct.tcp_pcb** %1050 to i64*, !dbg !1476
  %1052 = load i64, i64* %1051, align 8, !dbg !1476, !tbaa !676
  %1053 = bitcast %struct.tcp_pcb** %1049 to i64*, !dbg !1476
  store i64 %1052, i64* %1053, align 8, !dbg !1476, !tbaa !676
  br label %1057, !dbg !1476

; <label>:1054:                                   ; preds = %1041
  %1055 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 6, !dbg !1462
  %1056 = bitcast %struct.tcp_pcb** %1055 to i64*, !dbg !1478
  br label %1057, !dbg !1462

; <label>:1057:                                   ; preds = %1054, %1048, %1037
  %1058 = phi i64* [ %1056, %1054 ], [ %1051, %1048 ], [ %1039, %1037 ], !dbg !1478
  %1059 = phi %struct.tcp_pcb** [ %1055, %1054 ], [ %1050, %1048 ], [ %1038, %1037 ], !dbg !1462
  store %struct.tcp_pcb* null, %struct.tcp_pcb** %1059, align 8, !dbg !1462, !tbaa !676
  store i8 1, i8* @tcp_active_pcbs_changed, align 1, !dbg !1480, !tbaa !470
  store i32 10, i32* %740, align 8, !dbg !1481, !tbaa !618
  %1060 = load i64, i64* bitcast (%struct.tcp_pcb** @tcp_tw_pcbs to i64*), align 8, !dbg !1478, !tbaa !458
  store i64 %1060, i64* %1058, align 8, !dbg !1478, !tbaa !676
  store %struct.tcp_pcb* %186, %struct.tcp_pcb** @tcp_tw_pcbs, align 8, !dbg !1478, !tbaa !458
  tail call void @tcp_timer_needed() #10, !dbg !1478
  br label %1078, !dbg !1482

; <label>:1061:                                   ; preds = %737
  tail call fastcc void @tcp_receive(%struct.tcp_pcb* nonnull %186) #10, !dbg !1483
  %1062 = load i8, i8* @flags, align 1, !dbg !1484, !tbaa !470
  %1063 = and i8 %1062, 16, !dbg !1486
  %1064 = icmp eq i8 %1063, 0, !dbg !1486
  br i1 %1064, label %1078, label %1065, !dbg !1487

; <label>:1065:                                   ; preds = %1061
  %1066 = load i32, i32* @ackno, align 4, !dbg !1488, !tbaa !577
  %1067 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 34, !dbg !1489
  %1068 = load i32, i32* %1067, align 8, !dbg !1489, !tbaa !957
  %1069 = icmp eq i32 %1066, %1068, !dbg !1490
  br i1 %1069, label %1070, label %1078, !dbg !1491

; <label>:1070:                                   ; preds = %1065
  %1071 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 44, !dbg !1492
  %1072 = load %struct.tcp_seg*, %struct.tcp_seg** %1071, align 8, !dbg !1492, !tbaa !1223
  %1073 = icmp eq %struct.tcp_seg* %1072, null, !dbg !1493
  br i1 %1073, label %1074, label %1078, !dbg !1494

; <label>:1074:                                   ; preds = %1070
  %1075 = load i8, i8* @recv_flags, align 1, !dbg !1495, !tbaa !470
  %1076 = or i8 %1075, 16, !dbg !1495
  store i8 %1076, i8* @recv_flags, align 1, !dbg !1495, !tbaa !470
  br label %1078, !dbg !1497

; <label>:1077:                                   ; preds = %819, %872, %877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1498
  call void @llvm.dbg.value(metadata i8 -13, metadata !409, metadata !DIExpression()), !dbg !1499
  br label %1208

; <label>:1078:                                   ; preds = %711, %725, %696, %699, %704, %686, %827, %883, %910, %921, %988, %1021, %1061, %737, %1065, %1070, %1074, %1025, %1030, %1057, %1017, %974, %970, %987, %983, %978, %977, %925, %897, %900, %919, %913, %824, %830, %844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1498
  call void @llvm.dbg.value(metadata i8 -13, metadata !409, metadata !DIExpression()), !dbg !1499
  %1079 = load i8, i8* @recv_flags, align 1, !dbg !1500, !tbaa !470
  %1080 = and i8 %1079, 8, !dbg !1501
  %1081 = icmp eq i8 %1080, 0, !dbg !1501
  br i1 %1081, label %1090, label %1082, !dbg !1502

; <label>:1082:                                   ; preds = %1078
  %1083 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 53, !dbg !1503
  %1084 = load void (i8*, i8)*, void (i8*, i8)** %1083, align 8, !dbg !1503, !tbaa !1507
  %1085 = icmp eq void (i8*, i8)* %1084, null, !dbg !1503
  br i1 %1085, label %1089, label %1086, !dbg !1508

; <label>:1086:                                   ; preds = %1082
  %1087 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 7, !dbg !1503
  %1088 = load i8*, i8** %1087, align 8, !dbg !1503, !tbaa !972
  tail call void %1084(i8* %1088, i8 signext -14) #10, !dbg !1503
  br label %1089, !dbg !1503

; <label>:1089:                                   ; preds = %1082, %1086
  tail call void @tcp_pcb_remove(%struct.tcp_pcb** nonnull @tcp_active_pcbs, %struct.tcp_pcb* nonnull %186) #10, !dbg !1509
  tail call void @tcp_free(%struct.tcp_pcb* nonnull %186) #10, !dbg !1510
  br label %1208, !dbg !1511

; <label>:1090:                                   ; preds = %1078
  call void @llvm.dbg.value(metadata i8 0, metadata !409, metadata !DIExpression()), !dbg !1499
  %1091 = load i32, i32* @recv_acked, align 4, !dbg !1512, !tbaa !577
  %1092 = icmp eq i32 %1091, 0, !dbg !1513
  br i1 %1092, label %1113, label %1093, !dbg !1514

; <label>:1093:                                   ; preds = %1090
  %1094 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 49
  %1095 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 7
  br label %1096, !dbg !1515

; <label>:1096:                                   ; preds = %1093, %1109
  %1097 = phi i32 [ %1102, %1109 ], [ %1091, %1093 ], !dbg !1516
  call void @llvm.dbg.value(metadata i32 %1097, metadata !425, metadata !DIExpression()), !dbg !1518
  %1098 = icmp eq i32 %1097, 0, !dbg !1515
  br i1 %1098, label %1112, label %1099, !dbg !1519

; <label>:1099:                                   ; preds = %1096
  %1100 = icmp ult i32 %1097, 65535, !dbg !1520
  %1101 = select i1 %1100, i32 %1097, i32 65535, !dbg !1520
  %1102 = sub i32 %1097, %1101, !dbg !1521
  call void @llvm.dbg.value(metadata i32 %1102, metadata !425, metadata !DIExpression()), !dbg !1518
  %1103 = load i8 (i8*, %struct.tcp_pcb*, i16)*, i8 (i8*, %struct.tcp_pcb*, i16)** %1094, align 8, !dbg !1522, !tbaa !1525
  %1104 = icmp eq i8 (i8*, %struct.tcp_pcb*, i16)* %1103, null, !dbg !1522
  br i1 %1104, label %1109, label %1105, !dbg !1526

; <label>:1105:                                   ; preds = %1099
  %1106 = trunc i32 %1101 to i16, !dbg !1527
  call void @llvm.dbg.value(metadata i16 %1106, metadata !416, metadata !DIExpression()), !dbg !1528
  %1107 = load i8*, i8** %1095, align 8, !dbg !1522, !tbaa !972
  %1108 = tail call signext i8 %1103(i8* %1107, %struct.tcp_pcb* nonnull %186, i16 zeroext %1106) #10, !dbg !1522
  call void @llvm.dbg.value(metadata i8 %1108, metadata !409, metadata !DIExpression()), !dbg !1499
  br label %1109, !dbg !1522

; <label>:1109:                                   ; preds = %1099, %1105
  %1110 = phi i8 [ %1108, %1105 ], [ 0, %1099 ], !dbg !1522
  call void @llvm.dbg.value(metadata i8 %1110, metadata !409, metadata !DIExpression()), !dbg !1499
  %1111 = icmp eq i8 %1110, -13, !dbg !1529
  br i1 %1111, label %1208, label %1096, !dbg !1531, !llvm.loop !1532

; <label>:1112:                                   ; preds = %1096
  store i32 0, i32* @recv_acked, align 4, !dbg !1534, !tbaa !577
  br label %1113

; <label>:1113:                                   ; preds = %1112, %1090
  %1114 = tail call fastcc i32 @tcp_input_delayed_close(%struct.tcp_pcb* nonnull %186) #8, !dbg !1535
  %1115 = icmp eq i32 %1114, 0, !dbg !1535
  br i1 %1115, label %1116, label %1208, !dbg !1537

; <label>:1116:                                   ; preds = %1113
  %1117 = load %struct.pbuf*, %struct.pbuf** @recv_data, align 8, !dbg !1538, !tbaa !458
  %1118 = icmp eq %struct.pbuf* %1117, null, !dbg !1539
  br i1 %1118, label %1172, label %1119, !dbg !1540

; <label>:1119:                                   ; preds = %1116
  %1120 = bitcast %struct.pbuf** %3 to i8*
  %1121 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 12
  %1122 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 50
  %1123 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 7
  br label %1124, !dbg !1540

; <label>:1124:                                   ; preds = %1119, %1170
  %1125 = phi %struct.pbuf* [ %1117, %1119 ], [ %1161, %1170 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1120) #7, !dbg !1541
  call void @llvm.dbg.value(metadata %struct.pbuf* null, metadata !426, metadata !DIExpression()), !dbg !1542
  store %struct.pbuf* null, %struct.pbuf** %3, align 8, !dbg !1542, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.pbuf** %3, metadata !426, metadata !DIExpression(DW_OP_deref)), !dbg !1542
  call void @pbuf_split_64k(%struct.pbuf* nonnull %1125, %struct.pbuf** nonnull %3) #10, !dbg !1543
  %1126 = load %struct.pbuf*, %struct.pbuf** %654, align 8, !dbg !1544, !tbaa !1036
  %1127 = icmp eq %struct.pbuf* %1126, null, !dbg !1544
  br i1 %1127, label %1129, label %1128, !dbg !1547

; <label>:1128:                                   ; preds = %1124
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0)) #8, !dbg !1548
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !1551
  call void @ukplat_terminate(i32 3) #9, !dbg !1551
  unreachable, !dbg !1551

; <label>:1129:                                   ; preds = %1124
  %1130 = load i16, i16* %1121, align 2, !dbg !1555, !tbaa !791
  %1131 = and i16 %1130, 16, !dbg !1557
  %1132 = icmp eq i16 %1131, 0, !dbg !1557
  br i1 %1132, label %1141, label %1133, !dbg !1558

; <label>:1133:                                   ; preds = %1129
  %1134 = load %struct.pbuf*, %struct.pbuf** @recv_data, align 8, !dbg !1559, !tbaa !458
  %1135 = call zeroext i8 @pbuf_free(%struct.pbuf* %1134) #10, !dbg !1561
  %1136 = load %struct.pbuf*, %struct.pbuf** %3, align 8, !dbg !1562, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.pbuf* %1136, metadata !426, metadata !DIExpression()), !dbg !1542
  %1137 = icmp eq %struct.pbuf* %1136, null, !dbg !1564
  br i1 %1137, label %1140, label %1138, !dbg !1565

; <label>:1138:                                   ; preds = %1133
  %1139 = call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %1136) #10, !dbg !1566
  br label %1140, !dbg !1568

; <label>:1140:                                   ; preds = %1133, %1138
  call void @tcp_abort(%struct.tcp_pcb* nonnull %186) #10, !dbg !1569
  br label %1169, !dbg !1570

; <label>:1141:                                   ; preds = %1129
  %1142 = load i8 (i8*, %struct.tcp_pcb*, %struct.pbuf*, i8)*, i8 (i8*, %struct.tcp_pcb*, %struct.pbuf*, i8)** %1122, align 8, !dbg !1571, !tbaa !1574
  %1143 = icmp eq i8 (i8*, %struct.tcp_pcb*, %struct.pbuf*, i8)* %1142, null, !dbg !1571
  br i1 %1143, label %1148, label %1144, !dbg !1575

; <label>:1144:                                   ; preds = %1141
  %1145 = load i8*, i8** %1123, align 8, !dbg !1576, !tbaa !972
  %1146 = load %struct.pbuf*, %struct.pbuf** @recv_data, align 8, !dbg !1576, !tbaa !458
  %1147 = call signext i8 %1142(i8* %1145, %struct.tcp_pcb* nonnull %186, %struct.pbuf* %1146, i8 signext 0) #10, !dbg !1576
  call void @llvm.dbg.value(metadata i8 %1147, metadata !409, metadata !DIExpression()), !dbg !1499
  br label %1151, !dbg !1576

; <label>:1148:                                   ; preds = %1141
  %1149 = load %struct.pbuf*, %struct.pbuf** @recv_data, align 8, !dbg !1578, !tbaa !458
  %1150 = call signext i8 @tcp_recv_null(i8* null, %struct.tcp_pcb* nonnull %186, %struct.pbuf* %1149, i8 signext 0) #10, !dbg !1578
  call void @llvm.dbg.value(metadata i8 %1150, metadata !409, metadata !DIExpression()), !dbg !1499
  br label %1151

; <label>:1151:                                   ; preds = %1148, %1144
  %1152 = phi i8 [ %1147, %1144 ], [ %1150, %1148 ], !dbg !1576
  call void @llvm.dbg.value(metadata i8 %1152, metadata !409, metadata !DIExpression()), !dbg !1499
  %1153 = icmp eq i8 %1152, -13, !dbg !1580
  br i1 %1153, label %1154, label %1159, !dbg !1582

; <label>:1154:                                   ; preds = %1151
  %1155 = load %struct.pbuf*, %struct.pbuf** %3, align 8, !dbg !1583, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.pbuf* %1155, metadata !426, metadata !DIExpression()), !dbg !1542
  %1156 = icmp eq %struct.pbuf* %1155, null, !dbg !1586
  br i1 %1156, label %1169, label %1157, !dbg !1587

; <label>:1157:                                   ; preds = %1154
  %1158 = call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %1155) #10, !dbg !1588
  br label %1169, !dbg !1590

; <label>:1159:                                   ; preds = %1151
  %1160 = icmp eq i8 %1152, 0, !dbg !1591
  %1161 = load %struct.pbuf*, %struct.pbuf** %3, align 8, !dbg !1593, !tbaa !458
  call void @llvm.dbg.value(metadata %struct.pbuf* %1161, metadata !426, metadata !DIExpression()), !dbg !1542
  br i1 %1160, label %1170, label %1162, !dbg !1595

; <label>:1162:                                   ; preds = %1159
  %1163 = icmp eq %struct.pbuf* %1161, null, !dbg !1596
  br i1 %1163, label %1166, label %1164, !dbg !1599

; <label>:1164:                                   ; preds = %1162
  %1165 = load %struct.pbuf*, %struct.pbuf** @recv_data, align 8, !dbg !1600, !tbaa !458
  call void @pbuf_cat(%struct.pbuf* %1165, %struct.pbuf* nonnull %1161) #10, !dbg !1602
  br label %1166, !dbg !1603

; <label>:1166:                                   ; preds = %1164, %1162
  %1167 = load i64, i64* bitcast (%struct.pbuf** @recv_data to i64*), align 8, !dbg !1604, !tbaa !458
  %1168 = bitcast %struct.pbuf** %654 to i64*, !dbg !1605
  store i64 %1167, i64* %1168, align 8, !dbg !1605, !tbaa !1036
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1120) #7, !dbg !1606
  br label %1172

; <label>:1169:                                   ; preds = %1140, %1154, %1157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1120) #7, !dbg !1606
  br label %1208

; <label>:1170:                                   ; preds = %1159
  store %struct.pbuf* %1161, %struct.pbuf** @recv_data, align 8, !dbg !1607, !tbaa !458
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1120) #7, !dbg !1606
  %1171 = icmp eq %struct.pbuf* %1161, null, !dbg !1539
  br i1 %1171, label %1172, label %1124, !dbg !1540

; <label>:1172:                                   ; preds = %1170, %1116, %1166
  %1173 = load i8, i8* @recv_flags, align 1, !dbg !1608, !tbaa !470
  %1174 = and i8 %1173, 32, !dbg !1610
  %1175 = icmp eq i8 %1174, 0, !dbg !1610
  br i1 %1175, label %1203, label %1176, !dbg !1611

; <label>:1176:                                   ; preds = %1172
  %1177 = load %struct.pbuf*, %struct.pbuf** %654, align 8, !dbg !1612, !tbaa !1036
  %1178 = icmp eq %struct.pbuf* %1177, null, !dbg !1615
  br i1 %1178, label %1183, label %1179, !dbg !1616

; <label>:1179:                                   ; preds = %1176
  %1180 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %1177, i64 0, i32 5, !dbg !1617
  %1181 = load i8, i8* %1180, align 1, !dbg !1619, !tbaa !1032
  %1182 = or i8 %1181, 32, !dbg !1619
  store i8 %1182, i8* %1180, align 1, !dbg !1619, !tbaa !1032
  br label %1203, !dbg !1620

; <label>:1183:                                   ; preds = %1176
  %1184 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 18, !dbg !1621
  %1185 = load i32, i32* %1184, align 8, !dbg !1621, !tbaa !768
  %1186 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 12, !dbg !1624
  %1187 = load i16, i16* %1186, align 2, !dbg !1624, !tbaa !791
  %1188 = and i16 %1187, 256, !dbg !1624
  %1189 = icmp eq i16 %1188, 0, !dbg !1624
  %1190 = select i1 %1189, i32 65535, i32 262142, !dbg !1624
  %1191 = icmp eq i32 %1185, %1190, !dbg !1625
  br i1 %1191, label %1194, label %1192, !dbg !1626

; <label>:1192:                                   ; preds = %1183
  %1193 = add i32 %1185, 1, !dbg !1627
  store i32 %1193, i32* %1184, align 8, !dbg !1627, !tbaa !768
  br label %1194, !dbg !1629

; <label>:1194:                                   ; preds = %1183, %1192
  %1195 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 50, !dbg !1630
  %1196 = load i8 (i8*, %struct.tcp_pcb*, %struct.pbuf*, i8)*, i8 (i8*, %struct.tcp_pcb*, %struct.pbuf*, i8)** %1195, align 8, !dbg !1630, !tbaa !1574
  %1197 = icmp eq i8 (i8*, %struct.tcp_pcb*, %struct.pbuf*, i8)* %1196, null, !dbg !1630
  br i1 %1197, label %1203, label %1198, !dbg !1633

; <label>:1198:                                   ; preds = %1194
  %1199 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %186, i64 0, i32 7, !dbg !1634
  %1200 = load i8*, i8** %1199, align 8, !dbg !1634, !tbaa !972
  %1201 = call signext i8 %1196(i8* %1200, %struct.tcp_pcb* nonnull %186, %struct.pbuf* null, i8 signext 0) #10, !dbg !1634
  call void @llvm.dbg.value(metadata i8 %1201, metadata !409, metadata !DIExpression()), !dbg !1499
  %1202 = icmp eq i8 %1201, -13, !dbg !1634
  br i1 %1202, label %1208, label %1203, !dbg !1636

; <label>:1203:                                   ; preds = %1194, %1172, %1179, %1198
  store %struct.tcp_pcb* null, %struct.tcp_pcb** @tcp_input_pcb, align 8, !dbg !1637, !tbaa !458
  %1204 = call fastcc i32 @tcp_input_delayed_close(%struct.tcp_pcb* nonnull %186) #8, !dbg !1638
  %1205 = icmp eq i32 %1204, 0, !dbg !1638
  br i1 %1205, label %1206, label %1208, !dbg !1640

; <label>:1206:                                   ; preds = %1203
  %1207 = call signext i8 @tcp_output(%struct.tcp_pcb* nonnull %186) #10, !dbg !1641
  br label %1208

; <label>:1208:                                   ; preds = %1109, %1169, %1077, %1203, %1113, %1206, %1089, %1198, %674
  store %struct.tcp_pcb* null, %struct.tcp_pcb** @tcp_input_pcb, align 8, !dbg !1642, !tbaa !458
  store %struct.pbuf* null, %struct.pbuf** @recv_data, align 8, !dbg !1643, !tbaa !458
  %1209 = load %struct.pbuf*, %struct.pbuf** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 1), align 8, !dbg !1644, !tbaa !1020
  %1210 = icmp eq %struct.pbuf* %1209, null, !dbg !1646
  br i1 %1210, label %1244, label %1211, !dbg !1647

; <label>:1211:                                   ; preds = %1208
  %1212 = call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %1209) #10, !dbg !1648
  store %struct.pbuf* null, %struct.pbuf** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 1), align 8, !dbg !1650, !tbaa !1020
  br label %1244, !dbg !1651

; <label>:1213:                                   ; preds = %284, %489
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* null, metadata !403, metadata !DIExpression()), !dbg !602
  %1214 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !1652, !tbaa !458
  %1215 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %1214, i64 0, i32 4, !dbg !1652
  %1216 = load i16, i16* %1215, align 1, !dbg !1652, !tbaa !487
  %1217 = tail call zeroext i16 @lwip_htons(i16 zeroext %1216) #10, !dbg !1652
  %1218 = and i16 %1217, 4, !dbg !1655
  %1219 = icmp eq i16 %1218, 0, !dbg !1655
  br i1 %1219, label %1220, label %1235, !dbg !1656

; <label>:1220:                                   ; preds = %1213
  %1221 = load i16, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 8), align 2, !dbg !1657, !tbaa !1659
  %1222 = add i16 %1221, 1, !dbg !1657
  store i16 %1222, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 8), align 2, !dbg !1657, !tbaa !1659
  %1223 = load i16, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 3), align 2, !dbg !1660, !tbaa !1094
  %1224 = add i16 %1223, 1, !dbg !1660
  store i16 %1224, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 3), align 2, !dbg !1660, !tbaa !1094
  %1225 = load i32, i32* @ackno, align 4, !dbg !1661, !tbaa !577
  %1226 = load i32, i32* @seqno, align 4, !dbg !1662, !tbaa !577
  %1227 = load i16, i16* @tcplen, align 2, !dbg !1663, !tbaa !498
  %1228 = zext i16 %1227 to i32, !dbg !1663
  %1229 = add i32 %1226, %1228, !dbg !1664
  %1230 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !1665, !tbaa !458
  %1231 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %1230, i64 0, i32 1, !dbg !1666
  %1232 = load i16, i16* %1231, align 1, !dbg !1666, !tbaa !567
  %1233 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %1230, i64 0, i32 0, !dbg !1667
  %1234 = load i16, i16* %1233, align 1, !dbg !1667, !tbaa !562
  tail call void @tcp_rst(%struct.tcp_pcb* null, i32 %1225, i32 %1229, %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 6), %struct.ip_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5), i16 zeroext %1232, i16 zeroext %1234) #10, !dbg !1668
  br label %1235, !dbg !1669

; <label>:1235:                                   ; preds = %1213, %1220
  %1236 = tail call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %0) #10, !dbg !1670
  br label %1244

; <label>:1237:                                   ; preds = %133, %70, %46, %55, %41, %27, %31, %19, %6
  %1238 = phi i16* [ getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 5), %6 ], [ getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 8), %19 ], [ getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 8), %31 ], [ getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 8), %27 ], [ getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 4), %41 ], [ getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 5), %55 ], [ getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 5), %46 ], [ getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 5), %70 ], [ getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 5), %133 ]
  %1239 = load i16, i16* %1238, align 2, !dbg !1671, !tbaa !498
  %1240 = add i16 %1239, 1, !dbg !1671
  store i16 %1240, i16* %1238, align 2, !dbg !1671, !tbaa !498
  %1241 = load i16, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 3), align 2, !dbg !1673, !tbaa !1094
  %1242 = add i16 %1241, 1, !dbg !1673
  store i16 %1242, i16* getelementptr inbounds (%struct.stats_, %struct.stats_* @lwip_stats, i64 0, i32 6, i32 3), align 2, !dbg !1673, !tbaa !1094
  %1243 = tail call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %0) #10, !dbg !1674
  br label %1244, !dbg !1675

; <label>:1244:                                   ; preds = %1211, %1235, %1208, %1237, %644, %411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1675
  ret void, !dbg !1675
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: inlinehint noredzone nounwind
define internal void @uk_pr_crit(i8*, ...) unnamed_addr #3 !dbg !291 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i8* %0, metadata !299, metadata !DIExpression()), !dbg !1676
  %3 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*, !dbg !1677
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7, !dbg !1677
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %2, metadata !300, metadata !DIExpression()), !dbg !1678
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0, !dbg !1679
  call void @llvm.va_start(i8* nonnull %3), !dbg !1679
  call void @_uk_vprintk(i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @uk_pr_crit.__str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @uk_pr_crit.__str.13, i64 0, i64 0), i32 198, i8* %0, %struct.__va_list_tag* nonnull %4) #10, !dbg !1680
  call void @llvm.va_end(i8* nonnull %3), !dbg !1683
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7, !dbg !1684
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1684
  ret void, !dbg !1684
}

; Function Attrs: noredzone noreturn
declare dso_local void @ukplat_terminate(i32) local_unnamed_addr #4

; Function Attrs: noredzone
declare dso_local zeroext i8 @ip4_addr_isbroadcast_u32(i32, %struct.netif*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local zeroext i16 @ip_chksum_pseudo(%struct.pbuf*, i8 zeroext, i16 zeroext, %struct.ip_addr*, %struct.ip_addr*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone
declare dso_local zeroext i16 @lwip_htons(i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local zeroext i8 @pbuf_remove_header(%struct.pbuf*, i64) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @lwip_htonl(i32) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local zeroext i8 @pbuf_free(%struct.pbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @tcp_process_refused_data(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @tcp_send_empty_ack(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_pcb_remove(%struct.tcp_pcb**, %struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_free(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i32 @tcp_input_delayed_close(%struct.tcp_pcb*) unnamed_addr #0 !dbg !1685 {
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %0, metadata !1689, metadata !DIExpression()), !dbg !1690
  %2 = icmp eq %struct.tcp_pcb* %0, null, !dbg !1691
  br i1 %2, label %3, label %4, !dbg !1694

; <label>:3:                                      ; preds = %1
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0)) #8, !dbg !1695
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !1698
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1698
  unreachable, !dbg !1698

; <label>:4:                                      ; preds = %1
  %5 = load i8, i8* @recv_flags, align 1, !dbg !1702, !tbaa !470
  %6 = and i8 %5, 16, !dbg !1704
  %7 = icmp eq i8 %6, 0, !dbg !1704
  br i1 %7, label %21, label %8, !dbg !1705

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 12, !dbg !1706
  %10 = load i16, i16* %9, align 2, !dbg !1706, !tbaa !791
  %11 = and i16 %10, 16, !dbg !1709
  %12 = icmp eq i16 %11, 0, !dbg !1709
  br i1 %12, label %13, label %20, !dbg !1710

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 53, !dbg !1711
  %15 = load void (i8*, i8)*, void (i8*, i8)** %14, align 8, !dbg !1711, !tbaa !1507
  %16 = icmp eq void (i8*, i8)* %15, null, !dbg !1711
  br i1 %16, label %20, label %17, !dbg !1715

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 7, !dbg !1711
  %19 = load i8*, i8** %18, align 8, !dbg !1711, !tbaa !972
  tail call void %15(i8* %19, i8 signext -15) #10, !dbg !1711
  br label %20, !dbg !1711

; <label>:20:                                     ; preds = %13, %8, %17
  tail call void @tcp_pcb_remove(%struct.tcp_pcb** nonnull @tcp_active_pcbs, %struct.tcp_pcb* nonnull %0) #10, !dbg !1716
  tail call void @tcp_free(%struct.tcp_pcb* nonnull %0) #10, !dbg !1717
  br label %21, !dbg !1718

; <label>:21:                                     ; preds = %4, %20
  %22 = phi i32 [ 1, %20 ], [ 0, %4 ], !dbg !1719
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1720
  ret i32 %22, !dbg !1720
}

; Function Attrs: noredzone
declare dso_local void @pbuf_split_64k(%struct.pbuf*, %struct.pbuf**) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_abort(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @tcp_recv_null(i8*, %struct.tcp_pcb*, %struct.pbuf*, i8 signext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @pbuf_cat(%struct.pbuf*, %struct.pbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @tcp_output(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_rst(%struct.tcp_pcb*, i32, i32, %struct.ip_addr*, %struct.ip_addr*, i16 zeroext, i16 zeroext) local_unnamed_addr #5

; Function Attrs: norecurse noredzone nounwind
define dso_local void @tcp_trigger_input_pcb_close() local_unnamed_addr #6 !dbg !1721 {
  %1 = load i8, i8* @recv_flags, align 1, !dbg !1725, !tbaa !470
  %2 = or i8 %1, 16, !dbg !1725
  store i8 %2, i8* @recv_flags, align 1, !dbg !1725, !tbaa !470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1726
  ret void, !dbg !1726
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

; Function Attrs: noredzone
declare dso_local void @_uk_vprintk(i32, i8*, i8*, i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: noredzone
declare dso_local %struct.tcp_pcb* @tcp_alloc(i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @tcp_next_iss(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_timer_needed() local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc void @tcp_parseopt(%struct.tcp_pcb*) unnamed_addr #0 !dbg !1727 {
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %0, metadata !1729, metadata !DIExpression()), !dbg !1738
  %2 = icmp eq %struct.tcp_pcb* %0, null, !dbg !1739
  br i1 %2, label %3, label %4, !dbg !1742

; <label>:3:                                      ; preds = %1
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0)) #8, !dbg !1743
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !1746
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1746
  unreachable, !dbg !1746

; <label>:4:                                      ; preds = %1
  %5 = load i16, i16* @tcphdr_optlen, align 2, !dbg !1750, !tbaa !498
  %6 = icmp eq i16 %5, 0, !dbg !1751
  br i1 %6, label %154, label %7, !dbg !1752

; <label>:7:                                      ; preds = %4
  %8 = load i8*, i8** @tcphdr_opt2, align 8, !tbaa !458
  %9 = icmp eq i8* %8, null
  %10 = load i8*, i8** bitcast (%struct.tcp_hdr** @tcphdr to i8**), align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 20
  %12 = load i16, i16* @tcphdr_opt1len, align 2
  %13 = zext i16 %12 to i64
  %14 = zext i16 %5 to i32
  %15 = load i8, i8* @flags, align 1
  %16 = and i8 %15, 2
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 22
  %19 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 12
  %20 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 59
  %21 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 60
  %22 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 18
  %23 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 19
  br label %24, !dbg !1753

; <label>:24:                                     ; preds = %7, %151
  %25 = phi i16 [ 0, %7 ], [ %152, %151 ]
  %26 = add i16 %25, 1, !dbg !1754
  call void @llvm.dbg.value(metadata i16 %25, metadata !1759, metadata !DIExpression()), !dbg !1766
  %27 = icmp ult i16 %25, %12, !dbg !1767
  %28 = or i1 %9, %27, !dbg !1768
  %29 = zext i16 %25 to i64, !dbg !1769
  call void @llvm.dbg.value(metadata i8* %11, metadata !1760, metadata !DIExpression()), !dbg !1770
  %30 = getelementptr inbounds i8, i8* %11, i64 %29, !dbg !1771
  %31 = sub nsw i64 %29, %13, !dbg !1772
  %32 = and i64 %31, 255, !dbg !1773
  call void @llvm.dbg.value(metadata i64 %31, metadata !1763, metadata !DIExpression()), !dbg !1774
  %33 = getelementptr inbounds i8, i8* %8, i64 %32, !dbg !1773
  %34 = select i1 %28, i8* %30, i8* %33, !dbg !1768
  %35 = load i8, i8* %34, align 1, !dbg !1775, !tbaa !470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1776
  call void @llvm.dbg.value(metadata i8 %35, metadata !1732, metadata !DIExpression()), !dbg !1777
  switch i8 %35, label %137 [
    i8 0, label %154
    i8 1, label %151
    i8 2, label %36
    i8 3, label %96
  ], !dbg !1778

; <label>:36:                                     ; preds = %24
  %37 = add i16 %25, 2, !dbg !1779
  call void @llvm.dbg.value(metadata i16 %26, metadata !1759, metadata !DIExpression()), !dbg !1783
  %38 = icmp ult i16 %26, %12, !dbg !1784
  %39 = or i1 %9, %38, !dbg !1785
  %40 = zext i16 %26 to i64, !dbg !1786
  call void @llvm.dbg.value(metadata i8* %11, metadata !1760, metadata !DIExpression()), !dbg !1787
  %41 = getelementptr inbounds i8, i8* %11, i64 %40, !dbg !1788
  %42 = sub nsw i64 %40, %13, !dbg !1789
  %43 = and i64 %42, 255, !dbg !1790
  call void @llvm.dbg.value(metadata i64 %42, metadata !1763, metadata !DIExpression()), !dbg !1791
  %44 = getelementptr inbounds i8, i8* %8, i64 %43, !dbg !1790
  %45 = select i1 %39, i8* %41, i8* %44, !dbg !1785
  %46 = load i8, i8* %45, align 1, !dbg !1792, !tbaa !470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1793
  %47 = icmp eq i8 %46, 4, !dbg !1794
  br i1 %47, label %48, label %154, !dbg !1795

; <label>:48:                                     ; preds = %36
  %49 = zext i16 %37 to i32, !dbg !1796
  %50 = add nuw nsw i32 %49, 2, !dbg !1797
  %51 = icmp ugt i32 %50, %14, !dbg !1798
  br i1 %51, label %154, label %52, !dbg !1799

; <label>:52:                                     ; preds = %48
  %53 = add i16 %25, 3, !dbg !1800
  call void @llvm.dbg.value(metadata i16 %37, metadata !1759, metadata !DIExpression()), !dbg !1802
  %54 = icmp ult i16 %37, %12, !dbg !1803
  %55 = or i1 %9, %54, !dbg !1804
  %56 = zext i16 %37 to i64, !dbg !1805
  br i1 %55, label %65, label %57, !dbg !1804

; <label>:57:                                     ; preds = %52
  %58 = sub nsw i64 %56, %13, !dbg !1806
  %59 = and i64 %58, 255, !dbg !1807
  call void @llvm.dbg.value(metadata i64 %58, metadata !1763, metadata !DIExpression()), !dbg !1808
  %60 = getelementptr inbounds i8, i8* %8, i64 %59, !dbg !1807
  %61 = load i8, i8* %60, align 1, !dbg !1809, !tbaa !470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1810
  %62 = zext i8 %61 to i32, !dbg !1811
  %63 = shl nuw nsw i32 %62, 8, !dbg !1812
  %64 = add i16 %25, 4, !dbg !1813
  call void @llvm.dbg.value(metadata i16 %53, metadata !1759, metadata !DIExpression()), !dbg !1815
  br label %71, !dbg !1816

; <label>:65:                                     ; preds = %52
  call void @llvm.dbg.value(metadata i8* %11, metadata !1760, metadata !DIExpression()), !dbg !1817
  %66 = getelementptr inbounds i8, i8* %11, i64 %56, !dbg !1818
  %67 = load i8, i8* %66, align 1, !dbg !1809, !tbaa !470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1810
  %68 = zext i8 %67 to i32, !dbg !1811
  %69 = shl nuw nsw i32 %68, 8, !dbg !1812
  %70 = add i16 %25, 4, !dbg !1813
  call void @llvm.dbg.value(metadata i16 %53, metadata !1759, metadata !DIExpression()), !dbg !1815
  br i1 %9, label %75, label %71, !dbg !1816

; <label>:71:                                     ; preds = %57, %65
  %72 = phi i16 [ %64, %57 ], [ %70, %65 ]
  %73 = phi i32 [ %63, %57 ], [ %69, %65 ]
  %74 = icmp ult i16 %53, %12, !dbg !1819
  br i1 %74, label %75, label %80, !dbg !1820

; <label>:75:                                     ; preds = %71, %65
  %76 = phi i16 [ %72, %71 ], [ %70, %65 ]
  %77 = phi i32 [ %73, %71 ], [ %69, %65 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !1760, metadata !DIExpression()), !dbg !1821
  %78 = zext i16 %53 to i64, !dbg !1822
  %79 = getelementptr inbounds i8, i8* %11, i64 %78, !dbg !1822
  br label %85

; <label>:80:                                     ; preds = %71
  %81 = zext i16 %53 to i64, !dbg !1823
  %82 = sub nsw i64 %81, %13, !dbg !1824
  %83 = and i64 %82, 255, !dbg !1825
  call void @llvm.dbg.value(metadata i64 %82, metadata !1763, metadata !DIExpression()), !dbg !1826
  %84 = getelementptr inbounds i8, i8* %8, i64 %83, !dbg !1825
  br label %85

; <label>:85:                                     ; preds = %75, %80
  %86 = phi i16 [ %76, %75 ], [ %72, %80 ]
  %87 = phi i32 [ %77, %75 ], [ %73, %80 ]
  %88 = phi i8* [ %79, %75 ], [ %84, %80 ]
  %89 = load i8, i8* %88, align 1, !dbg !1827, !tbaa !470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1828
  %90 = zext i8 %89 to i32, !dbg !1829
  %91 = or i32 %87, %90, !dbg !1830
  call void @llvm.dbg.value(metadata i32 %91, metadata !1731, metadata !DIExpression()), !dbg !1831
  %92 = add nsw i32 %91, -1, !dbg !1832
  %93 = icmp ugt i32 %92, 1459, !dbg !1832
  %94 = select i1 %93, i32 1460, i32 %91, !dbg !1832
  %95 = trunc i32 %94 to i16, !dbg !1833
  store i16 %95, i16* %18, align 2, !dbg !1834, !tbaa !999
  br label %151, !dbg !1835

; <label>:96:                                     ; preds = %24
  %97 = add i16 %25, 2, !dbg !1836
  call void @llvm.dbg.value(metadata i16 %26, metadata !1759, metadata !DIExpression()), !dbg !1839
  %98 = icmp ult i16 %26, %12, !dbg !1840
  %99 = or i1 %9, %98, !dbg !1841
  %100 = zext i16 %26 to i64, !dbg !1842
  call void @llvm.dbg.value(metadata i8* %11, metadata !1760, metadata !DIExpression()), !dbg !1843
  %101 = getelementptr inbounds i8, i8* %11, i64 %100, !dbg !1844
  %102 = sub nsw i64 %100, %13, !dbg !1845
  %103 = and i64 %102, 255, !dbg !1846
  call void @llvm.dbg.value(metadata i64 %102, metadata !1763, metadata !DIExpression()), !dbg !1847
  %104 = getelementptr inbounds i8, i8* %8, i64 %103, !dbg !1846
  %105 = select i1 %99, i8* %101, i8* %104, !dbg !1841
  %106 = load i8, i8* %105, align 1, !dbg !1848, !tbaa !470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1849
  %107 = icmp eq i8 %106, 3, !dbg !1850
  %108 = icmp ult i16 %97, %5, !dbg !1851
  %109 = and i1 %108, %107, !dbg !1852
  br i1 %109, label %110, label %154, !dbg !1852

; <label>:110:                                    ; preds = %96
  %111 = add i16 %25, 3, !dbg !1853
  call void @llvm.dbg.value(metadata i16 %97, metadata !1759, metadata !DIExpression()), !dbg !1855
  %112 = icmp ult i16 %97, %12, !dbg !1856
  %113 = or i1 %9, %112, !dbg !1857
  %114 = zext i16 %97 to i64, !dbg !1805
  call void @llvm.dbg.value(metadata i8* %11, metadata !1760, metadata !DIExpression()), !dbg !1858
  %115 = getelementptr inbounds i8, i8* %11, i64 %114, !dbg !1859
  %116 = sub nsw i64 %114, %13, !dbg !1860
  %117 = and i64 %116, 255, !dbg !1861
  call void @llvm.dbg.value(metadata i64 %116, metadata !1763, metadata !DIExpression()), !dbg !1862
  %118 = getelementptr inbounds i8, i8* %8, i64 %117, !dbg !1861
  %119 = select i1 %113, i8* %115, i8* %118, !dbg !1857
  %120 = load i8, i8* %119, align 1, !dbg !1863, !tbaa !470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1864
  call void @llvm.dbg.value(metadata i8 %120, metadata !1730, metadata !DIExpression()), !dbg !1865
  br i1 %17, label %151, label %121, !dbg !1866

; <label>:121:                                    ; preds = %110
  %122 = load i16, i16* %19, align 2, !dbg !1868, !tbaa !791
  %123 = and i16 %122, 256, !dbg !1869
  %124 = icmp eq i16 %123, 0, !dbg !1869
  br i1 %124, label %125, label %151, !dbg !1870

; <label>:125:                                    ; preds = %121
  %126 = icmp ult i8 %120, 14, !dbg !1871
  %127 = select i1 %126, i8 %120, i8 14, !dbg !1871
  store i8 %127, i8* %20, align 8, !dbg !1873, !tbaa !1874
  store i8 4, i8* %21, align 1, !dbg !1875, !tbaa !1876
  %128 = or i16 %122, 256, !dbg !1877
  store i16 %128, i16* %19, align 2, !dbg !1877, !tbaa !791
  %129 = load i32, i32* %22, align 8, !dbg !1879, !tbaa !768
  %130 = icmp eq i32 %129, 65535, !dbg !1879
  br i1 %130, label %132, label %131, !dbg !1882

; <label>:131:                                    ; preds = %125
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0)) #8, !dbg !1883
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !1886
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1886
  unreachable, !dbg !1886

; <label>:132:                                    ; preds = %125
  %133 = load i32, i32* %23, align 4, !dbg !1890, !tbaa !1087
  %134 = icmp eq i32 %133, 65535, !dbg !1890
  br i1 %134, label %136, label %135, !dbg !1893

; <label>:135:                                    ; preds = %132
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0)) #8, !dbg !1894
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !1897
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1897
  unreachable, !dbg !1897

; <label>:136:                                    ; preds = %132
  store i32 262142, i32* %23, align 4, !dbg !1901, !tbaa !1087
  store i32 262142, i32* %22, align 8, !dbg !1902, !tbaa !768
  br label %151, !dbg !1903

; <label>:137:                                    ; preds = %24
  call void @llvm.dbg.value(metadata i16 %26, metadata !1759, metadata !DIExpression()), !dbg !1904
  %138 = icmp ult i16 %26, %12, !dbg !1906
  %139 = or i1 %9, %138, !dbg !1907
  %140 = zext i16 %26 to i64, !dbg !1805
  call void @llvm.dbg.value(metadata i8* %11, metadata !1760, metadata !DIExpression()), !dbg !1908
  %141 = getelementptr inbounds i8, i8* %11, i64 %140, !dbg !1909
  %142 = sub nsw i64 %140, %13, !dbg !1910
  %143 = and i64 %142, 255, !dbg !1911
  call void @llvm.dbg.value(metadata i64 %142, metadata !1763, metadata !DIExpression()), !dbg !1912
  %144 = getelementptr inbounds i8, i8* %8, i64 %143, !dbg !1911
  %145 = select i1 %139, i8* %141, i8* %144, !dbg !1907
  %146 = load i8, i8* %145, align 1, !dbg !1913, !tbaa !470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1914
  call void @llvm.dbg.value(metadata i8 %146, metadata !1730, metadata !DIExpression()), !dbg !1865
  %147 = icmp ult i8 %146, 2, !dbg !1915
  br i1 %147, label %154, label %148, !dbg !1917

; <label>:148:                                    ; preds = %137
  %149 = zext i8 %146 to i16, !dbg !1918
  %150 = add i16 %25, %149, !dbg !1919
  br label %151, !dbg !1920

; <label>:151:                                    ; preds = %121, %110, %136, %24, %148, %85
  %152 = phi i16 [ %111, %121 ], [ %111, %110 ], [ %111, %136 ], [ %26, %24 ], [ %150, %148 ], [ %86, %85 ], !dbg !1921
  %153 = icmp ult i16 %152, %5, !dbg !1922
  br i1 %153, label %24, label %154, !dbg !1753

; <label>:154:                                    ; preds = %137, %96, %48, %36, %24, %151, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1923
  ret void, !dbg !1923
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @tcp_eff_send_mss_netif(i16 zeroext, %struct.netif*, %struct.ip_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.netif* @ip6_route(%struct.ip6_addr*, %struct.ip6_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.netif* @ip4_route(%struct.ip4_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @tcp_enqueue_flags(%struct.tcp_pcb*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_abandon(%struct.tcp_pcb*, i32) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_seg_free(%struct.tcp_seg*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_rexmit_rto(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc void @tcp_receive(%struct.tcp_pcb*) unnamed_addr #0 !dbg !1924 {
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %0, metadata !1926, metadata !DIExpression()), !dbg !1989
  call void @llvm.dbg.value(metadata i32 0, metadata !1929, metadata !DIExpression()), !dbg !1990
  %2 = icmp eq %struct.tcp_pcb* %0, null, !dbg !1991
  br i1 %2, label %3, label %4, !dbg !1994

; <label>:3:                                      ; preds = %1
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i64 0, i64 0)) #8, !dbg !1995
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !1998
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1998
  unreachable, !dbg !1998

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 8, !dbg !2002
  %6 = load i32, i32* %5, align 8, !dbg !2002, !tbaa !618
  %7 = icmp ugt i32 %6, 3, !dbg !2002
  br i1 %7, label %9, label %8, !dbg !2005

; <label>:8:                                      ; preds = %4
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0)) #8, !dbg !2006
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2009
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2009
  unreachable, !dbg !2009

; <label>:9:                                      ; preds = %4
  %10 = load i8, i8* @flags, align 1, !dbg !2013, !tbaa !470
  %11 = and i8 %10, 16, !dbg !2014
  %12 = icmp eq i8 %11, 0, !dbg !2014
  br i1 %12, label %265, label %13, !dbg !2015

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 38, !dbg !2016
  %15 = load i32, i32* %14, align 8, !dbg !2016, !tbaa !994
  %16 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 36, !dbg !2017
  %17 = load i32, i32* %16, align 8, !dbg !2017, !tbaa !954
  %18 = add i32 %17, %15, !dbg !2018
  call void @llvm.dbg.value(metadata i32 %18, metadata !1928, metadata !DIExpression()), !dbg !2019
  %19 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 35, !dbg !2020
  %20 = load i32, i32* %19, align 4, !dbg !2020, !tbaa !968
  %21 = load i32, i32* @seqno, align 4, !dbg !2020, !tbaa !577
  %22 = sub i32 %20, %21, !dbg !2020
  %23 = icmp slt i32 %22, 0, !dbg !2020
  br i1 %23, label %42, label %24, !dbg !2022

; <label>:24:                                     ; preds = %13
  %25 = icmp eq i32 %20, %21, !dbg !2023
  %26 = load i32, i32* @ackno, align 4, !dbg !2024, !tbaa !577
  %27 = sub i32 %17, %26, !dbg !2025
  %28 = icmp slt i32 %27, 0, !dbg !2025
  %29 = and i1 %25, %28, !dbg !2026
  br i1 %29, label %42, label %30, !dbg !2026

; <label>:30:                                     ; preds = %24
  %31 = icmp eq i32 %17, %26, !dbg !2027
  br i1 %31, label %32, label %57, !dbg !2028

; <label>:32:                                     ; preds = %30
  %33 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !2029, !tbaa !458
  %34 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %33, i64 0, i32 5, !dbg !2029
  %35 = load i16, i16* %34, align 1, !dbg !2029, !tbaa !585
  %36 = zext i16 %35 to i32, !dbg !2029
  %37 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 59, !dbg !2029
  %38 = load i8, i8* %37, align 8, !dbg !2029, !tbaa !1874
  %39 = zext i8 %38 to i32, !dbg !2029
  %40 = shl i32 %36, %39, !dbg !2029
  %41 = icmp ugt i32 %40, %15, !dbg !2030
  br i1 %41, label %42, label %57, !dbg !2031

; <label>:42:                                     ; preds = %24, %32, %13
  %43 = load %struct.tcp_hdr*, %struct.tcp_hdr** @tcphdr, align 8, !dbg !2032, !tbaa !458
  %44 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %43, i64 0, i32 5, !dbg !2032
  %45 = load i16, i16* %44, align 1, !dbg !2032, !tbaa !585
  %46 = zext i16 %45 to i32, !dbg !2032
  %47 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 59, !dbg !2032
  %48 = load i8, i8* %47, align 8, !dbg !2032, !tbaa !1874
  %49 = zext i8 %48 to i32, !dbg !2032
  %50 = shl i32 %46, %49, !dbg !2032
  store i32 %50, i32* %14, align 8, !dbg !2034, !tbaa !994
  %51 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 39, !dbg !2035
  %52 = load i32, i32* %51, align 4, !dbg !2035, !tbaa !997
  %53 = icmp ult i32 %52, %50, !dbg !2037
  br i1 %53, label %54, label %55, !dbg !2038

; <label>:54:                                     ; preds = %42
  store i32 %50, i32* %51, align 4, !dbg !2039, !tbaa !997
  br label %55, !dbg !2041

; <label>:55:                                     ; preds = %54, %42
  store i32 %21, i32* %19, align 4, !dbg !2042, !tbaa !968
  %56 = load i32, i32* @ackno, align 4, !dbg !2043, !tbaa !577
  store i32 %56, i32* %16, align 8, !dbg !2044, !tbaa !954
  br label %57, !dbg !2045

; <label>:57:                                     ; preds = %55, %32, %30
  %58 = phi i32 [ %50, %55 ], [ %15, %32 ], [ %15, %30 ]
  %59 = phi i32 [ %56, %55 ], [ %17, %32 ], [ %17, %30 ]
  %60 = phi i32 [ %56, %55 ], [ %17, %32 ], [ %26, %30 ], !dbg !2046
  %61 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 30, !dbg !2046
  %62 = load i32, i32* %61, align 8, !dbg !2046, !tbaa !960
  %63 = sub i32 %60, %62, !dbg !2046
  %64 = icmp slt i32 %63, 1, !dbg !2046
  br i1 %64, label %65, label %98, !dbg !2047

; <label>:65:                                     ; preds = %57
  %66 = load i16, i16* @tcplen, align 2, !dbg !2048, !tbaa !498
  %67 = icmp eq i16 %66, 0, !dbg !2051
  %68 = add i32 %58, %59, !dbg !2052
  %69 = icmp eq i32 %68, %18, !dbg !2055
  %70 = and i1 %67, %69, !dbg !2056
  br i1 %70, label %71, label %96, !dbg !2056

; <label>:71:                                     ; preds = %65
  %72 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 21, !dbg !2057
  %73 = load i16, i16* %72, align 4, !dbg !2057, !tbaa !1245
  %74 = icmp sgt i16 %73, -1, !dbg !2060
  %75 = icmp eq i32 %60, %62, !dbg !2061
  %76 = and i1 %75, %74, !dbg !2064
  br i1 %76, label %77, label %96, !dbg !2064

; <label>:77:                                     ; preds = %71
  call void @llvm.dbg.value(metadata i32 1, metadata !1929, metadata !DIExpression()), !dbg !1990
  %78 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 29, !dbg !2065
  %79 = load i8, i8* %78, align 1, !dbg !2065, !tbaa !2068
  %80 = icmp eq i8 %79, -1, !dbg !2069
  br i1 %80, label %84, label %81, !dbg !2070

; <label>:81:                                     ; preds = %77
  %82 = add i8 %79, 1, !dbg !2071
  store i8 %82, i8* %78, align 1, !dbg !2071, !tbaa !2068
  %83 = icmp ugt i8 %82, 3, !dbg !2073
  br i1 %83, label %84, label %93, !dbg !2075

; <label>:84:                                     ; preds = %77, %81
  %85 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 31, !dbg !2076
  %86 = load i32, i32* %85, align 4, !dbg !2076, !tbaa !1201
  %87 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 22, !dbg !2076
  %88 = load i16, i16* %87, align 2, !dbg !2076, !tbaa !999
  %89 = zext i16 %88 to i32, !dbg !2076
  %90 = add i32 %86, %89, !dbg !2076
  %91 = icmp ult i32 %90, %86, !dbg !2076
  %92 = select i1 %91, i32 -1, i32 %90
  store i32 %92, i32* %85, align 4, !dbg !2080, !tbaa !1201
  br label %95, !dbg !2082

; <label>:93:                                     ; preds = %81
  %94 = icmp eq i8 %82, 3, !dbg !2085
  br i1 %94, label %95, label %230, !dbg !2086

; <label>:95:                                     ; preds = %84, %93
  tail call void @tcp_rexmit_fast(%struct.tcp_pcb* nonnull %0) #10, !dbg !2082
  br label %230

; <label>:96:                                     ; preds = %65, %71
  %97 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 29, !dbg !2087
  store i8 0, i8* %97, align 1, !dbg !2090, !tbaa !2068
  br label %230, !dbg !2091

; <label>:98:                                     ; preds = %57
  %99 = xor i32 %62, -1, !dbg !2092
  %100 = add i32 %60, %99, !dbg !2092
  %101 = icmp sgt i32 %100, -1, !dbg !2092
  br i1 %101, label %102, label %228, !dbg !2092

; <label>:102:                                    ; preds = %98
  %103 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 34, !dbg !2092
  %104 = load i32, i32* %103, align 8, !dbg !2092, !tbaa !957
  %105 = sub i32 %60, %104, !dbg !2092
  %106 = icmp slt i32 %105, 1, !dbg !2092
  br i1 %106, label %107, label %228, !dbg !2093

; <label>:107:                                    ; preds = %102
  %108 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 12, !dbg !2094
  %109 = load i16, i16* %108, align 2, !dbg !2094, !tbaa !791
  %110 = and i16 %109, 4, !dbg !2096
  %111 = icmp eq i16 %110, 0, !dbg !2096
  br i1 %111, label %112, label %117, !dbg !2097

; <label>:112:                                    ; preds = %107
  %113 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 31
  %114 = load i32, i32* %113, align 4, !dbg !2098, !tbaa !1201
  %115 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 32
  %116 = load i32, i32* %115, align 8, !dbg !2099, !tbaa !2100
  br label %123, !dbg !2097

; <label>:117:                                    ; preds = %107
  %118 = and i16 %109, -5, !dbg !2101
  store i16 %118, i16* %108, align 2, !dbg !2101, !tbaa !791
  %119 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 32, !dbg !2104
  %120 = load i32, i32* %119, align 8, !dbg !2104, !tbaa !2100
  %121 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 31, !dbg !2105
  store i32 %120, i32* %121, align 4, !dbg !2106, !tbaa !1201
  %122 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 43, !dbg !2107
  store i32 0, i32* %122, align 8, !dbg !2108, !tbaa !2109
  br label %123, !dbg !2110

; <label>:123:                                    ; preds = %112, %117
  %124 = phi i32* [ %113, %112 ], [ %121, %117 ], !dbg !2098
  %125 = phi i16 [ %109, %112 ], [ %118, %117 ]
  %126 = phi i32 [ %116, %112 ], [ %120, %117 ], !dbg !2099
  %127 = phi i32 [ %114, %112 ], [ %120, %117 ], !dbg !2098
  %128 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 28, !dbg !2111
  store i8 0, i8* %128, align 2, !dbg !2112, !tbaa !1250
  %129 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 25, !dbg !2113
  %130 = load i16, i16* %129, align 8, !dbg !2113, !tbaa !2114
  %131 = ashr i16 %130, 3, !dbg !2115
  %132 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 26, !dbg !2116
  %133 = load i16, i16* %132, align 2, !dbg !2116, !tbaa !2117
  %134 = add i16 %131, %133, !dbg !2118
  %135 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 27, !dbg !2119
  store i16 %134, i16* %135, align 4, !dbg !2120, !tbaa !2121
  call void @llvm.dbg.value(metadata i32 %63, metadata !1930, metadata !DIExpression()), !dbg !2122
  %136 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 29, !dbg !2123
  store i8 0, i8* %136, align 1, !dbg !2124, !tbaa !2068
  store i32 %60, i32* %61, align 8, !dbg !2125, !tbaa !960
  %137 = icmp ult i32 %127, %126, !dbg !2126
  br i1 %137, label %138, label %149, !dbg !2127

; <label>:138:                                    ; preds = %123
  %139 = and i16 %125, 2048, !dbg !2128
  %140 = icmp eq i16 %139, 0, !dbg !2129
  %141 = select i1 %140, i32 2, i32 1, !dbg !2130
  call void @llvm.dbg.value(metadata i32 %141, metadata !1941, metadata !DIExpression()), !dbg !2131
  %142 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 22, !dbg !2130
  %143 = load i16, i16* %142, align 2, !dbg !2130, !tbaa !999
  %144 = zext i16 %143 to i32, !dbg !2130
  %145 = mul nuw nsw i32 %141, %144, !dbg !2130
  %146 = icmp ult i32 %63, %145, !dbg !2130
  %147 = select i1 %146, i32 %63, i32 %145, !dbg !2130
  call void @llvm.dbg.value(metadata i32 %147, metadata !1936, metadata !DIExpression()), !dbg !2132
  %148 = add i32 %147, %127, !dbg !2133
  br label %162, !dbg !2136

; <label>:149:                                    ; preds = %123
  %150 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 43, !dbg !2137
  %151 = load i32, i32* %150, align 8, !dbg !2137, !tbaa !2109
  %152 = add i32 %151, %63, !dbg !2137
  %153 = icmp ult i32 %152, %151, !dbg !2137
  %154 = select i1 %153, i32 -1, i32 %152
  store i32 %154, i32* %150, align 8, !dbg !2141, !tbaa !2109
  %155 = icmp ult i32 %154, %127, !dbg !2143
  br i1 %155, label %166, label %156, !dbg !2145

; <label>:156:                                    ; preds = %149
  %157 = sub i32 %154, %127, !dbg !2146
  store i32 %157, i32* %150, align 8, !dbg !2148, !tbaa !2109
  %158 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 22, !dbg !2149
  %159 = load i16, i16* %158, align 2, !dbg !2149, !tbaa !999
  %160 = zext i16 %159 to i32, !dbg !2149
  %161 = add i32 %127, %160, !dbg !2149
  br label %162

; <label>:162:                                    ; preds = %156, %138
  %163 = phi i32 [ %161, %156 ], [ %148, %138 ]
  %164 = icmp ult i32 %163, %127, !dbg !2152
  %165 = select i1 %164, i32 -1, i32 %163
  store i32 %165, i32* %124, align 4, !dbg !2153, !tbaa !1201
  br label %166, !dbg !2155

; <label>:166:                                    ; preds = %162, %149
  %167 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 45, !dbg !2155
  %168 = load %struct.tcp_seg*, %struct.tcp_seg** %167, align 8, !dbg !2155, !tbaa !1216
  %169 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 44, !dbg !2156
  %170 = load %struct.tcp_seg*, %struct.tcp_seg** %169, align 8, !dbg !2156, !tbaa !1223
  %171 = tail call fastcc %struct.tcp_seg* @tcp_free_acked_segments(%struct.tcp_pcb* nonnull %0, %struct.tcp_seg* %168, %struct.tcp_seg* %170) #8, !dbg !2157
  store %struct.tcp_seg* %171, %struct.tcp_seg** %167, align 8, !dbg !2158, !tbaa !1216
  %172 = load %struct.tcp_seg*, %struct.tcp_seg** %169, align 8, !dbg !2159, !tbaa !1223
  %173 = tail call fastcc %struct.tcp_seg* @tcp_free_acked_segments(%struct.tcp_pcb* nonnull %0, %struct.tcp_seg* %172, %struct.tcp_seg* %171) #8, !dbg !2160
  store %struct.tcp_seg* %173, %struct.tcp_seg** %169, align 8, !dbg !2161, !tbaa !1223
  %174 = load %struct.tcp_seg*, %struct.tcp_seg** %167, align 8, !dbg !2162, !tbaa !1216
  %175 = icmp eq %struct.tcp_seg* %174, null, !dbg !2164
  %176 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 21, !dbg !2165
  %177 = sext i1 %175 to i16, !dbg !2167
  store i16 %177, i16* %176, align 4, !dbg !2169, !tbaa !1245
  %178 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 13, !dbg !2170
  store i8 0, i8* %178, align 4, !dbg !2171, !tbaa !2172
  %179 = icmp eq %struct.tcp_seg* %173, null, !dbg !2173
  br i1 %179, label %180, label %182, !dbg !2175

; <label>:180:                                    ; preds = %166
  %181 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 42, !dbg !2176
  store i16 0, i16* %181, align 2, !dbg !2178, !tbaa !2179
  br label %182, !dbg !2180

; <label>:182:                                    ; preds = %180, %166
  %183 = load %struct.ip6_hdr*, %struct.ip6_hdr** getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 3), align 8, !dbg !2181, !tbaa !2183
  %184 = icmp eq %struct.ip6_hdr* %183, null, !dbg !2181
  br i1 %184, label %186, label %185, !dbg !2184

; <label>:185:                                    ; preds = %182
  tail call void @nd6_reachability_hint(%struct.ip6_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0)) #10, !dbg !2185
  br label %186, !dbg !2187

; <label>:186:                                    ; preds = %182, %185
  %187 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 40, !dbg !2188
  %188 = load i32, i32* %187, align 8, !dbg !2188, !tbaa !2189
  %189 = load i32, i32* @recv_acked, align 4, !dbg !2190, !tbaa !577
  %190 = add i32 %189, %188, !dbg !2191
  store i32 %190, i32* %187, align 8, !dbg !2192, !tbaa !2189
  %191 = load i16, i16* %108, align 2, !dbg !2193, !tbaa !791
  %192 = and i16 %191, 2048, !dbg !2195
  %193 = icmp eq i16 %192, 0, !dbg !2195
  br i1 %193, label %230, label %194, !dbg !2196

; <label>:194:                                    ; preds = %186
  %195 = load %struct.tcp_seg*, %struct.tcp_seg** %167, align 8, !dbg !2197, !tbaa !1216
  %196 = icmp eq %struct.tcp_seg* %195, null, !dbg !2200
  br i1 %196, label %197, label %215, !dbg !2201

; <label>:197:                                    ; preds = %194
  %198 = load %struct.tcp_seg*, %struct.tcp_seg** %169, align 8, !dbg !2202, !tbaa !1223
  %199 = icmp eq %struct.tcp_seg* %198, null, !dbg !2205
  br i1 %199, label %212, label %200, !dbg !2206

; <label>:200:                                    ; preds = %197
  %201 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 33, !dbg !2207
  %202 = load i32, i32* %201, align 4, !dbg !2207, !tbaa !2208
  %203 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %198, i64 0, i32 4, !dbg !2207
  %204 = load %struct.tcp_hdr*, %struct.tcp_hdr** %203, align 8, !dbg !2207, !tbaa !1022
  %205 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %204, i64 0, i32 2, !dbg !2207
  %206 = load i32, i32* %205, align 1, !dbg !2207, !tbaa !572
  %207 = tail call i32 @lwip_htonl(i32 %206) #10, !dbg !2207
  %208 = sub i32 %202, %207, !dbg !2207
  %209 = icmp slt i32 %208, 1, !dbg !2207
  br i1 %209, label %210, label %230, !dbg !2209

; <label>:210:                                    ; preds = %200
  %211 = load i16, i16* %108, align 2, !dbg !2210, !tbaa !791
  br label %212, !dbg !2209

; <label>:212:                                    ; preds = %210, %197
  %213 = phi i16 [ %211, %210 ], [ %191, %197 ], !dbg !2210
  %214 = and i16 %213, -2049, !dbg !2210
  store i16 %214, i16* %108, align 2, !dbg !2210, !tbaa !791
  br label %230, !dbg !2213

; <label>:215:                                    ; preds = %194
  %216 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 33, !dbg !2214
  %217 = load i32, i32* %216, align 4, !dbg !2214, !tbaa !2208
  %218 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %195, i64 0, i32 4, !dbg !2214
  %219 = load %struct.tcp_hdr*, %struct.tcp_hdr** %218, align 8, !dbg !2214, !tbaa !1022
  %220 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %219, i64 0, i32 2, !dbg !2214
  %221 = load i32, i32* %220, align 1, !dbg !2214, !tbaa !572
  %222 = tail call i32 @lwip_htonl(i32 %221) #10, !dbg !2214
  %223 = sub i32 %217, %222, !dbg !2214
  %224 = icmp slt i32 %223, 1, !dbg !2214
  br i1 %224, label %225, label %230, !dbg !2216

; <label>:225:                                    ; preds = %215
  %226 = load i16, i16* %108, align 2, !dbg !2217, !tbaa !791
  %227 = and i16 %226, -2049, !dbg !2217
  store i16 %227, i16* %108, align 2, !dbg !2217, !tbaa !791
  br label %230, !dbg !2220

; <label>:228:                                    ; preds = %102, %98
  %229 = tail call signext i8 @tcp_send_empty_ack(%struct.tcp_pcb* nonnull %0) #10, !dbg !2221
  br label %230

; <label>:230:                                    ; preds = %93, %215, %225, %200, %212, %186, %95, %228, %96
  %231 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 23, !dbg !2223
  %232 = load i32, i32* %231, align 8, !dbg !2223, !tbaa !2225
  %233 = icmp eq i32 %232, 0, !dbg !2226
  br i1 %233, label %265, label %234, !dbg !2227

; <label>:234:                                    ; preds = %230
  %235 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 24, !dbg !2228
  %236 = load i32, i32* %235, align 4, !dbg !2228, !tbaa !2229
  %237 = load i32, i32* @ackno, align 4, !dbg !2228, !tbaa !577
  %238 = sub i32 %236, %237, !dbg !2228
  %239 = icmp slt i32 %238, 0, !dbg !2228
  br i1 %239, label %240, label %265, !dbg !2230

; <label>:240:                                    ; preds = %234
  %241 = load i32, i32* @tcp_ticks, align 4, !dbg !2231, !tbaa !577
  %242 = sub i32 %241, %232, !dbg !2233
  %243 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 25, !dbg !2234
  %244 = load i16, i16* %243, align 8, !dbg !2234, !tbaa !2114
  %245 = ashr i16 %244, 3, !dbg !2235
  %246 = sext i16 %245 to i32, !dbg !2235
  %247 = sub i32 %242, %246, !dbg !2236
  %248 = shl i32 %247, 16, !dbg !2237
  %249 = ashr exact i32 %248, 16, !dbg !2237
  %250 = trunc i32 %249 to i16, !dbg !2238
  %251 = add i16 %244, %250, !dbg !2238
  store i16 %251, i16* %243, align 8, !dbg !2239, !tbaa !2114
  %252 = icmp slt i32 %248, 0, !dbg !2240
  %253 = sub nsw i32 0, %249, !dbg !2242
  %254 = select i1 %252, i32 %253, i32 %247, !dbg !2244
  %255 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 26, !dbg !2245
  %256 = load i16, i16* %255, align 2, !dbg !2245, !tbaa !2117
  %257 = sext i16 %256 to i32, !dbg !2246
  %258 = lshr i32 %257, 2, !dbg !2247
  %259 = sub i32 %254, %258, !dbg !2248
  %260 = trunc i32 %259 to i16, !dbg !2249
  %261 = add i16 %256, %260, !dbg !2249
  store i16 %261, i16* %255, align 2, !dbg !2250, !tbaa !2117
  %262 = ashr i16 %251, 3, !dbg !2251
  %263 = add i16 %261, %262, !dbg !2252
  %264 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 27, !dbg !2253
  store i16 %263, i16* %264, align 4, !dbg !2254, !tbaa !2121
  store i32 0, i32* %231, align 8, !dbg !2255, !tbaa !2225
  br label %265, !dbg !2256

; <label>:265:                                    ; preds = %230, %9, %234, %240
  %266 = load i16, i16* @tcplen, align 2, !dbg !2257, !tbaa !498
  %267 = zext i16 %266 to i32, !dbg !2257
  %268 = icmp eq i16 %266, 0, !dbg !2258
  br i1 %268, label %815, label %269, !dbg !2259

; <label>:269:                                    ; preds = %265
  %270 = load i32, i32* %5, align 8, !dbg !2260, !tbaa !618
  %271 = icmp ult i32 %270, 7, !dbg !2261
  br i1 %271, label %272, label %815, !dbg !2262

; <label>:272:                                    ; preds = %269
  %273 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 17, !dbg !2263
  %274 = load i32, i32* %273, align 4, !dbg !2263, !tbaa !767
  %275 = load i32, i32* @seqno, align 4, !dbg !2263, !tbaa !577
  %276 = xor i32 %275, -1, !dbg !2263
  %277 = add i32 %274, %276, !dbg !2263
  %278 = icmp sgt i32 %277, -1, !dbg !2263
  br i1 %278, label %279, label %330, !dbg !2263

; <label>:279:                                    ; preds = %272
  %280 = sub nsw i32 1, %267, !dbg !2263
  %281 = add i32 %280, %274, !dbg !2263
  %282 = sub i32 %281, %275, !dbg !2263
  %283 = icmp slt i32 %282, 1, !dbg !2263
  br i1 %283, label %284, label %330, !dbg !2264

; <label>:284:                                    ; preds = %279
  %285 = load %struct.pbuf*, %struct.pbuf** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 1), align 8, !dbg !2265, !tbaa !1020
  call void @llvm.dbg.value(metadata %struct.pbuf* %285, metadata !1942, metadata !DIExpression()), !dbg !2266
  %286 = sub i32 %274, %275, !dbg !2267
  call void @llvm.dbg.value(metadata i32 %286, metadata !1947, metadata !DIExpression()), !dbg !2268
  %287 = icmp eq %struct.pbuf* %285, null, !dbg !2269
  br i1 %287, label %288, label %289, !dbg !2272

; <label>:288:                                    ; preds = %284
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0)) #8, !dbg !2273
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2276
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2276
  unreachable, !dbg !2276

; <label>:289:                                    ; preds = %284
  %290 = icmp ult i32 %286, 65535, !dbg !2280
  br i1 %290, label %292, label %291, !dbg !2283

; <label>:291:                                    ; preds = %289
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !2284
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2287
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2287
  unreachable, !dbg !2287

; <label>:292:                                    ; preds = %289
  %293 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %285, i64 0, i32 2, !dbg !2291
  %294 = load i16, i16* %293, align 8, !dbg !2291, !tbaa !480
  %295 = zext i16 %294 to i32, !dbg !2291
  %296 = and i32 %286, 65535, !dbg !2291
  %297 = icmp ugt i32 %296, %295, !dbg !2291
  br i1 %297, label %298, label %299, !dbg !2294

; <label>:298:                                    ; preds = %292
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0)) #8, !dbg !2295
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2298
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2298
  unreachable, !dbg !2298

; <label>:299:                                    ; preds = %292
  %300 = load i16, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2302, !tbaa !1018
  %301 = trunc i32 %286 to i16, !dbg !2302
  %302 = sub i16 %300, %301, !dbg !2302
  store i16 %302, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2302, !tbaa !1018
  %303 = sub i16 %294, %301, !dbg !2303
  call void @llvm.dbg.value(metadata i16 %303, metadata !1948, metadata !DIExpression()), !dbg !2304
  call void @llvm.dbg.value(metadata %struct.pbuf* %285, metadata !1942, metadata !DIExpression()), !dbg !2266
  %304 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %285, i64 0, i32 3, !dbg !2305
  %305 = load i16, i16* %304, align 2, !dbg !2305, !tbaa !461
  %306 = zext i16 %305 to i32, !dbg !2306
  %307 = icmp ugt i32 %296, %306, !dbg !2307
  br i1 %307, label %308, label %322, !dbg !2308

; <label>:308:                                    ; preds = %299, %308
  %309 = phi i32 [ %320, %308 ], [ %296, %299 ]
  %310 = phi i32 [ %319, %308 ], [ %306, %299 ]
  %311 = phi i16* [ %317, %308 ], [ %304, %299 ]
  %312 = phi %struct.pbuf* [ %316, %308 ], [ %285, %299 ]
  call void @llvm.dbg.value(metadata %struct.pbuf* %312, metadata !1942, metadata !DIExpression()), !dbg !2266
  %313 = sub nsw i32 %309, %310, !dbg !2309
  %314 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %312, i64 0, i32 2, !dbg !2311
  store i16 %303, i16* %314, align 8, !dbg !2312, !tbaa !480
  store i16 0, i16* %311, align 2, !dbg !2313, !tbaa !461
  %315 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %312, i64 0, i32 0, !dbg !2314
  %316 = load %struct.pbuf*, %struct.pbuf** %315, align 8, !dbg !2314, !tbaa !510
  call void @llvm.dbg.value(metadata %struct.pbuf* %316, metadata !1942, metadata !DIExpression()), !dbg !2266
  %317 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %316, i64 0, i32 3, !dbg !2305
  %318 = load i16, i16* %317, align 2, !dbg !2305, !tbaa !461
  %319 = zext i16 %318 to i32, !dbg !2306
  %320 = and i32 %313, 65535, !dbg !2315
  %321 = icmp ugt i32 %320, %319, !dbg !2307
  br i1 %321, label %308, label %322, !dbg !2308, !llvm.loop !2316

; <label>:322:                                    ; preds = %308, %299
  %323 = phi %struct.pbuf* [ %285, %299 ], [ %316, %308 ], !dbg !2318
  %324 = phi i32 [ %296, %299 ], [ %320, %308 ], !dbg !2315
  call void @llvm.dbg.value(metadata %struct.pbuf* %323, metadata !1942, metadata !DIExpression()), !dbg !2266
  %325 = zext i32 %324 to i64, !dbg !2319
  %326 = tail call zeroext i8 @pbuf_remove_header(%struct.pbuf* %323, i64 %325) #10, !dbg !2320
  %327 = load i32, i32* %273, align 4, !dbg !2321, !tbaa !767
  store i32 %327, i32* @seqno, align 4, !dbg !2322, !tbaa !577
  %328 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2323, !tbaa !1022
  %329 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %328, i64 0, i32 2, !dbg !2324
  store i32 %327, i32* %329, align 1, !dbg !2325, !tbaa !572
  br label %337, !dbg !2326

; <label>:330:                                    ; preds = %279, %272
  %331 = sub i32 %275, %274, !dbg !2327
  %332 = icmp slt i32 %331, 0, !dbg !2327
  br i1 %332, label %333, label %337, !dbg !2330

; <label>:333:                                    ; preds = %330
  %334 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 12, !dbg !2331
  %335 = load i16, i16* %334, align 2, !dbg !2331, !tbaa !791
  %336 = or i16 %335, 2, !dbg !2331
  store i16 %336, i16* %334, align 2, !dbg !2331, !tbaa !791
  br label %813

; <label>:337:                                    ; preds = %330, %322
  %338 = phi i32 [ %327, %322 ], [ %274, %330 ]
  %339 = phi i32 [ %327, %322 ], [ %275, %330 ]
  %340 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 18, !dbg !2334
  %341 = load i32, i32* %340, align 8, !dbg !2334, !tbaa !768
  %342 = add i32 %339, 1, !dbg !2334
  %343 = sub i32 %342, %338, !dbg !2334
  %344 = sub i32 %343, %341, !dbg !2334
  %345 = icmp slt i32 %344, 1, !dbg !2334
  br i1 %345, label %346, label %813, !dbg !2335

; <label>:346:                                    ; preds = %337
  %347 = icmp eq i32 %339, %338, !dbg !2336
  br i1 %347, label %348, label %641, !dbg !2337

; <label>:348:                                    ; preds = %346
  %349 = load i16, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2338, !tbaa !1018
  %350 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2338, !tbaa !1022
  %351 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %350, i64 0, i32 4, !dbg !2338
  %352 = load i16, i16* %351, align 1, !dbg !2338, !tbaa !487
  %353 = tail call zeroext i16 @lwip_htons(i16 zeroext %352) #10, !dbg !2338
  %354 = and i16 %353, 3, !dbg !2338
  %355 = icmp ne i16 %354, 0, !dbg !2338
  %356 = zext i1 %355 to i16, !dbg !2338
  %357 = add i16 %349, %356, !dbg !2338
  store i16 %357, i16* @tcplen, align 2, !dbg !2339, !tbaa !498
  %358 = zext i16 %357 to i32, !dbg !2340
  %359 = load i32, i32* %340, align 8, !dbg !2342, !tbaa !768
  %360 = icmp ult i32 %359, %358, !dbg !2343
  br i1 %360, label %361, label %414, !dbg !2344

; <label>:361:                                    ; preds = %348
  %362 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2345, !tbaa !1022
  %363 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %362, i64 0, i32 4, !dbg !2345
  %364 = load i16, i16* %363, align 1, !dbg !2345, !tbaa !487
  %365 = tail call zeroext i16 @lwip_htons(i16 zeroext %364) #10, !dbg !2345
  %366 = and i16 %365, 1, !dbg !2348
  %367 = icmp eq i16 %366, 0, !dbg !2348
  br i1 %367, label %379, label %368, !dbg !2349

; <label>:368:                                    ; preds = %361
  %369 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2350, !tbaa !1022
  %370 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %369, i64 0, i32 4, !dbg !2350
  %371 = load i16, i16* %370, align 1, !dbg !2350, !tbaa !487
  %372 = and i16 %371, -16129, !dbg !2350
  %373 = tail call zeroext i16 @lwip_htons(i16 zeroext %371) #10, !dbg !2350
  %374 = and i16 %373, 62, !dbg !2350
  %375 = tail call zeroext i16 @lwip_htons(i16 zeroext %374) #10, !dbg !2350
  %376 = or i16 %375, %372, !dbg !2350
  %377 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2350, !tbaa !1022
  %378 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %377, i64 0, i32 4, !dbg !2350
  store i16 %376, i16* %378, align 1, !dbg !2350, !tbaa !487
  br label %379, !dbg !2352

; <label>:379:                                    ; preds = %361, %368
  %380 = load i32, i32* %340, align 8, !dbg !2353, !tbaa !768
  %381 = icmp ult i32 %380, 65536, !dbg !2353
  br i1 %381, label %383, label %382, !dbg !2356

; <label>:382:                                    ; preds = %379
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i64 0, i64 0)) #8, !dbg !2357
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2360
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2360
  unreachable, !dbg !2360

; <label>:383:                                    ; preds = %379
  %384 = trunc i32 %380 to i16, !dbg !2364
  store i16 %384, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2365, !tbaa !1018
  %385 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2366, !tbaa !1022
  %386 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %385, i64 0, i32 4, !dbg !2366
  %387 = load i16, i16* %386, align 1, !dbg !2366, !tbaa !487
  %388 = tail call zeroext i16 @lwip_htons(i16 zeroext %387) #10, !dbg !2366
  %389 = and i16 %388, 2, !dbg !2368
  %390 = icmp eq i16 %389, 0, !dbg !2368
  %391 = load i16, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2369, !tbaa !1018
  br i1 %390, label %394, label %392, !dbg !2371

; <label>:392:                                    ; preds = %383
  %393 = add i16 %391, -1, !dbg !2372
  store i16 %393, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2372, !tbaa !1018
  br label %394, !dbg !2373

; <label>:394:                                    ; preds = %383, %392
  %395 = phi i16 [ %393, %392 ], [ %391, %383 ], !dbg !2374
  %396 = load %struct.pbuf*, %struct.pbuf** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 1), align 8, !dbg !2375, !tbaa !1020
  tail call void @pbuf_realloc(%struct.pbuf* %396, i16 zeroext %395) #10, !dbg !2376
  %397 = load i16, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2377, !tbaa !1018
  %398 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2377, !tbaa !1022
  %399 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %398, i64 0, i32 4, !dbg !2377
  %400 = load i16, i16* %399, align 1, !dbg !2377, !tbaa !487
  %401 = tail call zeroext i16 @lwip_htons(i16 zeroext %400) #10, !dbg !2377
  %402 = and i16 %401, 3, !dbg !2377
  %403 = icmp ne i16 %402, 0, !dbg !2377
  %404 = zext i1 %403 to i16, !dbg !2377
  %405 = add i16 %397, %404, !dbg !2377
  store i16 %405, i16* @tcplen, align 2, !dbg !2378, !tbaa !498
  %406 = load i32, i32* @seqno, align 4, !dbg !2379, !tbaa !577
  %407 = zext i16 %405 to i32, !dbg !2379
  %408 = add i32 %406, %407, !dbg !2379
  %409 = load i32, i32* %273, align 4, !dbg !2379, !tbaa !767
  %410 = load i32, i32* %340, align 8, !dbg !2379, !tbaa !768
  %411 = add i32 %410, %409, !dbg !2379
  %412 = icmp eq i32 %408, %411, !dbg !2379
  br i1 %412, label %414, label %413, !dbg !2382

; <label>:413:                                    ; preds = %394
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.32, i64 0, i64 0)) #8, !dbg !2383
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2386
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2386
  unreachable, !dbg !2386

; <label>:414:                                    ; preds = %394, %348
  %415 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 46, !dbg !2390
  %416 = load %struct.tcp_seg*, %struct.tcp_seg** %415, align 8, !dbg !2390, !tbaa !2391
  %417 = icmp eq %struct.tcp_seg* %416, null, !dbg !2392
  br i1 %417, label %521, label %418, !dbg !2393

; <label>:418:                                    ; preds = %414
  %419 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2394, !tbaa !1022
  %420 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %419, i64 0, i32 4, !dbg !2394
  %421 = load i16, i16* %420, align 1, !dbg !2394, !tbaa !487
  %422 = tail call zeroext i16 @lwip_htons(i16 zeroext %421) #10, !dbg !2394
  %423 = and i16 %422, 1, !dbg !2395
  %424 = icmp eq i16 %423, 0, !dbg !2395
  %425 = load %struct.tcp_seg*, %struct.tcp_seg** %415, align 8, !dbg !2396, !tbaa !2391
  %426 = icmp eq %struct.tcp_seg* %425, null, !dbg !2396
  br i1 %424, label %436, label %427, !dbg !2397

; <label>:427:                                    ; preds = %418
  br i1 %426, label %521, label %428, !dbg !2398

; <label>:428:                                    ; preds = %427
  %429 = bitcast %struct.tcp_seg** %415 to i64*
  br label %430, !dbg !2398

; <label>:430:                                    ; preds = %428, %430
  %431 = phi %struct.tcp_seg* [ %425, %428 ], [ %434, %430 ]
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %431, metadata !1950, metadata !DIExpression()), !dbg !2399
  %432 = bitcast %struct.tcp_seg* %431 to i64*, !dbg !2400
  %433 = load i64, i64* %432, align 8, !dbg !2400, !tbaa !1015
  store i64 %433, i64* %429, align 8, !dbg !2401, !tbaa !2391
  tail call void @tcp_seg_free(%struct.tcp_seg* nonnull %431) #10, !dbg !2402
  %434 = load %struct.tcp_seg*, %struct.tcp_seg** %415, align 8, !dbg !2403, !tbaa !2391
  %435 = icmp eq %struct.tcp_seg* %434, null, !dbg !2404
  br i1 %435, label %521, label %430, !dbg !2398, !llvm.loop !2405

; <label>:436:                                    ; preds = %418
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %425, metadata !1960, metadata !DIExpression()), !dbg !2407
  br i1 %426, label %519, label %437, !dbg !2408

; <label>:437:                                    ; preds = %436, %480
  %438 = phi %struct.tcp_seg* [ %482, %480 ], [ %425, %436 ]
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %438, metadata !1960, metadata !DIExpression()), !dbg !2407
  %439 = load i32, i32* @seqno, align 4, !dbg !2409, !tbaa !577
  %440 = load i16, i16* @tcplen, align 2, !dbg !2409, !tbaa !498
  %441 = zext i16 %440 to i32, !dbg !2409
  %442 = add i32 %439, %441, !dbg !2409
  %443 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %438, i64 0, i32 4, !dbg !2409
  %444 = load %struct.tcp_hdr*, %struct.tcp_hdr** %443, align 8, !dbg !2409, !tbaa !1022
  %445 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %444, i64 0, i32 2, !dbg !2409
  %446 = load i32, i32* %445, align 1, !dbg !2409, !tbaa !572
  %447 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %438, i64 0, i32 2, !dbg !2409
  %448 = load i16, i16* %447, align 8, !dbg !2409, !tbaa !1018
  %449 = zext i16 %448 to i32, !dbg !2409
  %450 = sub i32 %442, %446, !dbg !2409
  %451 = sub i32 %450, %449, !dbg !2409
  %452 = icmp sgt i32 %451, -1, !dbg !2409
  br i1 %452, label %453, label %484, !dbg !2410

; <label>:453:                                    ; preds = %437
  %454 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %444, i64 0, i32 4, !dbg !2411
  %455 = load i16, i16* %454, align 1, !dbg !2411, !tbaa !487
  %456 = tail call zeroext i16 @lwip_htons(i16 zeroext %455) #10, !dbg !2411
  %457 = and i16 %456, 1, !dbg !2413
  %458 = icmp eq i16 %457, 0, !dbg !2414
  br i1 %458, label %480, label %459, !dbg !2415

; <label>:459:                                    ; preds = %453
  %460 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2416, !tbaa !1022
  %461 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %460, i64 0, i32 4, !dbg !2416
  %462 = load i16, i16* %461, align 1, !dbg !2416, !tbaa !487
  %463 = tail call zeroext i16 @lwip_htons(i16 zeroext %462) #10, !dbg !2416
  %464 = and i16 %463, 2, !dbg !2417
  %465 = icmp eq i16 %464, 0, !dbg !2418
  br i1 %465, label %466, label %480, !dbg !2419

; <label>:466:                                    ; preds = %459
  %467 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2420, !tbaa !1022
  %468 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %467, i64 0, i32 4, !dbg !2420
  %469 = load i16, i16* %468, align 1, !dbg !2420, !tbaa !487
  %470 = tail call zeroext i16 @lwip_htons(i16 zeroext 1) #10, !dbg !2420
  %471 = or i16 %470, %469, !dbg !2420
  %472 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2420, !tbaa !1022
  %473 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %472, i64 0, i32 4, !dbg !2420
  store i16 %471, i16* %473, align 1, !dbg !2420, !tbaa !487
  %474 = load i16, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2422, !tbaa !1018
  %475 = tail call zeroext i16 @lwip_htons(i16 zeroext %471) #10, !dbg !2422
  %476 = and i16 %475, 3, !dbg !2422
  %477 = icmp ne i16 %476, 0, !dbg !2422
  %478 = zext i1 %477 to i16, !dbg !2422
  %479 = add i16 %474, %478, !dbg !2422
  store i16 %479, i16* @tcplen, align 2, !dbg !2423, !tbaa !498
  br label %480, !dbg !2424

; <label>:480:                                    ; preds = %453, %466, %459
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %438, metadata !1962, metadata !DIExpression()), !dbg !2425
  %481 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %438, i64 0, i32 0, !dbg !2426
  %482 = load %struct.tcp_seg*, %struct.tcp_seg** %481, align 8, !dbg !2426, !tbaa !1015
  tail call void @tcp_seg_free(%struct.tcp_seg* nonnull %438) #10, !dbg !2427
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %482, metadata !1960, metadata !DIExpression()), !dbg !2407
  %483 = icmp eq %struct.tcp_seg* %482, null, !dbg !2428
  br i1 %483, label %519, label %437, !dbg !2408, !llvm.loop !2429

; <label>:484:                                    ; preds = %437
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %438, metadata !1960, metadata !DIExpression()), !dbg !2407
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %438, metadata !1960, metadata !DIExpression()), !dbg !2407
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %438, metadata !1960, metadata !DIExpression()), !dbg !2407
  %485 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %438, i64 0, i32 4, !dbg !2409
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %438, metadata !1960, metadata !DIExpression()), !dbg !2407
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %438, metadata !1960, metadata !DIExpression()), !dbg !2407
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %438, metadata !1960, metadata !DIExpression()), !dbg !2407
  %486 = icmp sgt i32 %450, 0, !dbg !2431
  br i1 %486, label %487, label %519, !dbg !2433

; <label>:487:                                    ; preds = %484
  %488 = sub i32 %446, %439, !dbg !2434
  %489 = trunc i32 %488 to i16, !dbg !2436
  store i16 %489, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2437, !tbaa !1018
  %490 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2438, !tbaa !1022
  %491 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %490, i64 0, i32 4, !dbg !2438
  %492 = load i16, i16* %491, align 1, !dbg !2438, !tbaa !487
  %493 = tail call zeroext i16 @lwip_htons(i16 zeroext %492) #10, !dbg !2438
  %494 = and i16 %493, 2, !dbg !2440
  %495 = icmp eq i16 %494, 0, !dbg !2440
  %496 = load i16, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2441, !tbaa !1018
  br i1 %495, label %499, label %497, !dbg !2443

; <label>:497:                                    ; preds = %487
  %498 = add i16 %496, -1, !dbg !2444
  store i16 %498, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2444, !tbaa !1018
  br label %499, !dbg !2445

; <label>:499:                                    ; preds = %487, %497
  %500 = phi i16 [ %498, %497 ], [ %496, %487 ], !dbg !2446
  %501 = load %struct.pbuf*, %struct.pbuf** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 1), align 8, !dbg !2447, !tbaa !1020
  tail call void @pbuf_realloc(%struct.pbuf* %501, i16 zeroext %500) #10, !dbg !2448
  %502 = load i16, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2449, !tbaa !1018
  %503 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2449, !tbaa !1022
  %504 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %503, i64 0, i32 4, !dbg !2449
  %505 = load i16, i16* %504, align 1, !dbg !2449, !tbaa !487
  %506 = tail call zeroext i16 @lwip_htons(i16 zeroext %505) #10, !dbg !2449
  %507 = and i16 %506, 3, !dbg !2449
  %508 = icmp ne i16 %507, 0, !dbg !2449
  %509 = zext i1 %508 to i16, !dbg !2449
  %510 = add i16 %502, %509, !dbg !2449
  store i16 %510, i16* @tcplen, align 2, !dbg !2450, !tbaa !498
  %511 = load i32, i32* @seqno, align 4, !dbg !2451, !tbaa !577
  %512 = zext i16 %510 to i32, !dbg !2451
  %513 = add i32 %511, %512, !dbg !2451
  %514 = load %struct.tcp_hdr*, %struct.tcp_hdr** %485, align 8, !dbg !2451, !tbaa !1022
  %515 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %514, i64 0, i32 2, !dbg !2451
  %516 = load i32, i32* %515, align 1, !dbg !2451, !tbaa !572
  %517 = icmp eq i32 %513, %516, !dbg !2451
  br i1 %517, label %519, label %518, !dbg !2454

; <label>:518:                                    ; preds = %499
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.33, i64 0, i64 0)) #8, !dbg !2455
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2458
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2458
  unreachable, !dbg !2458

; <label>:519:                                    ; preds = %480, %436, %499, %484
  %520 = phi %struct.tcp_seg* [ %438, %499 ], [ %438, %484 ], [ null, %436 ], [ null, %480 ]
  store %struct.tcp_seg* %520, %struct.tcp_seg** %415, align 8, !dbg !2462, !tbaa !2391
  br label %521

; <label>:521:                                    ; preds = %430, %427, %414, %519
  %522 = load i32, i32* @seqno, align 4, !dbg !2463, !tbaa !577
  %523 = load i16, i16* @tcplen, align 2, !dbg !2464, !tbaa !498
  %524 = zext i16 %523 to i32, !dbg !2464
  %525 = add i32 %522, %524, !dbg !2465
  store i32 %525, i32* %273, align 4, !dbg !2466, !tbaa !767
  %526 = load i32, i32* %340, align 8, !dbg !2467, !tbaa !768
  %527 = icmp ult i32 %526, %524, !dbg !2467
  br i1 %527, label %528, label %529, !dbg !2470

; <label>:528:                                    ; preds = %521
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0)) #8, !dbg !2471
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2474
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2474
  unreachable, !dbg !2474

; <label>:529:                                    ; preds = %521
  %530 = sub i32 %526, %524, !dbg !2478
  store i32 %530, i32* %340, align 8, !dbg !2478, !tbaa !768
  %531 = tail call i32 @tcp_update_rcv_ann_wnd(%struct.tcp_pcb* nonnull %0) #10, !dbg !2479
  %532 = load %struct.pbuf*, %struct.pbuf** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 1), align 8, !dbg !2480, !tbaa !1020
  %533 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %532, i64 0, i32 2, !dbg !2482
  %534 = load i16, i16* %533, align 8, !dbg !2482, !tbaa !480
  %535 = icmp eq i16 %534, 0, !dbg !2483
  br i1 %535, label %537, label %536, !dbg !2484

; <label>:536:                                    ; preds = %529
  store %struct.pbuf* %532, %struct.pbuf** @recv_data, align 8, !dbg !2485, !tbaa !458
  store %struct.pbuf* null, %struct.pbuf** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 1), align 8, !dbg !2487, !tbaa !1020
  br label %537, !dbg !2488

; <label>:537:                                    ; preds = %529, %536
  %538 = load %struct.tcp_hdr*, %struct.tcp_hdr** getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 4), align 8, !dbg !2489, !tbaa !1022
  %539 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %538, i64 0, i32 4, !dbg !2489
  %540 = load i16, i16* %539, align 1, !dbg !2489, !tbaa !487
  %541 = tail call zeroext i16 @lwip_htons(i16 zeroext %540) #10, !dbg !2489
  %542 = and i16 %541, 1, !dbg !2491
  %543 = icmp eq i16 %542, 0, !dbg !2491
  br i1 %543, label %547, label %544, !dbg !2492

; <label>:544:                                    ; preds = %537
  %545 = load i8, i8* @recv_flags, align 1, !dbg !2493, !tbaa !470
  %546 = or i8 %545, 32, !dbg !2493
  store i8 %546, i8* @recv_flags, align 1, !dbg !2493, !tbaa !470
  br label %547, !dbg !2495

; <label>:547:                                    ; preds = %537, %544
  %548 = load %struct.tcp_seg*, %struct.tcp_seg** %415, align 8, !dbg !2496, !tbaa !2391
  %549 = icmp eq %struct.tcp_seg* %548, null, !dbg !2497
  br i1 %549, label %629, label %550, !dbg !2498

; <label>:550:                                    ; preds = %547
  %551 = bitcast %struct.tcp_seg** %415 to i64*
  br label %552, !dbg !2498

; <label>:552:                                    ; preds = %550, %624
  %553 = phi %struct.tcp_seg* [ %548, %550 ], [ %627, %624 ]
  %554 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %553, i64 0, i32 4, !dbg !2499
  %555 = load %struct.tcp_hdr*, %struct.tcp_hdr** %554, align 8, !dbg !2499, !tbaa !1022
  %556 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %555, i64 0, i32 2, !dbg !2500
  %557 = load i32, i32* %556, align 1, !dbg !2500, !tbaa !572
  %558 = load i32, i32* %273, align 4, !dbg !2501, !tbaa !767
  %559 = icmp eq i32 %557, %558, !dbg !2502
  br i1 %559, label %560, label %629, !dbg !2503

; <label>:560:                                    ; preds = %552
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %553, metadata !1964, metadata !DIExpression()), !dbg !2504
  store i32 %557, i32* @seqno, align 4, !dbg !2505, !tbaa !577
  %561 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %553, i64 0, i32 2, !dbg !2506
  %562 = load i16, i16* %561, align 8, !dbg !2506, !tbaa !1018
  %563 = zext i16 %562 to i32, !dbg !2506
  %564 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %555, i64 0, i32 4, !dbg !2506
  %565 = load i16, i16* %564, align 1, !dbg !2506, !tbaa !487
  %566 = tail call zeroext i16 @lwip_htons(i16 zeroext %565) #10, !dbg !2506
  %567 = and i16 %566, 3, !dbg !2506
  %568 = icmp ne i16 %567, 0, !dbg !2506
  %569 = zext i1 %568 to i32, !dbg !2506
  %570 = load i32, i32* %273, align 4, !dbg !2507, !tbaa !767
  %571 = add i32 %570, %563, !dbg !2506
  %572 = add i32 %571, %569, !dbg !2507
  store i32 %572, i32* %273, align 4, !dbg !2507, !tbaa !767
  %573 = load i32, i32* %340, align 8, !dbg !2508, !tbaa !768
  %574 = load i16, i16* %561, align 8, !dbg !2508, !tbaa !1018
  %575 = zext i16 %574 to i32, !dbg !2508
  %576 = load %struct.tcp_hdr*, %struct.tcp_hdr** %554, align 8, !dbg !2508, !tbaa !1022
  %577 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %576, i64 0, i32 4, !dbg !2508
  %578 = load i16, i16* %577, align 1, !dbg !2508, !tbaa !487
  %579 = tail call zeroext i16 @lwip_htons(i16 zeroext %578) #10, !dbg !2508
  %580 = and i16 %579, 3, !dbg !2508
  %581 = icmp ne i16 %580, 0, !dbg !2508
  %582 = zext i1 %581 to i32, !dbg !2508
  %583 = add nuw nsw i32 %582, %575, !dbg !2508
  %584 = icmp ult i32 %573, %583, !dbg !2508
  br i1 %584, label %585, label %586, !dbg !2511

; <label>:585:                                    ; preds = %560
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.35, i64 0, i64 0)) #8, !dbg !2512
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2515
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2515
  unreachable, !dbg !2515

; <label>:586:                                    ; preds = %560
  %587 = load i16, i16* %561, align 8, !dbg !2519, !tbaa !1018
  %588 = zext i16 %587 to i32, !dbg !2519
  %589 = load %struct.tcp_hdr*, %struct.tcp_hdr** %554, align 8, !dbg !2519, !tbaa !1022
  %590 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %589, i64 0, i32 4, !dbg !2519
  %591 = load i16, i16* %590, align 1, !dbg !2519, !tbaa !487
  %592 = tail call zeroext i16 @lwip_htons(i16 zeroext %591) #10, !dbg !2519
  %593 = and i16 %592, 3, !dbg !2519
  %594 = icmp ne i16 %593, 0, !dbg !2519
  %595 = load i32, i32* %340, align 8, !dbg !2520, !tbaa !768
  %596 = sext i1 %594 to i32
  %597 = sub i32 %595, %588, !dbg !2519
  %598 = add i32 %597, %596, !dbg !2520
  store i32 %598, i32* %340, align 8, !dbg !2520, !tbaa !768
  %599 = tail call i32 @tcp_update_rcv_ann_wnd(%struct.tcp_pcb* nonnull %0) #10, !dbg !2521
  %600 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %553, i64 0, i32 1, !dbg !2522
  %601 = load %struct.pbuf*, %struct.pbuf** %600, align 8, !dbg !2522, !tbaa !1020
  %602 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %601, i64 0, i32 2, !dbg !2524
  %603 = load i16, i16* %602, align 8, !dbg !2524, !tbaa !480
  %604 = icmp eq i16 %603, 0, !dbg !2525
  br i1 %604, label %611, label %605, !dbg !2526

; <label>:605:                                    ; preds = %586
  %606 = load %struct.pbuf*, %struct.pbuf** @recv_data, align 8, !dbg !2527, !tbaa !458
  %607 = icmp eq %struct.pbuf* %606, null, !dbg !2527
  br i1 %607, label %609, label %608, !dbg !2530

; <label>:608:                                    ; preds = %605
  tail call void @pbuf_cat(%struct.pbuf* nonnull %606, %struct.pbuf* %601) #10, !dbg !2531
  br label %610, !dbg !2533

; <label>:609:                                    ; preds = %605
  store %struct.pbuf* %601, %struct.pbuf** @recv_data, align 8, !dbg !2534, !tbaa !458
  br label %610

; <label>:610:                                    ; preds = %609, %608
  store %struct.pbuf* null, %struct.pbuf** %600, align 8, !dbg !2536, !tbaa !1020
  br label %611, !dbg !2537

; <label>:611:                                    ; preds = %586, %610
  %612 = load %struct.tcp_hdr*, %struct.tcp_hdr** %554, align 8, !dbg !2538, !tbaa !1022
  %613 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %612, i64 0, i32 4, !dbg !2538
  %614 = load i16, i16* %613, align 1, !dbg !2538, !tbaa !487
  %615 = tail call zeroext i16 @lwip_htons(i16 zeroext %614) #10, !dbg !2538
  %616 = and i16 %615, 1, !dbg !2540
  %617 = icmp eq i16 %616, 0, !dbg !2540
  br i1 %617, label %624, label %618, !dbg !2541

; <label>:618:                                    ; preds = %611
  %619 = load i8, i8* @recv_flags, align 1, !dbg !2542, !tbaa !470
  %620 = or i8 %619, 32, !dbg !2542
  store i8 %620, i8* @recv_flags, align 1, !dbg !2542, !tbaa !470
  %621 = load i32, i32* %5, align 8, !dbg !2544, !tbaa !618
  %622 = icmp eq i32 %621, 4, !dbg !2546
  br i1 %622, label %623, label %624, !dbg !2547

; <label>:623:                                    ; preds = %618
  store i32 7, i32* %5, align 8, !dbg !2548, !tbaa !618
  br label %624, !dbg !2550

; <label>:624:                                    ; preds = %611, %618, %623
  %625 = bitcast %struct.tcp_seg* %553 to i64*, !dbg !2551
  %626 = load i64, i64* %625, align 8, !dbg !2551, !tbaa !1015
  store i64 %626, i64* %551, align 8, !dbg !2552, !tbaa !2391
  tail call void @tcp_seg_free(%struct.tcp_seg* nonnull %553) #10, !dbg !2553
  %627 = load %struct.tcp_seg*, %struct.tcp_seg** %415, align 8, !dbg !2496, !tbaa !2391
  %628 = icmp eq %struct.tcp_seg* %627, null, !dbg !2497
  br i1 %628, label %629, label %552, !dbg !2498, !llvm.loop !2554

; <label>:629:                                    ; preds = %552, %624, %547
  %630 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 12, !dbg !2556
  %631 = load i16, i16* %630, align 2, !dbg !2556, !tbaa !791
  %632 = and i16 %631, 1, !dbg !2556
  %633 = icmp eq i16 %632, 0, !dbg !2556
  %634 = or i16 %631, 1, !dbg !2559
  %635 = and i16 %631, -4, !dbg !2562
  %636 = or i16 %635, 2, !dbg !2565
  %637 = select i1 %633, i16 %634, i16 %636, !dbg !2567
  store i16 %637, i16* %630, align 2, !dbg !2559, !tbaa !791
  %638 = load %struct.ip6_hdr*, %struct.ip6_hdr** getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 3), align 8, !dbg !2568, !tbaa !2183
  %639 = icmp eq %struct.ip6_hdr* %638, null, !dbg !2568
  br i1 %639, label %832, label %640, !dbg !2570

; <label>:640:                                    ; preds = %629
  tail call void @nd6_reachability_hint(%struct.ip6_addr* getelementptr inbounds (%struct.ip_globals, %struct.ip_globals* @ip_data, i64 0, i32 5, i32 0, i32 0)) #10, !dbg !2571
  br label %832, !dbg !2573

; <label>:641:                                    ; preds = %346
  %642 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 46, !dbg !2574
  %643 = load %struct.tcp_seg*, %struct.tcp_seg** %642, align 8, !dbg !2574, !tbaa !2391
  %644 = icmp eq %struct.tcp_seg* %643, null, !dbg !2575
  br i1 %644, label %645, label %647, !dbg !2576

; <label>:645:                                    ; preds = %641
  %646 = tail call %struct.tcp_seg* @tcp_seg_copy(%struct.tcp_seg* nonnull @inseg) #10, !dbg !2577
  store %struct.tcp_seg* %646, %struct.tcp_seg** %642, align 8, !dbg !2579, !tbaa !2391
  br label %811, !dbg !2580

; <label>:647:                                    ; preds = %641, %711
  %648 = phi %struct.tcp_seg* [ %713, %711 ], [ %643, %641 ], !dbg !2581
  %649 = phi %struct.tcp_seg* [ %648, %711 ], [ null, %641 ], !dbg !2582
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  %650 = icmp eq %struct.tcp_seg* %648, null, !dbg !2585
  br i1 %650, label %811, label %651, !dbg !2586

; <label>:651:                                    ; preds = %647
  %652 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %648, i64 0, i32 4, !dbg !2587
  %653 = load %struct.tcp_hdr*, %struct.tcp_hdr** %652, align 8, !dbg !2587, !tbaa !1022
  %654 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %653, i64 0, i32 2, !dbg !2588
  %655 = load i32, i32* %654, align 1, !dbg !2588, !tbaa !572
  %656 = icmp eq i32 %339, %655, !dbg !2589
  br i1 %656, label %657, label %669, !dbg !2590

; <label>:657:                                    ; preds = %651
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  %658 = load i16, i16* getelementptr inbounds (%struct.tcp_seg, %struct.tcp_seg* @inseg, i64 0, i32 2), align 8, !dbg !2591, !tbaa !1018
  %659 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %648, i64 0, i32 2, !dbg !2592
  %660 = load i16, i16* %659, align 8, !dbg !2592, !tbaa !1018
  %661 = icmp ugt i16 %658, %660, !dbg !2593
  br i1 %661, label %662, label %811, !dbg !2594

; <label>:662:                                    ; preds = %657
  %663 = tail call %struct.tcp_seg* @tcp_seg_copy(%struct.tcp_seg* nonnull @inseg) #10, !dbg !2595
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %663, metadata !1971, metadata !DIExpression()), !dbg !2596
  %664 = icmp eq %struct.tcp_seg* %663, null, !dbg !2597
  br i1 %664, label %811, label %665, !dbg !2599

; <label>:665:                                    ; preds = %662
  %666 = icmp eq %struct.tcp_seg* %649, null, !dbg !2600
  %667 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %649, i64 0, i32 0, !dbg !2603
  %668 = select i1 %666, %struct.tcp_seg** %642, %struct.tcp_seg** %667, !dbg !2605
  store %struct.tcp_seg* %663, %struct.tcp_seg** %668, align 8, !dbg !2606, !tbaa !458
  tail call fastcc void @tcp_oos_insert_segment(%struct.tcp_seg* nonnull %663, %struct.tcp_seg* nonnull %648) #8, !dbg !2607
  br label %811, !dbg !2608

; <label>:669:                                    ; preds = %651
  %670 = icmp eq %struct.tcp_seg* %649, null, !dbg !2609
  br i1 %670, label %671, label %678, !dbg !2610

; <label>:671:                                    ; preds = %669
  %672 = sub i32 %339, %655, !dbg !2611
  %673 = icmp slt i32 %672, 0, !dbg !2611
  br i1 %673, label %674, label %711, !dbg !2612

; <label>:674:                                    ; preds = %671
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  %675 = tail call %struct.tcp_seg* @tcp_seg_copy(%struct.tcp_seg* nonnull @inseg) #10, !dbg !2613
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %675, metadata !1979, metadata !DIExpression()), !dbg !2614
  %676 = icmp eq %struct.tcp_seg* %675, null, !dbg !2615
  br i1 %676, label %811, label %677, !dbg !2617

; <label>:677:                                    ; preds = %674
  store %struct.tcp_seg* %675, %struct.tcp_seg** %642, align 8, !dbg !2618, !tbaa !2391
  tail call fastcc void @tcp_oos_insert_segment(%struct.tcp_seg* nonnull %675, %struct.tcp_seg* nonnull %648) #8, !dbg !2620
  br label %811, !dbg !2621

; <label>:678:                                    ; preds = %669
  %679 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %649, i64 0, i32 4, !dbg !2622
  %680 = load %struct.tcp_hdr*, %struct.tcp_hdr** %679, align 8, !dbg !2622, !tbaa !1022
  %681 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %680, i64 0, i32 2, !dbg !2622
  %682 = load i32, i32* %681, align 1, !dbg !2622, !tbaa !572
  %683 = xor i32 %682, -1, !dbg !2622
  %684 = add i32 %339, %683, !dbg !2622
  %685 = icmp sgt i32 %684, -1, !dbg !2622
  %686 = sub i32 %342, %655, !dbg !2622
  %687 = icmp slt i32 %686, 1, !dbg !2622
  %688 = and i1 %685, %687, !dbg !2622
  br i1 %688, label %689, label %711, !dbg !2622

; <label>:689:                                    ; preds = %678
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %649, metadata !1970, metadata !DIExpression()), !dbg !2583
  %690 = tail call %struct.tcp_seg* @tcp_seg_copy(%struct.tcp_seg* nonnull @inseg) #10, !dbg !2623
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %690, metadata !1985, metadata !DIExpression()), !dbg !2624
  %691 = icmp eq %struct.tcp_seg* %690, null, !dbg !2625
  br i1 %691, label %811, label %692, !dbg !2627

; <label>:692:                                    ; preds = %689
  %693 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %649, i64 0, i32 4, !dbg !2622
  %694 = load %struct.tcp_hdr*, %struct.tcp_hdr** %693, align 8, !dbg !2628, !tbaa !1022
  %695 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %694, i64 0, i32 2, !dbg !2628
  %696 = load i32, i32* %695, align 1, !dbg !2628, !tbaa !572
  %697 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %649, i64 0, i32 2, !dbg !2628
  %698 = load i16, i16* %697, align 8, !dbg !2628, !tbaa !1018
  %699 = zext i16 %698 to i32, !dbg !2628
  %700 = add i32 %696, %699, !dbg !2628
  %701 = load i32, i32* @seqno, align 4, !dbg !2628, !tbaa !577
  %702 = sub i32 %700, %701, !dbg !2628
  %703 = icmp sgt i32 %702, 0, !dbg !2628
  br i1 %703, label %704, label %709, !dbg !2631

; <label>:704:                                    ; preds = %692
  %705 = sub i32 %701, %696, !dbg !2632
  %706 = trunc i32 %705 to i16, !dbg !2634
  store i16 %706, i16* %697, align 8, !dbg !2635, !tbaa !1018
  %707 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %649, i64 0, i32 1, !dbg !2636
  %708 = load %struct.pbuf*, %struct.pbuf** %707, align 8, !dbg !2636, !tbaa !1020
  tail call void @pbuf_realloc(%struct.pbuf* %708, i16 zeroext %706) #10, !dbg !2637
  br label %709, !dbg !2638

; <label>:709:                                    ; preds = %704, %692
  %710 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %649, i64 0, i32 0, !dbg !2639
  store %struct.tcp_seg* %690, %struct.tcp_seg** %710, align 8, !dbg !2640, !tbaa !1015
  tail call fastcc void @tcp_oos_insert_segment(%struct.tcp_seg* nonnull %690, %struct.tcp_seg* nonnull %648) #8, !dbg !2641
  br label %811, !dbg !2642

; <label>:711:                                    ; preds = %678, %671
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1970, metadata !DIExpression()), !dbg !2583
  %712 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %648, i64 0, i32 0, !dbg !2643
  %713 = load %struct.tcp_seg*, %struct.tcp_seg** %712, align 8, !dbg !2643, !tbaa !1015
  %714 = icmp eq %struct.tcp_seg* %713, null, !dbg !2645
  %715 = sub i32 %339, %655, !dbg !2646
  %716 = icmp sgt i32 %715, 0, !dbg !2646
  %717 = and i1 %716, %714, !dbg !2647
  br i1 %717, label %718, label %647, !dbg !2647, !llvm.loop !2648

; <label>:718:                                    ; preds = %711
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  %719 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %648, i64 0, i32 4, !dbg !2587
  %720 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %648, i64 0, i32 0, !dbg !2643
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %648, metadata !1966, metadata !DIExpression()), !dbg !2584
  %721 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %653, i64 0, i32 4, !dbg !2650
  %722 = load i16, i16* %721, align 1, !dbg !2650, !tbaa !487
  %723 = tail call zeroext i16 @lwip_htons(i16 zeroext %722) #10, !dbg !2650
  %724 = and i16 %723, 1, !dbg !2653
  %725 = icmp eq i16 %724, 0, !dbg !2653
  br i1 %725, label %726, label %811, !dbg !2654

; <label>:726:                                    ; preds = %718
  %727 = tail call %struct.tcp_seg* @tcp_seg_copy(%struct.tcp_seg* nonnull @inseg) #10, !dbg !2655
  store %struct.tcp_seg* %727, %struct.tcp_seg** %720, align 8, !dbg !2656, !tbaa !1015
  %728 = icmp eq %struct.tcp_seg* %727, null, !dbg !2657
  br i1 %728, label %811, label %729, !dbg !2659

; <label>:729:                                    ; preds = %726
  %730 = load %struct.tcp_hdr*, %struct.tcp_hdr** %719, align 8, !dbg !2660, !tbaa !1022
  %731 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %730, i64 0, i32 2, !dbg !2660
  %732 = load i32, i32* %731, align 1, !dbg !2660, !tbaa !572
  %733 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %648, i64 0, i32 2, !dbg !2660
  %734 = load i16, i16* %733, align 8, !dbg !2660, !tbaa !1018
  %735 = zext i16 %734 to i32, !dbg !2660
  %736 = add i32 %732, %735, !dbg !2660
  %737 = load i32, i32* @seqno, align 4, !dbg !2660, !tbaa !577
  %738 = sub i32 %736, %737, !dbg !2660
  %739 = icmp sgt i32 %738, 0, !dbg !2660
  br i1 %739, label %740, label %746, !dbg !2663

; <label>:740:                                    ; preds = %729
  %741 = sub i32 %737, %732, !dbg !2664
  %742 = trunc i32 %741 to i16, !dbg !2666
  store i16 %742, i16* %733, align 8, !dbg !2667, !tbaa !1018
  %743 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %648, i64 0, i32 1, !dbg !2668
  %744 = load %struct.pbuf*, %struct.pbuf** %743, align 8, !dbg !2668, !tbaa !1020
  tail call void @pbuf_realloc(%struct.pbuf* %744, i16 zeroext %742) #10, !dbg !2669
  %745 = load i32, i32* @seqno, align 4, !dbg !2670, !tbaa !577
  br label %746, !dbg !2672

; <label>:746:                                    ; preds = %740, %729
  %747 = phi i32 [ %745, %740 ], [ %737, %729 ], !dbg !2670
  %748 = load i16, i16* @tcplen, align 2, !dbg !2670, !tbaa !498
  %749 = zext i16 %748 to i32, !dbg !2670
  %750 = load i32, i32* %273, align 4, !dbg !2670, !tbaa !767
  %751 = load i32, i32* %340, align 8, !dbg !2670, !tbaa !768
  %752 = add i32 %747, %749, !dbg !2670
  %753 = sub i32 %752, %750, !dbg !2670
  %754 = sub i32 %753, %751, !dbg !2670
  %755 = icmp sgt i32 %754, 0, !dbg !2670
  br i1 %755, label %756, label %811, !dbg !2673

; <label>:756:                                    ; preds = %746
  %757 = load %struct.tcp_seg*, %struct.tcp_seg** %720, align 8, !dbg !2674, !tbaa !1015
  %758 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %757, i64 0, i32 4, !dbg !2674
  %759 = load %struct.tcp_hdr*, %struct.tcp_hdr** %758, align 8, !dbg !2674, !tbaa !1022
  %760 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %759, i64 0, i32 4, !dbg !2674
  %761 = load i16, i16* %760, align 1, !dbg !2674, !tbaa !487
  %762 = tail call zeroext i16 @lwip_htons(i16 zeroext %761) #10, !dbg !2674
  %763 = and i16 %762, 1, !dbg !2677
  %764 = icmp eq i16 %763, 0, !dbg !2677
  %765 = load %struct.tcp_seg*, %struct.tcp_seg** %720, align 8, !dbg !2678, !tbaa !1015
  br i1 %764, label %780, label %766, !dbg !2680

; <label>:766:                                    ; preds = %756
  %767 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %765, i64 0, i32 4, !dbg !2681
  %768 = load %struct.tcp_hdr*, %struct.tcp_hdr** %767, align 8, !dbg !2681, !tbaa !1022
  %769 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %768, i64 0, i32 4, !dbg !2681
  %770 = load i16, i16* %769, align 1, !dbg !2681, !tbaa !487
  %771 = and i16 %770, -16129, !dbg !2681
  %772 = tail call zeroext i16 @lwip_htons(i16 zeroext %770) #10, !dbg !2681
  %773 = and i16 %772, 62, !dbg !2681
  %774 = tail call zeroext i16 @lwip_htons(i16 zeroext %773) #10, !dbg !2681
  %775 = or i16 %774, %771, !dbg !2681
  %776 = load %struct.tcp_seg*, %struct.tcp_seg** %720, align 8, !dbg !2681, !tbaa !1015
  %777 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %776, i64 0, i32 4, !dbg !2681
  %778 = load %struct.tcp_hdr*, %struct.tcp_hdr** %777, align 8, !dbg !2681, !tbaa !1022
  %779 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %778, i64 0, i32 4, !dbg !2681
  store i16 %775, i16* %779, align 1, !dbg !2681, !tbaa !487
  br label %780, !dbg !2682

; <label>:780:                                    ; preds = %756, %766
  %781 = phi %struct.tcp_seg* [ %776, %766 ], [ %765, %756 ], !dbg !2683
  %782 = load i32, i32* %273, align 4, !dbg !2684, !tbaa !767
  %783 = load i32, i32* %340, align 8, !dbg !2685, !tbaa !768
  %784 = add i32 %783, %782, !dbg !2686
  %785 = load i32, i32* @seqno, align 4, !dbg !2687, !tbaa !577
  %786 = sub i32 %784, %785, !dbg !2688
  %787 = trunc i32 %786 to i16, !dbg !2689
  %788 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %781, i64 0, i32 2, !dbg !2690
  store i16 %787, i16* %788, align 8, !dbg !2691, !tbaa !1018
  %789 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %781, i64 0, i32 1, !dbg !2692
  %790 = load %struct.pbuf*, %struct.pbuf** %789, align 8, !dbg !2692, !tbaa !1020
  tail call void @pbuf_realloc(%struct.pbuf* %790, i16 zeroext %787) #10, !dbg !2693
  %791 = load %struct.tcp_seg*, %struct.tcp_seg** %720, align 8, !dbg !2694, !tbaa !1015
  %792 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %791, i64 0, i32 2, !dbg !2694
  %793 = load i16, i16* %792, align 8, !dbg !2694, !tbaa !1018
  %794 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %791, i64 0, i32 4, !dbg !2694
  %795 = load %struct.tcp_hdr*, %struct.tcp_hdr** %794, align 8, !dbg !2694, !tbaa !1022
  %796 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %795, i64 0, i32 4, !dbg !2694
  %797 = load i16, i16* %796, align 1, !dbg !2694, !tbaa !487
  %798 = tail call zeroext i16 @lwip_htons(i16 zeroext %797) #10, !dbg !2694
  %799 = and i16 %798, 3, !dbg !2694
  %800 = icmp ne i16 %799, 0, !dbg !2694
  %801 = zext i1 %800 to i16, !dbg !2694
  %802 = add i16 %793, %801, !dbg !2694
  store i16 %802, i16* @tcplen, align 2, !dbg !2695, !tbaa !498
  %803 = load i32, i32* @seqno, align 4, !dbg !2696, !tbaa !577
  %804 = zext i16 %802 to i32, !dbg !2696
  %805 = add i32 %803, %804, !dbg !2696
  %806 = load i32, i32* %273, align 4, !dbg !2696, !tbaa !767
  %807 = load i32, i32* %340, align 8, !dbg !2696, !tbaa !768
  %808 = add i32 %807, %806, !dbg !2696
  %809 = icmp eq i32 %805, %808, !dbg !2696
  br i1 %809, label %811, label %810, !dbg !2699

; <label>:810:                                    ; preds = %780
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.32, i64 0, i64 0)) #8, !dbg !2700
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2703
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2703
  unreachable, !dbg !2703

; <label>:811:                                    ; preds = %647, %657, %746, %780, %718, %726, %662, %665, %674, %677, %689, %709, %645
  %812 = tail call signext i8 @tcp_send_empty_ack(%struct.tcp_pcb* %0) #10, !dbg !2707
  br label %832

; <label>:813:                                    ; preds = %333, %337
  %814 = tail call signext i8 @tcp_send_empty_ack(%struct.tcp_pcb* nonnull %0) #10, !dbg !2708
  br label %832

; <label>:815:                                    ; preds = %265, %269
  %816 = load i32, i32* @seqno, align 4, !dbg !2710, !tbaa !577
  %817 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 17, !dbg !2710
  %818 = load i32, i32* %817, align 4, !dbg !2710, !tbaa !767
  %819 = sub i32 %816, %818, !dbg !2710
  %820 = icmp sgt i32 %819, -1, !dbg !2710
  br i1 %820, label %821, label %828, !dbg !2710

; <label>:821:                                    ; preds = %815
  %822 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 18, !dbg !2710
  %823 = load i32, i32* %822, align 8, !dbg !2710, !tbaa !768
  %824 = add i32 %816, 1, !dbg !2710
  %825 = sub i32 %824, %818, !dbg !2710
  %826 = sub i32 %825, %823, !dbg !2710
  %827 = icmp slt i32 %826, 1, !dbg !2710
  br i1 %827, label %832, label %828, !dbg !2713

; <label>:828:                                    ; preds = %815, %821
  %829 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 12, !dbg !2714
  %830 = load i16, i16* %829, align 2, !dbg !2714, !tbaa !791
  %831 = or i16 %830, 2, !dbg !2714
  store i16 %831, i16* %829, align 2, !dbg !2714, !tbaa !791
  br label %832, !dbg !2717

; <label>:832:                                    ; preds = %629, %821, %828, %813, %640, %811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2718
  ret void, !dbg !2718
}

; Function Attrs: noredzone
declare dso_local signext i8 @tcp_rexmit(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_pcb_purge(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_rexmit_fast(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc %struct.tcp_seg* @tcp_free_acked_segments(%struct.tcp_pcb* nocapture, %struct.tcp_seg*, %struct.tcp_seg* readnone) unnamed_addr #0 !dbg !2719 {
  call void @llvm.dbg.value(metadata %struct.tcp_pcb* %0, metadata !2723, metadata !DIExpression()), !dbg !2729
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %1, metadata !2724, metadata !DIExpression()), !dbg !2730
  call void @llvm.dbg.value(metadata i8* null, metadata !2725, metadata !DIExpression()), !dbg !2731
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %2, metadata !2726, metadata !DIExpression()), !dbg !2732
  %4 = icmp eq %struct.tcp_seg* %1, null, !dbg !2733
  br i1 %4, label %53, label %5, !dbg !2734

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %0, i64 0, i32 41
  %7 = icmp ne %struct.tcp_seg* %2, null
  br label %8, !dbg !2734

; <label>:8:                                      ; preds = %5, %51
  %9 = phi %struct.tcp_seg* [ %1, %5 ], [ %32, %51 ]
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %9, metadata !2724, metadata !DIExpression()), !dbg !2730
  %10 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %9, i64 0, i32 4, !dbg !2735
  %11 = load %struct.tcp_hdr*, %struct.tcp_hdr** %10, align 8, !dbg !2735, !tbaa !1022
  %12 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %11, i64 0, i32 2, !dbg !2735
  %13 = load i32, i32* %12, align 1, !dbg !2735, !tbaa !572
  %14 = tail call i32 @lwip_htonl(i32 %13) #10, !dbg !2735
  %15 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %9, i64 0, i32 2, !dbg !2735
  %16 = load i16, i16* %15, align 8, !dbg !2735, !tbaa !1018
  %17 = zext i16 %16 to i32, !dbg !2735
  %18 = load %struct.tcp_hdr*, %struct.tcp_hdr** %10, align 8, !dbg !2735, !tbaa !1022
  %19 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %18, i64 0, i32 4, !dbg !2735
  %20 = load i16, i16* %19, align 1, !dbg !2735, !tbaa !487
  %21 = tail call zeroext i16 @lwip_htons(i16 zeroext %20) #10, !dbg !2735
  %22 = and i16 %21, 3, !dbg !2735
  %23 = icmp ne i16 %22, 0, !dbg !2735
  %24 = zext i1 %23 to i32, !dbg !2735
  %25 = load i32, i32* @ackno, align 4, !dbg !2735, !tbaa !577
  %26 = add i32 %14, %17, !dbg !2735
  %27 = sub i32 %26, %25, !dbg !2735
  %28 = add i32 %27, %24, !dbg !2735
  %29 = icmp slt i32 %28, 1, !dbg !2735
  br i1 %29, label %30, label %53, !dbg !2736

; <label>:30:                                     ; preds = %8
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %9, metadata !2727, metadata !DIExpression()), !dbg !2737
  %31 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %9, i64 0, i32 0, !dbg !2738
  %32 = load %struct.tcp_seg*, %struct.tcp_seg** %31, align 8, !dbg !2738, !tbaa !1015
  %33 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %9, i64 0, i32 1, !dbg !2740
  %34 = load %struct.pbuf*, %struct.pbuf** %33, align 8, !dbg !2740, !tbaa !1020
  %35 = tail call zeroext i16 @pbuf_clen(%struct.pbuf* %34) #10, !dbg !2741
  call void @llvm.dbg.value(metadata i16 %35, metadata !2728, metadata !DIExpression()), !dbg !2742
  %36 = load i16, i16* %6, align 4, !dbg !2743, !tbaa !1205
  %37 = icmp ult i16 %36, %35, !dbg !2743
  br i1 %37, label %38, label %39, !dbg !2746

; <label>:38:                                     ; preds = %30
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)) #8, !dbg !2747
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2750
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2750
  unreachable, !dbg !2750

; <label>:39:                                     ; preds = %30
  %40 = sub i16 %36, %35, !dbg !2754
  store i16 %40, i16* %6, align 4, !dbg !2755, !tbaa !1205
  %41 = load i32, i32* @recv_acked, align 4, !dbg !2756, !tbaa !577
  %42 = load i16, i16* %15, align 8, !dbg !2757, !tbaa !1018
  %43 = zext i16 %42 to i32, !dbg !2758
  %44 = add i32 %41, %43, !dbg !2759
  store i32 %44, i32* @recv_acked, align 4, !dbg !2760, !tbaa !577
  tail call void @tcp_seg_free(%struct.tcp_seg* nonnull %9) #10, !dbg !2761
  %45 = load i16, i16* %6, align 4, !dbg !2762, !tbaa !1205
  %46 = icmp eq i16 %45, 0, !dbg !2764
  %47 = icmp ne %struct.tcp_seg* %32, null, !dbg !2765
  %48 = or i1 %7, %47, !dbg !2765
  %49 = or i1 %46, %48, !dbg !2769
  br i1 %49, label %51, label %50, !dbg !2769

; <label>:50:                                     ; preds = %39
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i64 0, i64 0)) #8, !dbg !2770
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2773
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2773
  unreachable, !dbg !2773

; <label>:51:                                     ; preds = %39
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %32, metadata !2724, metadata !DIExpression()), !dbg !2730
  %52 = icmp eq %struct.tcp_seg* %32, null, !dbg !2733
  br i1 %52, label %53, label %8, !dbg !2734, !llvm.loop !2777

; <label>:53:                                     ; preds = %8, %51, %3
  %54 = phi %struct.tcp_seg* [ null, %3 ], [ null, %51 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %54, metadata !2724, metadata !DIExpression()), !dbg !2730
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %54, metadata !2724, metadata !DIExpression()), !dbg !2730
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2779
  ret %struct.tcp_seg* %54, !dbg !2779
}

; Function Attrs: noredzone
declare dso_local void @nd6_reachability_hint(%struct.ip6_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @pbuf_realloc(%struct.pbuf*, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @tcp_update_rcv_ann_wnd(%struct.tcp_pcb*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.tcp_seg* @tcp_seg_copy(%struct.tcp_seg*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc void @tcp_oos_insert_segment(%struct.tcp_seg*, %struct.tcp_seg*) unnamed_addr #0 !dbg !2780 {
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %0, metadata !2784, metadata !DIExpression()), !dbg !2787
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %1, metadata !2785, metadata !DIExpression()), !dbg !2788
  %3 = icmp eq %struct.tcp_seg* %0, null, !dbg !2789
  br i1 %3, label %4, label %5, !dbg !2792

; <label>:4:                                      ; preds = %2
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38, i64 0, i64 0)) #8, !dbg !2793
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !2796
  tail call void @ukplat_terminate(i32 3) #9, !dbg !2796
  unreachable, !dbg !2796

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %0, i64 0, i32 4, !dbg !2800
  %7 = load %struct.tcp_hdr*, %struct.tcp_hdr** %6, align 8, !dbg !2800, !tbaa !1022
  %8 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %7, i64 0, i32 4, !dbg !2800
  %9 = load i16, i16* %8, align 1, !dbg !2800, !tbaa !487
  %10 = tail call zeroext i16 @lwip_htons(i16 zeroext %9) #10, !dbg !2800
  %11 = and i16 %10, 1, !dbg !2802
  %12 = icmp eq i16 %11, 0, !dbg !2802
  br i1 %12, label %13, label %17, !dbg !2803

; <label>:13:                                     ; preds = %5
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %1, metadata !2785, metadata !DIExpression()), !dbg !2788
  %14 = icmp eq %struct.tcp_seg* %1, null, !dbg !2804
  br i1 %14, label %59, label %15, !dbg !2806

; <label>:15:                                     ; preds = %13
  %16 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %0, i64 0, i32 2
  br label %18, !dbg !2806

; <label>:17:                                     ; preds = %5
  tail call void @tcp_segs_free(%struct.tcp_seg* %1) #10, !dbg !2807
  call void @llvm.dbg.value(metadata %struct.tcp_seg* null, metadata !2785, metadata !DIExpression()), !dbg !2788
  br label %59, !dbg !2809

; <label>:18:                                     ; preds = %15, %48
  %19 = phi %struct.tcp_seg* [ %1, %15 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %19, metadata !2785, metadata !DIExpression()), !dbg !2788
  %20 = load i32, i32* @seqno, align 4, !dbg !2810, !tbaa !577
  %21 = load i16, i16* %16, align 8, !dbg !2810, !tbaa !1018
  %22 = zext i16 %21 to i32, !dbg !2810
  %23 = add i32 %20, %22, !dbg !2810
  %24 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %19, i64 0, i32 4, !dbg !2810
  %25 = load %struct.tcp_hdr*, %struct.tcp_hdr** %24, align 8, !dbg !2810, !tbaa !1022
  %26 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %25, i64 0, i32 2, !dbg !2810
  %27 = load i32, i32* %26, align 1, !dbg !2810, !tbaa !572
  %28 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %19, i64 0, i32 2, !dbg !2810
  %29 = load i16, i16* %28, align 8, !dbg !2810, !tbaa !1018
  %30 = zext i16 %29 to i32, !dbg !2810
  %31 = sub i32 %23, %27, !dbg !2810
  %32 = sub i32 %31, %30, !dbg !2810
  %33 = icmp sgt i32 %32, -1, !dbg !2810
  br i1 %33, label %34, label %52, !dbg !2811

; <label>:34:                                     ; preds = %18
  %35 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %25, i64 0, i32 4, !dbg !2812
  %36 = load i16, i16* %35, align 1, !dbg !2812, !tbaa !487
  %37 = tail call zeroext i16 @lwip_htons(i16 zeroext %36) #10, !dbg !2812
  %38 = and i16 %37, 1, !dbg !2815
  %39 = icmp eq i16 %38, 0, !dbg !2815
  br i1 %39, label %48, label %40, !dbg !2816

; <label>:40:                                     ; preds = %34
  %41 = load %struct.tcp_hdr*, %struct.tcp_hdr** %6, align 8, !dbg !2817, !tbaa !1022
  %42 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %41, i64 0, i32 4, !dbg !2817
  %43 = load i16, i16* %42, align 1, !dbg !2817, !tbaa !487
  %44 = tail call zeroext i16 @lwip_htons(i16 zeroext 1) #10, !dbg !2817
  %45 = or i16 %44, %43, !dbg !2817
  %46 = load %struct.tcp_hdr*, %struct.tcp_hdr** %6, align 8, !dbg !2817, !tbaa !1022
  %47 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %46, i64 0, i32 4, !dbg !2817
  store i16 %45, i16* %47, align 1, !dbg !2817, !tbaa !487
  br label %48, !dbg !2819

; <label>:48:                                     ; preds = %34, %40
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %19, metadata !2786, metadata !DIExpression()), !dbg !2820
  %49 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %19, i64 0, i32 0, !dbg !2821
  %50 = load %struct.tcp_seg*, %struct.tcp_seg** %49, align 8, !dbg !2821, !tbaa !1015
  tail call void @tcp_seg_free(%struct.tcp_seg* nonnull %19) #10, !dbg !2822
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %50, metadata !2785, metadata !DIExpression()), !dbg !2788
  %51 = icmp eq %struct.tcp_seg* %50, null, !dbg !2804
  br i1 %51, label %59, label %18, !dbg !2806, !llvm.loop !2823

; <label>:52:                                     ; preds = %18
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %19, metadata !2785, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %19, metadata !2785, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %19, metadata !2785, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %19, metadata !2785, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %19, metadata !2785, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %19, metadata !2785, metadata !DIExpression()), !dbg !2788
  %53 = icmp sgt i32 %31, 0, !dbg !2825
  br i1 %53, label %54, label %59, !dbg !2827

; <label>:54:                                     ; preds = %52
  %55 = sub i32 %27, %20, !dbg !2828
  %56 = trunc i32 %55 to i16, !dbg !2830
  store i16 %56, i16* %16, align 8, !dbg !2831, !tbaa !1018
  %57 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %0, i64 0, i32 1, !dbg !2832
  %58 = load %struct.pbuf*, %struct.pbuf** %57, align 8, !dbg !2832, !tbaa !1020
  tail call void @pbuf_realloc(%struct.pbuf* %58, i16 zeroext %56) #10, !dbg !2833
  br label %59, !dbg !2834

; <label>:59:                                     ; preds = %48, %13, %52, %54, %17
  %60 = phi %struct.tcp_seg* [ null, %17 ], [ %19, %54 ], [ %19, %52 ], [ null, %13 ], [ null, %48 ]
  call void @llvm.dbg.value(metadata %struct.tcp_seg* %60, metadata !2785, metadata !DIExpression()), !dbg !2788
  %61 = getelementptr inbounds %struct.tcp_seg, %struct.tcp_seg* %0, i64 0, i32 0, !dbg !2835
  store %struct.tcp_seg* %60, %struct.tcp_seg** %61, align 8, !dbg !2836, !tbaa !1015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2837
  ret void, !dbg !2837
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @pbuf_clen(%struct.pbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_segs_free(%struct.tcp_seg*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin noredzone }
attributes #9 = { nobuiltin noredzone noreturn nounwind }
attributes #10 = { nobuiltin noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!323, !324, !325}
!llvm.ident = !{!326}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "tcphdr", scope: !2, file: !3, line: 75, type: !61, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !59, globals: !264)
!3 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/core/tcp_in.c", directory: "/root/.unikraft/apps/redis/build")
!4 = !{!5, !11, !25, !32, !38}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netif_mac_filter_action", file: !6, line: 156, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/netif.h", directory: "/root/.unikraft/apps/redis/build")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "NETIF_DEL_MAC_FILTER", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "NETIF_ADD_MAC_FILTER", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tcp_state", file: !12, line: 56, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/tcpbase.h", directory: "/root/.unikraft/apps/redis/build")
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!14 = !DIEnumerator(name: "CLOSED", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "LISTEN", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "SYN_SENT", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "SYN_RCVD", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "ESTABLISHED", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "FIN_WAIT_1", value: 5, isUnsigned: true)
!20 = !DIEnumerator(name: "FIN_WAIT_2", value: 6, isUnsigned: true)
!21 = !DIEnumerator(name: "CLOSE_WAIT", value: 7, isUnsigned: true)
!22 = !DIEnumerator(name: "CLOSING", value: 8, isUnsigned: true)
!23 = !DIEnumerator(name: "LAST_ACK", value: 9, isUnsigned: true)
!24 = !DIEnumerator(name: "TIME_WAIT", value: 10, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ukplat_gstate", file: !26, line: 68, baseType: !7, size: 32, elements: !27)
!26 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/plat/bootstrap.h", directory: "/root/.unikraft/apps/redis/build")
!27 = !{!28, !29, !30, !31}
!28 = !DIEnumerator(name: "UKPLAT_HALT", value: 0, isUnsigned: true)
!29 = !DIEnumerator(name: "UKPLAT_RESTART", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "UKPLAT_SUSPEND", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "UKPLAT_CRASH", value: 3, isUnsigned: true)
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lwip_ip_addr_type", file: !33, line: 54, baseType: !7, size: 32, elements: !34)
!33 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip_addr.h", directory: "/root/.unikraft/apps/redis/build")
!34 = !{!35, !36, !37}
!35 = !DIEnumerator(name: "IPADDR_TYPE_V4", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "IPADDR_TYPE_V6", value: 6, isUnsigned: true)
!37 = !DIEnumerator(name: "IPADDR_TYPE_ANY", value: 46, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !39, line: 53, baseType: !40, size: 32, elements: !41)
!39 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/err.h", directory: "/root/.unikraft/apps/redis/build")
!40 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58}
!42 = !DIEnumerator(name: "ERR_OK", value: 0)
!43 = !DIEnumerator(name: "ERR_MEM", value: -1)
!44 = !DIEnumerator(name: "ERR_BUF", value: -2)
!45 = !DIEnumerator(name: "ERR_TIMEOUT", value: -3)
!46 = !DIEnumerator(name: "ERR_RTE", value: -4)
!47 = !DIEnumerator(name: "ERR_INPROGRESS", value: -5)
!48 = !DIEnumerator(name: "ERR_VAL", value: -6)
!49 = !DIEnumerator(name: "ERR_WOULDBLOCK", value: -7)
!50 = !DIEnumerator(name: "ERR_USE", value: -8)
!51 = !DIEnumerator(name: "ERR_ALREADY", value: -9)
!52 = !DIEnumerator(name: "ERR_ISCONN", value: -10)
!53 = !DIEnumerator(name: "ERR_CONN", value: -11)
!54 = !DIEnumerator(name: "ERR_IF", value: -12)
!55 = !DIEnumerator(name: "ERR_ABRT", value: -13)
!56 = !DIEnumerator(name: "ERR_RST", value: -14)
!57 = !DIEnumerator(name: "ERR_CLSD", value: -15)
!58 = !DIEnumerator(name: "ERR_ARG", value: -16)
!59 = !{!60, !61, !75, !83, !66, !87, !88, !191, !135, !244, !128, !246, !139, !249, !7}
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_hdr", file: !63, line: 56, size: 160, elements: !64)
!63 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/prot/tcp.h", directory: "/root/.unikraft/apps/redis/build")
!64 = !{!65, !73, !74, !78, !79, !80, !81, !82}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !62, file: !63, line: 57, baseType: !66, size: 16)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16_t", file: !67, line: 127, baseType: !68)
!67 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/arch.h", directory: "/root/.unikraft/apps/redis/build")
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !69, line: 36, baseType: !70)
!69 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!70 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !71, line: 57, baseType: !72)
!71 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!72 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !62, file: !63, line: 58, baseType: !66, size: 16, offset: 16)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !62, file: !63, line: 59, baseType: !75, size: 32, offset: 32)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32_t", file: !67, line: 129, baseType: !76)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !69, line: 48, baseType: !77)
!77 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !71, line: 79, baseType: !7)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "ackno", scope: !62, file: !63, line: 60, baseType: !75, size: 32, offset: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_hdrlen_rsvd_flags", scope: !62, file: !63, line: 61, baseType: !66, size: 16, offset: 96)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "wnd", scope: !62, file: !63, line: 62, baseType: !66, size: 16, offset: 112)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "chksum", scope: !62, file: !63, line: 63, baseType: !66, size: 16, offset: 128)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "urgp", scope: !62, file: !63, line: 64, baseType: !66, size: 16, offset: 144)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8_t", file: !67, line: 125, baseType: !84)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !69, line: 24, baseType: !85)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !71, line: 43, baseType: !86)
!86 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!89 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_pcb", file: !90, line: 242, size: 2240, elements: !91)
!90 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/tcp.h", directory: "/root/.unikraft/apps/redis/build")
!91 = !{!92, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !129, !130, !131, !132, !133, !134, !136, !137, !138, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !187, !188, !189, !190, !215, !220, !225, !227, !232, !237, !238, !239, !240, !241, !242, !243}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !89, file: !90, line: 244, baseType: !93, size: 192)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip_addr_t", file: !33, line: 76, baseType: !94)
!94 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_addr", file: !33, line: 69, size: 192, elements: !95)
!95 = !{!96, !115}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "u_addr", scope: !94, file: !33, line: 73, baseType: !97, size: 160)
!97 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !94, file: !33, line: 70, size: 160, elements: !98)
!98 = !{!99, !109}
!99 = !DIDerivedType(tag: DW_TAG_member, name: "ip6", scope: !97, file: !33, line: 71, baseType: !100, size: 160)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip6_addr_t", file: !101, line: 67, baseType: !102)
!101 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip6_addr.h", directory: "/root/.unikraft/apps/redis/build")
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_addr", file: !101, line: 59, size: 160, elements: !103)
!103 = !{!104, !108}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !102, file: !101, line: 60, baseType: !105, size: 128)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 128, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 4)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "zone", scope: !102, file: !101, line: 62, baseType: !83, size: 8, offset: 128)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "ip4", scope: !97, file: !33, line: 72, baseType: !110, size: 32)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip4_addr_t", file: !111, line: 57, baseType: !112)
!111 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip4_addr.h", directory: "/root/.unikraft/apps/redis/build")
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip4_addr", file: !111, line: 51, size: 32, elements: !113)
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !112, file: !111, line: 52, baseType: !75, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !94, file: !33, line: 75, baseType: !83, size: 8, offset: 160)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !89, file: !90, line: 244, baseType: !93, size: 192, offset: 192)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !89, file: !90, line: 244, baseType: !83, size: 8, offset: 384)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !89, file: !90, line: 244, baseType: !83, size: 8, offset: 392)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !89, file: !90, line: 244, baseType: !83, size: 8, offset: 400)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !89, file: !90, line: 244, baseType: !83, size: 8, offset: 408)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !89, file: !90, line: 246, baseType: !88, size: 64, offset: 448)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "callback_arg", scope: !89, file: !90, line: 246, baseType: !60, size: 64, offset: 512)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !89, file: !90, line: 246, baseType: !11, size: 32, offset: 576)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !89, file: !90, line: 246, baseType: !83, size: 8, offset: 608)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !89, file: !90, line: 246, baseType: !66, size: 16, offset: 624)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !89, file: !90, line: 249, baseType: !66, size: 16, offset: 640)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !89, file: !90, line: 251, baseType: !128, size: 16, offset: 656)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcpflags_t", file: !90, line: 206, baseType: !66)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "polltmr", scope: !89, file: !90, line: 278, baseType: !83, size: 8, offset: 672)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "pollinterval", scope: !89, file: !90, line: 278, baseType: !83, size: 8, offset: 680)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "last_timer", scope: !89, file: !90, line: 279, baseType: !83, size: 8, offset: 688)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "tmr", scope: !89, file: !90, line: 280, baseType: !75, size: 32, offset: 704)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_nxt", scope: !89, file: !90, line: 283, baseType: !75, size: 32, offset: 736)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_wnd", scope: !89, file: !90, line: 284, baseType: !135, size: 32, offset: 768)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcpwnd_size_t", file: !12, line: 51, baseType: !75)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_ann_wnd", scope: !89, file: !90, line: 285, baseType: !135, size: 32, offset: 800)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_ann_right_edge", scope: !89, file: !90, line: 286, baseType: !75, size: 32, offset: 832)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "rtime", scope: !89, file: !90, line: 295, baseType: !139, size: 16, offset: 864)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16_t", file: !67, line: 128, baseType: !140)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !69, line: 32, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !71, line: 55, baseType: !142)
!142 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !89, file: !90, line: 297, baseType: !66, size: 16, offset: 880)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "rttest", scope: !89, file: !90, line: 300, baseType: !75, size: 32, offset: 896)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "rtseq", scope: !89, file: !90, line: 301, baseType: !75, size: 32, offset: 928)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !89, file: !90, line: 302, baseType: !139, size: 16, offset: 960)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "sv", scope: !89, file: !90, line: 302, baseType: !139, size: 16, offset: 976)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "rto", scope: !89, file: !90, line: 304, baseType: !139, size: 16, offset: 992)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nrtx", scope: !89, file: !90, line: 305, baseType: !83, size: 8, offset: 1008)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "dupacks", scope: !89, file: !90, line: 308, baseType: !83, size: 8, offset: 1016)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "lastack", scope: !89, file: !90, line: 309, baseType: !75, size: 32, offset: 1024)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "cwnd", scope: !89, file: !90, line: 312, baseType: !135, size: 32, offset: 1056)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "ssthresh", scope: !89, file: !90, line: 313, baseType: !135, size: 32, offset: 1088)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "rto_end", scope: !89, file: !90, line: 316, baseType: !75, size: 32, offset: 1120)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "snd_nxt", scope: !89, file: !90, line: 319, baseType: !75, size: 32, offset: 1152)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wl1", scope: !89, file: !90, line: 320, baseType: !75, size: 32, offset: 1184)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wl2", scope: !89, file: !90, line: 320, baseType: !75, size: 32, offset: 1216)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "snd_lbb", scope: !89, file: !90, line: 322, baseType: !75, size: 32, offset: 1248)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wnd", scope: !89, file: !90, line: 323, baseType: !135, size: 32, offset: 1280)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wnd_max", scope: !89, file: !90, line: 324, baseType: !135, size: 32, offset: 1312)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "snd_buf", scope: !89, file: !90, line: 326, baseType: !135, size: 32, offset: 1344)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "snd_queuelen", scope: !89, file: !90, line: 328, baseType: !66, size: 16, offset: 1376)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "unsent_oversize", scope: !89, file: !90, line: 332, baseType: !66, size: 16, offset: 1392)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_acked", scope: !89, file: !90, line: 335, baseType: !135, size: 32, offset: 1408)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "unsent", scope: !89, file: !90, line: 338, baseType: !166, size: 64, offset: 1472)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_seg", file: !168, line: 253, size: 256, elements: !169)
!168 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/priv/tcp_priv.h", directory: "/root/.unikraft/apps/redis/build")
!169 = !{!170, !171, !184, !185, !186}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !167, file: !168, line: 254, baseType: !166, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !167, file: !168, line: 255, baseType: !172, size: 64, offset: 64)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pbuf", file: !174, line: 186, size: 192, elements: !175)
!174 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/pbuf.h", directory: "/root/.unikraft/apps/redis/build")
!175 = !{!176, !177, !178, !179, !180, !181, !182, !183}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !173, file: !174, line: 188, baseType: !172, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !173, file: !174, line: 191, baseType: !60, size: 64, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !173, file: !174, line: 200, baseType: !66, size: 16, offset: 128)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !173, file: !174, line: 203, baseType: !66, size: 16, offset: 144)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "type_internal", scope: !173, file: !174, line: 208, baseType: !83, size: 8, offset: 160)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !173, file: !174, line: 211, baseType: !83, size: 8, offset: 168)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !173, file: !174, line: 218, baseType: !83, size: 8, offset: 176)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "if_idx", scope: !173, file: !174, line: 221, baseType: !83, size: 8, offset: 184)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !167, file: !168, line: 256, baseType: !66, size: 16, offset: 128)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !167, file: !168, line: 266, baseType: !83, size: 8, offset: 144)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "tcphdr", scope: !167, file: !168, line: 273, baseType: !61, size: 64, offset: 192)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "unacked", scope: !89, file: !90, line: 339, baseType: !166, size: 64, offset: 1536)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "ooseq", scope: !89, file: !90, line: 341, baseType: !166, size: 64, offset: 1600)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "refused_data", scope: !89, file: !90, line: 344, baseType: !172, size: 64, offset: 1664)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !89, file: !90, line: 347, baseType: !191, size: 64, offset: 1728)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_pcb_listen", file: !90, line: 223, size: 704, elements: !193)
!193 = !{!194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !192, file: !90, line: 225, baseType: !93, size: 192)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !192, file: !90, line: 225, baseType: !93, size: 192, offset: 192)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !192, file: !90, line: 225, baseType: !83, size: 8, offset: 384)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !192, file: !90, line: 225, baseType: !83, size: 8, offset: 392)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !192, file: !90, line: 225, baseType: !83, size: 8, offset: 400)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !192, file: !90, line: 225, baseType: !83, size: 8, offset: 408)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !192, file: !90, line: 227, baseType: !191, size: 64, offset: 448)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "callback_arg", scope: !192, file: !90, line: 227, baseType: !60, size: 64, offset: 512)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !192, file: !90, line: 227, baseType: !11, size: 32, offset: 576)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !90, line: 227, baseType: !83, size: 8, offset: 608)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !192, file: !90, line: 227, baseType: !66, size: 16, offset: 624)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !192, file: !90, line: 231, baseType: !206, size: 64, offset: 640)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_accept_fn", file: !90, line: 70, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!208 = !DISubroutineType(types: !209)
!209 = !{!210, !60, !88, !210}
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "err_t", file: !39, line: 96, baseType: !211)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8_t", file: !67, line: 126, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !69, line: 20, baseType: !213)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !71, line: 41, baseType: !214)
!214 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "sent", scope: !89, file: !90, line: 352, baseType: !216, size: 64, offset: 1792)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_sent_fn", file: !90, line: 96, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DISubroutineType(types: !219)
!219 = !{!210, !60, !88, !66}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !89, file: !90, line: 354, baseType: !221, size: 64, offset: 1856)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_recv_fn", file: !90, line: 82, baseType: !222)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DISubroutineType(types: !224)
!224 = !{!210, !60, !88, !172, !210}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "connected", scope: !89, file: !90, line: 356, baseType: !226, size: 64, offset: 1920)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_connected_fn", file: !90, line: 134, baseType: !207)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !89, file: !90, line: 358, baseType: !228, size: 64, offset: 1984)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_poll_fn", file: !90, line: 108, baseType: !229)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = !DISubroutineType(types: !231)
!231 = !{!210, !60, !88}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "errf", scope: !89, file: !90, line: 360, baseType: !233, size: 64, offset: 2048)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_err_fn", file: !90, line: 120, baseType: !234)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DISubroutineType(types: !236)
!236 = !{null, !60, !210}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "keep_idle", scope: !89, file: !90, line: 369, baseType: !75, size: 32, offset: 2112)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "persist_cnt", scope: !89, file: !90, line: 376, baseType: !83, size: 8, offset: 2144)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "persist_backoff", scope: !89, file: !90, line: 378, baseType: !83, size: 8, offset: 2152)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "persist_probe", scope: !89, file: !90, line: 380, baseType: !83, size: 8, offset: 2160)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "keep_cnt_sent", scope: !89, file: !90, line: 383, baseType: !83, size: 8, offset: 2168)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "snd_scale", scope: !89, file: !90, line: 386, baseType: !83, size: 8, offset: 2176)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_scale", scope: !89, file: !90, line: 387, baseType: !83, size: 8, offset: 2184)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !89)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32_t", file: !67, line: 130, baseType: !247)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !69, line: 44, baseType: !248)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !71, line: 77, baseType: !40)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !251)
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_hdr", file: !252, line: 80, size: 320, elements: !253)
!252 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/prot/ip6.h", directory: "/root/.unikraft/apps/redis/build")
!253 = !{!254, !255, !256, !257, !258, !263}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "_v_tc_fl", scope: !251, file: !252, line: 82, baseType: !75, size: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "_plen", scope: !251, file: !252, line: 84, baseType: !66, size: 16, offset: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "_nexth", scope: !251, file: !252, line: 86, baseType: !83, size: 8, offset: 48)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "_hoplim", scope: !251, file: !252, line: 88, baseType: !83, size: 8, offset: 56)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !251, file: !252, line: 90, baseType: !259, size: 128, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip6_addr_p_t", file: !252, line: 60, baseType: !260)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_addr_packed", file: !252, line: 53, size: 128, elements: !261)
!261 = !{!262}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !260, file: !252, line: 54, baseType: !105, size: 128)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !251, file: !252, line: 91, baseType: !259, size: 128, offset: 192)
!264 = !{!265, !0, !267, !269, !271, !273, !275, !277, !279, !281, !283, !285, !287, !289, !316, !321}
!265 = !DIGlobalVariableExpression(var: !266, expr: !DIExpression())
!266 = distinct !DIGlobalVariable(name: "inseg", scope: !2, file: !3, line: 74, type: !167, isLocal: true, isDefinition: true)
!267 = !DIGlobalVariableExpression(var: !268, expr: !DIExpression())
!268 = distinct !DIGlobalVariable(name: "tcphdr_optlen", scope: !2, file: !3, line: 76, type: !66, isLocal: true, isDefinition: true)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "tcphdr_opt1len", scope: !2, file: !3, line: 77, type: !66, isLocal: true, isDefinition: true)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "tcphdr_opt2", scope: !2, file: !3, line: 78, type: !87, isLocal: true, isDefinition: true)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "seqno", scope: !2, file: !3, line: 80, type: !75, isLocal: true, isDefinition: true)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "ackno", scope: !2, file: !3, line: 80, type: !75, isLocal: true, isDefinition: true)
!277 = !DIGlobalVariableExpression(var: !278, expr: !DIExpression())
!278 = distinct !DIGlobalVariable(name: "recv_acked", scope: !2, file: !3, line: 81, type: !135, isLocal: true, isDefinition: true)
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "tcplen", scope: !2, file: !3, line: 82, type: !66, isLocal: true, isDefinition: true)
!281 = !DIGlobalVariableExpression(var: !282, expr: !DIExpression())
!282 = distinct !DIGlobalVariable(name: "flags", scope: !2, file: !3, line: 83, type: !83, isLocal: true, isDefinition: true)
!283 = !DIGlobalVariableExpression(var: !284, expr: !DIExpression())
!284 = distinct !DIGlobalVariable(name: "recv_flags", scope: !2, file: !3, line: 85, type: !83, isLocal: true, isDefinition: true)
!285 = !DIGlobalVariableExpression(var: !286, expr: !DIExpression())
!286 = distinct !DIGlobalVariable(name: "recv_data", scope: !2, file: !3, line: 86, type: !172, isLocal: true, isDefinition: true)
!287 = !DIGlobalVariableExpression(var: !288, expr: !DIExpression())
!288 = distinct !DIGlobalVariable(name: "tcp_input_pcb", scope: !2, file: !3, line: 88, type: !88, isLocal: false, isDefinition: true)
!289 = !DIGlobalVariableExpression(var: !290, expr: !DIExpression())
!290 = distinct !DIGlobalVariable(name: "__str", scope: !291, file: !292, line: 198, type: !313, isLocal: true, isDefinition: true)
!291 = distinct !DISubprogram(name: "uk_pr_crit", scope: !292, file: !292, line: 194, type: !293, isLocal: true, isDefinition: true, scopeLine: 195, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !298)
!292 = !DIFile(filename: "/root/.unikraft/unikraft/lib/ukdebug/include/uk/print.h", directory: "/root/.unikraft/apps/redis/build")
!293 = !DISubroutineType(types: !294)
!294 = !{null, !295, null}
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !297)
!297 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!298 = !{!299, !300}
!299 = !DILocalVariable(name: "fmt", arg: 1, scope: !291, file: !292, line: 194, type: !295)
!300 = !DILocalVariable(name: "argp", scope: !291, file: !292, line: 196, type: !301)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !302, line: 32, baseType: !303)
!302 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stdarg.h", directory: "/root/.unikraft/apps/redis/build")
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 196, baseType: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !305, size: 192, elements: !311)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 196, size: 192, elements: !306)
!306 = !{!307, !308, !309, !310}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !305, file: !3, line: 196, baseType: !7, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !305, file: !3, line: 196, baseType: !7, size: 32, offset: 32)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !305, file: !3, line: 196, baseType: !60, size: 64, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !305, file: !3, line: 196, baseType: !60, size: 64, offset: 128)
!311 = !{!312}
!312 = !DISubrange(count: 1)
!313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 64, elements: !314)
!314 = !{!315}
!315 = !DISubrange(count: 8)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "__str", scope: !291, file: !292, line: 198, type: !318, isLocal: true, isDefinition: true)
!318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 72, elements: !319)
!319 = !{!320}
!320 = !DISubrange(count: 9)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "tcp_optidx", scope: !2, file: !3, line: 79, type: !66, isLocal: true, isDefinition: true)
!323 = !{i32 2, !"Dwarf Version", i32 4}
!324 = !{i32 2, !"Debug Info Version", i32 3}
!325 = !{i32 1, !"wchar_size", i32 4}
!326 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!327 = distinct !DISubprogram(name: "tcp_input", scope: !3, file: !3, line: 118, type: !328, isLocal: false, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !400)
!328 = !DISubroutineType(types: !329)
!329 = !{null, !172, !330}
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netif", file: !6, line: 260, size: 2240, elements: !332)
!332 = !{!333, !334, !335, !336, !337, !341, !343, !345, !346, !351, !358, !363, !370, !375, !376, !377, !379, !380, !381, !382, !386, !387, !388, !392, !393, !394, !395}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !331, file: !6, line: 263, baseType: !330, size: 64)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr", scope: !331, file: !6, line: 268, baseType: !93, size: 192, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "netmask", scope: !331, file: !6, line: 269, baseType: !93, size: 192, offset: 256)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "gw", scope: !331, file: !6, line: 270, baseType: !93, size: 192, offset: 448)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr", scope: !331, file: !6, line: 274, baseType: !338, size: 576, offset: 640)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 576, elements: !339)
!339 = !{!340}
!340 = !DISubrange(count: 3)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr_state", scope: !331, file: !6, line: 277, baseType: !342, size: 24, offset: 1216)
!342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !83, size: 24, elements: !339)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr_valid_life", scope: !331, file: !6, line: 282, baseType: !344, size: 96, offset: 1248)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 96, elements: !339)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr_pref_life", scope: !331, file: !6, line: 283, baseType: !344, size: 96, offset: 1344)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !331, file: !6, line: 288, baseType: !347, size: 64, offset: 1472)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_input_fn", file: !6, line: 178, baseType: !348)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!210, !172, !330}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !331, file: !6, line: 294, baseType: !352, size: 64, offset: 1536)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_output_fn", file: !6, line: 189, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DISubroutineType(types: !355)
!355 = !{!210, !330, !172, !356}
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "linkoutput", scope: !331, file: !6, line: 299, baseType: !359, size: 64, offset: 1600)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_linkoutput_fn", file: !6, line: 212, baseType: !360)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{!210, !330, !172}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "output_ip6", scope: !331, file: !6, line: 305, baseType: !364, size: 64, offset: 1664)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_output_ip6_fn", file: !6, line: 202, baseType: !365)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DISubroutineType(types: !367)
!367 = !{!210, !330, !172, !368}
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !100)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "status_callback", scope: !331, file: !6, line: 310, baseType: !371, size: 64, offset: 1728)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_status_callback_fn", file: !6, line: 214, baseType: !372)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = !DISubroutineType(types: !374)
!374 = !{null, !330}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "remove_callback", scope: !331, file: !6, line: 319, baseType: !371, size: 64, offset: 1792)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !331, file: !6, line: 323, baseType: !60, size: 64, offset: 1856)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !331, file: !6, line: 325, baseType: !378, size: 64, offset: 1920)
!378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 64, elements: !311)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "chksum_flags", scope: !331, file: !6, line: 332, baseType: !66, size: 16, offset: 1984)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !331, file: !6, line: 335, baseType: !66, size: 16, offset: 2000)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !331, file: !6, line: 338, baseType: !66, size: 16, offset: 2016)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "hwaddr", scope: !331, file: !6, line: 341, baseType: !383, size: 48, offset: 2032)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !83, size: 48, elements: !384)
!384 = !{!385}
!385 = !DISubrange(count: 6)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "hwaddr_len", scope: !331, file: !6, line: 343, baseType: !83, size: 8, offset: 2080)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !331, file: !6, line: 345, baseType: !83, size: 8, offset: 2088)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !331, file: !6, line: 347, baseType: !389, size: 16, offset: 2096)
!389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 16, elements: !390)
!390 = !{!391}
!391 = !DISubrange(count: 2)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !331, file: !6, line: 350, baseType: !83, size: 8, offset: 2112)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_autoconfig_enabled", scope: !331, file: !6, line: 353, baseType: !83, size: 8, offset: 2120)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "rs_count", scope: !331, file: !6, line: 357, baseType: !83, size: 8, offset: 2128)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mld_mac_filter", scope: !331, file: !6, line: 377, baseType: !396, size: 64, offset: 2176)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_mld_mac_filter_fn", file: !6, line: 222, baseType: !397)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DISubroutineType(types: !399)
!399 = !{!210, !330, !368, !5}
!400 = !{!401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !413, !416, !425, !426}
!401 = !DILocalVariable(name: "p", arg: 1, scope: !327, file: !3, line: 118, type: !172)
!402 = !DILocalVariable(name: "inp", arg: 2, scope: !327, file: !3, line: 118, type: !330)
!403 = !DILocalVariable(name: "pcb", scope: !327, file: !3, line: 120, type: !88)
!404 = !DILocalVariable(name: "prev", scope: !327, file: !3, line: 120, type: !88)
!405 = !DILocalVariable(name: "lpcb", scope: !327, file: !3, line: 121, type: !191)
!406 = !DILocalVariable(name: "lpcb_prev", scope: !327, file: !3, line: 123, type: !88)
!407 = !DILocalVariable(name: "lpcb_any", scope: !327, file: !3, line: 124, type: !191)
!408 = !DILocalVariable(name: "hdrlen_bytes", scope: !327, file: !3, line: 126, type: !83)
!409 = !DILocalVariable(name: "err", scope: !327, file: !3, line: 127, type: !210)
!410 = !DILocalVariable(name: "chksum", scope: !411, file: !3, line: 162, type: !66)
!411 = distinct !DILexicalBlock(scope: !412, file: !3, line: 160, column: 61)
!412 = distinct !DILexicalBlock(scope: !327, file: !3, line: 160, column: 3)
!413 = !DILocalVariable(name: "opt2len", scope: !414, file: !3, line: 191, type: !66)
!414 = distinct !DILexicalBlock(scope: !415, file: !3, line: 190, column: 10)
!415 = distinct !DILexicalBlock(scope: !327, file: !3, line: 186, column: 7)
!416 = !DILocalVariable(name: "acked16", scope: !417, file: !3, line: 456, type: !66)
!417 = distinct !DILexicalBlock(scope: !418, file: !3, line: 455, column: 29)
!418 = distinct !DILexicalBlock(scope: !419, file: !3, line: 455, column: 13)
!419 = distinct !DILexicalBlock(scope: !420, file: !3, line: 450, column: 14)
!420 = distinct !DILexicalBlock(scope: !421, file: !3, line: 442, column: 11)
!421 = distinct !DILexicalBlock(scope: !422, file: !3, line: 441, column: 26)
!422 = distinct !DILexicalBlock(scope: !423, file: !3, line: 441, column: 9)
!423 = distinct !DILexicalBlock(scope: !424, file: !3, line: 401, column: 20)
!424 = distinct !DILexicalBlock(scope: !327, file: !3, line: 401, column: 7)
!425 = !DILocalVariable(name: "acked", scope: !417, file: !3, line: 460, type: !75)
!426 = !DILocalVariable(name: "rest", scope: !427, file: !3, line: 480, type: !172)
!427 = distinct !DILexicalBlock(scope: !419, file: !3, line: 479, column: 35)
!428 = !DILocation(line: 118, column: 24, scope: !327)
!429 = !DILocation(line: 118, column: 41, scope: !327)
!430 = !DILocation(line: 123, column: 19, scope: !327)
!431 = !DILocation(line: 124, column: 26, scope: !327)
!432 = !DILocation(line: 131, column: 3, scope: !433)
!433 = distinct !DILexicalBlock(scope: !434, file: !3, line: 131, column: 3)
!434 = distinct !DILexicalBlock(scope: !327, file: !3, line: 131, column: 3)
!435 = !DILocation(line: 131, column: 3, scope: !434)
!436 = !DILocation(line: 131, column: 3, scope: !437)
!437 = distinct !DILexicalBlock(scope: !438, file: !3, line: 131, column: 3)
!438 = distinct !DILexicalBlock(scope: !433, file: !3, line: 131, column: 3)
!439 = !DILocation(line: 131, column: 3, scope: !440)
!440 = distinct !DILexicalBlock(scope: !441, file: !3, line: 131, column: 3)
!441 = distinct !DILexicalBlock(scope: !442, file: !3, line: 131, column: 3)
!442 = distinct !DILexicalBlock(scope: !437, file: !3, line: 131, column: 3)
!443 = !DILocation(line: 135, column: 3, scope: !327)
!444 = !{!445, !447, i64 146}
!445 = !{!"stats_", !446, i64 0, !446, i64 24, !446, i64 48, !446, i64 72, !446, i64 96, !446, i64 120, !446, i64 144, !450, i64 168, !446, i64 186, !446, i64 210, !446, i64 234, !452, i64 258, !446, i64 286}
!446 = !{!"stats_proto", !447, i64 0, !447, i64 2, !447, i64 4, !447, i64 6, !447, i64 8, !447, i64 10, !447, i64 12, !447, i64 14, !447, i64 16, !447, i64 18, !447, i64 20, !447, i64 22}
!447 = !{!"short", !448, i64 0}
!448 = !{!"omnipotent char", !449, i64 0}
!449 = !{!"Simple C/C++ TBAA"}
!450 = !{!"stats_sys", !451, i64 0, !451, i64 6, !451, i64 12}
!451 = !{!"stats_syselem", !447, i64 0, !447, i64 2, !447, i64 4}
!452 = !{!"stats_igmp", !447, i64 0, !447, i64 2, !447, i64 4, !447, i64 6, !447, i64 8, !447, i64 10, !447, i64 12, !447, i64 14, !447, i64 16, !447, i64 18, !447, i64 20, !447, i64 22, !447, i64 24, !447, i64 26}
!453 = !DILocation(line: 138, column: 33, scope: !327)
!454 = !{!455, !456, i64 8}
!455 = !{!"pbuf", !456, i64 0, !456, i64 8, !447, i64 16, !447, i64 18, !448, i64 20, !448, i64 21, !448, i64 22, !448, i64 23}
!456 = !{!"any pointer", !448, i64 0}
!457 = !DILocation(line: 138, column: 10, scope: !327)
!458 = !{!456, !456, i64 0}
!459 = !DILocation(line: 145, column: 10, scope: !460)
!460 = distinct !DILexicalBlock(scope: !327, file: !3, line: 145, column: 7)
!461 = !{!455, !447, i64 18}
!462 = !DILocation(line: 145, column: 14, scope: !460)
!463 = !DILocation(line: 145, column: 7, scope: !327)
!464 = !DILocation(line: 153, column: 7, scope: !465)
!465 = distinct !DILexicalBlock(scope: !327, file: !3, line: 153, column: 7)
!466 = !{!467, !448, i64 80}
!467 = !{!"ip_globals", !456, i64 0, !456, i64 8, !456, i64 16, !456, i64 24, !447, i64 32, !468, i64 36, !468, i64 60}
!468 = !{!"ip_addr", !448, i64 0, !448, i64 20}
!469 = !DILocation(line: 0, scope: !465)
!470 = !{!448, !448, i64 0}
!471 = !DILocation(line: 153, column: 71, scope: !465)
!472 = !{!467, !456, i64 0}
!473 = !DILocation(line: 154, column: 7, scope: !465)
!474 = !DILocation(line: 153, column: 7, scope: !327)
!475 = !DILocation(line: 160, column: 3, scope: !412)
!476 = !{!477, !447, i64 248}
!477 = !{!"netif", !456, i64 0, !468, i64 8, !468, i64 32, !468, i64 56, !448, i64 80, !448, i64 152, !448, i64 156, !448, i64 168, !456, i64 184, !456, i64 192, !456, i64 200, !456, i64 208, !456, i64 216, !456, i64 224, !456, i64 232, !448, i64 240, !447, i64 248, !447, i64 250, !447, i64 252, !448, i64 254, !448, i64 260, !448, i64 261, !448, i64 262, !448, i64 264, !448, i64 265, !448, i64 266, !456, i64 272}
!478 = !DILocation(line: 160, column: 3, scope: !327)
!479 = !DILocation(line: 162, column: 57, scope: !411)
!480 = !{!455, !447, i64 16}
!481 = !DILocation(line: 162, column: 20, scope: !411)
!482 = !DILocation(line: 162, column: 11, scope: !411)
!483 = !DILocation(line: 164, column: 16, scope: !484)
!484 = distinct !DILexicalBlock(scope: !411, file: !3, line: 164, column: 9)
!485 = !DILocation(line: 164, column: 9, scope: !411)
!486 = !DILocation(line: 175, column: 18, scope: !327)
!487 = !{!488, !447, i64 12}
!488 = !{!"tcp_hdr", !447, i64 0, !447, i64 2, !489, i64 4, !489, i64 8, !447, i64 12, !447, i64 14, !447, i64 16, !447, i64 18}
!489 = !{!"int", !448, i64 0}
!490 = !DILocation(line: 176, column: 21, scope: !491)
!491 = distinct !DILexicalBlock(scope: !327, file: !3, line: 176, column: 7)
!492 = !DILocation(line: 176, column: 33, scope: !491)
!493 = !DILocation(line: 176, column: 55, scope: !491)
!494 = !DILocation(line: 176, column: 50, scope: !491)
!495 = !DILocation(line: 176, column: 7, scope: !327)
!496 = !DILocation(line: 184, column: 40, scope: !327)
!497 = !DILocation(line: 184, column: 17, scope: !327)
!498 = !{!447, !447, i64 0}
!499 = !DILocation(line: 185, column: 15, scope: !327)
!500 = !DILocation(line: 186, column: 10, scope: !415)
!501 = !DILocation(line: 186, column: 14, scope: !415)
!502 = !DILocation(line: 186, column: 7, scope: !327)
!503 = !DILocation(line: 188, column: 20, scope: !504)
!504 = distinct !DILexicalBlock(scope: !415, file: !3, line: 186, column: 31)
!505 = !DILocation(line: 189, column: 5, scope: !504)
!506 = !DILocation(line: 190, column: 3, scope: !504)
!507 = !DILocation(line: 194, column: 5, scope: !508)
!508 = distinct !DILexicalBlock(scope: !509, file: !3, line: 194, column: 5)
!509 = distinct !DILexicalBlock(scope: !414, file: !3, line: 194, column: 5)
!510 = !{!455, !456, i64 0}
!511 = !DILocation(line: 194, column: 5, scope: !509)
!512 = !DILocation(line: 194, column: 5, scope: !513)
!513 = distinct !DILexicalBlock(scope: !514, file: !3, line: 194, column: 5)
!514 = distinct !DILexicalBlock(scope: !508, file: !3, line: 194, column: 5)
!515 = !DILocation(line: 194, column: 5, scope: !516)
!516 = distinct !DILexicalBlock(scope: !517, file: !3, line: 194, column: 5)
!517 = distinct !DILexicalBlock(scope: !518, file: !3, line: 194, column: 5)
!518 = distinct !DILexicalBlock(scope: !513, file: !3, line: 194, column: 5)
!519 = !DILocation(line: 197, column: 5, scope: !414)
!520 = !DILocation(line: 200, column: 25, scope: !414)
!521 = !DILocation(line: 200, column: 20, scope: !414)
!522 = !DILocation(line: 201, column: 23, scope: !414)
!523 = !DILocation(line: 201, column: 37, scope: !414)
!524 = !DILocation(line: 191, column: 11, scope: !414)
!525 = !DILocation(line: 205, column: 27, scope: !414)
!526 = !DILocation(line: 205, column: 5, scope: !414)
!527 = !DILocation(line: 208, column: 22, scope: !528)
!528 = distinct !DILexicalBlock(scope: !414, file: !3, line: 208, column: 9)
!529 = !DILocation(line: 208, column: 28, scope: !528)
!530 = !DILocation(line: 208, column: 17, scope: !528)
!531 = !DILocation(line: 208, column: 9, scope: !414)
!532 = !DILocation(line: 216, column: 36, scope: !414)
!533 = !DILocation(line: 216, column: 17, scope: !414)
!534 = !DILocation(line: 220, column: 33, scope: !414)
!535 = !DILocation(line: 220, column: 5, scope: !414)
!536 = !DILocation(line: 221, column: 29, scope: !414)
!537 = !DILocation(line: 221, column: 37, scope: !414)
!538 = !DILocation(line: 221, column: 16, scope: !414)
!539 = !DILocation(line: 223, column: 5, scope: !540)
!540 = distinct !DILexicalBlock(scope: !541, file: !3, line: 223, column: 5)
!541 = distinct !DILexicalBlock(scope: !414, file: !3, line: 223, column: 5)
!542 = !DILocation(line: 223, column: 5, scope: !541)
!543 = !DILocation(line: 223, column: 5, scope: !544)
!544 = distinct !DILexicalBlock(scope: !545, file: !3, line: 223, column: 5)
!545 = distinct !DILexicalBlock(scope: !540, file: !3, line: 223, column: 5)
!546 = !DILocation(line: 223, column: 5, scope: !547)
!547 = distinct !DILexicalBlock(scope: !548, file: !3, line: 223, column: 5)
!548 = distinct !DILexicalBlock(scope: !549, file: !3, line: 223, column: 5)
!549 = distinct !DILexicalBlock(scope: !544, file: !3, line: 223, column: 5)
!550 = !DILocation(line: 224, column: 5, scope: !551)
!551 = distinct !DILexicalBlock(scope: !552, file: !3, line: 224, column: 5)
!552 = distinct !DILexicalBlock(scope: !414, file: !3, line: 224, column: 5)
!553 = !DILocation(line: 224, column: 5, scope: !552)
!554 = !DILocation(line: 224, column: 5, scope: !555)
!555 = distinct !DILexicalBlock(scope: !556, file: !3, line: 224, column: 5)
!556 = distinct !DILexicalBlock(scope: !551, file: !3, line: 224, column: 5)
!557 = !DILocation(line: 224, column: 5, scope: !558)
!558 = distinct !DILexicalBlock(scope: !559, file: !3, line: 224, column: 5)
!559 = distinct !DILexicalBlock(scope: !560, file: !3, line: 224, column: 5)
!560 = distinct !DILexicalBlock(scope: !555, file: !3, line: 224, column: 5)
!561 = !DILocation(line: 228, column: 17, scope: !327)
!562 = !{!488, !447, i64 0}
!563 = !DILocation(line: 228, column: 3, scope: !327)
!564 = !DILocation(line: 228, column: 11, scope: !327)
!565 = !DILocation(line: 228, column: 15, scope: !327)
!566 = !DILocation(line: 229, column: 18, scope: !327)
!567 = !{!488, !447, i64 2}
!568 = !DILocation(line: 229, column: 3, scope: !327)
!569 = !DILocation(line: 229, column: 11, scope: !327)
!570 = !DILocation(line: 229, column: 16, scope: !327)
!571 = !DILocation(line: 230, column: 27, scope: !327)
!572 = !{!488, !489, i64 4}
!573 = !DILocation(line: 230, column: 11, scope: !327)
!574 = !DILocation(line: 230, column: 19, scope: !327)
!575 = !DILocation(line: 230, column: 25, scope: !327)
!576 = !DILocation(line: 230, column: 9, scope: !327)
!577 = !{!489, !489, i64 0}
!578 = !DILocation(line: 231, column: 27, scope: !327)
!579 = !{!488, !489, i64 8}
!580 = !DILocation(line: 231, column: 11, scope: !327)
!581 = !DILocation(line: 231, column: 19, scope: !327)
!582 = !DILocation(line: 231, column: 25, scope: !327)
!583 = !DILocation(line: 231, column: 9, scope: !327)
!584 = !DILocation(line: 232, column: 17, scope: !327)
!585 = !{!488, !447, i64 14}
!586 = !DILocation(line: 232, column: 3, scope: !327)
!587 = !DILocation(line: 232, column: 11, scope: !327)
!588 = !DILocation(line: 232, column: 15, scope: !327)
!589 = !DILocation(line: 234, column: 11, scope: !327)
!590 = !DILocation(line: 234, column: 9, scope: !327)
!591 = !DILocation(line: 235, column: 15, scope: !327)
!592 = !DILocation(line: 235, column: 10, scope: !327)
!593 = !DILocation(line: 236, column: 13, scope: !594)
!594 = distinct !DILexicalBlock(scope: !327, file: !3, line: 236, column: 7)
!595 = !DILocation(line: 236, column: 7, scope: !327)
!596 = !DILocation(line: 237, column: 11, scope: !597)
!597 = distinct !DILexicalBlock(scope: !594, file: !3, line: 236, column: 36)
!598 = !DILocation(line: 238, column: 16, scope: !599)
!599 = distinct !DILexicalBlock(scope: !597, file: !3, line: 238, column: 9)
!600 = !DILocation(line: 238, column: 9, scope: !597)
!601 = !DILocation(line: 120, column: 25, scope: !327)
!602 = !DILocation(line: 120, column: 19, scope: !327)
!603 = !DILocation(line: 0, scope: !604)
!604 = distinct !DILexicalBlock(scope: !605, file: !3, line: 250, column: 3)
!605 = distinct !DILexicalBlock(scope: !327, file: !3, line: 250, column: 3)
!606 = !DILocation(line: 250, column: 3, scope: !605)
!607 = !DILocation(line: 0, scope: !608)
!608 = distinct !DILexicalBlock(scope: !609, file: !3, line: 286, column: 5)
!609 = distinct !DILexicalBlock(scope: !610, file: !3, line: 286, column: 5)
!610 = distinct !DILexicalBlock(scope: !611, file: !3, line: 283, column: 20)
!611 = distinct !DILexicalBlock(scope: !327, file: !3, line: 283, column: 7)
!612 = !DILocation(line: 286, column: 33, scope: !608)
!613 = !DILocation(line: 286, column: 5, scope: !609)
!614 = !DILocation(line: 251, column: 5, scope: !615)
!615 = distinct !DILexicalBlock(scope: !616, file: !3, line: 251, column: 5)
!616 = distinct !DILexicalBlock(scope: !617, file: !3, line: 251, column: 5)
!617 = distinct !DILexicalBlock(scope: !604, file: !3, line: 250, column: 61)
!618 = !{!619, !448, i64 72}
!619 = !{!"tcp_pcb", !468, i64 0, !468, i64 24, !448, i64 48, !448, i64 49, !448, i64 50, !448, i64 51, !456, i64 56, !456, i64 64, !448, i64 72, !448, i64 76, !447, i64 78, !447, i64 80, !447, i64 82, !448, i64 84, !448, i64 85, !448, i64 86, !489, i64 88, !489, i64 92, !489, i64 96, !489, i64 100, !489, i64 104, !447, i64 108, !447, i64 110, !489, i64 112, !489, i64 116, !447, i64 120, !447, i64 122, !447, i64 124, !448, i64 126, !448, i64 127, !489, i64 128, !489, i64 132, !489, i64 136, !489, i64 140, !489, i64 144, !489, i64 148, !489, i64 152, !489, i64 156, !489, i64 160, !489, i64 164, !489, i64 168, !447, i64 172, !447, i64 174, !489, i64 176, !456, i64 184, !456, i64 192, !456, i64 200, !456, i64 208, !456, i64 216, !456, i64 224, !456, i64 232, !456, i64 240, !456, i64 248, !456, i64 256, !489, i64 264, !448, i64 268, !448, i64 269, !448, i64 270, !448, i64 271, !448, i64 272, !448, i64 273}
!620 = !DILocation(line: 251, column: 5, scope: !616)
!621 = !DILocation(line: 251, column: 5, scope: !622)
!622 = distinct !DILexicalBlock(scope: !623, file: !3, line: 251, column: 5)
!623 = distinct !DILexicalBlock(scope: !615, file: !3, line: 251, column: 5)
!624 = !DILocation(line: 251, column: 5, scope: !625)
!625 = distinct !DILexicalBlock(scope: !626, file: !3, line: 251, column: 5)
!626 = distinct !DILexicalBlock(scope: !627, file: !3, line: 251, column: 5)
!627 = distinct !DILexicalBlock(scope: !622, file: !3, line: 251, column: 5)
!628 = !DILocation(line: 252, column: 5, scope: !629)
!629 = distinct !DILexicalBlock(scope: !630, file: !3, line: 252, column: 5)
!630 = distinct !DILexicalBlock(scope: !631, file: !3, line: 252, column: 5)
!631 = distinct !DILexicalBlock(scope: !632, file: !3, line: 252, column: 5)
!632 = distinct !DILexicalBlock(scope: !617, file: !3, line: 252, column: 5)
!633 = !DILocation(line: 252, column: 5, scope: !634)
!634 = distinct !DILexicalBlock(scope: !635, file: !3, line: 252, column: 5)
!635 = distinct !DILexicalBlock(scope: !636, file: !3, line: 252, column: 5)
!636 = distinct !DILexicalBlock(scope: !629, file: !3, line: 252, column: 5)
!637 = !DILocation(line: 253, column: 5, scope: !638)
!638 = distinct !DILexicalBlock(scope: !639, file: !3, line: 253, column: 5)
!639 = distinct !DILexicalBlock(scope: !640, file: !3, line: 253, column: 5)
!640 = distinct !DILexicalBlock(scope: !641, file: !3, line: 253, column: 5)
!641 = distinct !DILexicalBlock(scope: !617, file: !3, line: 253, column: 5)
!642 = !DILocation(line: 253, column: 5, scope: !643)
!643 = distinct !DILexicalBlock(scope: !644, file: !3, line: 253, column: 5)
!644 = distinct !DILexicalBlock(scope: !645, file: !3, line: 253, column: 5)
!645 = distinct !DILexicalBlock(scope: !638, file: !3, line: 253, column: 5)
!646 = !DILocation(line: 256, column: 15, scope: !647)
!647 = distinct !DILexicalBlock(scope: !617, file: !3, line: 256, column: 9)
!648 = !{!619, !448, i64 48}
!649 = !DILocation(line: 256, column: 25, scope: !647)
!650 = !DILocation(line: 256, column: 44, scope: !647)
!651 = !DILocation(line: 257, column: 28, scope: !647)
!652 = !{!477, !448, i64 264}
!653 = !DILocation(line: 257, column: 25, scope: !647)
!654 = !DILocation(line: 256, column: 9, scope: !617)
!655 = !DILocation(line: 262, column: 14, scope: !656)
!656 = distinct !DILexicalBlock(scope: !617, file: !3, line: 262, column: 9)
!657 = !{!619, !447, i64 80}
!658 = !DILocation(line: 262, column: 37, scope: !656)
!659 = !DILocation(line: 262, column: 26, scope: !656)
!660 = !DILocation(line: 262, column: 41, scope: !656)
!661 = !DILocation(line: 263, column: 14, scope: !656)
!662 = !{!619, !447, i64 78}
!663 = !DILocation(line: 263, column: 36, scope: !656)
!664 = !DILocation(line: 263, column: 25, scope: !656)
!665 = !DILocation(line: 263, column: 41, scope: !656)
!666 = !DILocation(line: 264, column: 9, scope: !656)
!667 = !{!619, !448, i64 44}
!668 = !DILocation(line: 264, column: 61, scope: !656)
!669 = !DILocation(line: 265, column: 9, scope: !656)
!670 = !{!619, !448, i64 20}
!671 = !DILocation(line: 262, column: 9, scope: !617)
!672 = !DILocation(line: 269, column: 7, scope: !673)
!673 = distinct !DILexicalBlock(scope: !674, file: !3, line: 269, column: 7)
!674 = distinct !DILexicalBlock(scope: !675, file: !3, line: 269, column: 7)
!675 = distinct !DILexicalBlock(scope: !656, file: !3, line: 265, column: 62)
!676 = !{!619, !456, i64 56}
!677 = !DILocation(line: 269, column: 7, scope: !674)
!678 = !DILocation(line: 269, column: 7, scope: !679)
!679 = distinct !DILexicalBlock(scope: !680, file: !3, line: 269, column: 7)
!680 = distinct !DILexicalBlock(scope: !673, file: !3, line: 269, column: 7)
!681 = !DILocation(line: 269, column: 7, scope: !682)
!682 = distinct !DILexicalBlock(scope: !683, file: !3, line: 269, column: 7)
!683 = distinct !DILexicalBlock(scope: !684, file: !3, line: 269, column: 7)
!684 = distinct !DILexicalBlock(scope: !679, file: !3, line: 269, column: 7)
!685 = !DILocation(line: 270, column: 16, scope: !686)
!686 = distinct !DILexicalBlock(scope: !675, file: !3, line: 270, column: 11)
!687 = !DILocation(line: 270, column: 11, scope: !675)
!688 = !DILocation(line: 271, column: 15, scope: !689)
!689 = distinct !DILexicalBlock(scope: !686, file: !3, line: 270, column: 25)
!690 = !DILocation(line: 271, column: 20, scope: !689)
!691 = !DILocation(line: 272, column: 19, scope: !689)
!692 = !DILocation(line: 273, column: 25, scope: !689)
!693 = !DILocation(line: 274, column: 7, scope: !689)
!694 = !DILocation(line: 275, column: 9, scope: !695)
!695 = distinct !DILexicalBlock(scope: !686, file: !3, line: 274, column: 14)
!696 = !{!445, !447, i64 166}
!697 = !DILocation(line: 277, column: 7, scope: !698)
!698 = distinct !DILexicalBlock(scope: !699, file: !3, line: 277, column: 7)
!699 = distinct !DILexicalBlock(scope: !675, file: !3, line: 277, column: 7)
!700 = !DILocation(line: 277, column: 7, scope: !699)
!701 = !DILocation(line: 277, column: 7, scope: !702)
!702 = distinct !DILexicalBlock(scope: !703, file: !3, line: 277, column: 7)
!703 = distinct !DILexicalBlock(scope: !698, file: !3, line: 277, column: 7)
!704 = !DILocation(line: 277, column: 7, scope: !705)
!705 = distinct !DILexicalBlock(scope: !706, file: !3, line: 277, column: 7)
!706 = distinct !DILexicalBlock(scope: !707, file: !3, line: 277, column: 7)
!707 = distinct !DILexicalBlock(scope: !702, file: !3, line: 277, column: 7)
!708 = !DILocation(line: 250, column: 55, scope: !604)
!709 = distinct !{!709, !606, !710}
!710 = !DILocation(line: 281, column: 3, scope: !605)
!711 = !DILocation(line: 0, scope: !712)
!712 = distinct !DILexicalBlock(scope: !713, file: !3, line: 318, column: 5)
!713 = distinct !DILexicalBlock(scope: !610, file: !3, line: 318, column: 5)
!714 = !DILocation(line: 121, column: 26, scope: !327)
!715 = !DILocation(line: 318, column: 5, scope: !713)
!716 = !DILocation(line: 287, column: 7, scope: !717)
!717 = distinct !DILexicalBlock(scope: !718, file: !3, line: 287, column: 7)
!718 = distinct !DILexicalBlock(scope: !719, file: !3, line: 287, column: 7)
!719 = distinct !DILexicalBlock(scope: !608, file: !3, line: 286, column: 59)
!720 = !DILocation(line: 287, column: 7, scope: !718)
!721 = !DILocation(line: 287, column: 7, scope: !722)
!722 = distinct !DILexicalBlock(scope: !723, file: !3, line: 287, column: 7)
!723 = distinct !DILexicalBlock(scope: !717, file: !3, line: 287, column: 7)
!724 = !DILocation(line: 287, column: 7, scope: !725)
!725 = distinct !DILexicalBlock(scope: !726, file: !3, line: 287, column: 7)
!726 = distinct !DILexicalBlock(scope: !727, file: !3, line: 287, column: 7)
!727 = distinct !DILexicalBlock(scope: !722, file: !3, line: 287, column: 7)
!728 = !DILocation(line: 290, column: 17, scope: !729)
!729 = distinct !DILexicalBlock(scope: !719, file: !3, line: 290, column: 11)
!730 = !DILocation(line: 290, column: 27, scope: !729)
!731 = !DILocation(line: 290, column: 46, scope: !729)
!732 = !DILocation(line: 291, column: 30, scope: !729)
!733 = !DILocation(line: 291, column: 27, scope: !729)
!734 = !DILocation(line: 290, column: 11, scope: !719)
!735 = !DILocation(line: 295, column: 16, scope: !736)
!736 = distinct !DILexicalBlock(scope: !719, file: !3, line: 295, column: 11)
!737 = !DILocation(line: 295, column: 39, scope: !736)
!738 = !DILocation(line: 295, column: 28, scope: !736)
!739 = !DILocation(line: 295, column: 43, scope: !736)
!740 = !DILocation(line: 296, column: 16, scope: !736)
!741 = !DILocation(line: 296, column: 38, scope: !736)
!742 = !DILocation(line: 296, column: 27, scope: !736)
!743 = !DILocation(line: 296, column: 43, scope: !736)
!744 = !DILocation(line: 297, column: 11, scope: !736)
!745 = !DILocation(line: 297, column: 63, scope: !736)
!746 = !DILocation(line: 298, column: 11, scope: !736)
!747 = !DILocation(line: 295, column: 11, scope: !719)
!748 = !DILocalVariable(name: "pcb", arg: 1, scope: !749, file: !3, line: 739, type: !88)
!749 = distinct !DISubprogram(name: "tcp_timewait_input", scope: !3, file: !3, line: 739, type: !750, isLocal: true, isDefinition: true, scopeLine: 740, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !752)
!750 = !DISubroutineType(types: !751)
!751 = !{null, !88}
!752 = !{!748}
!753 = !DILocation(line: 739, column: 36, scope: !749, inlinedAt: !754)
!754 = distinct !DILocation(line: 308, column: 11, scope: !755)
!755 = distinct !DILexicalBlock(scope: !756, file: !3, line: 307, column: 9)
!756 = distinct !DILexicalBlock(scope: !736, file: !3, line: 298, column: 64)
!757 = !DILocation(line: 746, column: 7, scope: !758, inlinedAt: !754)
!758 = distinct !DILexicalBlock(scope: !749, file: !3, line: 746, column: 7)
!759 = !DILocation(line: 746, column: 13, scope: !758, inlinedAt: !754)
!760 = !DILocation(line: 746, column: 7, scope: !749, inlinedAt: !754)
!761 = !DILocation(line: 753, column: 13, scope: !762, inlinedAt: !754)
!762 = distinct !DILexicalBlock(scope: !749, file: !3, line: 753, column: 7)
!763 = !DILocation(line: 753, column: 7, scope: !749, inlinedAt: !754)
!764 = !DILocation(line: 756, column: 9, scope: !765, inlinedAt: !754)
!765 = distinct !DILexicalBlock(scope: !766, file: !3, line: 756, column: 9)
!766 = distinct !DILexicalBlock(scope: !762, file: !3, line: 753, column: 24)
!767 = !{!619, !489, i64 92}
!768 = !{!619, !489, i64 96}
!769 = !DILocation(line: 756, column: 9, scope: !766, inlinedAt: !754)
!770 = !DILocation(line: 758, column: 20, scope: !771, inlinedAt: !754)
!771 = distinct !DILexicalBlock(scope: !765, file: !3, line: 756, column: 76)
!772 = !DILocation(line: 758, column: 35, scope: !771, inlinedAt: !754)
!773 = !DILocation(line: 758, column: 33, scope: !771, inlinedAt: !754)
!774 = !DILocation(line: 758, column: 7, scope: !771, inlinedAt: !754)
!775 = !DILocation(line: 760, column: 7, scope: !771, inlinedAt: !754)
!776 = !DILocation(line: 762, column: 20, scope: !777, inlinedAt: !754)
!777 = distinct !DILexicalBlock(scope: !762, file: !3, line: 762, column: 14)
!778 = !DILocation(line: 762, column: 14, scope: !762, inlinedAt: !754)
!779 = !DILocation(line: 765, column: 16, scope: !780, inlinedAt: !754)
!780 = distinct !DILexicalBlock(scope: !777, file: !3, line: 762, column: 31)
!781 = !DILocation(line: 765, column: 10, scope: !780, inlinedAt: !754)
!782 = !DILocation(line: 765, column: 14, scope: !780, inlinedAt: !754)
!783 = !{!619, !489, i64 88}
!784 = !DILocation(line: 766, column: 3, scope: !780, inlinedAt: !754)
!785 = !DILocation(line: 768, column: 15, scope: !786, inlinedAt: !754)
!786 = distinct !DILexicalBlock(scope: !749, file: !3, line: 768, column: 7)
!787 = !DILocation(line: 768, column: 7, scope: !749, inlinedAt: !754)
!788 = !DILocation(line: 770, column: 5, scope: !789, inlinedAt: !754)
!789 = distinct !DILexicalBlock(scope: !790, file: !3, line: 770, column: 5)
!790 = distinct !DILexicalBlock(scope: !786, file: !3, line: 768, column: 21)
!791 = !{!619, !447, i64 82}
!792 = !DILocation(line: 771, column: 5, scope: !790, inlinedAt: !754)
!793 = !DILocation(line: 772, column: 3, scope: !790, inlinedAt: !754)
!794 = !DILocation(line: 774, column: 1, scope: !749, inlinedAt: !754)
!795 = !DILocation(line: 310, column: 9, scope: !756)
!796 = !DILocation(line: 311, column: 9, scope: !756)
!797 = !DILocation(line: 286, column: 53, scope: !608)
!798 = distinct !{!798, !613, !799}
!799 = !DILocation(line: 313, column: 5, scope: !609)
!800 = !DILocation(line: 320, column: 18, scope: !801)
!801 = distinct !DILexicalBlock(scope: !802, file: !3, line: 320, column: 11)
!802 = distinct !DILexicalBlock(scope: !712, file: !3, line: 318, column: 79)
!803 = !{!804, !448, i64 48}
!804 = !{!"tcp_pcb_listen", !468, i64 0, !468, i64 24, !448, i64 48, !448, i64 49, !448, i64 50, !448, i64 51, !456, i64 56, !456, i64 64, !448, i64 72, !448, i64 76, !447, i64 78, !456, i64 80}
!805 = !DILocation(line: 320, column: 28, scope: !801)
!806 = !DILocation(line: 320, column: 47, scope: !801)
!807 = !DILocation(line: 321, column: 31, scope: !801)
!808 = !DILocation(line: 321, column: 28, scope: !801)
!809 = !DILocation(line: 320, column: 11, scope: !802)
!810 = !DILocation(line: 326, column: 17, scope: !811)
!811 = distinct !DILexicalBlock(scope: !802, file: !3, line: 326, column: 11)
!812 = !{!804, !447, i64 78}
!813 = !DILocation(line: 326, column: 39, scope: !811)
!814 = !DILocation(line: 326, column: 28, scope: !811)
!815 = !DILocation(line: 326, column: 11, scope: !802)
!816 = !DILocation(line: 327, column: 13, scope: !817)
!817 = distinct !DILexicalBlock(scope: !818, file: !3, line: 327, column: 13)
!818 = distinct !DILexicalBlock(scope: !811, file: !3, line: 326, column: 45)
!819 = !{!804, !448, i64 20}
!820 = !DILocation(line: 327, column: 13, scope: !818)
!821 = !DILocation(line: 335, column: 20, scope: !822)
!822 = distinct !DILexicalBlock(scope: !817, file: !3, line: 335, column: 20)
!823 = !DILocation(line: 335, column: 20, scope: !817)
!824 = !DILocation(line: 336, column: 15, scope: !825)
!825 = distinct !DILexicalBlock(scope: !826, file: !3, line: 336, column: 15)
!826 = distinct !DILexicalBlock(scope: !822, file: !3, line: 335, column: 83)
!827 = !DILocation(line: 336, column: 15, scope: !826)
!828 = !DILocation(line: 339, column: 22, scope: !829)
!829 = distinct !DILexicalBlock(scope: !825, file: !3, line: 339, column: 22)
!830 = !DILocation(line: 339, column: 22, scope: !825)
!831 = !DILocation(line: 347, column: 11, scope: !832)
!832 = distinct !DILexicalBlock(scope: !829, file: !3, line: 339, column: 54)
!833 = !DILocation(line: 0, scope: !834)
!834 = distinct !DILexicalBlock(scope: !817, file: !3, line: 327, column: 49)
!835 = !DILocation(line: 0, scope: !802)
!836 = !DILocation(line: 318, column: 73, scope: !712)
!837 = distinct !{!837, !715, !838}
!838 = !DILocation(line: 351, column: 5, scope: !713)
!839 = !DILocation(line: 360, column: 14, scope: !840)
!840 = distinct !DILexicalBlock(scope: !610, file: !3, line: 360, column: 9)
!841 = !DILocation(line: 360, column: 9, scope: !610)
!842 = !DILocation(line: 364, column: 16, scope: !843)
!843 = distinct !DILexicalBlock(scope: !844, file: !3, line: 364, column: 11)
!844 = distinct !DILexicalBlock(scope: !840, file: !3, line: 360, column: 23)
!845 = !DILocation(line: 364, column: 11, scope: !844)
!846 = !DILocation(line: 365, column: 55, scope: !847)
!847 = distinct !DILexicalBlock(scope: !843, file: !3, line: 364, column: 25)
!848 = !{!804, !456, i64 56}
!849 = !DILocation(line: 365, column: 42, scope: !847)
!850 = !DILocation(line: 365, column: 47, scope: !847)
!851 = !DILocation(line: 367, column: 20, scope: !847)
!852 = !DILocation(line: 369, column: 37, scope: !847)
!853 = !DILocation(line: 370, column: 7, scope: !847)
!854 = !DILocation(line: 371, column: 9, scope: !855)
!855 = distinct !DILexicalBlock(scope: !843, file: !3, line: 370, column: 14)
!856 = !DILocalVariable(name: "pcb", arg: 1, scope: !857, file: !3, line: 630, type: !191)
!857 = distinct !DISubprogram(name: "tcp_listen_input", scope: !3, file: !3, line: 630, type: !858, isLocal: true, isDefinition: true, scopeLine: 631, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !860)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !191}
!860 = !{!856, !861, !862, !863, !864}
!861 = !DILocalVariable(name: "npcb", scope: !857, file: !3, line: 632, type: !88)
!862 = !DILocalVariable(name: "iss", scope: !857, file: !3, line: 633, type: !75)
!863 = !DILocalVariable(name: "rc", scope: !857, file: !3, line: 634, type: !210)
!864 = !DILocalVariable(name: "err", scope: !865, file: !3, line: 664, type: !210)
!865 = distinct !DILexicalBlock(scope: !866, file: !3, line: 663, column: 23)
!866 = distinct !DILexicalBlock(scope: !867, file: !3, line: 663, column: 9)
!867 = distinct !DILexicalBlock(scope: !868, file: !3, line: 651, column: 31)
!868 = distinct !DILexicalBlock(scope: !869, file: !3, line: 651, column: 14)
!869 = distinct !DILexicalBlock(scope: !857, file: !3, line: 645, column: 7)
!870 = !DILocation(line: 630, column: 41, scope: !857, inlinedAt: !871)
!871 = distinct !DILocation(line: 380, column: 9, scope: !872)
!872 = distinct !DILexicalBlock(scope: !844, file: !3, line: 379, column: 7)
!873 = !DILocation(line: 636, column: 7, scope: !874, inlinedAt: !871)
!874 = distinct !DILexicalBlock(scope: !857, file: !3, line: 636, column: 7)
!875 = !DILocation(line: 636, column: 13, scope: !874, inlinedAt: !871)
!876 = !DILocation(line: 636, column: 7, scope: !857, inlinedAt: !871)
!877 = !DILocation(line: 645, column: 13, scope: !869, inlinedAt: !871)
!878 = !DILocation(line: 645, column: 7, scope: !857, inlinedAt: !871)
!879 = !DILocation(line: 649, column: 13, scope: !880, inlinedAt: !871)
!880 = distinct !DILexicalBlock(scope: !869, file: !3, line: 645, column: 24)
!881 = !DILocation(line: 649, column: 42, scope: !880, inlinedAt: !871)
!882 = !DILocation(line: 649, column: 49, scope: !880, inlinedAt: !871)
!883 = !DILocation(line: 649, column: 57, scope: !880, inlinedAt: !871)
!884 = !DILocation(line: 649, column: 55, scope: !880, inlinedAt: !871)
!885 = !DILocation(line: 650, column: 36, scope: !880, inlinedAt: !871)
!886 = !DILocation(line: 650, column: 44, scope: !880, inlinedAt: !871)
!887 = !DILocation(line: 650, column: 58, scope: !880, inlinedAt: !871)
!888 = !DILocation(line: 649, column: 5, scope: !880, inlinedAt: !871)
!889 = !DILocation(line: 651, column: 3, scope: !880, inlinedAt: !871)
!890 = !DILocation(line: 651, column: 20, scope: !868, inlinedAt: !871)
!891 = !DILocation(line: 651, column: 14, scope: !869, inlinedAt: !871)
!892 = !DILocation(line: 659, column: 27, scope: !867, inlinedAt: !871)
!893 = !{!804, !448, i64 76}
!894 = !DILocation(line: 659, column: 12, scope: !867, inlinedAt: !871)
!895 = !DILocation(line: 632, column: 19, scope: !857, inlinedAt: !871)
!896 = !DILocation(line: 663, column: 14, scope: !866, inlinedAt: !871)
!897 = !DILocation(line: 663, column: 9, scope: !867, inlinedAt: !871)
!898 = !DILocation(line: 666, column: 7, scope: !865, inlinedAt: !871)
!899 = !{!445, !447, i64 156}
!900 = !DILocation(line: 667, column: 7, scope: !901, inlinedAt: !871)
!901 = distinct !DILexicalBlock(scope: !902, file: !3, line: 667, column: 7)
!902 = distinct !DILexicalBlock(scope: !865, file: !3, line: 667, column: 7)
!903 = !{!804, !456, i64 80}
!904 = !DILocation(line: 667, column: 7, scope: !902, inlinedAt: !871)
!905 = !{!804, !456, i64 64}
!906 = !DILocation(line: 664, column: 13, scope: !865, inlinedAt: !871)
!907 = !DILocation(line: 676, column: 5, scope: !908, inlinedAt: !871)
!908 = distinct !DILexicalBlock(scope: !909, file: !3, line: 676, column: 5)
!909 = distinct !DILexicalBlock(scope: !867, file: !3, line: 676, column: 5)
!910 = !DILocation(line: 676, column: 5, scope: !911, inlinedAt: !871)
!911 = distinct !DILexicalBlock(scope: !909, file: !3, line: 676, column: 5)
!912 = !DILocation(line: 676, column: 5, scope: !913, inlinedAt: !871)
!913 = distinct !DILexicalBlock(scope: !914, file: !3, line: 676, column: 5)
!914 = distinct !DILexicalBlock(scope: !911, file: !3, line: 676, column: 5)
!915 = !DILocation(line: 676, column: 5, scope: !909, inlinedAt: !871)
!916 = !DILocation(line: 676, column: 5, scope: !914, inlinedAt: !871)
!917 = !DILocation(line: 676, column: 5, scope: !918, inlinedAt: !871)
!918 = distinct !DILexicalBlock(scope: !919, file: !3, line: 676, column: 5)
!919 = distinct !DILexicalBlock(scope: !911, file: !3, line: 676, column: 5)
!920 = !DILocation(line: 677, column: 5, scope: !921, inlinedAt: !871)
!921 = distinct !DILexicalBlock(scope: !922, file: !3, line: 677, column: 5)
!922 = distinct !DILexicalBlock(scope: !867, file: !3, line: 677, column: 5)
!923 = !{!467, !448, i64 56}
!924 = !DILocation(line: 677, column: 5, scope: !925, inlinedAt: !871)
!925 = distinct !DILexicalBlock(scope: !922, file: !3, line: 677, column: 5)
!926 = !DILocation(line: 677, column: 5, scope: !927, inlinedAt: !871)
!927 = distinct !DILexicalBlock(scope: !928, file: !3, line: 677, column: 5)
!928 = distinct !DILexicalBlock(scope: !925, file: !3, line: 677, column: 5)
!929 = !DILocation(line: 677, column: 5, scope: !922, inlinedAt: !871)
!930 = !DILocation(line: 677, column: 5, scope: !928, inlinedAt: !871)
!931 = !DILocation(line: 677, column: 5, scope: !932, inlinedAt: !871)
!932 = distinct !DILexicalBlock(scope: !933, file: !3, line: 677, column: 5)
!933 = distinct !DILexicalBlock(scope: !925, file: !3, line: 677, column: 5)
!934 = !DILocation(line: 678, column: 29, scope: !867, inlinedAt: !871)
!935 = !DILocation(line: 678, column: 11, scope: !867, inlinedAt: !871)
!936 = !DILocation(line: 678, column: 22, scope: !867, inlinedAt: !871)
!937 = !DILocation(line: 679, column: 25, scope: !867, inlinedAt: !871)
!938 = !DILocation(line: 679, column: 33, scope: !867, inlinedAt: !871)
!939 = !DILocation(line: 679, column: 11, scope: !867, inlinedAt: !871)
!940 = !DILocation(line: 679, column: 23, scope: !867, inlinedAt: !871)
!941 = !DILocation(line: 680, column: 11, scope: !867, inlinedAt: !871)
!942 = !DILocation(line: 680, column: 17, scope: !867, inlinedAt: !871)
!943 = !DILocation(line: 681, column: 21, scope: !867, inlinedAt: !871)
!944 = !DILocation(line: 681, column: 27, scope: !867, inlinedAt: !871)
!945 = !DILocation(line: 681, column: 11, scope: !867, inlinedAt: !871)
!946 = !DILocation(line: 681, column: 19, scope: !867, inlinedAt: !871)
!947 = !DILocation(line: 682, column: 11, scope: !867, inlinedAt: !871)
!948 = !DILocation(line: 682, column: 30, scope: !867, inlinedAt: !871)
!949 = !{!619, !489, i64 104}
!950 = !DILocation(line: 683, column: 11, scope: !867, inlinedAt: !871)
!951 = !DILocation(line: 633, column: 9, scope: !857, inlinedAt: !871)
!952 = !DILocation(line: 684, column: 11, scope: !867, inlinedAt: !871)
!953 = !DILocation(line: 684, column: 19, scope: !867, inlinedAt: !871)
!954 = !{!619, !489, i64 152}
!955 = !DILocation(line: 685, column: 11, scope: !867, inlinedAt: !871)
!956 = !DILocation(line: 685, column: 19, scope: !867, inlinedAt: !871)
!957 = !{!619, !489, i64 144}
!958 = !DILocation(line: 686, column: 11, scope: !867, inlinedAt: !871)
!959 = !DILocation(line: 686, column: 19, scope: !867, inlinedAt: !871)
!960 = !{!619, !489, i64 128}
!961 = !DILocation(line: 687, column: 11, scope: !867, inlinedAt: !871)
!962 = !DILocation(line: 687, column: 19, scope: !867, inlinedAt: !871)
!963 = !{!619, !489, i64 156}
!964 = !DILocation(line: 688, column: 21, scope: !867, inlinedAt: !871)
!965 = !DILocation(line: 688, column: 27, scope: !867, inlinedAt: !871)
!966 = !DILocation(line: 688, column: 11, scope: !867, inlinedAt: !871)
!967 = !DILocation(line: 688, column: 19, scope: !867, inlinedAt: !871)
!968 = !{!619, !489, i64 148}
!969 = !DILocation(line: 689, column: 31, scope: !867, inlinedAt: !871)
!970 = !DILocation(line: 689, column: 11, scope: !867, inlinedAt: !871)
!971 = !DILocation(line: 689, column: 24, scope: !867, inlinedAt: !871)
!972 = !{!619, !456, i64 64}
!973 = !DILocation(line: 691, column: 11, scope: !867, inlinedAt: !871)
!974 = !DILocation(line: 691, column: 20, scope: !867, inlinedAt: !871)
!975 = !{!619, !456, i64 216}
!976 = !DILocation(line: 694, column: 29, scope: !867, inlinedAt: !871)
!977 = !{!804, !448, i64 49}
!978 = !DILocation(line: 694, column: 40, scope: !867, inlinedAt: !871)
!979 = !DILocation(line: 694, column: 11, scope: !867, inlinedAt: !871)
!980 = !DILocation(line: 694, column: 22, scope: !867, inlinedAt: !871)
!981 = !{!619, !448, i64 49}
!982 = !DILocation(line: 695, column: 28, scope: !867, inlinedAt: !871)
!983 = !DILocation(line: 695, column: 11, scope: !867, inlinedAt: !871)
!984 = !DILocation(line: 695, column: 21, scope: !867, inlinedAt: !871)
!985 = !DILocation(line: 698, column: 5, scope: !986, inlinedAt: !871)
!986 = distinct !DILexicalBlock(scope: !987, file: !3, line: 698, column: 5)
!987 = distinct !DILexicalBlock(scope: !867, file: !3, line: 698, column: 5)
!988 = !DILocation(line: 698, column: 5, scope: !987, inlinedAt: !871)
!989 = !DILocation(line: 701, column: 5, scope: !867, inlinedAt: !871)
!990 = !DILocation(line: 702, column: 21, scope: !867, inlinedAt: !871)
!991 = !DILocation(line: 702, column: 29, scope: !867, inlinedAt: !871)
!992 = !DILocation(line: 702, column: 11, scope: !867, inlinedAt: !871)
!993 = !DILocation(line: 702, column: 19, scope: !867, inlinedAt: !871)
!994 = !{!619, !489, i64 160}
!995 = !DILocation(line: 703, column: 11, scope: !867, inlinedAt: !871)
!996 = !DILocation(line: 703, column: 23, scope: !867, inlinedAt: !871)
!997 = !{!619, !489, i64 164}
!998 = !DILocation(line: 706, column: 17, scope: !867, inlinedAt: !871)
!999 = !{!619, !447, i64 110}
!1000 = !DILocation(line: 706, column: 15, scope: !867, inlinedAt: !871)
!1001 = !DILocation(line: 719, column: 10, scope: !867, inlinedAt: !871)
!1002 = !DILocation(line: 634, column: 9, scope: !857, inlinedAt: !871)
!1003 = !DILocation(line: 720, column: 12, scope: !1004, inlinedAt: !871)
!1004 = distinct !DILexicalBlock(scope: !867, file: !3, line: 720, column: 9)
!1005 = !DILocation(line: 720, column: 9, scope: !867, inlinedAt: !871)
!1006 = !DILocation(line: 721, column: 7, scope: !1007, inlinedAt: !871)
!1007 = distinct !DILexicalBlock(scope: !1004, file: !3, line: 720, column: 23)
!1008 = !DILocation(line: 722, column: 7, scope: !1007, inlinedAt: !871)
!1009 = !DILocation(line: 724, column: 5, scope: !867, inlinedAt: !871)
!1010 = !DILocation(line: 725, column: 3, scope: !867, inlinedAt: !871)
!1011 = !DILocation(line: 727, column: 1, scope: !857, inlinedAt: !871)
!1012 = !DILocation(line: 382, column: 7, scope: !844)
!1013 = !DILocation(line: 383, column: 7, scope: !844)
!1014 = !DILocation(line: 408, column: 16, scope: !423)
!1015 = !{!1016, !456, i64 0}
!1016 = !{!"tcp_seg", !456, i64 0, !456, i64 8, !447, i64 16, !448, i64 18, !456, i64 24}
!1017 = !DILocation(line: 409, column: 15, scope: !423)
!1018 = !{!1016, !447, i64 16}
!1019 = !DILocation(line: 410, column: 13, scope: !423)
!1020 = !{!1016, !456, i64 8}
!1021 = !DILocation(line: 411, column: 18, scope: !423)
!1022 = !{!1016, !456, i64 24}
!1023 = !DILocation(line: 413, column: 15, scope: !423)
!1024 = !DILocation(line: 414, column: 16, scope: !423)
!1025 = !DILocation(line: 415, column: 16, scope: !423)
!1026 = !DILocation(line: 417, column: 15, scope: !1027)
!1027 = distinct !DILexicalBlock(scope: !423, file: !3, line: 417, column: 9)
!1028 = !DILocation(line: 417, column: 9, scope: !423)
!1029 = !DILocation(line: 418, column: 10, scope: !1030)
!1030 = distinct !DILexicalBlock(scope: !1027, file: !3, line: 417, column: 26)
!1031 = !DILocation(line: 418, column: 16, scope: !1030)
!1032 = !{!455, !448, i64 21}
!1033 = !DILocation(line: 419, column: 5, scope: !1030)
!1034 = !DILocation(line: 422, column: 14, scope: !1035)
!1035 = distinct !DILexicalBlock(scope: !423, file: !3, line: 422, column: 9)
!1036 = !{!619, !456, i64 208}
!1037 = !DILocation(line: 422, column: 27, scope: !1035)
!1038 = !DILocation(line: 422, column: 9, scope: !423)
!1039 = !DILocation(line: 423, column: 12, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !1041, file: !3, line: 423, column: 11)
!1041 = distinct !DILexicalBlock(scope: !1035, file: !3, line: 422, column: 36)
!1042 = !DILocation(line: 423, column: 42, scope: !1040)
!1043 = !DILocation(line: 423, column: 55, scope: !1040)
!1044 = !DILocation(line: 424, column: 18, scope: !1040)
!1045 = !DILocation(line: 424, column: 31, scope: !1040)
!1046 = !DILocation(line: 424, column: 44, scope: !1040)
!1047 = !DILocation(line: 424, column: 51, scope: !1040)
!1048 = !DILocation(line: 424, column: 40, scope: !1040)
!1049 = !DILocation(line: 799, column: 7, scope: !1050, inlinedAt: !1083)
!1050 = distinct !DILexicalBlock(scope: !1051, file: !3, line: 799, column: 7)
!1051 = distinct !DISubprogram(name: "tcp_process", scope: !3, file: !3, line: 788, type: !1052, isLocal: true, isDefinition: true, scopeLine: 789, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1054)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!210, !88}
!1054 = !{!1055, !1056, !1057, !1058, !1059, !1069, !1076}
!1055 = !DILocalVariable(name: "pcb", arg: 1, scope: !1051, file: !3, line: 788, type: !88)
!1056 = !DILocalVariable(name: "rseg", scope: !1051, file: !3, line: 790, type: !166)
!1057 = !DILocalVariable(name: "acceptable", scope: !1051, file: !3, line: 791, type: !83)
!1058 = !DILocalVariable(name: "err", scope: !1051, file: !3, line: 792, type: !210)
!1059 = !DILocalVariable(name: "tcp_tmp_pcb", scope: !1060, file: !3, line: 997, type: !88)
!1060 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 997, column: 11)
!1061 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 997, column: 11)
!1062 = distinct !DILexicalBlock(scope: !1063, file: !3, line: 997, column: 11)
!1063 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 997, column: 11)
!1064 = distinct !DILexicalBlock(scope: !1065, file: !3, line: 992, column: 34)
!1065 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 991, column: 13)
!1066 = distinct !DILexicalBlock(scope: !1067, file: !3, line: 990, column: 36)
!1067 = distinct !DILexicalBlock(scope: !1068, file: !3, line: 990, column: 11)
!1068 = distinct !DILexicalBlock(scope: !1051, file: !3, line: 853, column: 23)
!1069 = !DILocalVariable(name: "tcp_tmp_pcb", scope: !1070, file: !3, line: 1015, type: !88)
!1070 = distinct !DILexicalBlock(scope: !1071, file: !3, line: 1015, column: 9)
!1071 = distinct !DILexicalBlock(scope: !1072, file: !3, line: 1015, column: 9)
!1072 = distinct !DILexicalBlock(scope: !1073, file: !3, line: 1015, column: 9)
!1073 = distinct !DILexicalBlock(scope: !1074, file: !3, line: 1015, column: 9)
!1074 = distinct !DILexicalBlock(scope: !1075, file: !3, line: 1011, column: 36)
!1075 = distinct !DILexicalBlock(scope: !1068, file: !3, line: 1011, column: 11)
!1076 = !DILocalVariable(name: "tcp_tmp_pcb", scope: !1077, file: !3, line: 1025, type: !88)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !3, line: 1025, column: 9)
!1078 = distinct !DILexicalBlock(scope: !1079, file: !3, line: 1025, column: 9)
!1079 = distinct !DILexicalBlock(scope: !1080, file: !3, line: 1025, column: 9)
!1080 = distinct !DILexicalBlock(scope: !1081, file: !3, line: 1025, column: 9)
!1081 = distinct !DILexicalBlock(scope: !1082, file: !3, line: 1022, column: 78)
!1082 = distinct !DILexicalBlock(scope: !1068, file: !3, line: 1022, column: 11)
!1083 = distinct !DILocation(line: 438, column: 11, scope: !423)
!1084 = !DILocation(line: 427, column: 18, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1086, file: !3, line: 427, column: 13)
!1086 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 424, column: 58)
!1087 = !{!619, !489, i64 100}
!1088 = !DILocation(line: 427, column: 30, scope: !1085)
!1089 = !DILocation(line: 427, column: 13, scope: !1086)
!1090 = !DILocation(line: 430, column: 11, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !1085, file: !3, line: 427, column: 36)
!1092 = !DILocation(line: 431, column: 9, scope: !1091)
!1093 = !DILocation(line: 432, column: 9, scope: !1086)
!1094 = !{!445, !447, i64 150}
!1095 = !DILocation(line: 434, column: 9, scope: !1086)
!1096 = !DILocation(line: 437, column: 19, scope: !423)
!1097 = !DILocation(line: 788, column: 29, scope: !1051, inlinedAt: !1083)
!1098 = !DILocation(line: 791, column: 8, scope: !1051, inlinedAt: !1083)
!1099 = !DILocation(line: 792, column: 9, scope: !1051, inlinedAt: !1083)
!1100 = !DILocation(line: 799, column: 13, scope: !1050, inlinedAt: !1083)
!1101 = !DILocation(line: 799, column: 7, scope: !1051, inlinedAt: !1083)
!1102 = !DILocation(line: 801, column: 14, scope: !1103, inlinedAt: !1083)
!1103 = distinct !DILexicalBlock(scope: !1104, file: !3, line: 801, column: 9)
!1104 = distinct !DILexicalBlock(scope: !1050, file: !3, line: 799, column: 24)
!1105 = !DILocation(line: 801, column: 20, scope: !1103, inlinedAt: !1083)
!1106 = !DILocation(line: 801, column: 9, scope: !1104, inlinedAt: !1083)
!1107 = !DILocation(line: 804, column: 11, scope: !1108, inlinedAt: !1083)
!1108 = distinct !DILexicalBlock(scope: !1109, file: !3, line: 804, column: 11)
!1109 = distinct !DILexicalBlock(scope: !1103, file: !3, line: 801, column: 33)
!1110 = !DILocation(line: 804, column: 25, scope: !1108, inlinedAt: !1083)
!1111 = !DILocation(line: 804, column: 17, scope: !1108, inlinedAt: !1083)
!1112 = !DILocation(line: 822, column: 9, scope: !1104, inlinedAt: !1083)
!1113 = !DILocation(line: 810, column: 11, scope: !1114, inlinedAt: !1083)
!1114 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 810, column: 11)
!1115 = distinct !DILexicalBlock(scope: !1103, file: !3, line: 807, column: 12)
!1116 = !DILocation(line: 810, column: 25, scope: !1114, inlinedAt: !1083)
!1117 = !DILocation(line: 810, column: 17, scope: !1114, inlinedAt: !1083)
!1118 = !DILocation(line: 810, column: 11, scope: !1115, inlinedAt: !1083)
!1119 = !DILocation(line: 812, column: 19, scope: !1120, inlinedAt: !1083)
!1120 = distinct !DILexicalBlock(scope: !1114, file: !3, line: 812, column: 19)
!1121 = !DILocation(line: 812, column: 19, scope: !1114, inlinedAt: !1083)
!1122 = !DILocation(line: 818, column: 9, scope: !1123, inlinedAt: !1083)
!1123 = distinct !DILexicalBlock(scope: !1124, file: !3, line: 818, column: 9)
!1124 = distinct !DILexicalBlock(scope: !1120, file: !3, line: 813, column: 65)
!1125 = !DILocation(line: 824, column: 7, scope: !1126, inlinedAt: !1083)
!1126 = distinct !DILexicalBlock(scope: !1127, file: !3, line: 824, column: 7)
!1127 = distinct !DILexicalBlock(scope: !1128, file: !3, line: 824, column: 7)
!1128 = distinct !DILexicalBlock(scope: !1129, file: !3, line: 822, column: 21)
!1129 = distinct !DILexicalBlock(scope: !1104, file: !3, line: 822, column: 9)
!1130 = !DILocation(line: 824, column: 7, scope: !1127, inlinedAt: !1083)
!1131 = !DILocation(line: 824, column: 7, scope: !1132, inlinedAt: !1083)
!1132 = distinct !DILexicalBlock(scope: !1133, file: !3, line: 824, column: 7)
!1133 = distinct !DILexicalBlock(scope: !1126, file: !3, line: 824, column: 7)
!1134 = !DILocation(line: 824, column: 7, scope: !1135, inlinedAt: !1083)
!1135 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 824, column: 7)
!1136 = distinct !DILexicalBlock(scope: !1137, file: !3, line: 824, column: 7)
!1137 = distinct !DILexicalBlock(scope: !1132, file: !3, line: 824, column: 7)
!1138 = !DILocation(line: 825, column: 18, scope: !1128, inlinedAt: !1083)
!1139 = !DILocation(line: 826, column: 7, scope: !1140, inlinedAt: !1083)
!1140 = distinct !DILexicalBlock(scope: !1128, file: !3, line: 826, column: 7)
!1141 = !DILocation(line: 827, column: 7, scope: !1128, inlinedAt: !1083)
!1142 = !DILocation(line: 837, column: 14, scope: !1143, inlinedAt: !1083)
!1143 = distinct !DILexicalBlock(scope: !1051, file: !3, line: 837, column: 7)
!1144 = !DILocation(line: 837, column: 25, scope: !1143, inlinedAt: !1083)
!1145 = !DILocation(line: 837, column: 34, scope: !1143, inlinedAt: !1083)
!1146 = !DILocation(line: 837, column: 52, scope: !1143, inlinedAt: !1083)
!1147 = !DILocation(line: 839, column: 5, scope: !1148, inlinedAt: !1083)
!1148 = distinct !DILexicalBlock(scope: !1149, file: !3, line: 839, column: 5)
!1149 = distinct !DILexicalBlock(scope: !1143, file: !3, line: 837, column: 80)
!1150 = !DILocation(line: 840, column: 5, scope: !1149, inlinedAt: !1083)
!1151 = !DILocation(line: 843, column: 13, scope: !1152, inlinedAt: !1083)
!1152 = distinct !DILexicalBlock(scope: !1051, file: !3, line: 843, column: 7)
!1153 = !DILocation(line: 843, column: 19, scope: !1152, inlinedAt: !1083)
!1154 = !DILocation(line: 843, column: 34, scope: !1152, inlinedAt: !1083)
!1155 = !DILocation(line: 843, column: 7, scope: !1051, inlinedAt: !1083)
!1156 = !DILocation(line: 845, column: 16, scope: !1157, inlinedAt: !1083)
!1157 = distinct !DILexicalBlock(scope: !1152, file: !3, line: 843, column: 40)
!1158 = !DILocation(line: 845, column: 10, scope: !1157, inlinedAt: !1083)
!1159 = !DILocation(line: 845, column: 14, scope: !1157, inlinedAt: !1083)
!1160 = !DILocation(line: 846, column: 3, scope: !1157, inlinedAt: !1083)
!1161 = !DILocation(line: 847, column: 8, scope: !1051, inlinedAt: !1083)
!1162 = !DILocation(line: 847, column: 22, scope: !1051, inlinedAt: !1083)
!1163 = !{!619, !448, i64 271}
!1164 = !DILocation(line: 848, column: 8, scope: !1051, inlinedAt: !1083)
!1165 = !DILocation(line: 848, column: 22, scope: !1051, inlinedAt: !1083)
!1166 = !{!619, !448, i64 270}
!1167 = !DILocation(line: 850, column: 3, scope: !1051, inlinedAt: !1083)
!1168 = !DILocation(line: 853, column: 16, scope: !1051, inlinedAt: !1083)
!1169 = !DILocation(line: 853, column: 3, scope: !1051, inlinedAt: !1083)
!1170 = !DILocation(line: 858, column: 12, scope: !1171, inlinedAt: !1083)
!1171 = distinct !DILexicalBlock(scope: !1068, file: !3, line: 858, column: 11)
!1172 = !DILocation(line: 858, column: 29, scope: !1171, inlinedAt: !1083)
!1173 = !DILocation(line: 859, column: 15, scope: !1171, inlinedAt: !1083)
!1174 = !DILocation(line: 859, column: 29, scope: !1171, inlinedAt: !1083)
!1175 = !DILocation(line: 859, column: 37, scope: !1171, inlinedAt: !1083)
!1176 = !DILocation(line: 859, column: 21, scope: !1171, inlinedAt: !1083)
!1177 = !DILocation(line: 858, column: 11, scope: !1068, inlinedAt: !1083)
!1178 = !DILocation(line: 860, column: 24, scope: !1179, inlinedAt: !1083)
!1179 = distinct !DILexicalBlock(scope: !1171, file: !3, line: 859, column: 43)
!1180 = !DILocation(line: 860, column: 30, scope: !1179, inlinedAt: !1083)
!1181 = !DILocation(line: 860, column: 14, scope: !1179, inlinedAt: !1083)
!1182 = !DILocation(line: 860, column: 22, scope: !1179, inlinedAt: !1083)
!1183 = !DILocation(line: 861, column: 14, scope: !1179, inlinedAt: !1083)
!1184 = !DILocation(line: 861, column: 33, scope: !1179, inlinedAt: !1083)
!1185 = !DILocation(line: 862, column: 22, scope: !1179, inlinedAt: !1083)
!1186 = !DILocation(line: 863, column: 24, scope: !1179, inlinedAt: !1083)
!1187 = !DILocation(line: 863, column: 32, scope: !1179, inlinedAt: !1083)
!1188 = !DILocation(line: 863, column: 14, scope: !1179, inlinedAt: !1083)
!1189 = !DILocation(line: 863, column: 22, scope: !1179, inlinedAt: !1083)
!1190 = !DILocation(line: 864, column: 14, scope: !1179, inlinedAt: !1083)
!1191 = !DILocation(line: 864, column: 26, scope: !1179, inlinedAt: !1083)
!1192 = !DILocation(line: 865, column: 30, scope: !1179, inlinedAt: !1083)
!1193 = !DILocation(line: 865, column: 14, scope: !1179, inlinedAt: !1083)
!1194 = !DILocation(line: 865, column: 22, scope: !1179, inlinedAt: !1083)
!1195 = !DILocation(line: 866, column: 20, scope: !1179, inlinedAt: !1083)
!1196 = !DILocation(line: 869, column: 20, scope: !1179, inlinedAt: !1083)
!1197 = !DILocation(line: 869, column: 18, scope: !1179, inlinedAt: !1083)
!1198 = !DILocation(line: 872, column: 21, scope: !1179, inlinedAt: !1083)
!1199 = !DILocation(line: 872, column: 14, scope: !1179, inlinedAt: !1083)
!1200 = !DILocation(line: 872, column: 19, scope: !1179, inlinedAt: !1083)
!1201 = !{!619, !489, i64 132}
!1202 = !DILocation(line: 876, column: 9, scope: !1203, inlinedAt: !1083)
!1203 = distinct !DILexicalBlock(scope: !1204, file: !3, line: 876, column: 9)
!1204 = distinct !DILexicalBlock(scope: !1179, file: !3, line: 876, column: 9)
!1205 = !{!619, !447, i64 172}
!1206 = !DILocation(line: 876, column: 9, scope: !1204, inlinedAt: !1083)
!1207 = !DILocation(line: 876, column: 9, scope: !1208, inlinedAt: !1083)
!1208 = distinct !DILexicalBlock(scope: !1209, file: !3, line: 876, column: 9)
!1209 = distinct !DILexicalBlock(scope: !1203, file: !3, line: 876, column: 9)
!1210 = !DILocation(line: 876, column: 9, scope: !1211, inlinedAt: !1083)
!1211 = distinct !DILexicalBlock(scope: !1212, file: !3, line: 876, column: 9)
!1212 = distinct !DILexicalBlock(scope: !1213, file: !3, line: 876, column: 9)
!1213 = distinct !DILexicalBlock(scope: !1208, file: !3, line: 876, column: 9)
!1214 = !DILocation(line: 877, column: 9, scope: !1179, inlinedAt: !1083)
!1215 = !DILocation(line: 879, column: 21, scope: !1179, inlinedAt: !1083)
!1216 = !{!619, !456, i64 192}
!1217 = !DILocation(line: 790, column: 19, scope: !1051, inlinedAt: !1083)
!1218 = !DILocation(line: 880, column: 18, scope: !1219, inlinedAt: !1083)
!1219 = distinct !DILexicalBlock(scope: !1179, file: !3, line: 880, column: 13)
!1220 = !DILocation(line: 880, column: 13, scope: !1179, inlinedAt: !1083)
!1221 = !DILocation(line: 883, column: 23, scope: !1222, inlinedAt: !1083)
!1222 = distinct !DILexicalBlock(scope: !1219, file: !3, line: 880, column: 27)
!1223 = !{!619, !456, i64 184}
!1224 = !DILocation(line: 884, column: 11, scope: !1225, inlinedAt: !1083)
!1225 = distinct !DILexicalBlock(scope: !1226, file: !3, line: 884, column: 11)
!1226 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 884, column: 11)
!1227 = !DILocation(line: 884, column: 11, scope: !1226, inlinedAt: !1083)
!1228 = !DILocation(line: 884, column: 11, scope: !1229, inlinedAt: !1083)
!1229 = distinct !DILexicalBlock(scope: !1230, file: !3, line: 884, column: 11)
!1230 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 884, column: 11)
!1231 = !DILocation(line: 884, column: 11, scope: !1232, inlinedAt: !1083)
!1232 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 884, column: 11)
!1233 = distinct !DILexicalBlock(scope: !1234, file: !3, line: 884, column: 11)
!1234 = distinct !DILexicalBlock(scope: !1229, file: !3, line: 884, column: 11)
!1235 = !DILocation(line: 0, scope: !423)
!1236 = !DILocation(line: 889, column: 9, scope: !1179, inlinedAt: !1083)
!1237 = !DILocation(line: 893, column: 18, scope: !1238, inlinedAt: !1083)
!1238 = distinct !DILexicalBlock(scope: !1179, file: !3, line: 893, column: 13)
!1239 = !DILocation(line: 893, column: 26, scope: !1238, inlinedAt: !1083)
!1240 = !DILocation(line: 0, scope: !1241, inlinedAt: !1083)
!1241 = distinct !DILexicalBlock(scope: !1238, file: !3, line: 895, column: 16)
!1242 = !DILocation(line: 893, column: 13, scope: !1179, inlinedAt: !1083)
!1243 = !DILocation(line: 894, column: 22, scope: !1244, inlinedAt: !1083)
!1244 = distinct !DILexicalBlock(scope: !1238, file: !3, line: 893, column: 35)
!1245 = !{!619, !447, i64 108}
!1246 = !DILocation(line: 895, column: 9, scope: !1244, inlinedAt: !1083)
!1247 = !DILocation(line: 896, column: 22, scope: !1241, inlinedAt: !1083)
!1248 = !DILocation(line: 897, column: 16, scope: !1241, inlinedAt: !1083)
!1249 = !DILocation(line: 897, column: 21, scope: !1241, inlinedAt: !1083)
!1250 = !{!619, !448, i64 126}
!1251 = !DILocation(line: 902, column: 9, scope: !1252, inlinedAt: !1083)
!1252 = distinct !DILexicalBlock(scope: !1253, file: !3, line: 902, column: 9)
!1253 = distinct !DILexicalBlock(scope: !1179, file: !3, line: 902, column: 9)
!1254 = !{!619, !456, i64 240}
!1255 = !DILocation(line: 902, column: 9, scope: !1253, inlinedAt: !1083)
!1256 = !DILocation(line: 903, column: 13, scope: !1179, inlinedAt: !1083)
!1257 = !DILocation(line: 906, column: 9, scope: !1258, inlinedAt: !1083)
!1258 = distinct !DILexicalBlock(scope: !1179, file: !3, line: 906, column: 9)
!1259 = !DILocation(line: 907, column: 7, scope: !1179, inlinedAt: !1083)
!1260 = !DILocation(line: 909, column: 22, scope: !1261, inlinedAt: !1083)
!1261 = distinct !DILexicalBlock(scope: !1171, file: !3, line: 909, column: 16)
!1262 = !DILocation(line: 909, column: 16, scope: !1171, inlinedAt: !1083)
!1263 = !DILocation(line: 911, column: 22, scope: !1264, inlinedAt: !1083)
!1264 = distinct !DILexicalBlock(scope: !1261, file: !3, line: 909, column: 33)
!1265 = !DILocation(line: 911, column: 29, scope: !1264, inlinedAt: !1083)
!1266 = !DILocation(line: 911, column: 37, scope: !1264, inlinedAt: !1083)
!1267 = !DILocation(line: 911, column: 35, scope: !1264, inlinedAt: !1083)
!1268 = !DILocation(line: 912, column: 40, scope: !1264, inlinedAt: !1083)
!1269 = !DILocation(line: 912, column: 48, scope: !1264, inlinedAt: !1083)
!1270 = !DILocation(line: 912, column: 62, scope: !1264, inlinedAt: !1083)
!1271 = !DILocation(line: 911, column: 9, scope: !1264, inlinedAt: !1083)
!1272 = !DILocation(line: 916, column: 18, scope: !1273, inlinedAt: !1083)
!1273 = distinct !DILexicalBlock(scope: !1264, file: !3, line: 916, column: 13)
!1274 = !DILocation(line: 916, column: 23, scope: !1273, inlinedAt: !1083)
!1275 = !DILocation(line: 916, column: 13, scope: !1264, inlinedAt: !1083)
!1276 = !DILocation(line: 917, column: 16, scope: !1277, inlinedAt: !1083)
!1277 = distinct !DILexicalBlock(scope: !1273, file: !3, line: 916, column: 40)
!1278 = !DILocation(line: 917, column: 22, scope: !1277, inlinedAt: !1083)
!1279 = !DILocation(line: 918, column: 11, scope: !1277, inlinedAt: !1083)
!1280 = !DILocation(line: 919, column: 9, scope: !1277, inlinedAt: !1083)
!1281 = !DILocation(line: 923, column: 11, scope: !1282, inlinedAt: !1083)
!1282 = distinct !DILexicalBlock(scope: !1068, file: !3, line: 923, column: 11)
!1283 = !DILocation(line: 923, column: 17, scope: !1282, inlinedAt: !1083)
!1284 = !DILocation(line: 923, column: 11, scope: !1068, inlinedAt: !1083)
!1285 = !DILocation(line: 925, column: 13, scope: !1286, inlinedAt: !1083)
!1286 = distinct !DILexicalBlock(scope: !1287, file: !3, line: 925, column: 13)
!1287 = distinct !DILexicalBlock(scope: !1282, file: !3, line: 923, column: 28)
!1288 = !DILocation(line: 925, column: 13, scope: !1287, inlinedAt: !1083)
!1289 = !DILocation(line: 926, column: 22, scope: !1290, inlinedAt: !1083)
!1290 = distinct !DILexicalBlock(scope: !1286, file: !3, line: 925, column: 69)
!1291 = !DILocation(line: 929, column: 20, scope: !1292, inlinedAt: !1083)
!1292 = distinct !DILexicalBlock(scope: !1290, file: !3, line: 929, column: 15)
!1293 = !DILocation(line: 929, column: 29, scope: !1292, inlinedAt: !1083)
!1294 = !DILocation(line: 929, column: 15, scope: !1290, inlinedAt: !1083)
!1295 = !DILocation(line: 936, column: 13, scope: !1296, inlinedAt: !1083)
!1296 = distinct !DILexicalBlock(scope: !1297, file: !3, line: 936, column: 13)
!1297 = distinct !DILexicalBlock(scope: !1298, file: !3, line: 936, column: 13)
!1298 = distinct !DILexicalBlock(scope: !1292, file: !3, line: 934, column: 11)
!1299 = !DILocation(line: 936, column: 13, scope: !1297, inlinedAt: !1083)
!1300 = !DILocation(line: 936, column: 13, scope: !1301, inlinedAt: !1083)
!1301 = distinct !DILexicalBlock(scope: !1302, file: !3, line: 936, column: 13)
!1302 = distinct !DILexicalBlock(scope: !1296, file: !3, line: 936, column: 13)
!1303 = !DILocation(line: 936, column: 13, scope: !1304, inlinedAt: !1083)
!1304 = distinct !DILexicalBlock(scope: !1305, file: !3, line: 936, column: 13)
!1305 = distinct !DILexicalBlock(scope: !1306, file: !3, line: 936, column: 13)
!1306 = distinct !DILexicalBlock(scope: !1301, file: !3, line: 936, column: 13)
!1307 = !DILocation(line: 940, column: 13, scope: !1308, inlinedAt: !1083)
!1308 = distinct !DILexicalBlock(scope: !1309, file: !3, line: 940, column: 13)
!1309 = distinct !DILexicalBlock(scope: !1298, file: !3, line: 940, column: 13)
!1310 = !DILocation(line: 942, column: 15, scope: !1290, inlinedAt: !1083)
!1311 = !DILocation(line: 947, column: 15, scope: !1312, inlinedAt: !1083)
!1312 = distinct !DILexicalBlock(scope: !1313, file: !3, line: 946, column: 34)
!1313 = distinct !DILexicalBlock(scope: !1314, file: !3, line: 946, column: 17)
!1314 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 942, column: 30)
!1315 = distinct !DILexicalBlock(scope: !1290, file: !3, line: 942, column: 15)
!1316 = !DILocation(line: 948, column: 13, scope: !1312, inlinedAt: !1083)
!1317 = !DILocation(line: 953, column: 11, scope: !1290, inlinedAt: !1083)
!1318 = !DILocation(line: 956, column: 15, scope: !1319, inlinedAt: !1083)
!1319 = distinct !DILexicalBlock(scope: !1290, file: !3, line: 956, column: 15)
!1320 = !DILocation(line: 956, column: 26, scope: !1319, inlinedAt: !1083)
!1321 = !DILocation(line: 956, column: 15, scope: !1290, inlinedAt: !1083)
!1322 = !DILocation(line: 957, column: 23, scope: !1323, inlinedAt: !1083)
!1323 = distinct !DILexicalBlock(scope: !1319, file: !3, line: 956, column: 32)
!1324 = !DILocation(line: 958, column: 11, scope: !1323, inlinedAt: !1083)
!1325 = !DILocation(line: 960, column: 23, scope: !1290, inlinedAt: !1083)
!1326 = !DILocation(line: 960, column: 16, scope: !1290, inlinedAt: !1083)
!1327 = !DILocation(line: 960, column: 21, scope: !1290, inlinedAt: !1083)
!1328 = !DILocation(line: 965, column: 15, scope: !1329, inlinedAt: !1083)
!1329 = distinct !DILexicalBlock(scope: !1290, file: !3, line: 965, column: 15)
!1330 = !DILocation(line: 965, column: 26, scope: !1329, inlinedAt: !1083)
!1331 = !DILocation(line: 965, column: 15, scope: !1290, inlinedAt: !1083)
!1332 = !DILocation(line: 966, column: 13, scope: !1333, inlinedAt: !1083)
!1333 = distinct !DILexicalBlock(scope: !1334, file: !3, line: 966, column: 13)
!1334 = distinct !DILexicalBlock(scope: !1329, file: !3, line: 965, column: 40)
!1335 = !DILocation(line: 967, column: 24, scope: !1334, inlinedAt: !1083)
!1336 = !DILocation(line: 968, column: 11, scope: !1334, inlinedAt: !1083)
!1337 = !DILocation(line: 971, column: 31, scope: !1338, inlinedAt: !1083)
!1338 = distinct !DILexicalBlock(scope: !1286, file: !3, line: 969, column: 16)
!1339 = !DILocation(line: 971, column: 39, scope: !1338, inlinedAt: !1083)
!1340 = !DILocation(line: 971, column: 37, scope: !1338, inlinedAt: !1083)
!1341 = !DILocation(line: 972, column: 42, scope: !1338, inlinedAt: !1083)
!1342 = !DILocation(line: 972, column: 50, scope: !1338, inlinedAt: !1083)
!1343 = !DILocation(line: 972, column: 64, scope: !1338, inlinedAt: !1083)
!1344 = !DILocation(line: 971, column: 11, scope: !1338, inlinedAt: !1083)
!1345 = !DILocation(line: 974, column: 25, scope: !1346, inlinedAt: !1083)
!1346 = distinct !DILexicalBlock(scope: !1282, file: !3, line: 974, column: 18)
!1347 = !DILocation(line: 974, column: 36, scope: !1346, inlinedAt: !1083)
!1348 = !DILocation(line: 974, column: 40, scope: !1346, inlinedAt: !1083)
!1349 = !DILocation(line: 974, column: 54, scope: !1346, inlinedAt: !1083)
!1350 = !DILocation(line: 974, column: 62, scope: !1346, inlinedAt: !1083)
!1351 = !DILocation(line: 974, column: 46, scope: !1346, inlinedAt: !1083)
!1352 = !DILocation(line: 974, column: 18, scope: !1282, inlinedAt: !1083)
!1353 = !DILocation(line: 976, column: 9, scope: !1354, inlinedAt: !1083)
!1354 = distinct !DILexicalBlock(scope: !1346, file: !3, line: 974, column: 68)
!1355 = !DILocation(line: 977, column: 7, scope: !1354, inlinedAt: !1083)
!1356 = !DILocation(line: 982, column: 7, scope: !1068, inlinedAt: !1083)
!1357 = !DILocation(line: 983, column: 11, scope: !1358, inlinedAt: !1083)
!1358 = distinct !DILexicalBlock(scope: !1068, file: !3, line: 983, column: 11)
!1359 = !DILocation(line: 983, column: 22, scope: !1358, inlinedAt: !1083)
!1360 = !DILocation(line: 983, column: 11, scope: !1068, inlinedAt: !1083)
!1361 = !DILocation(line: 984, column: 9, scope: !1362, inlinedAt: !1083)
!1362 = distinct !DILexicalBlock(scope: !1363, file: !3, line: 984, column: 9)
!1363 = distinct !DILexicalBlock(scope: !1358, file: !3, line: 983, column: 36)
!1364 = !DILocation(line: 985, column: 20, scope: !1363, inlinedAt: !1083)
!1365 = !DILocation(line: 986, column: 7, scope: !1363, inlinedAt: !1083)
!1366 = !DILocation(line: 989, column: 7, scope: !1068, inlinedAt: !1083)
!1367 = !DILocation(line: 990, column: 11, scope: !1067, inlinedAt: !1083)
!1368 = !DILocation(line: 990, column: 22, scope: !1067, inlinedAt: !1083)
!1369 = !DILocation(line: 0, scope: !1370, inlinedAt: !1083)
!1370 = distinct !DILexicalBlock(scope: !1067, file: !3, line: 1004, column: 18)
!1371 = !DILocation(line: 990, column: 11, scope: !1068, inlinedAt: !1083)
!1372 = !DILocation(line: 991, column: 31, scope: !1065, inlinedAt: !1083)
!1373 = !DILocation(line: 991, column: 35, scope: !1065, inlinedAt: !1083)
!1374 = !DILocation(line: 991, column: 49, scope: !1065, inlinedAt: !1083)
!1375 = !DILocation(line: 991, column: 41, scope: !1065, inlinedAt: !1083)
!1376 = !DILocation(line: 991, column: 58, scope: !1065, inlinedAt: !1083)
!1377 = !DILocation(line: 992, column: 18, scope: !1065, inlinedAt: !1083)
!1378 = !DILocation(line: 992, column: 25, scope: !1065, inlinedAt: !1083)
!1379 = !DILocation(line: 991, column: 13, scope: !1066, inlinedAt: !1083)
!1380 = !DILocation(line: 995, column: 11, scope: !1381, inlinedAt: !1083)
!1381 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 995, column: 11)
!1382 = !DILocation(line: 996, column: 11, scope: !1064, inlinedAt: !1083)
!1383 = !DILocation(line: 997, column: 11, scope: !1061, inlinedAt: !1083)
!1384 = !DILocation(line: 997, column: 11, scope: !1062, inlinedAt: !1083)
!1385 = !DILocation(line: 997, column: 11, scope: !1386, inlinedAt: !1083)
!1386 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 997, column: 11)
!1387 = !DILocation(line: 997, column: 11, scope: !1388, inlinedAt: !1083)
!1388 = distinct !DILexicalBlock(scope: !1060, file: !3, line: 997, column: 11)
!1389 = !DILocation(line: 997, column: 11, scope: !1060, inlinedAt: !1083)
!1390 = !DILocation(line: 997, column: 11, scope: !1391, inlinedAt: !1083)
!1391 = distinct !DILexicalBlock(scope: !1388, file: !3, line: 997, column: 11)
!1392 = !DILocation(line: 997, column: 11, scope: !1393, inlinedAt: !1083)
!1393 = distinct !DILexicalBlock(scope: !1394, file: !3, line: 997, column: 11)
!1394 = distinct !DILexicalBlock(scope: !1391, file: !3, line: 997, column: 11)
!1395 = !DILocation(line: 997, column: 11, scope: !1394, inlinedAt: !1083)
!1396 = distinct !{!1396, !1397, !1397}
!1397 = !DILocation(line: 997, column: 11, scope: !1388)
!1398 = !DILocation(line: 997, column: 11, scope: !1399, inlinedAt: !1083)
!1399 = distinct !DILexicalBlock(scope: !1393, file: !3, line: 997, column: 11)
!1400 = !DILocation(line: 999, column: 11, scope: !1401, inlinedAt: !1083)
!1401 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 999, column: 11)
!1402 = !DILocation(line: 997, column: 11, scope: !1063, inlinedAt: !1083)
!1403 = !DILocation(line: 998, column: 22, scope: !1064, inlinedAt: !1083)
!1404 = !DILocation(line: 1000, column: 9, scope: !1064, inlinedAt: !1083)
!1405 = !DILocation(line: 1001, column: 11, scope: !1406, inlinedAt: !1083)
!1406 = distinct !DILexicalBlock(scope: !1407, file: !3, line: 1001, column: 11)
!1407 = distinct !DILexicalBlock(scope: !1065, file: !3, line: 1000, column: 16)
!1408 = !DILocation(line: 1002, column: 22, scope: !1407, inlinedAt: !1083)
!1409 = !DILocation(line: 1004, column: 36, scope: !1370, inlinedAt: !1083)
!1410 = !DILocation(line: 1004, column: 40, scope: !1370, inlinedAt: !1083)
!1411 = !DILocation(line: 1004, column: 54, scope: !1370, inlinedAt: !1083)
!1412 = !DILocation(line: 1004, column: 46, scope: !1370, inlinedAt: !1083)
!1413 = !DILocation(line: 1004, column: 63, scope: !1370, inlinedAt: !1083)
!1414 = !DILocation(line: 1005, column: 23, scope: !1370, inlinedAt: !1083)
!1415 = !DILocation(line: 1005, column: 30, scope: !1370, inlinedAt: !1083)
!1416 = !DILocation(line: 1004, column: 18, scope: !1067, inlinedAt: !1083)
!1417 = !DILocation(line: 1006, column: 20, scope: !1418, inlinedAt: !1083)
!1418 = distinct !DILexicalBlock(scope: !1370, file: !3, line: 1005, column: 39)
!1419 = !DILocation(line: 1007, column: 7, scope: !1418, inlinedAt: !1083)
!1420 = !DILocation(line: 1010, column: 7, scope: !1068, inlinedAt: !1083)
!1421 = !DILocation(line: 1011, column: 11, scope: !1075, inlinedAt: !1083)
!1422 = !DILocation(line: 1011, column: 22, scope: !1075, inlinedAt: !1083)
!1423 = !DILocation(line: 1011, column: 11, scope: !1068, inlinedAt: !1083)
!1424 = !DILocation(line: 1013, column: 9, scope: !1425, inlinedAt: !1083)
!1425 = distinct !DILexicalBlock(scope: !1074, file: !3, line: 1013, column: 9)
!1426 = !DILocation(line: 1014, column: 9, scope: !1074, inlinedAt: !1083)
!1427 = !DILocation(line: 1015, column: 9, scope: !1071, inlinedAt: !1083)
!1428 = !DILocation(line: 1015, column: 9, scope: !1072, inlinedAt: !1083)
!1429 = !DILocation(line: 1015, column: 9, scope: !1430, inlinedAt: !1083)
!1430 = distinct !DILexicalBlock(scope: !1071, file: !3, line: 1015, column: 9)
!1431 = !DILocation(line: 1015, column: 9, scope: !1432, inlinedAt: !1083)
!1432 = distinct !DILexicalBlock(scope: !1070, file: !3, line: 1015, column: 9)
!1433 = !DILocation(line: 1015, column: 9, scope: !1070, inlinedAt: !1083)
!1434 = !DILocation(line: 1015, column: 9, scope: !1435, inlinedAt: !1083)
!1435 = distinct !DILexicalBlock(scope: !1432, file: !3, line: 1015, column: 9)
!1436 = !DILocation(line: 1015, column: 9, scope: !1437, inlinedAt: !1083)
!1437 = distinct !DILexicalBlock(scope: !1438, file: !3, line: 1015, column: 9)
!1438 = distinct !DILexicalBlock(scope: !1435, file: !3, line: 1015, column: 9)
!1439 = !DILocation(line: 1015, column: 9, scope: !1438, inlinedAt: !1083)
!1440 = distinct !{!1440, !1441, !1441}
!1441 = !DILocation(line: 1015, column: 9, scope: !1432)
!1442 = !DILocation(line: 1015, column: 9, scope: !1443, inlinedAt: !1083)
!1443 = distinct !DILexicalBlock(scope: !1437, file: !3, line: 1015, column: 9)
!1444 = !DILocation(line: 1017, column: 9, scope: !1445, inlinedAt: !1083)
!1445 = distinct !DILexicalBlock(scope: !1074, file: !3, line: 1017, column: 9)
!1446 = !DILocation(line: 1015, column: 9, scope: !1073, inlinedAt: !1083)
!1447 = !DILocation(line: 1016, column: 20, scope: !1074, inlinedAt: !1083)
!1448 = !DILocation(line: 1018, column: 7, scope: !1074, inlinedAt: !1083)
!1449 = !DILocation(line: 1021, column: 7, scope: !1068, inlinedAt: !1083)
!1450 = !DILocation(line: 1022, column: 12, scope: !1082, inlinedAt: !1083)
!1451 = !DILocation(line: 1022, column: 18, scope: !1082, inlinedAt: !1083)
!1452 = !DILocation(line: 1022, column: 29, scope: !1082, inlinedAt: !1083)
!1453 = !DILocation(line: 1022, column: 32, scope: !1082, inlinedAt: !1083)
!1454 = !DILocation(line: 1022, column: 46, scope: !1082, inlinedAt: !1083)
!1455 = !DILocation(line: 1022, column: 38, scope: !1082, inlinedAt: !1083)
!1456 = !DILocation(line: 1022, column: 54, scope: !1082, inlinedAt: !1083)
!1457 = !DILocation(line: 1022, column: 62, scope: !1082, inlinedAt: !1083)
!1458 = !DILocation(line: 1022, column: 69, scope: !1082, inlinedAt: !1083)
!1459 = !DILocation(line: 1022, column: 11, scope: !1068, inlinedAt: !1083)
!1460 = !DILocation(line: 1024, column: 9, scope: !1081, inlinedAt: !1083)
!1461 = !DILocation(line: 1025, column: 9, scope: !1078, inlinedAt: !1083)
!1462 = !DILocation(line: 1025, column: 9, scope: !1079, inlinedAt: !1083)
!1463 = !DILocation(line: 1025, column: 9, scope: !1464, inlinedAt: !1083)
!1464 = distinct !DILexicalBlock(scope: !1078, file: !3, line: 1025, column: 9)
!1465 = !DILocation(line: 1025, column: 9, scope: !1466, inlinedAt: !1083)
!1466 = distinct !DILexicalBlock(scope: !1077, file: !3, line: 1025, column: 9)
!1467 = !DILocation(line: 1025, column: 9, scope: !1077, inlinedAt: !1083)
!1468 = !DILocation(line: 1025, column: 9, scope: !1469, inlinedAt: !1083)
!1469 = distinct !DILexicalBlock(scope: !1466, file: !3, line: 1025, column: 9)
!1470 = !DILocation(line: 1025, column: 9, scope: !1471, inlinedAt: !1083)
!1471 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 1025, column: 9)
!1472 = distinct !DILexicalBlock(scope: !1469, file: !3, line: 1025, column: 9)
!1473 = !DILocation(line: 1025, column: 9, scope: !1472, inlinedAt: !1083)
!1474 = distinct !{!1474, !1475, !1475}
!1475 = !DILocation(line: 1025, column: 9, scope: !1466)
!1476 = !DILocation(line: 1025, column: 9, scope: !1477, inlinedAt: !1083)
!1477 = distinct !DILexicalBlock(scope: !1471, file: !3, line: 1025, column: 9)
!1478 = !DILocation(line: 1027, column: 9, scope: !1479, inlinedAt: !1083)
!1479 = distinct !DILexicalBlock(scope: !1081, file: !3, line: 1027, column: 9)
!1480 = !DILocation(line: 1025, column: 9, scope: !1080, inlinedAt: !1083)
!1481 = !DILocation(line: 1026, column: 20, scope: !1081, inlinedAt: !1083)
!1482 = !DILocation(line: 1028, column: 7, scope: !1081, inlinedAt: !1083)
!1483 = !DILocation(line: 1031, column: 7, scope: !1068, inlinedAt: !1083)
!1484 = !DILocation(line: 1032, column: 12, scope: !1485, inlinedAt: !1083)
!1485 = distinct !DILexicalBlock(scope: !1068, file: !3, line: 1032, column: 11)
!1486 = !DILocation(line: 1032, column: 18, scope: !1485, inlinedAt: !1083)
!1487 = !DILocation(line: 1032, column: 29, scope: !1485, inlinedAt: !1083)
!1488 = !DILocation(line: 1032, column: 32, scope: !1485, inlinedAt: !1083)
!1489 = !DILocation(line: 1032, column: 46, scope: !1485, inlinedAt: !1083)
!1490 = !DILocation(line: 1032, column: 38, scope: !1485, inlinedAt: !1083)
!1491 = !DILocation(line: 1032, column: 54, scope: !1485, inlinedAt: !1083)
!1492 = !DILocation(line: 1032, column: 62, scope: !1485, inlinedAt: !1083)
!1493 = !DILocation(line: 1032, column: 69, scope: !1485, inlinedAt: !1083)
!1494 = !DILocation(line: 1032, column: 11, scope: !1068, inlinedAt: !1083)
!1495 = !DILocation(line: 1035, column: 20, scope: !1496, inlinedAt: !1083)
!1496 = distinct !DILexicalBlock(scope: !1485, file: !3, line: 1032, column: 78)
!1497 = !DILocation(line: 1036, column: 7, scope: !1496, inlinedAt: !1083)
!1498 = !DILocation(line: 1042, column: 1, scope: !1051, inlinedAt: !1083)
!1499 = !DILocation(line: 127, column: 9, scope: !327)
!1500 = !DILocation(line: 442, column: 11, scope: !420)
!1501 = !DILocation(line: 442, column: 22, scope: !420)
!1502 = !DILocation(line: 442, column: 11, scope: !421)
!1503 = !DILocation(line: 447, column: 9, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1505, file: !3, line: 447, column: 9)
!1505 = distinct !DILexicalBlock(scope: !1506, file: !3, line: 447, column: 9)
!1506 = distinct !DILexicalBlock(scope: !420, file: !3, line: 442, column: 34)
!1507 = !{!619, !456, i64 256}
!1508 = !DILocation(line: 447, column: 9, scope: !1505)
!1509 = !DILocation(line: 448, column: 9, scope: !1506)
!1510 = !DILocation(line: 449, column: 9, scope: !1506)
!1511 = !DILocation(line: 450, column: 7, scope: !1506)
!1512 = !DILocation(line: 455, column: 13, scope: !418)
!1513 = !DILocation(line: 455, column: 24, scope: !418)
!1514 = !DILocation(line: 455, column: 13, scope: !419)
!1515 = !DILocation(line: 461, column: 24, scope: !417)
!1516 = !DILocation(line: 0, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !417, file: !3, line: 461, column: 29)
!1518 = !DILocation(line: 460, column: 17, scope: !417)
!1519 = !DILocation(line: 461, column: 11, scope: !417)
!1520 = !DILocation(line: 462, column: 30, scope: !1517)
!1521 = !DILocation(line: 463, column: 19, scope: !1517)
!1522 = !DILocation(line: 468, column: 13, scope: !1523)
!1523 = distinct !DILexicalBlock(scope: !1524, file: !3, line: 468, column: 13)
!1524 = distinct !DILexicalBlock(scope: !1517, file: !3, line: 468, column: 13)
!1525 = !{!619, !456, i64 224}
!1526 = !DILocation(line: 468, column: 13, scope: !1524)
!1527 = !DILocation(line: 462, column: 23, scope: !1517)
!1528 = !DILocation(line: 456, column: 17, scope: !417)
!1529 = !DILocation(line: 469, column: 21, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1517, file: !3, line: 469, column: 17)
!1531 = !DILocation(line: 469, column: 17, scope: !1517)
!1532 = distinct !{!1532, !1519, !1533}
!1533 = !DILocation(line: 472, column: 11, scope: !417)
!1534 = !DILocation(line: 473, column: 22, scope: !417)
!1535 = !DILocation(line: 475, column: 13, scope: !1536)
!1536 = distinct !DILexicalBlock(scope: !419, file: !3, line: 475, column: 13)
!1537 = !DILocation(line: 475, column: 13, scope: !419)
!1538 = !DILocation(line: 479, column: 16, scope: !419)
!1539 = !DILocation(line: 479, column: 26, scope: !419)
!1540 = !DILocation(line: 479, column: 9, scope: !419)
!1541 = !DILocation(line: 480, column: 11, scope: !427)
!1542 = !DILocation(line: 480, column: 24, scope: !427)
!1543 = !DILocation(line: 481, column: 11, scope: !427)
!1544 = !DILocation(line: 486, column: 11, scope: !1545)
!1545 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 486, column: 11)
!1546 = distinct !DILexicalBlock(scope: !427, file: !3, line: 486, column: 11)
!1547 = !DILocation(line: 486, column: 11, scope: !1546)
!1548 = !DILocation(line: 486, column: 11, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1550, file: !3, line: 486, column: 11)
!1550 = distinct !DILexicalBlock(scope: !1545, file: !3, line: 486, column: 11)
!1551 = !DILocation(line: 486, column: 11, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1553, file: !3, line: 486, column: 11)
!1553 = distinct !DILexicalBlock(scope: !1554, file: !3, line: 486, column: 11)
!1554 = distinct !DILexicalBlock(scope: !1549, file: !3, line: 486, column: 11)
!1555 = !DILocation(line: 487, column: 20, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !427, file: !3, line: 487, column: 15)
!1557 = !DILocation(line: 487, column: 26, scope: !1556)
!1558 = !DILocation(line: 487, column: 15, scope: !427)
!1559 = !DILocation(line: 490, column: 23, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1556, file: !3, line: 487, column: 41)
!1561 = !DILocation(line: 490, column: 13, scope: !1560)
!1562 = !DILocation(line: 492, column: 17, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !1560, file: !3, line: 492, column: 17)
!1564 = !DILocation(line: 492, column: 22, scope: !1563)
!1565 = !DILocation(line: 492, column: 17, scope: !1560)
!1566 = !DILocation(line: 493, column: 15, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1563, file: !3, line: 492, column: 31)
!1568 = !DILocation(line: 494, column: 13, scope: !1567)
!1569 = !DILocation(line: 496, column: 13, scope: !1560)
!1570 = !DILocation(line: 497, column: 13, scope: !1560)
!1571 = !DILocation(line: 501, column: 11, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1573, file: !3, line: 501, column: 11)
!1573 = distinct !DILexicalBlock(scope: !427, file: !3, line: 501, column: 11)
!1574 = !{!619, !456, i64 232}
!1575 = !DILocation(line: 501, column: 11, scope: !1573)
!1576 = !DILocation(line: 501, column: 11, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 501, column: 11)
!1578 = !DILocation(line: 501, column: 11, scope: !1579)
!1579 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 501, column: 11)
!1580 = !DILocation(line: 502, column: 19, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !427, file: !3, line: 502, column: 15)
!1582 = !DILocation(line: 502, column: 15, scope: !427)
!1583 = !DILocation(line: 504, column: 17, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1585, file: !3, line: 504, column: 17)
!1585 = distinct !DILexicalBlock(scope: !1581, file: !3, line: 502, column: 32)
!1586 = !DILocation(line: 504, column: 22, scope: !1584)
!1587 = !DILocation(line: 504, column: 17, scope: !1585)
!1588 = !DILocation(line: 505, column: 15, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !1584, file: !3, line: 504, column: 31)
!1590 = !DILocation(line: 506, column: 13, scope: !1589)
!1591 = !DILocation(line: 512, column: 19, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !427, file: !3, line: 512, column: 15)
!1593 = !DILocation(line: 0, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 522, column: 18)
!1595 = !DILocation(line: 512, column: 15, scope: !427)
!1596 = !DILocation(line: 514, column: 22, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1598, file: !3, line: 514, column: 17)
!1598 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 512, column: 30)
!1599 = !DILocation(line: 514, column: 17, scope: !1598)
!1600 = !DILocation(line: 515, column: 24, scope: !1601)
!1601 = distinct !DILexicalBlock(scope: !1597, file: !3, line: 514, column: 31)
!1602 = !DILocation(line: 515, column: 15, scope: !1601)
!1603 = !DILocation(line: 516, column: 13, scope: !1601)
!1604 = !DILocation(line: 518, column: 33, scope: !1598)
!1605 = !DILocation(line: 518, column: 31, scope: !1598)
!1606 = !DILocation(line: 527, column: 9, scope: !419)
!1607 = !DILocation(line: 524, column: 23, scope: !1594)
!1608 = !DILocation(line: 531, column: 13, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !419, file: !3, line: 531, column: 13)
!1610 = !DILocation(line: 531, column: 24, scope: !1609)
!1611 = !DILocation(line: 531, column: 13, scope: !419)
!1612 = !DILocation(line: 532, column: 20, scope: !1613)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !3, line: 532, column: 15)
!1614 = distinct !DILexicalBlock(scope: !1609, file: !3, line: 531, column: 38)
!1615 = !DILocation(line: 532, column: 33, scope: !1613)
!1616 = !DILocation(line: 532, column: 15, scope: !1614)
!1617 = !DILocation(line: 534, column: 32, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 532, column: 42)
!1619 = !DILocation(line: 534, column: 38, scope: !1618)
!1620 = !DILocation(line: 535, column: 11, scope: !1618)
!1621 = !DILocation(line: 538, column: 22, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !1623, file: !3, line: 538, column: 17)
!1623 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 535, column: 18)
!1624 = !DILocation(line: 538, column: 33, scope: !1622)
!1625 = !DILocation(line: 538, column: 30, scope: !1622)
!1626 = !DILocation(line: 538, column: 17, scope: !1623)
!1627 = !DILocation(line: 539, column: 27, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 538, column: 51)
!1629 = !DILocation(line: 540, column: 13, scope: !1628)
!1630 = !DILocation(line: 541, column: 13, scope: !1631)
!1631 = distinct !DILexicalBlock(scope: !1632, file: !3, line: 541, column: 13)
!1632 = distinct !DILexicalBlock(scope: !1623, file: !3, line: 541, column: 13)
!1633 = !DILocation(line: 541, column: 13, scope: !1632)
!1634 = !DILocation(line: 541, column: 13, scope: !1635)
!1635 = distinct !DILexicalBlock(scope: !1631, file: !3, line: 541, column: 13)
!1636 = !DILocation(line: 542, column: 17, scope: !1623)
!1637 = !DILocation(line: 548, column: 23, scope: !419)
!1638 = !DILocation(line: 549, column: 13, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !419, file: !3, line: 549, column: 13)
!1640 = !DILocation(line: 549, column: 13, scope: !419)
!1641 = !DILocation(line: 553, column: 9, scope: !419)
!1642 = !DILocation(line: 564, column: 19, scope: !423)
!1643 = !DILocation(line: 565, column: 15, scope: !423)
!1644 = !DILocation(line: 568, column: 15, scope: !1645)
!1645 = distinct !DILexicalBlock(scope: !423, file: !3, line: 568, column: 9)
!1646 = !DILocation(line: 568, column: 17, scope: !1645)
!1647 = !DILocation(line: 568, column: 9, scope: !423)
!1648 = !DILocation(line: 569, column: 7, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1645, file: !3, line: 568, column: 26)
!1650 = !DILocation(line: 570, column: 15, scope: !1649)
!1651 = !DILocation(line: 571, column: 5, scope: !1649)
!1652 = !DILocation(line: 576, column: 11, scope: !1653)
!1653 = distinct !DILexicalBlock(scope: !1654, file: !3, line: 576, column: 9)
!1654 = distinct !DILexicalBlock(scope: !424, file: !3, line: 572, column: 10)
!1655 = !DILocation(line: 576, column: 30, scope: !1653)
!1656 = !DILocation(line: 576, column: 9, scope: !1654)
!1657 = !DILocation(line: 577, column: 7, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1653, file: !3, line: 576, column: 42)
!1659 = !{!445, !447, i64 160}
!1660 = !DILocation(line: 578, column: 7, scope: !1658)
!1661 = !DILocation(line: 579, column: 21, scope: !1658)
!1662 = !DILocation(line: 579, column: 28, scope: !1658)
!1663 = !DILocation(line: 579, column: 36, scope: !1658)
!1664 = !DILocation(line: 579, column: 34, scope: !1658)
!1665 = !DILocation(line: 580, column: 38, scope: !1658)
!1666 = !DILocation(line: 580, column: 46, scope: !1658)
!1667 = !DILocation(line: 580, column: 60, scope: !1658)
!1668 = !DILocation(line: 579, column: 7, scope: !1658)
!1669 = !DILocation(line: 581, column: 5, scope: !1658)
!1670 = !DILocation(line: 582, column: 5, scope: !1654)
!1671 = !DILocation(line: 0, scope: !1672)
!1672 = distinct !DILexicalBlock(scope: !460, file: !3, line: 145, column: 26)
!1673 = !DILocation(line: 589, column: 3, scope: !327)
!1674 = !DILocation(line: 591, column: 3, scope: !327)
!1675 = !DILocation(line: 592, column: 1, scope: !327)
!1676 = !DILocation(line: 194, column: 43, scope: !291)
!1677 = !DILocation(line: 196, column: 2, scope: !291)
!1678 = !DILocation(line: 196, column: 10, scope: !291)
!1679 = !DILocation(line: 197, column: 2, scope: !291)
!1680 = !DILocation(line: 198, column: 2, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1682, file: !292, line: 198, column: 2)
!1682 = distinct !DILexicalBlock(scope: !291, file: !292, line: 198, column: 2)
!1683 = !DILocation(line: 199, column: 2, scope: !291)
!1684 = !DILocation(line: 200, column: 1, scope: !291)
!1685 = distinct !DISubprogram(name: "tcp_input_delayed_close", scope: !3, file: !3, line: 600, type: !1686, isLocal: true, isDefinition: true, scopeLine: 601, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1688)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!40, !88}
!1688 = !{!1689}
!1689 = !DILocalVariable(name: "pcb", arg: 1, scope: !1685, file: !3, line: 600, type: !88)
!1690 = !DILocation(line: 600, column: 41, scope: !1685)
!1691 = !DILocation(line: 602, column: 3, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !1693, file: !3, line: 602, column: 3)
!1693 = distinct !DILexicalBlock(scope: !1685, file: !3, line: 602, column: 3)
!1694 = !DILocation(line: 602, column: 3, scope: !1693)
!1695 = !DILocation(line: 602, column: 3, scope: !1696)
!1696 = distinct !DILexicalBlock(scope: !1697, file: !3, line: 602, column: 3)
!1697 = distinct !DILexicalBlock(scope: !1692, file: !3, line: 602, column: 3)
!1698 = !DILocation(line: 602, column: 3, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !1700, file: !3, line: 602, column: 3)
!1700 = distinct !DILexicalBlock(scope: !1701, file: !3, line: 602, column: 3)
!1701 = distinct !DILexicalBlock(scope: !1696, file: !3, line: 602, column: 3)
!1702 = !DILocation(line: 604, column: 7, scope: !1703)
!1703 = distinct !DILexicalBlock(scope: !1685, file: !3, line: 604, column: 7)
!1704 = !DILocation(line: 604, column: 18, scope: !1703)
!1705 = !DILocation(line: 604, column: 7, scope: !1685)
!1706 = !DILocation(line: 607, column: 16, scope: !1707)
!1707 = distinct !DILexicalBlock(scope: !1708, file: !3, line: 607, column: 9)
!1708 = distinct !DILexicalBlock(scope: !1703, file: !3, line: 604, column: 31)
!1709 = !DILocation(line: 607, column: 22, scope: !1707)
!1710 = !DILocation(line: 607, column: 9, scope: !1708)
!1711 = !DILocation(line: 611, column: 7, scope: !1712)
!1712 = distinct !DILexicalBlock(scope: !1713, file: !3, line: 611, column: 7)
!1713 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 611, column: 7)
!1714 = distinct !DILexicalBlock(scope: !1707, file: !3, line: 607, column: 38)
!1715 = !DILocation(line: 611, column: 7, scope: !1713)
!1716 = !DILocation(line: 613, column: 5, scope: !1708)
!1717 = !DILocation(line: 614, column: 5, scope: !1708)
!1718 = !DILocation(line: 615, column: 5, scope: !1708)
!1719 = !DILocation(line: 0, scope: !1685)
!1720 = !DILocation(line: 618, column: 1, scope: !1685)
!1721 = distinct !DISubprogram(name: "tcp_trigger_input_pcb_close", scope: !3, file: !3, line: 2029, type: !1722, isLocal: false, isDefinition: true, scopeLine: 2030, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1724)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{null}
!1724 = !{}
!1725 = !DILocation(line: 2031, column: 14, scope: !1721)
!1726 = !DILocation(line: 2032, column: 1, scope: !1721)
!1727 = distinct !DISubprogram(name: "tcp_parseopt", scope: !3, file: !3, line: 1909, type: !750, isLocal: true, isDefinition: true, scopeLine: 1910, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1728)
!1728 = !{!1729, !1730, !1731, !1732}
!1729 = !DILocalVariable(name: "pcb", arg: 1, scope: !1727, file: !3, line: 1909, type: !88)
!1730 = !DILocalVariable(name: "data", scope: !1727, file: !3, line: 1911, type: !83)
!1731 = !DILocalVariable(name: "mss", scope: !1727, file: !3, line: 1912, type: !66)
!1732 = !DILocalVariable(name: "opt", scope: !1733, file: !3, line: 1922, type: !83)
!1733 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 1921, column: 56)
!1734 = distinct !DILexicalBlock(scope: !1735, file: !3, line: 1921, column: 5)
!1735 = distinct !DILexicalBlock(scope: !1736, file: !3, line: 1921, column: 5)
!1736 = distinct !DILexicalBlock(scope: !1737, file: !3, line: 1920, column: 27)
!1737 = distinct !DILexicalBlock(scope: !1727, file: !3, line: 1920, column: 7)
!1738 = !DILocation(line: 1909, column: 30, scope: !1727)
!1739 = !DILocation(line: 1917, column: 3, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1741, file: !3, line: 1917, column: 3)
!1741 = distinct !DILexicalBlock(scope: !1727, file: !3, line: 1917, column: 3)
!1742 = !DILocation(line: 1917, column: 3, scope: !1741)
!1743 = !DILocation(line: 1917, column: 3, scope: !1744)
!1744 = distinct !DILexicalBlock(scope: !1745, file: !3, line: 1917, column: 3)
!1745 = distinct !DILexicalBlock(scope: !1740, file: !3, line: 1917, column: 3)
!1746 = !DILocation(line: 1917, column: 3, scope: !1747)
!1747 = distinct !DILexicalBlock(scope: !1748, file: !3, line: 1917, column: 3)
!1748 = distinct !DILexicalBlock(scope: !1749, file: !3, line: 1917, column: 3)
!1749 = distinct !DILexicalBlock(scope: !1744, file: !3, line: 1917, column: 3)
!1750 = !DILocation(line: 1920, column: 7, scope: !1737)
!1751 = !DILocation(line: 1920, column: 21, scope: !1737)
!1752 = !DILocation(line: 1920, column: 7, scope: !1727)
!1753 = !DILocation(line: 1921, column: 5, scope: !1735)
!1754 = !DILocation(line: 1890, column: 28, scope: !1755, inlinedAt: !1765)
!1755 = distinct !DISubprogram(name: "tcp_get_next_optbyte", scope: !3, file: !3, line: 1888, type: !1756, isLocal: true, isDefinition: true, scopeLine: 1889, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1758)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!83}
!1758 = !{!1759, !1760, !1763}
!1759 = !DILocalVariable(name: "optidx", scope: !1755, file: !3, line: 1890, type: !66)
!1760 = !DILocalVariable(name: "opts", scope: !1761, file: !3, line: 1892, type: !87)
!1761 = distinct !DILexicalBlock(scope: !1762, file: !3, line: 1891, column: 59)
!1762 = distinct !DILexicalBlock(scope: !1755, file: !3, line: 1891, column: 7)
!1763 = !DILocalVariable(name: "idx", scope: !1764, file: !3, line: 1895, type: !83)
!1764 = distinct !DILexicalBlock(scope: !1762, file: !3, line: 1894, column: 10)
!1765 = distinct !DILocation(line: 1922, column: 18, scope: !1733)
!1766 = !DILocation(line: 1890, column: 9, scope: !1755, inlinedAt: !1765)
!1767 = !DILocation(line: 1891, column: 40, scope: !1762, inlinedAt: !1765)
!1768 = !DILocation(line: 1891, column: 29, scope: !1762, inlinedAt: !1765)
!1769 = !DILocation(line: 0, scope: !1733)
!1770 = !DILocation(line: 1892, column: 11, scope: !1761, inlinedAt: !1765)
!1771 = !DILocation(line: 1893, column: 12, scope: !1761, inlinedAt: !1765)
!1772 = !DILocation(line: 1895, column: 30, scope: !1764, inlinedAt: !1765)
!1773 = !DILocation(line: 1896, column: 12, scope: !1764, inlinedAt: !1765)
!1774 = !DILocation(line: 1895, column: 10, scope: !1764, inlinedAt: !1765)
!1775 = !DILocation(line: 0, scope: !1764, inlinedAt: !1765)
!1776 = !DILocation(line: 1898, column: 1, scope: !1755, inlinedAt: !1765)
!1777 = !DILocation(line: 1922, column: 12, scope: !1733)
!1778 = !DILocation(line: 1923, column: 7, scope: !1733)
!1779 = !DILocation(line: 1890, column: 28, scope: !1755, inlinedAt: !1780)
!1780 = distinct !DILocation(line: 1934, column: 15, scope: !1781)
!1781 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 1934, column: 15)
!1782 = distinct !DILexicalBlock(scope: !1733, file: !3, line: 1923, column: 20)
!1783 = !DILocation(line: 1890, column: 9, scope: !1755, inlinedAt: !1780)
!1784 = !DILocation(line: 1891, column: 40, scope: !1762, inlinedAt: !1780)
!1785 = !DILocation(line: 1891, column: 29, scope: !1762, inlinedAt: !1780)
!1786 = !DILocation(line: 0, scope: !1781)
!1787 = !DILocation(line: 1892, column: 11, scope: !1761, inlinedAt: !1780)
!1788 = !DILocation(line: 1893, column: 12, scope: !1761, inlinedAt: !1780)
!1789 = !DILocation(line: 1895, column: 30, scope: !1764, inlinedAt: !1780)
!1790 = !DILocation(line: 1896, column: 12, scope: !1764, inlinedAt: !1780)
!1791 = !DILocation(line: 1895, column: 10, scope: !1764, inlinedAt: !1780)
!1792 = !DILocation(line: 0, scope: !1764, inlinedAt: !1780)
!1793 = !DILocation(line: 1898, column: 1, scope: !1755, inlinedAt: !1780)
!1794 = !DILocation(line: 1934, column: 38, scope: !1781)
!1795 = !DILocation(line: 1934, column: 62, scope: !1781)
!1796 = !DILocation(line: 1934, column: 66, scope: !1781)
!1797 = !DILocation(line: 1934, column: 81, scope: !1781)
!1798 = !DILocation(line: 1934, column: 105, scope: !1781)
!1799 = !DILocation(line: 1934, column: 15, scope: !1782)
!1800 = !DILocation(line: 1890, column: 28, scope: !1755, inlinedAt: !1801)
!1801 = distinct !DILocation(line: 1940, column: 25, scope: !1782)
!1802 = !DILocation(line: 1890, column: 9, scope: !1755, inlinedAt: !1801)
!1803 = !DILocation(line: 1891, column: 40, scope: !1762, inlinedAt: !1801)
!1804 = !DILocation(line: 1891, column: 29, scope: !1762, inlinedAt: !1801)
!1805 = !DILocation(line: 0, scope: !1782)
!1806 = !DILocation(line: 1895, column: 30, scope: !1764, inlinedAt: !1801)
!1807 = !DILocation(line: 1896, column: 12, scope: !1764, inlinedAt: !1801)
!1808 = !DILocation(line: 1895, column: 10, scope: !1764, inlinedAt: !1801)
!1809 = !DILocation(line: 0, scope: !1764, inlinedAt: !1801)
!1810 = !DILocation(line: 1898, column: 1, scope: !1755, inlinedAt: !1801)
!1811 = !DILocation(line: 1940, column: 25, scope: !1782)
!1812 = !DILocation(line: 1940, column: 48, scope: !1782)
!1813 = !DILocation(line: 1890, column: 28, scope: !1755, inlinedAt: !1814)
!1814 = distinct !DILocation(line: 1941, column: 18, scope: !1782)
!1815 = !DILocation(line: 1890, column: 9, scope: !1755, inlinedAt: !1814)
!1816 = !DILocation(line: 1891, column: 29, scope: !1762, inlinedAt: !1814)
!1817 = !DILocation(line: 1892, column: 11, scope: !1761, inlinedAt: !1801)
!1818 = !DILocation(line: 1893, column: 12, scope: !1761, inlinedAt: !1801)
!1819 = !DILocation(line: 1891, column: 40, scope: !1762, inlinedAt: !1814)
!1820 = !DILocation(line: 1891, column: 7, scope: !1755, inlinedAt: !1814)
!1821 = !DILocation(line: 1892, column: 11, scope: !1761, inlinedAt: !1814)
!1822 = !DILocation(line: 1893, column: 12, scope: !1761, inlinedAt: !1814)
!1823 = !DILocation(line: 1891, column: 33, scope: !1762, inlinedAt: !1814)
!1824 = !DILocation(line: 1895, column: 30, scope: !1764, inlinedAt: !1814)
!1825 = !DILocation(line: 1896, column: 12, scope: !1764, inlinedAt: !1814)
!1826 = !DILocation(line: 1895, column: 10, scope: !1764, inlinedAt: !1814)
!1827 = !DILocation(line: 0, scope: !1764, inlinedAt: !1814)
!1828 = !DILocation(line: 1898, column: 1, scope: !1755, inlinedAt: !1814)
!1829 = !DILocation(line: 1941, column: 18, scope: !1782)
!1830 = !DILocation(line: 1941, column: 15, scope: !1782)
!1831 = !DILocation(line: 1912, column: 9, scope: !1727)
!1832 = !DILocation(line: 1943, column: 39, scope: !1782)
!1833 = !DILocation(line: 1943, column: 22, scope: !1782)
!1834 = !DILocation(line: 1943, column: 20, scope: !1782)
!1835 = !DILocation(line: 1944, column: 11, scope: !1782)
!1836 = !DILocation(line: 1890, column: 28, scope: !1755, inlinedAt: !1837)
!1837 = distinct !DILocation(line: 1948, column: 15, scope: !1838)
!1838 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 1948, column: 15)
!1839 = !DILocation(line: 1890, column: 9, scope: !1755, inlinedAt: !1837)
!1840 = !DILocation(line: 1891, column: 40, scope: !1762, inlinedAt: !1837)
!1841 = !DILocation(line: 1891, column: 29, scope: !1762, inlinedAt: !1837)
!1842 = !DILocation(line: 0, scope: !1838)
!1843 = !DILocation(line: 1892, column: 11, scope: !1761, inlinedAt: !1837)
!1844 = !DILocation(line: 1893, column: 12, scope: !1761, inlinedAt: !1837)
!1845 = !DILocation(line: 1895, column: 30, scope: !1764, inlinedAt: !1837)
!1846 = !DILocation(line: 1896, column: 12, scope: !1764, inlinedAt: !1837)
!1847 = !DILocation(line: 1895, column: 10, scope: !1764, inlinedAt: !1837)
!1848 = !DILocation(line: 0, scope: !1764, inlinedAt: !1837)
!1849 = !DILocation(line: 1898, column: 1, scope: !1755, inlinedAt: !1837)
!1850 = !DILocation(line: 1948, column: 38, scope: !1838)
!1851 = !DILocation(line: 1948, column: 103, scope: !1838)
!1852 = !DILocation(line: 1948, column: 61, scope: !1838)
!1853 = !DILocation(line: 1890, column: 28, scope: !1755, inlinedAt: !1854)
!1854 = distinct !DILocation(line: 1954, column: 18, scope: !1782)
!1855 = !DILocation(line: 1890, column: 9, scope: !1755, inlinedAt: !1854)
!1856 = !DILocation(line: 1891, column: 40, scope: !1762, inlinedAt: !1854)
!1857 = !DILocation(line: 1891, column: 29, scope: !1762, inlinedAt: !1854)
!1858 = !DILocation(line: 1892, column: 11, scope: !1761, inlinedAt: !1854)
!1859 = !DILocation(line: 1893, column: 12, scope: !1761, inlinedAt: !1854)
!1860 = !DILocation(line: 1895, column: 30, scope: !1764, inlinedAt: !1854)
!1861 = !DILocation(line: 1896, column: 12, scope: !1764, inlinedAt: !1854)
!1862 = !DILocation(line: 1895, column: 10, scope: !1764, inlinedAt: !1854)
!1863 = !DILocation(line: 0, scope: !1764, inlinedAt: !1854)
!1864 = !DILocation(line: 1898, column: 1, scope: !1755, inlinedAt: !1854)
!1865 = !DILocation(line: 1911, column: 8, scope: !1727)
!1866 = !DILocation(line: 1957, column: 33, scope: !1867)
!1867 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 1957, column: 15)
!1868 = !DILocation(line: 1957, column: 43, scope: !1867)
!1869 = !DILocation(line: 1957, column: 49, scope: !1867)
!1870 = !DILocation(line: 1957, column: 15, scope: !1782)
!1871 = !DILocation(line: 1959, column: 17, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1867, file: !3, line: 1957, column: 66)
!1873 = !DILocation(line: 0, scope: !1872)
!1874 = !{!619, !448, i64 272}
!1875 = !DILocation(line: 1962, column: 28, scope: !1872)
!1876 = !{!619, !448, i64 273}
!1877 = !DILocation(line: 1963, column: 13, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1872, file: !3, line: 1963, column: 13)
!1879 = !DILocation(line: 1965, column: 13, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1881, file: !3, line: 1965, column: 13)
!1881 = distinct !DILexicalBlock(scope: !1872, file: !3, line: 1965, column: 13)
!1882 = !DILocation(line: 1965, column: 13, scope: !1881)
!1883 = !DILocation(line: 1965, column: 13, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1885, file: !3, line: 1965, column: 13)
!1885 = distinct !DILexicalBlock(scope: !1880, file: !3, line: 1965, column: 13)
!1886 = !DILocation(line: 1965, column: 13, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1888, file: !3, line: 1965, column: 13)
!1888 = distinct !DILexicalBlock(scope: !1889, file: !3, line: 1965, column: 13)
!1889 = distinct !DILexicalBlock(scope: !1884, file: !3, line: 1965, column: 13)
!1890 = !DILocation(line: 1966, column: 13, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1892, file: !3, line: 1966, column: 13)
!1892 = distinct !DILexicalBlock(scope: !1872, file: !3, line: 1966, column: 13)
!1893 = !DILocation(line: 1966, column: 13, scope: !1892)
!1894 = !DILocation(line: 1966, column: 13, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !1896, file: !3, line: 1966, column: 13)
!1896 = distinct !DILexicalBlock(scope: !1891, file: !3, line: 1966, column: 13)
!1897 = !DILocation(line: 1966, column: 13, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1899, file: !3, line: 1966, column: 13)
!1899 = distinct !DILexicalBlock(scope: !1900, file: !3, line: 1966, column: 13)
!1900 = distinct !DILexicalBlock(scope: !1895, file: !3, line: 1966, column: 13)
!1901 = !DILocation(line: 1967, column: 45, scope: !1872)
!1902 = !DILocation(line: 1967, column: 26, scope: !1872)
!1903 = !DILocation(line: 1968, column: 11, scope: !1872)
!1904 = !DILocation(line: 1890, column: 9, scope: !1755, inlinedAt: !1905)
!1905 = distinct !DILocation(line: 2013, column: 18, scope: !1782)
!1906 = !DILocation(line: 1891, column: 40, scope: !1762, inlinedAt: !1905)
!1907 = !DILocation(line: 1891, column: 29, scope: !1762, inlinedAt: !1905)
!1908 = !DILocation(line: 1892, column: 11, scope: !1761, inlinedAt: !1905)
!1909 = !DILocation(line: 1893, column: 12, scope: !1761, inlinedAt: !1905)
!1910 = !DILocation(line: 1895, column: 30, scope: !1764, inlinedAt: !1905)
!1911 = !DILocation(line: 1896, column: 12, scope: !1764, inlinedAt: !1905)
!1912 = !DILocation(line: 1895, column: 10, scope: !1764, inlinedAt: !1905)
!1913 = !DILocation(line: 0, scope: !1764, inlinedAt: !1905)
!1914 = !DILocation(line: 1898, column: 1, scope: !1755, inlinedAt: !1905)
!1915 = !DILocation(line: 2014, column: 20, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 2014, column: 15)
!1917 = !DILocation(line: 2014, column: 15, scope: !1782)
!1918 = !DILocation(line: 2014, column: 15, scope: !1916)
!1919 = !DILocation(line: 2022, column: 22, scope: !1782)
!1920 = !DILocation(line: 2023, column: 7, scope: !1782)
!1921 = !DILocation(line: 1921, column: 26, scope: !1734)
!1922 = !DILocation(line: 1921, column: 37, scope: !1734)
!1923 = !DILocation(line: 2026, column: 1, scope: !1727)
!1924 = distinct !DISubprogram(name: "tcp_receive", scope: !3, file: !3, line: 1141, type: !750, isLocal: true, isDefinition: true, scopeLine: 1142, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1925)
!1925 = !{!1926, !1927, !1928, !1929, !1930, !1936, !1941, !1942, !1947, !1948, !1949, !1950, !1960, !1962, !1964, !1966, !1970, !1971, !1979, !1985}
!1926 = !DILocalVariable(name: "pcb", arg: 1, scope: !1924, file: !3, line: 1141, type: !88)
!1927 = !DILocalVariable(name: "m", scope: !1924, file: !3, line: 1143, type: !139)
!1928 = !DILocalVariable(name: "right_wnd_edge", scope: !1924, file: !3, line: 1144, type: !75)
!1929 = !DILocalVariable(name: "found_dupack", scope: !1924, file: !3, line: 1145, type: !40)
!1930 = !DILocalVariable(name: "acked", scope: !1931, file: !3, line: 1230, type: !135)
!1931 = distinct !DILexicalBlock(scope: !1932, file: !3, line: 1228, column: 72)
!1932 = distinct !DILexicalBlock(scope: !1933, file: !3, line: 1228, column: 16)
!1933 = distinct !DILexicalBlock(scope: !1934, file: !3, line: 1198, column: 9)
!1934 = distinct !DILexicalBlock(scope: !1935, file: !3, line: 1150, column: 24)
!1935 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 1150, column: 7)
!1936 = !DILocalVariable(name: "increase", scope: !1937, file: !3, line: 1258, type: !135)
!1937 = distinct !DILexicalBlock(scope: !1938, file: !3, line: 1257, column: 40)
!1938 = distinct !DILexicalBlock(scope: !1939, file: !3, line: 1257, column: 13)
!1939 = distinct !DILexicalBlock(scope: !1940, file: !3, line: 1256, column: 38)
!1940 = distinct !DILexicalBlock(scope: !1931, file: !3, line: 1256, column: 11)
!1941 = !DILocalVariable(name: "num_seg", scope: !1937, file: !3, line: 1260, type: !83)
!1942 = !DILocalVariable(name: "p", scope: !1943, file: !3, line: 1425, type: !172)
!1943 = distinct !DILexicalBlock(scope: !1944, file: !3, line: 1404, column: 71)
!1944 = distinct !DILexicalBlock(scope: !1945, file: !3, line: 1404, column: 9)
!1945 = distinct !DILexicalBlock(scope: !1946, file: !3, line: 1373, column: 50)
!1946 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 1373, column: 7)
!1947 = !DILocalVariable(name: "off32", scope: !1943, file: !3, line: 1426, type: !75)
!1948 = !DILocalVariable(name: "new_tot_len", scope: !1943, file: !3, line: 1427, type: !66)
!1949 = !DILocalVariable(name: "off", scope: !1943, file: !3, line: 1427, type: !66)
!1950 = !DILocalVariable(name: "old_ooseq", scope: !1951, file: !3, line: 1498, type: !166)
!1951 = distinct !DILexicalBlock(scope: !1952, file: !3, line: 1497, column: 40)
!1952 = distinct !DILexicalBlock(scope: !1953, file: !3, line: 1491, column: 51)
!1953 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 1491, column: 15)
!1954 = distinct !DILexicalBlock(scope: !1955, file: !3, line: 1490, column: 33)
!1955 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 1490, column: 13)
!1956 = distinct !DILexicalBlock(scope: !1957, file: !3, line: 1459, column: 34)
!1957 = distinct !DILexicalBlock(scope: !1958, file: !3, line: 1459, column: 11)
!1958 = distinct !DILexicalBlock(scope: !1959, file: !3, line: 1458, column: 59)
!1959 = distinct !DILexicalBlock(scope: !1945, file: !3, line: 1457, column: 9)
!1960 = !DILocalVariable(name: "next", scope: !1961, file: !3, line: 1503, type: !166)
!1961 = distinct !DILexicalBlock(scope: !1953, file: !3, line: 1502, column: 18)
!1962 = !DILocalVariable(name: "tmp", scope: !1963, file: !3, line: 1509, type: !166)
!1963 = distinct !DILexicalBlock(scope: !1961, file: !3, line: 1508, column: 66)
!1964 = !DILocalVariable(name: "cseg", scope: !1965, file: !3, line: 1575, type: !166)
!1965 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 1573, column: 59)
!1966 = !DILocalVariable(name: "next", scope: !1967, file: !3, line: 1676, type: !166)
!1967 = distinct !DILexicalBlock(scope: !1968, file: !3, line: 1658, column: 16)
!1968 = distinct !DILexicalBlock(scope: !1969, file: !3, line: 1649, column: 13)
!1969 = distinct !DILexicalBlock(scope: !1957, file: !3, line: 1644, column: 14)
!1970 = !DILocalVariable(name: "prev", scope: !1967, file: !3, line: 1676, type: !166)
!1971 = !DILocalVariable(name: "cseg", scope: !1972, file: !3, line: 1687, type: !166)
!1972 = distinct !DILexicalBlock(scope: !1973, file: !3, line: 1683, column: 42)
!1973 = distinct !DILexicalBlock(scope: !1974, file: !3, line: 1683, column: 19)
!1974 = distinct !DILexicalBlock(scope: !1975, file: !3, line: 1678, column: 47)
!1975 = distinct !DILexicalBlock(scope: !1976, file: !3, line: 1678, column: 17)
!1976 = distinct !DILexicalBlock(scope: !1977, file: !3, line: 1677, column: 68)
!1977 = distinct !DILexicalBlock(scope: !1978, file: !3, line: 1677, column: 11)
!1978 = distinct !DILexicalBlock(scope: !1967, file: !3, line: 1677, column: 11)
!1979 = !DILocalVariable(name: "cseg", scope: !1980, file: !3, line: 1710, type: !166)
!1980 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1705, column: 61)
!1981 = distinct !DILexicalBlock(scope: !1982, file: !3, line: 1705, column: 21)
!1982 = distinct !DILexicalBlock(scope: !1983, file: !3, line: 1704, column: 33)
!1983 = distinct !DILexicalBlock(scope: !1984, file: !3, line: 1704, column: 19)
!1984 = distinct !DILexicalBlock(scope: !1975, file: !3, line: 1703, column: 20)
!1985 = !DILocalVariable(name: "cseg", scope: !1986, file: !3, line: 1726, type: !166)
!1986 = distinct !DILexicalBlock(scope: !1987, file: !3, line: 1720, column: 95)
!1987 = distinct !DILexicalBlock(scope: !1988, file: !3, line: 1720, column: 21)
!1988 = distinct !DILexicalBlock(scope: !1983, file: !3, line: 1717, column: 22)
!1989 = !DILocation(line: 1141, column: 29, scope: !1924)
!1990 = !DILocation(line: 1145, column: 7, scope: !1924)
!1991 = !DILocation(line: 1147, column: 3, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1993, file: !3, line: 1147, column: 3)
!1993 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 1147, column: 3)
!1994 = !DILocation(line: 1147, column: 3, scope: !1993)
!1995 = !DILocation(line: 1147, column: 3, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 1147, column: 3)
!1997 = distinct !DILexicalBlock(scope: !1992, file: !3, line: 1147, column: 3)
!1998 = !DILocation(line: 1147, column: 3, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !2000, file: !3, line: 1147, column: 3)
!2000 = distinct !DILexicalBlock(scope: !2001, file: !3, line: 1147, column: 3)
!2001 = distinct !DILexicalBlock(scope: !1996, file: !3, line: 1147, column: 3)
!2002 = !DILocation(line: 1148, column: 3, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 1148, column: 3)
!2004 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 1148, column: 3)
!2005 = !DILocation(line: 1148, column: 3, scope: !2004)
!2006 = !DILocation(line: 1148, column: 3, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !2008, file: !3, line: 1148, column: 3)
!2008 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 1148, column: 3)
!2009 = !DILocation(line: 1148, column: 3, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !2011, file: !3, line: 1148, column: 3)
!2011 = distinct !DILexicalBlock(scope: !2012, file: !3, line: 1148, column: 3)
!2012 = distinct !DILexicalBlock(scope: !2007, file: !3, line: 1148, column: 3)
!2013 = !DILocation(line: 1150, column: 7, scope: !1935)
!2014 = !DILocation(line: 1150, column: 13, scope: !1935)
!2015 = !DILocation(line: 1150, column: 7, scope: !1924)
!2016 = !DILocation(line: 1151, column: 27, scope: !1934)
!2017 = !DILocation(line: 1151, column: 42, scope: !1934)
!2018 = !DILocation(line: 1151, column: 35, scope: !1934)
!2019 = !DILocation(line: 1144, column: 9, scope: !1924)
!2020 = !DILocation(line: 1154, column: 9, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !1934, file: !3, line: 1154, column: 9)
!2022 = !DILocation(line: 1154, column: 41, scope: !2021)
!2023 = !DILocation(line: 1155, column: 23, scope: !2021)
!2024 = !DILocation(line: 0, scope: !2021)
!2025 = !DILocation(line: 1155, column: 35, scope: !2021)
!2026 = !DILocation(line: 1155, column: 32, scope: !2021)
!2027 = !DILocation(line: 1156, column: 23, scope: !2021)
!2028 = !DILocation(line: 1156, column: 32, scope: !2021)
!2029 = !DILocation(line: 1156, column: 42, scope: !2021)
!2030 = !DILocation(line: 1156, column: 74, scope: !2021)
!2031 = !DILocation(line: 1154, column: 9, scope: !1934)
!2032 = !DILocation(line: 1157, column: 22, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2021, file: !3, line: 1156, column: 91)
!2034 = !DILocation(line: 1157, column: 20, scope: !2033)
!2035 = !DILocation(line: 1160, column: 16, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2033, file: !3, line: 1160, column: 11)
!2037 = !DILocation(line: 1160, column: 28, scope: !2036)
!2038 = !DILocation(line: 1160, column: 11, scope: !2033)
!2039 = !DILocation(line: 1161, column: 26, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2036, file: !3, line: 1160, column: 44)
!2041 = !DILocation(line: 1162, column: 7, scope: !2040)
!2042 = !DILocation(line: 1163, column: 20, scope: !2033)
!2043 = !DILocation(line: 1164, column: 22, scope: !2033)
!2044 = !DILocation(line: 1164, column: 20, scope: !2033)
!2045 = !DILocation(line: 1175, column: 5, scope: !2033)
!2046 = !DILocation(line: 1198, column: 9, scope: !1933)
!2047 = !DILocation(line: 1198, column: 9, scope: !1934)
!2048 = !DILocation(line: 1200, column: 11, scope: !2049)
!2049 = distinct !DILexicalBlock(scope: !2050, file: !3, line: 1200, column: 11)
!2050 = distinct !DILexicalBlock(scope: !1933, file: !3, line: 1198, column: 43)
!2051 = !DILocation(line: 1200, column: 18, scope: !2049)
!2052 = !DILocation(line: 1202, column: 26, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2054, file: !3, line: 1202, column: 13)
!2054 = distinct !DILexicalBlock(scope: !2049, file: !3, line: 1200, column: 24)
!2055 = !DILocation(line: 1202, column: 41, scope: !2053)
!2056 = !DILocation(line: 1200, column: 11, scope: !2050)
!2057 = !DILocation(line: 1204, column: 20, scope: !2058)
!2058 = distinct !DILexicalBlock(scope: !2059, file: !3, line: 1204, column: 15)
!2059 = distinct !DILexicalBlock(scope: !2053, file: !3, line: 1202, column: 60)
!2060 = !DILocation(line: 1204, column: 26, scope: !2058)
!2061 = !DILocation(line: 1206, column: 30, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !2063, file: !3, line: 1206, column: 17)
!2063 = distinct !DILexicalBlock(scope: !2058, file: !3, line: 1204, column: 32)
!2064 = !DILocation(line: 1204, column: 15, scope: !2059)
!2065 = !DILocation(line: 1208, column: 31, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !2067, file: !3, line: 1208, column: 19)
!2067 = distinct !DILexicalBlock(scope: !2062, file: !3, line: 1206, column: 40)
!2068 = !{!619, !448, i64 127}
!2069 = !DILocation(line: 1208, column: 44, scope: !2066)
!2070 = !DILocation(line: 1208, column: 19, scope: !2067)
!2071 = !DILocation(line: 1209, column: 17, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !2066, file: !3, line: 1208, column: 60)
!2073 = !DILocation(line: 1211, column: 32, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2067, file: !3, line: 1211, column: 19)
!2075 = !DILocation(line: 1211, column: 19, scope: !2067)
!2076 = !DILocation(line: 1213, column: 17, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2078, file: !3, line: 1213, column: 17)
!2078 = distinct !DILexicalBlock(scope: !2079, file: !3, line: 1213, column: 17)
!2079 = distinct !DILexicalBlock(scope: !2074, file: !3, line: 1211, column: 37)
!2080 = !DILocation(line: 1213, column: 17, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2077, file: !3, line: 1213, column: 17)
!2082 = !DILocation(line: 1217, column: 17, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2084, file: !3, line: 1215, column: 38)
!2084 = distinct !DILexicalBlock(scope: !2067, file: !3, line: 1215, column: 19)
!2085 = !DILocation(line: 1215, column: 32, scope: !2084)
!2086 = !DILocation(line: 1215, column: 19, scope: !2067)
!2087 = !DILocation(line: 1226, column: 14, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !2089, file: !3, line: 1225, column: 26)
!2089 = distinct !DILexicalBlock(scope: !2050, file: !3, line: 1225, column: 11)
!2090 = !DILocation(line: 1226, column: 22, scope: !2088)
!2091 = !DILocation(line: 1227, column: 7, scope: !2088)
!2092 = !DILocation(line: 1228, column: 16, scope: !1932)
!2093 = !DILocation(line: 1228, column: 16, scope: !1933)
!2094 = !DILocation(line: 1235, column: 16, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !1931, file: !3, line: 1235, column: 11)
!2096 = !DILocation(line: 1235, column: 22, scope: !2095)
!2097 = !DILocation(line: 1235, column: 11, scope: !1931)
!2098 = !DILocation(line: 1257, column: 18, scope: !1938)
!2099 = !DILocation(line: 1257, column: 30, scope: !1938)
!2100 = !{!619, !489, i64 136}
!2101 = !DILocation(line: 1236, column: 9, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2103, file: !3, line: 1236, column: 9)
!2103 = distinct !DILexicalBlock(scope: !2095, file: !3, line: 1235, column: 33)
!2104 = !DILocation(line: 1237, column: 26, scope: !2103)
!2105 = !DILocation(line: 1237, column: 14, scope: !2103)
!2106 = !DILocation(line: 1237, column: 19, scope: !2103)
!2107 = !DILocation(line: 1238, column: 14, scope: !2103)
!2108 = !DILocation(line: 1238, column: 26, scope: !2103)
!2109 = !{!619, !489, i64 176}
!2110 = !DILocation(line: 1239, column: 7, scope: !2103)
!2111 = !DILocation(line: 1242, column: 12, scope: !1931)
!2112 = !DILocation(line: 1242, column: 17, scope: !1931)
!2113 = !DILocation(line: 1245, column: 32, scope: !1931)
!2114 = !{!619, !447, i64 120}
!2115 = !DILocation(line: 1245, column: 35, scope: !1931)
!2116 = !DILocation(line: 1245, column: 48, scope: !1931)
!2117 = !{!619, !447, i64 122}
!2118 = !DILocation(line: 1245, column: 41, scope: !1931)
!2119 = !DILocation(line: 1245, column: 12, scope: !1931)
!2120 = !DILocation(line: 1245, column: 16, scope: !1931)
!2121 = !{!619, !447, i64 124}
!2122 = !DILocation(line: 1230, column: 21, scope: !1931)
!2123 = !DILocation(line: 1251, column: 12, scope: !1931)
!2124 = !DILocation(line: 1251, column: 20, scope: !1931)
!2125 = !DILocation(line: 1252, column: 20, scope: !1931)
!2126 = !DILocation(line: 1257, column: 23, scope: !1938)
!2127 = !DILocation(line: 1257, column: 13, scope: !1939)
!2128 = !DILocation(line: 1260, column: 38, scope: !1937)
!2129 = !DILocation(line: 1260, column: 26, scope: !1937)
!2130 = !DILocation(line: 1262, column: 22, scope: !1937)
!2131 = !DILocation(line: 1260, column: 16, scope: !1937)
!2132 = !DILocation(line: 1258, column: 25, scope: !1937)
!2133 = !DILocation(line: 1263, column: 11, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2135, file: !3, line: 1263, column: 11)
!2135 = distinct !DILexicalBlock(scope: !1937, file: !3, line: 1263, column: 11)
!2136 = !DILocation(line: 1265, column: 9, scope: !1937)
!2137 = !DILocation(line: 1267, column: 11, scope: !2138)
!2138 = distinct !DILexicalBlock(scope: !2139, file: !3, line: 1267, column: 11)
!2139 = distinct !DILexicalBlock(scope: !2140, file: !3, line: 1267, column: 11)
!2140 = distinct !DILexicalBlock(scope: !1938, file: !3, line: 1265, column: 16)
!2141 = !DILocation(line: 1267, column: 11, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2138, file: !3, line: 1267, column: 11)
!2143 = !DILocation(line: 1268, column: 32, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2140, file: !3, line: 1268, column: 15)
!2145 = !DILocation(line: 1268, column: 15, scope: !2140)
!2146 = !DILocation(line: 1269, column: 65, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2144, file: !3, line: 1268, column: 46)
!2148 = !DILocation(line: 1269, column: 30, scope: !2147)
!2149 = !DILocation(line: 1270, column: 13, scope: !2150)
!2150 = distinct !DILexicalBlock(scope: !2151, file: !3, line: 1270, column: 13)
!2151 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 1270, column: 13)
!2152 = !DILocation(line: 0, scope: !2134)
!2153 = !DILocation(line: 0, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2150, file: !3, line: 1270, column: 13)
!2155 = !DILocation(line: 1284, column: 56, scope: !1931)
!2156 = !DILocation(line: 1284, column: 81, scope: !1931)
!2157 = !DILocation(line: 1284, column: 22, scope: !1931)
!2158 = !DILocation(line: 1284, column: 20, scope: !1931)
!2159 = !DILocation(line: 1291, column: 55, scope: !1931)
!2160 = !DILocation(line: 1291, column: 21, scope: !1931)
!2161 = !DILocation(line: 1291, column: 19, scope: !1931)
!2162 = !DILocation(line: 1295, column: 16, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !1931, file: !3, line: 1295, column: 11)
!2164 = !DILocation(line: 1295, column: 24, scope: !2163)
!2165 = !DILocation(line: 0, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2163, file: !3, line: 1297, column: 14)
!2167 = !DILocation(line: 1297, column: 7, scope: !2168)
!2168 = distinct !DILexicalBlock(scope: !2163, file: !3, line: 1295, column: 33)
!2169 = !DILocation(line: 0, scope: !2168)
!2170 = !DILocation(line: 1301, column: 12, scope: !1931)
!2171 = !DILocation(line: 1301, column: 20, scope: !1931)
!2172 = !{!619, !448, i64 84}
!2173 = !DILocation(line: 1304, column: 23, scope: !2174)
!2174 = distinct !DILexicalBlock(scope: !1931, file: !3, line: 1304, column: 11)
!2175 = !DILocation(line: 1304, column: 11, scope: !1931)
!2176 = !DILocation(line: 1305, column: 14, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !2174, file: !3, line: 1304, column: 32)
!2178 = !DILocation(line: 1305, column: 30, scope: !2177)
!2179 = !{!619, !447, i64 174}
!2180 = !DILocation(line: 1306, column: 7, scope: !2177)
!2181 = !DILocation(line: 1310, column: 11, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !1931, file: !3, line: 1310, column: 11)
!2183 = !{!467, !456, i64 24}
!2184 = !DILocation(line: 1310, column: 11, scope: !1931)
!2185 = !DILocation(line: 1312, column: 9, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !2182, file: !3, line: 1310, column: 31)
!2187 = !DILocation(line: 1313, column: 7, scope: !2186)
!2188 = !DILocation(line: 1316, column: 43, scope: !1931)
!2189 = !{!619, !489, i64 168}
!2190 = !DILocation(line: 1316, column: 53, scope: !1931)
!2191 = !DILocation(line: 1316, column: 51, scope: !1931)
!2192 = !DILocation(line: 1316, column: 20, scope: !1931)
!2193 = !DILocation(line: 1318, column: 16, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !1931, file: !3, line: 1318, column: 11)
!2195 = !DILocation(line: 1318, column: 22, scope: !2194)
!2196 = !DILocation(line: 1318, column: 11, scope: !1931)
!2197 = !DILocation(line: 1323, column: 18, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 1323, column: 13)
!2199 = distinct !DILexicalBlock(scope: !2194, file: !3, line: 1318, column: 32)
!2200 = !DILocation(line: 1323, column: 26, scope: !2198)
!2201 = !DILocation(line: 1323, column: 13, scope: !2199)
!2202 = !DILocation(line: 1324, column: 21, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !3, line: 1324, column: 15)
!2204 = distinct !DILexicalBlock(scope: !2198, file: !3, line: 1323, column: 35)
!2205 = !DILocation(line: 1324, column: 28, scope: !2203)
!2206 = !DILocation(line: 1324, column: 37, scope: !2203)
!2207 = !DILocation(line: 1325, column: 16, scope: !2203)
!2208 = !{!619, !489, i64 140}
!2209 = !DILocation(line: 1324, column: 15, scope: !2204)
!2210 = !DILocation(line: 1326, column: 13, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 1326, column: 13)
!2212 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 1325, column: 84)
!2213 = !DILocation(line: 1327, column: 11, scope: !2212)
!2214 = !DILocation(line: 1328, column: 20, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2198, file: !3, line: 1328, column: 20)
!2216 = !DILocation(line: 1328, column: 20, scope: !2198)
!2217 = !DILocation(line: 1329, column: 11, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2219, file: !3, line: 1329, column: 11)
!2219 = distinct !DILexicalBlock(scope: !2215, file: !3, line: 1328, column: 88)
!2220 = !DILocation(line: 1330, column: 9, scope: !2219)
!2221 = !DILocation(line: 1335, column: 7, scope: !2222)
!2222 = distinct !DILexicalBlock(scope: !1932, file: !3, line: 1333, column: 12)
!2223 = !DILocation(line: 1344, column: 14, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !1934, file: !3, line: 1344, column: 9)
!2225 = !{!619, !489, i64 112}
!2226 = !DILocation(line: 1344, column: 9, scope: !2224)
!2227 = !DILocation(line: 1344, column: 21, scope: !2224)
!2228 = !DILocation(line: 1344, column: 24, scope: !2224)
!2229 = !{!619, !489, i64 116}
!2230 = !DILocation(line: 1344, column: 9, scope: !1934)
!2231 = !DILocation(line: 1347, column: 19, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 1344, column: 55)
!2233 = !DILocation(line: 1347, column: 29, scope: !2232)
!2234 = !DILocation(line: 1353, column: 29, scope: !2232)
!2235 = !DILocation(line: 1353, column: 32, scope: !2232)
!2236 = !DILocation(line: 1353, column: 21, scope: !2232)
!2237 = !DILocation(line: 1354, column: 35, scope: !2232)
!2238 = !DILocation(line: 1354, column: 17, scope: !2232)
!2239 = !DILocation(line: 1354, column: 15, scope: !2232)
!2240 = !DILocation(line: 1355, column: 13, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2232, file: !3, line: 1355, column: 11)
!2242 = !DILocation(line: 1356, column: 21, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2241, file: !3, line: 1355, column: 18)
!2244 = !DILocation(line: 1355, column: 11, scope: !2232)
!2245 = !DILocation(line: 1358, column: 29, scope: !2232)
!2246 = !DILocation(line: 1358, column: 24, scope: !2232)
!2247 = !DILocation(line: 1358, column: 32, scope: !2232)
!2248 = !DILocation(line: 1358, column: 21, scope: !2232)
!2249 = !DILocation(line: 1359, column: 17, scope: !2232)
!2250 = !DILocation(line: 1359, column: 15, scope: !2232)
!2251 = !DILocation(line: 1360, column: 35, scope: !2232)
!2252 = !DILocation(line: 1360, column: 41, scope: !2232)
!2253 = !DILocation(line: 1360, column: 12, scope: !2232)
!2254 = !DILocation(line: 1360, column: 16, scope: !2232)
!2255 = !DILocation(line: 1365, column: 19, scope: !2232)
!2256 = !DILocation(line: 1366, column: 5, scope: !2232)
!2257 = !DILocation(line: 1373, column: 8, scope: !1946)
!2258 = !DILocation(line: 1373, column: 15, scope: !1946)
!2259 = !DILocation(line: 1373, column: 20, scope: !1946)
!2260 = !DILocation(line: 1373, column: 29, scope: !1946)
!2261 = !DILocation(line: 1373, column: 35, scope: !1946)
!2262 = !DILocation(line: 1373, column: 7, scope: !1924)
!2263 = !DILocation(line: 1404, column: 9, scope: !1944)
!2264 = !DILocation(line: 1404, column: 9, scope: !1945)
!2265 = !DILocation(line: 1425, column: 30, scope: !1943)
!2266 = !DILocation(line: 1425, column: 20, scope: !1943)
!2267 = !DILocation(line: 1426, column: 34, scope: !1943)
!2268 = !DILocation(line: 1426, column: 13, scope: !1943)
!2269 = !DILocation(line: 1428, column: 7, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2271, file: !3, line: 1428, column: 7)
!2271 = distinct !DILexicalBlock(scope: !1943, file: !3, line: 1428, column: 7)
!2272 = !DILocation(line: 1428, column: 7, scope: !2271)
!2273 = !DILocation(line: 1428, column: 7, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2275, file: !3, line: 1428, column: 7)
!2275 = distinct !DILexicalBlock(scope: !2270, file: !3, line: 1428, column: 7)
!2276 = !DILocation(line: 1428, column: 7, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2278, file: !3, line: 1428, column: 7)
!2278 = distinct !DILexicalBlock(scope: !2279, file: !3, line: 1428, column: 7)
!2279 = distinct !DILexicalBlock(scope: !2274, file: !3, line: 1428, column: 7)
!2280 = !DILocation(line: 1429, column: 7, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2282, file: !3, line: 1429, column: 7)
!2282 = distinct !DILexicalBlock(scope: !1943, file: !3, line: 1429, column: 7)
!2283 = !DILocation(line: 1429, column: 7, scope: !2282)
!2284 = !DILocation(line: 1429, column: 7, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 1429, column: 7)
!2286 = distinct !DILexicalBlock(scope: !2281, file: !3, line: 1429, column: 7)
!2287 = !DILocation(line: 1429, column: 7, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2289, file: !3, line: 1429, column: 7)
!2289 = distinct !DILexicalBlock(scope: !2290, file: !3, line: 1429, column: 7)
!2290 = distinct !DILexicalBlock(scope: !2285, file: !3, line: 1429, column: 7)
!2291 = !DILocation(line: 1431, column: 7, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 1431, column: 7)
!2293 = distinct !DILexicalBlock(scope: !1943, file: !3, line: 1431, column: 7)
!2294 = !DILocation(line: 1431, column: 7, scope: !2293)
!2295 = !DILocation(line: 1431, column: 7, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2297, file: !3, line: 1431, column: 7)
!2297 = distinct !DILexicalBlock(scope: !2292, file: !3, line: 1431, column: 7)
!2298 = !DILocation(line: 1431, column: 7, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2300, file: !3, line: 1431, column: 7)
!2300 = distinct !DILexicalBlock(scope: !2301, file: !3, line: 1431, column: 7)
!2301 = distinct !DILexicalBlock(scope: !2296, file: !3, line: 1431, column: 7)
!2302 = !DILocation(line: 1432, column: 17, scope: !1943)
!2303 = !DILocation(line: 1433, column: 21, scope: !1943)
!2304 = !DILocation(line: 1427, column: 13, scope: !1943)
!2305 = !DILocation(line: 1434, column: 17, scope: !1943)
!2306 = !DILocation(line: 1434, column: 14, scope: !1943)
!2307 = !DILocation(line: 1434, column: 21, scope: !1943)
!2308 = !DILocation(line: 1434, column: 7, scope: !1943)
!2309 = !DILocation(line: 1435, column: 13, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !1943, file: !3, line: 1434, column: 28)
!2311 = !DILocation(line: 1437, column: 12, scope: !2310)
!2312 = !DILocation(line: 1437, column: 20, scope: !2310)
!2313 = !DILocation(line: 1438, column: 16, scope: !2310)
!2314 = !DILocation(line: 1439, column: 16, scope: !2310)
!2315 = !DILocation(line: 1434, column: 23, scope: !1943)
!2316 = distinct !{!2316, !2308, !2317}
!2317 = !DILocation(line: 1440, column: 7, scope: !1943)
!2318 = !DILocation(line: 0, scope: !2310)
!2319 = !DILocation(line: 1442, column: 29, scope: !1943)
!2320 = !DILocation(line: 1442, column: 7, scope: !1943)
!2321 = !DILocation(line: 1443, column: 42, scope: !1943)
!2322 = !DILocation(line: 1443, column: 35, scope: !1943)
!2323 = !DILocation(line: 1443, column: 13, scope: !1943)
!2324 = !DILocation(line: 1443, column: 21, scope: !1943)
!2325 = !DILocation(line: 1443, column: 27, scope: !1943)
!2326 = !DILocation(line: 1444, column: 5, scope: !1943)
!2327 = !DILocation(line: 1445, column: 11, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1445, column: 11)
!2329 = distinct !DILexicalBlock(scope: !1944, file: !3, line: 1444, column: 12)
!2330 = !DILocation(line: 1445, column: 11, scope: !2329)
!2331 = !DILocation(line: 1450, column: 9, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2333, file: !3, line: 1450, column: 9)
!2333 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 1445, column: 44)
!2334 = !DILocation(line: 1457, column: 9, scope: !1959)
!2335 = !DILocation(line: 1457, column: 9, scope: !1945)
!2336 = !DILocation(line: 1459, column: 24, scope: !1957)
!2337 = !DILocation(line: 1459, column: 11, scope: !1958)
!2338 = !DILocation(line: 1463, column: 18, scope: !1956)
!2339 = !DILocation(line: 1463, column: 16, scope: !1956)
!2340 = !DILocation(line: 1465, column: 13, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 1465, column: 13)
!2342 = !DILocation(line: 1465, column: 27, scope: !2341)
!2343 = !DILocation(line: 1465, column: 20, scope: !2341)
!2344 = !DILocation(line: 1465, column: 13, scope: !1956)
!2345 = !DILocation(line: 1470, column: 15, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 1470, column: 15)
!2347 = distinct !DILexicalBlock(scope: !2341, file: !3, line: 1465, column: 36)
!2348 = !DILocation(line: 1470, column: 40, scope: !2346)
!2349 = !DILocation(line: 1470, column: 15, scope: !2347)
!2350 = !DILocation(line: 1473, column: 13, scope: !2351)
!2351 = distinct !DILexicalBlock(scope: !2346, file: !3, line: 1470, column: 51)
!2352 = !DILocation(line: 1474, column: 11, scope: !2351)
!2353 = !DILocation(line: 1476, column: 11, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 1476, column: 11)
!2355 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 1476, column: 11)
!2356 = !DILocation(line: 1476, column: 11, scope: !2355)
!2357 = !DILocation(line: 1476, column: 11, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !2359, file: !3, line: 1476, column: 11)
!2359 = distinct !DILexicalBlock(scope: !2354, file: !3, line: 1476, column: 11)
!2360 = !DILocation(line: 1476, column: 11, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2362, file: !3, line: 1476, column: 11)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 1476, column: 11)
!2363 = distinct !DILexicalBlock(scope: !2358, file: !3, line: 1476, column: 11)
!2364 = !DILocation(line: 1477, column: 23, scope: !2347)
!2365 = !DILocation(line: 1477, column: 21, scope: !2347)
!2366 = !DILocation(line: 1478, column: 15, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 1478, column: 15)
!2368 = !DILocation(line: 1478, column: 40, scope: !2367)
!2369 = !DILocation(line: 0, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2367, file: !3, line: 1478, column: 51)
!2371 = !DILocation(line: 1478, column: 15, scope: !2347)
!2372 = !DILocation(line: 1479, column: 23, scope: !2370)
!2373 = !DILocation(line: 1480, column: 11, scope: !2370)
!2374 = !DILocation(line: 1481, column: 39, scope: !2347)
!2375 = !DILocation(line: 1481, column: 30, scope: !2347)
!2376 = !DILocation(line: 1481, column: 11, scope: !2347)
!2377 = !DILocation(line: 1482, column: 20, scope: !2347)
!2378 = !DILocation(line: 1482, column: 18, scope: !2347)
!2379 = !DILocation(line: 1483, column: 11, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 1483, column: 11)
!2381 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 1483, column: 11)
!2382 = !DILocation(line: 1483, column: 11, scope: !2381)
!2383 = !DILocation(line: 1483, column: 11, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 1483, column: 11)
!2385 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 1483, column: 11)
!2386 = !DILocation(line: 1483, column: 11, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2388, file: !3, line: 1483, column: 11)
!2388 = distinct !DILexicalBlock(scope: !2389, file: !3, line: 1483, column: 11)
!2389 = distinct !DILexicalBlock(scope: !2384, file: !3, line: 1483, column: 11)
!2390 = !DILocation(line: 1490, column: 18, scope: !1955)
!2391 = !{!619, !456, i64 200}
!2392 = !DILocation(line: 1490, column: 24, scope: !1955)
!2393 = !DILocation(line: 1490, column: 13, scope: !1956)
!2394 = !DILocation(line: 1491, column: 15, scope: !1953)
!2395 = !DILocation(line: 1491, column: 40, scope: !1953)
!2396 = !DILocation(line: 0, scope: !1952)
!2397 = !DILocation(line: 1491, column: 15, scope: !1954)
!2398 = !DILocation(line: 1497, column: 13, scope: !1952)
!2399 = !DILocation(line: 1498, column: 31, scope: !1951)
!2400 = !DILocation(line: 1499, column: 40, scope: !1951)
!2401 = !DILocation(line: 1499, column: 26, scope: !1951)
!2402 = !DILocation(line: 1500, column: 15, scope: !1951)
!2403 = !DILocation(line: 1497, column: 25, scope: !1952)
!2404 = !DILocation(line: 1497, column: 31, scope: !1952)
!2405 = distinct !{!2405, !2398, !2406}
!2406 = !DILocation(line: 1501, column: 13, scope: !1952)
!2407 = !DILocation(line: 1503, column: 29, scope: !1961)
!2408 = !DILocation(line: 1506, column: 25, scope: !1961)
!2409 = !DILocation(line: 1507, column: 20, scope: !1961)
!2410 = !DILocation(line: 1506, column: 13, scope: !1961)
!2411 = !DILocation(line: 1511, column: 20, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !1963, file: !3, line: 1511, column: 19)
!2413 = !DILocation(line: 1511, column: 45, scope: !2412)
!2414 = !DILocation(line: 1511, column: 56, scope: !2412)
!2415 = !DILocation(line: 1511, column: 61, scope: !2412)
!2416 = !DILocation(line: 1512, column: 20, scope: !2412)
!2417 = !DILocation(line: 1512, column: 45, scope: !2412)
!2418 = !DILocation(line: 1512, column: 56, scope: !2412)
!2419 = !DILocation(line: 1511, column: 19, scope: !1963)
!2420 = !DILocation(line: 1513, column: 17, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2412, file: !3, line: 1512, column: 62)
!2422 = !DILocation(line: 1514, column: 26, scope: !2421)
!2423 = !DILocation(line: 1514, column: 24, scope: !2421)
!2424 = !DILocation(line: 1515, column: 15, scope: !2421)
!2425 = !DILocation(line: 1509, column: 31, scope: !1963)
!2426 = !DILocation(line: 1517, column: 28, scope: !1963)
!2427 = !DILocation(line: 1518, column: 15, scope: !1963)
!2428 = !DILocation(line: 1506, column: 20, scope: !1961)
!2429 = distinct !{!2429, !2410, !2430}
!2430 = !DILocation(line: 1519, column: 13, scope: !1961)
!2431 = !DILocation(line: 1523, column: 17, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !1961, file: !3, line: 1522, column: 17)
!2433 = !DILocation(line: 1522, column: 17, scope: !1961)
!2434 = !DILocation(line: 1526, column: 55, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2432, file: !3, line: 1524, column: 50)
!2436 = !DILocation(line: 1526, column: 27, scope: !2435)
!2437 = !DILocation(line: 1526, column: 25, scope: !2435)
!2438 = !DILocation(line: 1527, column: 19, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1527, column: 19)
!2440 = !DILocation(line: 1527, column: 44, scope: !2439)
!2441 = !DILocation(line: 0, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2439, file: !3, line: 1527, column: 55)
!2443 = !DILocation(line: 1527, column: 19, scope: !2435)
!2444 = !DILocation(line: 1528, column: 27, scope: !2442)
!2445 = !DILocation(line: 1529, column: 15, scope: !2442)
!2446 = !DILocation(line: 1530, column: 43, scope: !2435)
!2447 = !DILocation(line: 1530, column: 34, scope: !2435)
!2448 = !DILocation(line: 1530, column: 15, scope: !2435)
!2449 = !DILocation(line: 1531, column: 24, scope: !2435)
!2450 = !DILocation(line: 1531, column: 22, scope: !2435)
!2451 = !DILocation(line: 1532, column: 15, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 1532, column: 15)
!2453 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1532, column: 15)
!2454 = !DILocation(line: 1532, column: 15, scope: !2453)
!2455 = !DILocation(line: 1532, column: 15, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 1532, column: 15)
!2457 = distinct !DILexicalBlock(scope: !2452, file: !3, line: 1532, column: 15)
!2458 = !DILocation(line: 1532, column: 15, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2460, file: !3, line: 1532, column: 15)
!2460 = distinct !DILexicalBlock(scope: !2461, file: !3, line: 1532, column: 15)
!2461 = distinct !DILexicalBlock(scope: !2456, file: !3, line: 1532, column: 15)
!2462 = !DILocation(line: 1535, column: 24, scope: !1961)
!2463 = !DILocation(line: 1540, column: 24, scope: !1956)
!2464 = !DILocation(line: 1540, column: 32, scope: !1956)
!2465 = !DILocation(line: 1540, column: 30, scope: !1956)
!2466 = !DILocation(line: 1540, column: 22, scope: !1956)
!2467 = !DILocation(line: 1543, column: 9, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 1543, column: 9)
!2469 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 1543, column: 9)
!2470 = !DILocation(line: 1543, column: 9, scope: !2469)
!2471 = !DILocation(line: 1543, column: 9, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 1543, column: 9)
!2473 = distinct !DILexicalBlock(scope: !2468, file: !3, line: 1543, column: 9)
!2474 = !DILocation(line: 1543, column: 9, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !3, line: 1543, column: 9)
!2476 = distinct !DILexicalBlock(scope: !2477, file: !3, line: 1543, column: 9)
!2477 = distinct !DILexicalBlock(scope: !2472, file: !3, line: 1543, column: 9)
!2478 = !DILocation(line: 1544, column: 22, scope: !1956)
!2479 = !DILocation(line: 1546, column: 9, scope: !1956)
!2480 = !DILocation(line: 1557, column: 19, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 1557, column: 13)
!2482 = !DILocation(line: 1557, column: 22, scope: !2481)
!2483 = !DILocation(line: 1557, column: 30, scope: !2481)
!2484 = !DILocation(line: 1557, column: 13, scope: !1956)
!2485 = !DILocation(line: 1558, column: 21, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2481, file: !3, line: 1557, column: 35)
!2487 = !DILocation(line: 1562, column: 19, scope: !2486)
!2488 = !DILocation(line: 1563, column: 9, scope: !2486)
!2489 = !DILocation(line: 1564, column: 13, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 1564, column: 13)
!2491 = !DILocation(line: 1564, column: 38, scope: !2490)
!2492 = !DILocation(line: 1564, column: 13, scope: !1956)
!2493 = !DILocation(line: 1566, column: 22, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2490, file: !3, line: 1564, column: 49)
!2495 = !DILocation(line: 1567, column: 9, scope: !2494)
!2496 = !DILocation(line: 1572, column: 21, scope: !1956)
!2497 = !DILocation(line: 1572, column: 27, scope: !1956)
!2498 = !DILocation(line: 1572, column: 35, scope: !1956)
!2499 = !DILocation(line: 1573, column: 28, scope: !1956)
!2500 = !DILocation(line: 1573, column: 36, scope: !1956)
!2501 = !DILocation(line: 1573, column: 50, scope: !1956)
!2502 = !DILocation(line: 1573, column: 42, scope: !1956)
!2503 = !DILocation(line: 1572, column: 9, scope: !1956)
!2504 = !DILocation(line: 1575, column: 27, scope: !1965)
!2505 = !DILocation(line: 1576, column: 17, scope: !1965)
!2506 = !DILocation(line: 1578, column: 27, scope: !1965)
!2507 = !DILocation(line: 1578, column: 24, scope: !1965)
!2508 = !DILocation(line: 1579, column: 11, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 1579, column: 11)
!2510 = distinct !DILexicalBlock(scope: !1965, file: !3, line: 1579, column: 11)
!2511 = !DILocation(line: 1579, column: 11, scope: !2510)
!2512 = !DILocation(line: 1579, column: 11, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2514, file: !3, line: 1579, column: 11)
!2514 = distinct !DILexicalBlock(scope: !2509, file: !3, line: 1579, column: 11)
!2515 = !DILocation(line: 1579, column: 11, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2517, file: !3, line: 1579, column: 11)
!2517 = distinct !DILexicalBlock(scope: !2518, file: !3, line: 1579, column: 11)
!2518 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 1579, column: 11)
!2519 = !DILocation(line: 1581, column: 27, scope: !1965)
!2520 = !DILocation(line: 1581, column: 24, scope: !1965)
!2521 = !DILocation(line: 1583, column: 11, scope: !1965)
!2522 = !DILocation(line: 1585, column: 21, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !1965, file: !3, line: 1585, column: 15)
!2524 = !DILocation(line: 1585, column: 24, scope: !2523)
!2525 = !DILocation(line: 1585, column: 32, scope: !2523)
!2526 = !DILocation(line: 1585, column: 15, scope: !1965)
!2527 = !DILocation(line: 1591, column: 17, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2529, file: !3, line: 1591, column: 17)
!2529 = distinct !DILexicalBlock(scope: !2523, file: !3, line: 1585, column: 37)
!2530 = !DILocation(line: 1591, column: 17, scope: !2529)
!2531 = !DILocation(line: 1592, column: 15, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 1591, column: 28)
!2533 = !DILocation(line: 1593, column: 13, scope: !2532)
!2534 = !DILocation(line: 1594, column: 25, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 1593, column: 20)
!2536 = !DILocation(line: 1596, column: 21, scope: !2529)
!2537 = !DILocation(line: 1597, column: 11, scope: !2529)
!2538 = !DILocation(line: 1598, column: 15, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !1965, file: !3, line: 1598, column: 15)
!2540 = !DILocation(line: 1598, column: 40, scope: !2539)
!2541 = !DILocation(line: 1598, column: 15, scope: !1965)
!2542 = !DILocation(line: 1600, column: 24, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2539, file: !3, line: 1598, column: 51)
!2544 = !DILocation(line: 1601, column: 22, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2543, file: !3, line: 1601, column: 17)
!2546 = !DILocation(line: 1601, column: 28, scope: !2545)
!2547 = !DILocation(line: 1601, column: 17, scope: !2543)
!2548 = !DILocation(line: 1602, column: 26, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2545, file: !3, line: 1601, column: 44)
!2550 = !DILocation(line: 1603, column: 13, scope: !2549)
!2551 = !DILocation(line: 1606, column: 30, scope: !1965)
!2552 = !DILocation(line: 1606, column: 22, scope: !1965)
!2553 = !DILocation(line: 1607, column: 11, scope: !1965)
!2554 = distinct !{!2554, !2503, !2555}
!2555 = !DILocation(line: 1608, column: 9, scope: !1956)
!2556 = !DILocation(line: 1625, column: 9, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 1625, column: 9)
!2558 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 1625, column: 9)
!2559 = !DILocation(line: 1625, column: 9, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 1625, column: 9)
!2561 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 1625, column: 9)
!2562 = !DILocation(line: 1625, column: 9, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2564, file: !3, line: 1625, column: 9)
!2564 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 1625, column: 9)
!2565 = !DILocation(line: 1625, column: 9, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2564, file: !3, line: 1625, column: 9)
!2567 = !DILocation(line: 1625, column: 9, scope: !2558)
!2568 = !DILocation(line: 1638, column: 13, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 1638, column: 13)
!2570 = !DILocation(line: 1638, column: 13, scope: !1956)
!2571 = !DILocation(line: 1640, column: 11, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 1638, column: 33)
!2573 = !DILocation(line: 1641, column: 9, scope: !2572)
!2574 = !DILocation(line: 1649, column: 18, scope: !1968)
!2575 = !DILocation(line: 1649, column: 24, scope: !1968)
!2576 = !DILocation(line: 1649, column: 13, scope: !1969)
!2577 = !DILocation(line: 1650, column: 24, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !1968, file: !3, line: 1649, column: 33)
!2579 = !DILocation(line: 1650, column: 22, scope: !2578)
!2580 = !DILocation(line: 1658, column: 9, scope: !2578)
!2581 = !DILocation(line: 0, scope: !1977)
!2582 = !DILocation(line: 0, scope: !1984)
!2583 = !DILocation(line: 1676, column: 34, scope: !1967)
!2584 = !DILocation(line: 1676, column: 27, scope: !1967)
!2585 = !DILocation(line: 1677, column: 40, scope: !1977)
!2586 = !DILocation(line: 1677, column: 11, scope: !1978)
!2587 = !DILocation(line: 1678, column: 32, scope: !1975)
!2588 = !DILocation(line: 1678, column: 40, scope: !1975)
!2589 = !DILocation(line: 1678, column: 23, scope: !1975)
!2590 = !DILocation(line: 1678, column: 17, scope: !1976)
!2591 = !DILocation(line: 1683, column: 25, scope: !1973)
!2592 = !DILocation(line: 1683, column: 37, scope: !1973)
!2593 = !DILocation(line: 1683, column: 29, scope: !1973)
!2594 = !DILocation(line: 1683, column: 19, scope: !1974)
!2595 = !DILocation(line: 1687, column: 40, scope: !1972)
!2596 = !DILocation(line: 1687, column: 33, scope: !1972)
!2597 = !DILocation(line: 1688, column: 26, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !1972, file: !3, line: 1688, column: 21)
!2599 = !DILocation(line: 1688, column: 21, scope: !1972)
!2600 = !DILocation(line: 1689, column: 28, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2602, file: !3, line: 1689, column: 23)
!2602 = distinct !DILexicalBlock(scope: !2598, file: !3, line: 1688, column: 35)
!2603 = !DILocation(line: 1690, column: 27, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 1689, column: 37)
!2605 = !DILocation(line: 1689, column: 23, scope: !2602)
!2606 = !DILocation(line: 0, scope: !2604)
!2607 = !DILocation(line: 1694, column: 19, scope: !2602)
!2608 = !DILocation(line: 1695, column: 17, scope: !2602)
!2609 = !DILocation(line: 1704, column: 24, scope: !1983)
!2610 = !DILocation(line: 1704, column: 19, scope: !1984)
!2611 = !DILocation(line: 1705, column: 21, scope: !1981)
!2612 = !DILocation(line: 1705, column: 21, scope: !1982)
!2613 = !DILocation(line: 1710, column: 42, scope: !1980)
!2614 = !DILocation(line: 1710, column: 35, scope: !1980)
!2615 = !DILocation(line: 1711, column: 28, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !1980, file: !3, line: 1711, column: 23)
!2617 = !DILocation(line: 1711, column: 23, scope: !1980)
!2618 = !DILocation(line: 1712, column: 32, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2616, file: !3, line: 1711, column: 37)
!2620 = !DILocation(line: 1713, column: 21, scope: !2619)
!2621 = !DILocation(line: 1714, column: 19, scope: !2619)
!2622 = !DILocation(line: 1720, column: 21, scope: !1987)
!2623 = !DILocation(line: 1726, column: 42, scope: !1986)
!2624 = !DILocation(line: 1726, column: 35, scope: !1986)
!2625 = !DILocation(line: 1727, column: 28, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !1986, file: !3, line: 1727, column: 23)
!2627 = !DILocation(line: 1727, column: 23, scope: !1986)
!2628 = !DILocation(line: 1728, column: 25, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2630, file: !3, line: 1728, column: 25)
!2630 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 1727, column: 37)
!2631 = !DILocation(line: 1728, column: 25, scope: !2630)
!2632 = !DILocation(line: 1730, column: 49, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 1728, column: 77)
!2634 = !DILocation(line: 1730, column: 35, scope: !2633)
!2635 = !DILocation(line: 1730, column: 33, scope: !2633)
!2636 = !DILocation(line: 1731, column: 42, scope: !2633)
!2637 = !DILocation(line: 1731, column: 23, scope: !2633)
!2638 = !DILocation(line: 1732, column: 21, scope: !2633)
!2639 = !DILocation(line: 1733, column: 27, scope: !2630)
!2640 = !DILocation(line: 1733, column: 32, scope: !2630)
!2641 = !DILocation(line: 1734, column: 21, scope: !2630)
!2642 = !DILocation(line: 1735, column: 19, scope: !2630)
!2643 = !DILocation(line: 1756, column: 25, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !1984, file: !3, line: 1756, column: 19)
!2645 = !DILocation(line: 1756, column: 30, scope: !2644)
!2646 = !DILocation(line: 1757, column: 19, scope: !2644)
!2647 = !DILocation(line: 1756, column: 38, scope: !2644)
!2648 = distinct !{!2648, !2586, !2649}
!2649 = !DILocation(line: 1791, column: 11, scope: !1978)
!2650 = !DILocation(line: 1758, column: 21, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 1758, column: 21)
!2652 = distinct !DILexicalBlock(scope: !2644, file: !3, line: 1757, column: 59)
!2653 = !DILocation(line: 1758, column: 46, scope: !2651)
!2654 = !DILocation(line: 1758, column: 21, scope: !2652)
!2655 = !DILocation(line: 1762, column: 30, scope: !2652)
!2656 = !DILocation(line: 1762, column: 28, scope: !2652)
!2657 = !DILocation(line: 1763, column: 32, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 1763, column: 21)
!2659 = !DILocation(line: 1763, column: 21, scope: !2652)
!2660 = !DILocation(line: 1764, column: 23, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 1764, column: 23)
!2662 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1763, column: 41)
!2663 = !DILocation(line: 1764, column: 23, scope: !2662)
!2664 = !DILocation(line: 1766, column: 47, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 1764, column: 75)
!2666 = !DILocation(line: 1766, column: 33, scope: !2665)
!2667 = !DILocation(line: 1766, column: 31, scope: !2665)
!2668 = !DILocation(line: 1767, column: 40, scope: !2665)
!2669 = !DILocation(line: 1767, column: 21, scope: !2665)
!2670 = !DILocation(line: 1770, column: 23, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 1770, column: 23)
!2672 = !DILocation(line: 1768, column: 19, scope: !2665)
!2673 = !DILocation(line: 1770, column: 23, scope: !2662)
!2674 = !DILocation(line: 1775, column: 25, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 1775, column: 25)
!2676 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 1770, column: 94)
!2677 = !DILocation(line: 1775, column: 56, scope: !2675)
!2678 = !DILocation(line: 0, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2675, file: !3, line: 1775, column: 67)
!2680 = !DILocation(line: 1775, column: 25, scope: !2676)
!2681 = !DILocation(line: 1778, column: 23, scope: !2679)
!2682 = !DILocation(line: 1779, column: 21, scope: !2679)
!2683 = !DILocation(line: 1781, column: 27, scope: !2676)
!2684 = !DILocation(line: 1781, column: 52, scope: !2676)
!2685 = !DILocation(line: 1781, column: 67, scope: !2676)
!2686 = !DILocation(line: 1781, column: 60, scope: !2676)
!2687 = !DILocation(line: 1781, column: 77, scope: !2676)
!2688 = !DILocation(line: 1781, column: 75, scope: !2676)
!2689 = !DILocation(line: 1781, column: 39, scope: !2676)
!2690 = !DILocation(line: 1781, column: 33, scope: !2676)
!2691 = !DILocation(line: 1781, column: 37, scope: !2676)
!2692 = !DILocation(line: 1782, column: 46, scope: !2676)
!2693 = !DILocation(line: 1782, column: 21, scope: !2676)
!2694 = !DILocation(line: 1783, column: 30, scope: !2676)
!2695 = !DILocation(line: 1783, column: 28, scope: !2676)
!2696 = !DILocation(line: 1784, column: 21, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2698, file: !3, line: 1784, column: 21)
!2698 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 1784, column: 21)
!2699 = !DILocation(line: 1784, column: 21, scope: !2698)
!2700 = !DILocation(line: 1784, column: 21, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1784, column: 21)
!2702 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 1784, column: 21)
!2703 = !DILocation(line: 1784, column: 21, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 1784, column: 21)
!2705 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 1784, column: 21)
!2706 = distinct !DILexicalBlock(scope: !2701, file: !3, line: 1784, column: 21)
!2707 = !DILocation(line: 1872, column: 9, scope: !1969)
!2708 = !DILocation(line: 1876, column: 7, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !1959, file: !3, line: 1874, column: 12)
!2710 = !DILocation(line: 1881, column: 10, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 1881, column: 9)
!2712 = distinct !DILexicalBlock(scope: !1946, file: !3, line: 1878, column: 10)
!2713 = !DILocation(line: 1881, column: 9, scope: !2712)
!2714 = !DILocation(line: 1882, column: 7, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2716, file: !3, line: 1882, column: 7)
!2716 = distinct !DILexicalBlock(scope: !2711, file: !3, line: 1881, column: 81)
!2717 = !DILocation(line: 1883, column: 5, scope: !2716)
!2718 = !DILocation(line: 1885, column: 1, scope: !1924)
!2719 = distinct !DISubprogram(name: "tcp_free_acked_segments", scope: !3, file: !3, line: 1088, type: !2720, isLocal: true, isDefinition: true, scopeLine: 1090, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2722)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!166, !88, !166, !295, !166}
!2722 = !{!2723, !2724, !2725, !2726, !2727, !2728}
!2723 = !DILocalVariable(name: "pcb", arg: 1, scope: !2719, file: !3, line: 1088, type: !88)
!2724 = !DILocalVariable(name: "seg_list", arg: 2, scope: !2719, file: !3, line: 1088, type: !166)
!2725 = !DILocalVariable(name: "dbg_list_name", arg: 3, scope: !2719, file: !3, line: 1088, type: !295)
!2726 = !DILocalVariable(name: "dbg_other_seg_list", arg: 4, scope: !2719, file: !3, line: 1089, type: !166)
!2727 = !DILocalVariable(name: "next", scope: !2719, file: !3, line: 1091, type: !166)
!2728 = !DILocalVariable(name: "clen", scope: !2719, file: !3, line: 1092, type: !66)
!2729 = !DILocation(line: 1088, column: 41, scope: !2719)
!2730 = !DILocation(line: 1088, column: 62, scope: !2719)
!2731 = !DILocation(line: 1088, column: 84, scope: !2719)
!2732 = !DILocation(line: 1089, column: 41, scope: !2719)
!2733 = !DILocation(line: 1097, column: 19, scope: !2719)
!2734 = !DILocation(line: 1097, column: 27, scope: !2719)
!2735 = !DILocation(line: 1098, column: 10, scope: !2719)
!2736 = !DILocation(line: 1097, column: 3, scope: !2719)
!2737 = !DILocation(line: 1091, column: 19, scope: !2719)
!2738 = !DILocation(line: 1106, column: 26, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 1099, column: 52)
!2740 = !DILocation(line: 1108, column: 28, scope: !2739)
!2741 = !DILocation(line: 1108, column: 12, scope: !2739)
!2742 = !DILocation(line: 1092, column: 9, scope: !2719)
!2743 = !DILocation(line: 1111, column: 5, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2745, file: !3, line: 1111, column: 5)
!2745 = distinct !DILexicalBlock(scope: !2739, file: !3, line: 1111, column: 5)
!2746 = !DILocation(line: 1111, column: 5, scope: !2745)
!2747 = !DILocation(line: 1111, column: 5, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 1111, column: 5)
!2749 = distinct !DILexicalBlock(scope: !2744, file: !3, line: 1111, column: 5)
!2750 = !DILocation(line: 1111, column: 5, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2752, file: !3, line: 1111, column: 5)
!2752 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1111, column: 5)
!2753 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 1111, column: 5)
!2754 = !DILocation(line: 1113, column: 51, scope: !2739)
!2755 = !DILocation(line: 1113, column: 23, scope: !2739)
!2756 = !DILocation(line: 1114, column: 34, scope: !2739)
!2757 = !DILocation(line: 1114, column: 53, scope: !2739)
!2758 = !DILocation(line: 1114, column: 47, scope: !2739)
!2759 = !DILocation(line: 1114, column: 45, scope: !2739)
!2760 = !DILocation(line: 1114, column: 16, scope: !2739)
!2761 = !DILocation(line: 1115, column: 5, scope: !2739)
!2762 = !DILocation(line: 1120, column: 14, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2739, file: !3, line: 1120, column: 9)
!2764 = !DILocation(line: 1120, column: 27, scope: !2763)
!2765 = !DILocation(line: 1121, column: 7, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2767, file: !3, line: 1121, column: 7)
!2767 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 1121, column: 7)
!2768 = distinct !DILexicalBlock(scope: !2763, file: !3, line: 1120, column: 33)
!2769 = !DILocation(line: 1120, column: 9, scope: !2739)
!2770 = !DILocation(line: 1121, column: 7, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2772, file: !3, line: 1121, column: 7)
!2772 = distinct !DILexicalBlock(scope: !2766, file: !3, line: 1121, column: 7)
!2773 = !DILocation(line: 1121, column: 7, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 1121, column: 7)
!2775 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 1121, column: 7)
!2776 = distinct !DILexicalBlock(scope: !2771, file: !3, line: 1121, column: 7)
!2777 = distinct !{!2777, !2736, !2778}
!2778 = !DILocation(line: 1124, column: 3, scope: !2719)
!2779 = !DILocation(line: 1125, column: 3, scope: !2719)
!2780 = distinct !DISubprogram(name: "tcp_oos_insert_segment", scope: !3, file: !3, line: 1051, type: !2781, isLocal: true, isDefinition: true, scopeLine: 1052, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2783)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{null, !166, !166}
!2783 = !{!2784, !2785, !2786}
!2784 = !DILocalVariable(name: "cseg", arg: 1, scope: !2780, file: !3, line: 1051, type: !166)
!2785 = !DILocalVariable(name: "next", arg: 2, scope: !2780, file: !3, line: 1051, type: !166)
!2786 = !DILocalVariable(name: "old_seg", scope: !2780, file: !3, line: 1053, type: !166)
!2787 = !DILocation(line: 1051, column: 40, scope: !2780)
!2788 = !DILocation(line: 1051, column: 62, scope: !2780)
!2789 = !DILocation(line: 1055, column: 3, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1055, column: 3)
!2791 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 1055, column: 3)
!2792 = !DILocation(line: 1055, column: 3, scope: !2791)
!2793 = !DILocation(line: 1055, column: 3, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 1055, column: 3)
!2795 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 1055, column: 3)
!2796 = !DILocation(line: 1055, column: 3, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 1055, column: 3)
!2798 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 1055, column: 3)
!2799 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 1055, column: 3)
!2800 = !DILocation(line: 1057, column: 7, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 1057, column: 7)
!2802 = !DILocation(line: 1057, column: 32, scope: !2801)
!2803 = !DILocation(line: 1057, column: 7, scope: !2780)
!2804 = !DILocation(line: 1064, column: 12, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1061, column: 10)
!2806 = !DILocation(line: 1064, column: 17, scope: !2805)
!2807 = !DILocation(line: 1059, column: 5, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1057, column: 43)
!2809 = !DILocation(line: 1061, column: 3, scope: !2808)
!2810 = !DILocation(line: 1065, column: 12, scope: !2805)
!2811 = !DILocation(line: 1064, column: 5, scope: !2805)
!2812 = !DILocation(line: 1068, column: 11, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2814, file: !3, line: 1068, column: 11)
!2814 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 1066, column: 60)
!2815 = !DILocation(line: 1068, column: 36, scope: !2813)
!2816 = !DILocation(line: 1068, column: 11, scope: !2814)
!2817 = !DILocation(line: 1069, column: 9, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 1068, column: 47)
!2819 = !DILocation(line: 1070, column: 7, scope: !2818)
!2820 = !DILocation(line: 1053, column: 19, scope: !2780)
!2821 = !DILocation(line: 1072, column: 20, scope: !2814)
!2822 = !DILocation(line: 1073, column: 7, scope: !2814)
!2823 = distinct !{!2823, !2811, !2824}
!2824 = !DILocation(line: 1074, column: 5, scope: !2805)
!2825 = !DILocation(line: 1076, column: 9, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 1075, column: 9)
!2827 = !DILocation(line: 1075, column: 9, scope: !2805)
!2828 = !DILocation(line: 1078, column: 47, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2826, file: !3, line: 1076, column: 61)
!2830 = !DILocation(line: 1078, column: 19, scope: !2829)
!2831 = !DILocation(line: 1078, column: 17, scope: !2829)
!2832 = !DILocation(line: 1079, column: 26, scope: !2829)
!2833 = !DILocation(line: 1079, column: 7, scope: !2829)
!2834 = !DILocation(line: 1080, column: 5, scope: !2829)
!2835 = !DILocation(line: 1082, column: 9, scope: !2780)
!2836 = !DILocation(line: 1082, column: 14, scope: !2780)
!2837 = !DILocation(line: 1083, column: 1, scope: !2780)
